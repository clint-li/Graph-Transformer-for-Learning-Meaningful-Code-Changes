private TYPE_1 METHOD_1 ( TYPE_2 req , java.lang.String VAR_1 , java.lang.String path ) { if ( TYPE_3 . METHOD_2 ( path ) ) { return null ; } return TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( path ) ; } } ; ) path ( METHOD_5 . ) VAR_1 ( METHOD_4 . ) ( METHOD_3 . TYPE_4 return } ; null return { ) ) path ( METHOD_2 . TYPE_3 ( if { ) path java.lang.String , VAR_1 java.lang.String , req TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 create ( ) { return new TYPE_1 ( this , null ) ; } } ; ) null , this ( TYPE_1 new return { ) ( create TYPE_1 public 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { return this . VAR_1 ; } } ; VAR_1 . this return { ) ( METHOD_1 > java.lang.String , java.lang.String < java.util.Map public 
private boolean METHOD_1 ( TYPE_1 cfg ) { return VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 return { ) cfg TYPE_1 ( METHOD_1 boolean private 
protected java.lang.String METHOD_1 ( ) { return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return { ) ( METHOD_1 java.lang.String protected 
public TYPE_1 get ( final TYPE_2 . Change change , final TYPE_2 . PatchSet patchSet ) { return get ( change , patchSet , VAR_1 ) ; } } ; ) VAR_1 , patchSet , change ( get return { ) patchSet PatchSet . TYPE_2 final , change Change . TYPE_2 final ( get TYPE_1 public 
public TYPE_1 . Result METHOD_1 ( TYPE_2 git , java.lang.String ref ) throws TYPE_3 { TYPE_4 . METHOD_1 ( git , VAR_1 ) ; return METHOD_2 ( git , ref ) ; } } ; ) ref , git ( METHOD_2 return ; ) VAR_1 , git ( METHOD_1 . TYPE_4 { TYPE_3 throws ) ref java.lang.String , git TYPE_2 ( METHOD_1 Result . TYPE_1 public 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( null , new TYPE_2 ( VAR_2 ) , null , null ) ; } } ; ) null , null , ) VAR_2 ( TYPE_2 new , null ( TYPE_1 new = VAR_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 ctx ) throws TYPE_2 { VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , VAR_2 ) ; } } ; ) VAR_2 , ) VAR_2 ( METHOD_3 ( METHOD_2 . VAR_1 { TYPE_2 throws ) ctx TYPE_1 ( METHOD_1 void protected 
TYPE_1 create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema , java.lang.String base ) ; ; ) base java.lang.String , schema > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( create TYPE_1 
private static < TYPE_1 , TYPE_2 extends TYPE_3 . Key < ? > > TYPE_4 < TYPE_1 , com.google.gwtorm.server.OrmException > METHOD_1 ( ) { return TYPE_5 . METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 . TYPE_5 return { ) ( METHOD_1 > com.google.gwtorm.server.OrmException , TYPE_1 < TYPE_4 > > ? < Key . TYPE_3 extends TYPE_2 , TYPE_1 < static private 
< TYPE_1 > TYPE_2 < TYPE_3 , TYPE_1 > METHOD_1 ( TYPE_3 VAR_1 ) throws TYPE_4 ; ; TYPE_4 throws ) VAR_1 TYPE_3 ( METHOD_1 > TYPE_1 , TYPE_3 < TYPE_2 > TYPE_1 < 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . projects ( ) . name ( STRING_1 ) . create ( ) ; } } ; ) ( create . ) STRING_1 ( name . ) ( projects . VAR_1 { TYPE_1 throws ) ( METHOD_1 void public 
public TYPE_1 delete ( java.lang.String VAR_1 ) throws java.io.IOException { return METHOD_1 ( TYPE_2 . METHOD_2 ( ( ( ( url ) + STRING_1 ) + VAR_1 ) ) ) ; METHOD_3 ( INT_1 [ VAR_2 ] ) ; } } ; ) ] VAR_2 [ INT_1 ( METHOD_3 ; ) ) ) VAR_1 + ) STRING_1 + ) url ( ( ( ( METHOD_2 . TYPE_2 ( METHOD_1 return { java.io.IOException throws ) VAR_1 java.lang.String ( delete TYPE_1 public 
public final native void METHOD_1 ( java.lang.String value ) ; ; ) value java.lang.String ( METHOD_1 void native final public 
protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { return VAR_1 . name ( ) ; } } ; ) ( name . VAR_1 return { ) VAR_1 TYPE_2 final ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , STRING_2 ) ; } } ; ) STRING_2 , null , false , 0 , id ( TYPE_2 new = VAR_1 ; ) ) id + STRING_1 ( ( Key . TYPE_1 new = key { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , changeId ) ; } VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 } ; ) changeId , VAR_2 ( TYPE_2 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) e TYPE_1 ( METHOD_1 void 
public void onSuccess ( final TYPE_1 result ) { VAR_1 = result . config ; if ( ( result . account ) ! = null ) { VAR_2 = result . account ; TYPE_2 . METHOD_1 ( ) ; } METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 } ; ) ( METHOD_1 . TYPE_2 ; account . result = VAR_2 { ) null = ! ) account . result ( ( if ; config . result = VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 class ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; } } ; ) ) ( TYPE_3 new ( METHOD_3 . TYPE_2 ; ) class VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void static public 
public void close ( ) throws java.io.IOException { rw . close ( ) ; repo . close ( ) ; } } ; ) ( close . repo ; ) ( close . rw { java.io.IOException throws ) ( close void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . delete ( METHOD_2 ( ) ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) ) ( METHOD_2 ( delete . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , com.google.gerrit.reviewdb.client.Change . Status status ) { return TYPE_1 . METHOD_2 ( ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 ) ) + STRING_2 ) + ( TYPE_1 . status ( status ) ) ) , VAR_2 ) ; } } ; ) VAR_2 , ) ) ) status ( status . TYPE_1 ( + ) STRING_2 + ) ) VAR_1 , STRING_1 ( METHOD_3 . TYPE_1 ( ( ( ( METHOD_2 . TYPE_1 return { ) status Status . com.google.gerrit.reviewdb.client.Change , VAR_1 java.lang.String ( METHOD_1 java.lang.String static public 
public TYPE_1 apply ( TYPE_2 rsrc , TYPE_3 input ) { com.google.gerrit.reviewdb.client.Project.NameKey project = rsrc . METHOD_1 ( ) ; if ( VAR_1 ) { return METHOD_2 ( project , input ) ; } else { return METHOD_3 ( project , input ) ; } } } } ; ) input , project ( METHOD_3 return { else } ; ) input , project ( METHOD_2 return { ) VAR_1 ( if ; ) ( METHOD_1 . rsrc = project com.google.gerrit.reviewdb.client.Project.NameKey { ) input TYPE_3 , rsrc TYPE_2 ( apply TYPE_1 public 
private TYPE_1 METHOD_1 ( java.lang.String err , java.lang.Exception e ) { if ( VAR_1 ) { VAR_2 . error ( err , e ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } } } ; ) err ( METHOD_3 . TYPE_2 return { else } ; ) ( METHOD_2 . TYPE_2 return ; ) e , err ( error . VAR_2 { ) VAR_1 ( if { ) e java.lang.Exception , err java.lang.String ( METHOD_1 TYPE_1 private 
public void index ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { for ( TYPE_1 < ? , com.google.gerrit.server.query.change.ChangeData > i : METHOD_1 ( ) ) { i . METHOD_2 ( cd ) ; } METHOD_3 ( cd ) ; } } ; ) cd ( METHOD_3 } ; ) cd ( METHOD_2 . i { ) ) ( METHOD_1 : i > com.google.gerrit.server.query.change.ChangeData , ? < TYPE_1 ( for { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( index void public 
void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String err ) { if ( VAR_1 ) { VAR_2 . error ( err ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } } } ; ) err ( METHOD_3 . TYPE_2 return { else } ; ) ( METHOD_2 . TYPE_2 return ; ) err ( error . VAR_2 { ) VAR_1 ( if { ) err java.lang.String ( METHOD_1 > TYPE_1 < java.util.List private 
public void METHOD_1 ( ) { VAR_1 . close ( ) ; } } ; ) ( close . VAR_1 { ) ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { VAR_1 = true ; if ( VAR_2 ! = null ) { VAR_2 . onSuccess ( result ) ; } METHOD_1 ( ) ; } } ; ) ( METHOD_1 } ; ) result ( onSuccess . VAR_2 { ) null = ! VAR_2 ( if ; true = VAR_1 { ) result TYPE_1 ( onSuccess void public 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( result . info ) ; change . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( change ) ; } return change ; } } ; change return } ; ) change ( METHOD_4 . TYPE_1 ; ) VAR_1 ( METHOD_3 . change ; ) info . result ( METHOD_2 . change { ) ) ( METHOD_1 . ) ( getStatus . change ( if { ) change com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { try ( TYPE_1 VAR_2 = METHOD_2 ( METHOD_3 ( VAR_1 ) ) ) { VAR_2 . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . VAR_2 { ) ) ) VAR_1 ( METHOD_3 ( METHOD_2 = VAR_2 TYPE_1 ( try { java.lang.Exception throws ) VAR_1 java.lang.String ( METHOD_1 void private 
public static void METHOD_1 ( int id , java.lang.String m , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( id ) . put ( m , VAR_1 ) ; } } ; ) VAR_1 , m ( put . ) id ( METHOD_2 . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , m java.lang.String , id int ( METHOD_1 void static public 
public void METHOD_1 ( ) { install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) ; bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) ; install ( new TYPE_1 ( ) ) ; factory ( VAR_5 . Factory class ) ; } } ; ) class Factory . VAR_5 ( factory ; ) ) ( TYPE_1 new ( install ; ) VAR_4 ( METHOD_3 . ) class VAR_3 ( bind ; ) ) class VAR_2 ( METHOD_2 . VAR_1 ( install { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 ( METHOD_5 . ) ) ( METHOD_4 ( METHOD_4 . ) ) ( METHOD_3 ( METHOD_3 . ) ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 TYPE_1 public 
public java.lang.String METHOD_1 ( final int i ) { return METHOD_2 ( i , ( i + 1 ) ) ; } } ; ) ) 1 + i ( , i ( METHOD_2 return { ) i int final ( METHOD_1 java.lang.String public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; java.lang.String VAR_1 = STRING_1 ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; } } ; ) ( METHOD_6 . VAR_2 ; ) VAR_1 ( METHOD_5 . VAR_3 ; ) ( METHOD_4 . VAR_2 ; ) ( METHOD_3 . VAR_2 ; STRING_1 = VAR_1 java.lang.String ; ) ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public final native void METHOD_1 ( java.lang.String b ) ; ; ) b java.lang.String ( METHOD_1 void native final public 
public TYPE_1 METHOD_1 ( java.lang.String path ) { this . path = TYPE_2 . METHOD_2 ( path ) ; return this ; } } ; this return ; ) path ( METHOD_2 . TYPE_2 = path . this { ) path java.lang.String ( METHOD_1 TYPE_1 public 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) ; ; ) VAR_1 TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 
private TYPE_1 METHOD_1 ( final TYPE_2 . PatchSetApproval VAR_1 ) { if ( VAR_1 ! = null ) { return VAR_2 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ; } return VAR_3 ; } } ; VAR_3 return } ; ) ) ( METHOD_4 . VAR_3 , ) ( METHOD_3 . VAR_1 ( METHOD_2 . ) ) ( getAccountId . VAR_1 ( create . VAR_2 return { ) null = ! VAR_1 ( if { ) VAR_1 PatchSetApproval . TYPE_2 final ( METHOD_1 TYPE_1 private 
private static void METHOD_1 ( final TYPE_1 r , final TYPE_2 . NameKey branch ) { TYPE_3 . METHOD_2 ( r , STRING_1 , branch . get ( ) ) ; } } ; ) ) ( get . branch , STRING_1 , r ( METHOD_2 . TYPE_3 { ) branch NameKey . TYPE_2 final , r TYPE_1 final ( METHOD_1 void static private 
private boolean METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; } } ; ) ) VAR_1 , VAR_2 ( METHOD_3 ( || ) ) ( METHOD_2 . user ( return { ) VAR_1 > java.lang.String < java.util.Set ( METHOD_1 boolean private 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , TYPE_2 user ) throws java.lang.Exception { TYPE_1 update = TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , c , VAR_4 , user ) ; return update ; } } ; update return ; ) user , VAR_4 , c , VAR_3 , VAR_2 , VAR_1 ( METHOD_1 . TYPE_3 = update TYPE_1 { java.lang.Exception throws ) user TYPE_2 , c com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( final TYPE_1 . Change change ) { this . change = change ; this . currentPatchSetId = change . currentPatchSetId ( ) ; } } ; ) ( currentPatchSetId . change = currentPatchSetId . this ; change = change . this { ) change Change . TYPE_1 final ( METHOD_1 void public 
public static void get ( com.google.gerrit.reviewdb.client.Project.NameKey name , TYPE_1 < TYPE_2 > VAR_1 ) { VAR_2 . METHOD_1 ( name , VAR_1 ) ; } } ; ) VAR_1 , name ( METHOD_1 . VAR_2 { ) VAR_1 > TYPE_2 < TYPE_1 , name com.google.gerrit.reviewdb.client.Project.NameKey ( get void static public 
final native void METHOD_1 ( java.lang.String t ) ; ; ) t java.lang.String ( METHOD_1 void native final 
private static void METHOD_1 ( java.lang.String ... args ) throws java.lang.Exception { org.junit.Assert.assertEquals ( 0 , TYPE_1 . METHOD_2 ( args ) ) ; } } ; ) ) args ( METHOD_2 . TYPE_1 , 0 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) args ... java.lang.String ( METHOD_1 void static private 
public void onSuccess ( TYPE_1 value ) { if ( VAR_1 ) { return ; } this . result = value ; VAR_2 . METHOD_1 ( this ) ; this . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . this ; ) this ( METHOD_1 . VAR_2 ; value = result . this } ; return { ) VAR_1 ( if { ) value TYPE_1 ( onSuccess void public 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , null ) ; } } ; ) null , info ( METHOD_2 ; ) ( METHOD_1 . info { ) info ChangeInfo . TYPE_1 ( onSuccess void public 
public void METHOD_1 ( final com.google.gerrit.reviewdb.client.Change . Id changeId ) { this . changeId = changeId ; } } ; changeId = changeId . this { ) changeId Id . com.google.gerrit.reviewdb.client.Change final ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . get ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) STRING_1 ( get . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws TYPE_2 { return METHOD_1 ( change , patchSet , null ) ; } } ; ) null , patchSet , change ( METHOD_1 return { TYPE_2 throws ) patchSet com.google.gerrit.reviewdb.client.PatchSet , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map 
protected void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . METHOD_2 ( METHOD_3 ( ) , false ) ; TYPE_3 . display ( METHOD_4 ( ) ) ; TYPE_4 . METHOD_5 ( event ) ; } } ; ) event ( METHOD_5 . TYPE_4 ; ) ) ( METHOD_4 ( display . TYPE_3 ; ) false , ) ( METHOD_3 ( METHOD_2 . TYPE_2 { ) event TYPE_1 final ( METHOD_1 void protected 
TYPE_1 create ( TYPE_2 VAR_1 ) ; ; ) VAR_1 TYPE_2 ( create TYPE_1 
protected void run ( ) { VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 { ) ( run void protected 
void METHOD_1 ( TYPE_1 . Id project , TYPE_2 < java.util.List < TYPE_3 . Branch > > VAR_1 ) ; ; ) VAR_1 > > Branch . TYPE_3 < java.util.List < TYPE_2 , project Id . TYPE_1 ( METHOD_1 void 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , changeId . get ( ) ) ; r . append ( VAR_1 . get ( ) ) ; return r . toString ( ) ; } } ; ) ( toString . r return ; ) ) ( get . VAR_1 ( append . r ; ) ) ( get . changeId , VAR_2 ( METHOD_2 . TYPE_1 = r java.lang.StringBuilder { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id , changeId Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 java.lang.String static public 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true ) ; } } ; ) true , STRING_1 ( METHOD_1 return { java.lang.Exception throws ) ( METHOD_1 ProjectConfig . TYPE_1 private 
private java.util.List < TYPE_1 > events ( TYPE_1 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . TYPE_2 return { ) VAR_1 ... TYPE_1 ( events > TYPE_1 < java.util.List private 
public TYPE_1 METHOD_1 ( final java.lang.String branch ) { this . branch = TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( branch ) ) ; return this ; } } ; this return ; ) ) branch ( METHOD_3 . TYPE_1 ( METHOD_2 . TYPE_1 = branch . this { ) branch java.lang.String final ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super ; ) ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static final void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 , null ) ; } } ; ) null , VAR_1 , STRING_1 ( METHOD_1 . TYPE_1 { ) VAR_1 java.lang.String ( METHOD_1 void final static public 
public static TYPE_1 assertThat ( TYPE_2 path ) { return com.google.common.truth.Truth . METHOD_1 ( VAR_1 ) . METHOD_2 ( path ) ; } } ; ) path ( METHOD_2 . ) VAR_1 ( METHOD_1 . com.google.common.truth.Truth return { ) path TYPE_2 ( assertThat TYPE_1 static public 
public com.google.gerrit.reviewdb.client.Account METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 com.google.gerrit.reviewdb.client.Account public 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , java.lang.String branch ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , branch , null , null ) ; } } ; ) null , null , branch , null , null , repo ( METHOD_2 return { java.lang.Exception throws ) branch java.lang.String , repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 < ? > METHOD_1 ( ) throws TYPE_2 . OrmException { try { return TYPE_1 . METHOD_2 ( VAR_1 , false , VAR_2 ) ; } catch ( TYPE_3 err ) { throw new TYPE_2 . OrmException ( STRING_1 , err ) ; } } } } ; ) err , STRING_1 ( OrmException . TYPE_2 new throw { ) err TYPE_3 ( catch } ; ) VAR_2 , false , VAR_1 ( METHOD_2 . TYPE_1 return { try { OrmException . TYPE_2 throws ) ( METHOD_1 > ? < TYPE_1 private 
public TYPE_1 apply ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 TYPE_2 ( apply TYPE_1 public 
public TYPE_1 METHOD_1 ( final TYPE_2 key ) throws TYPE_3 , java.io.IOException { final org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 ) ; try { return METHOD_3 ( key , repo ) ; } finally { repo . close ( ) ; } } } } ; ) ( close . repo { finally } ; ) repo , key ( METHOD_3 return { try ; ) VAR_2 ( METHOD_2 . VAR_1 = repo org.eclipse.jgit.lib.Repository final { java.io.IOException , TYPE_3 throws ) key TYPE_2 final ( METHOD_1 TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 account , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws java.lang.Exception { try ( org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 ) ) { return repo . METHOD_3 ( TYPE_3 . METHOD_4 ( account . id , changeId ) ) ; } } } } ; ) ) changeId , id . account ( METHOD_4 . TYPE_3 ( METHOD_3 . repo return { ) ) VAR_2 ( METHOD_2 . VAR_1 = repo org.eclipse.jgit.lib.Repository ( try { java.lang.Exception throws ) changeId Id . com.google.gerrit.reviewdb.client.Change , account TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( final TYPE_1 s ) { VAR_1 = s . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . s = VAR_1 { ) s TYPE_1 final ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return new TYPE_1 ( ( ( ( STRING_1 + ( changeId ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; } } ; ) ) ) ) args , VAR_1 ( java.lang.String.format ( + ) STRING_2 + ) ) changeId ( + STRING_1 ( ( ( ( TYPE_1 new return { ) args ... TYPE_2 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . get ( key . METHOD_2 ( ) , project ) ; return TYPE_3 . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . TYPE_3 return ; ) project , ) ( METHOD_2 . key ( get . VAR_2 = VAR_1 TYPE_2 { java.lang.Exception throws ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 . PatchSetApproval VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_3 ; ) VAR_2 , VAR_1 ( METHOD_2 { ) VAR_2 PatchSetApproval . TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( true ) ; add ( VAR_1 ) ; } } ; ) VAR_1 ( add ; ) true ( TYPE_1 new = VAR_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public TYPE_1 apply ( TYPE_2 rsrc ) { org.eclipse.jgit.revwalk.RevCommit c = rsrc . METHOD_1 ( ) ; TYPE_1 info = TYPE_3 . METHOD_2 ( c ) ; return info ; } } ; info return ; ) c ( METHOD_2 . TYPE_3 = info TYPE_1 ; ) ( METHOD_1 . rsrc = c org.eclipse.jgit.revwalk.RevCommit { ) rsrc TYPE_2 ( apply TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ( ( STRING_1 + ( VAR_3 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ) STRING_2 + ) ) ) ( get . VAR_3 ( + STRING_1 ( ( ( METHOD_2 . VAR_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
protected static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; VAR_1 . METHOD_2 ( STRING_4 ) ; VAR_1 . METHOD_2 ( STRING_5 ) ; } } ; ) STRING_5 ( METHOD_2 . VAR_1 ; ) STRING_4 ( METHOD_2 . VAR_1 ; ) STRING_3 ( METHOD_2 . VAR_1 ; ) STRING_2 ( METHOD_2 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void static protected 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db , TYPE_2 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . cd { ) changes : cd com.google.gerrit.server.query.change.ChangeData ( for { com.google.gwtorm.server.OrmException throws ) changes > com.google.gerrit.server.query.change.ChangeData < TYPE_2 , db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 ( METHOD_1 void static public 
TYPE_1 id ( java.lang.String VAR_1 ) throws TYPE_2 ; ; TYPE_2 throws ) VAR_1 java.lang.String ( id TYPE_1 
private static java.lang.String METHOD_1 ( java.lang.String name ) { TYPE_1 m = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( m . METHOD_4 ( name ) , STRING_2 , name ) ; return name ; } } ; name return ; ) name , STRING_2 , ) name ( METHOD_4 . m ( METHOD_3 . TYPE_2 ; ) STRING_1 ( METHOD_2 . TYPE_1 = m TYPE_1 { ) name java.lang.String ( METHOD_1 java.lang.String static private 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_1 , cfg ) ; } } ; ) cfg , VAR_1 ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
void METHOD_1 ( boolean r ) { VAR_1 . METHOD_2 ( r , true ) ; } } ; ) true , r ( METHOD_2 . VAR_1 { ) r boolean ( METHOD_1 void 
public TYPE_1 METHOD_1 ( ) { this . VAR_1 = true ; return this ; } } ; this return ; true = VAR_1 . this { ) ( METHOD_1 TYPE_1 public 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( VAR_1 . getParentKey ( ) ) ) ; } } ; ) ) ) ( getParentKey . VAR_1 ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
private java.lang.String METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = VAR_2 . create ( db , user . METHOD_2 ( ) ) ; return VAR_1 . to ( git , STRING_1 ) . getChangeId ( ) ; } } ; ) ( getChangeId . ) STRING_1 , git ( to . VAR_1 return ; ) ) ( METHOD_2 . user , db ( create . VAR_2 = VAR_1 TYPE_2 { TYPE_1 , java.io.IOException throws ) ( METHOD_1 java.lang.String private 
public TYPE_1 METHOD_1 ( TYPE_2 cfg , TYPE_3 VAR_1 , TYPE_4 VAR_2 , TYPE_5 VAR_3 ) throws java.io.IOException { return new TYPE_1 ( cfg , VAR_3 , VAR_1 , VAR_2 , TYPE_6 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . TYPE_6 , VAR_2 , VAR_1 , VAR_3 , cfg ( TYPE_1 new return { java.io.IOException throws ) VAR_3 TYPE_5 , VAR_2 TYPE_4 , VAR_1 TYPE_3 , cfg TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ! ( VAR_1 . isEmpty ( ) ) ) ) { file = VAR_1 ; } } } } ; VAR_1 = file { ) ) ) ) ( isEmpty . VAR_1 ( ! ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . create ( 1 , 0 ) , VAR_1 . METHOD_3 ( INT_1 ) ) ; } } ; ) ) INT_1 ( METHOD_3 . VAR_1 , ) 0 , 1 ( create . TYPE_2 ( METHOD_2 ; ) 0 , VAR_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { if ( VAR_1 ) { super . METHOD_2 ( STRING_1 ) ; VAR_1 = false ; if ( ( METHOD_3 ( ) ) ! = null ) { METHOD_4 ( METHOD_3 ( ) ) ; } } } } } } ; ) ) ( METHOD_3 ( METHOD_4 { ) null = ! ) ) ( METHOD_3 ( ( if ; false = VAR_1 ; ) STRING_1 ( METHOD_2 . super { ) VAR_1 ( if { ) ( METHOD_1 void protected 
public TYPE_1 < com.google.gerrit.reviewdb.client.Project.NameKey > METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; try { TYPE_2 VAR_2 = new TYPE_2 ( VAR_3 ) ; METHOD_3 ( VAR_2 ) ; return java.util.Collections . METHOD_4 ( VAR_4 ) ; } finally { VAR_1 . METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 . VAR_1 { finally } ; ) VAR_4 ( METHOD_4 . java.util.Collections return ; ) VAR_2 ( METHOD_3 ; ) VAR_3 ( TYPE_2 new = VAR_2 TYPE_2 { try ; ) ( METHOD_2 . VAR_1 { ) ( METHOD_1 > com.google.gerrit.reviewdb.client.Project.NameKey < TYPE_1 public 
static TYPE_1 error ( final TYPE_2 s ) { final TYPE_1 r = new TYPE_1 ( org.eclipse.jgit.lib.ObjectId . METHOD_1 ( ) ) ; VAR_1 = s ; return r ; } } ; r return ; s = VAR_1 ; ) ) ( METHOD_1 . org.eclipse.jgit.lib.ObjectId ( TYPE_1 new = r TYPE_1 final { ) s TYPE_2 final ( error TYPE_1 static 
private static void METHOD_1 ( TYPE_1 config , TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 . sshd ( config , VAR_1 ) ; TYPE_4 . METHOD_2 ( config , VAR_1 ) ; } } ; ) VAR_1 , config ( METHOD_2 . TYPE_4 ; ) VAR_1 , config ( sshd . TYPE_4 { TYPE_3 throws ) VAR_1 TYPE_2 , config TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ( getMessage . VAR_1 ( TYPE_2 new ; ) true ( METHOD_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . values ( ) ; } } ; ) ( values . VAR_1 return { ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
public static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; } } ; ) VAR_1 ( id . ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) VAR_1 java.lang.String , id int ( METHOD_1 TYPE_1 static public 
private PatchSet . Id METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_2 ( db . changes ( ) . METHOD_3 ( new com.google.gerrit.reviewdb.client.Change . Key ( c . getChangeId ( ) ) ) ) . currentPatchSetId ( ) ; } } ; ) ( currentPatchSetId . ) ) ) ) ( getChangeId . c ( Key . com.google.gerrit.reviewdb.client.Change new ( METHOD_3 . ) ( changes . db ( METHOD_2 . TYPE_2 return { com.google.gwtorm.server.OrmException throws ) c TYPE_1 ( METHOD_1 Id . PatchSet private 
private void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( event ) ) ; } } ; ) ) event ( METHOD_3 . VAR_2 ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void private 
public boolean METHOD_1 ( final TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { return ( ( ( change . getStatus ( ) ) == ( VAR_1 ) ) & & ( METHOD_2 ( ) ) ) & & ( METHOD_3 ( db ) ) ; } } ; ) ) db ( METHOD_3 ( & & ) ) ) ( METHOD_2 ( & & ) ) VAR_1 ( == ) ) ( getStatus . change ( ( ( return { OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 final ( METHOD_1 boolean public 
public java.lang.String apply ( TYPE_1 in ) { return in . getChange ( ) . getKey ( ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ( getKey . ) ( getChange . in return { ) in TYPE_1 ( apply java.lang.String public 
private static void METHOD_1 ( java.lang.String ref , TYPE_1 u ) { METHOD_2 ( ( STRING_1 + ref ) , u . METHOD_3 ( ref ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ref ( METHOD_3 . u , ) ref + STRING_1 ( ( METHOD_2 { ) u TYPE_1 , ref java.lang.String ( METHOD_1 void static private 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 ) throws TYPE_1 , com.google.gwtorm.server.OrmException , java.io.IOException { try { VAR_2 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_1 ( e . getMessage ( ) ) ; } } } } ; ) ) ( getMessage . e ( TYPE_1 new throw { ) e TYPE_2 ( catch } ; ) VAR_1 ( METHOD_1 . VAR_2 { try { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_1 throws ) VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 req ) throws java.lang.Exception { TYPE_2 res = new TYPE_2 ( ) ; servlet . METHOD_2 ( req , res ) ; assertEquals ( VAR_1 , res . getStatus ( ) ) ; } } ; ) ) ( getStatus . res , VAR_1 ( assertEquals ; ) res , req ( METHOD_2 . servlet ; ) ( TYPE_2 new = res TYPE_2 { java.lang.Exception throws ) req TYPE_1 ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { this . VAR_2 = VAR_1 ; return this ; } } ; this return ; VAR_1 = VAR_2 . this { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
private static boolean METHOD_1 ( TYPE_1 result , TYPE_2 < TYPE_3 . ReceiveCommand > commands ) { if ( TYPE_4 . METHOD_2 ( commands ) ) { return result . METHOD_3 ( ) ; } else { return result . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . result return { else } ; ) ( METHOD_3 . result return { ) ) commands ( METHOD_2 . TYPE_4 ( if { ) commands > ReceiveCommand . TYPE_3 < TYPE_2 , result TYPE_1 ( METHOD_1 boolean static private 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , project , STRING_1 , true , VAR_2 ) ; } } ; ) VAR_2 , true , STRING_1 , project , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ( ( long ) ( 0 ) ) ) ; VAR_3 . METHOD_1 ( ( ( long ) ( 1 ) ) ) ; } } ; ) ) ) 1 ( ) long ( ( ( METHOD_1 . VAR_3 ; ) ) ) 0 ( ) long ( ( ( METHOD_1 . VAR_2 ; ) ( METHOD_1 . VAR_1 { java.io.IOException throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , null ) ; assertEquals ( STRING_2 , VAR_2 ) ; } } ; ) VAR_2 , STRING_2 ( assertEquals ; ) null , STRING_1 ( METHOD_5 . VAR_1 = VAR_2 java.lang.String ; ) ( METHOD_4 = VAR_1 TYPE_1 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 , null , STRING_3 ) ) ; } } ; ) ) STRING_3 , null , STRING_2 ( METHOD_2 . VAR_1 , STRING_1 ( org.junit.Assert.assertEquals { ) ( METHOD_1 void public 
private static java.lang.String status ( com.google.gerrit.reviewdb.client.Change . Status status ) { switch ( status ) { case VAR_1 : return STRING_1 ; case VAR_2 : return STRING_2 ; case VAR_3 : case VAR_4 : default : return STRING_3 ; } } } } ; STRING_3 return : default : VAR_4 case : VAR_3 case ; STRING_2 return : VAR_2 case ; STRING_1 return : VAR_1 case { ) status ( switch { ) status Status . com.google.gerrit.reviewdb.client.Change ( status java.lang.String static private 
final native void METHOD_1 ( java.lang.String m ) ; ; ) m java.lang.String ( METHOD_1 void native final 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 res = METHOD_3 ( STRING_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , res . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . res , STRING_2 ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_3 = res TYPE_1 ; ) ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.List < TYPE_1 > apply ( TYPE_2 rsrc ) throws TYPE_3 , com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . METHOD_1 ( this , rsrc . METHOD_2 ( ) , METHOD_3 ( rsrc ) ) ; } } ; ) ) rsrc ( METHOD_3 , ) ( METHOD_2 . rsrc , this ( METHOD_1 . VAR_1 return { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_3 throws ) rsrc TYPE_2 ( apply > TYPE_1 < java.util.List public 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 . ) ( METHOD_3 . this , VAR_1 ( METHOD_1 . ) VAR_2 ( METHOD_2 . TYPE_1 return { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 boolean private 
private boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_4 ) ) ; } } ; ) ) VAR_4 ( contains . ) ( METHOD_2 . VAR_1 ( || ) ) ) VAR_3 ( contains . ) ( METHOD_2 . VAR_1 ( || ) ) VAR_2 ( contains . ) ( METHOD_2 . VAR_1 ( ( return { ) ( METHOD_1 boolean private 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Id VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_1 ( ) , VAR_1 ) ; } else { return java.util.Collections . METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 . java.util.Collections return { else } ; ) VAR_1 , ) ( METHOD_1 . ) ( METHOD_4 . VAR_2 ( METHOD_3 return { ) ) ( METHOD_2 . VAR_1 ( if { ) VAR_1 Id . TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List private 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change , java.lang.String path ) ; ; ) path java.lang.String , change com.google.gerrit.reviewdb.client.Change ( create TYPE_1 
protected abstract void run ( final java.lang.String [ ] args ) throws TYPE_1 , java.io.IOException ; ; java.io.IOException , TYPE_1 throws ) args ] [ java.lang.String final ( run void abstract protected 
public java.util.List < java.lang.String > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.PatchSet ps = METHOD_2 ( ) ; if ( ps == null ) { return null ; } return METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 return } ; null return { ) null == ps ( if ; ) ( METHOD_2 = ps com.google.gerrit.reviewdb.client.PatchSet { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 > java.lang.String < java.util.List public 
private static TYPE_1 METHOD_1 ( final TYPE_2 cfg ) { return TYPE_3 . METHOD_2 ( cfg , STRING_1 , null , STRING_2 , VAR_1 ) ; } } ; ) VAR_1 , STRING_2 , null , STRING_1 , cfg ( METHOD_2 . TYPE_3 return { ) cfg TYPE_2 final ( METHOD_1 TYPE_1 static private 
public void METHOD_1 ( final TYPE_1 event ) { switch ( event . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( ) ; break ; case VAR_2 : VAR_3 . METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( false ) ; break ; } } } } ; break ; ) false ( METHOD_5 . VAR_3 ; ) STRING_1 ( METHOD_4 . VAR_3 : VAR_2 case ; break ; ) ( METHOD_3 : VAR_1 case { ) ) ( METHOD_2 . event ( switch { ) event TYPE_1 final ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 notes , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 < java.lang.String > VAR_4 ) ; ; ) VAR_4 > java.lang.String < TYPE_5 , VAR_3 TYPE_4 , VAR_2 TYPE_3 , VAR_1 com.google.gerrit.reviewdb.client.Account.Id , notes TYPE_2 ( create TYPE_1 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 < TYPE_3 > VAR_3 ) { TYPE_4 . revision ( id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 ( put . ) VAR_1 ( id . ) STRING_1 , id ( revision . TYPE_4 { ) VAR_3 > TYPE_3 < TYPE_2 , VAR_2 TYPE_1 , VAR_1 java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
public synchronized TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( get . VAR_2 ( METHOD_2 . TYPE_1 return { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 > TYPE_2 < TYPE_1 synchronized public 
abstract TYPE_1 id ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( id TYPE_1 abstract 
boolean METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { return METHOD_2 ( VAR_1 , VAR_2 , false ) ; } } ; ) false , VAR_2 , VAR_1 ( METHOD_2 return { ) VAR_2 boolean , VAR_1 java.lang.String ( METHOD_1 boolean 
protected java.lang.String getRefName ( ) { return STRING_1 ; } } ; STRING_1 return { ) ( getRefName java.lang.String protected 
public TYPE_1 METHOD_1 ( final java.lang.String t ) { METHOD_2 ( VAR_1 ) ; TYPE_2 error ; TYPE_3 . not VAR_2 ; TYPE_3 . line VAR_3 ; VAR_4 . METHOD_1 ( t ) ; return this ; } } ; this return ; ) t ( METHOD_1 . VAR_4 ; VAR_3 line . TYPE_3 ; VAR_2 not . TYPE_3 ; error TYPE_2 ; ) VAR_1 ( METHOD_2 { ) t java.lang.String final ( METHOD_1 TYPE_1 public 
protected void METHOD_1 ( final boolean on ) { for ( TYPE_1 w : METHOD_2 ( ) ) { if ( w instanceof TYPE_2 ) { ( ( TYPE_2 ) ( w ) ) . METHOD_3 ( on ) ; } } } } } } ; ) on ( METHOD_3 . ) ) w ( ) TYPE_2 ( ( { ) TYPE_2 instanceof w ( if { ) ) ( METHOD_2 : w TYPE_1 ( for { ) on boolean final ( METHOD_1 void protected 
private void METHOD_1 ( TYPE_1 . HttpServletResponse res , TYPE_2 type ) { res . METHOD_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . VAR_2 , STRING_1 ( java.lang.String.format , VAR_1 ( METHOD_2 . res { ) type TYPE_2 , res HttpServletResponse . TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
protected void set ( int VAR_1 ) { METHOD_1 ( VAR_1 ) ; VAR_2 = VAR_1 ; } } ; VAR_1 = VAR_2 ; ) VAR_1 ( METHOD_1 { ) VAR_1 int ( set void protected 
public TYPE_1 METHOD_1 ( ) { return user ; } } ; user return { ) ( METHOD_1 TYPE_1 public 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { return TYPE_1 . METHOD_2 ( VAR_1 ) . contains ( getValue ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( getValue ( contains . ) VAR_1 ( METHOD_2 . TYPE_1 return { com.google.gwtorm.server.OrmException throws ) VAR_1 com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; com.google.common.truth.Truth.assertThat ( reviewers ) . METHOD_4 ( 2 ) ; } } ; ) 2 ( METHOD_4 . ) reviewers ( com.google.common.truth.Truth.assertThat ; ) INT_1 , STRING_1 , changeId ( METHOD_3 = reviewers > TYPE_1 < java.util.List ; ) ( getChangeId . ) ( METHOD_2 = changeId java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; VAR_1 = STRING_1 ; TYPE_2 r = VAR_2 . put ( STRING_2 , in ) ; org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . r , VAR_3 ( org.junit.Assert.assertEquals ; ) in , STRING_2 ( put . VAR_2 = r TYPE_2 ; STRING_1 = VAR_1 ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { return VAR_4 . METHOD_1 ( new TYPE_3 ( commit , TYPE_4 . METHOD_2 ( VAR_1 ) , VAR_2 , VAR_3 , null , null , null ) ) ; } } ; ) ) null , null , null , VAR_3 , VAR_2 , ) VAR_1 ( METHOD_2 . TYPE_4 , commit ( TYPE_3 new ( METHOD_1 . VAR_4 return { ) VAR_3 java.lang.String , VAR_2 TYPE_2 , VAR_1 TYPE_1 , commit org.eclipse.jgit.lib.ObjectId ( METHOD_1 boolean public 
public void METHOD_1 ( final TYPE_1 . Id VAR_1 , final TYPE_2 < TYPE_3 > VAR_2 ) { VAR_3 . create ( VAR_1 ) . to ( VAR_2 ) ; } } ; ) VAR_2 ( to . ) VAR_1 ( create . VAR_3 { ) VAR_2 > TYPE_3 < TYPE_2 final , VAR_1 Id . TYPE_1 final ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = null ; if ( VAR_1 ! = null ) { VAR_2 = new TYPE_1 ( ) ; VAR_3 = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = VAR_8 ; VAR_9 = VAR_10 ; } return VAR_2 ; } } ; VAR_2 return } ; VAR_10 = VAR_9 ; VAR_8 = VAR_7 ; VAR_6 = VAR_5 ; VAR_4 = VAR_3 ; ) ( TYPE_1 new = VAR_2 { ) null = ! VAR_1 ( if ; null = VAR_2 TYPE_1 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , int changeId , TYPE_1 VAR_2 , int VAR_3 , java.lang.String VAR_4 ) { return ( TYPE_2 . METHOD_1 ( VAR_1 , changeId , VAR_2 , VAR_3 , VAR_4 ) ) + STRING_1 ; } } ; STRING_1 + ) ) VAR_4 , VAR_3 , VAR_2 , changeId , VAR_1 ( METHOD_1 . TYPE_2 ( return { ) VAR_4 java.lang.String , VAR_3 int , VAR_2 TYPE_1 , changeId int , VAR_1 java.lang.String ( METHOD_1 java.lang.String static private 
private com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; } } ; ) VAR_1 , project ( METHOD_1 . TYPE_1 return { ) ( METHOD_1 com.google.gerrit.reviewdb.client.Change private 
public void delete ( int id ) throws java.io.IOException { java.lang.String VAR_1 = TYPE_1 . toString ( id ) ; delete ( VAR_1 , VAR_2 ) ; delete ( VAR_1 , VAR_3 ) ; } } ; ) VAR_3 , VAR_1 ( delete ; ) VAR_2 , VAR_1 ( delete ; ) id ( toString . TYPE_1 = VAR_1 java.lang.String { java.io.IOException throws ) id int ( delete void public 
public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) . METHOD_1 ( ) ; return VAR_1 ! = null ? new TYPE_1 ( VAR_1 ) : null ; } } ; null : ) VAR_1 ( TYPE_1 new ? null = ! VAR_1 return ; ) ( METHOD_1 . ) ( METHOD_2 . TYPE_3 = VAR_1 TYPE_2 { ) ( METHOD_1 TYPE_1 static public 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { try { return VAR_2 . get ( VAR_1 ) ; } catch ( TYPE_3 e ) { VAR_3 . METHOD_2 ( ( STRING_1 + VAR_1 ) , e ) ; return null ; } } } } ; null return ; ) e , ) VAR_1 + STRING_1 ( ( METHOD_2 . VAR_3 { ) e TYPE_3 ( catch } ; ) VAR_1 ( get . VAR_2 return { try { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 > TYPE_2 < TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( 0 , 0 ) ; message . METHOD_3 ( true ) ; } } ; ) true ( METHOD_3 . message ; ) 0 , 0 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_2 in = TYPE_2 . METHOD_2 ( ) ; TYPE_3 . change ( id ) . view ( STRING_1 ) . METHOD_3 ( in , VAR_1 ) ; } } ; ) VAR_1 , in ( METHOD_3 . ) STRING_1 ( view . ) id ( change . TYPE_3 ; ) ( METHOD_2 . TYPE_2 = in TYPE_2 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( TYPE_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) ) ; } } ; ) ) ) ) ( METHOD_5 . VAR_1 ( METHOD_4 . TYPE_3 ( TYPE_2 new ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 get ( ) { return TYPE_3 . METHOD_3 ( ) . VAR_2 ; } } ) . in ( VAR_3 ) ; } } ; ) VAR_3 ( in . ) } } ; VAR_2 . ) ( METHOD_3 . TYPE_3 return { ) ( get TYPE_2 public { ) ( > TYPE_2 < TYPE_1 new ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void private 
public TYPE_1 projects ( ) { return projects . get ( ) ; } } ; ) ( get . projects return { ) ( projects TYPE_1 public 
private TYPE_1 METHOD_1 ( java.lang.String name ) { return VAR_1 . METHOD_2 ( name ) ; } } ; ) name ( METHOD_2 . VAR_1 return { ) name java.lang.String ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_3 ) ; METHOD_3 ( STRING_4 ) ; } catch ( TYPE_2 VAR_1 ) { } } } } { ) VAR_1 TYPE_2 ( catch } ; ) STRING_4 ( METHOD_3 ; ) STRING_3 ( METHOD_2 . ) STRING_2 , STRING_1 ( TYPE_1 new { try { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; VAR_1 = STRING_2 ; METHOD_2 ( in , VAR_2 class ) ; } } ; ) class VAR_2 , in ( METHOD_2 ; STRING_2 = VAR_1 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public int METHOD_1 ( ) { return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) + ( VAR_2 . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . VAR_2 ( + ) INT_1 * ) ) ( METHOD_1 . VAR_1 ( ( return { ) ( METHOD_1 int public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = METHOD_2 ( VAR_4 ) ; VAR_5 = VAR_6 ; return VAR_2 ; } } ; VAR_2 return ; VAR_6 = VAR_5 ; ) VAR_4 ( METHOD_2 = VAR_3 ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; bind ( VAR_3 class ) . METHOD_2 ( user ) ; bind ( VAR_4 class ) . METHOD_3 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_3 . ) class VAR_4 ( bind ; ) user ( METHOD_2 . ) class VAR_3 ( bind ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void public 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > project ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) { return new TYPE_2 ( projectName . get ( ) ) ; } } ; ) ) ( get . projectName ( TYPE_2 new return { ) projectName com.google.gerrit.reviewdb.client.Project.NameKey ( project > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
public void METHOD_1 ( java.lang.String sql ) throws TYPE_1 . OrmException { try { VAR_1 . METHOD_1 ( sql ) ; } catch ( TYPE_2 e ) { throw new TYPE_1 . OrmException ( ( STRING_1 + sql ) , e ) ; } } } } ; ) e , ) sql + STRING_1 ( ( OrmException . TYPE_1 new throw { ) e TYPE_2 ( catch } ; ) sql ( METHOD_1 . VAR_1 { try { OrmException . TYPE_1 throws ) sql java.lang.String ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . VAR_1 , STRING_1 ( METHOD_4 . ) ( METHOD_3 . view ; ) ) ( getValue . e ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; schema = new TYPE_1 ( VAR_1 class ) ; VAR_2 = schema . METHOD_2 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_2 . schema = VAR_2 ; ) class VAR_1 ( TYPE_1 new = schema ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void protected 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , int VAR_2 ) throws java.io.IOException , TYPE_1 { try ( TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ) { if ( VAR_3 . METHOD_1 ( VAR_2 ) ) { commit ( VAR_3 ) ; } } } } } } ; ) VAR_3 ( commit { ) ) VAR_2 ( METHOD_1 . VAR_3 ( if { ) ) VAR_1 ( METHOD_2 = VAR_3 TYPE_2 ( try { TYPE_1 , java.io.IOException throws ) VAR_2 int , VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( db , change ( ) ) ; } return notes ; } } ; notes return } ; ) ) ( change , db ( create . VAR_1 = notes { ) null == ) notes ( ( if { com.google.gwtorm.server.OrmException throws ) ( notes TYPE_1 public 
protected static java.lang.String METHOD_1 ( final int VAR_1 ) { if ( VAR_1 < INT_1 ) { return STRING_1 + VAR_1 ; } else { return java.lang.String . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . java.lang.String return { else } ; VAR_1 + STRING_1 return { ) INT_1 < VAR_1 ( if { ) VAR_1 int final ( METHOD_1 java.lang.String static protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new ( install ; ) ) ( TYPE_1 new ( install ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( TYPE_2 req , TYPE_3 . HttpServletResponse res , java.lang.String VAR_1 ) throws java.io.IOException { METHOD_2 ( res , VAR_1 ) ; return TYPE_4 . METHOD_3 ( req , res ) ; } } ; ) res , req ( METHOD_3 . TYPE_4 return ; ) VAR_1 , res ( METHOD_2 { java.io.IOException throws ) VAR_1 java.lang.String , res HttpServletResponse . TYPE_3 , req TYPE_2 ( METHOD_1 TYPE_1 protected 
public final void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_2 ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( METHOD_2 { OrmException . TYPE_3 throws ) VAR_1 > TYPE_2 < TYPE_1 final ( METHOD_1 void final public 
public Project . NameKey METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( change . project ) ; } } ; ) project . change ( com.google.gerrit.reviewdb.client.Project.NameKey new return { ) ( METHOD_1 NameKey . Project public 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
private < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_3 < TYPE_1 > e ) { VAR_1 = this ; TYPE_4 . METHOD_1 ( e ) ; } } ; ) e ( METHOD_1 . TYPE_4 ; this = VAR_1 { ) e > TYPE_1 < TYPE_3 ( METHOD_1 void > TYPE_2 extends TYPE_1 < private 
private void METHOD_1 ( TYPE_1 req , TYPE_2 rsrc ) throws TYPE_3 { if ( STRING_1 . equals ( req . METHOD_2 ( STRING_2 ) ) ) { throw new TYPE_3 ( STRING_3 ) ; } } } } ; ) STRING_3 ( TYPE_3 new throw { ) ) ) STRING_2 ( METHOD_2 . req ( equals . STRING_1 ( if { TYPE_3 throws ) rsrc TYPE_2 , req TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) , STRING_1 ) ; com.google.common.truth.Truth . METHOD_3 ( ) . METHOD_4 ( STRING_2 ) ; } catch ( TYPE_2 e ) { } } } } { ) e TYPE_2 ( catch } ; ) STRING_2 ( METHOD_4 . ) ( METHOD_3 . com.google.common.truth.Truth ; ) STRING_1 , ) 1 ( Id . com.google.gerrit.reviewdb.client.Change new ( METHOD_2 . TYPE_1 { try { ) ( METHOD_1 void public 
public void METHOD_1 ( final java.lang.String name ) { if ( ( name ! = null ) & & ( ! ( name . isEmpty ( ) ) ) ) { this . name = name ; } } } } ; name = name . this { ) ) ) ) ( isEmpty . name ( ! ( & & ) null = ! name ( ( if { ) name java.lang.String final ( METHOD_1 void public 
protected abstract void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException , TYPE_2 ; ; TYPE_2 , java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 void abstract protected 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 = false ; if ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) { if ( VAR_3 . METHOD_3 ( ) ) { VAR_1 = true ; } else { METHOD_4 ( ) ; } } } } } } ; ) ( METHOD_4 { else } ; true = VAR_1 { ) ) ( METHOD_3 . VAR_3 ( if { ) ) VAR_2 ( == ) ) ( METHOD_2 . event ( ( if ; false = VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 r ; r = new TYPE_1 ( VAR_1 , new TYPE_3 ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 , r ) ; return r ; } } ; r return ; ) r , VAR_1 ( METHOD_3 . VAR_2 ; ) ) ( TYPE_3 new , VAR_1 ( TYPE_1 new = r ; r TYPE_1 final ; ) STRING_1 ( METHOD_2 . VAR_2 = VAR_1 TYPE_2 final { ) ( METHOD_1 TYPE_1 private 
private static int METHOD_1 ( int VAR_1 , java.lang.String name , int VAR_2 ) { if ( VAR_1 == 0 ) { return VAR_2 ; } TYPE_1 . METHOD_2 ( ( VAR_1 > 0 ) , STRING_1 , name , VAR_1 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_1 , name , STRING_1 , ) 0 > VAR_1 ( ( METHOD_2 . TYPE_1 } ; VAR_2 return { ) 0 == VAR_1 ( if { ) VAR_2 int , name java.lang.String , VAR_1 int ( METHOD_1 int static private 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) { } } { ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
private static java.util.List < TYPE_1 < com.google.gerrit.server.query.change.ChangeData > > METHOD_1 ( ) { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > VAR_1 = METHOD_2 ( ) ; return TYPE_2 . of ( not ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( not ( of . TYPE_2 return ; ) ( METHOD_2 = VAR_1 > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { ) ( METHOD_1 > > com.google.gerrit.server.query.change.ChangeData < TYPE_1 < java.util.List static private 
void METHOD_1 ( ) { VAR_1 . append ( log ( STRING_1 ) ) ; METHOD_2 ( VAR_2 . get ( ) , STRING_2 , STRING_1 , new java.lang.String [ ] { } ) ; } } ; ) } { ] [ java.lang.String new , STRING_1 , STRING_2 , ) ( get . VAR_2 ( METHOD_2 ; ) ) STRING_1 ( log ( append . VAR_1 { ) ( METHOD_1 void 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { final TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( ) ; final TYPE_3 < TYPE_4 . ReviewDb > VAR_2 = VAR_1 . METHOD_3 ( ) ; return new TYPE_5 ( VAR_2 ) ; } } ; ) VAR_2 ( TYPE_5 new return ; ) ( METHOD_3 . VAR_1 = VAR_2 > ReviewDb . TYPE_4 < TYPE_3 final ; ) ( METHOD_2 . TYPE_2 = VAR_1 TYPE_2 final { java.lang.Exception throws ) ( METHOD_1 TYPE_1 protected 
private void METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { try { METHOD_1 ( cd . project ( ) , cd . getId ( ) ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new java.io.IOException ( e ) ; } } } } ; ) e ( java.io.IOException new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) ) ( getId . cd , ) ( project . cd ( METHOD_1 { try { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 void private 
public void run ( ) { try { VAR_1 . METHOD_1 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( e ) ; } catch ( TYPE_3 e ) { throw new TYPE_2 ( e ) ; } } } } ; ) e ( TYPE_2 new throw { ) e TYPE_3 ( catch } ; ) e ( TYPE_2 new throw { ) e TYPE_1 ( catch } ; ) ( METHOD_1 . VAR_1 { try { ) ( run void public 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , getChangeId ( ) ) ; } } ; ) ) ( getChangeId , VAR_1 ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; if ( VAR_1 ! = null ) { VAR_2 = null ; result = null ; VAR_1 . METHOD_2 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_2 . VAR_1 ; null = result ; null = VAR_2 { ) null = ! VAR_1 ( if ; VAR_2 = VAR_1 > TYPE_2 < TYPE_1 { ) ( METHOD_1 void 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( changeId ) , new TYPE_4 ( changeId , null , null , false , true ) ) ; } } ; ) ) true , false , null , null , changeId ( TYPE_4 new , ) changeId ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_2 ) + msg ) , args ) ; } } } } ; ) args , ) msg + ) STRING_2 + ) ) ) ( METHOD_4 . VAR_2 ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) args ... TYPE_1 , msg java.lang.String ( METHOD_1 void private 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false , false ) ) ; } } ; ) ) false , false ( TYPE_1 new ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public int METHOD_1 ( ) { return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) + ( value ) ; } } ; ) value ( + ) INT_1 * ) ) ( METHOD_1 . VAR_1 ( ( return { ) ( METHOD_1 int public 
private static TYPE_1 METHOD_1 ( TYPE_2 group ) { TYPE_1 VAR_1 = TYPE_3 . METHOD_2 ( group ) ; VAR_1 . METHOD_3 ( true ) ; return VAR_1 ; } } ; VAR_1 return ; ) true ( METHOD_3 . VAR_1 ; ) group ( METHOD_2 . TYPE_3 = VAR_1 TYPE_1 { ) group TYPE_2 ( METHOD_1 TYPE_1 static private 
private void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 = null ; } VAR_2 . METHOD_5 ( true ) ; } } ; ) true ( METHOD_5 . VAR_2 } ; null = VAR_1 ; ) ( METHOD_4 . VAR_1 ; ) ) ( METHOD_3 . VAR_2 ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { final TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 . METHOD_3 ( ) , VAR_3 ) ; } } ; ) VAR_3 , ) ( METHOD_3 . VAR_2 ( assertEquals . TYPE_2 ; ) ( METHOD_2 = VAR_1 TYPE_1 final { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } } ; ) 0 , null , VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_2 . TYPE_2 return { ) VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 TYPE_1 ( METHOD_1 java.lang.String static public 
public TYPE_1 < TYPE_2 > get ( ) { return new TYPE_1 < TYPE_2 > ( key , TYPE_3 . METHOD_1 ( VAR_1 , type ) , STRING_1 ) ; } } ; ) STRING_1 , ) type , VAR_1 ( METHOD_1 . TYPE_3 , key ( > TYPE_2 < TYPE_1 new return { ) ( get > TYPE_2 < TYPE_1 public 
private static TYPE_1 METHOD_1 ( final TYPE_2 . Id VAR_1 , final TYPE_3 VAR_2 ) { final java.lang.String VAR_3 = VAR_2 . METHOD_2 ( ) ; return new TYPE_1 ( new TYPE_1 . Key ( VAR_1 , VAR_3 ) ) ; } } ; ) ) VAR_3 , VAR_1 ( Key . TYPE_1 new ( TYPE_1 new return ; ) ( METHOD_2 . VAR_2 = VAR_3 java.lang.String final { ) VAR_2 TYPE_3 final , VAR_1 Id . TYPE_2 final ( METHOD_1 TYPE_1 static private 
TYPE_1 create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema , boolean VAR_1 ) ; ; ) VAR_1 boolean , schema > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( create TYPE_1 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_2 . METHOD_2 ( key ) ; key = null ; VAR_1 = null ; METHOD_3 ( STRING_1 , 0 ) ; } } } } ; ) 0 , STRING_1 ( METHOD_3 ; null = VAR_1 ; null = key ; ) key ( METHOD_2 . VAR_2 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_3 instanceof VAR_1 ( return } ; true return { ) TYPE_2 instanceof VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static public 
public synchronized int METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 int synchronized public 
protected synchronized void METHOD_1 ( ) { } } { ) ( METHOD_1 void synchronized protected 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 { else } ; ) ( METHOD_2 { ) VAR_1 ( if ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
private com.google.gerrit.reviewdb.client . AccountGroup METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_3 . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . VAR_3 return ; ) ) ( METHOD_3 . ) ) ( getName . TYPE_3 ( METHOD_2 . VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 AccountGroup . com.google.gerrit.reviewdb.client private 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ! ( label ( VAR_1 . METHOD_2 ( ) . get ( ) ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) ) ( get . ) ( METHOD_2 . VAR_1 ( label ( ! return { ) VAR_1 TYPE_1 ( METHOD_1 boolean private 
TYPE_1 create ( TYPE_2 . NameKey project , java.lang.String VAR_1 , TYPE_3 m ) ; ; ) m TYPE_3 , VAR_1 java.lang.String , project NameKey . TYPE_2 ( create TYPE_1 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } } ; ) ( METHOD_10 ; ) ( METHOD_9 ; ) ( METHOD_8 ; ) ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) VAR_1 ( METHOD_3 ; ) VAR_1 ( METHOD_2 { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( key ) ; VAR_2 . add ( key ) ; } } ; ) key ( add . VAR_2 ; ) key ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void add ( final TYPE_1 ... VAR_1 ) { for ( final TYPE_1 i : VAR_1 ) { add ( i ) ; } } } } ; ) i ( add { ) VAR_1 : i TYPE_1 final ( for { ) VAR_1 ... TYPE_1 final ( add void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { this . VAR_2 = new TYPE_3 ( ) ; } } ; ) ( TYPE_3 new = VAR_2 . this { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( new TYPE_2 ( ) { public void run ( ) { METHOD_3 ( ) ; } } ) ; } } ; ) } } ; ) ( METHOD_3 { ) ( run void public { ) ( TYPE_2 new ( METHOD_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_4 ) ) ; } } ; ) ) STRING_4 ( METHOD_2 . ) STRING_3 , STRING_2 ( TYPE_1 new , STRING_1 ( assertEquals { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( db , change ) ; } } ; ) change , db ( create . VAR_1 return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 t ) { VAR_1 . error ( ( STRING_1 + ( change.getId ( ) ) ) , t ) ; VAR_2 . set ( false ) ; VAR_3 . update ( 1 ) ; } } ; ) 1 ( update . VAR_3 ; ) false ( set . VAR_2 ; ) t , ) ) ) ( change.getId ( + STRING_1 ( ( error . VAR_1 { ) t TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; } } ; ) ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > r = VAR_1 ; if ( r == null ) { throw new TYPE_2 ( STRING_1 ) ; } VAR_1 = null ; return r ; } } ; r return ; null = VAR_1 } ; ) STRING_1 ( TYPE_2 new throw { ) null == r ( if ; VAR_1 = r > TYPE_1 < java.util.List final { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { final java.lang.String VAR_2 = VAR_1 . getMessage ( ) ; if ( VAR_2 ! = null ) { return VAR_2 . METHOD_2 ( ) ; } } return STRING_1 ; } } ; STRING_1 return } } ; ) ( METHOD_2 . VAR_2 return { ) null = ! VAR_2 ( if ; ) ( getMessage . VAR_1 = VAR_2 java.lang.String final { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 java.lang.String public 
private TYPE_1 < TYPE_2 . ChangeInfo > METHOD_1 ( TYPE_2 . ChangeInfo res ) { return TYPE_1 . METHOD_2 ( res ) . METHOD_3 ( TYPE_3 . METHOD_4 ( 0 , VAR_1 ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) VAR_1 , 0 ( METHOD_4 . TYPE_3 ( METHOD_3 . ) res ( METHOD_2 . TYPE_1 return { ) res ChangeInfo . TYPE_2 ( METHOD_1 > ChangeInfo . TYPE_2 < TYPE_1 private 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . delete ( VAR_2 ) ; } } ; ) VAR_2 ( delete . ) VAR_1 ( id . ) STRING_1 , id ( revision . TYPE_3 { ) VAR_2 > TYPE_2 < TYPE_1 , VAR_1 java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 

public void METHOD_1 ( TYPE_1 returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( getWindow ( ) ) ) ; model . METHOD_2 ( ) ; METHOD_3 ( ) ; if ( model . METHOD_4 ( ) ) { METHOD_5 ( returnValue . METHOD_6 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; } } } } ; ) ( METHOD_9 . ) ( METHOD_8 ; ) ( METHOD_7 ; ) ) ( METHOD_6 . returnValue ( METHOD_5 { ) ) ( METHOD_4 . model ( if ; ) ( METHOD_3 ; ) ( METHOD_2 . model ; ) ) ) ( getWindow ( ) TYPE_2 ( ( = model TYPE_2 { ) returnValue TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_3 . put ( VAR_4 , VAR_1 ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_4 ( VAR_3 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_5 , TYPE_2 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( VAR_2 . METHOD_7 ( ) . get ( 0 ) . METHOD_8 ( ) , new TYPE_5 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( TYPE_5 new , ) ( METHOD_8 . ) 0 ( get . ) ( METHOD_7 . VAR_2 ( assertEquals . TYPE_4 ; ) ) ( METHOD_6 . TYPE_2 , VAR_5 , VAR_2 ( METHOD_5 . TYPE_3 ; ) VAR_3 ( METHOD_4 . TYPE_2 = VAR_5 > java.lang.Object , java.lang.String < java.util.Map ; ) VAR_1 , VAR_4 ( put . VAR_3 ; ) ( METHOD_3 . TYPE_2 = VAR_3 > java.lang.Object , java.lang.String < java.util.Map ; ) ( METHOD_2 . TYPE_2 = VAR_2 TYPE_1 ; STRING_1 = VAR_1 java.lang.String { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . METHOD_6 ( null ) ; } } ; ) null ( METHOD_6 . ) VAR_1 ( when . ) null ( org.mockito.Mockito.doReturn ; ) VAR_4 ( METHOD_6 . ) VAR_1 ( when . ) ) VAR_4 ( METHOD_7 ( org.mockito.Mockito.doReturn ; ) VAR_3 ( METHOD_6 . ) VAR_1 ( when . ) ) VAR_3 ( METHOD_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) ) VAR_2 ( METHOD_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) command TYPE_1 ( METHOD_1 void private 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) . append ( STRING_1 , METHOD_2 ( ) ) . append ( STRING_2 , METHOD_3 ( ) ) . append ( STRING_3 , TYPE_2 . METHOD_4 ( METHOD_5 ( ) , STRING_4 ) ) . append ( STRING_5 , METHOD_6 ( ) ) . append ( STRING_6 , TYPE_2 . METHOD_4 ( METHOD_7 ( ) , STRING_4 ) ) . append ( STRING_7 , METHOD_8 ( ) ) . append ( STRING_8 , METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 , STRING_8 ( append . ) ) ( METHOD_8 , STRING_7 ( append . ) ) STRING_4 , ) ( METHOD_7 ( METHOD_4 . TYPE_2 , STRING_6 ( append . ) ) ( METHOD_6 , STRING_5 ( append . ) ) STRING_4 , ) ( METHOD_5 ( METHOD_4 . TYPE_2 , STRING_3 ( append . ) ) ( METHOD_3 , STRING_2 ( append . ) ) ( METHOD_2 , STRING_1 ( append . ) VAR_1 ( METHOD_1 . super return { ) VAR_1 TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( METHOD_4 ( ) , VAR_1 ) ) ; METHOD_5 ( ) ; METHOD_6 ( 0 , 1 ) ; METHOD_7 ( ) ; METHOD_8 ( 1 ) ; METHOD_9 ( ) ; VAR_2 . METHOD_10 ( ) ; TYPE_1 response = resource . get ( ) ; METHOD_11 ( response , 0 ) ; METHOD_12 ( response ) ; } } ; ) response ( METHOD_12 ; ) 0 , response ( METHOD_11 ; ) ( get . resource = response TYPE_1 ; ) ( METHOD_10 . VAR_2 ; ) ( METHOD_9 ; ) 1 ( METHOD_8 ; ) ( METHOD_7 ; ) 1 , 0 ( METHOD_6 ; ) ( METHOD_5 ; ) ) VAR_1 , ) ( METHOD_4 ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { VAR_1 . METHOD_2 ( ) ; if ( ( METHOD_3 ( ) . getEntity ( ) ) ! = null ) { METHOD_4 ( true ) ; VAR_2 . setEntity ( TYPE_2 . METHOD_5 ( METHOD_3 ( ) . getEntity ( ) ) ) ; } } } } ; ) ) ) ( getEntity . ) ( METHOD_3 ( METHOD_5 . TYPE_2 ( setEntity . VAR_2 ; ) true ( METHOD_4 { ) null = ! ) ) ( getEntity . ) ( METHOD_3 ( ( if ; ) ( METHOD_2 . VAR_1 { ) args TYPE_1 , sender java.lang.Object ( METHOD_1 void private 
protected static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( ) ; TYPE_1 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 ) ; if ( VAR_6 ) { TYPE_4 VAR_7 = VAR_1 . METHOD_4 ( ) ; VAR_7 . METHOD_5 ( VAR_8 ) ; } return VAR_3 ; } } ; VAR_3 return } ; ) VAR_8 ( METHOD_5 . VAR_7 ; ) ( METHOD_4 . VAR_1 = VAR_7 TYPE_4 { ) VAR_6 ( if ; ) VAR_5 , VAR_4 ( METHOD_3 . ) ( METHOD_2 . VAR_3 ; ) VAR_1 ( TYPE_3 new = VAR_3 TYPE_1 ; ) ( METHOD_1 . VAR_2 = VAR_1 TYPE_2 { java.lang.Exception throws ) ( METHOD_1 TYPE_1 static protected 
protected TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { for ( TYPE_2 nic : vm . METHOD_2 ( ) ) { if ( ( nic . METHOD_3 ( ) ) == null ) { return ! ( TYPE_3 . METHOD_4 ( vm . METHOD_5 ( ) ) ) ? new TYPE_1 . ValidationResult ( VAR_1 ) : VAR_2 ; } } return VAR_2 ; } } ; VAR_2 return } } ; VAR_2 : ) VAR_1 ( ValidationResult . TYPE_1 new ? ) ) ) ( METHOD_5 . vm ( METHOD_4 . TYPE_3 ( ! return { ) null == ) ) ( METHOD_3 . nic ( ( if { ) ) ( METHOD_2 . vm : nic TYPE_2 ( for { ) vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 ValidationResult . TYPE_1 protected 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { final org.ovirt.engine.core.compat.Guid vmId = VAR_1 . getId ( ) ; for ( TYPE_3 disk : TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = disk . getId ( ) ; TYPE_2 VAR_4 = TYPE_4 . METHOD_4 ( vmId , VAR_3 , TYPE_4 . METHOD_5 ( VAR_1 , vmId ) ) ; TYPE_4 . METHOD_6 ( VAR_1 , VAR_4 , VAR_3 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_3 , VAR_4 , VAR_1 ( METHOD_6 . TYPE_4 ; ) ) vmId , VAR_1 ( METHOD_5 . TYPE_4 , VAR_3 , vmId ( METHOD_4 . TYPE_4 = VAR_4 TYPE_2 ; ) ( getId . disk = VAR_3 org.ovirt.engine.core.compat.Guid { ) ) ) ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_4 : disk TYPE_3 ( for ; ) ( getId . VAR_1 = vmId org.ovirt.engine.core.compat.Guid final { ) VAR_2 > TYPE_2 < java.util.List , VAR_1 TYPE_1 ( METHOD_1 void static private 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } } ; TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . ) ( getInstance . TYPE_2 ; } } ; ) ) ) returnValue ( ) > TYPE_1 < java.util.List ( ( ( METHOD_3 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) this ( METHOD_2 . VAR_1 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( STRING_1 ) ; cmd = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( params ) ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; params . METHOD_5 ( null ) ; params . METHOD_6 ( null ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } } ; ) ) ( validate . cmd ( METHOD_4 . TYPE_3 ; ) null ( METHOD_6 . params ; ) null ( METHOD_5 . params ; ) ) ( validate . cmd ( METHOD_4 . TYPE_3 ; ) ) params ( TYPE_2 new ( METHOD_3 . org.mockito.Mockito = cmd ; ) STRING_1 ( METHOD_2 . params ; ) ( TYPE_1 new = params TYPE_1 { ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { byte [ ] VAR_1 = id . METHOD_2 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_1 . length ) ; VAR_3 ++ ) { VAR_2 . append ( ( STRING_1 + ( java.lang.String . METHOD_3 ( STRING_2 , VAR_1 [ VAR_3 ] ) ) ) ) ; } return VAR_2 . toString ( ) ; } } ; ) ( toString . VAR_2 return } ; ) ) ) ) ] VAR_3 [ VAR_1 , STRING_2 ( METHOD_3 . java.lang.String ( + STRING_1 ( ( append . VAR_2 { ) ++ VAR_3 ; ) length . VAR_1 ( < VAR_3 ; 0 = VAR_3 int ( for ; ) ( TYPE_1 new = VAR_2 TYPE_1 ; ) ( METHOD_2 . id = VAR_1 ] [ byte { ) id org.ovirt.engine.core.compat.Guid ( METHOD_1 java.lang.String public 
private void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( STRING_1 , METHOD_3 ( ) . name ( ) . METHOD_4 ( ) ) ; VAR_2 . METHOD_2 ( STRING_2 , TYPE_3 . METHOD_5 ( ) . getName ( ) ) ; VAR_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; VAR_3 . log ( VAR_2 , VAR_1 ) ; } } ; ) VAR_1 , VAR_2 ( log . VAR_3 ; ) ) ( METHOD_7 . TYPE_3 ( METHOD_6 . VAR_2 ; ) ) ( getName . ) ( METHOD_5 . TYPE_3 , STRING_2 ( METHOD_2 . VAR_2 ; ) ) ( METHOD_4 . ) ( name . ) ( METHOD_3 , STRING_1 ( METHOD_2 . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 { ) VAR_1 AuditLogType . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( VAR_2 . getModel ( ) . getSelectedItem ( ) ) == null ) { METHOD_2 ( ) . METHOD_3 ( ) ; return ; } METHOD_2 ( ) . METHOD_4 ( VAR_2 . getModel ( ) ) ; METHOD_2 ( ) . METHOD_5 ( true ) ; METHOD_6 ( VAR_2 ) ; METHOD_7 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_7 ; ) VAR_2 ( METHOD_6 ; ) true ( METHOD_5 . ) ( METHOD_2 ; ) ) ( getModel . VAR_2 ( METHOD_4 . ) ( METHOD_2 } ; return ; ) ( METHOD_3 . ) ( METHOD_2 { ) null == ) ) ( getSelectedItem . ) ( getModel . VAR_2 ( ( if { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; boolean VAR_2 = ! ( VAR_1 . equals ( STRING_1 ) ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) VAR_1 ( METHOD_3 ; ) VAR_2 ( METHOD_2 ; ) ) STRING_1 ( equals . VAR_1 ( ! = VAR_2 boolean ; ) ) returnValue ( ) java.lang.String ( ( = VAR_1 java.lang.String { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_4 = VAR_5 . METHOD_4 ( VAR_6 ) ; TYPE_2 . assertEquals ( STRING_1 , 1 , VAR_4 . size ( ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_4 . METHOD_6 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( METHOD_6 . VAR_4 , STRING_2 ( METHOD_5 . TYPE_2 ; ) ) ( size . VAR_4 , 1 , STRING_1 ( assertEquals . TYPE_2 ; ) VAR_6 ( METHOD_4 . VAR_5 = VAR_4 > org.ovirt.engine.core.compat.Guid < java.util.List ; ) VAR_3 ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . VAR_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { return ( VAR_1 . METHOD_2 ( ) ) < ( VAR_2 . METHOD_2 ( ) ) ? - 1 : ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 . METHOD_2 ( ) ) ? 0 : 1 ; } } ; 1 : 0 ? ) ) ( METHOD_2 . VAR_2 ( == ) ) ( METHOD_2 . VAR_1 ( : 1 - ? ) ) ( METHOD_2 . VAR_2 ( < ) ) ( METHOD_2 . VAR_1 ( return { ) VAR_2 TYPE_1 , VAR_1 TYPE_1 ( METHOD_1 int public 
public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.util.List < TYPE_3 > VAR_1 ) throws TYPE_4 { final TYPE_5 VAR_2 = new TYPE_5 ( VAR_1 ) ; for ( final TYPE_3 VAR_3 : VAR_1 ) { this . VAR_4 . METHOD_2 ( VAR_3 , VAR_2 ) ; } this . METHOD_3 ( ) . METHOD_4 ( TYPE_6 . METHOD_5 ( VAR_1 ) ) ; METHOD_6 ( VAR_1 , VAR_2 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_2 , VAR_1 ( METHOD_6 ; ) ) VAR_1 ( METHOD_5 . TYPE_6 ( METHOD_4 . ) ( METHOD_3 . this } ; ) VAR_2 , VAR_3 ( METHOD_2 . VAR_4 . this { ) VAR_1 : VAR_3 TYPE_3 final ( for ; ) VAR_1 ( TYPE_5 new = VAR_2 TYPE_5 final { TYPE_4 throws ) VAR_1 > TYPE_3 < java.util.List ( METHOD_1 > > TYPE_2 < java.util.List < TYPE_1 public 
public static < TYPE_1 > java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > METHOD_1 ( java.util.ArrayList < TYPE_1 > list ) { java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > VAR_1 = new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > ( ) ; if ( list ! = null ) { for ( TYPE_1 item : list ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > model = new org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > ( ) ; model . setEntity ( item ) ; VAR_1 . add ( model ) ; } } return VAR_1 ; } } ; VAR_1 return } } ; ) model ( add . VAR_1 ; ) item ( setEntity . model ; ) ( > TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel new = model > TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel { ) list : item TYPE_1 ( for { ) null = ! list ( if ; ) ( > > TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.util.ArrayList new = VAR_1 > > TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.util.ArrayList { ) list > TYPE_1 < java.util.ArrayList ( METHOD_1 > > TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.util.ArrayList > TYPE_1 < static public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; final org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 , VAR_1 , TYPE_2 . name ( ) ) ; METHOD_4 ( VAR_3 , new TYPE_3 ( VAR_1 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_1 ( TYPE_3 new , VAR_3 ( METHOD_4 ; ) ) ( name . TYPE_2 , VAR_1 , STRING_1 ( METHOD_3 . VAR_2 ; ) ( METHOD_2 . TYPE_1 = VAR_1 org.ovirt.engine.core.compat.Guid final ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public boolean equals ( java.lang.Object other ) { if ( ( other ! = null ) & & ( other instanceof TYPE_1 ) ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( other ) ) ; return ( VAR_2 . equals ( VAR_1 . METHOD_1 ( ) ) ) & & ( ( VAR_3 ) == ( VAR_1 . METHOD_2 ( ) ) ) ; } return false ; } } ; false return } ; ) ) ) ( METHOD_2 . VAR_1 ( == ) VAR_3 ( ( & & ) ) ) ( METHOD_1 . VAR_1 ( equals . VAR_2 ( return ; ) ) other ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) ) TYPE_1 instanceof other ( & & ) null = ! other ( ( if { ) other java.lang.Object ( equals boolean public 
void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { this . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_1 . size ( ) ) ; int VAR_3 = 0 ; for ( TYPE_1 VAR_4 : VAR_1 ) { METHOD_4 ( VAR_3 , 0 , METHOD_5 ( VAR_4 ) ) ; METHOD_4 ( VAR_3 , 1 , METHOD_6 ( VAR_4 ) ) ; METHOD_4 ( VAR_3 , 2 , METHOD_7 ( VAR_4 ) ) ; METHOD_4 ( VAR_3 , INT_1 , METHOD_8 ( VAR_4 ) ) ; VAR_3 ++ ; } } } } ; ++ VAR_3 ; ) ) VAR_4 ( METHOD_8 , INT_1 , VAR_3 ( METHOD_4 ; ) ) VAR_4 ( METHOD_7 , 2 , VAR_3 ( METHOD_4 ; ) ) VAR_4 ( METHOD_6 , 1 , VAR_3 ( METHOD_4 ; ) ) VAR_4 ( METHOD_5 , 0 , VAR_3 ( METHOD_4 { ) VAR_1 : VAR_4 TYPE_1 ( for ; 0 = VAR_3 int ; ) ) ( size . VAR_1 ( METHOD_3 . VAR_2 ; ) true ( METHOD_2 . this { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { org.ovirt.engine.core.compat.Guid VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 == null ) || ( TYPE_3 . equals ( VAR_3 ) ) ) { VAR_3 = TYPE_2 . METHOD_3 ( VAR_1 ) ; } VAR_2 = VAR_3 ; } return VAR_2 ; } } ; VAR_2 return } ; VAR_3 = VAR_2 } ; ) VAR_1 ( METHOD_3 . TYPE_2 = VAR_3 { ) ) ) VAR_3 ( equals . TYPE_3 ( || ) null == VAR_3 ( ( if ; ) VAR_1 ( METHOD_2 . TYPE_2 = VAR_3 org.ovirt.engine.core.compat.Guid { ) null == ) VAR_2 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 org.ovirt.engine.core.compat.Guid private 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > VAR_2 = new java.util.HashMap < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > ( ) ; VAR_2 . put ( STRING_1 , VAR_1 ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; return VAR_3 ; } } ; VAR_3 return ; ) ( METHOD_3 ; ) VAR_2 ( METHOD_2 . TYPE_1 = VAR_3 > java.lang.Object , java.lang.String < java.util.Map ; ) VAR_1 , STRING_1 ( put . VAR_2 ; ) ( > > java.lang.Object , java.lang.String < java.util.Map , java.lang.String < java.util.HashMap new = VAR_2 > > java.lang.Object , java.lang.String < java.util.Map , java.lang.String < java.util.Map { ) VAR_1 > java.lang.Object , java.lang.String < java.util.Map ( METHOD_1 > java.lang.Object , java.lang.String < java.util.Map private 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; final TYPE_1 model = METHOD_3 ( 0 ) ; model . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 [ 2 ] ) ) ; model . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; try { METHOD_8 ( resource . METHOD_9 ( model ) , 0 ) ; METHOD_10 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_11 ( VAR_3 , VAR_4 ) ; } } } } ; ) VAR_4 , VAR_3 ( METHOD_11 { ) VAR_3 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_10 ; ) 0 , ) model ( METHOD_9 . resource ( METHOD_8 { try ; ) ) ( METHOD_7 . TYPE_2 ( METHOD_6 . model ; ) ) ] 2 [ VAR_2 ( METHOD_5 . TYPE_2 ( METHOD_4 . model ; ) 0 ( METHOD_3 = model TYPE_1 final ; ) ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . getId ( ) , VAR_3 , TYPE_2 . METHOD_2 ( VAR_4 , STRING_1 ) ) ; VAR_2 . METHOD_3 ( true ) ; TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_5 , VAR_2 , TYPE_4 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . TYPE_4 , VAR_2 , VAR_5 ( METHOD_4 . ) ( getInstance . TYPE_3 ; ) true ( METHOD_3 . VAR_2 ; ) ) STRING_1 , VAR_4 ( METHOD_2 . TYPE_2 , VAR_3 , ) ( getId . VAR_1 ( TYPE_1 new = VAR_2 TYPE_1 { ) VAR_1 org.ovirt.engine.core.common.businessentities.VDS ( METHOD_1 void private 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( result ) ) ; if ( ( VAR_1 . METHOD_1 ( ) ) ! = null ) { METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; } else { METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; } METHOD_3 ( ) ; } } ; ) ( METHOD_3 } ; ) ) ( > TYPE_2 < java.util.ArrayList new ( METHOD_2 { else } ; ) ) ( METHOD_1 . VAR_1 ( METHOD_2 { ) null = ! ) ) ( METHOD_1 . VAR_1 ( ( if ; ) ) result ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) result java.lang.Object , model java.lang.Object ( onSuccess void public 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_3 . METHOD_6 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ) ; model . METHOD_7 ( new TYPE_4 ( ) ) ; return model ; } } ; model return ; ) ) ( TYPE_4 new ( METHOD_7 . model ; ) ) ) class VAR_3 ( METHOD_3 . TYPE_2 ( METHOD_6 . TYPE_3 ( METHOD_5 . model ; ) ) class VAR_2 ( METHOD_3 . TYPE_2 ( METHOD_4 . model ; ) ) class VAR_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . model { ) model Disk . TYPE_1 ( METHOD_1 Disk . TYPE_1 protected 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , TYPE_3 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_4 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; VAR_4 . METHOD_1 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; for ( TYPE_1 iface : VAR_1 ) { METHOD_6 ( iface ) ; } } } } ; ) iface ( METHOD_6 { ) VAR_1 : iface TYPE_1 ( for ; ) ) ( METHOD_5 . org.ovirt.engine.core.compat.Guid ( METHOD_1 . VAR_4 ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_4 ( METHOD_4 . VAR_2 ( org.mockito.Mockito.when ; ) ) ( METHOD_3 . TYPE_3 , ) ( METHOD_3 . TYPE_3 ( METHOD_2 . TYPE_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( VAR_2 ) . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_6 ( VAR_1 ) ) . thenReturn ( METHOD_7 ( VAR_7 ) ) ; } } ; ) ) VAR_7 ( METHOD_7 ( thenReturn . ) ) VAR_1 ( METHOD_6 . VAR_5 ( org.mockito.Mockito.when ; ) ( METHOD_5 . ) command ( when . ) VAR_6 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) VAR_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ) class Guid . VAR_3 ( any . TYPE_1 ( get . ) VAR_2 ( when . ) cluster ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; getModel ( ) . METHOD_1 ( ) . setItems ( VAR_1 ) ; if ( VAR_1 ! = null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . getId ( ) . equals ( VAR_3 ) ) { getModel ( ) . METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; break ; } } } } } } } } ; break ; ) VAR_2 ( setSelectedItem . ) ( METHOD_1 . ) ( getModel { ) ) VAR_3 ( equals . ) ( getId . VAR_2 ( if { ) VAR_1 : VAR_2 TYPE_1 ( for { ) null = ! VAR_1 ( if ; ) VAR_1 ( setItems . ) ( METHOD_1 . ) ( getModel ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = VAR_1 > TYPE_1 < java.util.List { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_4 , VAR_5 . METHOD_3 ( ) , new java.lang.String [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_7 [ 1 ] } , METHOD_4 ( VAR_3 ) , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . VAR_8 ; ) VAR_2 , ) VAR_3 ( METHOD_4 , } ] 1 [ VAR_7 { ] [ java.lang.Object new , } VAR_6 { ] [ java.lang.String new , ) ( METHOD_3 . VAR_5 , VAR_4 ( METHOD_2 ; ) VAR_1 , STRING_1 ( assertEquals { java.lang.Exception throws ) VAR_3 org.ovirt.engine.core.compat.Guid , VAR_2 java.lang.Object , VAR_1 java.lang.String ( METHOD_1 void protected 
protected void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . any ( VAR_2 . VM class ) , TYPE_1 . METHOD_4 ( VAR_3 . String class ) , TYPE_1 . any ( VAR_4 class ) , TYPE_1 . METHOD_4 ( VAR_2 . Disk class ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( VAR_1 ) . METHOD_5 ( TYPE_1 . any ( VAR_2 . VM class ) ) ; } } ; ) ) class VM . VAR_2 ( any . TYPE_1 ( METHOD_5 . ) VAR_1 ( when . ) false ( org.mockito.Mockito.doReturn ; ) ) class Disk . VAR_2 ( METHOD_4 . TYPE_1 , ) class VAR_4 ( any . TYPE_1 , ) class String . VAR_3 ( METHOD_4 . TYPE_1 , ) class VM . VAR_2 ( any . TYPE_1 ( METHOD_3 . ) VAR_1 ( when . ) true ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { TYPE_2 . METHOD_6 ( vm ) ; TYPE_3 . METHOD_7 ( vm . METHOD_8 ( ) , new TYPE_4 ( ) ) ; TYPE_5 . METHOD_9 ( vm ) ; } TYPE_1 . METHOD_10 ( ) . METHOD_11 ( vms ) ; } } ; ) vms ( METHOD_11 . ) ( METHOD_10 . TYPE_1 } ; ) vm ( METHOD_9 . TYPE_5 ; ) ) ( TYPE_4 new , ) ( METHOD_8 . vm ( METHOD_7 . TYPE_3 ; ) vm ( METHOD_6 . TYPE_2 { ) vms : vm org.ovirt.engine.core.common.businessentities.VM ( for ; ) ) ( METHOD_5 . ) ( getParameters . TYPE_1 ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = vms > org.ovirt.engine.core.common.businessentities.VM < java.util.List { ) ( METHOD_1 void protected 
public void METHOD_1 ( final TYPE_1 < org.ovirt.engine.core.compat.Guid > VAR_1 ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( ) { public void METHOD_3 ( ) { for ( org.ovirt.engine.core.compat.Guid vmId : VAR_1 ) { TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_2 , new TYPE_5 ( vmId ) ) ; } } } ) ; } } ; ) } } } ; ) ) vmId ( TYPE_5 new , VAR_2 ( METHOD_4 . ) ( getInstance . TYPE_4 { ) VAR_1 : vmId org.ovirt.engine.core.compat.Guid ( for { ) ( METHOD_3 void public { ) ( TYPE_3 new ( METHOD_2 . TYPE_2 { ) VAR_1 > org.ovirt.engine.core.compat.Guid < TYPE_1 final ( METHOD_1 void public 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = STRING_1 ; if ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) & & ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { if ( VAR_3 . METHOD_3 ( VAR_1 ) ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 ) ; result = ( VAR_4 . METHOD_3 ( VAR_2 ) ) ? VAR_4 . get ( VAR_2 ) : VAR_2 ; } else { VAR_5 . METHOD_4 ( VAR_6 , VAR_1 ) ; } } return result ; } } ; result return } } ; ) VAR_1 , VAR_6 ( METHOD_4 . VAR_5 { else } ; VAR_2 : ) VAR_2 ( get . VAR_4 ? ) ) VAR_2 ( METHOD_3 . VAR_4 ( = result ; ) VAR_1 ( get . VAR_3 = VAR_4 > java.lang.String , java.lang.String < java.util.HashMap { ) ) VAR_1 ( METHOD_3 . VAR_3 ( if { ) ) ) VAR_2 ( METHOD_2 . TYPE_1 ( & & ) ) VAR_1 ( METHOD_2 . TYPE_1 ( ( if ; STRING_1 = result java.lang.String { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String private 
protected boolean METHOD_1 ( ) { boolean result ; if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) result = false ; else if ( ! ( TYPE_1 . METHOD_4 ( ) ) ) result = true ; else if ( METHOD_2 ( ) . METHOD_5 ( ) ) result = true ; else result = false ; return result ; } } ; result return ; false = result else ; true = result ) ) ( METHOD_5 . ) ( METHOD_2 ( if else ; true = result ) ) ) ( METHOD_4 . TYPE_1 ( ! ( if else ; false = result ) ) VAR_1 ( == ) ) ( METHOD_3 . ) ( METHOD_2 ( ( if ; result boolean { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; TYPE_2 VAR_3 = ( ( VAR_2 . size ( ) ) > 0 ) ? VAR_2 . get ( 0 ) : null ; VAR_1 . METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 . VAR_1 ; null : ) 0 ( get . VAR_2 ? ) 0 > ) ) ( size . VAR_2 ( ( = VAR_3 TYPE_2 ; ) ) returnValue ( ) > TYPE_2 < java.util.ArrayList ( ( = VAR_2 > TYPE_2 < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) { double VAR_1 = INT_1 * ( TYPE_1 . METHOD_2 ( INT_2 , 2 ) ) ; int VAR_2 = TYPE_2 . METHOD_3 ( ( ( long ) ( VAR_1 ) ) , VAR_3 , VAR_4 ) . METHOD_4 ( ) ; TYPE_3 . assertEquals ( VAR_2 , INT_1 ) ; } } ; ) INT_1 , VAR_2 ( assertEquals . TYPE_3 ; ) ( METHOD_4 . ) VAR_4 , VAR_3 , ) ) VAR_1 ( ) long ( ( ( METHOD_3 . TYPE_2 = VAR_2 int ; ) ) 2 , INT_2 ( METHOD_2 . TYPE_1 ( * INT_1 = VAR_1 double { ) ( METHOD_1 void public 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . getStoragePoolId ( ) . getValue ( ) ; TYPE_1 params = new TYPE_1 ( VAR_2 , VAR_3 ) ; params . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; return TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_4 , params ) . getSucceeded ( ) ; } } ; ) ( getSucceeded . ) params , VAR_4 ( METHOD_5 . ) ( METHOD_4 . TYPE_2 return ; ) ) ( METHOD_3 . ) ( getParameters . TYPE_2 ( METHOD_2 . params ; ) VAR_3 , VAR_2 ( TYPE_1 new = params TYPE_1 ; ) ( getValue . ) ( getStoragePoolId . VAR_1 = VAR_3 org.ovirt.engine.core.compat.Guid ; ) ( getId . VAR_1 = VAR_2 org.ovirt.engine.core.compat.Guid { ) VAR_1 org.ovirt.engine.core.common.businessentities.StorageDomain ( METHOD_1 boolean protected 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel model ) { this . model = model ; VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 item : VAR_2 ) { if ( ( item . METHOD_3 ( ) ) & & ( item . METHOD_4 ( ) ) ) { VAR_1 . METHOD_5 ( item ) ; } } model . METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ; model . METHOD_6 ( ) . METHOD_8 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_8 . ) ( METHOD_6 . model ; ) VAR_3 ( METHOD_7 . ) ( METHOD_6 . model } } ; ) item ( METHOD_5 . VAR_1 { ) ) ) ( METHOD_4 . item ( & & ) ) ( METHOD_3 . item ( ( if { ) VAR_2 : item TYPE_1 ( for ; ) ( METHOD_2 . VAR_1 ; model = model . this { ) model org.ovirt.engine.ui.uicommonweb.models.EntityModel ( METHOD_1 void public 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , null , null , false ) , null ) ) ; METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cluster ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_7 ( ) ; TYPE_3 . METHOD_8 ( command . validate ( ) ) ; } } ; ) ) ( validate . command ( METHOD_8 . TYPE_3 ; ) ( METHOD_7 . ) command ( when . ) vds ( org.mockito.Mockito.doReturn ; ) ( METHOD_6 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ( METHOD_5 . ) cluster ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 ; ) ) null , ) false , null , null , ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid , VAR_2 , VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = command { ) ( METHOD_1 void public 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 . RunVmCommand < TYPE_2 > VAR_3 = METHOD_2 ( ) ; METHOD_3 ( VAR_3 ) ; TYPE_2 VAR_4 = command . getParameters ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_3 . METHOD_6 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = VAR_5 . get ( command . getParameters ( ) . METHOD_7 ( ) ) ; return vm ; } } ; vm return ; ) ) ( METHOD_7 . ) ( getParameters . command ( get . VAR_5 = vm org.ovirt.engine.core.common.businessentities.VM ; ) ( METHOD_6 . VAR_3 ; ) VAR_2 ( METHOD_5 . VAR_4 ; ) VAR_1 ( METHOD_4 . VAR_4 ; ) ( getParameters . command = VAR_4 TYPE_2 ; ) VAR_3 ( METHOD_3 ; ) ( METHOD_2 = VAR_3 > TYPE_2 < RunVmCommand . TYPE_1 { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . Network ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } } ; ) ) ) ) ( getReturnValue . ) ( METHOD_5 . VAR_4 ( == ) VAR_5 ( ( ( METHOD_4 . TYPE_3 ; ) ( METHOD_3 . VAR_4 ; ) VAR_1 ( METHOD_2 = VAR_4 > TYPE_1 < TYPE_2 ; ) Network . VAR_3 , ) ) VAR_2 ( + STRING_1 ( ( TYPE_1 new = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; java.util.Map < java.lang.String , java.lang.Object > disk = new java.util.HashMap < > ( ) ; disk . put ( VAR_2 , VAR_3 ) ; VAR_1 . put ( STRING_1 , disk ) ; VAR_1 . put ( STRING_2 , disk ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_4 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_4 , false ) ; } } ; ) false , VAR_4 , ) ( METHOD_4 . TYPE_1 ( METHOD_3 . TYPE_1 ; ) VAR_1 ( METHOD_2 . TYPE_1 = VAR_4 > java.lang.Object , java.lang.String < java.util.Map ; ) disk , STRING_2 ( put . VAR_1 ; ) disk , STRING_1 ( put . VAR_1 ; ) VAR_3 , VAR_2 ( put . disk ; ) ( > < java.util.HashMap new = disk > java.lang.Object , java.lang.String < java.util.Map ; ) ( > < java.util.HashMap new = VAR_1 > java.lang.Object , java.lang.String < java.util.Map { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( ( ! ( model . METHOD_4 ( ) ) ) ) ; METHOD_2 ( model . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . model ( METHOD_2 ; ) ) ) ) ( METHOD_4 . model ( ! ( ( METHOD_2 ; ) ) ( METHOD_3 . model ( METHOD_2 ; ) ) ( getId . model , ) ( toString . ] VAR_1 [ VAR_2 ( assertEquals { ) VAR_1 int , model Disk . TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_5 = VAR_4 . METHOD_3 ( VAR_1 , true ) ; TYPE_5 . METHOD_4 ( ( STRING_2 + VAR_1 ) , VAR_5 . METHOD_5 ( ) ) ; java.lang.String VAR_6 = VAR_3 . METHOD_6 ( VAR_5 , true ) ; VAR_7 . METHOD_7 ( VAR_2 ) ; VAR_7 . METHOD_7 ( VAR_6 ) ; TYPE_5 . assertEquals ( VAR_2 , VAR_6 ) ; } } ; ) VAR_6 , VAR_2 ( assertEquals . TYPE_5 ; ) VAR_6 ( METHOD_7 . VAR_7 ; ) VAR_2 ( METHOD_7 . VAR_7 ; ) true , VAR_5 ( METHOD_6 . VAR_3 = VAR_6 java.lang.String ; ) ) ( METHOD_5 . VAR_5 , ) VAR_1 + STRING_2 ( ( METHOD_4 . TYPE_5 ; ) true , VAR_1 ( METHOD_3 . VAR_4 = VAR_5 TYPE_4 ; ) STRING_1 ( METHOD_2 . TYPE_3 = VAR_4 TYPE_2 ; ) INT_1 ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_2 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_2 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_2 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . TYPE_2 ( METHOD_8 . ) ) ( METHOD_7 . org.mockito.Mockito , VAR_2 ( METHOD_6 . org.mockito.Mockito ; ) ) ( METHOD_3 . TYPE_2 ( METHOD_2 . ) VAR_2 ( METHOD_6 . org.mockito.Mockito ; ) ) ( METHOD_5 . cmd ( METHOD_4 . TYPE_3 ; ) ) ( METHOD_3 . TYPE_2 ( METHOD_2 . ) VAR_2 ( when . ) ) VAR_1 ( ValidationResult . TYPE_1 new ( org.mockito.Mockito.doReturn { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( final TYPE_2 iface ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( iface . METHOD_3 ( ) . getValue ( ) ) ; VAR_1 . METHOD_4 ( STRING_1 , iface . METHOD_5 ( ) ) ; VAR_1 . METHOD_4 ( STRING_2 , iface . getName ( ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ( getName . iface , STRING_2 ( METHOD_4 . VAR_1 ; ) ) ( METHOD_5 . iface , STRING_1 ( METHOD_4 . VAR_1 ; ) ) ( getValue . ) ( METHOD_3 . iface ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) iface TYPE_2 final ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( VAR_3 < java.lang.Boolean > METHOD_5 ( VAR_4 ) ) { VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_6 ( ) ; } else { VAR_2 . METHOD_7 ( ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; } VAR_1 . METHOD_2 ( STRING_4 ) ; } } ; ) STRING_4 ( METHOD_2 . VAR_1 } ; ) STRING_3 ( METHOD_2 . VAR_1 ; ) ( METHOD_7 . VAR_2 { else } ; ) ( METHOD_6 . VAR_2 ; ) STRING_2 ( METHOD_2 . VAR_1 { ) ) VAR_4 ( METHOD_5 > java.lang.Boolean < VAR_3 ( if ; ) ( TYPE_1 new = VAR_2 TYPE_1 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) ) ; org.mockito.Mockito.when ( cluster . METHOD_4 ( ) ) . thenReturn ( true ) ; validator = new TYPE_2 ( VAR_3 , VAR_4 , cluster , VAR_5 ) ; TYPE_3 . METHOD_5 ( validator . METHOD_1 ( ) , TYPE_4 . METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 . TYPE_4 , ) ( METHOD_1 . validator ( METHOD_5 . TYPE_3 ; ) VAR_5 , cluster , VAR_4 , VAR_3 ( TYPE_2 new = validator ; ) true ( thenReturn . ) ) ( METHOD_4 . cluster ( org.mockito.Mockito.when ; ) ) INT_1 ( METHOD_3 . ) ( instance . TYPE_1 , VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ( ( org.ovirt.engine.core.compat.Guid ) ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ) ) ( METHOD_4 . ) ( getParameters . TYPE_1 ( ) org.ovirt.engine.core.compat.Guid ( ( ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 > org.ovirt.engine.core.common.businessentities.VM < java.util.List private 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { final java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . getId ( ) ) ; final TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_4 = VAR_2 . METHOD_3 ( ) . map ( TYPE_3 : : METHOD_4 ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ( ( VAR_4 . size ( ) ) > 1 ? null : VAR_4 . METHOD_8 ( ) . METHOD_9 ( ) ) ) ; } } ; ) ) ) ( METHOD_9 . ) ( METHOD_8 . VAR_4 : null ? 1 > ) ) ( size . VAR_4 ( ( ( METHOD_7 . VAR_1 ; ) ) ( METHOD_6 . TYPE_4 ( METHOD_5 . ) METHOD_4 : : TYPE_3 ( map . ) ( METHOD_3 . VAR_2 = VAR_4 > org.ovirt.engine.core.compat.Guid < TYPE_2 final ; ) ) ( getId . VAR_1 ( METHOD_2 . VAR_3 = VAR_2 > TYPE_1 < java.util.List final { ) VAR_1 org.ovirt.engine.core.common.businessentities.StoragePool ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > list = new TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ; list . add ( new TYPE_2 ( ) ) ; list . add ( new TYPE_3 ( ) ) ; list . add ( new TYPE_4 ( ) ) ; list . add ( new TYPE_5 ( ) ) ; list . add ( new TYPE_6 ( ) ) ; METHOD_2 ( list ) ; } } ; ) list ( METHOD_2 ; ) ) ( TYPE_6 new ( add . list ; ) ) ( TYPE_5 new ( add . list ; ) ) ( TYPE_4 new ( add . list ; ) ) ( TYPE_3 new ( add . list ; ) ) ( TYPE_2 new ( add . list ; ) ( > org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 new = list > org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; java.util.List < java.lang.String > VAR_2 = getReturnValue ( ) . METHOD_2 ( ) ; java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_3 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > ( ) ; VAR_1 = METHOD_3 ( VAR_2 , VAR_3 ) ; if ( VAR_1 & & ( getParameters ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } return VAR_1 & & ( METHOD_6 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } } ; ) ) VAR_3 , VAR_2 , VAR_1 ( METHOD_6 ( & & VAR_1 return } ; ) ( METHOD_5 { ) ) ) ( METHOD_4 . ) ( getParameters ( & & VAR_1 ( if ; ) VAR_3 , VAR_2 ( METHOD_3 = VAR_1 ; ) ( > TYPE_1 , org.ovirt.engine.core.compat.Guid < java.util.HashMap new = VAR_3 > TYPE_1 , org.ovirt.engine.core.compat.Guid < java.util.Map ; ) ( METHOD_2 . ) ( getReturnValue = VAR_2 > java.lang.String < java.util.List ; true = VAR_1 boolean { ) ( METHOD_1 boolean protected 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < TYPE_1 > VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_5 . put ( VAR_1 , VAR_4 ) ; VAR_4 . METHOD_2 ( VAR_6 ) ; VAR_4 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; VAR_4 . METHOD_7 ( VAR_7 ) ; } } ; ) VAR_7 ( METHOD_7 . VAR_4 ; ) VAR_3 ( METHOD_6 . VAR_4 ; ) VAR_2 ( METHOD_5 . VAR_4 ; ) ) ( METHOD_4 ( METHOD_3 . VAR_4 ; ) VAR_6 ( METHOD_2 . VAR_4 ; ) VAR_4 , VAR_1 ( put . VAR_5 ; ) ( TYPE_3 new = VAR_4 TYPE_3 { ) VAR_3 TYPE_2 , VAR_2 > TYPE_1 < java.util.ArrayList , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void private 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) ! = null ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_5 ( ) ) ; if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . get ( TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) ) ) ! = null ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) ) ; } } super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super } } ; ) ) ( METHOD_7 . ) ( METHOD_2 . TYPE_1 ( METHOD_4 . ) ( METHOD_6 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance { ) null = ! ) ) ) ( METHOD_7 . ) ( METHOD_2 . TYPE_1 ( get . ) ( METHOD_6 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ( if ; ) ) ( METHOD_5 . ) ( METHOD_2 . TYPE_1 ( METHOD_4 . ) ( METHOD_3 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance { ) null = ! ) ) ( METHOD_2 . TYPE_1 ( ( if { ) ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : null ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 ! = null ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_3 , aQuery ) ; } } ; ) aQuery , VAR_3 , VAR_4 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance } ; ) VAR_1 ( METHOD_3 . VAR_3 { ) null = ! VAR_1 ( if ; ) VAR_2 ( METHOD_2 . VAR_3 ; ) ( TYPE_1 new = VAR_3 TYPE_1 ; } } ; null : ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_2 java.lang.String , VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat . Version version = VAR_1 . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VDS vds = VAR_1 . METHOD_3 ( ) ; if ( ( ( ( TYPE_3 . METHOD_4 ( version ) ) & & ( ( VAR_2 ) == ( vds . METHOD_5 ( ) ) ) ) & & ( TYPE_3 . METHOD_6 ( version ) ) ) & & ( TYPE_3 . METHOD_7 ( version ) ) ) { return new TYPE_4 ( VAR_1 ) ; } return new TYPE_5 ( VAR_1 ) ; } } ; ) VAR_1 ( TYPE_5 new return } ; ) VAR_1 ( TYPE_4 new return { ) ) ) version ( METHOD_7 . TYPE_3 ( & & ) ) ) version ( METHOD_6 . TYPE_3 ( & & ) ) ) ) ( METHOD_5 . vds ( == ) VAR_2 ( ( & & ) ) version ( METHOD_4 . TYPE_3 ( ( ( ( if ; ) ( METHOD_3 . VAR_1 = vds org.ovirt.engine.core.common.businessentities.VDS ; ) ( METHOD_2 . VAR_1 = version Version . org.ovirt.engine.core.compat { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 ( assertEquals . TYPE_3 ; ) ( METHOD_3 . VAR_1 = VAR_3 TYPE_2 final ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( TYPE_2 new = VAR_2 TYPE_2 final ; ) ( TYPE_1 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 2 ] } , METHOD_4 ( ) ) ; super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super ; ) ) ( METHOD_4 , } ] 2 [ VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_3 ; ) 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 cluster = new TYPE_1 ( ) ; cluster . METHOD_4 ( VAR_1 ) ; cluster . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_8 ( TYPE_3 . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . TYPE_3 ( METHOD_8 . ) cmd ( when . ) true ( org.mockito.Mockito.doReturn ; ) ( METHOD_7 . ) cmd ( when . ) cluster ( org.mockito.Mockito.doReturn ; ) ) ( METHOD_6 . TYPE_2 ( METHOD_5 . cluster ; ) VAR_1 ( METHOD_4 . cluster ; ) ( TYPE_1 new = cluster TYPE_1 ; ) VAR_1 ( METHOD_3 . ) ( getVm . ) ( getParameters . cmd ; ) ( METHOD_2 { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ! = null ) { VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , null , new TYPE_2 < java.lang.String > ( VAR_1 . METHOD_5 ( ) ) ) ; } VAR_3 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . TYPE_1 ( METHOD_6 . VAR_3 } ; ) ) ) ( METHOD_5 . VAR_1 ( > java.lang.String < TYPE_2 new , null , ) ( METHOD_4 . TYPE_1 ( METHOD_3 . VAR_2 { ) null = ! VAR_1 ( if ; ) ( METHOD_2 = VAR_1 > java.lang.String , org.ovirt.engine.core.compat.Guid < java.util.Map { ) ( METHOD_1 void private 
public boolean equals ( java.lang.Object VAR_1 ) { return ( ( VAR_1 ! = null ) & & ( ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) ) ) & & ( map . equals ( ( ( TYPE_1 ) ( VAR_1 ) ) . map ) ) ; } } ; ) ) map . ) ) VAR_1 ( ) TYPE_1 ( ( ( equals . map ( & & ) ) ) ) ( METHOD_1 . VAR_1 ( == ) ) ( METHOD_1 ( ( & & ) null = ! VAR_1 ( ( return { ) VAR_1 java.lang.Object ( equals boolean public 
private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_1 , TYPE_2 { TYPE_3 context = null ; try { context = new TYPE_3 ( ) ; TYPE_4 . METHOD_2 ( context ) . METHOD_3 ( VAR_3 , new TYPE_5 ( VAR_1 , VAR_2 ) ) ; } finally { try { context . METHOD_4 ( ) ; } catch ( TYPE_2 e ) { VAR_4 . error ( ( STRING_1 + STRING_2 ) , e ) ; } } } } } } ; ) e , ) STRING_2 + STRING_1 ( ( error . VAR_4 { ) e TYPE_2 ( catch } ; ) ( METHOD_4 . context { try { finally } ; ) ) VAR_2 , VAR_1 ( TYPE_5 new , VAR_3 ( METHOD_3 . ) context ( METHOD_2 . TYPE_4 ; ) ( TYPE_3 new = context { try ; null = context TYPE_3 { TYPE_2 , TYPE_1 throws ) VAR_2 int , VAR_1 java.lang.String ( METHOD_1 void private 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 . VdcQueryReturnValue returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) ; java.lang.Object VAR_2 = returnValue . getReturnValue ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( VAR_2 ) ) ; this . VAR_3 = VAR_3 ; METHOD_2 ( ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) ( METHOD_2 ; VAR_3 = VAR_3 . this ; ) ) VAR_2 ( ) > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.List ( ( = VAR_3 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.List ; ) ( getReturnValue . returnValue = VAR_2 java.lang.Object ; ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_1 ( ( = returnValue VdcQueryReturnValue . TYPE_1 { ) VAR_1 java.lang.Object , model java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( org.mockito.Mockito . METHOD_7 ( VAR_3 . VDS class ) ) ) ; TYPE_3 . METHOD_8 ( validator . METHOD_9 ( ) , TYPE_4 . METHOD_10 ( VAR_4 ) ) ; } } ; ) ) VAR_4 ( METHOD_10 . TYPE_4 , ) ( METHOD_9 . validator ( METHOD_8 . TYPE_3 ; ) ) ) class VDS . VAR_3 ( METHOD_7 . org.mockito.Mockito ( METHOD_6 . TYPE_2 ( thenReturn . ) ) ) ( METHOD_5 . TYPE_1 ( METHOD_4 . VAR_2 ( org.mockito.Mockito.when ; ) ) ( METHOD_3 ( thenReturn . ) ) ( METHOD_2 . host ( org.mockito.Mockito.when ; ) ) ( METHOD_3 ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_2 ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_3 ) ) { METHOD_4 ( ) ; } else if ( METHOD_5 ( ) . equals ( command ) ) { METHOD_6 ( ) ; } else if ( METHOD_7 ( ) . equals ( command ) ) { METHOD_8 ( ) ; } } } } ; ) ( METHOD_8 { ) ) command ( equals . ) ( METHOD_7 ( if else } ; ) ( METHOD_6 { ) ) command ( equals . ) ( METHOD_5 ( if else } ; ) ( METHOD_4 { ) ) TYPE_3 , ) ( getName . command ( METHOD_2 . TYPE_1 ( if else } ; ) ( METHOD_3 { ) ) TYPE_2 , ) ( getName . command ( METHOD_2 . TYPE_1 ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { boolean VAR_4 = VAR_5 . getModel ( ) . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; } TYPE_4 . METHOD_4 ( this , this ) ; } } ; ) this , this ( METHOD_4 . TYPE_4 } ; ) VAR_4 ( METHOD_3 ; ) ( METHOD_2 . ) ( getModel . VAR_5 = VAR_4 boolean { ) ) VAR_3 ( equals . STRING_1 ( if ; ) ) args ( ) TYPE_3 ( ( = VAR_2 TYPE_3 { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( int VAR_1 ) { try { TYPE_1 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( METHOD_3 ( ) , METHOD_6 ( ) . get ( VAR_1 ) . getId ( ) ) ; } catch ( TYPE_2 e ) { VAR_2 . METHOD_7 ( STRING_1 , METHOD_6 ( ) . get ( VAR_1 ) . getName ( ) , METHOD_8 ( ) . METHOD_9 ( ) , e ) ; } } } } ; ) e , ) ( METHOD_9 . ) ( METHOD_8 , ) ( getName . ) VAR_1 ( get . ) ( METHOD_6 , STRING_1 ( METHOD_7 . VAR_2 { ) e TYPE_2 ( catch } ; ) ) ( getId . ) VAR_1 ( get . ) ( METHOD_6 , ) ( METHOD_3 ( METHOD_5 . ) ) ( METHOD_4 . ) ( METHOD_3 ( METHOD_2 . ) ( getInstance . TYPE_1 { try { ) VAR_1 int ( METHOD_1 void public 
private java.util.List < java.lang.Integer > METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.Integer > VAR_2 = new java.util.ArrayList < java.lang.Integer > ( ) ; int VAR_3 = METHOD_2 ( ) ; for ( int i = 1 ; i < = ( TYPE_1 . METHOD_3 ( VAR_3 , VAR_1 ) ) ; i ++ ) { if ( ( VAR_3 % i ) == 0 ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } } ; VAR_2 return } } ; ) i ( add . VAR_2 { ) 0 == ) i % VAR_3 ( ( if { ) ++ i ; ) ) VAR_1 , VAR_3 ( METHOD_3 . TYPE_1 ( = < i ; 1 = i int ( for ; ) ( METHOD_2 = VAR_3 int ; ) ( > java.lang.Integer < java.util.ArrayList new = VAR_2 > java.lang.Integer < java.util.List { ) VAR_1 int ( METHOD_1 > java.lang.Integer < java.util.List private 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String name , java.lang.Boolean VAR_1 , java.lang.String VAR_2 , java.lang.Integer VAR_3 , java.lang.String VAR_4 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; iface . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; iface . METHOD_3 ( name ) ; iface . METHOD_4 ( VAR_1 ) ; iface . METHOD_5 ( VAR_2 ) ; iface . METHOD_6 ( VAR_3 ) ; iface . METHOD_7 ( VAR_4 ) ; return iface ; } } ; iface return ; ) VAR_4 ( METHOD_7 . iface ; ) VAR_3 ( METHOD_6 . iface ; ) VAR_2 ( METHOD_5 . iface ; ) VAR_1 ( METHOD_4 . iface ; ) name ( METHOD_3 . iface ; ) ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( setId . iface ; ) ( VdsNetworkInterface . org.ovirt.engine.core.common.businessentities new = iface VdsNetworkInterface . org.ovirt.engine.core.common.businessentities { ) VAR_4 java.lang.String , VAR_3 java.lang.Integer , VAR_2 java.lang.String , VAR_1 java.lang.Boolean , name java.lang.String ( METHOD_1 VdsNetworkInterface . org.ovirt.engine.core.common.businessentities private 
private boolean METHOD_1 ( TYPE_1 . VdcQueryReturnValue returnValue , TYPE_2 model ) { model . METHOD_2 ( null ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { model . METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( returnValue . METHOD_5 ( ) ) ) ; METHOD_6 ( ) . setEntity ( false ) ; return true ; } return false ; } } ; false return } ; true return ; ) false ( setEntity . ) ( METHOD_6 ; ) ) ) ( METHOD_5 . returnValue ( METHOD_4 . ) ( METHOD_3 . org.ovirt.engine.ui.frontend.Frontend ( METHOD_2 . model { ) ) ) ( getSucceeded . returnValue ( ! ( if ; ) null ( METHOD_2 . model { ) model TYPE_2 , returnValue VdcQueryReturnValue . TYPE_1 ( METHOD_1 boolean private 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name , boolean VAR_1 ) { final org.ovirt.engine.core.common.businessentities.StorageDomain domain = METHOD_2 ( status , name , VAR_2 ) ; domain . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( domain ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return domain ; } } ; domain return ; ) ) ( org.ovirt.engine.core.common.businessentities.StoragePool new ( METHOD_6 . cmd ; ) ) domain ( METHOD_5 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_4 . VAR_3 ( org.mockito.Mockito.when ; ) VAR_1 ( METHOD_3 . domain ; ) VAR_2 , name , status ( METHOD_2 = domain org.ovirt.engine.core.common.businessentities.StorageDomain final { ) VAR_1 boolean , name java.lang.String , status TYPE_1 ( METHOD_1 org.ovirt.engine.core.common.businessentities.StorageDomain private 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_5 ( command ) ; } } ; ) command ( METHOD_5 . TYPE_2 ; ) ) ( METHOD_3 . TYPE_1 ( METHOD_4 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ( > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList new = VAR_2 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.List ; ) TYPE_1 ( thenReturn . ) ) ) ( METHOD_3 . TYPE_1 ( get . VAR_1 ( org.mockito.Mockito.when ; ) TYPE_1 ( METHOD_2 . parameters { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } } ; ) ) ) ( METHOD_4 . ) ( METHOD_3 . VAR_3 , VAR_2 ( METHOD_2 . TYPE_2 ( METHOD_1 . VAR_1 ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList ( ( = VAR_2 > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( true , vmId ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . getId ( ) ) == null ) { VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } VAR_4 . METHOD_4 ( vmId ) ; VAR_3 . add ( VAR_4 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_4 ( add . VAR_3 ; ) vmId ( METHOD_4 . VAR_4 } ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( setId . VAR_4 { ) null == ) ) ( getId . VAR_4 ( ( if { ) VAR_1 : VAR_4 TYPE_1 ( for ; ) vmId , true ( METHOD_2 . VAR_3 ; ) ( TYPE_3 new = VAR_3 TYPE_3 { ) VAR_2 TYPE_2 , VAR_1 > TYPE_1 < java.util.List , vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 void protected 
private void METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.Integer > VAR_2 = METHOD_2 ( VAR_3 ) ; java.util.List < java.lang.Integer > VAR_4 = METHOD_2 ( VAR_5 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; for ( java.lang.Integer VAR_6 : VAR_2 ) { for ( java.lang.Integer VAR_7 : VAR_4 ) { if ( ( VAR_6 * VAR_7 ) == VAR_1 ) { getModel ( ) . METHOD_4 ( ) . setSelectedItem ( VAR_7 ) ; getModel ( ) . METHOD_5 ( ) . setSelectedItem ( VAR_6 ) ; return ; } } } } } } } } ; return ; ) VAR_6 ( setSelectedItem . ) ( METHOD_5 . ) ( getModel ; ) VAR_7 ( setSelectedItem . ) ( METHOD_4 . ) ( getModel { ) VAR_1 == ) VAR_7 * VAR_6 ( ( if { ) VAR_4 : VAR_7 java.lang.Integer ( for { ) VAR_2 : VAR_6 java.lang.Integer ( for ; ) VAR_2 ( METHOD_3 . TYPE_1 ; ) VAR_5 ( METHOD_2 = VAR_4 > java.lang.Integer < java.util.List ; ) VAR_3 ( METHOD_2 = VAR_2 > java.lang.Integer < java.util.List { ) VAR_1 int ( METHOD_1 void private 
private static void METHOD_1 ( TYPE_1 vm , int VAR_1 ) { for ( int VAR_2 = 1 ; VAR_2 < = VAR_1 ; VAR_2 ++ ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vm . getId ( ) ) , VAR_3 , VAR_4 , TYPE_2 . METHOD_4 ( ) , true , false ) ; } } } } ; ) false , true , ) ( METHOD_4 . TYPE_2 , VAR_4 , VAR_3 , ) ) ( getId . vm , ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( TYPE_3 new ( METHOD_2 . TYPE_2 { ) ++ VAR_2 ; VAR_1 = < VAR_2 ; 1 = VAR_2 int ( for { ) VAR_1 int , vm TYPE_1 ( METHOD_1 void static private 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 . DiskImage disk ) { if ( ! ( disk . METHOD_2 ( ) ) ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( disk . getId ( ) , false ) ; if ( ! ( vms . isEmpty ( ) ) ) { return vms . get ( 0 ) ; } } return null ; } } ; null return } } ; ) 0 ( get . vms return { ) ) ) ( isEmpty . vms ( ! ( if ; ) false , ) ( getId . disk ( METHOD_4 . ) ( METHOD_3 . TYPE_2 = vms > org.ovirt.engine.core.common.businessentities.VM < java.util.List { ) ) ) ( METHOD_2 . disk ( ! ( if { ) disk DiskImage . TYPE_1 ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM private 
public java.lang.Object METHOD_1 ( java.lang.Object id ) throws TYPE_1 { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 . VM class , VAR_2 , METHOD_3 ( VAR_3 , id ) , id . toString ( ) ) ; TYPE_2 model = new TYPE_2 ( ) ; model . setId ( vm . getId ( ) . toString ( ) ) ; return TYPE_3 . METHOD_4 ( METHOD_5 ( ) , model ) ; } } ; ) model , ) ( METHOD_5 ( METHOD_4 . TYPE_3 return ; ) ) ( toString . ) ( getId . vm ( setId . model ; ) ( TYPE_2 new = model TYPE_2 ; ) ) ( toString . id , ) id , VAR_3 ( METHOD_3 , VAR_2 , class VM . VAR_1 ( METHOD_2 = vm org.ovirt.engine.core.common.businessentities.VM { TYPE_1 throws ) id java.lang.Object ( METHOD_1 java.lang.Object public 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( from . METHOD_4 ( ) ) ; } if ( from . METHOD_5 ( ) ) { to . METHOD_6 ( from . METHOD_7 ( ) ) ; } return to ; } } ; to return } ; ) ) ( METHOD_7 . from ( METHOD_6 . to { ) ) ( METHOD_5 . from ( if } ; ) ) ( METHOD_4 . from ( METHOD_3 . to { ) ) ( METHOD_2 . from ( if ; ) ( TYPE_1 new = to TYPE_1 { ) from TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_2 ( VAR_1 . getId ( ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_2 ( VAR_2 . getId ( ) ) ; TYPE_1 . assertEquals ( validator . METHOD_3 ( ) , VAR_3 ) ; } } ; ) VAR_3 , ) ( METHOD_3 . validator ( assertEquals . TYPE_1 ; ) ) ( getId . VAR_2 ( METHOD_2 . ) validator ( when . ) true ( org.mockito.Mockito.doReturn ; ) ) ( getId . VAR_1 ( METHOD_2 . ) validator ( when . ) true ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( STRING_1 , TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) , TYPE_1 . METHOD_5 ( ) . METHOD_8 ( ) , ( ( TYPE_1 . METHOD_9 ( ) ) ! = null ? TYPE_1 . METHOD_9 ( ) . METHOD_8 ( ) : STRING_2 ) ) ; } } ; ) ) STRING_2 : ) ( METHOD_8 . ) ( METHOD_9 . TYPE_1 ? null = ! ) ) ( METHOD_9 . TYPE_1 ( ( , ) ( METHOD_8 . ) ( METHOD_5 . TYPE_1 , ) ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 . TYPE_1 , STRING_1 ( METHOD_4 . VAR_1 ; ) ( METHOD_3 ; ) true ( METHOD_2 { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 . VM entity ) { TYPE_3 < java.lang.String > VAR_1 = TYPE_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_1 , model ) ; if ( VAR_1 . METHOD_4 ( STRING_1 ) ) { METHOD_5 ( model , entity , VAR_3 ) ; } VAR_4 . METHOD_6 ( model ) ; VAR_4 . METHOD_7 ( model ) ; TYPE_5 . METHOD_8 ( model , this ) ; return model ; } } ; model return ; ) this , model ( METHOD_8 . TYPE_5 ; ) model ( METHOD_7 . VAR_4 ; ) model ( METHOD_6 . VAR_4 } ; ) VAR_3 , entity , model ( METHOD_5 { ) ) STRING_1 ( METHOD_4 . VAR_1 ( if ; ) model , VAR_1 ( METHOD_3 . VAR_4 ; ) VAR_3 , VAR_2 ( METHOD_2 . TYPE_4 = VAR_1 > java.lang.String < TYPE_3 { ) entity VM . TYPE_2 , model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . METHOD_2 ( ) ) . thenReturn ( org.mockito.Mockito . METHOD_3 ( VAR_1 . Version class ) ) ; validator = org.mockito.Mockito . METHOD_4 ( new TYPE_1 ( VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_5 ( TYPE_2 . any ( VAR_4 class ) ) ; TYPE_3 . METHOD_6 ( validator . METHOD_1 ( TYPE_4 . instance ( ) . METHOD_7 ( VAR_4 class ) ) , TYPE_5 . METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 . TYPE_5 , ) ) class VAR_4 ( METHOD_7 . ) ( instance . TYPE_4 ( METHOD_1 . validator ( METHOD_6 . TYPE_3 ; ) ) class VAR_4 ( any . TYPE_2 ( METHOD_5 . ) validator ( when . ) true ( org.mockito.Mockito.doReturn ; ) ) VAR_3 , cluster , VAR_2 ( TYPE_1 new ( METHOD_4 . org.mockito.Mockito = validator ; ) ) class Version . VAR_1 ( METHOD_3 . org.mockito.Mockito ( thenReturn . ) ) ( METHOD_2 . cluster ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery aQuery = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; aQuery . METHOD_2 ( this ) ; VAR_1 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_2 ! = null ) & & ( ( VAR_2 . length ( ) ) > 0 ) ) { METHOD_3 ( ) . setEntity ( VAR_2 ) ; } } } ; TYPE_1 . METHOD_4 ( aQuery ) ; } } ; ) aQuery ( METHOD_4 . TYPE_1 ; } } } ; ) VAR_2 ( setEntity . ) ( METHOD_3 { ) ) 0 > ) ) ( length . VAR_2 ( ( & & ) null = ! VAR_2 ( ( if ; ) ) result ( ) java.lang.String ( ( = VAR_2 java.lang.String { ) result java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_1 ; ) this ( METHOD_2 . aQuery ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = aQuery org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < java.lang.String > VAR_1 = TYPE_2 . METHOD_2 ( INT_1 , null ) ; TYPE_3 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; for ( java.lang.String VAR_2 : TYPE_4 . METHOD_4 ( STRING_1 ) ) { TYPE_3 . METHOD_3 ( VAR_1 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ) ; } } } } ; ) ) ) ( METHOD_6 . VAR_2 ( METHOD_5 . VAR_1 ( METHOD_3 . TYPE_3 { ) ) STRING_1 ( METHOD_4 . TYPE_4 : VAR_2 java.lang.String ( for ; ) ) 2 == ) ) ( size . VAR_1 ( ( ( METHOD_3 . TYPE_3 ; ) null , INT_1 ( METHOD_2 . TYPE_2 = VAR_1 > java.lang.String < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( ( ( TYPE_2 . METHOD_2 ( ) ) ! = null ) & & ( ( TYPE_2 . METHOD_3 ( ) ) ! = null ) ) & & ( ! ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) . equals ( VAR_2 ) ) ) ) { VAR_1 . add ( new TYPE_1 ( TYPE_2 . METHOD_3 ( ) , VAR_3 , VAR_4 ) ) ; } } } } ; ) ) VAR_4 , VAR_3 , ) ( METHOD_3 . TYPE_2 ( TYPE_1 new ( add . VAR_1 { ) ) ) ) VAR_2 ( equals . ) ( METHOD_4 . ) ( METHOD_2 . TYPE_2 ( ! ( & & ) ) null = ! ) ) ( METHOD_3 . TYPE_2 ( ( & & ) null = ! ) ) ( METHOD_2 . TYPE_2 ( ( ( ( if { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 } ; return { ) null == VAR_3 ( if } ; ) ) ( toString . ) ( getId . VAR_2 ( METHOD_1 . VAR_3 { ) VAR_1 : VAR_2 TYPE_1 ( for ; ) ) returnValue ( ) > TYPE_1 < java.util.List ( ( = VAR_1 > TYPE_1 < java.util.List { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > , TYPE_2 < java.lang.String > > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_4 ( VAR_5 ) , VAR_1 ) ; } } ; ) VAR_1 , ) VAR_5 ( TYPE_4 new , VAR_4 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ) ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_3 ( ( ( ) > > java.lang.String < TYPE_2 , > Version . org.ovirt.engine.core.compat , java.lang.Integer < TYPE_1 < java.util.Map ( ( = VAR_3 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void static public 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) ! = ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( vmId , other . vmId ) ) & & ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) ; } } ; ) ) VAR_2 , VAR_1 ( equals . TYPE_2 ( & & ) ) vmId . other , vmId ( equals . TYPE_2 ( return ; ) ) obj ( ) TYPE_1 ( ( = other TYPE_1 } ; false return { ) ) ) ( METHOD_1 . obj ( = ! ) ) ( METHOD_1 ( ( if } ; false return { ) null == obj ( if } ; true return { ) obj == ) this ( ( if { ) obj java.lang.Object ( equals boolean public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , vm . METHOD_2 ( ) ) ; model . METHOD_3 ( model , VAR_3 , VAR_2 , vm . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( vm . getId ( ) ) ; } } ; ) ) ( getId . vm ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ) ( METHOD_4 . vm , VAR_2 , VAR_3 , model ( METHOD_3 . model ; ) ) ( METHOD_2 . vm , VAR_1 ( METHOD_1 . TYPE_2 = VAR_2 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_2 . getParameters ( ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_2 ) . METHOD_4 ( VAR_1 ) ; VAR_2 . validate ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_2 ( METHOD_5 . org.mockito.Mockito ; ) ( validate . VAR_2 ; ) VAR_1 ( METHOD_4 . ) VAR_2 ( when . ) true ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_3 . ) ( getParameters . VAR_2 ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_5 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , VAR_3 ) ) ; return VAR_4 ; } } ; VAR_4 return ; ) ) VAR_3 , STRING_4 ( addValue . ) VAR_2 , STRING_3 ( addValue . ) VAR_1 , STRING_2 ( addValue . ) ( METHOD_4 , VAR_5 , STRING_1 ( METHOD_3 . ) ( METHOD_2 = VAR_4 TYPE_1 { ) VAR_3 java.lang.String , VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 public 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) ) ! = null ) { this . VAR_1 . METHOD_2 ( TYPE_1 . getVm ( ) . getId ( ) ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } } ; ) true ( METHOD_5 . TYPE_1 ; ) ( METHOD_4 ; ) ( METHOD_3 } ; ) ) ( getId . ) ( getVm . TYPE_1 ( METHOD_2 . VAR_1 . this { ) null = ! ) ) ( getVm . TYPE_1 ( ( if { ) ( METHOD_1 void protected 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_1 . ValidationResult VAR_2 = VAR_3 ; VAR_2 = ( METHOD_2 ( VAR_2 ) ) ? VAR_2 : METHOD_3 ( ) ; VAR_2 = ( METHOD_2 ( VAR_2 ) ) ? VAR_2 : METHOD_4 ( VAR_1 ) ; VAR_2 = ( METHOD_2 ( VAR_2 ) ) ? VAR_2 : METHOD_5 ( VAR_1 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_1 ( METHOD_5 : VAR_2 ? ) ) VAR_2 ( METHOD_2 ( = VAR_2 ; ) VAR_1 ( METHOD_4 : VAR_2 ? ) ) VAR_2 ( METHOD_2 ( = VAR_2 ; ) ( METHOD_3 : VAR_2 ? ) ) VAR_2 ( METHOD_2 ( = VAR_2 ; VAR_3 = VAR_2 ValidationResult . TYPE_1 { ) VAR_1 > TYPE_3 < TYPE_2 ( METHOD_1 ValidationResult . TYPE_1 private 
private void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 < java.lang.Boolean > METHOD_4 ( VAR_2 ) ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; TYPE_1 . METHOD_7 ( ) . METHOD_8 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; METHOD_9 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ; TYPE_1 . METHOD_10 ( null ) ; } } ; ) null ( METHOD_10 . TYPE_1 ; ) ) ( getId . ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( METHOD_9 ; ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( METHOD_8 . ) ( METHOD_7 . TYPE_1 ; ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( METHOD_6 . ) ( METHOD_5 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ; ) ) VAR_2 ( METHOD_4 > java.lang.Boolean < VAR_1 ( METHOD_3 . ) ( METHOD_2 . ) ( getParameters . TYPE_1 { ) ( METHOD_1 void private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_1 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; null : ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; getModel ( ) . METHOD_1 ( ) . setEntity ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; getModel ( ) . METHOD_2 ( ( VAR_1 . isEmpty ( ) ? new TYPE_1 ( ) : VAR_1 . get ( 0 ) ) ) ; } } ; ) ) ) 0 ( get . VAR_1 : ) ( TYPE_1 new ? ) ( isEmpty . VAR_1 ( ( METHOD_2 . ) ( getModel ; ) ) ) ) ( isEmpty . VAR_1 ( ! ( ( setEntity . ) ( METHOD_1 . ) ( getModel ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = VAR_1 > TYPE_1 < java.util.List { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( 1 , VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; try { METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_8 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } } } ; ) ( METHOD_8 . VAR_2 { finally } ; ) VAR_4 , VAR_8 , VAR_7 ( METHOD_7 { ) VAR_7 TYPE_5 ( catch } ; ) STRING_1 ( METHOD_6 . TYPE_4 ; ) ( METHOD_5 { try ; ) VAR_1 ( METHOD_4 . VAR_6 ; ) VAR_4 , 1 ( METHOD_3 ; ) VAR_5 ( TYPE_3 new = VAR_4 TYPE_2 ; ) VAR_3 ( add . VAR_2 ; ) null ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( false ) ; if ( ( TYPE_1 . getVm ( ) ) ! = null ) { TYPE_1 . getVm ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . getVm ( ) . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getVm ( ) . METHOD_7 ( ) ) ; } else { VAR_2 . METHOD_8 ( STRING_1 ) ; } METHOD_9 ( true ) ; } } ; ) true ( METHOD_9 } ; ) STRING_1 ( METHOD_8 . VAR_2 { else } ; ) ) ( METHOD_7 . ) ( getVm . TYPE_1 ( METHOD_6 . ) ( METHOD_5 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ; ) null ( METHOD_4 . ) ( getVm . TYPE_1 ; ) VAR_1 ( METHOD_3 . ) ( getVm . TYPE_1 { ) null = ! ) ) ( getVm . TYPE_1 ( ( if ; ) false ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void protected 
private TYPE_1 < java.util.List < org.ovirt.engine.core.compat.Guid > , org.ovirt.engine.core.compat.Guid > METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = METHOD_2 ( ) . METHOD_3 ( new TYPE_3 [ ] { TYPE_3 . VDS , VAR_2 } ) ; return VAR_1 . METHOD_4 ( cluster , hosts , cluster . METHOD_5 ( ) , new java.util.ArrayList < java.lang.String > ( ) ) ; } } ; ) ) ( > java.lang.String < java.util.ArrayList new , ) ( METHOD_5 . cluster , hosts , cluster ( METHOD_4 . VAR_1 return ; ) } VAR_2 , VDS . TYPE_3 { ] [ TYPE_3 new ( METHOD_3 . ) ( METHOD_2 = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.List { ) cluster org.ovirt.engine.core.common.businessentities.VDSGroup , VAR_1 TYPE_2 ( METHOD_1 > org.ovirt.engine.core.compat.Guid , > org.ovirt.engine.core.compat.Guid < java.util.List < TYPE_1 private 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . getSelectedItem ( ) ) ! = null ) { TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . METHOD_4 ( hosts ) ; } } ) ) ; } } } } ; ) ) } } ; ) hosts ( METHOD_4 . VAR_1 ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ( ( = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ; ) ) target ( ) TYPE_2 ( ( = VAR_1 TYPE_2 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_3 . TYPE_1 { ) null = ! ) ) ( getSelectedItem . ) ( METHOD_2 ( ( if { ) ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( METHOD_2 ( ) ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ! = ( VAR_1 ) ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( true ) ; TYPE_1 . METHOD_7 ( ) . METHOD_8 ( TYPE_1 . METHOD_5 ( ) . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_9 ( true ) ; } } } } ; ) true ( METHOD_9 . TYPE_1 } ; ) ) ( METHOD_5 . ) ( METHOD_5 . TYPE_1 ( METHOD_8 . ) ( METHOD_7 . TYPE_1 ; ) true ( METHOD_6 . ) ( METHOD_5 . TYPE_1 { ) ) VAR_1 ( = ! ) ) ( METHOD_4 . ) ( METHOD_3 . ) ( getParameters . TYPE_1 ( ( if { ) ) ( METHOD_2 ( if ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 < TYPE_3 > > VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList ( VAR_1 . METHOD_2 ( ) ) ; for ( TYPE_2 < TYPE_3 > VAR_4 : VAR_2 ) { VAR_3 = TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 ) ; } return ! ( VAR_3 . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . VAR_3 ( ! return } ; ) VAR_4 , VAR_3 ( METHOD_3 . TYPE_4 = VAR_3 { ) VAR_2 : VAR_4 > TYPE_3 < TYPE_2 ( for ; ) ) ( METHOD_2 . VAR_1 ( java.util.ArrayList new = VAR_3 > TYPE_3 < java.util.List { ) VAR_2 > > TYPE_3 < TYPE_2 < java.util.List , VAR_1 TYPE_1 ( METHOD_1 boolean private 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; METHOD_3 ( ) . setEntity ( TYPE_3 . METHOD_6 ( VAR_2 ) ) ; } } } } ; ) ) VAR_2 ( METHOD_6 . TYPE_3 ( setEntity . ) ( METHOD_3 ; ) true ( setIsChangable . ) ( METHOD_3 { else } ; ) false ( setEntity . ) ( METHOD_3 ; ) false ( setIsChangable . ) ( METHOD_3 ; ) ) ( METHOD_5 . TYPE_2 ( METHOD_4 . ) ( METHOD_3 { ) ) ( METHOD_2 . VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 void protected 
public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) ) { final java.lang.String VAR_1 = ( ( java.lang.String ) ( TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ) ; if ( ! ( VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ) ) { VAR_3 = VAR_2 . METHOD_7 ( ) ; } return VAR_2 . METHOD_5 ( ) . get ( VAR_1 ) ; } else { return VAR_2 . METHOD_5 ( ) . get ( VAR_3 ) ; } } } } ; ) VAR_3 ( get . ) ( METHOD_5 . VAR_2 return { else } ; ) VAR_1 ( get . ) ( METHOD_5 . VAR_2 return } ; ) ( METHOD_7 . VAR_2 = VAR_3 { ) ) ) VAR_1 ( METHOD_6 . ) ( METHOD_5 . VAR_2 ( ! ( if ; ) ) ) ) ( METHOD_4 . VAR_2 ( METHOD_3 . TYPE_1 ( ) java.lang.String ( ( = VAR_1 java.lang.String final { ) ) ( METHOD_2 ( if { ) ( METHOD_1 java.lang.String public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? source : new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_3 , aQuery ) ; } } ; ) aQuery , VAR_3 , VAR_4 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) VAR_2 , VAR_1 ( TYPE_1 new = VAR_3 TYPE_1 ; } } ; ) ( > > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap new : source ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected boolean validate ( TYPE_1 . ValidationResult VAR_1 ) { if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { addCanDoActionMessage ( VAR_1 . METHOD_2 ( ) ) ; if ( ( VAR_1 . METHOD_3 ( ) ) ! = null ) { for ( java.lang.String VAR_2 : VAR_1 . METHOD_3 ( ) ) { addCanDoActionMessage ( VAR_2 ) ; } } } return VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 return } } } ; ) VAR_2 ( addCanDoActionMessage { ) ) ( METHOD_3 . VAR_1 : VAR_2 java.lang.String ( for { ) null = ! ) ) ( METHOD_3 . VAR_1 ( ( if ; ) ) ( METHOD_2 . VAR_1 ( addCanDoActionMessage { ) ) ) ( METHOD_1 . VAR_1 ( ! ( if { ) VAR_1 ValidationResult . TYPE_1 ( validate boolean protected 
public int METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > VAR_1 , TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_3 ! = 0 ) { return VAR_3 ; } return VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_2 . VAR_2 ( METHOD_4 . ) ( METHOD_5 . ) ( METHOD_2 . VAR_1 return } ; VAR_3 return { ) 0 = ! VAR_3 ( if ; ) ) ( METHOD_3 . ) ( METHOD_2 . VAR_2 ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 = VAR_3 int { ) VAR_2 > org.ovirt.engine.core.common.businessentities.VDS , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < TYPE_1 , VAR_1 > org.ovirt.engine.core.common.businessentities.VDS , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < TYPE_1 ( METHOD_1 int public 
protected TYPE_1 METHOD_1 ( TYPE_1 nic , java.lang.String VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_2 ) { if ( i . getName ( ) . equals ( VAR_1 ) ) { nic . METHOD_2 ( ) . add ( METHOD_3 ( i . getId ( ) . toString ( ) ) ) ; break ; } } return nic ; } } ; nic return } } ; break ; ) ) ) ( toString . ) ( getId . i ( METHOD_3 ( add . ) ( METHOD_2 . nic { ) ) VAR_1 ( equals . ) ( getName . i ( if { ) VAR_2 : i VdsNetworkInterface . org.ovirt.engine.core.common.businessentities ( for { ) VAR_2 > VdsNetworkInterface . org.ovirt.engine.core.common.businessentities < java.util.List , VAR_1 java.lang.String , nic TYPE_1 ( METHOD_1 TYPE_1 protected 
protected TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_3 , METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) ) ; if ( VAR_2 . getSucceeded ( ) ) { TYPE_4 . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ( METHOD_8 . VAR_2 ( METHOD_7 . ) ( METHOD_6 . ) ( getReturnValue . TYPE_4 { ) ) ( getSucceeded . VAR_2 ( if ; ) ) ) ( METHOD_5 . TYPE_4 ( METHOD_4 . TYPE_3 , ) VAR_1 ( METHOD_3 , VAR_3 ( METHOD_2 . ) ( getInstance . TYPE_2 = VAR_2 TYPE_1 { ) VAR_1 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List ( METHOD_1 TYPE_1 protected 
public static TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.compat . Version version ) { if ( ! ( TYPE_3 . METHOD_2 ( version ) ) ) return VAR_2 ; if ( ( VAR_1 . METHOD_3 ( ) ) == null ) { return TYPE_4 . METHOD_4 ( VAR_1 ) ; } else { return new TYPE_5 ( VAR_1 . METHOD_3 ( ) ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; } } } } ; ) ) ( METHOD_6 . VAR_1 ( METHOD_5 . ) ) ( METHOD_3 . VAR_1 ( TYPE_5 new return { else } ; ) VAR_1 ( METHOD_4 . TYPE_4 return { ) null == ) ) ( METHOD_3 . VAR_1 ( ( if ; VAR_2 return ) ) ) version ( METHOD_2 . TYPE_3 ( ! ( if { ) version Version . org.ovirt.engine.core.compat , VAR_1 TYPE_2 ( METHOD_1 ValidationResult . TYPE_1 static public 
public java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { java.lang.String value = get ( VAR_1 , VAR_2 ) ; if ( ( value == null ) || ( value . isEmpty ( ) ) ) { return TYPE_2 . METHOD_2 ( ) ; } return TYPE_3 . METHOD_3 ( value . METHOD_4 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_4 . value ( METHOD_3 . TYPE_3 return } ; ) ( METHOD_2 . TYPE_2 return { ) ) ) ( isEmpty . value ( || ) null == value ( ( if ; ) VAR_2 , VAR_1 ( get = value java.lang.String { ) VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 > java.lang.String < java.util.List public 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getVm ( ) . METHOD_4 ( ) , getVm ( ) . getStatus ( ) ) ; getVm ( ) . METHOD_5 ( VAR_1 ) ; TYPE_1 . getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 , new TYPE_2 ( METHOD_8 ( ) , getVm ( ) . METHOD_4 ( ) ) ) ; METHOD_2 ( ) . METHOD_9 ( ) ; return null ; } } ; null return ; ) ( METHOD_9 . ) ( METHOD_2 ; ) ) ) ( METHOD_4 . ) ( getVm , ) ( METHOD_8 ( TYPE_2 new , VAR_2 ( METHOD_7 . ) ( METHOD_6 . ) ( getInstance . TYPE_1 ; ) VAR_1 ( METHOD_5 . ) ( getVm ; ) ) ( getStatus . ) ( getVm , ) ( METHOD_4 . ) ( getVm ( METHOD_3 . ) ( METHOD_2 { ) ( METHOD_1 java.lang.Object public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new TYPE_1 ( vm . getId ( ) ) ) ) ; setItems ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 ( setItems ; ) ) ) ) ( getId . vm ( TYPE_1 new , VAR_1 ( METHOD_3 . org.ovirt.engine.ui.frontend.Frontend ( METHOD_2 ; ) ( getEntity = vm org.ovirt.engine.core.common.businessentities.VM ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_8 ( ) ; TYPE_1 . METHOD_9 ( command . METHOD_10 ( ) ) ; } } ; ) ) ( METHOD_10 . command ( METHOD_9 . TYPE_1 ; ) ( METHOD_8 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_7 ; ) VAR_1 ( METHOD_6 ; ) ( METHOD_5 ; ) ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( METHOD_4 ; ) VAR_1 ( METHOD_3 ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 org.ovirt.engine.core.compat.Guid { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; final TYPE_1 VAR_2 = METHOD_3 ( 0 ) ; VAR_2 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_3 [ 2 ] ) ) ; try { VAR_4 . add ( VAR_2 ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { METHOD_9 ( VAR_5 , VAR_6 ) ; } } } } ; ) VAR_6 , VAR_5 ( METHOD_9 { ) VAR_5 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_8 ; ) VAR_2 ( add . VAR_4 { try ; ) ) ] 2 [ VAR_3 ( METHOD_7 . TYPE_2 ( METHOD_6 . VAR_2 ; ) ) ( METHOD_5 . TYPE_2 ( METHOD_4 . VAR_2 ; ) 0 ( METHOD_3 = VAR_2 TYPE_1 final ; ) ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { params = METHOD_2 ( ) ; command = org.mockito.Mockito . METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( params . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( params . METHOD_5 ( ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_7 ( ) ; } } ; ) ( METHOD_7 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) VAR_1 ( thenReturn . ) ) ) ( METHOD_5 . params ( get . VAR_2 ( org.mockito.Mockito.when ; ) ( METHOD_6 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ) ( METHOD_5 . params ( setId . VAR_1 ; ) ( TYPE_1 new = VAR_1 ; ) ) ( METHOD_4 ( METHOD_3 . org.mockito.Mockito = command ; ) ( METHOD_2 = params { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; for ( TYPE_3 VAR_2 : model . METHOD_4 ( ) . METHOD_4 ( ) ) { VAR_2 . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) . value ( ) ) ; VAR_2 . METHOD_6 ( null ) ; VAR_2 . METHOD_7 ( null ) ; } return model ; } } ; model return } ; ) null ( METHOD_7 . VAR_2 ; ) null ( METHOD_6 . VAR_2 ; ) ) ( value . ) class VAR_3 ( METHOD_3 . TYPE_2 ( METHOD_5 . VAR_2 { ) ) ( METHOD_4 . ) ( METHOD_4 . model : VAR_2 TYPE_3 ( for ; ) ) ( value . ) class VAR_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . model { ) model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { ( ( TYPE_3 . ViewDef ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( model . METHOD_4 ( ) . getSelectedItem ( ) ) ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ) ) ( getSelectedItem . ) ( METHOD_4 . model ( ) org.ovirt.engine.core.common.businessentities.StoragePool ( ( ( METHOD_3 . ) ) ) ( METHOD_2 ( ) ViewDef . TYPE_3 ( ( { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . METHOD_3 ( validator . METHOD_4 ( VAR_1 . getId ( ) ) , TYPE_4 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . TYPE_4 , ) ) ( getId . VAR_1 ( METHOD_4 . validator ( METHOD_3 . TYPE_3 ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_2 ( get . VAR_2 ( org.mockito.Mockito.when ; ) ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { if ( ! ( METHOD_2 ( ) ) ) { return ; } boolean VAR_3 = ( ! ( TYPE_1 . METHOD_3 ( this . VAR_1 , VAR_1 ) ) ) || ( ( this . VAR_2 ) ! = VAR_2 ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; if ( VAR_3 ) { METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 { ) VAR_3 ( if ; VAR_2 = VAR_2 . this ; VAR_1 = VAR_1 . this ; ) VAR_2 = ! ) VAR_2 . this ( ( || ) ) ) VAR_1 , VAR_1 . this ( METHOD_3 . TYPE_1 ( ! ( = VAR_3 boolean } ; return { ) ) ) ( METHOD_2 ( ! ( if { ) VAR_2 boolean , VAR_1 java.lang.String ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . get ( 0 ) . getId ( ) ) ; } } ; ) ) ( getId . ) 0 ( get . result , VAR_2 ( assertEquals . TYPE_1 ; ) ) ( size . result , 1 ( assertEquals . TYPE_1 ; ) ) ( isEmpty . result ( METHOD_4 . TYPE_1 ; ) result ( METHOD_3 . TYPE_1 ; ) VAR_1 ( METHOD_2 . dao = result > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.List { ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 result = new TYPE_1 ( ) ; result . append ( ( TYPE_2 . isEmpty ( VAR_1 ) ? STRING_1 : VAR_1 ) ) ; result . append ( ( ( result . length ( ) ) == 0 ? STRING_1 : STRING_2 ) ) ; result . append ( ( TYPE_2 . isEmpty ( VAR_2 ) ? STRING_1 : VAR_2 ) ) ; return result . toString ( ) ; } } ; ) ( toString . result return ; ) ) VAR_2 : STRING_1 ? ) VAR_2 ( isEmpty . TYPE_2 ( ( append . result ; ) ) STRING_2 : STRING_1 ? 0 == ) ) ( length . result ( ( ( append . result ; ) ) VAR_1 : STRING_1 ? ) VAR_1 ( isEmpty . TYPE_2 ( ( append . result ; ) ( TYPE_1 new = result TYPE_1 { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_1 = ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; model . METHOD_1 ( ) . setItems ( VAR_1 ) ; model . METHOD_1 ( ) . METHOD_2 ( VAR_1 . isEmpty ( ) ) ; model . METHOD_3 ( ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ( METHOD_3 . model ; ) ) ( isEmpty . VAR_1 ( METHOD_2 . ) ( METHOD_1 . model ; ) VAR_1 ( setItems . ) ( METHOD_1 . model ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_3 ( ( = VAR_1 > TYPE_2 < java.util.List ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_2 ( 0 ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 , false ) ; model . setId ( TYPE_3 . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_4 ( catch } ; ) STRING_1 ( METHOD_7 ; ) model ( METHOD_6 . resource { try ; ) ) ( toString . TYPE_3 ( setId . model ; ) false , 1 ( getModel . TYPE_2 = model TYPE_1 ; ) ( METHOD_5 . VAR_1 ; ) ) ( METHOD_4 ( METHOD_3 ; ) 0 ( METHOD_2 ; ) 0 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 [ ] VAR_1 ) { java.util.ArrayList < TYPE_1 > result = new java.util.ArrayList < TYPE_1 > ( VAR_1 . length ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { result . add ( TYPE_3 . METHOD_2 ( VAR_2 ) ) ; } return result ; } } ; result return } ; ) ) VAR_2 ( METHOD_2 . TYPE_3 ( add . result { ) VAR_1 : VAR_2 TYPE_2 ( for ; ) length . VAR_1 ( > TYPE_1 < java.util.ArrayList new = result > TYPE_1 < java.util.ArrayList { ) VAR_1 ] [ TYPE_2 ( METHOD_1 > TYPE_1 < java.util.ArrayList static public 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_3 . Disk , VAR_1 ) ) ; VAR_2 . METHOD_5 ( VAR_2 ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; TYPE_4 returnValue = METHOD_7 ( VAR_4 , VAR_2 ) ; if ( returnValue . getSucceeded ( ) ) { METHOD_8 ( returnValue . METHOD_9 ( ) ) ; } } } } ; ) ) ( METHOD_9 . returnValue ( METHOD_8 { ) ) ( getSucceeded . returnValue ( if ; ) VAR_2 , VAR_4 ( METHOD_7 = returnValue TYPE_4 ; ) VAR_4 ( METHOD_6 . VAR_2 ; ) VAR_2 ( METHOD_5 . VAR_2 ; ) ) VAR_1 , Disk . VAR_3 ( TYPE_3 new ( METHOD_4 . VAR_2 ; ) VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) < 0 ) ) ; TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_1 ) ) == 0 ) ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) ) > 0 ) ) ; } } ; ) ) 0 > ) ) VAR_1 ( METHOD_3 . VAR_2 ( ( ( METHOD_2 . TYPE_2 ; ) ) 0 == ) ) VAR_1 ( METHOD_3 . VAR_1 ( ( ( METHOD_2 . TYPE_2 ; ) ) 0 < ) ) VAR_2 ( METHOD_3 . VAR_1 ( ( ( METHOD_2 . TYPE_2 ; ) STRING_2 ( TYPE_1 new = VAR_2 TYPE_1 ; ) STRING_1 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { command = METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_1 . Version class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; } } ; ) ) class Guid . VAR_1 ( any . TYPE_1 ( METHOD_5 . ) command ( when . ) true ( org.mockito.Mockito.doReturn ; ) ) class Version . VAR_1 ( any . TYPE_1 ( METHOD_4 . ) command ( when . ) true ( org.mockito.Mockito.doReturn ; ) ) class Guid . VAR_1 ( any . TYPE_1 ( METHOD_3 . ) command ( when . ) true ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 = command { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_4 ( cmd . getReturnValue ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_4 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_4 ( METHOD_6 . ) ( METHOD_5 . ) ( getReturnValue . cmd ( METHOD_4 . TYPE_3 ; ) ) ( validate . cmd ( METHOD_3 . TYPE_3 ; ) ) ) null ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 = METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_6 = METHOD_3 ( VAR_7 ) ; VAR_6 . METHOD_4 ( VAR_5 ) ; VAR_6 . METHOD_5 ( VAR_2 ) ; METHOD_6 ( VAR_8 , VAR_9 ) ; METHOD_7 ( VAR_10 , org.ovirt.engine.core.compat.Guid . METHOD_8 ( ) , VAR_8 ) ; TYPE_2 . METHOD_9 ( command . validate ( ) ) ; } } ; ) ) ( validate . command ( METHOD_9 . TYPE_2 ; ) VAR_8 , ) ( METHOD_8 . org.ovirt.engine.core.compat.Guid , VAR_10 ( METHOD_7 ; ) VAR_9 , VAR_8 ( METHOD_6 ; ) VAR_2 ( METHOD_5 . VAR_6 ; ) VAR_5 ( METHOD_4 . VAR_6 ; ) VAR_7 ( METHOD_3 = VAR_6 org.ovirt.engine.core.common.businessentities.StorageDomain ; ) VAR_1 ( METHOD_5 . VAR_3 ; ) VAR_5 ( METHOD_4 . VAR_3 ; ) VAR_4 ( METHOD_3 = VAR_3 org.ovirt.engine.core.common.businessentities.StorageDomain ; ) ( METHOD_2 { ) VAR_2 TYPE_1 , VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; } } ; ) VAR_4 , ) ( METHOD_8 . cmd ( assertEquals . TYPE_4 ; ) ) class VAR_3 ( any . TYPE_3 ( METHOD_7 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_2 ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) null , true ( METHOD_4 ; ) ( METHOD_3 ; ) ) null , ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; TYPE_1 VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_5 , true ) ; TYPE_2 . METHOD_8 ( command . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . command ( METHOD_8 . TYPE_2 ; ) true , VAR_5 ( METHOD_7 ; ) ( METHOD_6 ; ) VAR_2 , VAR_1 , VAR_3 ( METHOD_5 = VAR_5 TYPE_1 ; ) ( METHOD_4 ; ) VAR_4 , VAR_3 ( METHOD_3 ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_3 org.ovirt.engine.core.compat.Guid ; INT_2 = VAR_2 int final ; INT_1 = VAR_1 int final { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_4 ) ; VAR_3 . METHOD_2 ( ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_3 ( ) . isEmpty ( ) ) ) ) ; return METHOD_4 ( VAR_3 , TYPE_3 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . TYPE_3 , VAR_3 ( METHOD_4 return ; ) ) ) ) ( isEmpty . ) ( METHOD_3 . ) ( getReturnValue . TYPE_3 ( ! ( ( METHOD_2 . VAR_3 ; ) VAR_4 , VAR_2 , VAR_1 ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 > TYPE_2 < java.util.List ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( vmId , VAR_1 ) ; cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_2 < TYPE_1 > ( params ) ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd , VAR_3 ) ; } } ; ) VAR_3 , cmd ( METHOD_6 . TYPE_3 ; ) ( METHOD_5 . ) cmd ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) cmd ( when . ) ( METHOD_3 . org.mockito.Mockito ; ) ) params ( > TYPE_1 < TYPE_2 new ( METHOD_2 . org.mockito.Mockito = cmd ; ) VAR_1 , vmId ( TYPE_1 new = params TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = STRING_1 ; java.util.ArrayList < java.lang.String > VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( STRING_2 , ( ( VAR_4 . size ( ) ) == 1 ) ) ; } } ; ) ) 1 == ) ) ( size . VAR_4 ( ( , STRING_2 ( METHOD_3 ; ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_2 = VAR_4 > java.lang.String < java.util.ArrayList ; STRING_1 = VAR_3 ; ) ( TYPE_1 new = VAR_2 TYPE_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_2 == null ) { return new TYPE_1 . ValidationResult ( VAR_3 , java.lang.String . METHOD_3 ( STRING_1 , STRING_2 , VAR_1 . toString ( ) ) ) ; } return VAR_4 ; } } ; VAR_4 return } ; ) ) ) ( toString . VAR_1 , STRING_2 , STRING_1 ( METHOD_3 . java.lang.String , VAR_3 ( ValidationResult . TYPE_1 new return { ) null == VAR_2 ( if ; ) VAR_1 ( get . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_2 TYPE_2 { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 ValidationResult . TYPE_1 static public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; } } ; ) aQuery , ) id ( TYPE_2 new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) id org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected boolean validate ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . getParameters ( ) . METHOD_1 ( ) ; if ( METHOD_2 ( ) ) { return METHOD_3 ( VAR_1 ) ; } else if ( ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) == ( VAR_2 ) ) { return METHOD_5 ( VAR_3 ) ; } return METHOD_6 ( ) ; } } ; ) ( METHOD_6 return } ; ) VAR_3 ( METHOD_5 return { ) ) VAR_2 ( == ) ) ( METHOD_4 . ) ( getParameters . TYPE_1 ( ( if else } ; ) VAR_1 ( METHOD_3 return { ) ) ( METHOD_2 ( if ; ) ( METHOD_1 . ) ( getParameters . TYPE_1 = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( validate boolean protected 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( vds . METHOD_3 ( ) ) ) { java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( VAR_1 ) ; VAR_5 . METHOD_5 ( VAR_2 ) ; if ( VAR_5 . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ) { return true ; } } return false ; } } ; false return } } ; true return { ) ) ) ( METHOD_7 . TYPE_2 ( METHOD_6 . VAR_5 ( if ; ) VAR_2 ( METHOD_5 . VAR_5 ; ) VAR_1 ( TYPE_2 new = VAR_5 TYPE_2 ; ) VAR_4 ( METHOD_4 > java.lang.Integer < VAR_3 = VAR_2 java.lang.Integer { ) ) ) ( METHOD_3 . vds ( == ) ) ( METHOD_2 . VAR_1 ( ( if { ) VAR_1 TYPE_1 , vds org.ovirt.engine.core.common.businessentities.VDS ( METHOD_1 boolean private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( command . validate ( ) ) ; TYPE_2 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_3 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_3 ( METHOD_11 . ) ( METHOD_10 . ) ( getReturnValue . command ( METHOD_9 . TYPE_2 ; ) ) ( validate . command ( METHOD_8 . TYPE_2 ; ) VAR_1 ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) false ( METHOD_4 ; ) ( METHOD_3 ; ) ) ( DiskImage . TYPE_1 new ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 , false ) ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_6 ( VAR_4 , false ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_1 ) . METHOD_8 ( TYPE_3 . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . TYPE_3 ( METHOD_8 . ) VAR_1 ( METHOD_7 . org.mockito.Mockito ; ) ) false , VAR_4 ( METHOD_6 . VAR_3 , STRING_1 ( METHOD_4 . TYPE_2 ; ) ) false , VAR_2 , VAR_4 ( METHOD_5 . VAR_3 , STRING_1 ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . VAR_3 ; ) ( METHOD_3 . VAR_3 ; ) VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_5 ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_6 ) ) . when ( VAR_5 ) . METHOD_6 ( VAR_6 ) ; } } ; ) VAR_6 ( METHOD_6 . ) VAR_5 ( when . ) ) VAR_6 ( METHOD_7 ( org.mockito.Mockito.doReturn ; ) VAR_4 ( METHOD_6 . ) VAR_5 ( when . ) ) VAR_4 ( METHOD_7 ( org.mockito.Mockito.doReturn ; ) VAR_3 ( METHOD_6 . ) VAR_1 ( when . ) ) VAR_3 ( METHOD_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) cmd ( when . ) ) VAR_2 ( METHOD_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) cmd ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 1 , true ) ; VAR_2 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_7 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_7 { ) VAR_3 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_6 ; ) ( get . resource { try ; ) ( METHOD_5 . VAR_2 ; ) true , 1 ( METHOD_4 ; ) VAR_1 ( METHOD_3 ; ) ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private boolean METHOD_1 ( ) { int VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) ? 0 : org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . getName ( ) , TYPE_2 . name ( ) ) ; if ( VAR_1 > 0 ) { addCanDoActionMessage ( VAR_2 ) ; TYPE_1 . METHOD_6 ( STRING_1 , VAR_1 ) ; return false ; } else { return true ; } } } } ; true return { else } ; false return ; ) VAR_1 , STRING_1 ( METHOD_6 . TYPE_1 ; ) VAR_2 ( addCanDoActionMessage { ) 0 > VAR_1 ( if ; ) ) ( name . TYPE_2 , ) ( getName . ) ( METHOD_5 . TYPE_1 ( METHOD_4 . ) ( METHOD_3 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance : 0 ? ) ) ( METHOD_2 . TYPE_1 ( = VAR_1 int { ) ( METHOD_1 boolean private 
private TYPE_1 METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; if ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) { parameters . METHOD_6 ( VAR_1 ) ; parameters . METHOD_7 ( TYPE_2 . METHOD_8 ( ) . get ( 0 ) . METHOD_9 ( ) ) ; } return parameters ; } } ; parameters return } ; ) ) ( METHOD_9 . ) 0 ( get . ) ( METHOD_8 . TYPE_2 ( METHOD_7 . parameters ; ) VAR_1 ( METHOD_6 . parameters { ) ) ( METHOD_5 . ) ( getParameters . TYPE_2 ( if ; ) ) ( METHOD_4 . ) ( getParameters . TYPE_2 ( METHOD_3 . parameters ; ) ( METHOD_2 = parameters TYPE_1 { ) ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { if ( STRING_1 . equals ( METHOD_2 ( ) . getEntity ( ) ) ) { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setSelectedItem ( STRING_1 ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; } } } } ; ) true ( setIsChangable . ) ( METHOD_3 { else } ; ) STRING_1 ( setSelectedItem . ) ( METHOD_3 ; ) false ( setIsChangable . ) ( METHOD_3 { ) ) ) ( getEntity . ) ( METHOD_2 ( equals . STRING_1 ( if { ) args TYPE_1 , sender java.lang.Object ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( STRING_1 . equals ( ( ( TYPE_3 ) ( args ) ) . VAR_2 ) ) { boolean value = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( value ) ; METHOD_5 ( ) . setEntity ( ( value & & ( ! ( TYPE_4 . METHOD_6 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getSelectedItem ( ) ) ) ) ) ) ) ) ; } } } } ; ) ) ) ) ) ) ) ) ( getSelectedItem . ) ( METHOD_3 ( ) java.lang.String ( ( ( METHOD_6 . TYPE_4 ( ! ( & & value ( ( setEntity . ) ( METHOD_5 ; ) value ( METHOD_4 . ) ( METHOD_3 ; ) ( METHOD_2 = value boolean { ) ) VAR_2 . ) ) args ( ) TYPE_3 ( ( ( equals . STRING_1 ( if { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
private boolean METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { return true ; } java.util.List < TYPE_1 . DiskImage > VAR_3 = METHOD_3 ( VAR_1 ) ; if ( ! ( METHOD_4 ( VAR_3 ) ) ) { return false ; } if ( ! ( VAR_3 . isEmpty ( ) ) ) { return METHOD_5 ( VAR_4 , METHOD_6 ( VAR_3 ) , TYPE_2 . METHOD_7 ( ) ) . getSucceeded ( ) ; } return true ; } } ; true return } ; ) ( getSucceeded . ) ) ( METHOD_7 . TYPE_2 , ) VAR_3 ( METHOD_6 , VAR_4 ( METHOD_5 return { ) ) ) ( isEmpty . VAR_3 ( ! ( if } ; false return { ) ) ) VAR_3 ( METHOD_4 ( ! ( if ; ) VAR_1 ( METHOD_3 = VAR_3 > DiskImage . TYPE_1 < java.util.List } ; true return { ) null == VAR_1 ( if ; ) VAR_2 ( METHOD_2 = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 boolean private 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.core.common.businessentities.VDS VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 ) { if ( cluster . METHOD_2 ( ) ) { log . METHOD_3 ( STRING_1 , cluster . METHOD_4 ( ) ) ; return ; } METHOD_5 ( cluster . getId ( ) ) ; try { java.util.List < TYPE_1 > VAR_3 = METHOD_6 ( cluster , VAR_1 , VAR_2 ) ; if ( VAR_3 ! = null ) { METHOD_7 ( VAR_2 , VAR_3 ) ; } } finally { METHOD_8 ( cluster . getId ( ) ) ; } } } } ; ) ) ( getId . cluster ( METHOD_8 { finally } } ; ) VAR_3 , VAR_2 ( METHOD_7 { ) null = ! VAR_3 ( if ; ) VAR_2 , VAR_1 , cluster ( METHOD_6 = VAR_3 > TYPE_1 < java.util.List { try ; ) ) ( getId . cluster ( METHOD_5 } ; return ; ) ) ( METHOD_4 . cluster , STRING_1 ( METHOD_3 . log { ) ) ( METHOD_2 . cluster ( if { ) VAR_2 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List , VAR_1 org.ovirt.engine.core.common.businessentities.VDS , cluster org.ovirt.engine.core.common.businessentities.VDSGroup ( METHOD_1 void private 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , vmId ) ; TYPE_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( VAR_2 ) ) == 0 ) ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , vmId ) ; TYPE_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( VAR_3 ) ) == 0 ) ) ; } } ; ) ) 0 == ) ) VAR_3 ( METHOD_4 . VAR_2 ( ( ( METHOD_3 . TYPE_2 ; ) vmId , VAR_1 ( METHOD_2 = VAR_3 TYPE_1 ; ) ) 0 == ) ) VAR_2 ( METHOD_4 . VAR_2 ( ( ( METHOD_3 . TYPE_2 ; ) vmId , VAR_1 ( METHOD_2 = VAR_2 TYPE_1 ; ) STRING_2 ( org.ovirt.engine.core.compat.Guid new = VAR_1 org.ovirt.engine.core.compat.Guid ; ) STRING_1 ( org.ovirt.engine.core.compat.Guid new = vmId org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void public 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_3 = new java.util.ArrayList < TYPE_1 . DiskImage > ( ) ; VAR_3 . add ( disk ) ; return VAR_3 ; } } ; VAR_3 return ; ) disk ( add . VAR_3 ; ) ( > DiskImage . TYPE_1 < java.util.ArrayList new = VAR_3 > DiskImage . TYPE_1 < java.util.List ; ) ) ) VAR_2 ( METHOD_4 . TYPE_2 ( > org.ovirt.engine.core.compat.Guid < java.util.ArrayList new ( METHOD_3 . disk ; ) VAR_1 ( METHOD_2 . disk ; ) ( DiskImage . TYPE_1 new = disk DiskImage . TYPE_1 { ) ( METHOD_1 > DiskImage . TYPE_1 < java.util.List private 
protected void METHOD_1 ( ) { if ( ( ( TYPE_1 . METHOD_2 ( ) ) ! = null ) & & ( METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ) ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; TYPE_1 . METHOD_12 ( true ) ; } } } } ; ) true ( METHOD_12 . TYPE_1 ; ) ( METHOD_11 ; ) ( METHOD_10 ; ) ( METHOD_9 ; ) ( METHOD_8 ; ) ( METHOD_7 ; ) ( METHOD_6 . ) ( METHOD_5 . TYPE_1 = VAR_1 org.ovirt.engine.core.compat.Guid { ) ) ) ) ( METHOD_4 . TYPE_1 ( METHOD_3 ( & & ) null = ! ) ) ( METHOD_2 . TYPE_1 ( ( ( if { ) ( METHOD_1 void protected 
private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 , TYPE_3 user ) { return ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) || ( ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( user . getId ( ) , VAR_3 , VAR_1 . getId ( ) , VAR_4 ) ) ! = null ) ; } } ; ) null = ! ) ) VAR_4 , ) ( getId . VAR_1 , VAR_3 , ) ( getId . user ( METHOD_4 . ) ( METHOD_3 . TYPE_4 ( ( || ) ) ) ( getId . VAR_1 ( METHOD_2 . VAR_2 ( return { ) user TYPE_3 , VAR_2 > org.ovirt.engine.core.compat.Guid < TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 boolean static private 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { try { if ( VAR_1 ! = null ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getValue ( ) ) ; if ( VAR_3 ! = null ) { VAR_3 . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; } } } catch ( java.lang.Exception e ) { VAR_4 . METHOD_6 ( STRING_1 , VAR_1 , VAR_2 , e ) ; } } } } ; ) e , VAR_2 , VAR_1 , STRING_1 ( METHOD_6 . VAR_4 { ) e java.lang.Exception ( catch } } } ; ) VAR_3 ( METHOD_5 . ) ( METHOD_2 . TYPE_4 ; ) VAR_2 ( METHOD_4 . VAR_3 { ) null = ! VAR_3 ( if ; ) ) ( getValue . VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_4 = VAR_3 TYPE_3 { ) null = ! VAR_1 ( if { try { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void static public 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] VAR_1 ) { if ( TYPE_3 . METHOD_2 ( version , VAR_2 ) ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { version . METHOD_4 ( ) . METHOD_4 ( ) . add ( VAR_3 . value ( ) ) ; } } } } } } ; ) ) ( value . VAR_3 ( add . ) ( METHOD_4 . ) ( METHOD_4 . version { ) VAR_1 : VAR_3 TYPE_2 ( for ; ) ) ( TYPE_4 new ( METHOD_3 . version { ) ) VAR_2 , version ( METHOD_2 . TYPE_3 ( if { ) VAR_1 ] [ TYPE_2 , version TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( VAR_1 == ( TYPE_1 . VM ) ) ? true : false ; TYPE_2 tempVar = new TYPE_2 ( ) ; tempVar . METHOD_3 ( METHOD_4 ( ) ) ; tempVar . METHOD_5 ( VAR_1 ) ; tempVar . METHOD_6 ( VAR_2 ) ; METHOD_7 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_8 ( VAR_3 , tempVar ) ) ; setItems ( METHOD_9 ( ) . METHOD_10 ( ) ) ; } } ; ) ) ( METHOD_10 . ) ( METHOD_9 ( setItems ; ) ) tempVar , VAR_3 ( METHOD_8 . org.ovirt.engine.ui.frontend.Frontend ( METHOD_7 ; ) VAR_2 ( METHOD_6 . tempVar ; ) VAR_1 ( METHOD_5 . tempVar ; ) ) ( METHOD_4 ( METHOD_3 . tempVar ; ) ( TYPE_2 new = tempVar TYPE_2 ; false : true ? ) ) VM . TYPE_1 ( == VAR_1 ( = VAR_2 boolean ; ) ( METHOD_2 = VAR_1 TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == true ) { return VAR_1 ; } else if ( ( METHOD_3 ( ) . getEntity ( ) ) == true ) { return VAR_2 ; } else if ( ( METHOD_4 ( ) . getEntity ( ) ) == true ) { return VAR_3 ; } return VAR_2 ; } } ; VAR_2 return } ; VAR_3 return { ) true == ) ) ( getEntity . ) ( METHOD_4 ( ( if else } ; VAR_2 return { ) true == ) ) ( getEntity . ) ( METHOD_3 ( ( if else } ; VAR_1 return { ) true == ) ) ( getEntity . ) ( METHOD_2 ( ( if { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_2 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( ) ; VAR_1 = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_2 ) ) ; TYPE_2 . METHOD_5 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_1 ) ; } } ; ) VAR_1 , VAR_3 ( assertEquals . TYPE_2 ; ) VAR_1 ( METHOD_5 . TYPE_2 ; ) ) VAR_2 ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( get . dao = VAR_1 ; ) ( METHOD_4 = VAR_3 TYPE_1 ; ) VAR_1 ( METHOD_3 . TYPE_2 ; ) ) VAR_2 ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( get . dao = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 status , boolean VAR_1 ) { this . VAR_2 = status ; if ( VAR_1 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) ; try { TYPE_4 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , VAR_2 ) ; } finally { if ( VAR_3 ! = null ) { TYPE_3 . METHOD_6 ( VAR_3 ) ; } } } } } } } } ; ) VAR_3 ( METHOD_6 . TYPE_3 { ) null = ! VAR_3 ( if { finally } ; ) VAR_2 , ) ( METHOD_5 , ) ( METHOD_4 ( METHOD_3 . TYPE_4 { try ; ) ( METHOD_2 . TYPE_3 = VAR_3 TYPE_2 { ) VAR_1 ( if ; status = VAR_2 . this { ) VAR_1 boolean , status TYPE_1 ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { boolean returnValue = ( ( ( ( ( super . METHOD_1 ( ) ) & & ( TYPE_1 . METHOD_2 ( ) ) ) & & ( METHOD_3 ( VAR_1 ) ) ) & & ( TYPE_1 . METHOD_4 ( ) ) ) & & ( METHOD_5 ( ) ) ) & & ( METHOD_6 ( ) ) ; return returnValue ; } } ; returnValue return ; ) ) ( METHOD_6 ( & & ) ) ) ( METHOD_5 ( & & ) ) ) ( METHOD_4 . TYPE_1 ( & & ) ) ) VAR_1 ( METHOD_3 ( & & ) ) ) ( METHOD_2 . TYPE_1 ( & & ) ) ( METHOD_1 . super ( ( ( ( ( = returnValue boolean { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( VAR_1 ) ) ; java.util.List < java.lang.String > VAR_2 = cmd . getReturnValue ( ) . METHOD_5 ( ) ; TYPE_1 . assertEquals ( VAR_2 . size ( ) , 2 ) ; TYPE_1 . assertEquals ( VAR_2 . get ( 0 ) , TYPE_2 . toString ( ) ) ; TYPE_1 . assertEquals ( VAR_2 . get ( 1 ) , java.lang.String . METHOD_6 ( STRING_1 , VAR_1 ) ) ; } } ; ) ) VAR_1 , STRING_1 ( METHOD_6 . java.lang.String , ) 1 ( get . VAR_2 ( assertEquals . TYPE_1 ; ) ) ( toString . TYPE_2 , ) 0 ( get . VAR_2 ( assertEquals . TYPE_1 ; ) 2 , ) ( size . VAR_2 ( assertEquals . TYPE_1 ; ) ( METHOD_5 . ) ( getReturnValue . cmd = VAR_2 > java.lang.String < java.util.List ; ) ) VAR_1 ( METHOD_4 . cmd ( METHOD_3 . TYPE_1 ; ) VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
protected java.lang.String METHOD_1 ( TYPE_1 pool ) { return getEntity ( VAR_1 . VDSGroup class , VAR_2 , new TYPE_2 ( pool . METHOD_2 ( ) . getName ( ) ) , ( STRING_1 + ( pool . METHOD_2 ( ) . getName ( ) ) ) ) . getId ( ) . toString ( ) ; } } ; ) ( toString . ) ( getId . ) ) ) ) ( getName . ) ( METHOD_2 . pool ( + STRING_1 ( , ) ) ( getName . ) ( METHOD_2 . pool ( TYPE_2 new , VAR_2 , class VDSGroup . VAR_1 ( getEntity return { ) pool TYPE_1 ( METHOD_1 java.lang.String protected 
private static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( ( model . METHOD_2 ( ) ) & & ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ) & & ( model . METHOD_3 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ) { return TYPE_2 . METHOD_7 ( model . METHOD_3 ( ) . METHOD_5 ( ) . getId ( ) ) ; } else { return VAR_1 == null ? VAR_2 : VAR_1 ; } } } } ; VAR_1 : VAR_2 ? null == VAR_1 return { else } ; ) ) ( getId . ) ( METHOD_5 . ) ( METHOD_3 . model ( METHOD_7 . TYPE_2 return { ) ) ) ( METHOD_6 . ) ( METHOD_5 . ) ( METHOD_3 . model ( & & ) ) ) ( METHOD_4 . ) ( METHOD_3 . model ( & & ) ) ( METHOD_2 . model ( ( ( if { ) VAR_1 org.ovirt.engine.core.compat.Guid , model TYPE_1 ( METHOD_1 org.ovirt.engine.core.compat.Guid static private 
private static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > args ) throws TYPE_1 { TYPE_2 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_2 = ( ( java.lang.String ) ( args . get ( STRING_2 ) ) ) ; if ( VAR_2 ! = null ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; } TYPE_5 . METHOD_5 ( ( ( TYPE_6 ) ( args . get ( STRING_3 ) ) ) ) ; } } ; ) ) ) ) STRING_3 ( get . args ( ) TYPE_6 ( ( ( METHOD_5 . TYPE_5 } ; ) VAR_3 ( METHOD_4 . VAR_1 ; ) ) ( TYPE_4 new ( METHOD_3 . VAR_3 ; ) VAR_2 ( TYPE_3 new = VAR_3 TYPE_3 { ) null = ! VAR_2 ( if ; ) ) ) STRING_2 ( get . args ( ) java.lang.String ( ( = VAR_2 java.lang.String ; ) STRING_1 ( METHOD_2 . TYPE_2 = VAR_1 TYPE_2 { TYPE_1 throws ) args > java.lang.Object , java.lang.String < java.util.Map ( METHOD_1 void static private 
protected void METHOD_1 ( ) { if ( ( getModel ( ) . METHOD_2 ( ) ) ! = null ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; boolean VAR_1 = ( ( cluster . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) > = 0 ) & & ( cluster . METHOD_5 ( ) . equals ( VAR_3 ) ) ; getModel ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_7 . ) ( METHOD_6 . ) ( getModel ; ) ) VAR_3 ( equals . ) ( METHOD_5 . cluster ( & & ) 0 = > ) ) VAR_2 ( METHOD_4 . ) ( METHOD_3 . cluster ( ( = VAR_1 boolean ; ) ( METHOD_2 . ) ( getModel = cluster org.ovirt.engine.core.common.businessentities.VDSGroup { ) null = ! ) ) ( METHOD_2 . ) ( getModel ( ( if { ) ( METHOD_1 void protected 
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; assertEquals ( 2 , VAR_1 . METHOD_3 ( ) . size ( ) ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) . get ( 0 ) , 1 , INT_1 , false , STRING_1 , 0 , false , false , false ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) . get ( 1 ) , INT_2 , INT_3 , true , STRING_2 , INT_4 , true , true , true ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_6 ; ) VAR_1 ( METHOD_5 ; ) true , true , true , INT_4 , STRING_2 , true , INT_3 , INT_2 , ) 1 ( get . ) ( METHOD_3 . VAR_1 ( METHOD_4 ; ) false , false , false , 0 , STRING_1 , false , INT_1 , 1 , ) 0 ( get . ) ( METHOD_3 . VAR_1 ( METHOD_4 ; ) ) ( size . ) ( METHOD_3 . VAR_1 , 2 ( assertEquals ; ) VAR_1 ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void private 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_4 ( TYPE_5 . METHOD_2 ( ) ) ; TYPE_6 . METHOD_3 ( VAR_2 , VAR_1 ) ; return new TYPE_1 ( VAR_2 , TYPE_6 . METHOD_4 ( VAR_1 ) , TYPE_6 . METHOD_5 ( VAR_2 . getId ( ) , VAR_1 ) ) ; } } ; ) ) VAR_1 , ) ( getId . VAR_2 ( METHOD_5 . TYPE_6 , ) VAR_1 ( METHOD_4 . TYPE_6 , VAR_2 ( TYPE_1 new return ; ) VAR_1 , VAR_2 ( METHOD_3 . TYPE_6 ; ) ) ( METHOD_2 . TYPE_5 ( TYPE_4 new = VAR_2 TYPE_3 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( VAR_2 ) { if ( ( ( java.lang.Boolean ) ( ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel ) ( sender ) ) . getEntity ( ) ) ) ) { METHOD_2 ( ) . setEntity ( true ) ; METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . setIsChangable ( false ) ; } else { METHOD_2 ( ) . setIsChangable ( true ) ; } } } } } } ; ) true ( setIsChangable . ) ( METHOD_2 { else } ; ) false ( setIsChangable . ) ( METHOD_2 ; ) ) ( METHOD_4 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( METHOD_3 . ) ( METHOD_2 ; ) true ( setEntity . ) ( METHOD_2 { ) ) ) ) ( getEntity . ) ) sender ( ) org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ( ( ) java.lang.Boolean ( ( ( if { ) VAR_2 ( if { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( VAR_2 . METHOD_7 ( ) . getStatus ( ) , INT_1 ) ; } } } } ; ) INT_1 , ) ( getStatus . ) ( METHOD_7 . VAR_2 ( assertEquals ; ) ) ( METHOD_7 . VAR_2 ( METHOD_6 { ) VAR_2 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_5 ; ) ( METHOD_4 . resource { try ; ) ( METHOD_3 . VAR_1 ; ) false ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new TYPE_1 ( ) { public void onSuccess ( java.lang.Object returnValue ) { VAR_3 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } } ; ) VAR_1 , ) VAR_5 ( TYPE_3 new , VAR_4 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = VAR_3 { ) returnValue java.lang.Object ( onSuccess void public { ) ( TYPE_1 new = VAR_2 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void public 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( ( domain . METHOD_2 ( ) ) == ( VAR_2 ) ) { return domain ; } } } return null ; } } ; null return } } } ; domain return { ) ) VAR_2 ( == ) ) ( METHOD_2 . domain ( ( if { ) VAR_1 : domain org.ovirt.engine.core.common.businessentities.StorageDomain ( for ; ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( METHOD_1 java.lang.Object public 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 . Disk disk , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( new TYPE_3 ( vm . getId ( ) , disk . getId ( ) ) ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; return VAR_3 ; } } ; VAR_3 return ; ) VAR_2 ( METHOD_3 . VAR_3 ; ) VAR_1 ( METHOD_2 . VAR_3 ; ) ) ) ( getId . disk , ) ( getId . vm ( TYPE_3 new ( setId . VAR_3 ; ) ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 boolean , VAR_1 org.ovirt.engine.core.compat.Guid , disk Disk . TYPE_2 , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 domain : VAR_1 ) { if ( TYPE_2 . METHOD_2 ( domain ) ) { VAR_2 . add ( domain ) ; } } METHOD_3 ( ) . setItems ( VAR_2 ) ; if ( VAR_3 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 { else } ; ) ( METHOD_4 { ) VAR_3 ( if ; ) VAR_2 ( setItems . ) ( METHOD_3 } } ; ) domain ( add . VAR_2 { ) ) domain ( METHOD_2 . TYPE_2 ( if { ) VAR_1 : domain TYPE_1 ( for ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_2 ; ) ) returnValue ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_1 > TYPE_1 < java.util.ArrayList { ) returnValue java.lang.Object , model java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) { if ( validate ( false ) ) { VAR_1 . METHOD_1 ( ) ; ( ( TYPE_1 . DiskImage ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( METHOD_5 ( ) . getSelectedItem ( ) ) ; } } } } ; ) ) ( getSelectedItem . ) ( METHOD_5 ( METHOD_4 . ) ) ) ( METHOD_3 . ) ( METHOD_2 ( ) DiskImage . TYPE_1 ( ( ; ) ( METHOD_1 . VAR_1 { ) ) false ( validate ( if { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 , this . METHOD_3 ( ) . getName ( ) ) ; try { if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; } } catch ( TYPE_1 e ) { log . METHOD_6 ( STRING_2 , e ) ; } METHOD_7 ( ) ; } } ; ) ( METHOD_7 } ; ) e , STRING_2 ( METHOD_6 . log { ) e TYPE_1 ( catch } } ; ) ( METHOD_5 { ) ) ( METHOD_4 ( if { try ; ) ) ( getName . ) ( METHOD_3 . this , STRING_1 ( METHOD_2 . log { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_1 == null ) { return null ; } TYPE_1 VAR_2 = new TYPE_2 ( VAR_3 ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_2 ! = null ) { return VAR_2 ; } TYPE_1 VAR_4 = METHOD_3 ( VAR_1 ) ; if ( ( VAR_4 ! = null ) & & ( ! ( METHOD_4 ( VAR_4 . getId ( ) ) ) ) ) { return VAR_4 ; } throw new TYPE_3 ( ( STRING_1 + VAR_1 ) ) ; } } ; ) ) VAR_1 + STRING_1 ( ( TYPE_3 new throw } ; VAR_4 return { ) ) ) ) ) ( getId . VAR_4 ( METHOD_4 ( ! ( & & ) null = ! VAR_4 ( ( if ; ) VAR_1 ( METHOD_3 = VAR_4 TYPE_1 } ; VAR_2 return { ) null = ! VAR_2 ( if ; ) VAR_1 ( get . ) ( METHOD_2 . ) VAR_3 ( TYPE_2 new = VAR_2 TYPE_1 } ; null return { ) null == VAR_1 ( if { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) . getId ( ) ) ; java.lang.String VAR_5 = ( VAR_2 == null ) ? TYPE_4 . METHOD_4 ( ) . name ( ) : VAR_2 ; VAR_4 . METHOD_5 ( STRING_1 , VAR_5 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; TYPE_5 . METHOD_7 ( VAR_4 , VAR_1 , VAR_6 ) ; } } ; ) VAR_6 , VAR_1 , VAR_4 ( METHOD_7 . TYPE_5 ; ) VAR_3 ( METHOD_6 . VAR_4 ; ) VAR_5 , STRING_1 ( METHOD_5 . VAR_4 ; VAR_2 : ) ( name . ) ( METHOD_4 . TYPE_4 ? ) null == VAR_2 ( = VAR_5 java.lang.String ; ) ) ( getId . ) ( METHOD_3 . TYPE_4 ( METHOD_2 . VAR_4 ; ) ( TYPE_3 new = VAR_4 TYPE_3 { ) VAR_3 TYPE_2 , VAR_2 java.lang.String , VAR_1 AuditLogType . TYPE_1 ( METHOD_1 void private 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String name ) { TYPE_1 returnValue = null ; if ( VAR_1 . METHOD_2 ( name ) ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( ( ( VAR_1 . METHOD_3 ( name ) ) instanceof java.lang.String ) ? VAR_1 . METHOD_3 ( name ) : null ) ) ; returnValue = ( VAR_2 == null ) ? null : TYPE_1 . METHOD_4 ( VAR_2 ) ; } return returnValue ; } } ; returnValue return } ; ) VAR_2 ( METHOD_4 . TYPE_1 : null ? ) null == VAR_2 ( = returnValue ; ) ) null : ) name ( METHOD_3 . VAR_1 ? ) java.lang.String instanceof ) ) name ( METHOD_3 . VAR_1 ( ( ( ) java.lang.String ( ( = VAR_2 java.lang.String { ) ) name ( METHOD_2 . VAR_1 ( if ; null = returnValue TYPE_1 { ) name java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static private 
public static java.util.List < TYPE_1 . DiskImage > METHOD_1 ( java.util.List < TYPE_1 . Disk > VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = new java.util.ArrayList < > ( ) ; java.util.List < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; for ( TYPE_2 VAR_4 : VAR_3 ) { VAR_2 . add ( TYPE_4 . METHOD_3 ( VAR_4 . getId ( ) ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ) ( getId . VAR_4 ( METHOD_3 . TYPE_4 ( add . VAR_2 { ) VAR_3 : VAR_4 TYPE_2 ( for ; ) VAR_1 ( METHOD_2 . TYPE_3 = VAR_3 > TYPE_2 < java.util.List ; ) ( > < java.util.ArrayList new = VAR_2 > DiskImage . TYPE_1 < java.util.List { ) VAR_1 > Disk . TYPE_1 < java.util.List ( METHOD_1 > DiskImage . TYPE_1 < java.util.List static public 
private TYPE_1 . DiskImage METHOD_1 ( boolean VAR_1 ) { TYPE_1 . DiskImage VAR_2 = new TYPE_1 . DiskImage ( ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_6 ( VAR_3 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_3 ( METHOD_6 . VAR_2 ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_5 . VAR_2 ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_4 . VAR_2 ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( setId . VAR_2 ; ) true ( METHOD_2 . VAR_2 ; ) ( DiskImage . TYPE_1 new = VAR_2 DiskImage . TYPE_1 { ) VAR_1 boolean ( METHOD_1 DiskImage . TYPE_1 private 
private org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; VAR_2 . METHOD_4 ( new org.ovirt.engine.core.compat . Version ( STRING_3 ) ) ; VAR_2 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; VAR_2 . setId ( VAR_1 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_1 ( setId . VAR_2 ; ) ) ( METHOD_6 . org.ovirt.engine.core.compat.Guid ( METHOD_5 . VAR_2 ; ) ) STRING_3 ( Version . org.ovirt.engine.core.compat new ( METHOD_4 . VAR_2 ; ) STRING_2 ( METHOD_3 . VAR_2 ; ) STRING_1 ( METHOD_2 . VAR_2 ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = VAR_2 org.ovirt.engine.core.common.businessentities.VDS { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 org.ovirt.engine.core.common.businessentities.VDS private 
protected void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . VdcQueryReturnValue class ) ; TYPE_3 . METHOD_3 ( VAR_3 . RunQuery ( TYPE_3 . METHOD_4 ( VAR_4 ) , METHOD_5 ( ) ) ) . METHOD_6 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 . getSucceeded ( ) ) . METHOD_6 ( true ) . METHOD_7 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 . getReturnValue ( ) ) . METHOD_6 ( METHOD_8 ( ) ) . METHOD_7 ( ) ; TYPE_2 . METHOD_9 ( ) ; } } ; ) ( METHOD_9 . TYPE_2 ; ) ( METHOD_7 . ) ) ( METHOD_8 ( METHOD_6 . ) ) ( getReturnValue . VAR_1 ( METHOD_3 . TYPE_3 ; ) ( METHOD_7 . ) true ( METHOD_6 . ) ) ( getSucceeded . VAR_1 ( METHOD_3 . TYPE_3 ; ) VAR_1 ( METHOD_6 . ) ) ) ( METHOD_5 , ) VAR_4 ( METHOD_4 . TYPE_3 ( RunQuery . VAR_3 ( METHOD_3 . TYPE_3 ; ) class VdcQueryReturnValue . VAR_2 ( METHOD_2 . TYPE_2 = VAR_1 VdcQueryReturnValue . TYPE_1 { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . VdcQueryType VAR_2 = VAR_3 ; java.lang.Object result = VAR_4 . runQuery ( VAR_2 , VAR_5 , VAR_1 ) ; TYPE_2 . assertEquals ( result , VAR_6 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_4 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_2 ( VAR_7 ) . RunQuery ( VAR_2 , VAR_5 ) ; } } ; ) VAR_5 , VAR_2 ( RunQuery . ) VAR_7 ( METHOD_2 . org.mockito.Mockito ; ) ) ( METHOD_6 . VAR_4 ( METHOD_5 . ) VAR_5 ( METHOD_2 . org.mockito.Mockito ; ) VAR_1 ( METHOD_4 . ) VAR_5 ( METHOD_2 . org.mockito.Mockito ; ) VAR_1 ( METHOD_3 . ) VAR_5 ( METHOD_2 . org.mockito.Mockito ; ) VAR_6 , result ( assertEquals . TYPE_2 ; ) VAR_1 , VAR_5 , VAR_2 ( runQuery . VAR_4 = result java.lang.Object ; VAR_3 = VAR_2 VdcQueryType . TYPE_1 ; STRING_1 = VAR_1 java.lang.String { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; final java.lang.String VAR_2 = STRING_1 ; VAR_1 . METHOD_3 ( VAR_2 ) ; long VAR_3 = TYPE_2 . METHOD_4 ( ) ; VAR_3 += INT_1 ; final TYPE_3 VAR_4 = new TYPE_3 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( ) ; final boolean result = VAR_1 . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( result ) ; } } ; ) result ( METHOD_7 . TYPE_4 ; ) ( METHOD_6 . VAR_1 = result boolean final ; ) ( METHOD_6 . VAR_1 ; ) VAR_4 ( METHOD_5 . VAR_1 ; ) VAR_3 ( TYPE_3 new = VAR_4 TYPE_3 final ; INT_1 += VAR_3 ; ) ( METHOD_4 . TYPE_2 = VAR_3 long ; ) VAR_2 ( METHOD_3 . VAR_1 ; STRING_1 = VAR_2 java.lang.String final ; ) true ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name ) { final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( status , name , VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ( org.ovirt.engine.core.common.businessentities.StoragePool new ( METHOD_6 . cmd ; ) ) VAR_1 ( METHOD_5 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_4 . VAR_3 ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) cmd ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) VAR_2 , name , status ( METHOD_2 = VAR_1 org.ovirt.engine.core.common.businessentities.StorageDomain final { ) name java.lang.String , status TYPE_1 ( METHOD_1 org.ovirt.engine.core.common.businessentities.StorageDomain private 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_2 . add ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . getId ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( VAR_4 ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) VAR_4 ( METHOD_5 . VAR_1 ( org.mockito.Mockito.when ; ) VAR_4 ( thenReturn . ) ) ( getId . ) ( METHOD_4 ( org.mockito.Mockito.when ; ) VAR_3 ( add . VAR_2 ; ) ( TYPE_1 new = VAR_3 TYPE_1 ; ) ( > < java.util.ArrayList new = VAR_2 ; ) VAR_1 ( thenReturn . ) ) ( METHOD_3 . ) ( METHOD_2 ( org.mockito.Mockito.when { ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 , java.lang.Boolean . toString ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ) ; if ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { VAR_1 . add ( VAR_3 , TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( METHOD_3 . ) ( getParameters . TYPE_2 , VAR_3 ( add . VAR_1 { ) ) ( METHOD_2 . ) ( getParameters . TYPE_2 ( if ; ) ) ) ( METHOD_2 . ) ( getParameters . TYPE_2 ( toString . java.lang.Boolean , VAR_2 ( add . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_8 { ) VAR_3 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_7 ; ) model ( METHOD_6 . resource { try ; ) ) ( toString . ] 1 [ VAR_2 ( setId . model ; ) 1 ( getModel = model TYPE_1 ; ) ( METHOD_5 . VAR_1 ; ) 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ) 0 ( getModel . TYPE_1 ( METHOD_6 . resource { try ; ) ( METHOD_5 . VAR_1 ; ) true , 0 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { org.ovirt.engine.core.common.businessentities.VM vm = super . getVm ( ) ; if ( vm == null ) { vm = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) . get ( 0 ) ; METHOD_4 ( vm ) ; METHOD_5 ( vm . getId ( ) ) ; } return vm ; } } ; vm return } ; ) ) ( getId . vm ( METHOD_5 ; ) vm ( METHOD_4 ; ) 0 ( get . ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 . ) ( METHOD_1 . TYPE_1 = vm { ) null == vm ( if ; ) ( getVm . super = vm org.ovirt.engine.core.common.businessentities.VM { ) ( getVm org.ovirt.engine.core.common.businessentities.VM public 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM result = null ; TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 . getId ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { result = VAR_1 . getReturnValue ( ) ; } return result ; } } ; result return } ; ) ( getReturnValue . VAR_1 = result { ) ) ( getSucceeded . VAR_1 ( if ; ) ) ) ( getId . VAR_3 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( METHOD_2 . ) ( getInstance . TYPE_2 = VAR_1 VdcQueryReturnValue . TYPE_1 ; null = result org.ovirt.engine.core.common.businessentities.VM { ) ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM protected 
private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 . size ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { TYPE_1 VAR_4 = METHOD_2 ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) VAR_4 ( add . VAR_2 ; ) VAR_3 ( METHOD_2 = VAR_4 TYPE_1 { ) VAR_1 : VAR_3 TYPE_2 ( for ; ) ) ( size . VAR_1 ( > TYPE_1 < java.util.ArrayList new = VAR_2 > TYPE_1 < java.util.ArrayList { ) VAR_1 > TYPE_2 < java.util.List ( METHOD_1 > TYPE_1 < java.util.List private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , true ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_8 ( VAR_4 ) ; } } } } ; ) VAR_4 ( METHOD_8 { ) VAR_4 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ( get . resource { try ; ) ( METHOD_6 . VAR_3 ; ) ) ( METHOD_5 ( METHOD_4 ; ) true , VAR_2 , VAR_1 ( METHOD_3 ; ) VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected boolean METHOD_1 ( TYPE_1 . Network network ) { return ( ( ( network ! = null ) & & ( network . METHOD_2 ( ) ) ) & & ( network . METHOD_3 ( ) . METHOD_4 ( ) ) ) & & ( ! ( network . METHOD_3 ( ) . METHOD_5 ( ) ) ) ; } } ; ) ) ) ( METHOD_5 . ) ( METHOD_3 . network ( ! ( & & ) ) ) ( METHOD_4 . ) ( METHOD_3 . network ( & & ) ) ) ( METHOD_2 . network ( & & ) null = ! network ( ( ( return { ) network Network . TYPE_1 ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_8 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( new TYPE_3 . ValidationResult ( VAR_5 ) ) ; TYPE_4 . METHOD_9 ( command , VAR_6 ) ; } } ; ) VAR_6 , command ( METHOD_9 . TYPE_4 ; ) ) VAR_5 ( ValidationResult . TYPE_3 new ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_8 . VAR_3 ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_7 ; ) ( METHOD_6 ; ) false ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ) ( DiskImage . TYPE_1 new , VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; if ( vm ! = null ) { return ( org.ovirt.engine.core.common.businessentities.VM . METHOD_3 ( vm . METHOD_4 ( ) ) ) || ( ( vm . METHOD_4 ( ) ) == ( VAR_1 ) ) ; } return false ; } } ; false return } ; ) ) VAR_1 ( == ) ) ( METHOD_4 . vm ( ( || ) ) ) ( METHOD_4 . vm ( METHOD_3 . org.ovirt.engine.core.common.businessentities.VM ( return { ) null = ! vm ( if ; ) vmId ( get . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = vm org.ovirt.engine.core.common.businessentities.VM { ) vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean static public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( cmd . METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 . cmd ( METHOD_7 . TYPE_4 ; ) ( METHOD_6 . ) cmd ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) ) ( METHOD_5 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_2 ( get . VAR_1 ( org.mockito.Mockito.when ; ) class VAR_2 ( METHOD_4 . org.mockito.Mockito = VAR_1 TYPE_1 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 , TYPE_4 { java.util.List < TYPE_2 > VAR_1 = new java.util.ArrayList < TYPE_2 > ( ) ; java.util.List < TYPE_5 < ? > > VAR_2 = TYPE_6 . METHOD_2 ( VAR_3 ) ; for ( java.lang.String VAR_4 : VAR_5 ) { TYPE_5 < ? > resource = METHOD_3 ( VAR_4 , VAR_2 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( resource , VAR_4 , new java.util.HashMap < java.lang.String , TYPE_7 > ( ) ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ) ( > TYPE_7 , java.lang.String < java.util.HashMap new , VAR_4 , resource ( METHOD_5 ( METHOD_4 . VAR_1 ; ) VAR_2 , VAR_4 ( METHOD_3 = resource > ? < TYPE_5 { ) VAR_5 : VAR_4 java.lang.String ( for ; ) VAR_3 ( METHOD_2 . TYPE_6 = VAR_2 > > ? < TYPE_5 < java.util.List ; ) ( > TYPE_2 < java.util.ArrayList new = VAR_1 > TYPE_2 < java.util.List { TYPE_4 , TYPE_3 throws ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
private TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( getParameters ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return METHOD_4 ( ) . METHOD_5 ( ) ; } return METHOD_4 ( ) . METHOD_6 ( ) ; } return METHOD_5 ( ) ; } } ; ) ( METHOD_5 return } ; ) ( METHOD_6 . ) ( METHOD_4 return } ; ) ( METHOD_5 . ) ( METHOD_4 return { ) ) VAR_1 ( == ) ) ( METHOD_3 . ) ( getParameters ( ( if { ) ) ( METHOD_2 ( if { ) ( METHOD_1 TYPE_1 private 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { return VAR_3 . METHOD_3 ( ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) ) { return VAR_3 . METHOD_4 ( ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_5 ) ) { return VAR_3 . METHOD_5 ( ) ; } return VAR_3 . METHOD_6 ( ) ; } } ; ) ( METHOD_6 . VAR_3 return } ; ) ( METHOD_5 . VAR_3 return { ) ) VAR_5 ( == ) ) ( METHOD_2 . VAR_1 ( ( if else } ; ) ( METHOD_4 . VAR_3 return { ) ) VAR_4 ( == ) ) ( METHOD_2 . VAR_1 ( ( if else } ; ) ( METHOD_3 . VAR_3 return { ) ) VAR_2 ( == ) ) ( METHOD_2 . VAR_1 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String public 
public void METHOD_1 ( final TYPE_1 model ) { super . METHOD_1 ( model ) ; model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_1 , java.lang.Object sender , TYPE_4 args ) { ( ( TYPE_5 . ViewDef ) ( METHOD_6 ( ) ) ) . METHOD_7 ( model . METHOD_2 ( ) . getSelectedItem ( ) . getName ( ) ) ; } } ) ; } } ; ) } } ; ) ) ( getName . ) ( getSelectedItem . ) ( METHOD_2 . model ( METHOD_7 . ) ) ) ( METHOD_6 ( ) ViewDef . TYPE_5 ( ( { ) args TYPE_4 , sender java.lang.Object , VAR_1 TYPE_3 ( METHOD_5 void public { ) ( TYPE_2 new ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 . model ; ) model ( METHOD_1 . super { ) model TYPE_1 final ( METHOD_1 void public 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 instanceof TYPE_4 ) { return VAR_3 . get ( ) ; } else if ( VAR_2 instanceof TYPE_5 ) { return VAR_4 . get ( ) ; } else if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_5 . get ( ) ; } return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , source ( METHOD_1 . super return } ; ) ( get . VAR_5 return { ) ) ) ( METHOD_2 . ) ( getModel ( == VAR_1 ( if else } ; ) ( get . VAR_4 return { ) TYPE_5 instanceof VAR_2 ( if else } ; ) ( get . VAR_3 return { ) TYPE_4 instanceof VAR_2 ( if { ) VAR_2 TYPE_2 , VAR_1 org.ovirt.engine.ui.uicommonweb.UICommand , source TYPE_3 ( METHOD_1 > ? , TYPE_2 extends ? < TYPE_1 public 
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_3 . put ( VAR_4 , VAR_5 ) ; } METHOD_2 ( ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { METHOD_3 ( ) . put ( VAR_4 , VAR_6 ) ; } for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_7 . put ( VAR_4 , VAR_8 ) ; } METHOD_4 ( ) ; } } ; ) ( METHOD_4 } ; ) VAR_8 , VAR_4 ( put . VAR_7 { ) VAR_2 : VAR_1 TYPE_1 ( for } ; ) VAR_6 , VAR_4 ( put . ) ( METHOD_3 { ) VAR_2 : VAR_1 TYPE_1 ( for ; ) ( METHOD_2 } ; ) VAR_5 , VAR_4 ( put . VAR_3 { ) VAR_2 : VAR_1 TYPE_1 ( for { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , true ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( VAR_2 . METHOD_7 ( ) . getStatus ( ) , INT_1 ) ; } } } } ; ) INT_1 , ) ( getStatus . ) ( METHOD_7 . VAR_2 ( assertEquals ; ) ) ( METHOD_7 . VAR_2 ( METHOD_6 { ) VAR_2 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_5 ; ) ( METHOD_4 . resource { try ; ) ( METHOD_3 . VAR_1 ; ) true , 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = super . METHOD_1 ( ) ; if ( ( ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ! = null ) & & ( ( TYPE_2 . getVm ( ) ) ! = null ) ) & & ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) { VAR_1 . add ( new TYPE_1 ( TYPE_2 . getVm ( ) . METHOD_4 ( ) , VAR_2 . StoragePool , VAR_3 ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) VAR_3 , StoragePool . VAR_2 , ) ( METHOD_4 . ) ( getVm . TYPE_2 ( TYPE_1 new ( add . VAR_1 { ) ) ) ( METHOD_3 . ) ( METHOD_2 . ) ( getParameters . TYPE_2 ( & & ) ) null = ! ) ) ( getVm . TYPE_2 ( ( & & ) null = ! ) ) ( METHOD_2 . ) ( getParameters . TYPE_2 ( ( ( ( if ; ) ( METHOD_1 . super = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public TYPE_1 METHOD_1 ( ) { if ( ( super . METHOD_1 ( ) ) == null ) { super . METHOD_2 ( new TYPE_1 ( ) ) ; } super . METHOD_1 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_1 ( ) ) ; return super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super return ; ) ) ( METHOD_1 . ) ( getParameters . TYPE_2 ( METHOD_3 . ) ( METHOD_1 . super } ; ) ) ( TYPE_1 new ( METHOD_2 . super { ) null == ) ) ( METHOD_1 . super ( ( if { ) ( METHOD_1 TYPE_1 public 
protected java.lang.String METHOD_1 ( TYPE_1 client ) { TYPE_2 VAR_1 = new TYPE_3 ( INT_1 ) ; java.lang.String command = VAR_2 < java.lang.String > METHOD_2 ( VAR_3 ) ; try { client . METHOD_3 ( command , null , VAR_1 , null ) ; return new java.lang.String ( VAR_1 . METHOD_4 ( ) , STRING_1 ) ; } catch ( java.lang.Exception e ) { log . METHOD_5 ( STRING_2 , command , client . METHOD_6 ( ) , e ) ; throw new TYPE_4 ( e ) ; } } } } ; ) e ( TYPE_4 new throw ; ) e , ) ( METHOD_6 . client , command , STRING_2 ( METHOD_5 . log { ) e java.lang.Exception ( catch } ; ) STRING_1 , ) ( METHOD_4 . VAR_1 ( java.lang.String new return ; ) null , VAR_1 , null , command ( METHOD_3 . client { try ; ) VAR_3 ( METHOD_2 > java.lang.String < VAR_2 = command java.lang.String ; ) INT_1 ( TYPE_3 new = VAR_1 TYPE_2 { ) client TYPE_1 ( METHOD_1 java.lang.String protected 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) ! = ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) & & ( TYPE_2 . equals ( vmId , other . vmId ) ) ; } } ; ) ) vmId . other , vmId ( equals . TYPE_2 ( & & ) ) VAR_2 , VAR_1 ( equals . TYPE_2 ( return ; ) ) obj ( ) TYPE_1 ( ( = other TYPE_1 } ; false return { ) ) ) ( METHOD_1 . obj ( = ! ) ) ( METHOD_1 ( ( if } ; false return { ) null == obj ( if } ; true return { ) obj == ) this ( ( if { ) obj java.lang.Object ( equals boolean public 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; try { if ( ! ( VAR_4 . METHOD_4 ( VAR_1 ) ) ) { return ; } synchronized ( VAR_4 . get ( VAR_1 ) ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > map = VAR_4 . get ( VAR_1 ) ; for ( org.ovirt.engine.core.compat.Guid VAR_5 : VAR_2 ) { map . METHOD_5 ( VAR_5 ) ; } } } finally { VAR_3 . METHOD_2 ( ) . METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 . ) ( METHOD_2 . VAR_3 { finally } } } ; ) VAR_5 ( METHOD_5 . map { ) VAR_2 : VAR_5 org.ovirt.engine.core.compat.Guid ( for ; ) VAR_1 ( get . VAR_4 = map > TYPE_1 , org.ovirt.engine.core.compat.Guid < java.util.Map { ) ) VAR_1 ( get . VAR_4 ( synchronized } ; return { ) ) ) VAR_1 ( METHOD_4 . VAR_4 ( ! ( if { try ; ) ( METHOD_3 . ) ( METHOD_2 . VAR_3 { ) VAR_2 > org.ovirt.engine.core.compat.Guid < java.util.List , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_4 = VAR_2 . get ( VAR_5 ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_5 ( STRING_1 ) ; VAR_6 . METHOD_6 ( VAR_4 . METHOD_7 ( ) ) ; VAR_6 . METHOD_8 ( VAR_7 ) ; VAR_8 = new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new = VAR_8 ; ) VAR_7 ( METHOD_8 . VAR_6 ; ) ) ( METHOD_7 . VAR_4 ( METHOD_6 . VAR_6 ; ) STRING_1 ( METHOD_5 . VAR_6 ; ) ( TYPE_1 new = VAR_6 ; ) VAR_5 ( get . VAR_2 = VAR_4 ; ) ( METHOD_4 . VAR_1 = VAR_3 ; ) ( METHOD_3 . VAR_1 = VAR_2 ; ) ( METHOD_2 . VAR_1 = dao ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VM VAR_2 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; } } ; ) ) ( getId . VAR_4 , VAR_3 ( assertEquals . TYPE_4 ; ) ( METHOD_4 . VAR_1 = VAR_4 TYPE_3 final ; ) VAR_2 ( METHOD_3 . VAR_1 ; ) VAR_3 ( METHOD_2 . VAR_2 ; ) ( org.ovirt.engine.core.common.businessentities.VM new = VAR_2 org.ovirt.engine.core.common.businessentities.VM final ; ) ( TYPE_2 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . setTitle ( VAR_1 . METHOD_2 ( ) ) ; TYPE_2 VAR_2 = TYPE_2 . instance ( ) ; if ( VAR_2 ! = null ) { METHOD_3 ( VAR_2 ) ; } TYPE_3 VAR_3 = TYPE_3 . instance ( ) ; if ( VAR_3 ! = null ) { VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; } VAR_5 . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . VAR_5 } ; ) ) ( METHOD_7 . VAR_3 ( METHOD_6 . VAR_4 ; ) ) ( METHOD_5 . VAR_3 ( METHOD_4 . VAR_4 { ) null = ! VAR_3 ( if ; ) ( instance . TYPE_3 = VAR_3 TYPE_3 } ; ) VAR_2 ( METHOD_3 { ) null = ! VAR_2 ( if ; ) ( instance . TYPE_2 = VAR_2 TYPE_2 ; ) ) ( METHOD_2 . VAR_1 ( setTitle . TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public int METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 ) { org.ovirt.engine.core.common.businessentities.VM VAR_3 = vms . get ( VAR_1 . METHOD_2 ( ) ) ; org.ovirt.engine.core.common.businessentities.VM VAR_4 = vms . get ( VAR_2 . METHOD_2 ( ) ) ; return VAR_5 . METHOD_3 ( VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 ( METHOD_3 . VAR_5 return ; ) ) ( METHOD_2 . VAR_2 ( get . vms = VAR_4 org.ovirt.engine.core.common.businessentities.VM ; ) ) ( METHOD_2 . VAR_1 ( get . vms = VAR_3 org.ovirt.engine.core.common.businessentities.VM { ) VAR_2 > ? < TYPE_1 , VAR_1 > ? < TYPE_1 ( METHOD_1 int public 
private boolean METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.compat.Guid VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( ( ! ( VAR_3 . isEmpty ( ) ) ) & & ( ! ( METHOD_3 ( vds , VAR_3 , false ) ) ) ) { VAR_5 . error ( STRING_1 , vds . getName ( ) ) ; METHOD_4 ( VAR_1 , vds . getId ( ) , VAR_6 ) ; return false ; } return true ; } } ; true return } ; false return ; ) VAR_6 , ) ( getId . vds , VAR_1 ( METHOD_4 ; ) ) ( getName . vds , STRING_1 ( error . VAR_5 { ) ) ) ) false , VAR_3 , vds ( METHOD_3 ( ! ( & & ) ) ) ( isEmpty . VAR_3 ( ! ( ( if ; ) VAR_2 ( METHOD_2 . VAR_4 = VAR_3 > TYPE_2 < java.util.List { ) VAR_2 org.ovirt.engine.core.compat.Guid , vds org.ovirt.engine.core.common.businessentities.VDS , VAR_1 TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 2 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . get ( 0 ) . METHOD_5 ( ) . equals ( STRING_2 ) ) || ( VAR_1 . get ( 0 ) . METHOD_5 ( ) . equals ( STRING_3 ) ) ) ) ; } } ; ) ) ) ) STRING_3 ( equals . ) ( METHOD_5 . ) 0 ( get . VAR_1 ( || ) ) STRING_2 ( equals . ) ( METHOD_5 . ) 0 ( get . VAR_1 ( ( ( METHOD_4 . TYPE_2 ; ) 2 , ) ( size . VAR_1 ( assertEquals . TYPE_2 ; ) ) STRING_1 ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_2 . dao = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 ) ) { VAR_4 = new TYPE_4 ( VAR_4 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; log . METHOD_4 ( ( STRING_1 + VAR_1 ) ) ; } catch ( TYPE_5 e ) { log . error ( ( STRING_2 + VAR_1 ) ) ; } } } } ; ) ) VAR_1 + STRING_2 ( ( error . log { ) e TYPE_5 ( catch } ; ) ) VAR_1 + STRING_1 ( ( METHOD_4 . log ; ) VAR_2 ( METHOD_3 . VAR_4 ; ) VAR_4 ( TYPE_4 new = VAR_4 { ) ) VAR_3 , VAR_1 ( METHOD_2 . TYPE_3 = VAR_2 TYPE_2 ( try { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public TYPE_1 add ( TYPE_2 cluster ) { METHOD_1 ( cluster , STRING_1 , STRING_2 ) ; METHOD_2 ( VAR_1 class , cluster ) ; TYPE_3 pool = TYPE_4 . METHOD_3 ( cluster , this ) ; org.ovirt.engine.core.common.businessentities.VDSGroup entity = map ( cluster , map ( pool ) ) ; return METHOD_4 ( VAR_2 , new TYPE_5 ( entity ) , new TYPE_6 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 class ) ) ; } } ; ) ) class VAR_4 , VAR_3 ( > org.ovirt.engine.core.compat.Guid < TYPE_6 new , ) entity ( TYPE_5 new , VAR_2 ( METHOD_4 return ; ) ) pool ( map , cluster ( map = entity org.ovirt.engine.core.common.businessentities.VDSGroup ; ) this , cluster ( METHOD_3 . TYPE_4 = pool TYPE_3 ; ) cluster , class VAR_1 ( METHOD_2 ; ) STRING_2 , STRING_1 , cluster ( METHOD_1 { ) cluster TYPE_2 ( add TYPE_1 public 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , java.util.Map < java.lang.String , java.lang.Object > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > list = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { list . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( host . getId ( ) , 1 ) ) ; } return list ; } } ; list return } ; ) ) 1 , ) ( getId . host ( > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 new ( add . list { ) hosts : host org.ovirt.engine.core.common.businessentities.VDS ( for ; ) ( > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.ArrayList new = list > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List { ) parameters > java.lang.Object , java.lang.String < java.util.Map , hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.List ( METHOD_1 > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_3 ) ) ; TYPE_1 . assertEquals ( STRING_2 , VAR_4 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; } } ; ) ) VAR_3 , VAR_2 ( METHOD_4 . VAR_1 , VAR_4 , STRING_2 ( assertEquals . TYPE_1 ; ) ) VAR_3 ( METHOD_4 . VAR_1 , STRING_1 ( METHOD_3 . TYPE_1 ; ) VAR_4 , VAR_3 , VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 ) { org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_2 ( ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_4 ( ) ) . when ( VAR_2 ) . METHOD_5 ( ) ; TYPE_3 VAR_3 = org.mockito.Mockito . METHOD_6 ( VAR_4 class ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_7 ( TYPE_4 . METHOD_8 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_9 ( TYPE_4 . METHOD_8 ( ) ) ) . thenReturn ( VAR_1 ) ; } } ; ) VAR_1 ( thenReturn . ) ) ) ( METHOD_8 . TYPE_4 ( METHOD_9 . VAR_3 ( org.mockito.Mockito.when ; ) ) ( METHOD_8 . TYPE_4 ( METHOD_7 . ) VAR_2 ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) class VAR_4 ( METHOD_6 . org.mockito.Mockito = VAR_3 TYPE_3 ; ) ( METHOD_5 . ) VAR_2 ( when . ) ) ( METHOD_4 . TYPE_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) VAR_2 ( when . ) ) ( METHOD_2 . TYPE_2 ( org.mockito.Mockito.doReturn { ) VAR_1 ValidationResult . TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( new org.ovirt.engine.core.compat . Version ( STRING_1 ) ) ; command . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 ) ) . thenReturn ( vds ) ; } } ; ) vds ( thenReturn . ) ) VAR_1 ( get . VAR_2 ( org.mockito.Mockito.when ; ) ( METHOD_4 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_3 . command ; ) ) STRING_1 ( Version . org.ovirt.engine.core.compat new ( METHOD_2 . vds ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) . METHOD_2 ( ) , aQuery ) ; } } ; ) aQuery , ) ( METHOD_2 . ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( true , null ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_8 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_9 ( VAR_2 ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_10 ( VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 , cmd . METHOD_11 ( ) ) ; } } ; ) ) ( METHOD_11 . cmd , VAR_3 ( assertEquals . TYPE_1 ; ) VAR_2 ( METHOD_10 . ) cmd ( METHOD_7 . org.mockito.Mockito ; ) VAR_2 ( METHOD_9 . ) cmd ( METHOD_7 . org.mockito.Mockito ; ) ( METHOD_8 . ) cmd ( METHOD_7 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) ) ( validate . cmd ( METHOD_6 . TYPE_1 ; ) null , true ( METHOD_5 ; ) cmd ( METHOD_4 ; ) ) 0 , VAR_1 ( METHOD_3 ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { throw new TYPE_1 ( VAR_4 ) ; } return TYPE_2 . instance ( ) . METHOD_4 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_4 . ) ( instance . TYPE_2 return } ; ) VAR_4 ( TYPE_1 new throw { ) ) ) ( isEmpty . VAR_2 ( || ) null == VAR_2 ( ( if ; ) VAR_3 , VAR_1 ( METHOD_3 . ) ( METHOD_2 = VAR_2 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 org.ovirt.engine.core.common.businessentities.VDS public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_2 = VAR_1 . METHOD_3 ( ) ; int VAR_3 = VAR_2 . METHOD_4 ( STRING_2 ) ; if ( VAR_3 > 0 ) { VAR_2 = ( VAR_2 . METHOD_5 ( 0 , VAR_3 ) ) + STRING_1 ; VAR_1 . METHOD_6 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_6 . VAR_1 ; STRING_1 + ) ) VAR_3 , 0 ( METHOD_5 . VAR_2 ( = VAR_2 { ) 0 > VAR_3 ( if ; ) STRING_2 ( METHOD_4 . VAR_2 = VAR_3 int ; ) ( METHOD_3 . VAR_1 = VAR_2 java.lang.String ; ) STRING_1 ( METHOD_2 . VAR_1 { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public TYPE_1 list ( ) { java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > > VAR_1 = getEntity ( VAR_2 . HashMap class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_1 ( VAR_4 ) ) , null ) ; return METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 return ; ) null , ) ) VAR_4 ( METHOD_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_3 , class HashMap . VAR_2 ( getEntity = VAR_1 > > > java.lang.String , java.lang.String < java.util.HashMap , java.lang.String < java.util.HashMap , java.lang.String < java.util.HashMap { ) ( list TYPE_1 public 
protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_3 . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) ) class VAR_4 ( any . TYPE_3 ( get . VAR_3 ( org.mockito.Mockito.when ; ) VAR_1 ( METHOD_2 . VAR_2 ; ) ) ( TYPE_2 new ( setId . VAR_2 ; ) ( TYPE_1 new = VAR_2 { ) VAR_1 boolean ( METHOD_1 void protected 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; TYPE_2 . METHOD_2 ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } } ; ) VAR_1 , ) VAR_5 ( TYPE_3 new , VAR_4 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( METHOD_2 . TYPE_2 ; ) ) ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_1 ( ( ( ) > java.lang.String , java.lang.Integer < java.util.HashMap ( ( = VAR_3 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void static public 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.ArrayList < java.lang.String > VAR_1 ) { java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; for ( TYPE_1 < TYPE_2 , java.lang.Integer > e : METHOD_3 ( vm ) . METHOD_4 ( ) ) { if ( ! ( METHOD_5 ( e . METHOD_6 ( ) , ( VAR_2 * ( e . getValue ( ) ) ) , VAR_1 ) ) ) { return false ; } } return true ; } } ; true return } } ; false return { ) ) ) VAR_1 , ) ) ) ( getValue . e ( * VAR_2 ( , ) ( METHOD_6 . e ( METHOD_5 ( ! ( if { ) ) ( METHOD_4 . ) vm ( METHOD_3 : e > java.lang.Integer , TYPE_2 < TYPE_1 ( for ; ) VAR_4 ( METHOD_2 > java.lang.Integer < VAR_3 = VAR_2 java.lang.Integer { ) VAR_1 > java.lang.String < java.util.ArrayList , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 boolean public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { return ( ( ( java.util.List < java.lang.String > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } } ; ) aQuery , ) vmId ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; false return } ; 0 > ) ) ( size . ) ) source ( ) > java.lang.String < java.util.List ( ( ( return { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) vmId org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private java.util.Map < java.lang.String , TYPE_1 < ? > > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 < ? > > map ) { map . put ( STRING_1 , VAR_1 class ) ; map . put ( STRING_2 , VAR_2 class ) ; map . put ( STRING_3 , VAR_3 class ) ; map . put ( STRING_4 , VAR_4 class ) ; map . put ( STRING_5 , VAR_5 class ) ; return map ; } } ; map return ; ) class VAR_5 , STRING_5 ( put . map ; ) class VAR_4 , STRING_4 ( put . map ; ) class VAR_3 , STRING_3 ( put . map ; ) class VAR_2 , STRING_2 ( put . map ; ) class VAR_1 , STRING_1 ( put . map { ) map > > ? < TYPE_1 , java.lang.String < java.util.Map ( METHOD_1 > > ? < TYPE_1 , java.lang.String < java.util.Map private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; return VAR_1 . isEmpty ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( ( STRING_1 + name ) , VAR_3 . StorageDomain ) , aQuery ) ; } } ; ) aQuery , ) StorageDomain . VAR_3 , ) name + STRING_1 ( ( TYPE_1 new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; source return } ; ) ( isEmpty . VAR_1 return ; ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) name java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } TYPE_2 . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( source ) ) , new TYPE_3 ( ) ) ; return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_4 ( ) , aQuery ) ; } } ; ) aQuery , ) ( TYPE_4 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; source return ; ) ) ( TYPE_3 new , ) ) source ( ) > TYPE_1 < java.util.List ( ( ( METHOD_2 . TYPE_2 } ; ) ( > TYPE_1 < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities . network VAR_4 = METHOD_4 ( VAR_3 , ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ? METHOD_7 ( VAR_1 . METHOD_5 ( ) . getId ( ) ) : null ) , VAR_1 . METHOD_5 ( ) . getName ( ) ) ; if ( VAR_4 ! = null ) { VAR_2 . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; } } return VAR_2 ; } } ; VAR_2 return } } ; ) ) ( METHOD_9 . VAR_4 ( METHOD_8 . VAR_2 { ) null = ! VAR_4 ( if ; ) ) ( getName . ) ( METHOD_5 . VAR_1 , ) null : ) ) ( getId . ) ( METHOD_5 . VAR_1 ( METHOD_7 ? ) ( METHOD_6 . ) ( METHOD_5 . VAR_1 ( , VAR_3 ( METHOD_4 = VAR_4 network . org.ovirt.engine.core.common.businessentities ; ) ( METHOD_3 = VAR_3 org.ovirt.engine.core.compat.Guid { ) ) ( METHOD_2 . VAR_1 ( if { ) VAR_2 TYPE_1 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 protected 
protected void METHOD_1 ( int VAR_1 , java.lang.Object VAR_2 ) { while ( ( VAR_1 -- ) > 0 ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . METHOD_2 ( VAR_3 [ 2 ] ) ; METHOD_3 ( VAR_4 , VAR_5 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 } , cluster , null ) ; } } } } ; ) null , cluster , } VAR_6 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_5 , VAR_4 ( METHOD_3 ; ) ] 2 [ VAR_3 ( METHOD_2 . cluster ; ) ( TYPE_1 new = cluster TYPE_1 { ) 0 > ) -- VAR_1 ( ( while { ) VAR_2 java.lang.Object , VAR_1 int ( METHOD_1 void protected 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 parameters = new TYPE_1 ( false , VAR_2 ) ; parameters . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( VAR_1 ) ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_3 , parameters , TYPE_3 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . TYPE_3 , parameters , VAR_3 ( METHOD_3 . ) ( getInstance . TYPE_2 ; ) ) VAR_1 ( > org.ovirt.engine.core.compat.Guid < java.util.ArrayList new ( METHOD_2 . parameters ; ) VAR_2 , false ( TYPE_1 new = parameters TYPE_1 { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 > org.ovirt.engine.core.compat.Guid < java.util.List ( METHOD_1 void public 
public void METHOD_1 ( ) { final TYPE_1 iface = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( iface , VAR_2 ) ; METHOD_4 ( VAR_3 , iface ) ; TYPE_3 . assertEquals ( VAR_4 . getValue ( ) . METHOD_5 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_5 . ) ( getValue . VAR_4 ( assertEquals . TYPE_3 ; ) iface , VAR_3 ( METHOD_4 ; ) VAR_2 , iface ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . TYPE_2 = iface TYPE_1 final { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , false ) ; VAR_2 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . getStatus ( ) ) ; } } } } ; ) ) ( getStatus . ) ( METHOD_7 . VAR_3 , INT_1 ( assertEquals ; ) ) ( METHOD_7 . VAR_3 ( METHOD_6 { ) VAR_3 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_5 ; ) ( METHOD_4 . resource { try ; ) ( METHOD_3 . VAR_2 ; ) false , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 . Guid class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; } } ; ) VAR_4 , ) ( METHOD_8 . cmd ( assertEquals . TYPE_4 ; ) ) class Guid . VAR_3 ( any . TYPE_3 ( METHOD_7 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_2 ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) null , true ( METHOD_4 ; ) ( METHOD_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
private boolean METHOD_1 ( TYPE_1 . Network network ) { return ( ( ( network ! = null ) & & ( network . METHOD_2 ( ) ) ) & & ( network . METHOD_3 ( ) . METHOD_4 ( ) ) ) & & ( ! ( network . METHOD_3 ( ) . METHOD_5 ( ) ) ) ; } } ; ) ) ) ( METHOD_5 . ) ( METHOD_3 . network ( ! ( & & ) ) ) ( METHOD_4 . ) ( METHOD_3 . network ( & & ) ) ) ( METHOD_2 . network ( & & ) null = ! network ( ( ( return { ) network Network . TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = dao . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_3 . size ( ) ) == 1 ) ) ; TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_4 ) ) ; TYPE_2 . METHOD_6 ( VAR_3 . METHOD_5 ( VAR_5 ) ) ; } } ; ) ) VAR_5 ( METHOD_5 . VAR_3 ( METHOD_6 . TYPE_2 ; ) ) VAR_4 ( METHOD_5 . VAR_3 ( METHOD_4 . TYPE_2 ; ) ) 1 == ) ) ( size . VAR_3 ( ( ( METHOD_4 . TYPE_2 ; ) VAR_1 ( METHOD_3 . dao = VAR_3 > TYPE_1 < java.util.List ; ) VAR_2 , VAR_1 ( METHOD_2 . dao { ) ( METHOD_1 void public 
protected java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , int VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 . add ( METHOD_2 ( VAR_1 ) ) ; VAR_3 . add ( METHOD_3 ( VAR_2 ) ) ; return VAR_3 ; } } ; VAR_3 return ; ) ) VAR_2 ( METHOD_3 ( add . VAR_3 ; ) ) VAR_1 ( METHOD_2 ( add . VAR_3 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_3 > TYPE_1 < java.util.List { ) VAR_2 int , VAR_1 int ( METHOD_1 > TYPE_1 < java.util.List protected 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { if ( returnValue ! = null ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_2 = new java.util.ArrayList ( TYPE_1 . METHOD_1 ( new org.ovirt.engine.core.common.businessentities.StoragePool [ ] { VAR_1 } ) ) ; METHOD_2 ( VAR_2 ) ; } else { getModel ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( METHOD_3 . ) ( getModel { else } ; ) VAR_2 ( METHOD_2 ; ) ) } VAR_1 { ] [ org.ovirt.engine.core.common.businessentities.StoragePool new ( METHOD_1 . TYPE_1 ( java.util.ArrayList new = VAR_2 > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.List ; ) ) returnValue ( ) org.ovirt.engine.core.common.businessentities.StoragePool ( ( = VAR_1 org.ovirt.engine.core.common.businessentities.StoragePool { ) null = ! returnValue ( if { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
protected boolean METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 . DiskImage diskImage , TYPE_2 VAR_2 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 ) { if ( VAR_1 . METHOD_2 ( VAR_3 ) ) { return false ; } return super . METHOD_1 ( VAR_1 , diskImage , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , diskImage , VAR_1 ( METHOD_1 . super return } ; false return { ) ) VAR_3 ( METHOD_2 . VAR_1 ( if { ) VAR_3 org.ovirt.engine.core.common.businessentities.StorageDomain , VAR_2 TYPE_2 , diskImage DiskImage . TYPE_1 , VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( METHOD_1 boolean protected 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( STRING_1 . equals ( command . getName ( ) ) ) { METHOD_2 ( ) ; } else if ( STRING_2 . equals ( command . getName ( ) ) ) { METHOD_3 ( ) ; } else if ( STRING_3 . equals ( command . getName ( ) ) ) { METHOD_4 ( ) ; } else if ( STRING_4 . equals ( command . getName ( ) ) ) { METHOD_5 ( ) ; } else { super . METHOD_1 ( command ) ; } } } } ; ) command ( METHOD_1 . super { else } ; ) ( METHOD_5 { ) ) ) ( getName . command ( equals . STRING_4 ( if else } ; ) ( METHOD_4 { ) ) ) ( getName . command ( equals . STRING_3 ( if else } ; ) ( METHOD_3 { ) ) ) ( getName . command ( equals . STRING_2 ( if else } ; ) ( METHOD_2 { ) ) ) ( getName . command ( equals . STRING_1 ( if { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 ) ; TYPE_3 < java.lang.String , java.lang.String > VAR_2 = VAR_3 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , VAR_1 ) ; TYPE_2 . METHOD_5 ( VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . VAR_1 , ) ( METHOD_6 . VAR_1 , VAR_2 ( METHOD_5 . TYPE_2 ; ) VAR_1 , ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_3 = VAR_2 > java.lang.String , java.lang.String < TYPE_3 ; ) STRING_3 , STRING_2 , STRING_1 ( METHOD_2 . TYPE_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 params ) throws java.lang.Exception { TYPE_1 < TYPE_2 > result = super . METHOD_1 ( params ) ; VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( result . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; return result ; } } ; result return ; ) VAR_1 ( thenReturn . ) ) ( METHOD_3 . result ( org.mockito.Mockito.when ; ) class VAR_2 ( METHOD_2 . org.mockito.Mockito = VAR_1 ; ) params ( METHOD_1 . super = result > TYPE_2 < TYPE_1 { java.lang.Exception throws ) params TYPE_2 ( METHOD_1 > TYPE_2 < TYPE_1 protected 
private static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 client = new TYPE_1 ( new TYPE_2 ( ) ) ; int VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; TYPE_3 VAR_5 = new TYPE_4 ( VAR_2 , false ) ; TYPE_5 parameters = client . METHOD_3 ( ) ; parameters . METHOD_4 ( VAR_6 , VAR_5 ) ; return client ; } } ; client return ; ) VAR_5 , VAR_6 ( METHOD_4 . parameters ; ) ( METHOD_3 . client = parameters TYPE_5 ; ) false , VAR_2 ( TYPE_4 new = VAR_5 TYPE_3 ; ) VAR_4 ( METHOD_2 > java.lang.Integer < VAR_3 = VAR_2 int ; ) ) ( TYPE_2 new ( TYPE_1 new = client TYPE_1 { ) VAR_1 int ( METHOD_1 TYPE_1 static private 
protected void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 < TYPE_2 . DiskImage > VAR_2 ) { TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = null ; for ( TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 : METHOD_2 ( VAR_2 ) ) { VAR_3 = ( VAR_3 == null ) ? VAR_4 . METHOD_3 ( ) : VAR_3 . METHOD_4 ( VAR_4 . METHOD_3 ( ) ) ; } TYPE_4 . METHOD_5 ( VAR_1 , VAR_3 ) ; } } ; ) VAR_3 , VAR_1 ( METHOD_5 . TYPE_4 } ; ) ) ( METHOD_3 . VAR_4 ( METHOD_4 . VAR_3 : ) ( METHOD_3 . VAR_4 ? ) null == VAR_3 ( = VAR_3 { ) ) VAR_2 ( METHOD_2 : VAR_4 > org.ovirt.engine.core.common.businessentities.StorageDomain < TYPE_3 ( for ; null = VAR_3 > org.ovirt.engine.core.common.businessentities.StorageDomain < TYPE_3 { ) VAR_2 > DiskImage . TYPE_2 < TYPE_1 , VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.List ( METHOD_1 void protected 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 ) ; vds . METHOD_2 ( INT_1 ) ; TYPE_1 host = TYPE_2 . map ( vds , ( ( TYPE_1 ) ( null ) ) ) ; METHOD_3 ( host . METHOD_4 ( ) ) ; assertEquals ( new TYPE_3 ( host . METHOD_4 ( ) ) , new TYPE_3 ( INT_2 ) ) ; } } ; ) ) INT_2 ( TYPE_3 new , ) ) ( METHOD_4 . host ( TYPE_3 new ( assertEquals ; ) ) ( METHOD_4 . host ( METHOD_3 ; ) ) ) null ( ) TYPE_1 ( ( , vds ( map . TYPE_2 = host TYPE_1 ; ) INT_1 ( METHOD_2 . vds ; ) VAR_1 ( setId . vds ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_4 , VAR_1 . getStatus ( ) ) ; dao . METHOD_5 ( VAR_1 . getId ( ) , VAR_5 ) ; TYPE_1 VAR_6 = dao . METHOD_2 ( VAR_2 ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_6 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . ) ( METHOD_6 . VAR_6 , VAR_5 ( assertEquals . TYPE_3 ; ) VAR_2 ( METHOD_2 . dao = VAR_6 TYPE_1 ; ) VAR_5 , ) ( getId . VAR_1 ( METHOD_5 . dao ; ) ) ( getStatus . VAR_1 , VAR_4 ( assertEquals . TYPE_3 ; ) VAR_1 ( METHOD_4 . TYPE_3 ; ) ) STRING_1 ( org.ovirt.engine.core.compat.Guid new ( METHOD_3 . VAR_3 ; ) ( TYPE_2 new = VAR_3 TYPE_2 ; ) VAR_2 ( METHOD_2 . dao = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( null ) ; METHOD_3 ( VAR_3 . length ) ; METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; java.util.List < TYPE_2 > hosts = METHOD_6 ( ) ; METHOD_7 ( hosts . get ( 0 ) . METHOD_8 ( ) ) ; METHOD_9 ( hosts ) ; } finally { VAR_1 . METHOD_10 ( ) ; } } } } ; ) ( METHOD_10 . VAR_1 { finally } ; ) hosts ( METHOD_9 ; ) ) ( METHOD_8 . ) 0 ( get . hosts ( METHOD_7 ; ) ( METHOD_6 = hosts > TYPE_2 < java.util.List ; ) VAR_2 ( METHOD_5 . VAR_4 ; ) STRING_2 ( METHOD_4 ; ) length . VAR_3 ( METHOD_3 ; ) null ( METHOD_2 = VAR_2 TYPE_1 ; ) STRING_1 ( add . VAR_1 { try { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . network > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_2 : result ) { TYPE_2 . assertEquals ( VAR_1 , VAR_2 . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . VAR_2 , VAR_1 ( assertEquals . TYPE_2 { ) result : VAR_2 network . org.ovirt.engine.core.common.businessentities ( for ; ) result ( METHOD_3 . TYPE_1 ; ) VAR_1 ( METHOD_2 . dao = result > network . org.ovirt.engine.core.common.businessentities < java.util.List { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ( get . resource { try ; ) ( METHOD_6 . VAR_1 ; ) ) ( METHOD_5 , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ ( ( VAR_6 . length ) - 1 ) ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_7 ; ) VAR_2 , ) ( METHOD_3 , } ] ) 1 - ) length . VAR_6 ( ( [ VAR_5 { ] [ java.lang.Object new , } STRING_2 { ] [ java.lang.String new , class IdQueryParameters . VAR_4 , VAR_3 ( METHOD_2 ; ) STRING_1 ( equals . VAR_1 assert { java.lang.Exception throws ) VAR_2 java.lang.Object , VAR_1 java.lang.String ( METHOD_1 void protected 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 . VdcQueryReturnValue response = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( response . getSucceeded ( ) ) { model . METHOD_2 ( ( ( java.util.ArrayList < TYPE_3 > ) ( response . getReturnValue ( ) ) ) , false ) ; model . METHOD_3 ( STRING_1 ) ; } else { model . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( METHOD_3 . model { else } ; ) STRING_1 ( METHOD_3 . model ; ) false , ) ) ) ( getReturnValue . response ( ) > TYPE_3 < java.util.ArrayList ( ( ( METHOD_2 . model { ) ) ( getSucceeded . response ( if ; ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = response VdcQueryReturnValue . TYPE_2 ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_3 ( ) ; if ( VAR_3 . equals ( VAR_4 ) ) { TYPE_2 . METHOD_4 ( STRING_1 ) ; } dao . METHOD_5 ( VAR_5 , VAR_6 , VAR_4 ) ; VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , STRING_2 ( assertEquals . TYPE_2 ; ) ( METHOD_3 . VAR_1 = VAR_3 ; ) 0 ( get . ) VAR_2 ( METHOD_2 . dao = VAR_1 ; ) VAR_4 , VAR_6 , VAR_5 ( METHOD_5 . dao } ; ) STRING_1 ( METHOD_4 . TYPE_2 { ) ) VAR_4 ( equals . VAR_3 ( if ; ) ( METHOD_3 . VAR_1 = VAR_3 org.ovirt.engine.core.compat.Guid ; ) 0 ( get . ) VAR_2 ( METHOD_2 . dao = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public boolean METHOD_1 ( TYPE_1 source ) { return ( TYPE_2 . METHOD_2 ( source . METHOD_3 ( ) , target . METHOD_3 ( ) ) ) & & ( ( ( TYPE_2 . METHOD_4 ( target . METHOD_5 ( ) ) ) || ( TYPE_2 . METHOD_2 ( target . METHOD_5 ( ) , STRING_1 ) ) ) || ( source . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( target . METHOD_5 ( ) ) ) ) ; } } ; ) ) ) ) ( METHOD_5 . target ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 . source ( || ) ) ) STRING_1 , ) ( METHOD_5 . target ( METHOD_2 . TYPE_2 ( || ) ) ) ( METHOD_5 . target ( METHOD_4 . TYPE_2 ( ( ( & & ) ) ) ( METHOD_3 . target , ) ( METHOD_3 . source ( METHOD_2 . TYPE_2 ( return { ) source TYPE_1 ( METHOD_1 boolean public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } } ; ) aQuery , ) id ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) id org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_2 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( TYPE_3 . METHOD_3 ( ) ) . when ( cmd ) . METHOD_4 ( ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; TYPE_4 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_5 . name ( ) ) ) ; } } ; ) ) ) ( name . TYPE_5 ( METHOD_8 . ) ( METHOD_7 . ) ( getReturnValue . cmd ( METHOD_6 . TYPE_4 ; ) ) ( validate . cmd ( METHOD_5 . TYPE_4 ; ) ( METHOD_4 . ) cmd ( when . ) ) ( METHOD_3 . TYPE_3 ( org.mockito.Mockito.doReturn ; ) ) class Guid . VAR_3 ( any . TYPE_2 ( METHOD_2 . ) VAR_2 ( when . ) ) VAR_1 ( ValidationResult . TYPE_1 new ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( TYPE_1 . getVm ( ) . getId ( ) ) ; if ( ( ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) || ( ! ( TYPE_2 . METHOD_4 ( TYPE_1 . getVm ( ) . METHOD_5 ( ) ) ) ) ) { METHOD_6 ( true ) ; METHOD_7 ( METHOD_8 ( ) ) ; } else { super . METHOD_1 ( ) ; } METHOD_9 ( ) ; } } ; ) ( METHOD_9 } ; ) ( METHOD_1 . super { else } ; ) ) ( METHOD_8 ( METHOD_7 ; ) true ( METHOD_6 { ) ) ) ) ) ( METHOD_5 . ) ( getVm . TYPE_1 ( METHOD_4 . TYPE_2 ( ! ( || ) ) VAR_1 ( == ) ) ( METHOD_3 . ) ( getVm . TYPE_1 ( ( ( if ; ) ) ( getId . ) ( getVm . TYPE_1 ( METHOD_2 . ) ( getParameters . TYPE_1 { ) ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; return new TYPE_1 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_2 ) , VAR_3 , STRING_3 , STRING_4 , 2 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , false , false , STRING_5 , VAR_1 ) ; } } ; ) VAR_1 , STRING_5 , false , false , true , ) ( > java.lang.Object , java.lang.String < java.util.HashMap new , 2 , STRING_4 , STRING_3 , VAR_3 , ) VAR_2 , ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( TYPE_3 new ( TYPE_1 new return ; ) STRING_2 , STRING_1 ( put . VAR_1 ; ) ( > < TYPE_2 new = VAR_1 > java.lang.String , java.lang.String < java.util.Map { ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; final long VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; final long VAR_4 = ( TYPE_1 . METHOD_2 ( VAR_1 ) ) + ( VAR_5 ) ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , VAR_1 ( METHOD_3 ; ) VAR_5 ( + ) ) VAR_1 ( METHOD_2 . TYPE_1 ( = VAR_4 long final ; ) VAR_1 ( METHOD_2 . TYPE_1 = VAR_3 long final ; STRING_2 = VAR_2 java.lang.String ; STRING_1 = VAR_1 java.lang.String { ) ( METHOD_1 void public 
private static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_1 . METHOD_2 ( ) ; aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( returnValue ! = null ) { VAR_1 . METHOD_3 ( ( ( java.util.HashMap < TYPE_2 < TYPE_3 , java.lang.String > , java.lang.Object > ) ( returnValue ) ) ) ; } return VAR_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_4 ( ) , aQuery ) ; } } ; ) aQuery , ) ( TYPE_4 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; VAR_1 return } ; ) ) ) returnValue ( ) > java.lang.Object , > java.lang.String , TYPE_3 < TYPE_2 < java.util.HashMap ( ( ( METHOD_3 . VAR_1 { ) null = ! returnValue ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , returnValue java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback ; ) ( METHOD_2 . TYPE_1 { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; METHOD_7 ( METHOD_8 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 } , true , true ) ) ; METHOD_9 ( resource . METHOD_10 ( ) ) ; } } ; ) ) ( METHOD_10 . resource ( METHOD_9 ; ) ) true , true , } VAR_4 , VAR_3 { ] [ java.lang.Object new , } STRING_2 , STRING_1 { ] [ java.lang.String new , class VAR_2 , VAR_1 ( METHOD_8 ( METHOD_7 ; ) 1 ( METHOD_6 ; ) 1 ( METHOD_5 ; ) 1 ( METHOD_4 ; ) ( METHOD_3 ; ) 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = VAR_1 . get ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; if ( vds == null ) { throw new TYPE_2 ( java.lang.String . METHOD_3 ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) ; } if ( ( vds . getStatus ( ) ) ! = ( VAR_2 ) ) { METHOD_4 ( vds . getName ( ) ) ; throw new TYPE_2 ( ) ; } return vds . getId ( ) ; } } ; ) ( getId . vds return } ; ) ( TYPE_2 new throw ; ) ) ( getName . vds ( METHOD_4 { ) ) VAR_2 ( = ! ) ) ( getStatus . vds ( ( if } ; ) ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 , STRING_1 ( METHOD_3 . java.lang.String ( TYPE_2 new throw { ) null == vds ( if ; ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( get . VAR_1 = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 org.ovirt.engine.core.compat.Guid private 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , java.util.Map < java.lang.String , java.lang.Object > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_1 = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_1 . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( vds . getId ( ) , ( INT_1 - ( vds . METHOD_2 ( ) ) ) ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ) ) ) ( METHOD_2 . vds ( - INT_1 ( , ) ( getId . vds ( > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 new ( add . VAR_1 { ) hosts : vds org.ovirt.engine.core.common.businessentities.VDS ( for ; ) ( > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.ArrayList new = VAR_1 > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List { ) parameters > java.lang.Object , java.lang.String < java.util.Map , hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.List ( METHOD_1 > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true , getEntity ( 0 ) ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ) 0 ( getModel . TYPE_1 ( METHOD_6 . resource { try ; ) ( METHOD_5 . VAR_1 ; ) ) 0 ( getEntity , true , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private < TYPE_1 > TYPE_1 getEntity ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_3 . VdcQueryType VAR_2 , TYPE_4 VAR_3 , java.lang.String VAR_4 , boolean VAR_5 , boolean VAR_6 ) { try { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; } catch ( java.lang.Exception e ) { return METHOD_2 ( VAR_1 , e , VAR_5 ) ; } } } } ; ) VAR_5 , e , VAR_1 ( METHOD_2 return { ) e java.lang.Exception ( catch } ; ) VAR_6 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( METHOD_1 return { try { ) VAR_6 boolean , VAR_5 boolean , VAR_4 java.lang.String , VAR_3 TYPE_4 , VAR_2 VdcQueryType . TYPE_3 , VAR_1 > TYPE_1 < TYPE_2 ( getEntity TYPE_1 > TYPE_1 < private 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( getVdsGroup ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( VAR_2 ) ) . thenReturn ( getVdsGroup ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( cmd . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; } } ; ) VAR_3 ( thenReturn . ) ) ( METHOD_4 . cmd ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) cmd ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) ) ( getVdsGroup ( thenReturn . ) ) VAR_2 ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when ; ) ) ( getVdsGroup ( thenReturn . ) ) VAR_2 ( get . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) : false ; } } ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) , aQuery ) ; } } ; ) aQuery , ) ) ( METHOD_4 . TYPE_1 , VAR_1 ( TYPE_2 new ( METHOD_3 . TYPE_1 ; } } ; false : ) ( METHOD_2 . ) ) source ( ) java.lang.Boolean ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected boolean METHOD_1 ( ) { return ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) || ( getVm ( ) . METHOD_4 ( ) ) ) || ( ! ( METHOD_5 ( ) . METHOD_6 ( ) ) ) ) & & ( METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 ( & & ) ) ) ) ( METHOD_6 . ) ( METHOD_5 ( ! ( || ) ) ) ( METHOD_4 . ) ( getVm ( || ) ) ) ( METHOD_3 ( || ) ) ( METHOD_2 ( ( ( ( return { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , true ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( ( ( VAR_1 . METHOD_5 ( ) . METHOD_7 ( ) . getStatus ( ) ) == ( VAR_2 ) ) ) ; TYPE_3 . METHOD_8 ( VAR_3 . METHOD_9 ( ) ) ; org.mockito.Mockito . METHOD_10 ( VAR_4 , org.mockito.Mockito . METHOD_11 ( ) ) . METHOD_12 ( VAR_1 . METHOD_4 ( ) , VAR_5 ) ; } } ; ) VAR_5 , ) ( METHOD_4 . VAR_1 ( METHOD_12 . ) ) ( METHOD_11 . org.mockito.Mockito , VAR_4 ( METHOD_10 . org.mockito.Mockito ; ) ) ( METHOD_9 . VAR_3 ( METHOD_8 . TYPE_3 ; ) ) ) VAR_2 ( == ) ) ( getStatus . ) ( METHOD_7 . ) ( METHOD_5 . VAR_1 ( ( ( METHOD_6 . TYPE_2 ; ) ) ( METHOD_5 . VAR_1 , ) ( METHOD_4 . VAR_1 ( METHOD_3 . TYPE_2 ; ) true , VAR_1 ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( VAR_1 . size ( ) ) ; for ( TYPE_1 host : VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( host . getName ( ) ) ; vds . METHOD_3 ( host . METHOD_4 ( ) ) ; hosts . add ( vds ) ; } return hosts ; } } ; hosts return } ; ) vds ( add . hosts ; ) ) ( METHOD_4 . host ( METHOD_3 . vds ; ) ) ( getName . host ( METHOD_2 . vds ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = vds org.ovirt.engine.core.common.businessentities.VDS { ) VAR_1 : host TYPE_1 ( for ; ) ) ( size . VAR_1 ( > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList new = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List private 
public void METHOD_1 ( ) { TYPE_1 disk = VAR_1 . get ( VAR_2 ) ; TYPE_2 . METHOD_2 ( disk ) ; java.lang.String name = disk . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( name . equals ( VAR_3 . METHOD_5 ( VAR_2 , VAR_4 . Disk ) ) ) ; } } ; ) ) ) Disk . VAR_4 , VAR_2 ( METHOD_5 . VAR_3 ( equals . name ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . disk = name java.lang.String ; ) disk ( METHOD_2 . TYPE_2 ; ) VAR_2 ( get . VAR_1 = disk TYPE_1 { ) ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = new java.lang.Integer ( VAR_1 . METHOD_2 ( ) ) . toString ( ) ; if ( ( ! ( TYPE_3 . isEmpty ( VAR_3 ) ) ) & & ( ! ( VAR_3 . equals ( STRING_1 ) ) ) ) { VAR_2 . add ( VAR_4 , VAR_3 ) ; } } } } ; ) VAR_3 , VAR_4 ( add . VAR_2 { ) ) ) ) STRING_1 ( equals . VAR_3 ( ! ( & & ) ) ) VAR_3 ( isEmpty . TYPE_3 ( ! ( ( if ; ) ( toString . ) ) ( METHOD_2 . VAR_1 ( java.lang.Integer new = VAR_3 java.lang.String { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void static private 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { if ( ! VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId , VAR_3 , TYPE_2 . getName ( ) ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_5 . METHOD_4 ( VAR_4 . getId ( ) ) ; } } else { TYPE_3 . METHOD_5 ( vmId ) ; } } } } ; ) vmId ( METHOD_5 . TYPE_3 { else } } ; ) ) ( getId . VAR_4 ( METHOD_4 . VAR_5 { ) VAR_2 : VAR_4 TYPE_1 ( for ; ) ) ( getName . TYPE_2 , VAR_3 , vmId ( METHOD_3 . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_2 > TYPE_1 < java.util.List { ) VAR_1 ! ( if { ) VAR_1 boolean , vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 void static public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; org.mockito.Mockito.when ( host . getName ( ) ) . thenReturn ( TYPE_1 . instance ( ) . METHOD_3 ( ( ( VAR_3 ) * 2 ) ) ) ; TYPE_2 . METHOD_4 ( validator . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( VAR_4 ) ) ; } } ; ) ) VAR_4 ( METHOD_6 . TYPE_3 , ) ( METHOD_5 . validator ( METHOD_4 . TYPE_2 ; ) ) ) 2 * ) VAR_3 ( ( ( METHOD_3 . ) ( instance . TYPE_1 ( thenReturn . ) ) ( getName . host ( org.mockito.Mockito.when ; ) VAR_3 , VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) ! = null ) { return ; } TYPE_1 model = TYPE_2 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) , getEntity ( ) , getEntity ( ) . METHOD_4 ( ) , ( ( java.util.ArrayList < TYPE_3 > ) ( METHOD_5 ( ) ) ) , ( ( TYPE_3 ) ( getSelectedItem ( ) ) ) , this ) ; METHOD_6 ( model ) ; } } ; ) model ( METHOD_6 ; ) this , ) ) ) ( getSelectedItem ( ) TYPE_3 ( ( , ) ) ) ( METHOD_5 ( ) > TYPE_3 < java.util.ArrayList ( ( , ) ( METHOD_4 . ) ( getEntity , ) ( getEntity , ) ( METHOD_3 . ) ( getEntity ( METHOD_2 . TYPE_2 = model TYPE_1 } ; return { ) null = ! ) ) ( getWindow ( ( if { ) ( METHOD_1 void private 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) ! = ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) & & ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_3 ( equals . TYPE_2 ( & & ) ) VAR_2 , VAR_1 ( equals . TYPE_2 ( return ; ) ) obj ( ) TYPE_1 ( ( = other TYPE_1 } ; false return { ) ) ) ( METHOD_1 . obj ( = ! ) ) ( METHOD_1 ( ( if } ; false return { ) null == obj ( if } ; true return { ) obj == ) this ( ( if { ) obj java.lang.Object ( equals boolean public 
protected void METHOD_1 ( ) { if ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( object . getId ( ) ) ) { object . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } if ( TYPE_1 . isEmpty ( object . METHOD_4 ( ) ) ) { object . METHOD_5 ( TYPE_2 . instance ( ) . METHOD_6 ( INT_1 ) ) ; } if ( ( object . METHOD_7 ( ) ) == null ) { object . METHOD_8 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_8 . object { ) null == ) ) ( METHOD_7 . object ( ( if } ; ) ) INT_1 ( METHOD_6 . ) ( instance . TYPE_2 ( METHOD_5 . object { ) ) ) ( METHOD_4 . object ( isEmpty . TYPE_1 ( if } ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( setId . object { ) ) ) ( getId . object ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( if { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { VAR_1 . put ( network . METHOD_2 ( ) , new TYPE_1 ( network , this ) ) ; } METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 } ; ) ) this , network ( TYPE_1 new , ) ( METHOD_2 . network ( put . VAR_1 { ) VAR_2 : network org.ovirt.engine.core.common.businessentities.network.Network ( for ; ) ( > TYPE_1 , java.lang.String < java.util.HashMap new = VAR_1 > TYPE_1 , java.lang.String < java.util.Map { ) ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 ) { VAR_1 . append ( METHOD_2 ( ) . id ( TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( ) , TYPE_5 . METHOD_5 ( ) , context ) ) ) ; for ( TYPE_6 < TYPE_2 , ? > VAR_2 : VAR_3 ) { METHOD_1 ( context , value , VAR_1 , VAR_2 ) ; } VAR_1 . METHOD_6 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_6 . VAR_1 } ; ) VAR_2 , VAR_1 , value , context ( METHOD_1 { ) VAR_3 : VAR_2 > ? , TYPE_2 < TYPE_6 ( for ; ) ) ) context , ) ( METHOD_5 . TYPE_5 , ) ( METHOD_4 . TYPE_5 ( METHOD_3 . TYPE_4 ( id . ) ( METHOD_2 ( append . VAR_1 { ) VAR_1 TYPE_3 , value TYPE_2 , context TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_3 . getId ( ) , disk . getId ( ) , VAR_2 . Disk ) ; TYPE_4 . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . TYPE_4 ; ) Disk . VAR_2 , ) ( getId . disk , ) ( getId . TYPE_3 , ) ( METHOD_3 . ) ( METHOD_2 . TYPE_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) disk Disk . org.ovirt.engine.core.common.businessentities ( METHOD_1 void private 
protected java.lang.Object [ ] METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return new java.lang.Object [ 0 ] ; } else { java.util.ArrayList < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; for ( TYPE_1 a : VAR_2 . Linq < TYPE_1 > METHOD_3 ( METHOD_2 ( ) ) ) { VAR_1 . add ( a . getId ( ) ) ; } return VAR_1 . METHOD_4 ( new java.lang.Object [ ] { } ) ; } } } } ; ) } { ] [ java.lang.Object new ( METHOD_4 . VAR_1 return } ; ) ) ( getId . a ( add . VAR_1 { ) ) ) ( METHOD_2 ( METHOD_3 > TYPE_1 < Linq . VAR_2 : a TYPE_1 ( for ; ) ( > java.lang.Object < java.util.ArrayList new = VAR_1 > java.lang.Object < java.util.ArrayList { else } ; ] 0 [ java.lang.Object new return { ) null == ) ) ( METHOD_2 ( ( if { ) ( METHOD_1 ] [ java.lang.Object protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( VAR_2 ) ) < 0 ) ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( VAR_1 ) ) == 0 ) ) ; TYPE_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( VAR_1 ) ) > 0 ) ) ; } } ; ) ) 0 > ) ) VAR_1 ( METHOD_4 . VAR_2 ( ( ( METHOD_3 . TYPE_2 ; ) ) 0 == ) ) VAR_1 ( METHOD_4 . VAR_1 ( ( ( METHOD_3 . TYPE_2 ; ) ) 0 < ) ) VAR_2 ( METHOD_4 . VAR_1 ( ( ( METHOD_3 . TYPE_2 ; ) STRING_2 ( METHOD_2 . TYPE_1 = VAR_2 TYPE_1 ; ) STRING_1 ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private static java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid TYPE_2 : VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( TYPE_2 . toString ( ) ) ; VAR_2 . add ( VAR_4 ) ; } if ( VAR_1 ) { TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_2 . add ( VAR_5 ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) VAR_5 ( add . VAR_2 ; ) VAR_6 ( METHOD_2 . VAR_5 ; ) ( TYPE_1 new = VAR_5 TYPE_1 { ) VAR_1 ( if } ; ) VAR_4 ( add . VAR_2 ; ) ) ( toString . TYPE_2 ( METHOD_2 . VAR_4 ; ) ( TYPE_1 new = VAR_4 TYPE_1 { ) VAR_3 : TYPE_2 org.ovirt.engine.core.compat.Guid ( for ; ) ( > < java.util.ArrayList new = VAR_2 > TYPE_1 < java.util.List { ) VAR_1 boolean ( METHOD_1 > TYPE_1 < java.util.List static private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . METHOD_2 ( STRING_1 , VAR_2 ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) . equals ( VAR_1 . METHOD_4 ( ) ) , true ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_3 ) . getId ( ) . equals ( VAR_1 . getId ( ) ) , true ) ; } } ; ) true , ) ) ( getId . VAR_1 ( equals . ) ( getId . ) VAR_3 ( METHOD_3 . dao ( assertEquals . TYPE_2 ; ) true , ) ) ( METHOD_4 . VAR_1 ( equals . ) ( METHOD_4 . ) VAR_3 ( METHOD_3 . dao ( assertEquals . TYPE_2 ; ) VAR_2 , STRING_1 ( METHOD_2 . dao = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < TYPE_1 > list = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_3 : list ) { if ( ! ( VAR_3 . METHOD_1 ( ) . equals ( VAR_4 . METHOD_2 ( ) ) ) ) { VAR_2 . add ( VAR_3 ) ; } } setItems ( VAR_2 ) ; } } ; ) VAR_2 ( setItems } } ; ) VAR_3 ( add . VAR_2 { ) ) ) ) ( METHOD_2 . VAR_4 ( equals . ) ( METHOD_1 . VAR_3 ( ! ( if { ) list : VAR_3 TYPE_1 ( for ; ) ( > < java.util.ArrayList new = VAR_2 > TYPE_1 < java.util.ArrayList ; ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_2 ( ( = list > TYPE_1 < java.util.ArrayList { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( null ) ; METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( ) ; try { VAR_2 . add ( model ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_10 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_3 ( METHOD_10 { ) VAR_3 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_9 ; ) model ( add . VAR_2 { try ; ) ( METHOD_8 . VAR_1 ; ) ) ( METHOD_7 ( METHOD_6 ; ) null ( METHOD_5 . ) 0 ( get . ) ( METHOD_4 . ) ( METHOD_4 . ) ( METHOD_3 . model ; ) ( METHOD_2 = model Disk . TYPE_1 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( result ) ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_1 . METHOD_1 ( true ) ; VAR_1 . METHOD_2 ( true ) ; } else { METHOD_1 ( false ) ; METHOD_2 ( false ) ; } } } } ; ) false ( METHOD_2 ; ) false ( METHOD_1 { else } ; ) true ( METHOD_2 . VAR_1 ; ) true ( METHOD_1 . VAR_1 { ) ) ) ( isEmpty . VAR_2 ( ! ( if ; ) ) result ( ) > java.lang.String , java.lang.String < java.util.Map ( ( = VAR_2 > java.lang.String , java.lang.String < java.util.Map ; ) ) model ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) result java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( 1 ) ; METHOD_7 ( METHOD_8 ( ) ) ; VAR_4 . METHOD_9 ( ) ; java.util.List < TYPE_2 . Network > VAR_5 = METHOD_10 ( ) ; TYPE_3 . METHOD_11 ( VAR_5 , new TYPE_4 ( ) ) ; METHOD_12 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_12 ; ) ) ( TYPE_4 new , VAR_5 ( METHOD_11 . TYPE_3 ; ) ( METHOD_10 = VAR_5 > Network . TYPE_2 < java.util.List ; ) ( METHOD_9 . VAR_4 ; ) ) ( METHOD_8 ( METHOD_7 ; ) 1 ( METHOD_6 ; ) VAR_1 ( METHOD_5 . ) ) VAR_3 ( METHOD_4 . VAR_2 ( METHOD_3 . TYPE_1 ; ) VAR_2 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( add . VAR_1 ; ) ( > < java.util.ArrayList new = VAR_1 > java.lang.String < java.util.List { java.lang.Exception throws ) ( METHOD_1 void public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_1 > source , TYPE_3 < ? super TYPE_1 > VAR_1 ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < > ( ) ; for ( TYPE_1 item : source ) { if ( VAR_1 . METHOD_2 ( item ) ) { list . add ( item ) ; } } return list ; } } ; list return } } ; ) item ( add . list { ) ) item ( METHOD_2 . VAR_1 ( if { ) source : item TYPE_1 ( for ; ) ( > < java.util.ArrayList new = list > TYPE_1 < java.util.ArrayList { ) VAR_1 > TYPE_1 super ? < TYPE_3 , source > TYPE_1 < TYPE_2 ( METHOD_1 > TYPE_1 < TYPE_2 > TYPE_1 < static public 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { TYPE_3 < java.lang.String > VAR_1 = TYPE_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_5 . METHOD_3 ( this , model , entity ) ; if ( VAR_1 . METHOD_4 ( STRING_1 ) ) { TYPE_5 . METHOD_5 ( this , model , entity ) ; } return model ; } } ; model return } ; ) entity , model , this ( METHOD_5 . TYPE_5 { ) ) STRING_1 ( METHOD_4 . VAR_1 ( if ; ) entity , model , this ( METHOD_3 . TYPE_5 ; ) VAR_3 , VAR_2 ( METHOD_2 . TYPE_4 = VAR_1 > java.lang.String < TYPE_3 { ) entity TYPE_2 , model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { boolean VAR_1 = false ; java.util.List < TYPE_1 > VAR_2 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; if ( ( ( VAR_2 . size ( ) ) == 1 ) & & ( ( VAR_2 . get ( 0 ) . METHOD_1 ( ) ) == ( VAR_3 ) ) ) { VAR_1 = true ; } METHOD_2 ( ) . setEntity ( VAR_1 ) ; METHOD_3 ( ) . setEntity ( ( ! VAR_1 ) ) ; } } ; ) ) VAR_1 ! ( ( setEntity . ) ( METHOD_3 ; ) VAR_1 ( setEntity . ) ( METHOD_2 } ; true = VAR_1 { ) ) ) VAR_3 ( == ) ) ( METHOD_1 . ) 0 ( get . VAR_2 ( ( & & ) 1 == ) ) ( size . VAR_2 ( ( ( if ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = VAR_2 > TYPE_1 < java.util.List ; false = VAR_1 boolean { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( vm . getId ( ) , VAR_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( ) ; } } ; ) ( METHOD_6 . TYPE_3 ; ) ( METHOD_5 . ) VAR_3 ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ) VAR_1 ( METHOD_4 . TYPE_2 ( thenReturn . ) ) ) ( METHOD_3 . VAR_1 , ) ( getId . vm ( METHOD_2 . VAR_2 ( org.mockito.Mockito.when { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.compat . Version version , TYPE_1 type ) { if ( ! ( TYPE_2 . METHOD_2 ( version ) ) ) { return new java.util.HashMap < > ( ) ; } java.util.Map < java.lang.String , java.lang.String > map = VAR_1 . get ( version ) . get ( type ) ; if ( map == null ) { map = new java.util.HashMap < > ( ) ; } else { map = new java.util.HashMap < > ( map ) ; } return map ; } } ; map return } ; ) map ( > < java.util.HashMap new = map { else } ; ) ( > < java.util.HashMap new = map { ) null == map ( if ; ) type ( get . ) version ( get . VAR_1 = map > java.lang.String , java.lang.String < java.util.Map } ; ) ( > < java.util.HashMap new return { ) ) ) version ( METHOD_2 . TYPE_2 ( ! ( if { ) type TYPE_1 , version Version . org.ovirt.engine.core.compat ( METHOD_1 > java.lang.String , java.lang.String < java.util.Map public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 ( assertEquals . TYPE_4 ; ) ( getStoragePoolId . VAR_1 = VAR_4 TYPE_3 final ; ) VAR_2 ( METHOD_3 . VAR_1 ; ) VAR_3 ( setId . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 final ; ) null ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String VAR_1 , TYPE_2 type ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( id ! = null ) { VAR_2 . METHOD_2 ( id . toString ( ) ) ; } VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( type ) ; return VAR_2 ; } } ; VAR_2 return ; ) type ( METHOD_4 . VAR_2 ; ) VAR_1 ( METHOD_3 . VAR_2 } ; ) ) ( toString . id ( METHOD_2 . VAR_2 { ) null = ! id ( if ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) type TYPE_2 , VAR_1 java.lang.String , id org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 [ 1 ] = null ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , ) ( METHOD_5 ( METHOD_4 . TYPE_1 ; ) VAR_1 ( METHOD_3 . TYPE_1 = VAR_2 > java.lang.Object , java.lang.String < java.util.Map ; null = ] 1 [ VAR_1 ; ) ( METHOD_2 . TYPE_1 = VAR_1 ] [ java.lang.Object { ) ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 nic , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = nic . METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_3 : new java.util.ArrayList < TYPE_2 > ( VAR_2 ) ) { TYPE_3 . METHOD_3 ( VAR_3 , null , VAR_1 ) . METHOD_4 ( ) ; } } } } } } ; ) ( METHOD_4 . ) VAR_1 , null , VAR_3 ( METHOD_3 . TYPE_3 { ) ) VAR_2 ( > TYPE_2 < java.util.ArrayList new : VAR_3 TYPE_2 ( for { ) 0 > ) ) ( size . VAR_2 ( ( if ; ) ( METHOD_2 . nic = VAR_2 > TYPE_2 < java.util.List { ) VAR_1 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.List , nic TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_4 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . get ( TYPE_1 . any ( VAR_7 . Guid class ) ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( VAR_8 ) ) ; } } ; ) ) VAR_8 ( METHOD_7 . TYPE_3 , ) ( METHOD_6 . validator ( METHOD_5 . TYPE_2 ; ) VAR_4 ( thenReturn . ) ) ) class Guid . VAR_7 ( any . TYPE_1 ( get . VAR_6 ( org.mockito.Mockito.when ; ) VAR_5 ( METHOD_4 . VAR_4 ; ) ( org.ovirt.engine.core.common.businessentities.StoragePool new = VAR_4 org.ovirt.engine.core.common.businessentities.StoragePool ; ) VAR_3 ( METHOD_3 . VAR_1 ; ) VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 . Network ) ; VAR_3 . METHOD_4 ( TYPE_3 . getParameters ( ) . METHOD_5 ( ) . getId ( ) ) ; VAR_3 . METHOD_6 ( VAR_2 . getId ( ) ) ; TYPE_4 . METHOD_7 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_7 . TYPE_4 ; ) ) ( getId . VAR_2 ( METHOD_6 . VAR_3 ; ) ) ( getId . ) ( METHOD_5 . ) ( getParameters . TYPE_3 ( METHOD_4 . VAR_3 ; ) Network . VAR_4 ( METHOD_3 . VAR_3 ; ) VAR_1 ( METHOD_2 . VAR_3 ; ) ( TYPE_2 new = VAR_3 TYPE_2 { ) VAR_2 TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void private 
private void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { TYPE_1 validation = new TYPE_1 ( METHOD_2 ( VAR_1 ) , VAR_2 , VAR_4 ) ; TYPE_2 . METHOD_3 ( validation . METHOD_4 ( null ) . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_3 ) ) ) ; } } ; ) ) ) VAR_3 ( METHOD_7 . TYPE_4 ( METHOD_6 . TYPE_3 , ) ( METHOD_5 . ) null ( METHOD_4 . validation ( METHOD_3 . TYPE_2 ; ) VAR_4 , VAR_2 , ) VAR_1 ( METHOD_2 ( TYPE_1 new = validation TYPE_1 { ) VAR_3 boolean , VAR_2 int , VAR_1 int ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( java.lang.String [ ] VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , new java.util.ArrayList < > ( TYPE_4 . METHOD_3 ( VAR_1 ) ) ) . METHOD_4 ( ) ; java.util.Map < java.lang.String , java.lang.Object > response = new TYPE_5 ( this . client , VAR_2 ) . METHOD_5 ( STRING_2 ) . METHOD_6 ( java.lang.Object [ ] . class ) ; return new TYPE_1 ( response ) ; } } ; ) response ( TYPE_1 new return ; ) class . ] [ java.lang.Object ( METHOD_6 . ) STRING_2 ( METHOD_5 . ) VAR_2 , client . this ( TYPE_5 new = response > java.lang.Object , java.lang.String < java.util.Map ; ) ( METHOD_4 . ) ) ) VAR_1 ( METHOD_3 . TYPE_4 ( > < java.util.ArrayList new , STRING_2 ( METHOD_2 . ) STRING_1 ( TYPE_3 new = VAR_2 TYPE_2 { ) VAR_1 ] [ java.lang.String ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , new java.lang.String [ 0 ] ) ; TYPE_1 . assertEquals ( VAR_1 . METHOD_4 ( ) , 0 ) ; TYPE_1 . assertEquals ( VAR_1 . size ( ) , 0 ) ; TYPE_1 . METHOD_5 ( VAR_1 . isEmpty ( ) ) ; TYPE_1 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . VAR_1 ( METHOD_6 . TYPE_1 ; ) ) ( isEmpty . VAR_1 ( METHOD_5 . TYPE_1 ; ) 0 , ) ( size . VAR_1 ( assertEquals . TYPE_1 ; ) 0 , ) ( METHOD_4 . VAR_1 ( assertEquals . TYPE_1 ; ) ] 0 [ java.lang.String new , ) ( METHOD_3 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 cluster = ( ( TYPE_2 ) ( returnValue ) ) ; if ( cluster ! = null ) { VAR_1 . add ( cluster ) ; } TYPE_3 . METHOD_1 ( VAR_1 , new TYPE_4 ( ) ) ; model . METHOD_2 ( model , VAR_2 , VAR_1 , vm . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . vm , VAR_1 , VAR_2 , model ( METHOD_2 . model ; ) ) ( TYPE_4 new , VAR_1 ( METHOD_1 . TYPE_3 } ; ) cluster ( add . VAR_1 { ) null = ! cluster ( if ; ) ) returnValue ( ) TYPE_2 ( ( = cluster TYPE_2 ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 ( TYPE_2 . getVm ( ) . getId ( ) ) , TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ) ; TYPE_2 . METHOD_6 ( null ) ; TYPE_2 . METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 . TYPE_2 ; ) null ( METHOD_6 . TYPE_2 ; ) ) ) ( METHOD_5 . TYPE_2 , ) ( METHOD_4 . TYPE_2 ( METHOD_3 . TYPE_3 , ) ) ( getId . ) ( getVm . TYPE_2 ( TYPE_1 new , VAR_1 ( METHOD_2 { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , VAR_2 , TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; if ( VAR_1 ! = null ) { TYPE_1 . getVm ( ) . METHOD_6 ( ) . put ( VAR_3 , VAR_1 ) ; } } } } ; ) VAR_1 , VAR_3 ( put . ) ( METHOD_6 . ) ( getVm . TYPE_1 { ) null = ! VAR_1 ( if ; ) ) ( METHOD_5 . ) ( getParameters . TYPE_1 , VAR_2 , ) ( METHOD_4 ( METHOD_3 . ) ( METHOD_2 = VAR_1 > java.lang.String , java.lang.String < java.util.Map { ) ( METHOD_1 void private 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; TYPE_1 pool = VAR_1 . get ( 0 ) ; if ( pool ! = null ) { TYPE_2 . METHOD_1 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } } } ; ) ) ( getId . pool , ) ) model ( ) org.ovirt.engine.ui.frontend.AsyncQuery ( ( ( METHOD_1 . TYPE_2 { ) null = ! pool ( if ; ) 0 ( get . VAR_1 = pool TYPE_1 ; ) ) returnValue ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_1 > TYPE_1 < java.util.ArrayList { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : return METHOD_1 ( ) . METHOD_2 ( ) ; case VAR_3 : return METHOD_1 ( ) . METHOD_3 ( ) ; default : return METHOD_1 ( ) . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . ) ( METHOD_1 return : default ; ) ( METHOD_3 . ) ( METHOD_1 return : VAR_3 case ; ) ( METHOD_2 . ) ( METHOD_1 return : VAR_2 case { ) ) ( getStatus . VAR_1 ( switch { ) VAR_1 network . org.ovirt.engine.core.common.businessentities ( getValue TYPE_1 public 
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) { TYPE_1 . METHOD_3 ( ) ; if ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } METHOD_9 ( ) ; } else { TYPE_1 . METHOD_10 ( ) ; } TYPE_1 . METHOD_11 ( true ) ; } } ; ) true ( METHOD_11 . TYPE_1 } ; ) ( METHOD_10 . TYPE_1 { else } ; ) ( METHOD_9 } ; ) ) ) ( METHOD_8 . ) ( getParameters . TYPE_1 , ) ( METHOD_7 . ) ( getParameters . TYPE_1 ( TYPE_2 new ( METHOD_6 . ) ( METHOD_5 . TYPE_1 { ) ) ( METHOD_4 . ) ( getParameters . TYPE_1 ( if ; ) ( METHOD_3 . TYPE_1 { ) ) VAR_1 ( == ) ) ( METHOD_2 ( ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( false ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . any ( VAR_3 . VM class ) ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( vm ) , true , null ) ; } } ; ) null , true , ) vm ( METHOD_5 . VAR_2 ( METHOD_4 . TYPE_2 ; ) ) class VM . VAR_3 ( any . TYPE_1 ( METHOD_3 . ) VAR_2 ( when . ) false ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_2 . vm ; ) ( org.ovirt.engine.core.common.businessentities.VM new = vm org.ovirt.engine.core.common.businessentities.VM final { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object returnValue ) { final java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_3 ( ) . setItems ( VAR_1 ) ; METHOD_3 ( ) . setSelectedItem ( VAR_2 ) ; if ( ( METHOD_3 ( ) . getSelectedItem ( ) ) == null ) { METHOD_4 ( ) . METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 . ) ( METHOD_4 { ) null == ) ) ( getSelectedItem . ) ( METHOD_3 ( ( if ; ) VAR_2 ( setSelectedItem . ) ( METHOD_3 ; ) VAR_1 ( setItems . ) ( METHOD_3 ; ) null , 0 ( add . VAR_1 ; ) ) ( TYPE_2 new , VAR_1 ( METHOD_2 . TYPE_1 ; ) VAR_1 ( METHOD_1 = VAR_2 org.ovirt.engine.core.common.businessentities.StoragePool ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.List ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.List final { ) returnValue java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; parameters . METHOD_3 ( null ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ; command . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_8 ( command , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( ) ; } } ; ) ( METHOD_10 . ) ) ( METHOD_9 . org.mockito.Mockito , command ( METHOD_8 . org.mockito.Mockito ; ) ( METHOD_7 . command ; ) ) ( METHOD_6 . TYPE_1 ( METHOD_5 . ) VAR_1 ( when . ) ( METHOD_4 . org.mockito.Mockito ; ) null ( METHOD_3 . parameters ; ) TYPE_1 ( METHOD_2 . parameters { ) ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { final java.util.List < java.lang.String > VAR_1 = TYPE_1 . getReturnValue ( ) . METHOD_2 ( ) ; final int VAR_2 = ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) * ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) . size ( ) ) ; final int VAR_3 = TYPE_1 . getParameters ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; return TYPE_2 . METHOD_9 ( VAR_1 , VAR_2 , VAR_3 , TYPE_1 . METHOD_10 ( ) ) ; } } ; ) ) ( METHOD_10 . TYPE_1 , VAR_3 , VAR_2 , VAR_1 ( METHOD_9 . TYPE_2 return ; ) ( METHOD_8 . ) ( METHOD_7 . ) ( getParameters . TYPE_1 = VAR_3 int final ; ) ) ( size . ) ) ( METHOD_6 . TYPE_1 ( METHOD_5 . ) ( METHOD_4 . TYPE_1 ( * ) ) ( METHOD_3 . ) ( getParameters . TYPE_1 ( = VAR_2 int final ; ) ( METHOD_2 . ) ( getReturnValue . TYPE_1 = VAR_1 > java.lang.String < java.util.List final { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_3 ( model , list ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_2 ) ; } } ; ) VAR_2 , this ( METHOD_5 . ) ( METHOD_4 ; ) list , model ( METHOD_3 . model } } ; ) a ( add . list { ) ) VAR_1 ( == ) ) ( METHOD_2 . a ( ( if { ) ) ) returnValue ( ) > TYPE_2 < java.util.ArrayList ( ( : a TYPE_2 ( for ; ) ( > TYPE_2 < java.util.ArrayList new = list > TYPE_2 < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_2 . Network network , org.ovirt.engine.core.common.businessentities . network entity ) { if ( METHOD_2 ( network ) ) { entity . METHOD_3 ( METHOD_4 ( network ) ) ; } return new TYPE_1 ( entity . METHOD_5 ( ) . getValue ( ) , entity ) ; } } ; ) entity , ) ( getValue . ) ( METHOD_5 . entity ( TYPE_1 new return } ; ) ) network ( METHOD_4 ( METHOD_3 . entity { ) ) network ( METHOD_2 ( if { ) entity network . org.ovirt.engine.core.common.businessentities , network Network . TYPE_2 ( METHOD_1 TYPE_1 protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_1 new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; STRING_1 : ) ) source ( ) java.lang.String ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( returnValue ) ) ; VAR_2 . put ( null , STRING_1 ) ; VAR_3 . put ( VAR_4 , VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . VAR_2 , VAR_4 ( put . VAR_3 ; ) STRING_1 , null ( put . VAR_2 ; ) ) returnValue ( ) > java.lang.String , java.lang.String < java.util.Map ( ( = VAR_2 > java.lang.String , java.lang.String < java.util.Map ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; case VAR_4 : case VAR_5 : case VAR_6 : return METHOD_3 ( ) . METHOD_6 ( ) ; case VAR_7 : return METHOD_3 ( ) . METHOD_7 ( ) ; default : break ; } return null ; } } ; null return } ; break : default ; ) ( METHOD_7 . ) ( METHOD_3 return : VAR_7 case ; ) ( METHOD_6 . ) ( METHOD_3 return : VAR_6 case : VAR_5 case : VAR_4 case ; ) ( METHOD_5 . ) ( METHOD_3 return : VAR_3 case ; ) ( METHOD_4 . ) ( METHOD_3 return : VAR_2 case { ) ) ( METHOD_2 . VAR_1 ( switch ; ) ) ( METHOD_2 . VAR_1 ( METHOD_1 { ) VAR_1 org.ovirt.engine.core.common.businessentities.StoragePool ( getValue TYPE_1 public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else if ( command == ( METHOD_5 ( ) ) ) { METHOD_6 ( ) ; } else if ( TYPE_1 . METHOD_7 ( command . getName ( ) , STRING_1 ) ) { METHOD_8 ( ) ; } } } } ; ) ( METHOD_8 { ) ) STRING_1 , ) ( getName . command ( METHOD_7 . TYPE_1 ( if else } ; ) ( METHOD_6 { ) ) ) ( METHOD_5 ( == command ( if else } ; ) ( METHOD_4 ; ) ( METHOD_3 { ) ) ) ( METHOD_2 ( == command ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public boolean equals ( java.lang.Object obj ) { boolean returnValue = super . equals ( obj ) ; if ( ( ( ! returnValue ) & & ( obj ! = null ) ) & & ( obj instanceof TYPE_1 ) ) { returnValue = ( ! ( TYPE_2 . METHOD_1 ( METHOD_2 ( ) , STRING_1 ) ) ) & & ( TYPE_2 . METHOD_1 ( METHOD_2 ( ) , ( ( TYPE_1 ) ( obj ) ) . METHOD_2 ( ) ) ) ; } return returnValue ; } } ; returnValue return } ; ) ) ) ( METHOD_2 . ) ) obj ( ) TYPE_1 ( ( , ) ( METHOD_2 ( METHOD_1 . TYPE_2 ( & & ) ) ) STRING_1 , ) ( METHOD_2 ( METHOD_1 . TYPE_2 ( ! ( = returnValue { ) ) TYPE_1 instanceof obj ( & & ) ) null = ! obj ( & & ) returnValue ! ( ( ( if ; ) obj ( equals . super = returnValue boolean { ) obj java.lang.Object ( equals boolean public 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; hosts . add ( 0 , null ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . setIsChangable ( true ) ; METHOD_2 ( true ) ; METHOD_3 ( ) . setIsChangable ( true ) ; } } ; ) true ( setIsChangable . ) ( METHOD_3 ; ) true ( METHOD_2 ; ) true ( setIsChangable . VAR_1 ; ) hosts ( setItems . VAR_1 ; ) null , 0 ( add . hosts ; ) ( METHOD_1 = VAR_1 > org.ovirt.engine.core.common.businessentities.VDS < TYPE_1 ; ) ) result ( ) > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ( ( = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList { ) result java.lang.Object , model java.lang.Object ( onSuccess void public 
public TYPE_1 getValue ( TYPE_2 item ) { org.ovirt.engine.core.common.businessentities.VM vm = item . METHOD_1 ( ) ; TYPE_3 VAR_1 = null ; if ( ( vm ! = null ) & & ( vm . METHOD_2 ( ) ) ) { VAR_1 = VAR_2 . METHOD_3 ( ) ; } return new TYPE_1 ( METHOD_4 ( item ) , VAR_1 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_1 , ) item ( METHOD_4 ( TYPE_1 new return } ; ) ( METHOD_3 . VAR_2 = VAR_1 { ) ) ) ( METHOD_2 . vm ( & & ) null = ! vm ( ( if ; null = VAR_1 TYPE_3 ; ) ( METHOD_1 . item = vm org.ovirt.engine.core.common.businessentities.VM { ) item TYPE_2 ( getValue TYPE_1 public 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { if ( ( VAR_4 . getModel ( ) . METHOD_2 ( ) ) ! = null ) { METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ; } } } } } } ; ) VAR_5 ( METHOD_4 . ) ( METHOD_3 { ) null = ! ) ) ( METHOD_2 . ) ( getModel . VAR_4 ( ( if { ) ) VAR_3 ( equals . STRING_1 ( if ; ) ) args ( ) TYPE_3 ( ( = VAR_2 TYPE_3 { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , true , true , true , true , null ) ; } } ; ) null , true , true , true , true , ) ( METHOD_4 , ) ( METHOD_4 , ) ( METHOD_4 , ) ( METHOD_4 , VAR_1 , ) ( getStoragePoolId . ) ( getVm . TYPE_2 , ) ( METHOD_3 . ) ( getReturnValue . TYPE_2 , ) ( getVm . TYPE_2 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 boolean protected 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( ( ( TYPE_3 . getVdsGroup ( ) . METHOD_3 ( ) ) == null ? null : TYPE_3 . getVdsGroup ( ) . METHOD_3 ( ) . getValue ( ) ) , VAR_1 . StoragePool , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } } ; ) ) ) ( METHOD_5 . ) ( METHOD_4 . TYPE_3 , StoragePool . VAR_1 , ) ) ( getValue . ) ( METHOD_3 . ) ( getVdsGroup . TYPE_3 : null ? null == ) ) ( METHOD_3 . ) ( getVdsGroup . TYPE_3 ( ( ( TYPE_1 new ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 > TYPE_1 < java.util.List public 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { TYPE_2 parameters = new TYPE_2 ( ) ; parameters . METHOD_2 ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) ; model . METHOD_3 ( METHOD_4 ( VAR_1 . List class , VAR_2 class ) . map ( getEntity ( VAR_1 . ArrayList class , VAR_3 , parameters , model . getId ( ) ) , null ) ) ; return model ; } } ; model return ; ) ) null , ) ) ( getId . model , parameters , VAR_3 , class ArrayList . VAR_1 ( getEntity ( map . ) class VAR_2 , class List . VAR_1 ( METHOD_4 ( METHOD_3 . model ; ) ) ) ( getId . model ( org.ovirt.engine.core.compat.Guid new ( METHOD_2 . parameters ; ) ( TYPE_2 new = parameters TYPE_2 { ) entity org.ovirt.engine.core.common.businessentities.StoragePool , model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_3 ) . isEmpty ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_6 ( VAR_6 , VAR_2 ) ; TYPE_3 . METHOD_5 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_8 ) ; } } ; ) VAR_8 , VAR_7 ( METHOD_7 . ) VAR_5 ( METHOD_5 . TYPE_3 ; ) VAR_2 , VAR_6 ( METHOD_6 . TYPE_2 = VAR_5 > java.lang.Object , java.lang.String < java.util.Map ; ) ( isEmpty . ) VAR_3 ( METHOD_5 . TYPE_3 ; ) VAR_4 , VAR_2 ( METHOD_4 . TYPE_2 = VAR_3 > java.lang.Object , java.lang.String < java.util.Map } ; ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 { ) VAR_2 : VAR_1 TYPE_1 ( for { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( returnValue ) . when ( METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( METHOD_4 ( ) ) . METHOD_7 ( ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_8 ( VAR_5 ) ) . thenReturn ( METHOD_9 ( VAR_6 ) ) ; } } ; ) ) VAR_6 ( METHOD_9 ( thenReturn . ) ) VAR_5 ( METHOD_8 . VAR_4 ( org.mockito.Mockito.when ; ) ( METHOD_7 . ) ) ( METHOD_4 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ) class VAR_3 ( any . TYPE_2 , ) VAR_2 ( METHOD_6 . TYPE_2 ( METHOD_5 . ) ) ( METHOD_4 ( when . ) returnValue ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_3 . returnValue ; ) true ( METHOD_2 . returnValue ; ) ( TYPE_1 new = returnValue TYPE_1 { ) ( METHOD_1 void private 
private void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( false ) ; VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getStoragePoolId ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; METHOD_7 ( VAR_5 , VAR_3 , TYPE_2 . METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 . TYPE_2 , VAR_3 , VAR_5 ( METHOD_7 ; ) VAR_4 ( METHOD_6 . VAR_3 ; ) VAR_2 ( METHOD_5 . VAR_3 ; ) VAR_1 ( METHOD_4 . VAR_3 ; ) ) ( getStoragePoolId . ) ( METHOD_3 . TYPE_2 ( METHOD_2 . VAR_3 ; ) false ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 java.lang.String , VAR_1 org.ovirt.engine.core.compat.Guid final ( METHOD_1 void private 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) { return true ; } if ( ! ( VAR_1 instanceof TYPE_1 ) ) { return false ; } TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return TYPE_2 . equals ( METHOD_1 ( ) , VAR_2 . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . VAR_2 , ) ( METHOD_1 ( equals . TYPE_2 return ; ) ) VAR_1 ( ) TYPE_1 ( ( = VAR_2 TYPE_1 } ; false return { ) ) TYPE_1 instanceof VAR_1 ( ! ( if } ; true return { ) VAR_1 == ) this ( ( if { ) VAR_1 java.lang.Object ( equals boolean public 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = null ; if ( args . METHOD_2 ( VAR_2 ) ) { try { VAR_1 = METHOD_3 ( args . get ( VAR_2 ) ) ; } catch ( java.lang.Exception e ) { throw new TYPE_1 ( VAR_3 , e . METHOD_4 ( ) ) ; } if ( VAR_1 == null ) { throw new TYPE_1 ( VAR_4 ) ; } } else { VAR_1 = METHOD_5 ( STRING_1 , true ) ; } METHOD_6 ( VAR_1 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_1 ( METHOD_6 } ; ) true , STRING_1 ( METHOD_5 = VAR_1 { else } } ; ) VAR_4 ( TYPE_1 new throw { ) null == VAR_1 ( if } ; ) ) ( METHOD_4 . e , VAR_3 ( TYPE_1 new throw { ) e java.lang.Exception ( catch } ; ) ) VAR_2 ( get . args ( METHOD_3 = VAR_1 { try { ) ) VAR_2 ( METHOD_2 . args ( if ; null = VAR_1 java.lang.String { TYPE_1 throws ) ( METHOD_1 java.lang.String private 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { VAR_2 . converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter < TYPE_1 < java.lang.String > > ( ) { public TYPE_1 < java.lang.String > Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_3 ) { TYPE_1 < java.lang.String > VAR_4 = new TYPE_2 < java.lang.String > ( new TYPE_3 ( ) ) ; VAR_4 . METHOD_2 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_4 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_5 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , VAR_2 ) ; } } ; ) VAR_2 , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_5 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; VAR_4 return ; ) ) ) returnValue ( ) > java.lang.String < TYPE_4 ( ( ( METHOD_2 . VAR_4 ; ) ) ( TYPE_3 new ( > java.lang.String < TYPE_2 new = VAR_4 > java.lang.String < TYPE_1 { ) VAR_3 org.ovirt.engine.ui.frontend.AsyncQuery , returnValue java.lang.Object ( Convert > java.lang.String < TYPE_1 public { ) ( > > java.lang.String < TYPE_1 < org.ovirt.engine.ui.frontend.IAsyncConverter new = converterCallback . VAR_2 { ) VAR_2 org.ovirt.engine.ui.frontend.AsyncQuery , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void static public 
protected void METHOD_1 ( ) { super . METHOD_2 ( ) ; if ( ( TYPE_1 . getVm ( ) ) ! = null ) { METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 . TYPE_1 ; ) ( METHOD_6 } ; ) ) ( METHOD_5 . TYPE_1 , ) ( METHOD_4 . ) ( getVm . TYPE_1 ( METHOD_3 { ) null = ! ) ) ( getVm . TYPE_1 ( ( if ; ) ( METHOD_2 . super { ) ( METHOD_1 void protected 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_2 . METHOD_2 ( ) ) & & ( VAR_1 == ( VAR_3 ) ) ) { METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; } else if ( METHOD_3 ( ) . METHOD_6 ( ) ) { METHOD_3 ( ) . setIsChangable ( METHOD_7 ( ) ) ; } } } } ; ) ) ( METHOD_7 ( setIsChangable . ) ( METHOD_3 { ) ) ( METHOD_6 . ) ( METHOD_3 ( if else } ; ) false ( setEntity . ) ( METHOD_3 ; ) false ( setIsChangable . ) ( METHOD_3 ; ) ) ( METHOD_5 . TYPE_3 ( METHOD_4 . ) ( METHOD_3 { ) ) ) VAR_3 ( == VAR_1 ( & & ) ) ( METHOD_2 . VAR_2 ( ( if { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_2 ) ) ; if ( VAR_2 ! = null ) { VAR_3 . METHOD_2 ( false ) ; VAR_3 . setItems ( null ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( ( VAR_2 instanceof TYPE_2 ) ? VAR_2 : null ) ) ; if ( VAR_4 ! = null ) { VAR_4 . METHOD_3 ( null ) ; } VAR_3 . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . VAR_3 } ; ) null ( METHOD_3 . VAR_4 { ) null = ! VAR_4 ( if ; ) ) null : VAR_2 ? ) TYPE_2 instanceof VAR_2 ( ( ) TYPE_2 ( ( = VAR_4 TYPE_2 ; ) null ( setItems . VAR_3 ; ) false ( METHOD_2 . VAR_3 { ) null = ! VAR_2 ( if ; ) ) VAR_2 ( ) TYPE_1 ( ( = VAR_3 TYPE_1 ; ) VAR_2 , VAR_1 ( METHOD_1 . super { ) VAR_2 java.lang.Object , VAR_1 java.lang.Object ( METHOD_1 void protected 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_1 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 , VAR_1 ) ; } } ; ) VAR_1 , VAR_2 ( METHOD_10 ; ) ) nic ( METHOD_9 ( METHOD_8 = VAR_2 TYPE_1 ; ) nic ( METHOD_7 ; ) VAR_1 ( METHOD_6 ; ) ) ) ) ( METHOD_5 . VAR_1 ( ! ( ( METHOD_4 . nic ; ) VAR_1 , STRING_2 ( METHOD_3 = nic VdsNetworkInterface . org.ovirt.engine.core.common.businessentities ; ) STRING_1 ( METHOD_2 = VAR_1 Network . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void public 
public TYPE_1 < java.lang.String > Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 < java.lang.String > VAR_2 = new TYPE_2 < java.lang.String > ( new TYPE_3 ( ) ) ; VAR_2 . METHOD_1 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_2 ; } } ; VAR_2 return ; ) ) ) returnValue ( ) > java.lang.String < TYPE_4 ( ( ( METHOD_1 . VAR_2 ; ) ) ( TYPE_3 new ( > java.lang.String < TYPE_2 new = VAR_2 > java.lang.String < TYPE_1 { ) VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery , returnValue java.lang.Object ( Convert > java.lang.String < TYPE_1 public 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new java.util.HashMap < java.lang.Integer , TYPE_1 > ( ) { { put ( 0 , new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_2 ) ) ) ; } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( TYPE_2 . any ( VAR_3 class ) , TYPE_2 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_7 . VAR_2 ; ) ) ( METHOD_6 . TYPE_2 , ) class VAR_3 ( any . TYPE_2 ( METHOD_5 . ) VAR_2 ( when . ) ( METHOD_4 . org.mockito.Mockito ; ) } } ; ) ) ) STRING_2 ( METHOD_3 . org.ovirt.engine.core.compat.Guid , ) STRING_1 ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( TYPE_1 new , 0 ( put { { ) ( > TYPE_1 , java.lang.Integer < java.util.HashMap new ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_3 ( VAR_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ; METHOD_5 ( ) . add ( VAR_3 . METHOD_6 ( this ) ) ; VAR_1 . add ( VAR_3 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_3 ( add . VAR_1 ; ) ) this ( METHOD_6 . VAR_3 ( add . ) ( METHOD_5 ; ) ) ( METHOD_4 . TYPE_4 , ) ( METHOD_3 . VAR_4 ( TYPE_3 new = VAR_3 ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( TYPE_2 new = VAR_1 TYPE_2 { ) ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; log . METHOD_6 ( STRING_1 , VAR_1 ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_7 ( TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) { log . METHOD_6 ( STRING_2 ) ; } else { TYPE_1 . METHOD_9 ( ) ; } TYPE_1 . METHOD_10 ( true ) ; } } ; ) true ( METHOD_10 . TYPE_1 } ; ) ( METHOD_9 . TYPE_1 { else } ; ) STRING_2 ( METHOD_6 . log { ) ) ) ( METHOD_8 . ) ( getParameters . TYPE_1 ( METHOD_7 . org.ovirt.engine.core.compat.Guid ( if ; ) VAR_1 , STRING_1 ( METHOD_6 . log ; ) VAR_1 ( METHOD_5 . ) ( METHOD_4 . TYPE_1 ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = VAR_1 java.lang.String { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 ) ; vds . METHOD_2 ( INT_1 ) ; TYPE_1 host = TYPE_2 . map ( vds , ( ( TYPE_1 ) ( null ) ) ) ; METHOD_3 ( host . METHOD_4 ( ) ) ; assertEquals ( TYPE_3 . valueOf ( host . METHOD_4 ( ) ) , TYPE_3 . valueOf ( INT_2 ) ) ; } } ; ) ) INT_2 ( valueOf . TYPE_3 , ) ) ( METHOD_4 . host ( valueOf . TYPE_3 ( assertEquals ; ) ) ( METHOD_4 . host ( METHOD_3 ; ) ) ) null ( ) TYPE_1 ( ( , vds ( map . TYPE_2 = host TYPE_1 ; ) INT_1 ( METHOD_2 . vds ; ) VAR_1 ( setId . vds ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . add ( VAR_5 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; TYPE_1 VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; return VAR_6 ; } } ; VAR_6 return ; ) VAR_4 ( METHOD_6 . VAR_6 ; ) ( TYPE_1 new = VAR_6 TYPE_1 ; ) VAR_1 ( METHOD_5 . VAR_4 ; ) VAR_5 ( add . ) ( METHOD_4 . VAR_4 ; ) VAR_3 ( METHOD_3 . VAR_5 ; ) VAR_2 ( METHOD_2 . VAR_5 ; ) ( TYPE_4 new = VAR_5 TYPE_4 ; ) ( TYPE_3 new = VAR_4 TYPE_3 { ) VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( STRING_1 , VAR_2 . StoragePool ) , aQuery ) ; } } ; ) aQuery , ) StoragePool . VAR_2 , STRING_1 ( TYPE_1 new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 == null ) || ( ( VAR_3 ! = null ) & & ( VAR_3 . getId ( ) . equals ( METHOD_4 ( ) . getId ( ) ) ) ) ) { return false ; } return true ; } } ; true return } ; false return { ) ) ) ) ) ( getId . ) ( METHOD_4 ( equals . ) ( getId . VAR_3 ( & & ) null = ! VAR_3 ( ( || ) null == VAR_3 ( ( if ; ) VAR_1 ( METHOD_3 . VAR_2 = VAR_3 TYPE_2 ; ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_2 TYPE_1 { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean private 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { if ( ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) || ( VAR_1 . getName ( ) . equals ( VAR_2 ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 ) ; } } } } ; ) VAR_1 , source ( METHOD_1 . super return { else } ; ) ( get . VAR_3 return { ) ) ) VAR_2 ( equals . ) ( getName . VAR_1 ( || ) ) ) ( METHOD_2 . ) ( getModel ( == VAR_1 ( ( if { ) VAR_1 org.ovirt.engine.ui.uicommonweb.UICommand , source TYPE_3 ( METHOD_1 > ? , TYPE_2 extends ? < TYPE_1 public 
private boolean METHOD_1 ( ) { for ( TYPE_1 VAR_1 : ( ( TYPE_2 < TYPE_1 > ) ( METHOD_2 ( ) ) ) ) { if ( ( ! ( VAR_1 . METHOD_3 ( ) . getEntity ( ) ) ) & & ( ( VAR_1 . METHOD_4 ( ) ) ! = null ) ) { METHOD_5 ( new TYPE_3 ( STRING_1 ) ) ; return false ; } } return true ; } } ; true return } } ; false return ; ) ) STRING_1 ( TYPE_3 new ( METHOD_5 { ) ) null = ! ) ) ( METHOD_4 . VAR_1 ( ( & & ) ) ) ( getEntity . ) ( METHOD_3 . VAR_1 ( ! ( ( if { ) ) ) ) ( METHOD_2 ( ) > TYPE_1 < TYPE_2 ( ( : VAR_1 TYPE_1 ( for { ) ( METHOD_1 boolean private 
protected void METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , METHOD_5 ( ) . get ( 0 ) . METHOD_6 ( ) . get ( 0 ) . getValue ( ) , TYPE_1 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_1 . METHOD_9 ( ) ) ; } } } } ; ) ) ( METHOD_9 . TYPE_1 , ) ( METHOD_8 . ) ( METHOD_7 . TYPE_1 , ) ( getValue . ) 0 ( get . ) ( METHOD_6 . ) 0 ( get . ) ( METHOD_5 , ) ( METHOD_4 . TYPE_1 ( METHOD_3 . TYPE_2 { ) ) ) ( METHOD_2 . TYPE_1 ( ! ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( true , null ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_9 ( ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_10 ( VAR_2 ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_11 ( VAR_2 ) ; TYPE_1 . assertEquals ( cmd . METHOD_12 ( ) , VAR_3 ) ; } } ; ) VAR_3 , ) ( METHOD_12 . cmd ( assertEquals . TYPE_1 ; ) VAR_2 ( METHOD_11 . ) cmd ( METHOD_8 . org.mockito.Mockito ; ) VAR_2 ( METHOD_10 . ) cmd ( METHOD_8 . org.mockito.Mockito ; ) ( METHOD_9 . ) cmd ( METHOD_8 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) ) ( METHOD_7 . cmd ( METHOD_6 . TYPE_1 ; ) null , true ( METHOD_5 ; ) cmd ( METHOD_4 ; ) ) 0 , VAR_1 ( METHOD_3 ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true , VAR_1 ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_4 . METHOD_4 ( STRING_1 , ( ( VAR_5 . METHOD_5 ( cluster , VAR_2 ) . size ( ) ) == 2 ) ) ; TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_3 ( STRING_2 , STRING_3 ) . equals ( VAR_5 . METHOD_5 ( cluster , VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 , cluster ( METHOD_5 . VAR_5 ( equals . ) STRING_3 , STRING_2 ( METHOD_3 . TYPE_3 ( METHOD_4 . TYPE_4 ; ) ) 2 == ) ) ( size . ) VAR_2 , cluster ( METHOD_5 . VAR_5 ( ( , STRING_1 ( METHOD_4 . TYPE_4 ; ) VAR_4 , VAR_3 ( METHOD_3 . TYPE_3 = VAR_2 > org.ovirt.engine.core.compat.Guid < TYPE_2 ; ) VAR_1 , true ( METHOD_2 = cluster TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( ( ( VAR_1 . METHOD_6 ( ) ) ! = null ) ) ; TYPE_3 . METHOD_5 ( ( ( VAR_1 . METHOD_7 ( ) ) == null ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_3 ) . METHOD_9 ( VAR_4 . METHOD_10 ( ) ) ; TYPE_2 . METHOD_3 ( ( ( VAR_4 . getValue ( ) . size ( ) ) == 0 ) ) ; } } ; ) ) 0 == ) ) ( size . ) ( getValue . VAR_4 ( ( ( METHOD_3 . TYPE_2 ; ) ) ( METHOD_10 . VAR_4 ( METHOD_9 . ) VAR_3 ( METHOD_8 . org.mockito.Mockito ; ) ) null == ) ) ( METHOD_7 . VAR_1 ( ( ( METHOD_5 . TYPE_3 ; ) ) null = ! ) ) ( METHOD_6 . VAR_1 ( ( ( METHOD_5 . TYPE_3 ; ) ) ( METHOD_4 . VAR_2 ( METHOD_3 . TYPE_2 ; ) VAR_1 ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_9 ( ) . getStatus ( ) ) ; } } } } ; ) ) ( getStatus . ) ( METHOD_9 . VAR_5 , INT_1 ( assertEquals ; ) ) ( METHOD_9 . VAR_5 ( METHOD_8 { ) VAR_5 TYPE_1 ( catch } ; ) STRING_2 ( METHOD_7 ; ) ( METHOD_6 . resource { try ; ) ( METHOD_5 . VAR_4 ; ) ) ( METHOD_4 ( METHOD_3 ; ) null , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVm ( ) . METHOD_2 ( ) ) ! = null ) { TYPE_3 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_2 . getVm ( ) . METHOD_2 ( ) , VAR_1 ) ) ; } else { TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_6 . ) ( METHOD_5 . TYPE_2 { else } ; ) ) VAR_1 , ) ( METHOD_2 . ) ( getVm . TYPE_2 ( TYPE_4 new , VAR_2 ( METHOD_4 . ) ( METHOD_3 . ) ( getInstance . TYPE_3 { ) null = ! ) ) ( METHOD_2 . ) ( getVm . TYPE_2 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 entity = METHOD_2 ( ) ; TYPE_2 < TYPE_3 , TYPE_1 > VAR_1 = ( ( TYPE_2 < TYPE_3 , TYPE_1 > ) ( ( ( TYPE_4 ) ( resource ) ) . METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) , entity ) ; } } ; ) entity , ) ( METHOD_6 . VAR_1 ( METHOD_5 ; ) VAR_1 ( METHOD_4 ; ) ) ) ( METHOD_3 . ) ) resource ( ) TYPE_4 ( ( ( ) > TYPE_1 , TYPE_3 < TYPE_2 ( ( = VAR_1 > TYPE_1 , TYPE_3 < TYPE_2 ; ) ( METHOD_2 = entity TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > ( ) ; if ( VAR_1 ) { return VAR_2 ; } for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_2 . put ( METHOD_2 ( i ) , new TYPE_1 ( ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ( TYPE_1 new , ) i ( METHOD_2 ( put . VAR_2 { ) ++ i ; ) length . VAR_3 ( < i ; 0 = i int ( for } ; VAR_2 return { ) VAR_1 ( if ; ) ( > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap new = VAR_2 > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap { ) VAR_1 boolean ( METHOD_1 > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; } METHOD_2 ( ) . setEntity ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ) ; METHOD_4 ( ) . setEntity ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_5 ( ) . setEntity ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_5 ( ) ) ) ; } } ; ) ) ) ( METHOD_5 . VAR_1 ( METHOD_3 . TYPE_2 ( setEntity . ) ( METHOD_5 ; ) ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . TYPE_2 ( setEntity . ) ( METHOD_4 ; ) ) ) ( METHOD_2 . VAR_1 ( METHOD_3 . TYPE_2 ( setEntity . ) ( METHOD_2 } ; ) ( TYPE_1 new = VAR_1 { ) null == VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; return ( ( VAR_1 . METHOD_4 ( ) ) || ( ( VAR_1 . METHOD_5 ( ) ) & & ( ! ( VAR_2 . METHOD_5 ( ) ) ) ) ) || ( ! ( TYPE_3 . equals ( VAR_1 . METHOD_6 ( ) , VAR_2 . METHOD_6 ( ) ) ) ) ; } } ; ) ) ) ) ( METHOD_6 . VAR_2 , ) ( METHOD_6 . VAR_1 ( equals . TYPE_3 ( ! ( || ) ) ) ) ) ( METHOD_5 . VAR_2 ( ! ( & & ) ) ( METHOD_5 . VAR_1 ( ( || ) ) ( METHOD_4 . VAR_1 ( ( return ; ) ( METHOD_3 . VAR_3 = VAR_2 TYPE_1 ; ) ( METHOD_2 . ) ( getParameters . TYPE_2 = VAR_1 TYPE_1 { ) ( METHOD_1 boolean private 
protected boolean METHOD_1 ( TYPE_1 storageDomain ) { boolean returnValue = false ; if ( storageDomain ! = null ) { returnValue = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( storageDomain . getId ( ) ) . isEmpty ( ) ; if ( ! returnValue ) { addCanDoActionMessage ( VAR_1 ) ; } } return returnValue ; } } ; returnValue return } } ; ) VAR_1 ( addCanDoActionMessage { ) returnValue ! ( if ; ) ( isEmpty . ) ) ( getId . storageDomain ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 = returnValue { ) null = ! storageDomain ( if ; false = returnValue boolean { ) storageDomain TYPE_1 ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object VAR_1 : VAR_2 . METHOD_2 ( ) ) { TYPE_2 < TYPE_3 > VAR_3 = new TYPE_2 < TYPE_3 > ( ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; parameters . add ( VAR_3 ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_5 , parameters ) ; METHOD_5 ( ) ; } } ; ) ( METHOD_5 ; ) parameters , VAR_5 ( METHOD_4 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance } ; ) VAR_3 ( add . parameters ; ) VAR_4 ( METHOD_3 . VAR_3 ; ) ) VAR_1 ( ) TYPE_3 ( ( = VAR_4 TYPE_3 ; ) ( > TYPE_3 < TYPE_2 new = VAR_3 > TYPE_3 < TYPE_2 { ) ) ( METHOD_2 . VAR_2 : VAR_1 java.lang.Object ( for ; ) ( > VdcActionParametersBase . TYPE_1 < java.util.ArrayList new = parameters > VdcActionParametersBase . TYPE_1 < java.util.ArrayList { ) ( METHOD_1 void public 
public boolean METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version , TYPE_1 < TYPE_2 > VAR_2 , TYPE_3 VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_2 ) { if ( ! ( VAR_5 . METHOD_2 ( ) . get ( VAR_1 ) . get ( version ) . METHOD_3 ( new TYPE_4 ( VAR_4 , VAR_3 ) ) ) ) { return false ; } } return true ; } } ; true return } } ; false return { ) ) ) ) VAR_3 , VAR_4 ( TYPE_4 new ( METHOD_3 . ) version ( get . ) VAR_1 ( get . ) ( METHOD_2 . VAR_5 ( ! ( if { ) VAR_2 : VAR_4 TYPE_2 ( for { ) VAR_3 TYPE_3 , VAR_2 > TYPE_2 < TYPE_1 , version Version . org.ovirt.engine.core.compat , VAR_1 int ( METHOD_1 boolean public 
public void METHOD_1 ( ) { TYPE_1 value = new TYPE_1 ( ) ; value . METHOD_2 ( false ) ; value . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_3 . any ( VAR_2 class ) , TYPE_3 . any ( VAR_3 class ) ) ) . thenReturn ( value ) ; VAR_4 . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . VAR_4 ; ) value ( thenReturn . ) ) ) class VAR_3 ( any . TYPE_3 , ) class VAR_2 ( any . TYPE_3 ( METHOD_4 . VAR_1 ( org.mockito.Mockito.when ; ) ) STRING_1 ( TYPE_2 new ( METHOD_3 . value ; ) false ( METHOD_2 . value ; ) ( TYPE_1 new = value TYPE_1 { ) ( METHOD_1 void public 
private static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { final TYPE_1 < TYPE_2 > result = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { final TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_3 ! = null ) { result . add ( VAR_3 ) ; } } return result ; } } ; result return } } ; ) VAR_3 ( add . result { ) null = ! VAR_3 ( if ; ) VAR_2 ( METHOD_2 . TYPE_3 = VAR_3 TYPE_2 final { ) VAR_1 : VAR_2 TYPE_2 ( for ; ) ( > < java.util.ArrayList new = result > TYPE_2 < TYPE_1 final { ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 > TYPE_2 < TYPE_1 static private 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vm . getId ( ) , TYPE_2 . getName ( ) , TYPE_2 . getName ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . add ( VAR_4 , VAR_2 . METHOD_4 ( ) ) ; VAR_3 . add ( VAR_5 , VAR_2 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_3 , VAR_2 , null ) ; } } } } ; ) null , VAR_2 , VAR_3 ( METHOD_5 ; ) ) ( METHOD_4 . VAR_2 , VAR_5 ( add . VAR_3 ; ) ) ( METHOD_4 . VAR_2 , VAR_4 ( add . VAR_3 ; ) ( TYPE_3 new = VAR_3 TYPE_3 { ) VAR_1 : VAR_2 TYPE_1 ( for ; ) ) ( getName . TYPE_2 , ) ( getName . TYPE_2 , ) ( getId . vm ( METHOD_3 . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { if ( ( ( getSelectedItem ( ) ) == null ) || ( ( getWindow ( ) ) ! = null ) ) { return ; } TYPE_1 . METHOD_2 ( this , VAR_1 , getEntity ( ) . getId ( ) , ( ( TYPE_2 . DiskImage ) ( getSelectedItem ( ) ) ) ) ; } } ; ) ) ) ) ( getSelectedItem ( ) DiskImage . TYPE_2 ( ( , ) ( getId . ) ( getEntity , VAR_1 , this ( METHOD_2 . TYPE_1 } ; return { ) ) null = ! ) ) ( getWindow ( ( || ) null == ) ) ( getSelectedItem ( ( ( if { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) ; java.lang.Integer VAR_1 = METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( cluster == null ) || ( VAR_1 == null ) ) { return ; } java.util.List < TYPE_1 > VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 , cluster . METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_6 ; ) ) ( METHOD_5 . cluster , VAR_1 ( METHOD_4 . TYPE_2 = VAR_2 > TYPE_1 < java.util.List } ; return { ) ) null == VAR_1 ( || ) null == cluster ( ( if ; ) ( getSelectedItem . ) ( METHOD_3 = VAR_1 java.lang.Integer ; ) ( METHOD_2 = cluster org.ovirt.engine.core.common.businessentities.VDSGroup { ) ( METHOD_1 void private 
private boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_3 ( METHOD_2 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : VAR_1 ) { if ( ( template ! = null ) & & ( template . getId ( ) . equals ( VAR_3 ) ) ) { return true ; } } } return false ; } } ; false return } } } ; true return { ) ) ) VAR_3 ( equals . ) ( getId . template ( & & ) null = ! template ( ( if { ) VAR_1 : template org.ovirt.engine.core.common.businessentities.VmTemplate ( for ; ) ) ( METHOD_2 ( METHOD_3 > org.ovirt.engine.core.common.businessentities.VmTemplate < Linq . VAR_2 = VAR_1 > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList { ) null = ! ) ) ( METHOD_2 ( ( if { ) ( METHOD_1 boolean private 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( TYPE_1 VAR_1 ) { try { METHOD_2 ( VAR_2 , VAR_1 ) ; TYPE_2 [ ] hosts = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , TYPE_2 [ ] . class ) ; return map ( TYPE_3 . METHOD_5 ( hosts ) ) ; } catch ( TYPE_4 e ) { METHOD_6 ( e ) ; } catch ( TYPE_5 e ) { METHOD_6 ( e ) ; } catch ( TYPE_6 e ) { METHOD_6 ( e ) ; } return null ; } } ; null return } ; ) e ( METHOD_6 { ) e TYPE_6 ( catch } ; ) e ( METHOD_6 { ) e TYPE_5 ( catch } ; ) e ( METHOD_6 { ) e TYPE_4 ( catch } ; ) ) hosts ( METHOD_5 . TYPE_3 ( map return ; ) class . ] [ TYPE_2 , ) ( METHOD_4 . VAR_1 ( METHOD_3 . VAR_3 = hosts ] [ TYPE_2 ; ) VAR_1 , VAR_2 ( METHOD_2 { try { ) VAR_1 TYPE_1 ( METHOD_1 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List private 
public TYPE_1 . AuditLogType METHOD_1 ( ) { TYPE_1 . AuditLogType VAR_1 = ( TYPE_2 . METHOD_2 ( ) ) ? VAR_2 : VAR_3 ; return TYPE_2 . getSucceeded ( ) ? ( TYPE_2 . METHOD_3 ( ) ) == ( VAR_4 ) ? VAR_5 : VAR_1 : VAR_6 ? VAR_7 : ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) == ( VAR_8 ) ? VAR_9 : VAR_10 ; } } ; VAR_10 : VAR_9 ? ) VAR_8 ( == ) ) ( METHOD_5 . ) ( METHOD_4 . TYPE_2 ( : VAR_7 ? VAR_6 : VAR_1 : VAR_5 ? ) VAR_4 ( == ) ) ( METHOD_3 . TYPE_2 ( ? ) ( getSucceeded . TYPE_2 return ; VAR_3 : VAR_2 ? ) ) ( METHOD_2 . TYPE_2 ( = VAR_1 AuditLogType . TYPE_1 { ) ( METHOD_1 AuditLogType . TYPE_1 public 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( result ) ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( true ) ; } else { METHOD_2 ( false ) ; METHOD_3 ( false ) ; } } } } ; ) false ( METHOD_3 ; ) false ( METHOD_2 { else } ; ) true ( METHOD_3 . VAR_1 ; ) true ( METHOD_2 . VAR_1 { ) ) ) ( isEmpty . VAR_2 ( ! ( if ; ) ) result ( ) > java.lang.String , java.lang.String < java.util.Map ( ( = VAR_2 > java.lang.String , java.lang.String < java.util.Map ; ) ) model ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) result java.lang.Object , model java.lang.Object ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 , boolean VAR_3 , java.util.List < java.lang.String > VAR_4 , java.lang.String VAR_5 , TYPE_2 nic ) { if ( VAR_2 || VAR_3 ) { java.util.List < java.lang.String > VAR_6 = ( VAR_2 ) ? VAR_4 : VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_7 = METHOD_3 ( VAR_1 , VAR_5 , VAR_3 , VAR_2 , VAR_6 , nic . METHOD_4 ( ) ) ; return METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_7 ) . METHOD_8 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( METHOD_8 . ) VAR_7 ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 return ; ) ) ( METHOD_4 . nic , VAR_6 , VAR_2 , VAR_3 , VAR_5 , VAR_1 ( METHOD_3 = VAR_7 TYPE_1 ; ) ( METHOD_2 . VAR_1 : VAR_4 ? ) VAR_2 ( = VAR_6 > java.lang.String < java.util.List { ) VAR_3 || VAR_2 ( if { ) nic TYPE_2 , VAR_5 java.lang.String , VAR_4 > java.lang.String < java.util.List , VAR_3 boolean , VAR_2 boolean , VAR_1 TYPE_1 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) { VAR_2 = new TYPE_4 ( VAR_4 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) { VAR_2 = new TYPE_3 ( VAR_5 class ) ; } else { } return VAR_2 ; } } ; VAR_2 return } { else } ; ) class VAR_5 ( TYPE_3 new = VAR_2 { ) ) STRING_3 , VAR_1 ( METHOD_2 . TYPE_2 ( if else } ; ) class VAR_4 ( TYPE_4 new = VAR_2 { ) ) STRING_2 , VAR_1 ( METHOD_2 . TYPE_2 ( if else } ; ) class VAR_3 ( TYPE_3 new = VAR_2 { ) ) STRING_1 , VAR_1 ( METHOD_2 . TYPE_2 ( if ; null = VAR_2 TYPE_1 { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( > org.ovirt.engine.core.common.businessentities.network.Network < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 , TYPE_2 < TYPE_4 > VAR_2 , TYPE_2 < TYPE_5 < ? > > VAR_3 , java.lang.String VAR_4 , float VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 , TYPE_6 VAR_8 , java.lang.String VAR_9 ) { return new TYPE_1 ( VAR_10 , VAR_11 , VAR_12 , VAR_1 , VAR_2 , VAR_3 , VAR_13 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; } } ; ) VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_13 , VAR_3 , VAR_2 , VAR_1 , VAR_12 , VAR_11 , VAR_10 ( TYPE_1 new return { ) VAR_9 java.lang.String , VAR_8 TYPE_6 , VAR_7 java.lang.String , VAR_6 java.lang.String , VAR_5 float , VAR_4 java.lang.String , VAR_3 > > ? < TYPE_5 < TYPE_2 , VAR_2 > TYPE_4 < TYPE_2 , VAR_1 > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 public 
public synchronized void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) ) { VAR_2 . put ( VAR_1 . getId ( ) , VAR_1 ) ; } METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) ) ; } } ; ) ) ( getId . VAR_1 , STRING_1 ( METHOD_4 . VAR_3 ; ) VAR_1 ( METHOD_3 } ; ) VAR_1 , ) ( getId . VAR_1 ( put . VAR_2 { ) ) ) ) ( getId . VAR_1 ( METHOD_2 . VAR_2 ( ! ( if { ) VAR_1 TYPE_1 ( METHOD_1 void synchronized public 
public TYPE_1 getValue ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; default : return METHOD_3 ( ) . METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 . ) ( METHOD_3 return : default ; ) ( METHOD_5 . ) ( METHOD_3 return : VAR_3 case ; ) ( METHOD_4 . ) ( METHOD_3 return : VAR_2 case { ) ) ( METHOD_2 . VAR_1 ( switch ; ) ) ( METHOD_2 . VAR_1 ( METHOD_1 { ) VAR_1 TYPE_2 ( getValue TYPE_1 public 
private boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; if ( TYPE_1 . equals ( vm . getStatus ( ) ) ) { return true ; } java.util.ArrayList < TYPE_2 > VAR_1 = ( ( METHOD_2 ( ) ) ! = null ) ? VAR_2 . Linq < TYPE_2 > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 nic : VAR_1 ) { if ( nic . METHOD_4 ( ) ) { return false ; } } return true ; } } ; true return } } ; false return { ) ) ( METHOD_4 . nic ( if { ) VAR_1 : nic TYPE_2 ( for ; ) ( > TYPE_2 < java.util.ArrayList new : ) ) ( METHOD_2 ( METHOD_3 > TYPE_2 < Linq . VAR_2 ? ) null = ! ) ) ( METHOD_2 ( ( = VAR_1 > TYPE_2 < java.util.ArrayList } ; true return { ) ) ) ( getStatus . vm ( equals . TYPE_1 ( if ; ) ( getEntity = vm org.ovirt.engine.core.common.businessentities.VM { ) ( METHOD_1 boolean private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; java.util.List < TYPE_1 > VAR_4 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_5 = VAR_1 ; VAR_4 . add ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_4 ) ; boolean VAR_7 = command . METHOD_5 ( VAR_1 , null ) ; TYPE_2 . METHOD_6 ( VAR_7 ) ; } } ; ) VAR_7 ( METHOD_6 . TYPE_2 ; ) null , VAR_1 ( METHOD_5 . command = VAR_7 boolean ; ) VAR_4 ( thenReturn . ) ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . VAR_6 ( org.mockito.Mockito.when ; ) VAR_5 ( add . VAR_4 ; VAR_1 = VAR_5 TYPE_1 ; ) ( > < java.util.ArrayList new = VAR_4 > TYPE_1 < java.util.List ; ) 0 , INT_1 , VAR_3 , VAR_2 , STRING_1 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 = new TYPE_1 ( ( ( java.lang.String ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 ) ) ) , METHOD_3 ( ) . METHOD_4 ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( METHOD_4 . ) ( METHOD_3 , ) ) ) VAR_2 ( METHOD_2 . ) ( getInstance . TYPE_2 ( ) java.lang.String ( ( ( TYPE_1 new = VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 protected 
protected void METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; boolean VAR_2 = ( METHOD_3 ( ) . getSelectedItem ( ) ) == null ; if ( VAR_2 ) { METHOD_4 ( ) . setIsChangable ( false ) ; return ; } if ( ! ( VAR_3 ) ) { METHOD_4 ( ) . setIsChangable ( false ) ; return ; } METHOD_4 ( ) . setIsChangable ( true ) ; } } ; ) true ( setIsChangable . ) ( METHOD_4 } ; return ; ) false ( setIsChangable . ) ( METHOD_4 { ) ) VAR_3 ( ! ( if } ; return ; ) false ( setIsChangable . ) ( METHOD_4 { ) VAR_2 ( if ; null == ) ) ( getSelectedItem . ) ( METHOD_3 ( = VAR_2 boolean ; ) ) ) ( getEntity . ) ( METHOD_2 ( ) java.lang.Boolean ( ( = VAR_1 boolean { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_7 . cmd ( assertEquals . TYPE_3 ; ) ) ( getSucceeded . ) ( getReturnValue . cmd ( METHOD_6 . TYPE_3 ; ) ( METHOD_5 . cmd ; ) false , cmd ( METHOD_4 ; ) cmd ( METHOD_3 ; ) ) null , ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { java.lang.String VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 , METHOD_3 ( ) ) ; return super . METHOD_1 ( VAR_1 , VAR_2 . METHOD_4 ( ) , TYPE_3 . getParameters ( ) . METHOD_5 ( ) , VAR_4 , VAR_6 , VAR_3 ) ; } } ; ) VAR_3 , VAR_6 , VAR_4 , ) ( METHOD_5 . ) ( getParameters . TYPE_3 , ) ( METHOD_4 . VAR_2 , VAR_1 ( METHOD_1 . super return ; ) ) ( METHOD_3 , VAR_5 ( METHOD_2 . TYPE_2 = VAR_4 java.lang.String { ) VAR_3 org.ovirt.engine.core.compat.Guid , VAR_2 TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 org.ovirt.engine.core.compat.Guid private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat . Version version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( version ) , aQuery ) ; } } ; ) aQuery , ) version ( TYPE_2 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) version Version . org.ovirt.engine.core.compat , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private TYPE_1 METHOD_1 ( final TYPE_2 < ? > command , final TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = command . METHOD_2 ( ) ; TYPE_1 result = TYPE_5 . METHOD_3 ( VAR_3 . log ) . METHOD_4 ( command , ( VAR_1 ! = null ? VAR_1 . METHOD_5 ( ) : null ) ) ; METHOD_6 ( command , result ) ; return result ; } } ; result return ; ) result , command ( METHOD_6 ; ) ) null : ) ( METHOD_5 . VAR_1 ? null = ! VAR_1 ( , command ( METHOD_4 . ) log . VAR_3 ( METHOD_3 . TYPE_5 = result TYPE_1 ; ) ( METHOD_2 . command = VAR_2 TYPE_4 { ) VAR_1 TYPE_3 final , command > ? < TYPE_2 final ( METHOD_1 TYPE_1 private 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , vm . METHOD_2 ( ) ) ; model . METHOD_3 ( model , VAR_3 , VAR_2 , vm . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ) ( METHOD_4 . vm , VAR_2 , VAR_3 , model ( METHOD_3 . model ; ) ) ( METHOD_2 . vm , VAR_1 ( METHOD_1 . TYPE_2 = VAR_2 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
private TYPE_1 METHOD_1 ( TYPE_2 < org.ovirt.engine.core.compat.Guid , TYPE_2 < java.lang.Boolean , java.lang.Integer > > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { return METHOD_2 ( ) . addValue ( STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) . addValue ( STRING_2 , VAR_2 ) . addValue ( STRING_3 , VAR_1 . METHOD_4 ( ) ) . addValue ( STRING_4 , VAR_1 . METHOD_5 ( ) . METHOD_5 ( ) ) . addValue ( STRING_5 , VAR_1 . METHOD_5 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_5 . VAR_1 , STRING_5 ( addValue . ) ) ( METHOD_5 . ) ( METHOD_5 . VAR_1 , STRING_4 ( addValue . ) ) ( METHOD_4 . VAR_1 , STRING_3 ( addValue . ) VAR_2 , STRING_2 ( addValue . ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid , STRING_1 ( addValue . ) ( METHOD_2 return { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 > > java.lang.Integer , java.lang.Boolean < TYPE_2 , org.ovirt.engine.core.compat.Guid < TYPE_2 ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVm ( ) . METHOD_2 ( ) ) ! = null ) { TYPE_3 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_2 . getVm ( ) . METHOD_2 ( ) . getValue ( ) , VAR_1 ) ) ; } else { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_6 . ) ( METHOD_5 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance { else } ; ) ) VAR_1 , ) ( getValue . ) ( METHOD_2 . ) ( getVm . TYPE_2 ( TYPE_4 new , VAR_2 ( METHOD_4 . ) ( METHOD_3 . ) ( getInstance . TYPE_3 { ) null = ! ) ) ( METHOD_2 . ) ( getVm . TYPE_2 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; assertEquals ( 1 , VAR_1 . METHOD_3 ( ) . size ( ) ) ; assertEquals ( 0 , VAR_1 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ; assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( ) . get ( 0 ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) 0 ( get . ) ( METHOD_3 . VAR_1 , STRING_2 ( assertEquals ; ) ) ( METHOD_4 . ) 0 ( get . ) ( METHOD_3 . VAR_1 , 0 ( assertEquals ; ) ) ( size . ) ( METHOD_3 . VAR_1 , 1 ( assertEquals ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 ; ) VAR_1 ( METHOD_2 ; ) STRING_1 ( METHOD_1 . TYPE_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . append ( STRING_2 ) ; VAR_1 . append ( STRING_3 ) ; VAR_1 . append ( STRING_4 ) ; java.util.Map < java.lang.String , TYPE_2 > VAR_2 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . toString ( ) , VAR_3 . HashMap class ) ; TYPE_4 . METHOD_3 ( VAR_2 ) ; TYPE_4 . assertEquals ( VAR_2 . get ( STRING_5 ) , VAR_4 ) ; } } ; ) VAR_4 , ) STRING_5 ( get . VAR_2 ( assertEquals . TYPE_4 ; ) VAR_2 ( METHOD_3 . TYPE_4 ; ) class HashMap . VAR_3 , ) ( toString . VAR_1 ( METHOD_2 . ) ( TYPE_3 new = VAR_2 > TYPE_2 , java.lang.String < java.util.Map ; ) STRING_4 ( append . VAR_1 ; ) STRING_3 ( append . VAR_1 ; ) STRING_2 ( append . VAR_1 ; ) STRING_1 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_2 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 TYPE_1 , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private void METHOD_1 ( TYPE_1 id ) { try ( TYPE_2 VAR_1 = new TYPE_2 ( this . VAR_2 ) ) { this . VAR_3 . METHOD_2 ( id ) ; TYPE_3 VAR_4 = this . map . METHOD_2 ( id ) ; java.util.List < TYPE_1 > VAR_5 = this . VAR_6 . get ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_5 . METHOD_2 ( id ) ; } } } } ; ) id ( METHOD_2 . VAR_5 ; ) ) ( METHOD_4 . ) ( METHOD_3 . VAR_4 ( get . VAR_6 . this = VAR_5 > TYPE_1 < java.util.List ; ) id ( METHOD_2 . map . this = VAR_4 TYPE_3 ; ) id ( METHOD_2 . VAR_3 . this { ) ) VAR_2 . this ( TYPE_2 new = VAR_1 TYPE_2 ( try { ) id TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 e ) { switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : break ; case VAR_3 : VAR_4 . METHOD_2 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . METHOD_3 ( ) , e . METHOD_4 ( ) ) ; break ; default : VAR_4 . METHOD_5 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . METHOD_3 ( ) , e . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . e , ) ( METHOD_3 . VAR_1 , ) ( getId . VAR_1 , STRING_1 ( METHOD_5 . VAR_4 : default ; break ; ) ) ( METHOD_4 . e , ) ( METHOD_3 . VAR_1 , ) ( getId . VAR_1 , STRING_1 ( METHOD_2 . VAR_4 : VAR_3 case ; break : VAR_2 case { ) ) ( getStatus . VAR_1 ( switch { ) e TYPE_1 ( METHOD_1 void private 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , TYPE_2 status ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 i : VAR_1 ) { if ( ( i . METHOD_2 ( ) ) == status ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } } ; VAR_2 return } } ; ) i ( add . VAR_2 { ) status == ) ) ( METHOD_2 . i ( ( if { ) VAR_1 : i TYPE_1 ( for ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_2 > TYPE_1 < java.util.ArrayList { ) status TYPE_2 , VAR_1 > TYPE_1 < java.util.ArrayList ( METHOD_1 > TYPE_1 < java.util.ArrayList static public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 , ( ( int ) ( METHOD_5 ( ) ) ) ) ; METHOD_6 ( TYPE_2 . getParameters ( ) . METHOD_7 ( ) , true ) ; TYPE_2 . getReturnValue ( ) . METHOD_8 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_9 ( true ) ; } } ; ) true ( METHOD_9 . TYPE_2 ; ) ) ( getId . VAR_1 ( METHOD_8 . ) ( getReturnValue . TYPE_2 ; ) true , ) ( METHOD_7 . ) ( getParameters . TYPE_2 ( METHOD_6 ; ) ) ) ) ( METHOD_5 ( ) int ( ( , VAR_1 ( METHOD_4 . ) ( METHOD_3 . TYPE_2 ; ) ) ) ( METHOD_2 . TYPE_2 ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 < java.lang.Boolean , java.lang.String > VAR_1 = new TYPE_1 < java.lang.Boolean , java.lang.String > ( true , STRING_1 ) ; TYPE_1 < java.lang.Boolean , java.lang.String > VAR_2 = new TYPE_1 < java.lang.Boolean , java.lang.String > ( true , STRING_1 ) ; TYPE_1 < java.lang.Boolean , java.lang.String > VAR_3 = new TYPE_1 < java.lang.Boolean , java.lang.String > ( false , STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_1 . equals ( VAR_2 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . equals ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( equals . VAR_1 ( METHOD_3 . TYPE_2 ; ) ) VAR_2 ( equals . VAR_1 ( METHOD_2 . TYPE_2 ; ) STRING_1 , false ( > java.lang.String , java.lang.Boolean < TYPE_1 new = VAR_3 > java.lang.String , java.lang.Boolean < TYPE_1 ; ) STRING_1 , true ( > java.lang.String , java.lang.Boolean < TYPE_1 new = VAR_2 > java.lang.String , java.lang.Boolean < TYPE_1 ; ) STRING_1 , true ( > java.lang.String , java.lang.Boolean < TYPE_1 new = VAR_1 > java.lang.String , java.lang.Boolean < TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid id = TYPE_1 . getParameters ( ) . getId ( ) ; for ( TYPE_2 VAR_1 : org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( id ) ) { TYPE_3 tempVar = new TYPE_3 ( VAR_1 ) ; tempVar . METHOD_4 ( false ) ; TYPE_4 . getInstance ( ) . METHOD_5 ( VAR_2 , tempVar , TYPE_5 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ) ; } TYPE_1 . METHOD_8 ( ) . METHOD_9 ( id ) ; TYPE_1 . METHOD_10 ( true ) ; } } ; ) true ( METHOD_10 . TYPE_1 ; ) id ( METHOD_9 . ) ( METHOD_8 . TYPE_1 } ; ) ) ) ( METHOD_7 . TYPE_1 ( METHOD_6 . TYPE_5 , tempVar , VAR_2 ( METHOD_5 . ) ( getInstance . TYPE_4 ; ) false ( METHOD_4 . tempVar ; ) VAR_1 ( TYPE_3 new = tempVar TYPE_3 { ) ) id ( METHOD_3 . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance : VAR_1 TYPE_2 ( for ; ) ( getId . ) ( getParameters . TYPE_1 = id org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; } } ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) , aQuery ) ; } } ; ) aQuery , ) ) ( METHOD_4 . TYPE_1 , VAR_1 ( TYPE_2 new ( METHOD_3 . TYPE_1 ; } } ; 1 : ) ( METHOD_2 . ) ) source ( ) java.lang.Integer ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_5 . ) ) VAR_3 ( METHOD_4 . VAR_2 ( METHOD_3 . TYPE_2 ; ) VAR_2 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( add . VAR_1 ; ) ( > java.lang.String < java.util.ArrayList new = VAR_1 > java.lang.String < java.util.List { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , ( ! ( iface . METHOD_5 ( ) ) ) , 0 , TYPE_1 . instance ( ) . METHOD_6 ( ) , METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 , ) ( METHOD_6 . ) ( instance . TYPE_1 , 0 , ) ) ) ( METHOD_5 . iface ( ! ( , ) ( METHOD_4 . iface , false , iface ( METHOD_3 ; ) ( METHOD_2 = iface org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > list = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( item ) ) ; list . add ( new TYPE_2 ( vds . getId ( ) ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_1 , list , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_4 result ) { } } , null ) ; } } ; ) null , } } { ) result TYPE_4 ( METHOD_4 void public { ) ( TYPE_3 new , list , VAR_1 ( METHOD_3 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance } ; ) ) ) ( getId . vds ( TYPE_2 new ( add . list ; ) ) item ( ) org.ovirt.engine.core.common.businessentities.VDS ( ( = vds org.ovirt.engine.core.common.businessentities.VDS { ) ) ( METHOD_2 : item java.lang.Object ( for ; ) ( > VdcActionParametersBase . TYPE_1 < java.util.ArrayList new = list > VdcActionParametersBase . TYPE_1 < java.util.ArrayList { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; TYPE_5 . METHOD_6 ( cmd ) ; } } ; ) cmd ( METHOD_6 . TYPE_5 ; ) ) VAR_1 ( METHOD_5 . TYPE_4 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_4 . VAR_5 ( org.mockito.Mockito.when ; ) ) ( METHOD_3 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( get . VAR_3 ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_2 ( ) ; for ( TYPE_1 storageDomain : VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( storageDomain . getId ( ) , VAR_3 ) ) . thenReturn ( storageDomain ) ; } } } } ; ) storageDomain ( thenReturn . ) ) VAR_3 , ) ( getId . storageDomain ( METHOD_3 . VAR_2 ( org.mockito.Mockito.when { ) VAR_1 : storageDomain TYPE_1 ( for ; ) ( METHOD_2 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void private 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new java.util.HashMap < java.lang.Integer , TYPE_1 > ( ) { { put ( 0 , new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_2 ) ) ) ; } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( TYPE_2 . any ( ) , TYPE_2 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_7 . VAR_2 ; ) ) ( METHOD_6 . TYPE_2 , ) ( any . TYPE_2 ( METHOD_5 . ) VAR_2 ( when . ) ( METHOD_4 . org.mockito.Mockito ; ) } } ; ) ) ) STRING_2 ( METHOD_3 . org.ovirt.engine.core.compat.Guid , ) STRING_1 ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( TYPE_1 new , 0 ( put { { ) ( > TYPE_1 , java.lang.Integer < java.util.HashMap new ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 vds = VAR_1 . METHOD_2 ( ) . get ( VAR_2 ) ; TYPE_2 . METHOD_3 ( vds ) ; java.lang.String name = vds . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_1 . METHOD_6 ( VAR_2 , VAR_3 . VDS ) ) ) ; } } ; ) ) ) VDS . VAR_3 , VAR_2 ( METHOD_6 . VAR_1 ( equals . name ( METHOD_5 . TYPE_2 ; ) ( METHOD_4 . vds = name java.lang.String ; ) vds ( METHOD_3 . TYPE_2 ; ) VAR_2 ( get . ) ( METHOD_2 . VAR_1 = vds TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; if ( VAR_8 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_9 ) ; METHOD_5 ( ) ; } else if ( VAR_10 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_11 ) ; } else if ( VAR_12 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_13 ) ; } } } } ; ) VAR_13 ( METHOD_4 { ) ) ( getValue . ) ( METHOD_3 . VAR_12 ( if else } ; ) VAR_11 ( METHOD_4 { ) ) ( getValue . ) ( METHOD_3 . VAR_10 ( if else } ; ) ( METHOD_5 ; ) VAR_9 ( METHOD_4 { ) ) ( getValue . ) ( METHOD_3 . VAR_8 ( if ; ) VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_3 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; VAR_3 . setEntity ( VAR_1 ) ; TYPE_1 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel > VAR_4 = new TYPE_2 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( STRING_1 , VAR_3 ) ; VAR_5 . add ( VAR_4 ) ; VAR_2 . put ( VAR_1 , VAR_4 ) ; } } } } ; ) VAR_4 , VAR_1 ( put . VAR_2 ; ) VAR_4 ( add . VAR_5 ; ) VAR_3 , STRING_1 ( > org.ovirt.engine.ui.uicommonweb.models.EntityModel , java.lang.String < TYPE_2 new = VAR_4 > org.ovirt.engine.ui.uicommonweb.models.EntityModel , java.lang.String < TYPE_1 ; ) VAR_1 ( setEntity . VAR_3 ; ) ( org.ovirt.engine.ui.uicommonweb.models.EntityModel new = VAR_3 org.ovirt.engine.ui.uicommonweb.models.EntityModel { ) ) ) VAR_1 ( METHOD_2 . VAR_2 ( ! ( if { ) VAR_1 java.lang.String ( METHOD_1 void private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 . StorageDomain ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , VAR_1 , aQuery ) ; } } ; ) aQuery , VAR_1 , VAR_3 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; ) INT_1 ( METHOD_2 . VAR_1 ; ) StorageDomain . VAR_2 , STRING_1 ( TYPE_2 new = VAR_1 TYPE_2 ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_3 ( parameters , null ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_8 ( TYPE_4 . METHOD_9 ( VAR_2 class ) ) ; } } ; ) ) class VAR_2 ( METHOD_9 . TYPE_4 ( METHOD_8 . ) command ( when . ) ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_7 . ) command ( when . ) ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_6 . ) command ( when . ) ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_4 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) ) null , parameters ( TYPE_3 new ( METHOD_3 . org.mockito.Mockito = command ; ) ) ( METHOD_2 . TYPE_2 ( TYPE_1 new = parameters { ) ( METHOD_1 void public 
protected java.util.List < java.lang.String > METHOD_1 ( TYPE_1 object ) { java.util.List < java.lang.String > VAR_1 = super . METHOD_1 ( object ) ; java.lang.String VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( VAR_1 . get ( i ) . equals ( VAR_2 ) ) { VAR_1 . METHOD_4 ( i ) ; break ; } } return VAR_1 ; } } ; VAR_1 return } } ; break ; ) i ( METHOD_4 . VAR_1 { ) ) VAR_2 ( equals . ) i ( get . VAR_1 ( if { ) ++ i ; ) ) ( size . VAR_1 ( < i ; 0 = i int ( for ; ) ( getName . ) ( METHOD_3 . ) ( METHOD_2 = VAR_2 java.lang.String ; ) object ( METHOD_1 . super = VAR_1 > java.lang.String < java.util.List { ) object TYPE_1 ( METHOD_1 > java.lang.String < java.util.List protected 
private static void METHOD_1 ( TYPE_1 command , TYPE_2 VAR_1 ) { final TYPE_3 dao = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; final TYPE_4 domain = new TYPE_4 ( ) ; domain . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( dao . get ( TYPE_5 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( domain ) ; org.mockito.Mockito.doReturn ( dao ) . when ( command ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) command ( when . ) dao ( org.mockito.Mockito.doReturn ; ) domain ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_5 ( get . dao ( org.mockito.Mockito.when ; ) VAR_1 ( METHOD_3 . domain ; ) ( TYPE_4 new = domain TYPE_4 final ; ) class VAR_2 ( METHOD_2 . org.mockito.Mockito = dao TYPE_3 final { ) VAR_1 TYPE_2 , command TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_5 ( TYPE_1 . any ( VAR_5 . VM class ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 0 ) ) . METHOD_5 ( TYPE_1 . METHOD_7 ( VAR_6 ) ) ; } } ; ) ) VAR_6 ( METHOD_7 . TYPE_1 ( METHOD_5 . ) ) 0 ( METHOD_6 . org.mockito.Mockito , VAR_3 ( METHOD_4 . org.mockito.Mockito ; ) ) class VM . VAR_5 ( any . TYPE_1 ( METHOD_5 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_3 ( METHOD_4 . org.mockito.Mockito ; ) VAR_4 ( METHOD_5 . ) VAR_3 ( METHOD_4 . org.mockito.Mockito ; ) ( METHOD_3 . VAR_3 ; ) VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > map = ( ( java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; VAR_3 . add ( map . get ( true ) ) ; VAR_2 . setItems ( VAR_3 ) ; } } ; ) VAR_3 ( setItems . VAR_2 ; ) ) true ( get . map ( add . VAR_3 ; ) ( > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList new = VAR_3 > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.List ; ) ) ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_2 ( ( ( ) > org.ovirt.engine.core.common.businessentities.VmTemplate , java.lang.Boolean < java.util.HashMap ( ( = map > org.ovirt.engine.core.common.businessentities.VmTemplate , java.lang.Boolean < java.util.HashMap ; ) ) model ( ) TYPE_1 ( ( = VAR_2 TYPE_1 { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
private TYPE_1 . AsyncQuery METHOD_1 ( ) { TYPE_1 . AsyncQuery VAR_1 = new TYPE_1 . AsyncQuery ( ) ; VAR_2 = new TYPE_2 ( ) { public void onSuccess ( java.lang.Object returnValue ) { METHOD_2 ( ( ( TYPE_3 ) ( ( ( TYPE_4 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } } ; return VAR_1 ; } } ; VAR_1 return ; } } ; ) ) ) ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_4 ( ( ( ) TYPE_3 ( ( ( METHOD_2 { ) returnValue java.lang.Object ( onSuccess void public { ) ( TYPE_2 new = VAR_2 ; ) ( AsyncQuery . TYPE_1 new = VAR_1 AsyncQuery . TYPE_1 { ) ( METHOD_1 AsyncQuery . TYPE_1 private 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) ! = null ) & & ( ( VAR_1 . METHOD_2 ( ) . getStatus ( ) ) == status ) ) { return true ; } return false ; } } ; false return } ; true return { ) ) status == ) ) ( getStatus . ) ( METHOD_2 . VAR_1 ( ( & & ) null = ! ) ) ( METHOD_2 . VAR_1 ( ( ( if { ) status TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 boolean static public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } } } } ; ) ( METHOD_7 { ) ) STRING_1 , ) ( getName . command ( METHOD_6 . TYPE_1 ( if else } ; ) ( METHOD_5 { ) ) ) ( METHOD_4 ( == command ( if else } ; ) ( METHOD_3 { ) ) ) ( METHOD_2 ( == command ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( VAR_3 class ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . any ( ) ) . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_1 , org.mockito.Mockito . METHOD_9 ( VAR_4 ) ) . METHOD_10 ( TYPE_2 . any ( ) , TYPE_2 . any ( ) ) ; } } ; ) ) ( any . TYPE_2 , ) ( any . TYPE_2 ( METHOD_10 . ) ) VAR_4 ( METHOD_9 . org.mockito.Mockito , VAR_1 ( METHOD_8 . org.mockito.Mockito ; ) ) ( METHOD_7 . ) ) ( any . TYPE_2 , ) ( METHOD_6 . TYPE_2 ( METHOD_5 . validator ( METHOD_4 . TYPE_3 ; ) ) class VAR_3 ( any . TYPE_2 ( METHOD_3 . ) validator ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) class VAR_2 ( METHOD_2 . org.mockito.Mockito = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 VAR_2 = METHOD_3 ( ) ; long VAR_3 = TYPE_2 . METHOD_4 ( ) ; if ( VAR_2 . METHOD_5 ( ) ) { METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; METHOD_9 ( VAR_2 . METHOD_10 ( ) . METHOD_11 ( ) . map ( TYPE_3 : : METHOD_12 ) , VAR_3 ) ; } else { VAR_4 . METHOD_13 ( STRING_1 , VAR_1 . METHOD_14 ( ) ) ; } } } } } } ; ) ) ( METHOD_14 . VAR_1 , STRING_1 ( METHOD_13 . VAR_4 { else } ; ) VAR_3 , ) METHOD_12 : : TYPE_3 ( map . ) ( METHOD_11 . ) ( METHOD_10 . VAR_2 ( METHOD_9 ; ) ) ( METHOD_8 . VAR_2 ( METHOD_7 . ) VAR_3 ( METHOD_6 { ) ) ( METHOD_5 . VAR_2 ( if ; ) ( METHOD_4 . TYPE_2 = VAR_3 long ; ) ( METHOD_3 = VAR_2 TYPE_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; VAR_1 . METHOD_1 ( object . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_1 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( false ) ; VAR_5 . METHOD_3 ( false ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; VAR_6 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_8 ) ; METHOD_8 ( ) . METHOD_9 ( INT_1 , INT_2 ) ; } } ; ) INT_2 , INT_1 ( METHOD_9 . ) ( METHOD_8 ; ) VAR_8 ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 . VAR_6 ; ) VAR_7 ( METHOD_4 . VAR_6 ; ) false ( METHOD_3 . VAR_5 ; ) false ( METHOD_3 . VAR_4 ; ) true ( METHOD_3 . VAR_1 ; ) false ( METHOD_3 . VAR_3 ; ) true ( METHOD_3 . VAR_2 ; ) ) ( METHOD_2 . object ( METHOD_1 . VAR_1 ; ) object ( METHOD_1 . super { ) object TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( getWindow ( ) ) ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( org.ovirt.engine.core.compat.Guid ) ( returnValue . METHOD_4 ( ) ) ) ) ; METHOD_5 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_5 ; ) ) ) ) ( METHOD_4 . returnValue ( ) org.ovirt.engine.core.compat.Guid ( ( ( METHOD_3 . ) ( METHOD_2 . VAR_1 ; ) ) ) ( getWindow ( ) TYPE_2 ( ( = VAR_1 TYPE_2 { ) returnValue TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_1 . when ( VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_10 ; ) ( METHOD_9 ; ) ( METHOD_8 ; ) ( METHOD_7 . TYPE_3 ; ) ( METHOD_6 . TYPE_3 ; ) ) ( METHOD_3 . TYPE_3 ( thenReturn . ) ) ) ( METHOD_5 . TYPE_2 ( METHOD_4 . VAR_1 ( when . TYPE_1 ; ) ) ( METHOD_3 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_2 ( any . TYPE_2 ( get . VAR_1 ( when . TYPE_1 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_5 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) ) ; TYPE_3 . METHOD_10 ( STRING_1 , command , VAR_4 ) ; } } ; ) VAR_4 , command , STRING_1 ( METHOD_10 . TYPE_3 ; ) ) ) ( METHOD_9 . VAR_1 ( METHOD_8 . command ( METHOD_7 . TYPE_2 ; ) ( METHOD_6 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) null ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_1 ( METHOD_5 . VAR_2 ( org.mockito.Mockito.when ; ) ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_1 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_4 ( new TYPE_3 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_6 ) , TYPE_4 . any ( ) ) ) . thenReturn ( VAR_4 ) ; } } ; ) VAR_4 ( thenReturn . ) ) ) ( any . TYPE_4 , ) VAR_6 ( METHOD_6 . TYPE_4 ( METHOD_5 . VAR_5 ( org.mockito.Mockito.when } ; ) ) STRING_1 , VAR_2 ( TYPE_3 new ( METHOD_4 . VAR_4 { ) VAR_1 ! ( if ; ) VAR_1 ( METHOD_3 . VAR_4 ; ) ( TYPE_2 new = VAR_4 TYPE_2 ; ) ( METHOD_2 . ) cmd ( when . ) VAR_3 ( org.mockito.Mockito.doReturn { ) VAR_2 TYPE_1 , VAR_1 boolean ( METHOD_1 void private 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( VAR_2 [ 1 ] ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_5 class ) , TYPE_1 . any ( VAR_6 class ) , TYPE_1 . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . TYPE_1 , ) class VAR_6 ( any . TYPE_1 , ) class VAR_5 ( any . TYPE_1 ( METHOD_8 . ) ) 2 ( METHOD_7 . org.mockito.Mockito , VAR_4 ( METHOD_6 . org.mockito.Mockito ; ) ( METHOD_5 . VAR_3 ; ) ( METHOD_4 ; ) ] 1 [ VAR_2 ( METHOD_3 . ) VAR_1 ( when . ) ) ( METHOD_2 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_2 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_4 , VAR_5 ) ) . when ( VAR_3 ) . get ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_6 , VAR_5 ) ) . when ( VAR_3 ) . get ( VAR_6 ) ; } } ; ) VAR_6 ( get . ) VAR_3 ( when . ) ) VAR_5 , VAR_6 ( METHOD_6 ( org.mockito.Mockito.doReturn ; ) VAR_4 ( get . ) VAR_3 ( when . ) ) VAR_5 , VAR_4 ( METHOD_6 ( org.mockito.Mockito.doReturn ; ) ( METHOD_5 . ) VAR_1 ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) VAR_2 ( when . ) ) ( METHOD_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) VAR_1 ( when . ) VAR_2 ( org.mockito.Mockito.doReturn { ) VAR_3 TYPE_3 , VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void public 
private java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.lang.Object result ) { if ( ( result == null ) || ( ! ( result instanceof java.lang.Object [ ] ) ) ) { VAR_1 . error ( STRING_1 ) ; return null ; } java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = new TYPE_1 < org.ovirt.engine.core.compat.Guid > ( ) ; for ( java.lang.Object VAR_3 : ( ( java.lang.Object [ ] ) ( result ) ) ) { VAR_2 . add ( new org.ovirt.engine.core.compat.Guid ( VAR_3 . toString ( ) ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ) ( toString . VAR_3 ( org.ovirt.engine.core.compat.Guid new ( add . VAR_2 { ) ) ) result ( ) ] [ java.lang.Object ( ( : VAR_3 java.lang.Object ( for ; ) ( > org.ovirt.engine.core.compat.Guid < TYPE_1 new = VAR_2 > org.ovirt.engine.core.compat.Guid < java.util.List } ; null return ; ) STRING_1 ( error . VAR_1 { ) ) ) ] [ java.lang.Object instanceof result ( ! ( || ) null == result ( ( if { ) result java.lang.Object ( METHOD_1 > org.ovirt.engine.core.compat.Guid < java.util.List private 
public static TYPE_1 map ( TYPE_2 VAR_1 , TYPE_1 template ) { TYPE_3 type = TYPE_3 . valueOf ( VAR_1 . METHOD_1 ( ) ) ; if ( template ! = null ) { return template ; } switch ( type ) { case VAR_2 : return new TYPE_1 ( VAR_3 ) ; case VAR_4 : return new TYPE_1 ( VAR_5 ) ; default : return template ; } } } } ; template return : default ; ) VAR_5 ( TYPE_1 new return : VAR_4 case ; ) VAR_3 ( TYPE_1 new return : VAR_2 case { ) type ( switch } ; template return { ) null = ! template ( if ; ) ) ( METHOD_1 . VAR_1 ( valueOf . TYPE_3 = type TYPE_3 { ) template TYPE_1 , VAR_1 TYPE_2 ( map TYPE_1 static public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.util.ArrayList < TYPE_1 . VdcQueryType > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcQueryType > ( ) ; VAR_1 . add ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; java.util.ArrayList < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( TYPE_4 . METHOD_3 ( new TYPE_3 [ ] { VAR_3 } ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_1 , VAR_5 , this , getModel ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( getModel , this , VAR_5 , VAR_1 ( METHOD_4 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) ) } VAR_3 { ] [ TYPE_3 new ( METHOD_3 . TYPE_4 ( > TYPE_3 < java.util.ArrayList new = VAR_5 > TYPE_3 < java.util.ArrayList ; ) VAR_4 ( METHOD_2 . VAR_3 ; ) ( TYPE_2 new = VAR_3 TYPE_2 ; ) VAR_2 ( add . VAR_1 ; ) ( > VdcQueryType . TYPE_1 < java.util.ArrayList new = VAR_1 > VdcQueryType . TYPE_1 < java.util.ArrayList ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( this , VAR_1 ) ; model . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; model . METHOD_3 ( STRING_1 ) ; model . METHOD_4 ( VAR_2 ) ; METHOD_5 ( model ) ; model . setEntity ( ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) ) ; } } ; ) ) ) ) ( getSelectedItem ( ) TYPE_2 ( ( ( setEntity . model ; ) model ( METHOD_5 ; ) VAR_2 ( METHOD_4 . model ; ) STRING_1 ( METHOD_3 . model ; ) ) ( METHOD_2 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( setTitle . model ; ) VAR_1 , this ( TYPE_1 new = model TYPE_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , java.lang.Boolean . FALSE } , VAR_3 [ 0 ] ) ) ; METHOD_5 ( resource . METHOD_6 ( new TYPE_1 ( ) ) ) ; } } ; ) ) ) ( TYPE_1 new ( METHOD_6 . resource ( METHOD_5 ; ) ) ] 0 [ VAR_3 , } FALSE . java.lang.Boolean , ] 0 [ VAR_3 { ] [ java.lang.Object new , } STRING_2 , STRING_1 { ] [ java.lang.String new , class VAR_2 , VAR_1 ( METHOD_4 ( METHOD_3 ; ) 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { TYPE_3 parameters = new TYPE_3 ( ) ; parameters . METHOD_2 ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) ; model . METHOD_3 ( METHOD_4 ( VAR_1 . List class , VAR_2 class ) . map ( getEntity ( VAR_1 . ArrayList class , VAR_3 , parameters , model . getId ( ) ) , null ) ) ; return model ; } } ; model return ; ) ) null , ) ) ( getId . model , parameters , VAR_3 , class ArrayList . VAR_1 ( getEntity ( map . ) class VAR_2 , class List . VAR_1 ( METHOD_4 ( METHOD_3 . model ; ) ) ) ( getId . model ( org.ovirt.engine.core.compat.Guid new ( METHOD_2 . parameters ; ) ( TYPE_3 new = parameters TYPE_3 { ) entity TYPE_2 , model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_2 . assertEquals ( VAR_1 , result . get ( 0 ) . METHOD_5 ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( METHOD_5 . ) 0 ( get . result , VAR_1 ( assertEquals . TYPE_2 ; ) ) ( isEmpty . result ( METHOD_4 . TYPE_2 ; ) ) VAR_1 , STRING_1 ( METHOD_3 . java.lang.String ( METHOD_2 . dao = result > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , boolean VAR_3 , java.lang.String VAR_4 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_1 , vmId ) , VAR_5 , ( VAR_3 ? VAR_6 : VAR_7 ) , VAR_8 , VAR_2 , false , VAR_4 , null , false ) ; } } ; ) false , null , VAR_4 , false , VAR_2 , VAR_8 , ) VAR_7 : VAR_6 ? VAR_3 ( , VAR_5 , ) vmId , VAR_1 ( TYPE_3 new ( METHOD_2 . TYPE_2 return { ) VAR_4 java.lang.String , VAR_3 boolean , VAR_2 boolean , VAR_1 org.ovirt.engine.core.compat.Guid , vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 static public 
private void METHOD_1 ( final int VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( TYPE_4 VAR_2 ) throws TYPE_5 { TYPE_3 result = METHOD_4 ( VAR_1 ) ; result . setId ( ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_2 . METHOD_5 ( ) [ 0 ] ) ) ) ; return result ; } } ) . when ( VAR_3 ) . get ( TYPE_6 . any ( VAR_4 . Guid class ) ) ; } } ; ) ) class Guid . VAR_4 ( any . TYPE_6 ( get . ) VAR_3 ( when . ) } } ; result return ; ) ) ) ] 0 [ ) ( METHOD_5 . VAR_2 ( ) org.ovirt.engine.core.compat.Guid ( ( ( setId . result ; ) VAR_1 ( METHOD_4 = result TYPE_3 { TYPE_5 throws ) VAR_2 TYPE_4 ( METHOD_3 TYPE_3 public { ) ( > TYPE_3 < TYPE_2 new ( METHOD_2 . TYPE_1 { ) VAR_1 int final ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( VAR_2 . isEmpty ( ) ) { VAR_1 = METHOD_2 ( ) ; } else { VAR_1 = METHOD_3 ( ) ; } if ( VAR_1 & & ( ( METHOD_4 ( ) . size ( ) ) ! = ( VAR_2 . size ( ) ) ) ) { log . error ( STRING_1 , VAR_3 . getId ( ) ) ; METHOD_5 ( VAR_4 ) ; VAR_1 = false ; } return VAR_1 & & ( METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 ( & & VAR_1 return } ; false = VAR_1 ; ) VAR_4 ( METHOD_5 ; ) ) ( getId . VAR_3 , STRING_1 ( error . log { ) ) ) ) ( size . VAR_2 ( = ! ) ) ( size . ) ( METHOD_4 ( ( & & VAR_1 ( if } ; ) ( METHOD_3 = VAR_1 { else } ; ) ( METHOD_2 = VAR_1 { ) ) ( isEmpty . VAR_2 ( if ; true = VAR_1 boolean { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { METHOD_2 ( ) ; params = new TYPE_1 ( quota ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_7 ( ) ; } } ; ) ( METHOD_7 . ) command ( when . ) ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_6 . ) command ( when . ) ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_4 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) ) params ( TYPE_2 new ( METHOD_3 . org.mockito.Mockito = command ; ) quota ( TYPE_1 new = params ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) , TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } } ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 , ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_4 . VAR_3 ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String value , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , value ) ; TYPE_3 . METHOD_3 ( VAR_4 . toString ( ) , TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_3 ) ) ) ; return VAR_4 ; } } ; VAR_4 return ; ) ) ) VAR_3 ( METHOD_5 . TYPE_5 ( METHOD_4 . TYPE_4 , ) ( toString . VAR_4 ( METHOD_3 . TYPE_3 ; ) value , VAR_2 , VAR_1 ( METHOD_2 . TYPE_2 = VAR_4 TYPE_1 { ) VAR_3 java.lang.String , value java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 TYPE_1 private 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.Integer VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_3 ( ) . addValue ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; return METHOD_5 ( ) . METHOD_6 ( STRING_2 , VAR_5 . instance , VAR_4 ) ; } } ; ) VAR_4 , instance . VAR_5 , STRING_2 ( METHOD_6 . ) ( METHOD_5 return ; ) ) ( METHOD_4 . VAR_1 , STRING_1 ( addValue . ) ( METHOD_3 = VAR_4 TYPE_2 ; ) VAR_3 ( METHOD_2 > java.lang.Integer < VAR_2 = VAR_1 java.lang.Integer { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 . getVm ( ) . METHOD_3 ( ) , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_4 . METHOD_4 ( TYPE_3 . getStoragePoolId ( ) , VAR_2 ) ; if ( storageDomain ! = null ) { VAR_1 = storageDomain . getId ( ) ; } } return VAR_1 ; } } ; VAR_1 return } } ; ) ( getId . storageDomain = VAR_1 { ) null = ! storageDomain ( if ; ) VAR_2 , ) ( getStoragePoolId . TYPE_3 ( METHOD_4 . TYPE_4 = storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ; ) VAR_3 , ) ( METHOD_3 . ) ( getVm . TYPE_3 ( METHOD_2 . TYPE_2 = VAR_2 > DiskImage . TYPE_1 < java.util.List { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 org.ovirt.engine.core.compat.Guid public 
public static java.util.List < TYPE_1 > METHOD_1 ( java.util.List < java.lang.String > model ) { java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( ( model ! = null ? model . size ( ) : 0 ) ) ; if ( model ! = null ) { for ( java.lang.String VAR_1 : model ) { try { TYPE_2 source = TYPE_2 . METHOD_2 ( VAR_1 ) ; result . add ( TYPE_3 . map ( source , null ) ) ; } catch ( TYPE_4 VAR_2 ) { } } } return result ; } } ; result return } } } { ) VAR_2 TYPE_4 ( catch } ; ) ) null , source ( map . TYPE_3 ( add . result ; ) VAR_1 ( METHOD_2 . TYPE_2 = source TYPE_2 { try { ) model : VAR_1 java.lang.String ( for { ) null = ! model ( if ; ) ) 0 : ) ( size . model ? null = ! model ( ( > < java.util.ArrayList new = result > TYPE_1 < java.util.List { ) model > java.lang.String < java.util.List ( METHOD_1 > TYPE_1 < java.util.List static public 
public void METHOD_1 ( ) { diskImage . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . getInstance ( ) . METHOD_4 ( VAR_1 . DbFacade class , VAR_2 ) ; TYPE_2 . METHOD_5 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( ) ) . thenReturn ( VAR_3 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_5 = new TYPE_4 ( ) ; } } ; ) ( TYPE_4 new = VAR_5 ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( setId . VAR_4 ; ) ( TYPE_3 new = VAR_4 ; ) VAR_3 ( thenReturn . ) ) ( METHOD_6 . VAR_2 ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_5 . TYPE_2 ; ) VAR_2 , class DbFacade . VAR_1 ( METHOD_4 . ) ( getInstance . TYPE_1 ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_2 . diskImage { ) ( METHOD_1 void public 
public void METHOD_1 ( boolean VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( vmId ) ; if ( VAR_2 ! = null ) { for ( TYPE_1 iface : VAR_2 ) { if ( VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( iface . METHOD_6 ( ) ) ; } METHOD_2 ( ) . METHOD_7 ( iface . getId ( ) ) ; METHOD_8 ( ) . METHOD_7 ( iface . getId ( ) ) ; } } } } } } ; ) ) ( getId . iface ( METHOD_7 . ) ( METHOD_8 ; ) ) ( getId . iface ( METHOD_7 . ) ( METHOD_2 } ; ) ) ( METHOD_6 . iface ( METHOD_5 . ) ( METHOD_4 { ) VAR_1 ( if { ) VAR_2 : iface TYPE_1 ( for { ) null = ! VAR_2 ( if ; ) vmId ( METHOD_3 . ) ( METHOD_2 = VAR_2 > TYPE_1 < java.util.List { ) vmId org.ovirt.engine.core.compat.Guid , VAR_1 boolean ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 . DiskImage image = TYPE_2 . METHOD_2 ( ) ; image . METHOD_3 ( VAR_1 ) ; TYPE_3 parameters = TYPE_2 . METHOD_4 ( ) ; parameters . METHOD_5 ( image ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ; METHOD_7 ( VAR_2 , parameters ) ; METHOD_8 ( ) ; METHOD_9 ( VAR_2 , VAR_3 ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; METHOD_12 ( ) ; METHOD_13 ( ) ; } } ; ) ( METHOD_13 ; ) ( METHOD_12 ; ) ( METHOD_11 ; ) ( METHOD_10 ; ) VAR_3 , VAR_2 ( METHOD_9 ; ) ( METHOD_8 ; ) parameters , VAR_2 ( METHOD_7 ; ) ( METHOD_6 . org.ovirt.engine.core.compat.Guid = VAR_2 org.ovirt.engine.core.compat.Guid ; ) image ( METHOD_5 . parameters ; ) ( METHOD_4 . TYPE_2 = parameters TYPE_3 ; ) VAR_1 ( METHOD_3 . image ; ) ( METHOD_2 . TYPE_2 = image DiskImage . TYPE_1 { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 parameters = new TYPE_2 ( VAR_2 , VAR_3 ) ; parameters . METHOD_2 ( VAR_1 ) ; TYPE_3 . VdcQueryReturnValue result = VAR_4 . METHOD_3 ( VAR_5 , parameters ) ; return TYPE_1 . from ( ( ( java.lang.Integer ) ( result . getReturnValue ( ) ) ) ) ; } } ; ) ) ) ) ( getReturnValue . result ( ) java.lang.Integer ( ( ( from . TYPE_1 return ; ) parameters , VAR_5 ( METHOD_3 . VAR_4 = result VdcQueryReturnValue . TYPE_3 ; ) VAR_1 ( METHOD_2 . parameters ; ) VAR_3 , VAR_2 ( TYPE_2 new = parameters TYPE_2 { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; java.util.List < java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; TYPE_4 . METHOD_4 ( STRING_2 , VAR_2 . METHOD_5 ( STRING_2 ) ) ; TYPE_4 . METHOD_4 ( STRING_3 , VAR_2 . METHOD_5 ( STRING_3 ) ) ; TYPE_4 . METHOD_4 ( STRING_4 , ( ! ( VAR_2 . METHOD_5 ( STRING_4 ) ) ) ) ; } } ; ) ) ) ) STRING_4 ( METHOD_5 . VAR_2 ( ! ( , STRING_4 ( METHOD_4 . TYPE_4 ; ) ) STRING_3 ( METHOD_5 . VAR_2 , STRING_3 ( METHOD_4 . TYPE_4 ; ) ) STRING_2 ( METHOD_5 . VAR_2 , STRING_2 ( METHOD_4 . TYPE_4 ; ) ) STRING_1 ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_3 = VAR_2 > java.lang.String < java.util.List ; ) ( TYPE_2 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) { throw new TYPE_3 ( VAR_3 ) ; } TYPE_1 VAR_4 = new TYPE_4 ( METHOD_3 ( VAR_1 ) , VAR_1 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( ) ; VAR_2 . put ( VAR_1 . getId ( ) , VAR_4 ) ; return VAR_4 ; } } ; VAR_4 return ; ) VAR_4 , ) ( getId . VAR_1 ( put . VAR_2 ; ) ( METHOD_5 . VAR_4 ; ) ) ( METHOD_4 . VAR_1 , ) VAR_1 ( METHOD_3 ( TYPE_4 new = VAR_4 TYPE_1 } ; ) VAR_3 ( TYPE_3 new throw { ) ) ) ( getId . VAR_1 ( METHOD_2 . VAR_2 ( if { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > VAR_2 , TYPE_1 < java.lang.String > value , boolean VAR_3 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { TYPE_3 VAR_4 = new TYPE_3 ( TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_5 , CHAR_1 ) ) ) ; VAR_5 = TYPE_4 . METHOD_5 ( STRING_2 , VAR_4 ) ; } else { super . METHOD_1 ( VAR_1 , VAR_2 , value , VAR_3 ) ; } } } } ; ) VAR_3 , value , VAR_2 , VAR_1 ( METHOD_1 . super { else } ; ) VAR_4 , STRING_2 ( METHOD_5 . TYPE_4 = VAR_5 ; ) ) ) CHAR_1 , VAR_5 ( METHOD_4 . TYPE_2 ( METHOD_3 . TYPE_3 ( TYPE_3 new = VAR_4 TYPE_3 { ) ) STRING_1 , VAR_1 ( METHOD_2 . TYPE_2 ( if { ) VAR_3 boolean , value > java.lang.String < TYPE_1 , VAR_2 > java.lang.String < TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void public 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object VAR_3 ) { TYPE_1 . METHOD_3 ( ) ; } } ; frontend . METHOD_4 ( frontend . METHOD_5 ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( METHOD_5 . frontend ( METHOD_4 . frontend ; } } ; ) ( METHOD_3 . TYPE_1 { ) VAR_3 java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) true ( METHOD_2 . VAR_1 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_3 , STRING_4 , STRING_5 , VAR_4 , null , null , TYPE_4 . METHOD_5 ( VAR_1 , VAR_2 ) ) , null ) ) ; METHOD_6 ( VAR_5 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } } ; ) ) ( validate . cmd ( METHOD_7 . TYPE_5 ; ) VAR_5 ( METHOD_6 ; ) ) null , ) ) VAR_2 , VAR_1 ( METHOD_5 . TYPE_4 , null , null , VAR_4 , STRING_5 , STRING_4 , VAR_3 ( TYPE_3 new ( TYPE_2 new ( METHOD_4 . org.mockito.Mockito = cmd ; ) STRING_3 ( METHOD_3 . VAR_2 ; ) STRING_2 ( METHOD_2 = VAR_2 TYPE_1 ; ) STRING_1 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static synchronized TYPE_1 getInstance ( ) { if ( ( TYPE_1 . instance ) == null ) { TYPE_1 . instance = new TYPE_1 ( ) ; } else { if ( ( TYPE_1 . instance ) == null ) { synchronized ( VAR_1 class ) { if ( ( TYPE_1 . instance ) == null ) { TYPE_1 . instance = new TYPE_1 ( ) ; } } } } return TYPE_1 . instance ; } } ; instance . TYPE_1 return } } } } ; ) ( TYPE_1 new = instance . TYPE_1 { ) null == ) instance . TYPE_1 ( ( if { ) class VAR_1 ( synchronized { ) null == ) instance . TYPE_1 ( ( if { else } ; ) ( TYPE_1 new = instance . TYPE_1 { ) null == ) instance . TYPE_1 ( ( if { ) ( getInstance TYPE_1 synchronized static public 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , ( ( iface . METHOD_7 ( ) ) + 1 ) ) ; } } ; ) ) 1 + ) ) ( METHOD_7 . iface ( ( , ) ( METHOD_6 . iface , ) ( METHOD_5 . iface , ) ( METHOD_4 . iface , false , iface ( METHOD_3 ; ) ( METHOD_2 = iface VdsNetworkInterface . org.ovirt.engine.core.common.businessentities { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_7 . cmd ( assertEquals . TYPE_3 ; ) ) ( getSucceeded . ) ( getReturnValue . cmd ( METHOD_6 . TYPE_3 ; ) ( METHOD_5 . cmd ; ) false , cmd ( METHOD_4 ; ) cmd ( METHOD_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_3 ( ) , aQuery ) ; } } ; ) aQuery , ) ( TYPE_3 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.ArrayList new return } ; list return ; ) ) ( TYPE_2 new , list ( METHOD_2 . TYPE_1 ; ) ) source ( ) > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.ArrayList ( ( = list > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public boolean METHOD_1 ( ) { final int VAR_1 = ( VAR_2 ) / ( VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { if ( METHOD_3 ( ) ) { VAR_5 . METHOD_4 ( STRING_1 , host . getName ( ) , host . getId ( ) ) ; return true ; } else { METHOD_5 ( ) ; } } return false ; } } ; false return } } ; ) ( METHOD_5 { else } ; true return ; ) ) ( getId . host , ) ( getName . host , STRING_1 ( METHOD_4 . VAR_5 { ) ) ( METHOD_3 ( if { ) ++ i ; VAR_1 < i ; 0 = i int ( for ; ) ) VAR_4 ( METHOD_2 > java.lang.Integer < VAR_3 ( / ) VAR_2 ( = VAR_1 int final { ) ( METHOD_1 boolean public 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , status . getValue ( ) ) ) ; return METHOD_5 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_5 return ; ) ) ) ( getValue . status , STRING_3 ( addValue . ) VAR_1 , STRING_2 ( addValue . ) ( METHOD_4 , instance . VAR_3 , STRING_1 ( METHOD_3 . ) ( METHOD_2 = VAR_2 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List { ) status TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_6 ( VAR_4 , VAR_5 , java.lang.Boolean . TRUE ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( VAR_6 ) ; } } ; ) VAR_6 ( METHOD_11 ; ) ( METHOD_10 ; ) ( METHOD_9 ; ) ( METHOD_8 ; ) ( METHOD_7 ; ) TRUE . java.lang.Boolean , VAR_5 , VAR_4 ( METHOD_6 . VAR_3 ; ) ) ( METHOD_3 . TYPE_2 ( thenReturn . ) ) ) ( METHOD_5 . TYPE_1 ( METHOD_4 . VAR_1 ( org.mockito.Mockito.when ; ) ) ( METHOD_3 . TYPE_2 ( thenReturn . ) ) ) class Guid . VAR_2 ( any . TYPE_1 ( get . VAR_1 ( org.mockito.Mockito.when ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( INT_1 , 2 , 2 , 2 , 2 ) ; TYPE_2 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( nic ) ) ) ; } } ; ) ) ) nic ( METHOD_5 . VAR_2 ( METHOD_4 . VAR_1 ( METHOD_3 . TYPE_2 ; ) ) ( size . VAR_1 , INT_1 ( assertEquals . TYPE_2 ; ) 2 , 2 , 2 , 2 , INT_1 ( METHOD_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_2 ) ) . METHOD_5 ( VAR_1 ) ; resource . METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( true ) ; VAR_3 . METHOD_9 ( ) ; resource . get ( ) ; } } ; ) ( get . resource ; ) ( METHOD_9 . VAR_3 ; ) true ( METHOD_8 ; ) ) ( METHOD_7 ( METHOD_6 . resource ; ) VAR_1 ( METHOD_5 . ) ) STRING_2 ( METHOD_4 . VAR_2 ( METHOD_3 . TYPE_1 ; ) VAR_2 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( add . VAR_1 ; ) ( > java.lang.String < java.util.ArrayList new = VAR_1 > java.lang.String < java.util.List { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { log . error ( STRING_1 , METHOD_2 ( ) ) ; METHOD_3 ( context . entity ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ) { METHOD_6 ( ( ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) == ( VAR_2 ) ? VAR_3 : VAR_4 ) ) ; } METHOD_8 ( VAR_5 ) ; METHOD_9 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_9 ; ) VAR_5 ( METHOD_8 } ; ) ) VAR_4 : VAR_3 ? ) VAR_2 ( == ) ) ( METHOD_7 . ) ( getParameters . TYPE_1 ( ( ( METHOD_6 { ) ) ) ( METHOD_5 . ) ( getParameters . TYPE_1 ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( if ; ) entity . context ( METHOD_3 ; ) ) ( METHOD_2 , STRING_1 ( error . log { ) context VAR_1 . > TYPE_2 < TYPE_1 final ( METHOD_1 void private 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_2 == null ) { return ! ( TYPE_3 . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getReturnValue ( ) . METHOD_5 ( ) ) ) ; } else { return ! ( TYPE_3 . METHOD_6 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getReturnValue ( ) . METHOD_5 ( ) , VAR_2 ) ) ; } } } } ; ) ) VAR_2 , ) ( METHOD_5 . ) ( getReturnValue . TYPE_2 , ) ( METHOD_4 . ) ( getParameters . TYPE_2 ( METHOD_6 . TYPE_3 ( ! return { else } ; ) ) ) ( METHOD_5 . ) ( getReturnValue . TYPE_2 , ) ( METHOD_4 . ) ( getParameters . TYPE_2 ( METHOD_3 . TYPE_3 ( ! return { ) null == VAR_2 ( if ; ) ( METHOD_2 . ) ( getParameters . TYPE_2 = VAR_2 org.ovirt.engine.core.compat.Guid { ) VAR_1 TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( VAR_1 ) ; if ( VAR_4 . METHOD_6 ( ) ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_7 ( null ) ; VAR_5 . METHOD_8 ( VAR_4 . getModel ( ) , null ) ; } } } } ; ) null , ) ( getModel . VAR_4 ( METHOD_8 . VAR_5 ; ) null ( METHOD_7 . org.ovirt.engine.ui.frontend.Frontend { ) ) ( METHOD_6 . VAR_4 ( if ; ) VAR_1 ( METHOD_5 . org.ovirt.engine.ui.frontend.Frontend ; ) null ( METHOD_4 . ) ( METHOD_3 . org.ovirt.engine.ui.frontend.Frontend ; ) VAR_1 , ) VAR_1 + STRING_1 ( , VAR_3 ( log . VAR_2 } ; return { ) ) VAR_1 ( METHOD_2 . org.ovirt.engine.ui.frontend.Frontend ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 cmd = VAR_1 . METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( cmd ) ; VAR_1 . METHOD_2 ( ) . METHOD_5 ( METHOD_3 ( ) ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_6 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_6 . TYPE_2 ; ) ) ( METHOD_3 ( get . ) ( METHOD_2 . VAR_1 = VAR_2 TYPE_1 ; ) ) ( METHOD_3 ( METHOD_5 . ) ( METHOD_2 . VAR_1 ; ) cmd ( METHOD_4 . TYPE_2 ; ) ) ( METHOD_3 ( get . ) ( METHOD_2 . VAR_1 = cmd TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int status ) { assertEquals ( status , VAR_1 . METHOD_2 ( ) . getStatus ( ) ) ; METHOD_3 ( ( ( VAR_1 . METHOD_2 ( ) . getEntity ( ) ) instanceof TYPE_2 ) ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) . getEntity ( ) ) ) ; assertEquals ( VAR_2 , VAR_4 . METHOD_4 ( ) ) ; assertEquals ( VAR_3 , VAR_4 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . VAR_4 , VAR_3 ( assertEquals ; ) ) ( METHOD_4 . VAR_4 , VAR_2 ( assertEquals ; ) ) ) ( getEntity . ) ( METHOD_2 . VAR_1 ( ) TYPE_2 ( ( = VAR_4 TYPE_2 ; ) ) TYPE_2 instanceof ) ) ( getEntity . ) ( METHOD_2 . VAR_1 ( ( ( METHOD_3 ; ) ) ( getStatus . ) ( METHOD_2 . VAR_1 , status ( assertEquals { ) status int , VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( org.ovirt.engine.core.common.businessentities.VM ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_1 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; null : ) ) source ( ) org.ovirt.engine.core.common.businessentities.VM ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( VAR_3 , cmd . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . cmd , VAR_3 ( assertEquals . TYPE_3 ; ) ( METHOD_1 . cmd ; ) true , ) ( METHOD_6 ( METHOD_5 . ) VAR_2 ( when . ) ( METHOD_4 . org.mockito.Mockito ; ) ( METHOD_3 ; ) ) null , ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) ! = null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( TYPE_1 ) ( getEntity ( ) ) ) . getVm ( ) ; setItems ( vm . METHOD_2 ( ) ) ; } else { setItems ( null ) ; } } } } ; ) null ( setItems { else } ; ) ) ( METHOD_2 . vm ( setItems ; ) ( getVm . ) ) ) ( getEntity ( ) TYPE_1 ( ( = vm org.ovirt.engine.core.common.businessentities.VM { ) null = ! ) ) ( getEntity ( ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . setId ( VAR_1 [ 0 ] . toString ( ) ) ; model . METHOD_2 ( VAR_2 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( ) ; try { ( ( TYPE_2 ) ( VAR_4 ) ) . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { METHOD_7 ( VAR_5 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_5 ( METHOD_7 { ) VAR_5 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_6 ; ) model ( add . ) ) VAR_4 ( ) TYPE_2 ( ( { try ; ) ( METHOD_5 . VAR_3 ; ) ) ( METHOD_4 ( METHOD_3 ; ) ] 0 [ VAR_2 ( METHOD_2 . model ; ) ) ( toString . ] 0 [ VAR_1 ( setId . model ; ) ( Network . TYPE_1 new = model Network . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String > VAR_2 = new TYPE_3 < > ( ) ; for ( java.lang.String VAR_3 : VAR_4 ) { java.util.List < java.lang.String > VAR_5 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_5 ! = null ) { VAR_2 . METHOD_3 ( VAR_5 ) ; } } return VAR_2 ; } } ; VAR_2 return } } ; ) VAR_5 ( METHOD_3 . VAR_2 { ) null = ! VAR_5 ( if ; ) VAR_3 ( METHOD_2 . VAR_1 = VAR_5 > java.lang.String < java.util.List { ) VAR_4 : VAR_3 java.lang.String ( for ; ) ( > < TYPE_3 new = VAR_2 > java.lang.String < TYPE_1 { ) VAR_1 TYPE_2 ( METHOD_1 > java.lang.String < TYPE_1 static public 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : METHOD_2 ( ) . METHOD_3 ( ) ) { java.lang.String VAR_1 = iface . METHOD_4 ( ) ; if ( ( TYPE_1 . METHOD_5 ( VAR_1 ) ) & & ( ! ( VAR_2 . METHOD_6 ( VAR_1 ) ) ) ) { VAR_3 . add ( METHOD_2 ( ) . get ( VAR_1 ) ) ; } } } } } } ; ) ) VAR_1 ( get . ) ( METHOD_2 ( add . VAR_3 { ) ) ) ) VAR_1 ( METHOD_6 . VAR_2 ( ! ( & & ) ) VAR_1 ( METHOD_5 . TYPE_1 ( ( if ; ) ( METHOD_4 . iface = VAR_1 java.lang.String { ) ) ( METHOD_3 . ) ( METHOD_2 : iface VdsNetworkInterface . org.ovirt.engine.core.common.businessentities ( for { ) ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { METHOD_3 ( VAR_1 ) ; } else if ( VAR_2 == ( VAR_4 ) ) { METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } VAR_5 . error ( STRING_1 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_5 ( ) ) ; return VAR_2 ; } } ; VAR_2 return ; ) ) ( METHOD_5 . VAR_1 , ) ( METHOD_6 . VAR_1 , STRING_1 ( error . VAR_5 } ; ) ) ( METHOD_5 . VAR_1 ( METHOD_4 { ) ) VAR_4 ( == VAR_2 ( if else } ; ) VAR_1 ( METHOD_3 { ) ) VAR_3 ( == VAR_2 ( if ; ) ( METHOD_2 . VAR_1 = VAR_2 TYPE_1 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( false ) ; METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( host . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_5 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( VAR_4 ) , TYPE_3 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . TYPE_3 , ) VAR_4 ( METHOD_6 . validator ( METHOD_5 . TYPE_2 ; ) VAR_5 ( TYPE_1 new = VAR_4 TYPE_1 ; ) VAR_3 ( thenReturn . ) ) ( METHOD_4 . host ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_3 ; ) false ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) { return super . METHOD_1 ( ) . METHOD_2 ( VAR_1 , TYPE_2 . METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( ) , TYPE_2 . METHOD_3 ( ) ) . METHOD_6 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) . METHOD_2 ( VAR_3 , TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) . METHOD_6 ( VAR_4 , TYPE_2 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . TYPE_2 , VAR_4 ( METHOD_6 . ) ) ( METHOD_8 . ) ( METHOD_7 . TYPE_2 , VAR_3 ( METHOD_2 . ) ) ( METHOD_3 . TYPE_2 , VAR_2 ( METHOD_6 . ) ) ( METHOD_3 . TYPE_2 , ) ( METHOD_5 ( METHOD_4 . ) ) ( METHOD_3 . TYPE_2 , VAR_1 ( METHOD_2 . ) ( METHOD_1 . super return { ) ( METHOD_1 TYPE_1 protected 
public static void METHOD_1 ( TYPE_1 . DiskImage image , boolean VAR_1 , TYPE_2 VAR_2 ) { try { TYPE_3 . METHOD_2 ( image , VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_3 ( image ) ; } catch ( TYPE_4 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( STRING_2 , VAR_3 ) ; throw new TYPE_5 ( VAR_5 , VAR_3 ) ; } } } } ; ) VAR_3 , VAR_5 ( TYPE_5 new throw ; ) VAR_3 , STRING_2 ( METHOD_5 . VAR_4 ; ) ) ( METHOD_4 . VAR_3 , STRING_1 ( error . VAR_4 { ) VAR_3 TYPE_4 ( catch } ; ) image ( METHOD_3 . TYPE_3 ; ) VAR_2 , VAR_1 , image ( METHOD_2 . TYPE_3 { try { ) VAR_2 TYPE_2 , VAR_1 boolean , image DiskImage . TYPE_1 ( METHOD_1 void static public 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . setId ( VAR_3 ) ; cmd . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , cmd , VAR_4 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_6 ) , TYPE_2 . any ( VAR_7 class ) ) ; org.mockito.Mockito . METHOD_6 ( cmd , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; } } ; ) ( METHOD_10 . ) ) 0 ( METHOD_7 . org.mockito.Mockito , cmd ( METHOD_6 . org.mockito.Mockito ; ) ) class VAR_7 ( any . TYPE_2 , ) VAR_6 ( METHOD_9 . TYPE_2 ( METHOD_8 . ) ) 1 ( METHOD_7 . org.mockito.Mockito , VAR_5 ( METHOD_6 . org.mockito.Mockito ; ) VAR_4 , cmd , STRING_1 ( METHOD_5 . TYPE_1 ; ) ( METHOD_4 . cmd ; ) VAR_3 ( setId . VAR_1 ; ) VAR_2 ( METHOD_3 . VAR_1 ; ) true ( METHOD_2 = VAR_1 org.ovirt.engine.core.common.businessentities.StorageDomain { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( cmd . validate ( ) ) ; TYPE_2 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) ( METHOD_8 . ) ( getReturnValue . cmd ( METHOD_7 . TYPE_2 ; ) ) ( validate . cmd ( METHOD_7 . TYPE_2 ; ) ( METHOD_6 . ) cmd ( when . ) ) ( METHOD_5 . TYPE_1 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) cmd ( when . ) true ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 < java.lang.String > METHOD_4 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getId ( ) ) ; VAR_1 . METHOD_8 ( true ) ; METHOD_9 ( ) . METHOD_10 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_10 . ) ( METHOD_9 ; ) true ( METHOD_8 . VAR_1 ; ) ) ( getId . ) ( METHOD_7 . TYPE_1 ( METHOD_6 . VAR_1 ; ) VAR_4 ( METHOD_5 . VAR_1 ; ) ) VAR_3 ( METHOD_4 > java.lang.String < VAR_2 ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( setId . VAR_1 ; ) ( Network . org.ovirt.engine.core.common.businessentities new = VAR_1 Network . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = command . METHOD_2 ( ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . when ( command ) . METHOD_4 ( TYPE_3 . any ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( command ) ; } } ; ) command ( METHOD_5 . TYPE_4 ; ) ) class VAR_2 ( any . TYPE_3 ( METHOD_4 . ) command ( when . ) ) ) ( getId . VAR_1 , VAR_1 ( TYPE_2 new ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) ( METHOD_2 . command = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , final TYPE_3 model , TYPE_4 VAR_2 , TYPE_5 event , TYPE_6 < TYPE_3 > VAR_3 ) { VAR_4 . METHOD_1 ( context , VAR_1 , VAR_5 . METHOD_2 ( ( ( TYPE_7 ) ( model . getSelectedItem ( ) ) ) ) , event , new TYPE_6 < java.lang.String > ( ) { public void METHOD_3 ( java.lang.String value ) { if ( value ! = null ) { model . setSelectedItem ( VAR_6 . get ( value ) ) ; } } } ) ; } } ; ) } } } ; ) ) value ( get . VAR_6 ( setSelectedItem . model { ) null = ! value ( if { ) value java.lang.String ( METHOD_3 void public { ) ( > java.lang.String < TYPE_6 new , event , ) ) ) ) ( getSelectedItem . model ( ) TYPE_7 ( ( ( METHOD_2 . VAR_5 , VAR_1 , context ( METHOD_1 . VAR_4 { ) VAR_3 > TYPE_3 < TYPE_6 , event TYPE_5 , VAR_2 TYPE_4 , model TYPE_3 final , VAR_1 TYPE_2 , context TYPE_1 ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) . append ( STRING_1 , METHOD_2 ( ) ) . append ( STRING_2 , METHOD_3 ( ) ) . append ( STRING_3 , METHOD_4 ( ) ) . append ( STRING_4 , METHOD_5 ( ) ) . append ( STRING_5 , METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 , STRING_5 ( append . ) ) ( METHOD_5 , STRING_4 ( append . ) ) ( METHOD_4 , STRING_3 ( append . ) ) ( METHOD_3 , STRING_2 ( append . ) ) ( METHOD_2 , STRING_1 ( append . ) VAR_1 ( METHOD_1 . super return { ) VAR_1 TYPE_1 ( METHOD_1 TYPE_1 protected 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; boolean VAR_1 = ( vm ! = null ) & & ( ( ( ( vm . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( ( vm . METHOD_2 ( ) ) == ( VAR_3 ) ) | ( ( vm . METHOD_2 ( ) ) == ( VAR_4 ) ) ) ) || ( ( vm . METHOD_2 ( ) ) == ( VAR_5 ) ) ) ; return ( VAR_6 ) & & VAR_1 ; } } ; VAR_1 & & ) VAR_6 ( return ; ) ) ) VAR_5 ( == ) ) ( METHOD_2 . vm ( ( || ) ) ) ) VAR_4 ( == ) ) ( METHOD_2 . vm ( ( | ) ) VAR_3 ( == ) ) ( METHOD_2 . vm ( ( ( || ) ) VAR_2 ( == ) ) ( METHOD_2 . vm ( ( ( ( & & ) null = ! vm ( = VAR_1 boolean ; ) ( getEntity = vm org.ovirt.engine.core.common.businessentities.VM { ) ( METHOD_1 boolean public 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network VAR_1 = new org.ovirt.engine.core.common.businessentities . network ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 < java.lang.String > METHOD_4 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getId ( ) ) ; VAR_1 . METHOD_8 ( true ) ; METHOD_9 ( ) . METHOD_10 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_10 . ) ( METHOD_9 ; ) true ( METHOD_8 . VAR_1 ; ) ) ( getId . ) ( METHOD_7 . TYPE_1 ( METHOD_6 . VAR_1 ; ) VAR_4 ( METHOD_5 . VAR_1 ; ) ) VAR_3 ( METHOD_4 > java.lang.String < VAR_2 ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( setId . VAR_1 ; ) ( network . org.ovirt.engine.core.common.businessentities new = VAR_1 network . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . Integer class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_5 class ) ) ; VAR_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_8 , VAR_1 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_9 , VAR_4 ) ; } } ; ) VAR_4 , VAR_9 ( METHOD_8 . ) VAR_6 ( METHOD_7 . org.mockito.Mockito ; ) VAR_1 , VAR_8 ( METHOD_8 . ) VAR_6 ( METHOD_7 . org.mockito.Mockito ; ) VAR_7 , VAR_6 ( METHOD_6 . VAR_2 ; ) ) class VAR_5 ( METHOD_5 . TYPE_4 ( METHOD_4 . ) VAR_2 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ) class Integer . VAR_3 ( METHOD_3 . TYPE_3 ( METHOD_2 . ) VAR_2 ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { TYPE_2 , TYPE_1 throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . validate ( ) ) ; } } ; ) ) ( validate . command ( METHOD_7 . TYPE_5 ; ) ( METHOD_6 . ) command ( when . ) null ( org.mockito.Mockito.doReturn ; ) ( METHOD_5 . ) command ( when . ) vds ( org.mockito.Mockito.doReturn ; ) ) ) null , null , ) ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_4 . TYPE_4 ( TYPE_3 new , ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = command { ) ( METHOD_1 void public 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) , VAR_2 , VAR_3 , VAR_4 . Collections < java.lang.String , java.lang.Object > METHOD_4 ( VAR_5 , STRING_1 ) , true , true , null ) ; } } ; ) null , true , true , ) STRING_1 , VAR_5 ( METHOD_4 > java.lang.Object , java.lang.String < Collections . VAR_4 , VAR_3 , VAR_2 , ) VAR_1 , ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( TYPE_2 new ( METHOD_2 . TYPE_1 { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void static private 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_7 ( ) , STRING_2 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 . METHOD_8 ( ) , VAR_1 , 1 ) ; TYPE_4 . METHOD_9 ( STRING_3 , VAR_3 . METHOD_10 ( ) ) ; TYPE_4 . METHOD_11 ( STRING_4 , VAR_3 . METHOD_12 ( ) ) ; } } ; ) ) ( METHOD_12 . VAR_3 , STRING_4 ( METHOD_11 . TYPE_4 ; ) ) ( METHOD_10 . VAR_3 , STRING_3 ( METHOD_9 . TYPE_4 ; ) 1 , VAR_1 , ) ( METHOD_8 . VAR_2 ( TYPE_3 new = VAR_3 TYPE_3 ; ) STRING_2 , ) ( METHOD_7 . VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 ; ) ) ( METHOD_6 . ) ( METHOD_5 . ) STRING_1 ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 . this ( TYPE_2 new = VAR_1 TYPE_2 { TYPE_1 throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; VAR_2 . METHOD_2 ( VAR_3 , ( returnValue == null ) ) ; } } ; ) ) null == returnValue ( , VAR_3 ( METHOD_2 . VAR_2 ; ) ) ] 1 [ VAR_1 ( ) TYPE_2 ( ( = VAR_3 TYPE_2 ; ) ) ] 0 [ VAR_1 ( ) TYPE_1 ( ( = VAR_2 TYPE_1 ; ) ) target ( ) ] [ java.lang.Object ( ( = VAR_1 ] [ java.lang.Object { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( STRING_1 ) ; VAR_3 = dao . get ( TYPE_1 . toString ( ) ) ; VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_5 . VAR_4 ; ) STRING_2 ( METHOD_4 . VAR_4 ; ) ( TYPE_2 new = VAR_4 ; ) ) ( toString . TYPE_1 ( get . dao = VAR_3 ; ) STRING_1 ( get . dao = VAR_2 ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 = dao ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 model , TYPE_3 entity ) { TYPE_4 parameters = new TYPE_4 ( ) ; parameters . METHOD_1 ( TYPE_5 . map ( TYPE_6 . METHOD_2 ( model . METHOD_3 ( ) ) ) ) ; parameters . METHOD_4 ( TYPE_5 . map ( TYPE_7 . METHOD_2 ( model . getModel ( ) ) ) ) ; parameters . setId ( vmId ) ; parameters . METHOD_5 ( true ) ; return parameters ; } } ; parameters return ; ) true ( METHOD_5 . parameters ; ) vmId ( setId . parameters ; ) ) ) ) ( getModel . model ( METHOD_2 . TYPE_7 ( map . TYPE_5 ( METHOD_4 . parameters ; ) ) ) ) ( METHOD_3 . model ( METHOD_2 . TYPE_6 ( map . TYPE_5 ( METHOD_1 . parameters ; ) ( TYPE_4 new = parameters TYPE_4 { ) entity TYPE_3 , model TYPE_2 ( getParameters VdcActionParametersBase . TYPE_1 public 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_1 obj = METHOD_2 ( ) ; obj . put ( STRING_1 , VAR_1 . getId ( ) . toString ( ) ) ; obj . put ( STRING_2 , VAR_1 . METHOD_3 ( ) ) ; obj . put ( STRING_3 , VAR_1 . METHOD_4 ( ) ) ; obj . put ( STRING_4 , VAR_1 . METHOD_5 ( ) ) ; obj . put ( STRING_5 , VAR_2 ) ; obj . put ( STRING_6 , VAR_3 ) ; return obj ; } } ; obj return ; ) VAR_3 , STRING_6 ( put . obj ; ) VAR_2 , STRING_5 ( put . obj ; ) ) ( METHOD_5 . VAR_1 , STRING_4 ( put . obj ; ) ) ( METHOD_4 . VAR_1 , STRING_3 ( put . obj ; ) ) ( METHOD_3 . VAR_1 , STRING_2 ( put . obj ; ) ) ( toString . ) ( getId . VAR_1 , STRING_1 ( put . obj ; ) ( METHOD_2 = obj TYPE_1 { ) VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 < TYPE_1 , java.lang.Integer > ( VAR_1 , 1 ) ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { if ( VAR_3 . get ( i ) . getId ( ) . equals ( VAR_1 . getId ( ) ) ) { VAR_3 . METHOD_2 ( VAR_1 ) ; break ; } } METHOD_3 ( null ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } } ; ) VAR_4 , this ( METHOD_5 . ) ( METHOD_4 ; ) null ( METHOD_3 } } ; break ; ) VAR_1 ( METHOD_2 . VAR_3 { ) ) ) ( getId . VAR_1 ( equals . ) ( getId . ) i ( get . VAR_3 ( if { ) ++ i ; ) ) ( size . VAR_3 ( < i ; 0 = i int ( for ; ) ) 1 , VAR_1 ( > java.lang.Integer , TYPE_1 < TYPE_2 new ( add . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_2 ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_3 ) ) { METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 { ) ) TYPE_3 , ) ( getName . command ( METHOD_2 . TYPE_1 ( if else } ; ) ( METHOD_3 { ) ) TYPE_2 , ) ( getName . command ( METHOD_2 . TYPE_1 ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcBllMessages VAR_2 ) { java.util.List < TYPE_2 . VdcBllMessages > VAR_3 = VAR_1 . validate ( ) ; TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( STRING_1 , VAR_2 , VAR_3 ) , VAR_3 . METHOD_4 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_4 . VAR_3 , ) VAR_3 , VAR_2 , STRING_1 ( METHOD_3 . TYPE_4 ( METHOD_2 . TYPE_3 ; ) ( validate . VAR_1 = VAR_3 > VdcBllMessages . TYPE_2 < java.util.List { ) VAR_2 VdcBllMessages . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( ) { METHOD_2 ( ) ; getWindow ( ) . METHOD_3 ( ) ; if ( ( VAR_1 ) ! = null ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_2 , new TYPE_1 ( VAR_1 , VAR_3 ) , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 result ) { TYPE_4 VAR_4 = ( ( TYPE_4 ) ( result . METHOD_6 ( ) ) ) ; METHOD_7 ( VAR_5 , VAR_6 ) ; VAR_5 = null ; } } , this ) ; } } } } ; ) this , } } ; null = VAR_5 ; ) VAR_6 , VAR_5 ( METHOD_7 ; ) ) ) ( METHOD_6 . result ( ) TYPE_4 ( ( = VAR_4 TYPE_4 { ) result TYPE_3 ( METHOD_5 void public { ) ( TYPE_2 new , ) VAR_3 , VAR_1 ( TYPE_1 new , VAR_2 ( METHOD_4 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance { ) null = ! ) VAR_1 ( ( if ; ) ( METHOD_3 . ) ( getWindow ; ) ( METHOD_2 { ) ( METHOD_1 void private 
public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final java.util.List < java.lang.String > VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( java.util.List < java.lang.String > VAR_4 : TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , TYPE_4 . METHOD_5 ( VAR_4 , VAR_5 ) , true ) ) ; } return VAR_3 ; } } ; VAR_3 return } ; ) ) true , ) VAR_5 , VAR_4 ( METHOD_5 . TYPE_4 , VAR_1 ( METHOD_4 . TYPE_3 ( METHOD_3 . VAR_3 { ) ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_3 : VAR_4 > java.lang.String < java.util.List ( for ; ) ( > < java.util.ArrayList new = VAR_3 > TYPE_1 < java.util.List { ) VAR_2 > java.lang.String < java.util.List final , VAR_1 TYPE_2 final ( METHOD_1 > TYPE_1 < java.util.List static public 
private TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_2 [ VAR_1 ] ) ; cluster . METHOD_2 ( STRING_1 ) ; cluster . METHOD_3 ( true ) ; cluster . METHOD_4 ( false ) ; cluster . METHOD_5 ( VAR_3 ) ; return cluster ; } } ; cluster return ; ) VAR_3 ( METHOD_5 . cluster ; ) false ( METHOD_4 . cluster ; ) true ( METHOD_3 . cluster ; ) STRING_1 ( METHOD_2 . cluster ; ) ] VAR_1 [ VAR_2 ( setId . cluster ; ) ( TYPE_1 new = cluster TYPE_1 { ) VAR_1 int ( METHOD_1 TYPE_1 private 
public TYPE_1 addValue ( java.lang.String VAR_1 , java.lang.Object value ) { java.lang.Object VAR_2 = value ; if ( VAR_2 ! = null ) { if ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) ; } else if ( ( VAR_2 instanceof TYPE_3 ) || ( VAR_2 instanceof org.ovirt.engine.core.compat . Version ) ) { VAR_2 = value . toString ( ) ; } } return super . addValue ( ( ( VAR_3 . METHOD_4 ( ) ) + VAR_1 ) , VAR_2 ) ; } } ; ) VAR_2 , ) VAR_1 + ) ) ( METHOD_4 . VAR_3 ( ( ( addValue . super return } } ; ) ( toString . value = VAR_2 { ) ) Version . org.ovirt.engine.core.compat instanceof VAR_2 ( || ) TYPE_3 instanceof VAR_2 ( ( if else } ; ) VAR_2 ( METHOD_3 . TYPE_2 = VAR_2 { ) ) ( METHOD_2 . ) ( METHOD_1 . VAR_2 ( if { ) null = ! VAR_2 ( if ; value = VAR_2 java.lang.Object { ) value java.lang.Object , VAR_1 java.lang.String ( addValue TYPE_1 public 
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters , null ) ) ; org.mockito.Mockito.when ( VAR_1 . getParameters ( ) ) . thenReturn ( parameters ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( METHOD_4 ( VAR_3 ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_4 ) ) . thenReturn ( null ) ; } } ; ) null ( thenReturn . ) ) VAR_4 ( get . VAR_2 ( org.mockito.Mockito.when ; ) ) VAR_3 ( METHOD_4 ( thenReturn . ) ) VAR_3 ( get . VAR_2 ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) VAR_1 ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) parameters ( thenReturn . ) ) ( getParameters . VAR_1 ( org.mockito.Mockito.when ; ) ) null , parameters ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 ! = null ) { if ( ( storage . getSelectedItem ( ) ) == null ) { VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( storage . getSelectedItem ( ) ) ) ) ; } } return VAR_2 ; } } ; VAR_2 return } } ; ) ) ) ) ( getSelectedItem . storage ( ) TYPE_2 ( ( ( METHOD_2 . VAR_2 { ) null == ) ) ( getSelectedItem . storage ( ( if { ) null = ! VAR_2 ( if ; ) VAR_1 ( get . VAR_3 = VAR_2 TYPE_1 { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 public 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 < TYPE_2 > ( VAR_1 ) { protected void METHOD_4 ( ) { } } ) ; command . METHOD_5 ( ) ; return command ; } } ; command return ; ) ( METHOD_5 . command ; ) } } { ) ( METHOD_4 void protected { ) VAR_1 ( > TYPE_2 < TYPE_1 new ( METHOD_3 . org.mockito.Mockito = command > TYPE_2 < TYPE_1 ; ) VAR_6 ( METHOD_2 . VAR_1 ; ) VAR_5 , VAR_4 , VAR_3 , VAR_2 ( TYPE_2 new = VAR_1 TYPE_2 { ) ( METHOD_1 > TYPE_2 < TYPE_1 protected 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; boolean VAR_4 = VAR_3 ! = null ; if ( ! VAR_4 ) { VAR_2 . add ( TYPE_1 . toString ( ) ) ; } return VAR_4 ; } } ; VAR_4 return } ; ) ) ( toString . TYPE_1 ( add . VAR_2 { ) VAR_4 ! ( if ; null = ! VAR_3 = VAR_4 boolean ; ) VAR_1 ( get . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_3 org.ovirt.engine.core.common.businessentities.VDSGroup { ) VAR_2 > java.lang.String < java.util.ArrayList , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean static protected 
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = STRING_1 ; VAR_7 = STRING_1 ; VAR_8 = false ; VAR_9 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; VAR_10 = new java.util.HashMap < java.lang.String , TYPE_2 > ( ) ; VAR_11 = new TYPE_3 < TYPE_4 > ( STRING_2 , VAR_12 class ) ; VAR_13 = 0 ; } } ; 0 = VAR_13 ; ) class VAR_12 , STRING_2 ( > TYPE_4 < TYPE_3 new = VAR_11 ; ) ( > TYPE_2 , java.lang.String < java.util.HashMap new = VAR_10 ; ) ( > TYPE_1 , java.lang.String < java.util.HashMap new = VAR_9 ; false = VAR_8 ; STRING_1 = VAR_7 ; STRING_1 = VAR_6 ; false = VAR_5 ; false = VAR_4 ; false = VAR_3 ; false = VAR_2 ; false = VAR_1 { ) ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( java.util.ArrayList < TYPE_1 . Disk > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return null ; } final java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { VAR_2 . add ( disk . METHOD_2 ( ) ) ; } return java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) ; } } ; ) VAR_2 , STRING_1 ( METHOD_3 . java.lang.String return } ; ) ) ( METHOD_2 . disk ( add . VAR_2 { ) VAR_1 : disk Disk . TYPE_1 ( for ; ) ( > < java.util.ArrayList new = VAR_2 > java.lang.String < java.util.List final } ; null return { ) ) ( isEmpty . VAR_1 ( if { ) VAR_1 > Disk . TYPE_1 < java.util.ArrayList ( METHOD_1 java.lang.String static public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . add ( VAR_3 , TYPE_3 . getName ( ) ) ; VAR_2 . add ( VAR_4 , VAR_1 . METHOD_2 ( ) . getName ( ) ) ; VAR_2 . add ( VAR_5 , TYPE_4 . METHOD_3 ( ) ) ; VAR_2 . add ( VAR_6 , java.lang.String.valueOf ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ) ; VAR_7 . add ( VAR_2 ) ; } } ; ) VAR_2 ( add . VAR_7 ; ) ) ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( java.lang.String.valueOf , VAR_6 ( add . VAR_2 ; ) ) ( METHOD_3 . TYPE_4 , VAR_5 ( add . VAR_2 ; ) ) ( getName . ) ( METHOD_2 . VAR_1 , VAR_4 ( add . VAR_2 ; ) ) ( getName . TYPE_3 , VAR_3 ( add . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_3 ( VAR_4 ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_5 ) ) ; for ( TYPE_1 VAR_6 : VAR_1 ) { TYPE_3 . METHOD_7 ( VAR_4 , VAR_6 . METHOD_8 ( ) ) ; } } } } ; ) ) ( METHOD_8 . VAR_6 , VAR_4 ( METHOD_7 . TYPE_3 { ) VAR_1 : VAR_6 TYPE_1 ( for ; ) ) VAR_5 ( METHOD_6 . VAR_1 ( METHOD_5 . TYPE_3 ; ) VAR_1 ( METHOD_4 . TYPE_3 ; ) ) VAR_4 ( METHOD_3 . TYPE_2 , VAR_3 , VAR_2 ( METHOD_2 . dao = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 

public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 , org.ovirt.engine.core.common.businessentities.VM VAR_2 ) { java.lang.String VAR_3 = ( ( VAR_1 . METHOD_2 ( ) ) == null ) ? STRING_1 : VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_4 = ( ( VAR_2 . METHOD_2 ( ) ) == null ) ? STRING_1 : VAR_2 . METHOD_2 ( ) ; return VAR_3 . METHOD_3 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_3 . VAR_3 return ; ) ( METHOD_2 . VAR_2 : STRING_1 ? ) null == ) ) ( METHOD_2 . VAR_2 ( ( = VAR_4 java.lang.String ; ) ( METHOD_2 . VAR_1 : STRING_1 ? ) null == ) ) ( METHOD_2 . VAR_1 ( ( = VAR_3 java.lang.String { ) VAR_2 org.ovirt.engine.core.common.businessentities.VM , VAR_1 org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 int public 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( METHOD_2 ( ) . METHOD_6 ( ) ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_8 ( ) . get ( METHOD_2 ( ) . METHOD_9 ( ) ) ; if ( VAR_2 ! = null ) { VAR_2 . METHOD_10 ( VAR_1 . METHOD_11 ( ) ) ; TYPE_2 . METHOD_8 ( ) . METHOD_12 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_12 . ) ( METHOD_8 . TYPE_2 ; ) ) ( METHOD_11 . VAR_1 ( METHOD_10 . VAR_2 { ) null = ! VAR_2 ( if ; ) ) ( METHOD_9 . ) ( METHOD_2 ( get . ) ( METHOD_8 . TYPE_2 = VAR_2 TYPE_1 ; ) ) ( METHOD_6 . ) ( METHOD_2 ( METHOD_7 . ) ( METHOD_2 ; ) ) ( METHOD_6 . VAR_1 ( METHOD_5 . ) ( METHOD_2 ; ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . ) ( METHOD_2 { ) VAR_1 org.ovirt.engine.core.common.businessentities.DiskImage ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 ) , aQuery ) ; } } ; ) aQuery , ) VAR_2 , ) STRING_2 + ) name + STRING_1 ( ( ( TYPE_1 new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) name java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_2 ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 . Guid class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } } ; ) VAR_5 , ) ( METHOD_9 . cmd ( assertEquals . TYPE_4 ; ) ) class Guid . VAR_4 ( any . TYPE_3 ( METHOD_8 . ) ) ( METHOD_7 . org.mockito.Mockito , VAR_3 ( METHOD_6 . org.mockito.Mockito ; ) ( METHOD_5 . cmd ; ) VAR_2 , false ( METHOD_4 ; ) ( METHOD_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; null : ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( METHOD_3 ( ) . getId ( ) , METHOD_4 ( ) ) , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = VAR_2 . getReturnValue ( ) ; METHOD_6 ( null , ( ( VAR_3 ! = null ) & & ( VAR_3 . getSucceeded ( ) ) ) ) ; } } , null ) ; } } ; ) null , } } ; ) ) ) ) ( getSucceeded . VAR_3 ( & & ) null = ! VAR_3 ( ( , null ( METHOD_6 ; ) ( getReturnValue . VAR_2 = VAR_3 TYPE_4 { ) VAR_2 TYPE_3 ( METHOD_5 void public { ) ( TYPE_2 new , ) ) ( METHOD_4 , ) ( getId . ) ( METHOD_3 ( TYPE_1 new , VAR_1 ( METHOD_2 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } } ; ) ( METHOD_8 ; ) ( METHOD_7 ; ) ( METHOD_6 . ) cmd ( when . ) ) ( METHOD_5 . TYPE_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) cmd ( when . ) cluster ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) cmd ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_2 ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 { TYPE_1 throws ) ( METHOD_1 void public 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = METHOD_6 ( ) . METHOD_7 ( VAR_1 . getId ( ) ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { METHOD_8 ( ) . METHOD_3 ( VAR_1 . getId ( ) ) ; } } } } ; ) ) ( getId . VAR_1 ( METHOD_3 . ) ( METHOD_8 { ) ) ) ( isEmpty . VAR_2 ( || ) null == VAR_2 ( ( if ; ) ) ( getId . VAR_1 ( METHOD_7 . ) ( METHOD_6 = VAR_2 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List ; ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . ) ( METHOD_5 ; ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_1 { ) VAR_1 org.ovirt.engine.core.common.businessentities.DiskImage ( METHOD_1 void protected 
public boolean METHOD_1 ( final org.ovirt.engine.core.compat.Guid id ) { return METHOD_2 ( new TYPE_1 < java.lang.Boolean > ( ) { public java.lang.Boolean METHOD_3 ( ) { try { TYPE_2 VAR_1 = VAR_2 . METHOD_4 ( id . toString ( ) ) ; return VAR_1 ! = null ; } catch ( TYPE_3 VAR_3 ) { if ( ( VAR_3 . getStatus ( ) ) == ( VAR_4 ) ) { VAR_5 . METHOD_5 ( STRING_1 ) ; return false ; } else { VAR_5 . error ( STRING_2 ) ; throw VAR_3 ; } } } } ) ; } } ; ) } } } } ; VAR_3 throw ; ) STRING_2 ( error . VAR_5 { else } ; false return ; ) STRING_1 ( METHOD_5 . VAR_5 { ) ) VAR_4 ( == ) ) ( getStatus . VAR_3 ( ( if { ) VAR_3 TYPE_3 ( catch } ; null = ! VAR_1 return ; ) ) ( toString . id ( METHOD_4 . VAR_2 = VAR_1 TYPE_2 { try { ) ( METHOD_3 java.lang.Boolean public { ) ( > java.lang.Boolean < TYPE_1 new ( METHOD_2 return { ) id org.ovirt.engine.core.compat.Guid final ( METHOD_1 boolean public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , java.util.List < TYPE_1 . DiskImage > VAR_1 ) { for ( TYPE_1 . DiskImage disk : VAR_1 ) { disk . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_3 ( storageDomain . getId ( ) ) ) ) ; } METHOD_4 ( storageDomain . METHOD_5 ( ) , VAR_1 . get ( 0 ) ) ; } } ; ) ) 0 ( get . VAR_1 , ) ( METHOD_5 . storageDomain ( METHOD_4 } ; ) ) ) ) ( getId . storageDomain ( METHOD_3 . TYPE_2 ( > org.ovirt.engine.core.compat.Guid < java.util.ArrayList new ( METHOD_2 . disk { ) VAR_1 : disk DiskImage . TYPE_1 ( for { ) VAR_1 > DiskImage . TYPE_1 < java.util.List , storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { get ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( id ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; if ( ( action ! = null ) & & ( action . METHOD_3 ( ) ) ) { VAR_2 = METHOD_4 ( action . METHOD_5 ( ) ) ; } TYPE_4 parameters = new TYPE_4 ( VAR_1 , VAR_2 ) ; return METHOD_6 ( VAR_4 , parameters ) ; } } ; ) parameters , VAR_4 ( METHOD_6 return ; ) VAR_2 , VAR_1 ( TYPE_4 new = parameters TYPE_4 } ; ) ) ( METHOD_5 . action ( METHOD_4 = VAR_2 { ) ) ) ( METHOD_3 . action ( & & ) null = ! action ( ( if ; VAR_3 = VAR_2 org.ovirt.engine.core.compat.Guid ; ) id ( METHOD_2 . VAR_1 ; ) ( TYPE_3 new = VAR_1 TYPE_3 ; ) ( get { ) action TYPE_2 ( METHOD_1 TYPE_1 public 
protected void METHOD_1 ( ) { if ( ! ( getParameters ( ) . METHOD_2 ( ) ) ) { METHOD_3 ( null ) ; } METHOD_4 ( ) ; if ( ( getVm ( ) ) ! = null ) { TYPE_1 . METHOD_5 ( getVm ( ) . getId ( ) ) ; METHOD_6 ( ) ; } else { METHOD_7 ( false ) ; VAR_1 . METHOD_8 ( STRING_1 ) ; } METHOD_9 ( true ) ; } } ; ) true ( METHOD_9 } ; ) STRING_1 ( METHOD_8 . VAR_1 ; ) false ( METHOD_7 { else } ; ) ( METHOD_6 ; ) ) ( getId . ) ( getVm ( METHOD_5 . TYPE_1 { ) null = ! ) ) ( getVm ( ( if ; ) ( METHOD_4 } ; ) null ( METHOD_3 { ) ) ) ( METHOD_2 . ) ( getParameters ( ! ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; dao . METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_1 > VAR_6 = dao . METHOD_3 ( VAR_2 ) ; TYPE_2 . METHOD_4 ( VAR_6 ) ; TYPE_2 . METHOD_5 ( ( ( VAR_6 . size ( ) ) == 1 ) ) ; TYPE_1 VAR_7 = VAR_6 . get ( 0 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_7 ) ; } } ; ) VAR_7 , VAR_1 ( assertEquals . TYPE_2 ; ) 0 ( get . VAR_6 = VAR_7 TYPE_1 ; ) ) 1 == ) ) ( size . VAR_6 ( ( ( METHOD_5 . TYPE_2 ; ) VAR_6 ( METHOD_4 . TYPE_2 ; ) VAR_2 ( METHOD_3 . dao = VAR_6 > TYPE_1 < java.util.List ; ) VAR_1 ( METHOD_2 . dao ; ) VAR_5 , VAR_4 , VAR_3 , VAR_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , true , true , false , false , false , false , true , true , METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 , true , true , false , false , false , false , true , true , VAR_1 , ) ( getStoragePoolId . ) ( getVm . TYPE_2 , ) ( METHOD_3 . ) ( getReturnValue . TYPE_2 , ) ( getVm . TYPE_2 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 boolean protected 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 model ) { switch ( ( ( TYPE_2 ) ( model ) ) . METHOD_2 ( ) ) { case VAR_2 : VAR_1 . METHOD_3 ( VAR_3 ) ; break ; case ERROR : VAR_1 . METHOD_3 ( VAR_4 ) ; break ; case NORMAL : VAR_1 . METHOD_3 ( VAR_5 ) ; break ; case VAR_6 : VAR_1 . METHOD_3 ( VAR_3 ) ; break ; default : VAR_1 . METHOD_3 ( VAR_7 ) ; break ; } } } } ; break ; ) VAR_7 ( METHOD_3 . VAR_1 : default ; break ; ) VAR_3 ( METHOD_3 . VAR_1 : VAR_6 case ; break ; ) VAR_5 ( METHOD_3 . VAR_1 : NORMAL case ; break ; ) VAR_4 ( METHOD_3 . VAR_1 : ERROR case ; break ; ) VAR_3 ( METHOD_3 . VAR_1 : VAR_2 case { ) ) ( METHOD_2 . ) ) model ( ) TYPE_2 ( ( ( switch { ) model TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void private 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 ) throws TYPE_1 , TYPE_2 { try ( final TYPE_3 client = METHOD_2 ( ) ) { METHOD_3 ( client , VAR_1 ) ; METHOD_4 ( client , VAR_2 , VAR_3 ) ; java.lang.String VAR_5 = METHOD_5 ( client ) ; return METHOD_6 ( METHOD_7 ( VAR_5 ) ) ; } } } } ; ) ) VAR_5 ( METHOD_7 ( METHOD_6 return ; ) client ( METHOD_5 = VAR_5 java.lang.String ; ) VAR_3 , VAR_2 , client ( METHOD_4 ; ) VAR_1 , client ( METHOD_3 { ) ) ( METHOD_2 = client TYPE_3 final ( try { TYPE_2 , TYPE_1 throws ) VAR_4 java.lang.String , VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 > java.lang.String , java.lang.String < java.util.Map public 
private java.lang.Boolean METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) ) ) { if ( ( TYPE_2 . getVm ( ) . METHOD_1 ( ) ) ! = null ) { return TYPE_2 . getVm ( ) . METHOD_1 ( ) ; } if ( ( TYPE_2 . METHOD_4 ( ) . METHOD_1 ( ) ) ! = null ) { return TYPE_2 . METHOD_4 ( ) . METHOD_1 ( ) ; } return TYPE_3 . getValue ( VAR_1 ) ; } return null ; } } ; null return } ; ) VAR_1 ( getValue . TYPE_3 return } ; ) ( METHOD_1 . ) ( METHOD_4 . TYPE_2 return { ) null = ! ) ) ( METHOD_1 . ) ( METHOD_4 . TYPE_2 ( ( if } ; ) ( METHOD_1 . ) ( getVm . TYPE_2 return { ) null = ! ) ) ( METHOD_1 . ) ( getVm . TYPE_2 ( ( if { ) ) ) ( METHOD_3 . ) ( getVm . TYPE_2 ( METHOD_2 . TYPE_1 ( if { ) ( METHOD_1 java.lang.Boolean private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( false , true ) ; TYPE_3 < java.lang.String > VAR_2 = new TYPE_3 < java.lang.String > ( ) { public java.lang.String getValue ( java.lang.String VAR_3 ) { return VAR_3 ; } } ; VAR_1 . addColumn ( VAR_2 , VAR_4 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ) ; VAR_1 . METHOD_4 ( STRING_1 , true ) ; VAR_1 . METHOD_5 ( new TYPE_4 ( ) ) ; } } ; ) ) ( TYPE_4 new ( METHOD_5 . VAR_1 ; ) true , STRING_1 ( METHOD_4 . VAR_1 ; ) ) ( > org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.util.ArrayList new ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . VAR_4 , VAR_2 ( addColumn . VAR_1 ; } } ; VAR_3 return { ) VAR_3 java.lang.String ( getValue java.lang.String public { ) ( > java.lang.String < TYPE_3 new = VAR_2 > java.lang.String < TYPE_3 ; ) true , false ( > TYPE_2 < TYPE_1 new = VAR_1 { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; validator = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( VAR_1 ) ) ; domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_5 ( VAR_2 ) ; domain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( STRING_2 ) ) ; domain . METHOD_7 ( VAR_3 ) ; domain . METHOD_8 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_8 . domain ; ) VAR_3 ( METHOD_7 . domain ; ) ) STRING_2 ( METHOD_6 . org.ovirt.engine.core.compat.Guid ( setId . domain ; ) VAR_2 ( METHOD_5 . domain ; ) ( org.ovirt.engine.core.common.businessentities.StorageDomain new = domain ; ) ) VAR_1 ( TYPE_2 new ( METHOD_4 . org.mockito.Mockito = validator ; ) VAR_2 ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . getStoragePoolId ( ) ) ; if ( ( VAR_1 . size ( ) ) > = ( VAR_2 < java.lang.Integer > getValue ( VAR_3 ) ) ) { METHOD_5 ( ) ; return ; } METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 . TYPE_2 ; ) VAR_1 ( METHOD_6 } ; return ; ) ( METHOD_5 { ) ) ) VAR_3 ( getValue > java.lang.Integer < VAR_2 ( = > ) ) ( size . VAR_1 ( ( if ; ) ) ( getStoragePoolId . ) ( METHOD_4 . TYPE_2 ( METHOD_3 . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void protected 
private TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_1 . VdcActionType VAR_1 ) { TYPE_1 . VdcActionParametersBase VAR_2 = METHOD_2 ( VAR_1 , getParameters ( ) ) ; if ( ( ( VAR_2 . METHOD_3 ( ) ) == null ) & & ( ( TYPE_2 . METHOD_4 ( ) ) ! = null ) ) { VAR_2 . METHOD_5 ( TYPE_2 . METHOD_4 ( ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_5 . VAR_2 { ) ) null = ! ) ) ( METHOD_4 . TYPE_2 ( ( & & ) null == ) ) ( METHOD_3 . VAR_2 ( ( ( if ; ) ) ( getParameters , VAR_1 ( METHOD_2 = VAR_2 VdcActionParametersBase . TYPE_1 { ) VAR_1 VdcActionType . TYPE_1 ( METHOD_1 VdcActionParametersBase . TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; try { VAR_1 . METHOD_4 ( ) ; ( ( TYPE_1 ) ( resource ) ) . METHOD_5 ( new TYPE_2 ( ) ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_2 ) { METHOD_7 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_2 ( METHOD_7 { ) VAR_2 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_6 ; ) ) ( TYPE_2 new ( METHOD_5 . ) ) resource ( ) TYPE_1 ( ( ; ) ( METHOD_4 . VAR_1 { try ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = VAR_2 . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) , vm , null , org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ) ; TYPE_1 . METHOD_4 ( VAR_1 , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ) ; TYPE_1 . METHOD_4 ( METHOD_7 ( ) , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ) ; } } ; ) ) ) ( METHOD_6 . TYPE_3 ( METHOD_5 . TYPE_2 , ) ( METHOD_7 ( METHOD_4 . TYPE_1 ; ) ) ) ( METHOD_6 . TYPE_3 ( METHOD_5 . TYPE_2 , VAR_1 ( METHOD_4 . TYPE_1 ; ) ) class VAR_3 ( METHOD_3 . org.mockito.Mockito , null , vm , ) ( > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList new ( METHOD_2 . VAR_2 = VAR_1 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List final { ) ( METHOD_1 void public 
protected java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { java.util.ArrayList < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_4 = METHOD_2 ( VAR_2 ) ; if ( VAR_4 ! = null ) { for ( TYPE_1 storageDomain : VAR_1 ) { if ( ! ( ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_4 . METHOD_3 ( ) ) ) . METHOD_4 ( ) . METHOD_5 ( storageDomain . getId ( ) ) ) ) { VAR_3 . add ( storageDomain ) ; } } } return VAR_3 ; } } ; VAR_3 return } } } ; ) storageDomain ( add . VAR_3 { ) ) ) ) ( getId . storageDomain ( METHOD_5 . ) ( METHOD_4 . ) ) ) ( METHOD_3 . VAR_4 ( ) org.ovirt.engine.core.common.businessentities.DiskImage ( ( ( ! ( if { ) VAR_1 : storageDomain TYPE_1 ( for { ) null = ! VAR_4 ( if ; ) VAR_2 ( METHOD_2 = VAR_4 TYPE_2 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_3 > TYPE_1 < java.util.ArrayList { ) VAR_2 TYPE_2 , VAR_1 > TYPE_1 < java.util.ArrayList ( METHOD_1 > TYPE_1 < java.util.ArrayList protected 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; METHOD_7 ( 1 ) ; METHOD_8 ( 1 ) ; VAR_2 . METHOD_9 ( ) ; TYPE_1 nic = resource . get ( ) ; METHOD_10 ( nic . METHOD_11 ( ) ) ; TYPE_2 . METHOD_12 ( nic , 1 ) ; METHOD_13 ( nic ) ; } finally { VAR_1 . METHOD_14 ( ) ; } } } } ; ) ( METHOD_14 . VAR_1 { finally } ; ) nic ( METHOD_13 ; ) 1 , nic ( METHOD_12 . TYPE_2 ; ) ) ( METHOD_11 . nic ( METHOD_10 ; ) ( get . resource = nic TYPE_1 ; ) ( METHOD_9 . VAR_2 ; ) 1 ( METHOD_8 ; ) 1 ( METHOD_7 ; ) 1 ( METHOD_6 ; ) 1 ( METHOD_5 ; ) ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 ; ) STRING_1 ( add . VAR_1 { try { java.lang.Exception throws ) ( METHOD_1 void public 
protected boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) == ( VAR_3 ) ) { return super . METHOD_1 ( VAR_1 , VAR_2 ) ; } else { return METHOD_3 ( VAR_4 ) ; } } } } ; ) VAR_4 ( METHOD_3 return { else } ; ) VAR_2 , VAR_1 ( METHOD_1 . super return { ) ) VAR_3 ( == ) ) ( METHOD_2 . ) ( getVm . TYPE_1 ( ( if { ) VAR_2 > java.lang.String < java.util.ArrayList , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean protected 
private void METHOD_1 ( boolean VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . METHOD_2 ( VAR_3 ) ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; final boolean VAR_5 = VAR_6 . METHOD_4 ( VAR_7 , VAR_8 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_5 ) ; } } ; ) VAR_5 , VAR_1 ( assertEquals . TYPE_2 ; ) VAR_8 , VAR_7 ( METHOD_4 . VAR_6 = VAR_5 boolean final ; ) VAR_1 ( thenReturn . ) ) ( METHOD_3 . VAR_4 ( org.mockito.Mockito.when ; ) VAR_4 ( thenReturn . ) ) ) VAR_3 ( METHOD_2 . TYPE_1 ( get . VAR_2 ( org.mockito.Mockito.when { ) VAR_1 boolean ( METHOD_1 void private 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) ! = null ) & & ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == type ) ) { return true ; } return false ; } } ; false return } ; true return { ) ) type == ) ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 ( ( & & ) null = ! ) ) ( METHOD_2 . VAR_1 ( ( ( if { ) type TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 boolean static public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . VM model = new TYPE_1 . VM ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } } } ; ) STRING_5 , STRING_4 , STRING_3 , STRING_2 , VAR_4 ( METHOD_7 { ) VAR_4 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_6 ; ) model ( add . VAR_3 { try ; ) ( METHOD_5 . VAR_2 ; ) ) ( METHOD_4 ( METHOD_3 ; ) ] 0 [ VAR_1 ( METHOD_2 . model ; ) ( VM . TYPE_1 new = model VM . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 . List , new TYPE_2 ( VAR_3 . METHOD_4 ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { VAR_4 = ( ( java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_3 > ) ( VAR_1 . getReturnValue ( ) ) ) ; METHOD_5 ( ) ; } else { METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 { else } ; ) ( METHOD_5 ; ) ) ) ( getReturnValue . VAR_1 ( ) > TYPE_3 , org.ovirt.engine.core.compat.Guid < java.util.Map ( ( = VAR_4 { ) ) ( getSucceeded . VAR_1 ( if ; ) ) ) ( METHOD_4 . VAR_3 ( TYPE_2 new , List . VAR_2 ( METHOD_3 . ) ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_2 ) { if ( ! ( VAR_1 . getId ( ) . equals ( VAR_3 . getId ( ) ) ) ) { return true ; } } return false ; } } ; false return } } ; true return { ) ) ) ) ( getId . VAR_3 ( equals . ) ( getId . VAR_1 ( ! ( if { ) VAR_2 : VAR_3 TYPE_2 ( for ; ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . ) ( METHOD_2 = VAR_2 > TYPE_2 < java.util.List { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
public boolean METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_4 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) } ) ; return ( METHOD_2 ( ) . METHOD_5 ( ) ) & & ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 ( & & ) ) ( METHOD_5 . ) ( METHOD_2 ( return ; ) } ) ( TYPE_3 new , ) ( TYPE_2 new { ] [ TYPE_1 new ( METHOD_3 . ) ( METHOD_4 ; ) } ) ( TYPE_2 new { ] [ TYPE_1 new ( METHOD_3 . ) ( METHOD_2 { ) ( METHOD_1 boolean public 
public static org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( int VAR_1 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; entity . setId ( VAR_2 [ VAR_1 ] ) ; entity . METHOD_2 ( VAR_3 [ VAR_1 ] ) ; entity . METHOD_3 ( VAR_4 ) ; entity . METHOD_4 ( VAR_5 ) ; entity = TYPE_1 . METHOD_5 ( entity , VAR_2 [ VAR_1 ] ) ; entity . METHOD_6 ( ) . METHOD_7 ( VAR_6 ) ; entity . METHOD_8 ( VAR_7 ) ; return entity ; } } ; entity return ; ) VAR_7 ( METHOD_8 . entity ; ) VAR_6 ( METHOD_7 . ) ( METHOD_6 . entity ; ) ] VAR_1 [ VAR_2 , entity ( METHOD_5 . TYPE_1 = entity ; ) VAR_5 ( METHOD_4 . entity ; ) VAR_4 ( METHOD_3 . entity ; ) ] VAR_1 [ VAR_3 ( METHOD_2 . entity ; ) ] VAR_1 [ VAR_2 ( setId . entity ; ) ( VdsNetworkInterface . org.ovirt.engine.core.common.businessentities new = entity VdsNetworkInterface . org.ovirt.engine.core.common.businessentities { ) VAR_1 int ( METHOD_1 VdsNetworkInterface . org.ovirt.engine.core.common.businessentities static public 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( vm . getId ( ) , VAR_3 , TYPE_2 . getName ( ) ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { java.util.Map VAR_5 = new java.util.HashMap ( ) ; VAR_5 . put ( VAR_6 , VAR_4 . METHOD_3 ( ) . getValue ( ) ) ; VAR_5 . put ( VAR_7 , VAR_4 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_5 , VAR_4 , null ) ; } } } } ; ) null , VAR_4 , VAR_5 ( METHOD_5 ; ) ) ( METHOD_4 . VAR_4 , VAR_7 ( put . VAR_5 ; ) ) ( getValue . ) ( METHOD_3 . VAR_4 , VAR_6 ( put . VAR_5 ; ) ( java.util.HashMap new = VAR_5 java.util.Map { ) VAR_1 : VAR_4 TYPE_1 ( for ; ) ) ( getName . TYPE_2 , VAR_3 , ) ( getId . vm ( METHOD_2 . VAR_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { boolean VAR_3 = false ; try { java.util.List < TYPE_1 > VAR_4 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_3 = METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_4 , VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_4 ) ; } finally { VAR_2 . METHOD_6 ( ) ; VAR_5 . METHOD_7 ( STRING_1 , VAR_1 . METHOD_4 ( ) , ( VAR_3 ? STRING_2 : STRING_3 ) , VAR_1 . METHOD_3 ( ) ) ; } } } } ; ) ) ( METHOD_3 . VAR_1 , ) STRING_3 : STRING_2 ? VAR_3 ( , ) ( METHOD_4 . VAR_1 , STRING_1 ( METHOD_7 . VAR_5 ; ) ( METHOD_6 . VAR_2 { finally } ; ) VAR_4 ( METHOD_5 ; ) ) ( METHOD_4 . VAR_1 , VAR_4 , ) ( METHOD_3 . VAR_1 ( METHOD_2 = VAR_3 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_4 > TYPE_1 < java.util.List { try ; false = VAR_3 boolean { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 ( METHOD_1 void private 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( ( ( METHOD_2 ( ) ) == null ? null : METHOD_2 ( ) . getValue ( ) ) , VAR_2 , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ) ( METHOD_4 . ) ( METHOD_3 . TYPE_2 , VAR_2 , ) ) ( getValue . ) ( METHOD_2 : null ? null == ) ) ( METHOD_2 ( ( ( TYPE_1 new ( add . VAR_1 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List public 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( command ) . METHOD_7 ( ) ; return command ; } } ; command return ; ) ( METHOD_7 . ) command ( when . ) VAR_6 ( org.mockito.Mockito.doReturn ; ) ( METHOD_6 . ) command ( when . ) VAR_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_5 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ) VAR_1 ( TYPE_1 new ( METHOD_3 . org.mockito.Mockito = command ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( TYPE_2 new = VAR_1 TYPE_2 { ) ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) ) { log . error ( STRING_2 , this , VAR_1 . METHOD_2 ( ) ) ; log . METHOD_4 ( STRING_3 , VAR_1 ) ; } } } } ; ) VAR_1 , STRING_3 ( METHOD_4 . log ; ) ) ( METHOD_2 . VAR_1 , this , STRING_2 ( error . log { ) ) ) STRING_1 ( METHOD_3 . ) ( METHOD_2 . VAR_1 ( ! ( if { ) VAR_1 TYPE_1 ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; java.util.List < java.lang.String > VAR_2 = getReturnValue ( ) . METHOD_2 ( ) ; java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_3 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > ( ) ; VAR_1 = METHOD_3 ( VAR_3 ) ; if ( VAR_1 & & ( getParameters ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } return VAR_1 & & ( METHOD_6 ( VAR_2 , VAR_3 ) ) ; } } ; ) ) VAR_3 , VAR_2 ( METHOD_6 ( & & VAR_1 return } ; ) ( METHOD_5 { ) ) ) ( METHOD_4 . ) ( getParameters ( & & VAR_1 ( if ; ) VAR_3 ( METHOD_3 = VAR_1 ; ) ( > TYPE_1 , org.ovirt.engine.core.compat.Guid < java.util.HashMap new = VAR_3 > TYPE_1 , org.ovirt.engine.core.compat.Guid < java.util.Map ; ) ( METHOD_2 . ) ( getReturnValue = VAR_2 > java.lang.String < java.util.List ; true = VAR_1 boolean { ) ( METHOD_1 boolean protected 
private java.lang.String METHOD_1 ( java.lang.Object obj ) { if ( obj instanceof org.ovirt.engine.core.common.businessentities.VM ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( obj ) ) . getName ( ) ; } if ( obj instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( obj ) ) . getName ( ) ; } throw new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new throw } ; ) ( getName . ) ) obj ( ) TYPE_1 ( ( return { ) TYPE_1 instanceof obj ( if } ; ) ( getName . ) ) obj ( ) org.ovirt.engine.core.common.businessentities.VM ( ( return { ) org.ovirt.engine.core.common.businessentities.VM instanceof obj ( if { ) obj java.lang.Object ( METHOD_1 java.lang.String private 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_2 > VAR_1 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; setItems ( VAR_1 ) ; } } ) , getEntity ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( getEntity , ) } } ; ) VAR_1 ( setItems ; ) ) returnValue ( ) > TYPE_2 < java.util.List ( ( = VAR_1 > TYPE_2 < java.util.List { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_1 } ; return { ) null == ) ) ( getEntity ( ( if { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; METHOD_3 ( null ) ; METHOD_4 ( null ) ; org.mockito.Mockito.when ( VAR_1 . get ( command . getParameters ( ) . METHOD_5 ( ) ) ) . thenReturn ( null ) ; } } ; ) null ( thenReturn . ) ) ) ( METHOD_5 . ) ( getParameters . command ( get . VAR_1 ( org.mockito.Mockito.when ; ) null ( METHOD_4 ; ) null ( METHOD_3 ; ) ( METHOD_2 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; try { VAR_2 . add ( model ) ; TYPE_2 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 , STRING_2 , STRING_3 , METHOD_9 ( ) ) ; } } } } ; ) ) ( METHOD_9 , STRING_3 , STRING_2 , VAR_3 ( METHOD_8 { ) VAR_3 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_7 . TYPE_2 ; ) model ( add . VAR_2 { try ; ) ( METHOD_6 . VAR_1 ; ) ( METHOD_5 ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_3 ; ) ( METHOD_2 = model TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( METHOD_4 ( ) . getSelectedItem ( ) . getId ( ) , VAR_2 . getId ( ) ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_5 ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . < java.util.List < org.ovirt.engine.core.common.businessentities.VM > > getReturnValue ( ) ) ; } } ) ) ; } } ; ) ) } } ; ) ) ( getReturnValue > > org.ovirt.engine.core.common.businessentities.VM < java.util.List < . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( ( METHOD_5 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new , ) ) ( getId . VAR_2 , ) ( getId . ) ( getSelectedItem . ) ( METHOD_4 ( TYPE_1 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) null ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { assert ( this . VAR_2 ) ! = null ; VAR_1 . METHOD_2 ( this . VAR_2 ) ; if ( this . VAR_2 . METHOD_3 ( ) ) { return ; } this . VAR_2 . METHOD_4 ( ) ; this . VAR_3 . METHOD_5 ( this , VAR_1 , this . VAR_2 . METHOD_6 ( ) ) ; this . VAR_2 = null ; this . VAR_4 . METHOD_7 ( ) ; } } ; ) ( METHOD_7 . VAR_4 . this ; null = VAR_2 . this ; ) ) ( METHOD_6 . VAR_2 . this , VAR_1 , this ( METHOD_5 . VAR_3 . this ; ) ( METHOD_4 . VAR_2 . this } ; return { ) ) ( METHOD_3 . VAR_2 . this ( if ; ) VAR_2 . this ( METHOD_2 . VAR_1 ; null = ! ) VAR_2 . this ( assert { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { resource . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , getEntity ( 0 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 VAR_5 = resource . list ( ) ; METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . size ( ) ) ; } } ; ) ) ( size . ) ( METHOD_7 . VAR_5 , INT_1 ( assertEquals ; ) ) ( METHOD_7 . VAR_5 ( METHOD_6 ; ) ( list . resource = VAR_5 TYPE_1 ; ) ( METHOD_5 . VAR_4 ; ) ) 0 ( getEntity , } ] 0 [ VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 . resource { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 , new TYPE_3 ( ) ) ; TYPE_4 VAR_4 = ( ( TYPE_4 ) ( model ) ) ; VAR_4 . setItems ( VAR_3 ) ; } } ; ) VAR_3 ( setItems . VAR_4 ; ) ) model ( ) TYPE_4 ( ( = VAR_4 TYPE_4 ; ) ) ( TYPE_3 new , VAR_3 ( METHOD_3 . TYPE_2 ; ) VAR_2 ( METHOD_2 . VAR_3 ; ) ( > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList new = VAR_3 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList ; ) ) ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_1 ( ( ( ) > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List ( ( = VAR_2 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List { ) VAR_1 java.lang.Object , model java.lang.Object ( METHOD_1 void public 
private void METHOD_1 ( int VAR_1 , TYPE_1 VAR_2 ) { java.util.ArrayList < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( VAR_2 . name ( ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( 1 , null ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( 2 , null ) ) . thenReturn ( new java.util.ArrayList < > ( ) ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_5 class , VAR_4 ) ; } } ; ) VAR_4 , class VAR_5 ( METHOD_3 . ) ( getInstance . TYPE_2 ; ) ) ( > < java.util.ArrayList new ( thenReturn . ) ) null , 2 ( METHOD_2 . VAR_4 ( org.mockito.Mockito.when ; ) VAR_3 ( thenReturn . ) ) null , 1 ( METHOD_2 . VAR_4 ( org.mockito.Mockito.when ; ) ) ( name . VAR_2 ( add . VAR_3 ; ) ( > < java.util.ArrayList new = VAR_3 > java.lang.String < java.util.ArrayList { ) VAR_2 TYPE_1 , VAR_1 int ( METHOD_1 void private 
public TYPE_1 map ( TYPE_2 entity ) { TYPE_1 VAR_1 = new TYPE_1 ( ) . addValue ( STRING_1 , entity . getId ( ) ) . addValue ( STRING_2 , entity . METHOD_1 ( ) ) . addValue ( STRING_3 , entity . METHOD_2 ( ) ) . addValue ( STRING_4 , entity . METHOD_3 ( ) ) . addValue ( STRING_5 , TYPE_3 . METHOD_4 ( entity . getStatus ( ) ) ) . addValue ( STRING_6 , entity . METHOD_5 ( ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ( METHOD_5 . entity , STRING_6 ( addValue . ) ) ) ( getStatus . entity ( METHOD_4 . TYPE_3 , STRING_5 ( addValue . ) ) ( METHOD_3 . entity , STRING_4 ( addValue . ) ) ( METHOD_2 . entity , STRING_3 ( addValue . ) ) ( METHOD_1 . entity , STRING_2 ( addValue . ) ) ( getId . entity , STRING_1 ( addValue . ) ( TYPE_1 new = VAR_1 TYPE_1 { ) entity TYPE_2 ( map TYPE_1 public 
private void METHOD_1 ( TYPE_1 . VdcActionParametersBase params ) { java.util.List < java.lang.String > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( ( VAR_1 ! = null ) & & ( ( VAR_1 . size ( ) ) > 0 ) ) { params . METHOD_1 ( VAR_1 . get ( 0 ) ) ; } } } } ; ) ) 0 ( get . VAR_1 ( METHOD_1 . params { ) ) 0 > ) ) ( size . VAR_1 ( ( & & ) null = ! VAR_1 ( ( if ; ) VAR_3 ( METHOD_2 . VAR_2 = VAR_1 > java.lang.String < java.util.List { ) params VdcActionParametersBase . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 , boolean VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; VAR_5 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_6 , VAR_1 . toString ( ) ) ) ) ; METHOD_3 ( ) . setIsChangable ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_6 ; ) ( METHOD_5 ; ) ) ( METHOD_4 ( setIsChangable . ) ( METHOD_3 ; ) ) ) ) ( toString . VAR_1 , VAR_6 ( METHOD_2 . TYPE_1 ( ) java.lang.Boolean ( ( = VAR_5 ; VAR_3 = VAR_3 . this ; VAR_2 = VAR_2 . this ; VAR_1 = VAR_1 . this { ) VAR_4 org.ovirt.engine.core.compat.Guid , VAR_3 org.ovirt.engine.core.compat.Guid , VAR_2 boolean , VAR_1 Version . org.ovirt.engine.core.compat ( METHOD_1 void public 
private static java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . network > METHOD_1 ( ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . network > map = new java.util.HashMap < java.lang.String , org.ovirt.engine.core.common.businessentities . network > ( ) ; org.ovirt.engine.core.common.businessentities . network VAR_1 = new org.ovirt.engine.core.common.businessentities . network ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; map . put ( STRING_1 , VAR_1 ) ; return map ; } } ; map return ; ) VAR_1 , STRING_1 ( put . map ; ) INT_1 ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 ; ) ( network . org.ovirt.engine.core.common.businessentities new = VAR_1 network . org.ovirt.engine.core.common.businessentities ; ) ( > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.HashMap new = map > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.Map { ) ( METHOD_1 > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.Map static private 
private void METHOD_1 ( ) { if ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { java.util.List < TYPE_2 < org.ovirt.engine.core.common.businessentities.StoragePool > > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) ) ; if ( ( VAR_1 ! = null ) & & ( ( VAR_1 . size ( ) ) > 0 ) ) { getTable ( ) . METHOD_5 ( new TYPE_4 < org.ovirt.engine.core.common.businessentities.StoragePool > ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ) ; } } } } } } ; ) ) VAR_1 , ) ( METHOD_6 . VAR_2 ( > org.ovirt.engine.core.common.businessentities.StoragePool < TYPE_4 new ( METHOD_5 . ) ( getTable { ) ) 0 > ) ) ( size . VAR_1 ( ( & & ) null = ! VAR_1 ( ( if ; ) ) ( METHOD_4 , STRING_1 ( METHOD_3 . ) ( getInstance . TYPE_3 = VAR_1 > > org.ovirt.engine.core.common.businessentities.StoragePool < TYPE_2 < java.util.List { ) ) ( METHOD_2 . ) ( getInstance . TYPE_1 ( if { ) ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( METHOD_4 ( ) . getEntity ( ) ) ) ; VAR_1 . METHOD_5 ( TYPE_2 . METHOD_3 ( METHOD_6 ( ) . getEntity ( ) ) ) ; VAR_1 . METHOD_7 ( TYPE_2 . METHOD_3 ( METHOD_8 ( ) . getEntity ( ) ) ) ; } } ; ) ) ) ( getEntity . ) ( METHOD_8 ( METHOD_3 . TYPE_2 ( METHOD_7 . VAR_1 ; ) ) ) ( getEntity . ) ( METHOD_6 ( METHOD_3 . TYPE_2 ( METHOD_5 . VAR_1 ; ) ) ) ( getEntity . ) ( METHOD_4 ( METHOD_3 . TYPE_2 ( METHOD_2 . VAR_1 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { final TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( VAR_1 ) ; return new java.util.ArrayList < TYPE_1 > ( ) { private static final long VAR_2 = INT_1 ; { add ( entity ) ; } } ; } } ; } } ; ) entity ( add { ; INT_1 = VAR_2 long final static private { ) ( > TYPE_1 < java.util.ArrayList new return ; ) VAR_1 ( setId . entity ; ) ( TYPE_1 new = entity TYPE_1 final { ) ( METHOD_1 > TYPE_1 < java.util.List static public 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.network.Network network = ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( getSelectedItem ( ) ) ) ; if ( ( getWindow ( ) ) ! = null ) { return ; } final TYPE_1 VAR_1 = new TYPE_2 ( network , this ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . setItems ( TYPE_3 . METHOD_4 ( getEntity ( ) ) ) ; VAR_1 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } } ; ) ) ( getEntity ( setSelectedItem . ) ( METHOD_3 . VAR_1 ; ) ) ) ( getEntity ( METHOD_4 . TYPE_3 ( setItems . ) ( METHOD_3 . VAR_1 ; ) VAR_1 ( METHOD_2 ; ) this , network ( TYPE_2 new = VAR_1 TYPE_1 final } ; return { ) null = ! ) ) ( getWindow ( ( if ; ) ) ) ( getSelectedItem ( ) org.ovirt.engine.core.common.businessentities.network.Network ( ( = network org.ovirt.engine.core.common.businessentities.network.Network final { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( null ) ) ; VAR_2 . add ( VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_2 ( VAR_5 ) ; METHOD_4 ( VAR_4 ) ; try { METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_4 VAR_6 ) { METHOD_7 ( VAR_6 , VAR_7 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } } } ; ) ( METHOD_8 . VAR_2 { finally } ; ) VAR_4 , VAR_7 , VAR_6 ( METHOD_7 { ) VAR_6 TYPE_4 ( catch } ; ) STRING_1 ( METHOD_6 . TYPE_3 ; ) ( METHOD_5 { try ; ) VAR_4 ( METHOD_4 ; ) VAR_5 ( TYPE_2 new = VAR_4 TYPE_1 ; ) VAR_3 ( add . VAR_2 ; ) ) null ( METHOD_3 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( METHOD_4 ( ) . getSelectedItem ( ) . getId ( ) , VAR_2 . getId ( ) ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_5 ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . < java.util.List < org.ovirt.engine.core.common.businessentities.VM > > getReturnValue ( ) ) ; } } ) ) ; } } ; ) ) } } ; ) ) ( getReturnValue > > org.ovirt.engine.core.common.businessentities.VM < java.util.List < . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( ( METHOD_5 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new , ) ) ( getId . VAR_2 , ) ( getId . ) ( getSelectedItem . ) ( METHOD_4 ( TYPE_1 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 model = resource . get ( ) ; assertEquals ( VAR_2 [ 0 ] , model . getId ( ) ) ; METHOD_7 ( model ) ; } } ; ) model ( METHOD_7 ; ) ) ( getId . model , ] 0 [ VAR_2 ( assertEquals ; ) ( get . resource = model TYPE_1 ; ) ( METHOD_6 . VAR_1 ; ) ) ( METHOD_5 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( false ) ; VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getStoragePoolId ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; METHOD_7 ( VAR_5 , VAR_3 , METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 , VAR_3 , VAR_5 ( METHOD_7 ; ) VAR_4 ( METHOD_6 . VAR_3 ; ) VAR_2 ( METHOD_5 . VAR_3 ; ) VAR_1 ( METHOD_4 . VAR_3 ; ) ) ( getStoragePoolId . ) ( METHOD_3 . TYPE_2 ( METHOD_2 . VAR_3 ; ) false ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 java.lang.String , VAR_1 org.ovirt.engine.core.compat.Guid final ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( VAR_1 ) ; model . METHOD_3 ( VAR_2 ) ; model . setId ( TYPE_2 . toString ( ) ) ; TYPE_3 entity = TYPE_4 . map ( model , null ) ; TYPE_5 . METHOD_4 ( entity ) ; TYPE_5 . assertEquals ( entity . METHOD_5 ( ) , VAR_3 ) ; TYPE_5 . assertEquals ( entity . getModel ( ) , VAR_4 ) ; } } ; ) VAR_4 , ) ( getModel . entity ( assertEquals . TYPE_5 ; ) VAR_3 , ) ( METHOD_5 . entity ( assertEquals . TYPE_5 ; ) entity ( METHOD_4 . TYPE_5 ; ) null , model ( map . TYPE_4 = entity TYPE_3 ; ) ) ( toString . TYPE_2 ( setId . model ; ) VAR_2 ( METHOD_3 . model ; ) VAR_1 ( METHOD_2 . model ; ) ( TYPE_1 new = model TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_2 , false ) ; } } ; ) false , VAR_2 , ) ( METHOD_4 . TYPE_1 ( METHOD_3 . TYPE_1 ; ) VAR_1 ( METHOD_2 . TYPE_1 = VAR_2 > java.lang.Object , java.lang.String < java.util.Map ; ) ( > < java.util.HashMap new = VAR_1 > java.lang.Object , java.lang.String < java.util.Map { ) ( METHOD_1 void public 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 , iface ) , aQuery ) ; } } ; ) aQuery , ) iface , VAR_1 ( TYPE_1 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery , iface org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void static private 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; VAR_2 . add ( VAR_1 ) ; TYPE_1 . when ( VAR_3 . METHOD_2 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_2 ( METHOD_2 . VAR_3 ( when . TYPE_1 ; ) VAR_1 ( add . VAR_2 ; ) ( > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.ArrayList new = VAR_2 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ( org.ovirt.engine.core.common.businessentities.VDSGroup new = VAR_1 org.ovirt.engine.core.common.businessentities.VDSGroup { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( null ) ; METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; try { VAR_2 . add ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_9 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_3 ( METHOD_9 { ) VAR_3 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_8 ; ) model ( add . VAR_2 { try ; ) ( METHOD_7 . VAR_1 ; ) ) ( METHOD_6 ( METHOD_5 ; ) null ( METHOD_4 . ) ( METHOD_3 . model ; ) ( METHOD_2 = model Disk . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { TYPE_1 . toString ( ) } , null ) ; VAR_3 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_8 ( VAR_4 ) ; } } } } ; ) VAR_4 ( METHOD_8 { ) VAR_4 TYPE_2 ( catch } ; ) STRING_2 ( METHOD_7 ; ) ( get . resource { try ; ) ( METHOD_6 . VAR_3 ; ) null , } ) ( toString . TYPE_1 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_5 , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; model . METHOD_1 ( model , TYPE_2 . METHOD_2 ( VAR_2 ) , VAR_1 , vm . METHOD_3 ( ) . getValue ( ) ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ) ( getValue . ) ( METHOD_3 . vm , VAR_1 , ) VAR_2 ( METHOD_2 . TYPE_2 , model ( METHOD_1 . model ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; TYPE_3 VAR_2 = METHOD_3 ( ) ; VAR_2 . METHOD_4 ( TYPE_4 . METHOD_5 ( METHOD_6 ( 0 , VAR_3 ) ) ) ; METHOD_7 ( true , VAR_2 ) ; TYPE_5 . METHOD_8 ( cmd . validate ( ) ) ; TYPE_5 . METHOD_9 ( cmd . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_6 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_6 ( METHOD_11 . ) ( METHOD_10 . ) ( getReturnValue . cmd ( METHOD_9 . TYPE_5 ; ) ) ( validate . cmd ( METHOD_8 . TYPE_5 ; ) VAR_2 , true ( METHOD_7 ; ) ) ) VAR_3 , 0 ( METHOD_6 ( METHOD_5 . TYPE_4 ( METHOD_4 . VAR_2 ; ) ( METHOD_3 = VAR_2 TYPE_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . METHOD_3 ( ) . getId ( ) ) ) ; return ( ( ( validate ( validator . METHOD_4 ( ) ) ) & & ( validate ( validator . METHOD_5 ( ) ) ) ) & & ( validate ( validator . METHOD_6 ( ) ) ) ) & & ( validate ( validator . METHOD_7 ( ) ) ) ; } } ; ) ) ) ( METHOD_7 . validator ( validate ( & & ) ) ) ) ( METHOD_6 . validator ( validate ( & & ) ) ) ) ( METHOD_5 . validator ( validate ( & & ) ) ) ( METHOD_4 . validator ( validate ( ( ( return ; ) ) ) ( getId . ) ( METHOD_3 . TYPE_2 ( get . ) ( METHOD_2 . TYPE_2 ( TYPE_1 new = validator TYPE_1 { ) ( METHOD_1 boolean protected 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_1 template ) { if ( VAR_1 == null ) { if ( template == null ) { throw new TYPE_2 ( STRING_1 ) ; } else { return TYPE_3 . METHOD_1 ( template , null ) ; } } else { return TYPE_3 . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . TYPE_3 return { else } } ; ) null , template ( METHOD_1 . TYPE_3 return { else } ; ) STRING_1 ( TYPE_2 new throw { ) null == template ( if { ) null == VAR_1 ( if { ) template TYPE_1 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; cmd . getVm ( ) . METHOD_4 ( VAR_1 ) ; METHOD_5 ( 2 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_6 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_7 ( TYPE_1 . METHOD_8 ( ) , TYPE_1 . any ( ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_5 ) ) ; TYPE_3 . METHOD_9 ( cmd , VAR_6 ) ; } } ; ) VAR_6 , cmd ( METHOD_9 . TYPE_3 ; ) ) VAR_5 ( ValidationResult . TYPE_2 new ( thenReturn . ) ) ) ( any . TYPE_1 , ) ( METHOD_8 . TYPE_1 ( METHOD_7 . VAR_4 ( org.mockito.Mockito.when ; ) ) ( any . TYPE_1 , ) ( any . TYPE_1 ( METHOD_6 . ) VAR_3 ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) 2 ( METHOD_5 ; ) VAR_1 ( METHOD_4 . ) ( getVm . cmd ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( returnValue ) . when ( METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ; } } ; ) ) class VAR_3 ( any . TYPE_2 , ) VAR_2 ( METHOD_6 . TYPE_2 ( METHOD_5 . ) ) ( METHOD_4 ( when . ) returnValue ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_3 . returnValue ; ) true ( METHOD_2 . returnValue ; ) ( TYPE_1 new = returnValue TYPE_1 { ) ( METHOD_1 void private 
private java.util.List < java.lang.Object > METHOD_1 ( ) { java.util.List < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ( ( VAR_2 ) * 2 ) ) ; for ( int i = 0 ; i < ( ( VAR_2 ) * 2 ) ; i ++ ) { VAR_1 . add ( METHOD_2 ( i ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) i ( METHOD_2 ( add . VAR_1 { ) ++ i ; ) 2 * ) VAR_2 ( ( < i ; 0 = i int ( for ; ) ) 2 * ) VAR_2 ( ( ( > java.lang.Object < java.util.ArrayList new = VAR_1 > java.lang.Object < java.util.List { ) ( METHOD_1 > java.lang.Object < java.util.List private 
public TYPE_1 METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , new TYPE_2 ( ) ) ; } catch ( java.lang.Exception e ) { VAR_4 . METHOD_5 ( STRING_1 , VAR_2 . getId ( ) , VAR_2 . METHOD_6 ( ) , e ) ; } return null ; } } ; null return } ; ) e , ) ( METHOD_6 . VAR_2 , ) ( getId . VAR_2 , STRING_1 ( METHOD_5 . VAR_4 { ) e java.lang.Exception ( catch } ; ) ) ( TYPE_2 new , ) ( METHOD_4 . VAR_2 ( METHOD_3 . VAR_3 ; ) VAR_2 ( METHOD_2 . VAR_1 { try { ) ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? source : new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; VAR_3 . METHOD_2 ( true ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , VAR_3 , aQuery ) ; } } ; ) aQuery , VAR_3 , VAR_4 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; ) true ( METHOD_2 . VAR_3 ; ) VAR_2 , VAR_1 ( TYPE_1 new = VAR_3 TYPE_1 ; } } ; ) ( > > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap new : source ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public java.lang.Object METHOD_1 ( java.lang.Object obj , java.lang.Object VAR_1 ) { java.lang.Object returnValue = null ; try { returnValue = VAR_2 . METHOD_2 ( ) . METHOD_3 ( obj ) ; } catch ( java.lang.Exception e ) { VAR_3 . METHOD_4 ( ( ( ( STRING_1 + ( VAR_2 . METHOD_5 ( ) ) ) + STRING_2 ) + ( obj . METHOD_6 ( ) . getName ( ) ) ) ) ; } return returnValue == null ? VAR_1 : returnValue ; } } ; returnValue : VAR_1 ? null == returnValue return } ; ) ) ) ) ( getName . ) ( METHOD_6 . obj ( + ) STRING_2 + ) ) ) ( METHOD_5 . VAR_2 ( + STRING_1 ( ( ( ( METHOD_4 . VAR_3 { ) e java.lang.Exception ( catch } ; ) obj ( METHOD_3 . ) ( METHOD_2 . VAR_2 = returnValue { try ; null = returnValue java.lang.Object { ) VAR_1 java.lang.Object , obj java.lang.Object ( METHOD_1 java.lang.Object public 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { if ( ! ( TYPE_2 . METHOD_2 ( TYPE_3 . getParameters ( ) . getVm ( ) . METHOD_3 ( ) ) ) ) { return TYPE_4 . METHOD_4 ( TYPE_3 . getParameters ( ) . getVm ( ) . METHOD_3 ( ) , VAR_1 ) ; } return null ; } } ; null return } ; ) VAR_1 , ) ( METHOD_3 . ) ( getVm . ) ( getParameters . TYPE_3 ( METHOD_4 . TYPE_4 return { ) ) ) ) ( METHOD_3 . ) ( getVm . ) ( getParameters . TYPE_3 ( METHOD_2 . TYPE_2 ( ! ( if { ) ( METHOD_1 > > java.lang.String , java.lang.String < TYPE_1 , java.lang.String < java.util.Map protected 
private void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( new TYPE_2 ( ) ) ; boolean VAR_1 = ( METHOD_3 ( METHOD_4 ( ) ) ) & & ( METHOD_5 ( ) ) ; if ( ! VAR_1 ) { TYPE_1 . getVm ( ) . METHOD_6 ( 0 ) ; TYPE_1 . getVm ( ) . METHOD_7 ( 0 ) ; throw new TYPE_3 ( VAR_2 ) ; } TYPE_4 . METHOD_8 ( TYPE_1 . METHOD_9 ( ) , true ) ; } } ; ) true , ) ( METHOD_9 . TYPE_1 ( METHOD_8 . TYPE_4 } ; ) VAR_2 ( TYPE_3 new throw ; ) 0 ( METHOD_7 . ) ( getVm . TYPE_1 ; ) 0 ( METHOD_6 . ) ( getVm . TYPE_1 { ) VAR_1 ! ( if ; ) ) ( METHOD_5 ( & & ) ) ) ( METHOD_4 ( METHOD_3 ( = VAR_1 boolean ; ) ) ( TYPE_2 new ( METHOD_2 . ) ( getParameters . TYPE_1 { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; return ( ( ( super . METHOD_1 ( ) ) & & ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) & & ( validate ( VAR_1 . METHOD_5 ( ) ) ) ) & & ( validate ( VAR_1 . METHOD_6 ( ) ) ) ; } } ; ) ) ) ( METHOD_6 . VAR_1 ( validate ( & & ) ) ) ) ( METHOD_5 . VAR_1 ( validate ( & & ) ) ) ) ( METHOD_4 . VAR_1 ( validate ( & & ) ) ( METHOD_1 . super ( ( ( return ; ) ) ( METHOD_3 . TYPE_2 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 boolean protected 
private static void METHOD_1 ( TYPE_1 command ) { final TYPE_2 dao = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; final TYPE_3 pool = new TYPE_3 ( ) ; pool . setId ( command . getParameters ( ) . getStoragePoolId ( ) ) ; org.mockito.Mockito.when ( dao . get ( TYPE_4 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( pool ) ; org.mockito.Mockito.doReturn ( dao ) . when ( command ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) command ( when . ) dao ( org.mockito.Mockito.doReturn ; ) pool ( thenReturn . ) ) ) class Guid . VAR_2 ( any . TYPE_4 ( get . dao ( org.mockito.Mockito.when ; ) ) ( getStoragePoolId . ) ( getParameters . command ( setId . pool ; ) ( TYPE_3 new = pool TYPE_3 final ; ) class VAR_1 ( METHOD_2 . org.mockito.Mockito = dao TYPE_2 final { ) command TYPE_1 ( METHOD_1 void static private 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( nic . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( nic . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( nic . METHOD_7 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_8 ( nic . METHOD_9 ( ) ) ; VAR_2 . METHOD_10 ( TYPE_3 . METHOD_11 ( VAR_1 ) ) ; return VAR_2 ; } } ; VAR_2 return ; ) ) VAR_1 ( METHOD_11 . TYPE_3 ( METHOD_10 . VAR_2 ; ) ) ( METHOD_9 . nic ( METHOD_8 . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 ; ) ) ( METHOD_7 . nic ( METHOD_6 . VAR_1 ; ) ) ( METHOD_5 . nic ( METHOD_4 . VAR_1 ; ) ) ( METHOD_3 . nic ( METHOD_2 . VAR_1 ; ) ( TYPE_2 new = VAR_1 TYPE_2 { ) nic org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network network = ( ( org.ovirt.engine.core.common.businessentities . network ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; boolean VAR_1 = ( ( METHOD_3 ( ) ) & & ( network ! = null ) ) & & ( ! ( network . getId ( ) . equals ( VAR_2 ) ) ) ; METHOD_4 ( ) . setIsChangable ( VAR_1 ) ; METHOD_5 ( ) . setIsChangable ( VAR_1 ) ; } } ; ) VAR_1 ( setIsChangable . ) ( METHOD_5 ; ) VAR_1 ( setIsChangable . ) ( METHOD_4 ; ) ) ) VAR_2 ( equals . ) ( getId . network ( ! ( & & ) ) null = ! network ( & & ) ) ( METHOD_3 ( ( = VAR_1 boolean ; ) ) ) ( getSelectedItem . ) ( METHOD_2 ( ) network . org.ovirt.engine.core.common.businessentities ( ( = network network . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void private 
public static TYPE_1 map ( TYPE_1 entity , TYPE_1 template ) { TYPE_1 model = ( template ! = null ) ? template : new TYPE_1 ( ) ; model . setId ( entity . METHOD_1 ( ) . toString ( ) ) ; model . METHOD_2 ( entity . METHOD_3 ( ) ) ; model . METHOD_4 ( entity . METHOD_5 ( ) ) ; return model ; } } ; model return ; ) ) ( METHOD_5 . entity ( METHOD_4 . model ; ) ) ( METHOD_3 . entity ( METHOD_2 . model ; ) ) ( toString . ) ( METHOD_1 . entity ( setId . model ; ) ( TYPE_1 new : template ? ) null = ! template ( = model TYPE_1 { ) template TYPE_1 , entity TYPE_1 ( map TYPE_1 static public 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( command . getStoragePoolId ( ) ) . thenReturn ( VAR_5 ) ; } } ; ) VAR_5 ( thenReturn . ) ) ( getStoragePoolId . command ( org.mockito.Mockito.when ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_1 ( get . VAR_3 ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( org.ovirt.engine.core.common.businessentities.StoragePool new = VAR_1 org.ovirt.engine.core.common.businessentities.StoragePool { ) ( METHOD_1 void private 
protected org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( boolean VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = null ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_3 = TYPE_1 . METHOD_5 ( VAR_2 ) ; } org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_3 ) ) . when ( VAR_4 ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 ) , TYPE_3 . any ( VAR_6 class ) ) ; return VAR_2 ; } } ; VAR_2 return ; ) ) class VAR_6 ( any . TYPE_3 , ) VAR_5 ( METHOD_8 . TYPE_3 ( METHOD_7 . ) VAR_4 ( when . ) ) VAR_3 ( METHOD_6 ( org.mockito.Mockito.doReturn } ; ) VAR_2 ( METHOD_5 . TYPE_1 = VAR_3 ; ) ) ( TYPE_2 new ( METHOD_4 . ) ( METHOD_3 . VAR_2 ; ) ( org.ovirt.engine.core.common.businessentities.StorageDomain new = VAR_2 { ) VAR_1 ( if ; ) ( METHOD_2 . TYPE_1 = VAR_3 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.List ; null = VAR_2 org.ovirt.engine.core.common.businessentities.StorageDomain { ) VAR_1 boolean ( METHOD_1 org.ovirt.engine.core.common.businessentities.StorageDomain protected 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , true ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) true , true , ) ) ( METHOD_5 . TYPE_2 ( METHOD_4 . ) ( METHOD_3 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( METHOD_2 . TYPE_1 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List private 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_5 ( ) ) ; VAR_1 . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_6 ( ) ) ; getModel ( ) . setItems ( VAR_1 ) ; } } ; ) VAR_1 ( setItems . ) ( getModel ; ) ) ( METHOD_6 . ) ( getInstance . TYPE_2 ( METHOD_3 . VAR_1 ; ) ) ( METHOD_5 . ) ( getInstance . TYPE_2 ( METHOD_3 . VAR_1 ; ) ) ( METHOD_4 . ) ( getInstance . TYPE_2 ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . ) ( getInstance . TYPE_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) ! = null ) { return ; } TYPE_1 model = TYPE_2 . METHOD_2 ( getEntity ( ) , getEntity ( ) . getStoragePoolId ( ) , cluster . METHOD_3 ( ) , ( ( java.util.ArrayList < TYPE_3 > ) ( METHOD_4 ( ) ) ) , ( ( TYPE_3 ) ( getSelectedItem ( ) ) ) , this ) ; METHOD_5 ( model ) ; } } ; ) model ( METHOD_5 ; ) this , ) ) ) ( getSelectedItem ( ) TYPE_3 ( ( , ) ) ) ( METHOD_4 ( ) > TYPE_3 < java.util.ArrayList ( ( , ) ( METHOD_3 . cluster , ) ( getStoragePoolId . ) ( getEntity , ) ( getEntity ( METHOD_2 . TYPE_2 = model TYPE_1 } ; return { ) null = ! ) ) ( getWindow ( ( if { ) ( METHOD_1 void private 
protected java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.Map < java.lang.String , java.lang.Object > parameters = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; if ( vm ! = null ) { parameters . put ( VAR_1 . VM , vm ) ; } if ( ( cluster . METHOD_2 ( ) ) ! = null ) { parameters . METHOD_3 ( cluster . METHOD_2 ( ) ) ; } return parameters ; } } ; parameters return } ; ) ) ( METHOD_2 . cluster ( METHOD_3 . parameters { ) null = ! ) ) ( METHOD_2 . cluster ( ( if } ; ) vm , VM . VAR_1 ( put . parameters { ) null = ! vm ( if ; ) ( > java.lang.Object , java.lang.String < java.util.HashMap new = parameters > java.lang.Object , java.lang.String < java.util.Map { ) vm org.ovirt.engine.core.common.businessentities.VM , cluster org.ovirt.engine.core.common.businessentities.VDSGroup ( METHOD_1 > java.lang.Object , java.lang.String < java.util.Map protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 ! = null ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( VAR_2 class , VAR_1 . METHOD_4 ( ) , true ) ; } if ( VAR_1 . METHOD_5 ( ) ) { TYPE_2 . METHOD_3 ( VAR_3 class , VAR_1 . METHOD_6 ( ) , true ) ; } if ( VAR_1 . METHOD_7 ( ) ) { TYPE_2 . METHOD_3 ( VAR_4 class , VAR_1 . METHOD_8 ( ) , true ) ; } } } } } } ; ) true , ) ( METHOD_8 . VAR_1 , class VAR_4 ( METHOD_3 . TYPE_2 { ) ) ( METHOD_7 . VAR_1 ( if } ; ) true , ) ( METHOD_6 . VAR_1 , class VAR_3 ( METHOD_3 . TYPE_2 { ) ) ( METHOD_5 . VAR_1 ( if } ; ) true , ) ( METHOD_4 . VAR_1 , class VAR_2 ( METHOD_3 . TYPE_2 { ) ) ( METHOD_2 . VAR_1 ( if { ) null = ! VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( STRING_2 , VAR_1 ) ; TYPE_2 . assertEquals ( STRING_3 , ( - 1 ) , VAR_2 ) ; VAR_1 = TYPE_1 . METHOD_2 ( STRING_4 ) ; TYPE_2 . METHOD_4 ( STRING_5 , VAR_1 ) ; } } ; ) VAR_1 , STRING_5 ( METHOD_4 . TYPE_2 ; ) STRING_4 ( METHOD_2 . TYPE_1 = VAR_1 ; ) VAR_2 , ) 1 - ( , STRING_3 ( assertEquals . TYPE_2 ; ) VAR_1 , STRING_2 ( METHOD_3 . TYPE_2 ; ) STRING_1 ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_1 ) { TYPE_1 model = new TYPE_1 ( ) ; model . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; model . METHOD_3 ( STRING_1 ) ; model . METHOD_4 ( vm ) ; model . METHOD_5 ( new org.ovirt.engine.ui.uicommonweb.UICommand ( STRING_2 , VAR_1 ) . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_6 ( ) ) . METHOD_7 ( true ) ) ; model . METHOD_8 ( ) ; return model ; } } ; model return ; ) ( METHOD_8 . model ; ) ) true ( METHOD_7 . ) ) ( METHOD_6 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( setTitle . ) VAR_1 , STRING_2 ( org.ovirt.engine.ui.uicommonweb.UICommand new ( METHOD_5 . model ; ) vm ( METHOD_4 . model ; ) STRING_1 ( METHOD_3 . model ; ) ) ( METHOD_2 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( setTitle . model ; ) ( TYPE_1 new = model TYPE_1 { ) VAR_1 TYPE_2 , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 TYPE_1 static public 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } } } } ; ) VAR_5 ( TYPE_4 new throw { ) VAR_5 TYPE_3 ( catch } ; VAR_4 return ; ) VAR_2 ( TYPE_1 new = VAR_4 TYPE_1 ; ) ) ( METHOD_2 . VAR_1 ( METHOD_1 . VAR_3 = VAR_2 > java.lang.Object , java.lang.String < java.util.Map { try { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , false ) ; TYPE_1 VAR_3 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; TYPE_2 VAR_4 = VAR_2 . METHOD_5 ( ) ; METHOD_6 ( false , VAR_4 , 1 , VAR_1 ) ; METHOD_7 ( 1 , VAR_1 ) ; METHOD_8 ( TYPE_3 . METHOD_9 ( VAR_2 ) , 1 ) ; } } ; ) 1 , ) VAR_2 ( METHOD_9 . TYPE_3 ( METHOD_8 ; ) VAR_1 , 1 ( METHOD_7 ; ) VAR_1 , 1 , VAR_4 , false ( METHOD_6 ; ) ( METHOD_5 . VAR_2 = VAR_4 TYPE_2 ; ) ( METHOD_4 . VAR_2 ; ) VAR_3 ( METHOD_3 . VAR_2 ; ) ( METHOD_2 = VAR_3 TYPE_1 ; ) false , VAR_1 ( METHOD_2 = VAR_2 TYPE_1 { ) VAR_1 boolean ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( false ) ) . when ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( false , VAR_5 . METHOD_8 ( vm , diskImage ) . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . ) diskImage , vm ( METHOD_8 . VAR_5 , false ( assertEquals . TYPE_3 ; ) VAR_3 ( METHOD_7 . ) VAR_4 ( when . ) ) false ( METHOD_6 ( org.mockito.Mockito.doReturn ; ) VAR_3 ( METHOD_5 . vm ; ) VAR_2 ( METHOD_4 . vm ; ) ( org.ovirt.engine.core.common.businessentities.VM new = vm org.ovirt.engine.core.common.businessentities.VM ; ) ) ) VAR_1 ( METHOD_3 . TYPE_2 ( java.util.ArrayList new ( METHOD_2 . diskImage ; ) ( DiskImage . TYPE_1 new = diskImage DiskImage . TYPE_1 { ) ( METHOD_1 void public 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { int VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( ( ( VAR_3 . length ( ) ) + VAR_1 ) + 1 ) < = ( METHOD_3 ( ) ) ; TYPE_1 . ValidationResult VAR_4 = new TYPE_1 . ValidationResult ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; if ( ! VAR_2 ) { VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) ) ) ; } return VAR_4 ; } } ; VAR_4 return } ; ) ) ) ( METHOD_7 ( METHOD_6 . TYPE_2 ( METHOD_5 . VAR_4 { ) VAR_2 ! ( if ; ) VAR_2 ( METHOD_4 . VAR_4 ; ) ( ValidationResult . TYPE_1 new = VAR_4 ValidationResult . TYPE_1 ; ) ) ( METHOD_3 ( = < ) 1 + ) VAR_1 + ) ) ( length . VAR_3 ( ( ( = VAR_2 boolean ; ) ( METHOD_2 = VAR_1 int { ) value java.lang.Object ( METHOD_1 ValidationResult . TYPE_1 public 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } if ( ( METHOD_2 ( ) . getStatus ( ) ) == ( VAR_1 ) ) { METHOD_3 ( VAR_2 , METHOD_2 ( ) . METHOD_4 ( ) ) ; } return true ; } } ; true return } ; ) ) ( METHOD_4 . ) ( METHOD_2 , VAR_2 ( METHOD_3 { ) ) VAR_1 ( == ) ) ( getStatus . ) ( METHOD_2 ( ( if } ; false return { ) ) ) ( METHOD_1 . super ( ! ( if { ) ( METHOD_1 boolean protected 
public boolean METHOD_1 ( ) { if ( VAR_1 ) { return ! ( TYPE_1 . METHOD_2 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) ) ) ; } else { return ! ( TYPE_1 . METHOD_2 ( ( ( java.lang.String ) ( METHOD_4 ( ) . getEntity ( ) ) ) ) ) ; } } } } ; ) ) ) ) ) ( getEntity . ) ( METHOD_4 ( ) java.lang.String ( ( ( METHOD_2 . TYPE_1 ( ! return { else } ; ) ) ) ) ) ( getEntity . ) ( METHOD_3 ( ) java.lang.String ( ( ( METHOD_2 . TYPE_1 ( ! return { ) VAR_1 ( if { ) ( METHOD_1 boolean public 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > list = new java.util.ArrayList < > ( ) ; if ( source ! = null ) { for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( source ) ) ) { if ( ( template . getStatus ( ) ) == ( VAR_1 ) ) { list . add ( template ) ; } } TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; } return list ; } } ; list return } ; ) ) ( TYPE_2 new , list ( METHOD_2 . TYPE_1 } } ; ) template ( add . list { ) ) VAR_1 ( == ) ) ( getStatus . template ( ( if { ) ) ) source ( ) > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList ( ( : template org.ovirt.engine.core.common.businessentities.VmTemplate ( for { ) null = ! source ( if ; ) ( > < java.util.ArrayList new = list > org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.ArrayList { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( METHOD_1 java.lang.Object public 
private TYPE_1 METHOD_1 ( TYPE_2 action , java.lang.String VAR_1 ) { action . METHOD_2 ( TYPE_3 . METHOD_3 ( TYPE_4 ) ) ; action . METHOD_4 ( new TYPE_5 ( ) ) ; action . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; return TYPE_1 . METHOD_7 ( ) . entity ( action ) . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . ) action ( entity . ) ( METHOD_7 . TYPE_1 return ; ) VAR_1 ( METHOD_6 . ) ( METHOD_5 . action ; ) ) ( TYPE_5 new ( METHOD_4 . action ; ) ) TYPE_4 ( METHOD_3 . TYPE_3 ( METHOD_2 . action { ) VAR_1 java.lang.String , action TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { final TYPE_2 params = new TYPE_2 ( VAR_1 . getId ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; params . METHOD_4 ( true ) ; return params ; } } ; params return ; ) true ( METHOD_4 . params ; ) ) ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 ( org.ovirt.engine.core.compat.Guid new , ) ( getId . VAR_1 ( TYPE_2 new = params TYPE_2 final { ) VAR_1 org.ovirt.engine.core.common.businessentities.StorageDomain final ( METHOD_1 VdcActionParametersBase . TYPE_1 public 
void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( ) ; for ( final TYPE_2 VAR_2 : ( ( java.util.ArrayList < TYPE_2 > ) ( model . METHOD_3 ( ) ) ) ) { TYPE_3 VAR_3 = new TYPE_3 ( constants ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; } } } } ; ) VAR_3 ( add . VAR_1 ; ) VAR_2 ( METHOD_4 . VAR_3 ; ) constants ( TYPE_3 new = VAR_3 TYPE_3 { ) ) ) ) ( METHOD_3 . model ( ) > TYPE_2 < java.util.ArrayList ( ( : VAR_2 TYPE_2 final ( for ; ) ( METHOD_2 . VAR_1 { ) model TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 map ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , map . METHOD_3 ( ) ) . addValue ( STRING_2 , map . METHOD_4 ( ) ) . addValue ( STRING_3 , map . METHOD_5 ( ) ) . addValue ( STRING_4 , map . METHOD_6 ( ) ) ; METHOD_7 ( ) . METHOD_8 ( STRING_5 , VAR_1 ) ; } } ; ) VAR_1 , STRING_5 ( METHOD_8 . ) ( METHOD_7 ; ) ) ( METHOD_6 . map , STRING_4 ( addValue . ) ) ( METHOD_5 . map , STRING_3 ( addValue . ) ) ( METHOD_4 . map , STRING_2 ( addValue . ) ) ( METHOD_3 . map , STRING_1 ( addValue . ) ( METHOD_2 = VAR_1 TYPE_2 { ) map TYPE_1 ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 ! = null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . setSelectedItem ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_2 ( setSelectedItem . ) ( METHOD_1 ; ) VAR_1 ( setItems . ) ( METHOD_1 ; ) ( > TYPE_1 < java.util.ArrayList new : VAR_1 ? ) null = ! VAR_1 ( = VAR_1 ; ) ) returnValue ( ) > TYPE_1 < java.util.List ( ( = VAR_1 > TYPE_1 < java.util.List { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_3 ) . isEmpty ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_6 ( VAR_6 , VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_8 ) ; } } ; ) VAR_8 , VAR_7 ( METHOD_7 . ) VAR_5 ( METHOD_5 . TYPE_3 ; ) VAR_4 , VAR_2 , VAR_6 ( METHOD_6 . TYPE_2 = VAR_5 > java.lang.Object , java.lang.String < java.util.Map ; ) ( isEmpty . ) VAR_3 ( METHOD_5 . TYPE_3 ; ) VAR_4 , VAR_2 ( METHOD_4 . TYPE_2 = VAR_3 > java.lang.Object , java.lang.String < java.util.Map } ; ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 { ) VAR_2 : VAR_1 TYPE_1 ( for { ) ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 ) { if ( ( METHOD_2 ( ) ) < VAR_1 ) { throw new TYPE_2 ( VAR_2 ) ; } final java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( VAR_1 ) ; int VAR_3 = VAR_1 ; while ( VAR_3 > 0 ) { final TYPE_3 VAR_4 = METHOD_3 ( ) ; final java.util.List < TYPE_1 > VAR_5 = VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_3 -= VAR_5 . size ( ) ; result . METHOD_5 ( VAR_5 ) ; } return result ; } } ; result return } ; ) VAR_5 ( METHOD_5 . result ; ) ( size . VAR_5 -= VAR_3 ; ) VAR_3 ( METHOD_4 . VAR_4 = VAR_5 > TYPE_1 < java.util.List final ; ) ( METHOD_3 = VAR_4 TYPE_3 final { ) 0 > VAR_3 ( while ; VAR_1 = VAR_3 int ; ) VAR_1 ( > < java.util.ArrayList new = result > TYPE_1 < java.util.List final } ; ) VAR_2 ( TYPE_2 new throw { ) VAR_1 < ) ) ( METHOD_2 ( ( if { ) VAR_1 int ( METHOD_1 > TYPE_1 < java.util.List public 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS host = context . host ; if ( ( host . METHOD_2 ( ) ) ! = null ) { TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; METHOD_4 ( ) ; } } , VAR_2 ) , host . METHOD_2 ( ) ) ; } else { METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 { else } ; ) ) ( METHOD_2 . host , ) VAR_2 , } } ; ) ( METHOD_4 ; ) ) returnValue ( ) org.ovirt.engine.core.common.businessentities.VDSGroup ( ( = VAR_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_3 . TYPE_1 { ) null = ! ) ) ( METHOD_2 . host ( ( if ; host . context = host org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; int VAR_2 = 0 ; int VAR_3 = 0 ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . getStatus ( ) ) == ( VAR_5 ) ) { VAR_2 ++ ; } else { VAR_3 ++ ; } } METHOD_1 ( VAR_1 . size ( ) ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_3 ; ) VAR_2 ( METHOD_2 ; ) ) ( size . VAR_1 ( METHOD_1 } } ; ++ VAR_3 { else } ; ++ VAR_2 { ) ) VAR_5 ( == ) ) ( getStatus . VAR_4 ( ( if { ) VAR_1 : VAR_4 TYPE_1 ( for ; 0 = VAR_3 int ; 0 = VAR_2 int ; ) ) result ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_1 > TYPE_1 < java.util.ArrayList { ) result java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( STRING_1 ) . when ( VAR_1 ) . METHOD_2 ( ) ; VAR_2 = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 , new TYPE_2 ( ) ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_3 . any ( VAR_5 . List class ) ) ; } } ; ) ) class List . VAR_5 ( any . TYPE_3 ( METHOD_4 . ) VAR_2 ( when . ) VAR_4 ( doReturn . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ) ) ( TYPE_2 new , VAR_1 ( TYPE_1 new ( METHOD_3 . org.mockito.Mockito = VAR_2 ; ) ( METHOD_2 . ) VAR_1 ( when . ) STRING_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_2 ! = null ) { for ( TYPE_2 map : VAR_2 ) { if ( METHOD_4 ( map . METHOD_5 ( ) ) ) { return map . METHOD_5 ( ) ; } } } return VAR_4 ; } } ; VAR_4 return } } } ; ) ( METHOD_5 . map return { ) ) ) ( METHOD_5 . map ( METHOD_4 ( if { ) VAR_2 : map TYPE_2 ( for { ) null = ! VAR_2 ( if ; ) VAR_3 , VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_3 = VAR_2 > TYPE_2 < java.util.List { ) VAR_1 TYPE_1 ( METHOD_1 org.ovirt.engine.core.compat.Guid private 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getVm ( ) . METHOD_4 ( ) , getVm ( ) . METHOD_5 ( ) ) ; METHOD_6 ( getVm ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; } } ; null return ; ) ( METHOD_7 . ) ( METHOD_2 ; ) ) ( METHOD_4 . ) ( getVm ( METHOD_6 ; ) ) ( METHOD_5 . ) ( getVm , ) ( METHOD_4 . ) ( getVm ( METHOD_3 . ) ( METHOD_2 { ) ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( ) . getStoragePoolId ( ) ; if ( pool ! = null ) { pool . setId ( VAR_1 ) ; } TYPE_1 VAR_2 = org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 , METHOD_4 ( ) . getId ( ) , METHOD_2 ( ) . METHOD_5 ( ) ) ) . thenReturn ( pool ) ; org.mockito.Mockito.when ( METHOD_6 ( ) . METHOD_7 ( ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) ( METHOD_7 . ) ( METHOD_6 ( org.mockito.Mockito.when ; ) pool ( thenReturn . ) ) ) ( METHOD_5 . ) ( METHOD_2 , ) ( getId . ) ( METHOD_4 , VAR_1 ( get . VAR_2 ( org.mockito.Mockito.when ; ) class VAR_3 ( METHOD_3 . org.mockito.Mockito = VAR_2 TYPE_1 } ; ) VAR_1 ( setId . pool { ) null = ! pool ( if ; ) ( getStoragePoolId . ) ( METHOD_2 = VAR_1 org.ovirt.engine.core.compat.Guid { ) pool org.ovirt.engine.core.common.businessentities.StoragePool ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_3 . METHOD_6 ( ) . size ( ) ) == 2 ) ) ; TYPE_2 . METHOD_3 ( ) . METHOD_7 ( ) ; TYPE_1 . METHOD_2 ( VAR_3 . METHOD_6 ( ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) ( METHOD_6 . VAR_3 ( METHOD_2 . TYPE_1 ; ) ( METHOD_7 . ) ( METHOD_3 . TYPE_2 ; ) ) 2 == ) ) ( size . ) ( METHOD_6 . VAR_3 ( ( ( METHOD_2 . TYPE_1 ; ) ) ( METHOD_5 . ) VAR_2 ( METHOD_4 . ) ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 ; ) ) ( METHOD_5 . ) VAR_1 ( METHOD_4 . ) ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . VM ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } } ; ) ) ) ) ( getReturnValue . ) ( METHOD_5 . VAR_4 ( == ) VAR_5 ( ( ( METHOD_4 . TYPE_3 ; ) ( METHOD_3 . VAR_4 ; ) VAR_1 ( METHOD_2 = VAR_4 > TYPE_1 < TYPE_2 ; ) VM . VAR_3 , ) ) VAR_2 ( + STRING_1 ( ( TYPE_1 new = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
protected java.lang.Object runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . runQuery ( VAR_1 , VAR_2 ) ; return result . getSucceeded ( ) ? result . getReturnValue ( ) : null ; } } ; null : ) ( getReturnValue . result ? ) ( getSucceeded . result return ; ) VAR_2 , VAR_1 ( runQuery . VAR_4 = result VdcQueryReturnValue . TYPE_1 ; ) VAR_3 , VAR_2 ( METHOD_1 { ) VAR_3 java.lang.String , VAR_2 TYPE_2 , VAR_1 VdcQueryType . TYPE_1 ( runQuery java.lang.Object protected 
static TYPE_1 . Disk getModel ( int VAR_1 ) { TYPE_1 . Disk model = new TYPE_1 . Disk ( ) ; model . METHOD_1 ( ( INT_1 * INT_2 ) ) ; model . METHOD_2 ( TYPE_2 . value ( ) ) ; model . METHOD_3 ( TYPE_3 . value ( ) ) ; model . METHOD_4 ( true ) ; model . METHOD_5 ( false ) ; model . METHOD_6 ( false ) ; model . METHOD_7 ( false ) ; model . METHOD_8 ( true ) ; return model ; } } ; model return ; ) true ( METHOD_8 . model ; ) false ( METHOD_7 . model ; ) false ( METHOD_6 . model ; ) false ( METHOD_5 . model ; ) true ( METHOD_4 . model ; ) ) ( value . TYPE_3 ( METHOD_3 . model ; ) ) ( value . TYPE_2 ( METHOD_2 . model ; ) ) INT_2 * INT_1 ( ( METHOD_1 . model ; ) ( Disk . TYPE_1 new = model Disk . TYPE_1 { ) VAR_1 int ( getModel Disk . TYPE_1 static 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { if ( VAR_1 == null ) { return ; } TYPE_4 status = TYPE_5 . METHOD_2 ( VAR_1 ) ; TYPE_6 VAR_3 = METHOD_3 ( status ) ; java.lang.String VAR_4 = METHOD_4 ( status ) ; TYPE_7 VAR_5 = TYPE_8 . METHOD_5 ( TYPE_9 . METHOD_6 ( VAR_3 ) . METHOD_7 ( ) ) ; VAR_2 . append ( VAR_6 . METHOD_8 ( VAR_5 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_5 ( METHOD_8 . VAR_6 ( append . VAR_2 ; ) ) ( METHOD_7 . ) VAR_3 ( METHOD_6 . TYPE_9 ( METHOD_5 . TYPE_8 = VAR_5 TYPE_7 ; ) status ( METHOD_4 = VAR_4 java.lang.String ; ) status ( METHOD_3 = VAR_3 TYPE_6 ; ) VAR_1 ( METHOD_2 . TYPE_5 = status TYPE_4 } ; return { ) null == VAR_1 ( if { ) VAR_2 TYPE_3 , VAR_1 TYPE_2 , context TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( getParameters ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return METHOD_4 ( ) . METHOD_5 ( ) ; } return METHOD_4 ( ) . METHOD_6 ( ) ; } return METHOD_5 ( ) ; } } ; ) ( METHOD_5 return } ; ) ( METHOD_6 . ) ( METHOD_4 return } ; ) ( METHOD_5 . ) ( METHOD_4 return { ) ) VAR_1 ( == ) ) ( METHOD_3 . ) ( getParameters ( ( if { ) ) ( METHOD_2 ( if { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { if ( ( ( ( METHOD_2 ( ) ) ! = null ) & & ( ( METHOD_3 ( ) ) ! = null ) ) & & ( ( METHOD_4 ( ) ) ! = null ) ) { VAR_1 = ( ( ( METHOD_5 ( ) ) * ( METHOD_3 ( ) ) ) / FLOAT_1 ) - ( ( METHOD_2 ( ) ) + ( METHOD_4 ( ) ) ) ; } } } } ; ) ) ) ( METHOD_4 ( + ) ) ( METHOD_2 ( ( - ) FLOAT_1 / ) ) ) ( METHOD_3 ( * ) ) ( METHOD_5 ( ( ( = VAR_1 { ) ) null = ! ) ) ( METHOD_4 ( ( & & ) ) null = ! ) ) ( METHOD_3 ( ( & & ) null = ! ) ) ( METHOD_2 ( ( ( ( if { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 parameters = new TYPE_1 ( METHOD_2 ( 2 , true ) , true ) ; TYPE_2 command = new TYPE_2 ( parameters ) ; cmd = org.mockito.Mockito . METHOD_3 ( command ) ; METHOD_4 ( cmd ) ; TYPE_3 . METHOD_5 ( cmd , VAR_1 ) ; } } ; ) VAR_1 , cmd ( METHOD_5 . TYPE_3 ; ) cmd ( METHOD_4 ; ) command ( METHOD_3 . org.mockito.Mockito = cmd ; ) parameters ( TYPE_2 new = command TYPE_2 ; ) true , ) true , 2 ( METHOD_2 ( TYPE_1 new = parameters TYPE_1 { ) ( METHOD_1 void public 
public boolean METHOD_1 ( ) { TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( 1 ) ; tempVar . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) , tempVar } ) ; return METHOD_4 ( ) . METHOD_6 ( ) ; } } ; ) ( METHOD_6 . ) ( METHOD_4 return ; ) } tempVar , ) ( TYPE_3 new { ] [ TYPE_2 new ( METHOD_5 . ) ( METHOD_4 ; ) INT_1 ( METHOD_3 . tempVar ; ) 1 ( METHOD_2 . tempVar ; ) ( TYPE_1 new = tempVar TYPE_1 { ) ( METHOD_1 boolean public 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; if ( vds ! = null ) { vds . METHOD_5 ( TYPE_2 . METHOD_6 ( vds . METHOD_7 ( ) , vds . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( vds ) ; } } ; ) vds ( METHOD_10 . ) ( METHOD_9 . TYPE_1 } ; ) ) ) ( METHOD_8 . vds , ) ( METHOD_7 . vds ( METHOD_6 . TYPE_2 ( METHOD_5 . vds { ) null = ! vds ( if ; ) ) ( METHOD_4 . ) ( getParameters . TYPE_1 ( get . ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = null ; try { VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_3 VAR_4 ) { VAR_5 . METHOD_2 ( STRING_1 , VAR_2 , VAR_3 . METHOD_3 ( VAR_6 ) ) ; } finally { try { if ( VAR_1 ! = null ) { VAR_1 . METHOD_4 ( ) ; } } catch ( TYPE_3 VAR_4 ) { VAR_5 . error ( STRING_2 , VAR_4 ) ; } } return this ; } } ; this return } } ; ) VAR_4 , STRING_2 ( error . VAR_5 { ) VAR_4 TYPE_3 ( catch } } ; ) ( METHOD_4 . VAR_1 { ) null = ! VAR_1 ( if { try { finally } ; ) ) VAR_6 ( METHOD_3 . VAR_3 , VAR_2 , STRING_1 ( METHOD_2 . VAR_5 { ) VAR_4 TYPE_3 ( catch } ; ) VAR_1 ( METHOD_1 . VAR_3 ; ) VAR_2 ( TYPE_2 new = VAR_1 { try ; null = VAR_1 TYPE_2 { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( STRING_1 , STRING_2 , VAR_1 . METHOD_2 ( STRING_1 ) ) ; TYPE_1 . METHOD_3 ( STRING_3 , VAR_1 . METHOD_2 ( STRING_4 ) ) ; TYPE_1 . METHOD_3 ( STRING_5 , VAR_1 . METHOD_2 ( null ) ) ; } } ; ) ) null ( METHOD_2 . VAR_1 , STRING_5 ( METHOD_3 . TYPE_1 ; ) ) STRING_4 ( METHOD_2 . VAR_1 , STRING_3 ( METHOD_3 . TYPE_1 ; ) ) STRING_1 ( METHOD_2 . VAR_1 , STRING_2 , STRING_1 ( assertEquals . TYPE_1 { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; return VAR_1 . isEmpty ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( ( STRING_1 + name ) , VAR_3 . StorageDomain ) , aQuery ) ; } } ; ) aQuery , ) StorageDomain . VAR_3 , ) name + STRING_1 ( ( TYPE_2 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( isEmpty . VAR_1 return ; ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_1 > TYPE_1 < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) name java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_4 ) ; final org.ovirt.engine.core.compat.Guid VAR_5 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_5 ) ; } } ; ) VAR_5 , VAR_3 ( assertEquals . TYPE_2 ; ) ( METHOD_3 . VAR_1 = VAR_5 org.ovirt.engine.core.compat.Guid final ; ) VAR_4 , VAR_2 ( assertEquals . TYPE_2 ; ) ( METHOD_2 . VAR_1 = VAR_4 org.ovirt.engine.core.compat.Guid final ; ) VAR_3 , VAR_2 ( TYPE_1 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; for ( TYPE_2 < org.ovirt.engine.core.compat.Guid , TYPE_3 < TYPE_4 . VdcActionType , TYPE_4 . VdcActionParametersBase > > VAR_1 : VAR_2 . METHOD_3 ( ) ) { TYPE_5 < ? > command = TYPE_6 . METHOD_4 ( log ) . METHOD_5 ( VAR_1 . getValue ( ) . METHOD_6 ( ) , VAR_1 . getValue ( ) . METHOD_7 ( ) ) ; command . METHOD_8 ( ) ; VAR_3 . put ( VAR_1 . METHOD_9 ( ) , command ) ; } return null ; } } ; null return } ; ) command , ) ( METHOD_9 . VAR_1 ( put . VAR_3 ; ) ( METHOD_8 . command ; ) ) ( METHOD_7 . ) ( getValue . VAR_1 , ) ( METHOD_6 . ) ( getValue . VAR_1 ( METHOD_5 . ) log ( METHOD_4 . TYPE_6 = command > ? < TYPE_5 { ) ) ( METHOD_3 . VAR_2 : VAR_1 > > VdcActionParametersBase . TYPE_4 , VdcActionType . TYPE_4 < TYPE_3 , org.ovirt.engine.core.compat.Guid < TYPE_2 ( for ; ) ( METHOD_2 { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; cmd = org.mockito.Mockito . METHOD_3 ( new TYPE_2 < TYPE_1 > ( params ) { protected void METHOD_4 ( ) { } protected void METHOD_5 ( ) { } protected void METHOD_6 ( ) { } protected void METHOD_7 ( TYPE_3 parameters ) { } } ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_8 ( ) ; TYPE_4 . getInstance ( ) . METHOD_9 ( VAR_2 class , VAR_3 ) ; } } ; ) VAR_3 , class VAR_2 ( METHOD_9 . ) ( getInstance . TYPE_4 ; ) ( METHOD_8 . ) cmd ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) } } { ) parameters TYPE_3 ( METHOD_7 void protected } { ) ( METHOD_6 void protected } { ) ( METHOD_5 void protected } { ) ( METHOD_4 void protected { ) params ( > TYPE_1 < TYPE_2 new ( METHOD_3 . org.mockito.Mockito = cmd ; ) ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( TYPE_1 new = params TYPE_1 { ) ( METHOD_1 void public 
public static TYPE_1 map ( TYPE_2 action , TYPE_1 VAR_1 ) { switch ( action ) { case VAR_2 : return VAR_3 ; case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_7 ; case VAR_8 : return VAR_9 ; case VAR_10 : return VAR_11 ; default : return null ; } } } } ; null return : default ; VAR_11 return : VAR_10 case ; VAR_9 return : VAR_8 case ; VAR_7 return : VAR_6 case ; VAR_5 return : VAR_4 case ; VAR_3 return : VAR_2 case { ) action ( switch { ) VAR_1 TYPE_1 , action TYPE_2 ( map TYPE_1 static public 
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) ! = null ) { return ; } if ( ! ( validate ( ) ) ) { return ; } METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_5 ( VAR_1 , getParameters ( ) , new TYPE_2 ( ) { public void METHOD_6 ( TYPE_3 result ) { METHOD_7 ( ) ; METHOD_8 ( ) ; } } , this ) ; } } ; ) this , } } ; ) ( METHOD_8 ; ) ( METHOD_7 { ) result TYPE_3 ( METHOD_6 void public { ) ( TYPE_2 new , ) ( getParameters , VAR_1 ( METHOD_5 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) null ( METHOD_4 . TYPE_1 ; ) ( METHOD_3 } ; return { ) ) ) ( validate ( ! ( if } ; return { ) null = ! ) ) ( METHOD_2 . TYPE_1 ( ( if { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { TYPE_1 . getVm ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . getVm ( ) . METHOD_2 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ; return validate ( TYPE_2 . METHOD_1 ( TYPE_1 . getVm ( ) . METHOD_2 ( ) , TYPE_1 . getVdsGroup ( ) . METHOD_7 ( ) ) ) ; } } ; ) ) ) ( METHOD_7 . ) ( getVdsGroup . TYPE_1 , ) ( METHOD_2 . ) ( getVm . TYPE_1 ( METHOD_1 . TYPE_2 ( validate return ; ) ) ( METHOD_6 . ) ( getParameters . TYPE_1 ( METHOD_5 . ) ( METHOD_2 . ) ( getVm . TYPE_1 ; ) ) ( METHOD_4 . TYPE_1 ( METHOD_3 . ) ( METHOD_2 . ) ( getVm . TYPE_1 { ) ( METHOD_1 boolean protected 
private boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( getVm ( ) . METHOD_4 ( ) ) ) . getReturnValue ( ) ) ) ; if ( VAR_1 ) { addCanDoActionMessage ( VAR_3 ) ; } return ! VAR_1 ; } } ; VAR_1 ! return } ; ) VAR_3 ( addCanDoActionMessage { ) VAR_1 ( if ; ) ) ) ( getReturnValue . ) ) ) ( METHOD_4 . ) ( getVm ( TYPE_1 new , VAR_2 ( METHOD_3 . ) ( METHOD_2 ( ) java.lang.Boolean ( ( = VAR_1 boolean { ) ( METHOD_1 boolean private 
private java.lang.String METHOD_1 ( java.lang.Object obj ) { if ( obj instanceof org.ovirt.engine.core.common.businessentities.VM ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( obj ) ) . METHOD_2 ( ) ; } if ( obj instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( obj ) ) . METHOD_3 ( ) ; } throw new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new throw } ; ) ( METHOD_3 . ) ) obj ( ) TYPE_1 ( ( return { ) TYPE_1 instanceof obj ( if } ; ) ( METHOD_2 . ) ) obj ( ) org.ovirt.engine.core.common.businessentities.VM ( ( return { ) org.ovirt.engine.core.common.businessentities.VM instanceof obj ( if { ) obj java.lang.Object ( METHOD_1 java.lang.String private 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; disk . setId ( VAR_3 ) ; disk . METHOD_3 ( VAR_1 ) ; VAR_4 . add ( disk ) ; VAR_5 . add ( METHOD_4 ( VAR_3 , VAR_2 ) ) ; return VAR_3 ; } } ; VAR_3 return ; ) ) VAR_2 , VAR_3 ( METHOD_4 ( add . VAR_5 ; ) disk ( add . VAR_4 ; ) VAR_1 ( METHOD_3 . disk ; ) VAR_3 ( setId . disk ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_3 org.ovirt.engine.core.compat.Guid ; ) ( DiskImage . TYPE_1 new = disk DiskImage . TYPE_1 { ) VAR_2 boolean , VAR_1 boolean ( METHOD_1 org.ovirt.engine.core.compat.Guid private 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; METHOD_1 ( ( ( ( ( java.util.List ) ( METHOD_2 ( ) ) ) . size ( ) ) == 0 ) ) ; } } ; ) ) 0 == ) ) ( size . ) ) ) ( METHOD_2 ( ) java.util.List ( ( ( ( ( METHOD_1 ; ) ) ) ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_1 ( ( ( ) > org.ovirt.engine.core.common.businessentities.VM < java.util.ArrayList ( ( ( setItems { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 map = METHOD_2 ( obj . getId ( ) ) . addValue ( STRING_1 , obj . getName ( ) ) . addValue ( STRING_2 , obj . METHOD_3 ( ) ) . addValue ( STRING_3 , obj . METHOD_4 ( ) ) ; return map ; } } ; map return ; ) ) ( METHOD_4 . obj , STRING_3 ( addValue . ) ) ( METHOD_3 . obj , STRING_2 ( addValue . ) ) ( getName . obj , STRING_1 ( addValue . ) ) ( getId . obj ( METHOD_2 = map TYPE_1 { ) obj TYPE_2 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == null ) { METHOD_3 ( ) . setIsChangable ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; } } } } ; ) ) ) ) ( getEntity . ) ( METHOD_2 ( ) java.lang.Boolean ( ( ( setIsChangable . ) ( METHOD_3 { else } ; ) false ( setIsChangable . ) ( METHOD_3 { ) null == ) ) ( getEntity . ) ( METHOD_2 ( ( if { ) args TYPE_2 , sender java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void public 
protected boolean validate ( ) { if ( ( TYPE_1 . getVm ( ) ) == null ) { return METHOD_1 ( VAR_1 ) ; } if ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) ! = ( VAR_2 ) ) { return TYPE_1 . METHOD_2 ( ) ; } if ( ! ( TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) ) ) ) { return METHOD_1 ( VAR_3 ) ; } return true ; } } ; true return } ; ) VAR_3 ( METHOD_1 return { ) ) ) ) ( METHOD_4 . ) ( getVm . TYPE_1 ( METHOD_3 . TYPE_2 ( ! ( if } ; ) ( METHOD_2 . TYPE_1 return { ) ) VAR_2 ( = ! ) ) ( getStatus . ) ( getVm . TYPE_1 ( ( if } ; ) VAR_1 ( METHOD_1 return { ) null == ) ) ( getVm . TYPE_1 ( ( if { ) ( validate boolean protected 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . getStatus ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( vds ) . getStatus ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( command ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) command ( when . ) VAR_6 ( org.mockito.Mockito.doReturn ; ) ( getStatus . ) vds ( when . ) VAR_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) vds ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) command ( when . ) cluster ( org.mockito.Mockito.doReturn ; ) ( getStatus . ) VAR_1 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) VAR_3 ( METHOD_2 . ) VAR_2 ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_1 . getName ( ) . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . METHOD_3 ( ) ) ; VAR_1 . METHOD_6 ( false ) ; dao . METHOD_7 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_8 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } } ; ) result , VAR_1 ( assertEquals . TYPE_2 ; ) result ( METHOD_8 . TYPE_2 ; ) ) ( getId . VAR_1 ( get . dao = result TYPE_1 ; ) VAR_1 ( METHOD_7 . dao ; ) false ( METHOD_6 . VAR_1 ; ) ) ( METHOD_3 . ) ( METHOD_5 . VAR_1 ( METHOD_4 . VAR_1 ; ) ) ( METHOD_3 . ) ( getName . VAR_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 < TYPE_3 > > VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList < TYPE_3 > ( VAR_1 . METHOD_2 ( ) ) ; java.util.List < TYPE_3 > VAR_4 = VAR_3 ; for ( TYPE_2 < TYPE_3 > VAR_5 : VAR_2 ) { VAR_4 = TYPE_4 . METHOD_3 ( VAR_4 , VAR_5 ) ; } if ( ( VAR_4 . size ( ) ) > 0 ) { return true ; } return false ; } } ; false return } ; true return { ) 0 > ) ) ( size . VAR_4 ( ( if } ; ) VAR_5 , VAR_4 ( METHOD_3 . TYPE_4 = VAR_4 { ) VAR_2 : VAR_5 > TYPE_3 < TYPE_2 ( for ; VAR_3 = VAR_4 > TYPE_3 < java.util.List ; ) ) ( METHOD_2 . VAR_1 ( > TYPE_3 < java.util.ArrayList new = VAR_3 > TYPE_3 < java.util.List { ) VAR_2 > > TYPE_3 < TYPE_2 < java.util.List , VAR_1 TYPE_1 ( METHOD_1 boolean private 
private java.lang.String METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( VAR_1 == null ) { return null ; } return VAR_1 . METHOD_2 ( ) . map ( TYPE_2 : : METHOD_3 ) . METHOD_4 ( ) . METHOD_5 ( TYPE_3 . METHOD_6 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_6 . TYPE_3 ( METHOD_5 . ) ( METHOD_4 . ) METHOD_3 : : TYPE_2 ( map . ) ( METHOD_2 . VAR_1 return } ; null return { ) null == VAR_1 ( if { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 java.lang.String private 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getSelectedItem ( ) ) ) ) ; METHOD_3 ( ) . setItems ( new java.util.ArrayList < java.lang.String > ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_3 ( ) . setSelectedItem ( TYPE_1 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ) ; } } ; ) ) ) ( METHOD_4 . VAR_1 ( METHOD_5 . TYPE_1 ( setSelectedItem . ) ( METHOD_3 ; ) ) ) ( METHOD_4 . VAR_1 ( > java.lang.String < java.util.ArrayList new ( setItems . ) ( METHOD_3 ; ) ) ) ) ( getSelectedItem . ) ( METHOD_3 ( ) java.lang.String ( ( ( METHOD_2 . VAR_1 { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities . Network network : VAR_2 ) { VAR_3 . put ( network . METHOD_2 ( ) , new TYPE_2 ( network ) ) ; VAR_1 . put ( network . METHOD_2 ( ) , new TYPE_1 ( network , this ) ) ; } METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 } ; ) ) this , network ( TYPE_1 new , ) ( METHOD_2 . network ( put . VAR_1 ; ) ) network ( TYPE_2 new , ) ( METHOD_2 . network ( put . VAR_3 { ) VAR_2 : network Network . org.ovirt.engine.core.common.businessentities ( for ; ) ( > TYPE_1 , java.lang.String < java.util.HashMap new = VAR_1 > TYPE_1 , java.lang.String < java.util.Map { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { METHOD_2 ( ) ; vm . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; command . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( command ) ; } } ; ) command ( METHOD_9 . TYPE_2 ; ) ( METHOD_8 . command ; ) ( METHOD_7 . ) command ( when . ) true ( org.mockito.Mockito.doReturn ; ) ( METHOD_6 ; ) true , ) ( METHOD_5 . TYPE_1 ( METHOD_4 ; ) VAR_1 ( METHOD_3 . vm ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_2 ) ) { METHOD_8 ( ) ; } } } } ; ) ( METHOD_8 { ) ) STRING_2 , ) ( getName . command ( METHOD_6 . TYPE_1 ( if else } ; ) ( METHOD_7 { ) ) STRING_1 , ) ( getName . command ( METHOD_6 . TYPE_1 ( if else } ; ) ( METHOD_5 { ) ) ) ( METHOD_4 ( == command ( if else } ; ) ( METHOD_3 { ) ) ) ( METHOD_2 ( == command ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; params . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 < TYPE_1 > ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . ) cmd ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_7 . ) cmd ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_6 . ) cmd ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) ) params ( > TYPE_1 < TYPE_2 new ( METHOD_5 . org.mockito.Mockito = cmd ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_4 . params ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_2 . params ; ) ( TYPE_1 new = params TYPE_1 { ) ( METHOD_1 void private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_3 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_3 new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; source return } ; ) ( > TYPE_2 < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 TYPE_1 , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , boolean VAR_2 ) { org.mockito.Mockito . METHOD_2 ( frontend , org.mockito.Mockito . METHOD_3 ( VAR_1 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_3 ) , TYPE_2 . METHOD_6 ( VAR_4 class ) , VAR_5 . METHOD_7 ( ) , TYPE_2 . METHOD_5 ( false ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; return VAR_5 . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . VAR_5 return ; ) ) VAR_2 ( METHOD_5 . TYPE_2 , ) false ( METHOD_5 . TYPE_2 , ) ( METHOD_7 . VAR_5 , ) class VAR_4 ( METHOD_6 . TYPE_2 , ) VAR_3 ( METHOD_5 . TYPE_2 ( METHOD_4 . ) ) VAR_1 ( METHOD_3 . org.mockito.Mockito , frontend ( METHOD_2 . org.mockito.Mockito { ) VAR_2 boolean , VAR_1 int ( METHOD_1 > TYPE_1 < java.util.List private 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( ) ; java.lang.String VAR_1 = VAR_2 . METHOD_3 ( vm , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; final org.ovirt.engine.core.common.businessentities.VM VAR_3 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_2 . METHOD_5 ( VAR_1 , VAR_3 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) , new java.util.ArrayList < TYPE_3 > ( ) ) ; METHOD_6 ( vm , VAR_3 , vm . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . vm , VAR_3 , vm ( METHOD_6 ; ) ) ( > TYPE_3 < java.util.ArrayList new , ) ( > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList new , VAR_3 , VAR_1 ( METHOD_5 . VAR_2 ; ) ( org.ovirt.engine.core.common.businessentities.VM new = VAR_3 org.ovirt.engine.core.common.businessentities.VM final ; ) VAR_1 ( METHOD_4 . TYPE_2 ; ) ) ( > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList new , vm ( METHOD_3 . VAR_2 = VAR_1 java.lang.String ; ) ( METHOD_2 . TYPE_1 = vm org.ovirt.engine.core.common.businessentities.VM { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String VAR_3 = STRING_1 ; TYPE_1 . METHOD_3 ( VAR_1 , VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; dao . METHOD_4 ( VAR_2 . getId ( ) , VAR_3 , false ) ; TYPE_1 . assertEquals ( VAR_3 , dao . get ( VAR_2 . getId ( ) ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) ) ( getId . VAR_2 ( get . dao , VAR_3 ( assertEquals . TYPE_1 ; ) false , VAR_3 , ) ( getId . VAR_2 ( METHOD_4 . dao ; ) VAR_3 ( METHOD_4 . VAR_2 ; ) VAR_3 , VAR_1 ( METHOD_3 . TYPE_1 ; STRING_1 = VAR_3 java.lang.String ; ) ( METHOD_2 . VAR_2 = VAR_1 java.lang.String { ) ( METHOD_1 void public 
private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { addCanDoActionMessage ( VAR_1 ) ; TYPE_1 . getReturnValue ( ) . METHOD_3 ( ) . add ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) ; return false ; } return true ; } } ; true return } ; false return ; ) ) ) VAR_3 ( METHOD_5 > java.lang.Integer < VAR_2 , STRING_1 ( METHOD_4 . java.lang.String ( add . ) ( METHOD_3 . ) ( getReturnValue . TYPE_1 ; ) VAR_1 ( addCanDoActionMessage { ) ) ( METHOD_2 ( if { ) ( METHOD_1 boolean private 
protected void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( ) . METHOD_4 ( new TYPE_1 ( ) { public void METHOD_6 ( TYPE_2 VAR_3 , java.lang.Object sender , TYPE_3 args ) { user . METHOD_7 ( ) ; } } ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_8 ( METHOD_9 ( ) ) ; TYPE_4 . getInstance ( ) . METHOD_10 ( new TYPE_5 ( TYPE_6 . METHOD_11 ( ) ) ) ; } } ; ) ) ) ( METHOD_11 . TYPE_6 ( TYPE_5 new ( METHOD_10 . ) ( getInstance . TYPE_4 ; ) ) ( METHOD_9 ( METHOD_8 . org.ovirt.engine.ui.frontend.Frontend ; ) } } ; ) ( METHOD_7 . user { ) args TYPE_3 , sender java.lang.Object , VAR_3 TYPE_2 ( METHOD_6 void public { ) ( TYPE_1 new ( METHOD_4 . ) ( METHOD_5 . org.ovirt.engine.ui.frontend.Frontend ; ) VAR_2 ( METHOD_4 . ) ( METHOD_3 . org.ovirt.engine.ui.frontend.Frontend ; ) VAR_1 ( METHOD_2 . org.ovirt.engine.ui.frontend.Frontend { ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_3 . VM , VAR_1 ) ) ; VAR_2 . METHOD_5 ( VAR_2 ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; TYPE_4 returnValue = METHOD_7 ( VAR_4 , VAR_2 ) ; if ( returnValue . getSucceeded ( ) ) { METHOD_8 ( returnValue . METHOD_9 ( ) ) ; } } } } ; ) ) ( METHOD_9 . returnValue ( METHOD_8 { ) ) ( getSucceeded . returnValue ( if ; ) VAR_2 , VAR_4 ( METHOD_7 = returnValue TYPE_4 ; ) VAR_4 ( METHOD_6 . VAR_2 ; ) VAR_2 ( METHOD_5 . VAR_2 ; ) ) VAR_1 , VM . VAR_3 ( TYPE_3 new ( METHOD_4 . VAR_2 ; ) VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void protected 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( METHOD_1 ( ) ) ! = ( obj . METHOD_1 ( ) ) ) return false ; TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; if ( ( length ) ! = ( other . length ) ) return false ; if ( ( VAR_1 ) ! = ( VAR_2 ) ) return false ; return true ; } } ; true return ; false return ) ) VAR_2 ( = ! ) VAR_1 ( ( if ; false return ) ) length . other ( = ! ) length ( ( if ; ) ) obj ( ) TYPE_1 ( ( = other TYPE_1 ; false return ) ) ) ( METHOD_1 . obj ( = ! ) ) ( METHOD_1 ( ( if ; false return ) null == obj ( if ; true return ) obj == ) this ( ( if { ) obj java.lang.Object ( equals boolean public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; null : ) ) source ( ) org.ovirt.engine.core.common.businessentities.StorageDomain ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { java.lang.String result = null ; java.lang.String VAR_3 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) , ( VAR_2 == null ? STRING_1 : VAR_2 ) ) . toString ( ) ; if ( ( VAR_2 ! = null ) & & ( TYPE_3 . METHOD_5 ( VAR_3 ) ) ) { result = VAR_3 ; } else { VAR_4 . error ( ( ( STRING_2 + VAR_3 ) + STRING_3 ) ) ; } return result ; } } ; result return } ; ) ) STRING_3 + ) VAR_3 + STRING_2 ( ( ( error . VAR_4 { else } ; VAR_3 = result { ) ) ) VAR_3 ( METHOD_5 . TYPE_3 ( & & ) null = ! VAR_2 ( ( if ; ) ( toString . ) ) VAR_2 : STRING_1 ? null == VAR_2 ( , ) ( METHOD_4 . VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_2 = VAR_3 java.lang.String ; null = result java.lang.String { ) VAR_2 java.lang.String final , VAR_1 TYPE_1 final ( METHOD_1 java.lang.String 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; VAR_1 . METHOD_3 ( false ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_2 , STRING_2 , STRING_3 , VAR_3 , null , null , TYPE_4 . METHOD_5 ( VAR_1 ) ) ) ) ; METHOD_6 ( cmd , VAR_4 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } } ; ) ) ( validate . cmd ( METHOD_7 . TYPE_5 ; ) VAR_4 , cmd ( METHOD_6 ; ) ) ) ) VAR_1 ( METHOD_5 . TYPE_4 , null , null , VAR_3 , STRING_3 , STRING_2 , VAR_2 ( TYPE_3 new ( TYPE_2 new ( METHOD_4 . org.mockito.Mockito = cmd ; ) false ( METHOD_3 . VAR_1 ; ) null , STRING_1 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( TYPE_1 . Disk disk ) throws TYPE_2 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_3 < > ( ) ; VAR_1 . put ( VAR_2 , disk . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( disk . METHOD_3 ( ) ) ! = null ? disk . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 , false ) ; } } ; ) false , VAR_1 ( METHOD_4 . TYPE_4 return ; ) ) STRING_1 : ) ( METHOD_3 . disk ? null = ! ) ) ( METHOD_3 . disk ( ( , VAR_3 ( put . VAR_1 ; ) ) ( METHOD_2 . disk , VAR_2 ( put . VAR_1 ; ) ( > < TYPE_3 new = VAR_1 > java.lang.Object , java.lang.String < java.util.Map { TYPE_2 throws ) disk Disk . TYPE_1 ( METHOD_1 java.lang.String static public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . Disk ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , VAR_1 , aQuery ) ; } } ; ) aQuery , VAR_1 , VAR_3 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) INT_1 ( METHOD_2 . VAR_1 ; ) Disk . VAR_2 , STRING_1 ( TYPE_1 new = VAR_1 TYPE_1 ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList new : ) ) source ( ) > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) throws java.lang.Exception { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk , TYPE_1 . METHOD_5 ( TYPE_1 . METHOD_6 ( STRING_1 ) ) , TYPE_1 . METHOD_7 ( TYPE_1 . METHOD_6 ( STRING_2 ) ) , TYPE_1 . METHOD_8 ( INT_1 ) ) ; TYPE_1 . METHOD_9 ( disk ) ; } } ; ) disk ( METHOD_9 . TYPE_1 ; ) ) INT_1 ( METHOD_8 . TYPE_1 , ) ) STRING_2 ( METHOD_6 . TYPE_1 ( METHOD_7 . TYPE_1 , ) ) STRING_1 ( METHOD_6 . TYPE_1 ( METHOD_5 . TYPE_1 , disk ( METHOD_4 ; ) STRING_2 ( METHOD_3 . disk ; ) STRING_1 ( METHOD_2 . disk { java.lang.Exception throws ) ( METHOD_1 void public 
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 vm ) { TYPE_3 VAR_2 = vm . METHOD_1 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_3 ( ) ; vm . METHOD_2 ( VAR_2 ) ; } TYPE_4 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; } VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( type . value ( ) ) ; return vm ; } } ; vm return ; ) ) ( value . type ( METHOD_6 . VAR_3 ; ) VAR_1 ( METHOD_5 . VAR_3 } ; ) VAR_3 ( METHOD_4 . VAR_2 ; ) ( TYPE_4 new = VAR_3 { ) null == VAR_3 ( if ; ) ( METHOD_3 . VAR_2 = VAR_3 TYPE_4 } ; ) VAR_2 ( METHOD_2 . vm ; ) ( TYPE_3 new = VAR_2 { ) null == VAR_2 ( if ; ) ( METHOD_1 . vm = VAR_2 TYPE_3 { ) vm TYPE_1 , type TYPE_2 , VAR_1 java.lang.String ( map TYPE_1 static public 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String action = args . get ( VAR_1 ) ; if ( TYPE_2 . equals ( action ) ) { METHOD_2 ( ) ; } else if ( TYPE_3 . equals ( action ) ) { METHOD_3 ( ) ; } else if ( TYPE_4 . equals ( action ) ) { METHOD_4 ( ) ; } else if ( TYPE_5 . equals ( action ) ) { validate ( ) ; } else if ( TYPE_6 . equals ( action ) ) { METHOD_5 ( ) ; } } } } ; ) ( METHOD_5 { ) ) action ( equals . TYPE_6 ( if else } ; ) ( validate { ) ) action ( equals . TYPE_5 ( if else } ; ) ( METHOD_4 { ) ) action ( equals . TYPE_4 ( if else } ; ) ( METHOD_3 { ) ) action ( equals . TYPE_3 ( if else } ; ) ( METHOD_2 { ) ) action ( equals . TYPE_2 ( if ; ) VAR_1 ( get . args = action java.lang.String { TYPE_1 throws ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_3 ( TYPE_4 . getVm ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_4 . getParameters ( ) . METHOD_5 ( ) ) ) ; METHOD_6 ( VAR_1 . getSucceeded ( ) ) ; } } ; ) ) ( getSucceeded . VAR_1 ( METHOD_6 ; ) ) ) ( METHOD_5 . ) ( getParameters . TYPE_4 , ) ( getValue . ) ( METHOD_4 . ) ( getVm . TYPE_4 ( TYPE_3 new , VAR_2 ( METHOD_3 . ) ( METHOD_2 . ) ( getInstance . TYPE_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void protected 
public static boolean METHOD_1 ( TYPE_1 < TYPE_2 . DiskImage > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { for ( TYPE_2 . DiskImage image : VAR_1 ) { TYPE_2 . DiskImage VAR_3 = TYPE_3 . METHOD_2 ( VAR_2 , image ) ; if ( VAR_3 == null ) { return false ; } } return true ; } } ; true return } } ; false return { ) null == VAR_3 ( if ; ) image , VAR_2 ( METHOD_2 . TYPE_3 = VAR_3 DiskImage . TYPE_2 { ) VAR_1 : image DiskImage . TYPE_2 ( for { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 > DiskImage . TYPE_2 < TYPE_1 ( METHOD_1 boolean static public 
private void METHOD_1 ( ) { METHOD_2 ( ) ; java.lang.Boolean VAR_1 = ( ! ( METHOD_3 ( ) . METHOD_4 ( ) ) ) || ( METHOD_3 ( ) . getEntity ( ) ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; METHOD_8 ( ) ; METHOD_9 ( ) . METHOD_7 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_7 . ) ( METHOD_9 ; ) ( METHOD_8 ; ) VAR_1 ( METHOD_7 . ) ( METHOD_6 ; ) VAR_1 ( METHOD_5 ; ) ) ( getEntity . ) ( METHOD_3 ( || ) ) ) ( METHOD_4 . ) ( METHOD_3 ( ! ( = VAR_1 java.lang.Boolean ; ) ( METHOD_2 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( false ) ; java.util.List < java.lang.String > VAR_2 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_2 ( new org.ovirt.engine.core.common.businessentities.VDS ( ) , VAR_2 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_2 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , STRING_1 ) ; } } ; ) STRING_1 , ) 0 ( get . VAR_2 ( assertEquals . TYPE_2 ; ) 1 , ) ( size . VAR_2 ( assertEquals . TYPE_2 ; ) result ( METHOD_3 . TYPE_2 ; ) VAR_2 , ) ( org.ovirt.engine.core.common.businessentities.VDS new ( METHOD_2 . validator = result boolean ; ) ( > < TYPE_1 new = VAR_2 > java.lang.String < java.util.List ; ) false ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
void METHOD_1 ( final TYPE_1 < ? extends org.ovirt.engine.ui.uicommonweb.models.EntityModel > VAR_1 ) { VAR_1 . getModel ( ) . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { TYPE_5 VAR_3 = ( ( TYPE_5 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_4 ) ) { boolean VAR_5 = VAR_1 . getModel ( ) . METHOD_5 ( ) ; METHOD_6 ( VAR_5 ) ; } } } ) ; } } ; ) } } } ; ) VAR_5 ( METHOD_6 ; ) ( METHOD_5 . ) ( getModel . VAR_1 = VAR_5 boolean { ) ) VAR_4 ( equals . STRING_1 ( if ; ) ) args ( ) TYPE_5 ( ( = VAR_3 TYPE_5 { ) args TYPE_4 , sender java.lang.Object , VAR_2 TYPE_3 ( METHOD_4 void public { ) ( TYPE_2 new ( METHOD_3 . ) ( METHOD_2 . ) ( getModel . VAR_1 { ) VAR_1 > org.ovirt.engine.ui.uicommonweb.models.EntityModel extends ? < TYPE_1 final ( METHOD_1 void 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { boolean returnValue = true ; java.util.ArrayList < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; if ( TYPE_1 . METHOD_2 ( vmId , VAR_1 ) ) { returnValue = false ; } if ( returnValue ) { if ( ! ( TYPE_1 . METHOD_3 ( vmId , VAR_1 ) ) ) { returnValue = false ; } } return returnValue ; } } ; returnValue return } } ; false = returnValue { ) ) ) VAR_1 , vmId ( METHOD_3 . TYPE_1 ( ! ( if { ) returnValue ( if } ; false = returnValue { ) ) VAR_1 , vmId ( METHOD_2 . TYPE_1 ( if ; ) ( > java.lang.String < java.util.ArrayList new = VAR_1 > java.lang.String < java.util.ArrayList ; true = returnValue boolean { ) vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean static protected 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( getParameters ( ) . METHOD_4 ( ) ) ; METHOD_5 ( getParameters ( ) . METHOD_4 ( ) ) ; METHOD_6 ( true ) ; METHOD_7 ( METHOD_8 ( ) ) ; METHOD_9 ( ) . METHOD_10 ( ) ; return null ; } } ; null return ; ) ( METHOD_10 . ) ( METHOD_9 ; ) ) ( METHOD_8 ( METHOD_7 ; ) true ( METHOD_6 ; ) ) ( METHOD_4 . ) ( getParameters ( METHOD_5 ; ) ) ( METHOD_4 . ) ( getParameters ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , getEntity ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 . Disk disk = resource . get ( ) ; TYPE_2 . METHOD_6 ( disk , 1 ) ; METHOD_7 ( disk ) ; } } ; ) disk ( METHOD_7 ; ) 1 , disk ( METHOD_6 . TYPE_2 ; ) ( get . resource = disk Disk . TYPE_1 ; ) ( METHOD_5 . VAR_4 ; ) ) 1 ( getEntity , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { ) ( METHOD_1 void public 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 parameters ) { final TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters ) ) ; org.mockito.Mockito.when ( command . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( ) ) . thenReturn ( VAR_4 ) ; command . METHOD_7 ( ) ; return command ; } } ; command return ; ) ( METHOD_7 . command ; ) VAR_4 ( thenReturn . ) ) ( METHOD_6 . VAR_1 ( org.mockito.Mockito.when ; ) VAR_3 ( thenReturn . ) ) ( METHOD_5 . VAR_1 ( org.mockito.Mockito.when ; ) VAR_2 ( thenReturn . ) ) ( METHOD_4 . VAR_1 ( org.mockito.Mockito.when ; ) VAR_1 ( thenReturn . ) ) ( METHOD_3 . command ( org.mockito.Mockito.when ; ) ) parameters ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = command > TYPE_2 < TYPE_1 final { ) parameters TYPE_2 ( METHOD_1 > TYPE_2 < TYPE_1 private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_1 < ? > VAR_3 : VAR_2 ) { VAR_3 . METHOD_3 ( true ) ; } } if ( ( VAR_4 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_5 : VAR_4 ) { VAR_5 . METHOD_4 ( ) ; } } VAR_1 . METHOD_2 ( STRING_2 ) ; TYPE_3 . METHOD_5 ( 0 ) ; } } ; ) 0 ( METHOD_5 . TYPE_3 ; ) STRING_2 ( METHOD_2 . VAR_1 } } ; ) ( METHOD_4 . VAR_5 { ) VAR_4 : VAR_5 TYPE_2 ( for { ) 0 > ) ) ( size . VAR_4 ( ( if } } ; ) true ( METHOD_3 . VAR_3 { ) VAR_2 : VAR_3 > ? < TYPE_1 ( for { ) 0 > ) ) ( size . VAR_2 ( ( if ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > ( ) ; if ( VAR_1 ) { return VAR_2 ; } for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_2 . put ( getEntity ( i ) , new TYPE_1 ( ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ( TYPE_1 new , ) i ( getEntity ( put . VAR_2 { ) ++ i ; ) length . VAR_3 ( < i ; 0 = i int ( for } ; VAR_2 return { ) VAR_1 ( if ; ) ( > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap new = VAR_2 > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap { ) VAR_1 boolean ( METHOD_1 > TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate < java.util.HashMap protected 
private void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . METHOD_3 ( ) ; VAR_4 = org.mockito.Mockito . METHOD_2 ( VAR_5 class ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_3 ) . METHOD_4 ( ) ; VAR_6 = org.mockito.Mockito . METHOD_2 ( VAR_7 class ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( VAR_3 ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_6 . get ( VAR_8 ) ) . thenReturn ( VAR_9 ) ; } } ; ) VAR_9 ( thenReturn . ) ) VAR_8 ( get . VAR_6 ( org.mockito.Mockito.when ; ) ( METHOD_5 . ) VAR_3 ( when . ) VAR_6 ( org.mockito.Mockito.doReturn ; ) class VAR_7 ( METHOD_2 . org.mockito.Mockito = VAR_6 ; ) ( METHOD_4 . ) VAR_3 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) class VAR_5 ( METHOD_2 . org.mockito.Mockito = VAR_4 ; ) ( METHOD_3 . ) VAR_3 ( when . ) VAR_1 ( org.mockito.Mockito.doReturn ; ) class VAR_2 ( METHOD_2 . org.mockito.Mockito = VAR_1 { ) ( METHOD_1 void private 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_3 ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) VAR_3 ( METHOD_6 . VAR_1 ( org.mockito.Mockito.when ; ) VAR_3 ( thenReturn . ) ) ( METHOD_5 . ) ( METHOD_4 ( org.mockito.Mockito.when ; ) ( > org.ovirt.engine.core.common.businessentities.VM < java.util.ArrayList new = VAR_2 ; ) VAR_1 ( thenReturn . ) ) ( METHOD_3 . ) ( METHOD_2 ( org.mockito.Mockito.when { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ! ( model . validate ( ) ) ) { return ; } TYPE_2 . VdcActionParametersBase VAR_1 = new TYPE_2 . VdcActionParametersBase ( ) ; TYPE_3 tempVar = new TYPE_3 ( ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( getSelectedItem ( ) ) ) . getId ( ) ) ; tempVar . METHOD_2 ( true ) ; VAR_1 = tempVar ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_2 , VAR_1 ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) VAR_1 , VAR_2 ( METHOD_3 . org.ovirt.engine.ui.frontend.Frontend ; tempVar = VAR_1 ; ) true ( METHOD_2 . tempVar ; ) ) ( getId . ) ) ) ( getSelectedItem ( ) org.ovirt.engine.core.common.businessentities.StoragePool ( ( ( TYPE_3 new = tempVar TYPE_3 ; ) ( VdcActionParametersBase . TYPE_2 new = VAR_1 VdcActionParametersBase . TYPE_2 } ; return { ) ) ) ( validate . model ( ! ( if ; ) ) ) ( getWindow ( ) TYPE_1 ( ( = model TYPE_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( ) , VAR_1 < java.lang.String > METHOD_7 ( VAR_2 ) ) ) ; TYPE_4 . METHOD_2 ( TYPE_1 . METHOD_8 ( ) ) ; TYPE_5 VAR_3 = VAR_4 ; TYPE_6 . getInstance ( ) . METHOD_9 ( VAR_5 class , VAR_3 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_10 ( VAR_3 . METHOD_11 ( ) ) ; } } ; ) ) ( METHOD_11 . VAR_3 ( METHOD_10 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ; ) VAR_3 , class VAR_5 ( METHOD_9 . ) ( getInstance . TYPE_6 ; VAR_4 = VAR_3 TYPE_5 ; ) ) ( METHOD_8 . TYPE_1 ( METHOD_2 . TYPE_4 ; ) ) ) VAR_2 ( METHOD_7 > java.lang.String < VAR_1 , ) ( METHOD_6 . ) ( METHOD_5 . ) ( getInstance . TYPE_3 ( METHOD_4 . ) ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void private 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) || ( ! ( VAR_2 ) ) ) { VAR_3 . METHOD_2 ( ) ; } else { java.lang.String [ ] VAR_4 = ( ( java.lang.String [ ] ) ( VAR_3 . METHOD_3 ( VAR_5 ) ) ) ; VAR_6 . METHOD_4 ( VAR_7 , STRING_1 ) ; for ( java.lang.String VAR_8 : VAR_4 ) { VAR_6 . METHOD_4 ( VAR_7 , VAR_8 ) ; } } return null ; } } ; null return } } ; ) VAR_8 , VAR_7 ( METHOD_4 . VAR_6 { ) VAR_4 : VAR_8 java.lang.String ( for ; ) STRING_1 , VAR_7 ( METHOD_4 . VAR_6 ; ) ) ) VAR_5 ( METHOD_3 . VAR_3 ( ) ] [ java.lang.String ( ( = VAR_4 ] [ java.lang.String { else } ; ) ( METHOD_2 . VAR_3 { ) ) ) VAR_2 ( ! ( || ) VAR_1 ( ( if { java.lang.Exception throws ) ( METHOD_1 java.lang.Object public 
protected void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( ) . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; METHOD_6 ( ) ; TYPE_1 . getReturnValue ( ) . METHOD_7 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ; TYPE_1 . METHOD_8 ( true ) ; } } ; ) true ( METHOD_8 . TYPE_1 ; ) ) ( getId . ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( METHOD_7 . ) ( getReturnValue . TYPE_1 ; ) ( METHOD_6 ; ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( METHOD_5 . ) ( METHOD_4 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ; ) ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( setId . ) ( METHOD_2 . ) ( getParameters . TYPE_1 { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_3 ) ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_2 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_9 . ) ) ( METHOD_8 . org.mockito.Mockito , VAR_2 ( METHOD_7 . org.mockito.Mockito ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_3 . ) VAR_2 ( METHOD_7 . org.mockito.Mockito ; ) ) ( METHOD_6 . cmd ( METHOD_5 . TYPE_3 ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_3 . ) VAR_2 ( when . ) ) VAR_3 ( ValidationResult . TYPE_1 new ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) VAR_2 ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 response , final TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 { TYPE_6 VAR_3 = METHOD_2 ( ( ( TYPE_7 ) ( VAR_1 ) ) ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_3 ) ; METHOD_4 ( ( ( TYPE_8 ) ( response ) ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) ; VAR_2 . METHOD_1 ( VAR_1 , response ) ; } } ; ) response , VAR_1 ( METHOD_1 . VAR_2 ; ) VAR_3 , ) ( METHOD_5 . VAR_1 , ) ) response ( ) TYPE_8 ( ( ( METHOD_4 ; ) VAR_3 , VAR_4 ( METHOD_3 . VAR_1 ; ) ) ) VAR_1 ( ) TYPE_7 ( ( ( METHOD_2 = VAR_3 TYPE_6 { TYPE_5 , TYPE_4 throws ) VAR_2 TYPE_3 final , response TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } } } ; ) ) ( getStatus . ) ( METHOD_7 . VAR_5 , INT_1 ( assertEquals ; ) ) ( METHOD_7 . VAR_5 ( METHOD_6 { ) VAR_5 TYPE_1 ( catch } ; ) STRING_2 ( METHOD_5 ; ) ( METHOD_4 . resource { try ; ) ( METHOD_3 . VAR_4 ; ) null , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 , STRING_3 ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 . getId ( ) , VAR_1 . getName ( ) , STRING_4 ) ; TYPE_4 . METHOD_4 ( METHOD_5 ( VAR_2 ) . METHOD_6 ( VAR_3 ) , TYPE_5 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . TYPE_5 , ) VAR_3 ( METHOD_6 . ) VAR_2 ( METHOD_5 ( METHOD_4 . TYPE_4 ; ) STRING_4 , ) ( getName . VAR_1 , ) ( getId . VAR_1 ( TYPE_3 new = VAR_3 TYPE_3 ; ) ) VAR_1 ( METHOD_3 . TYPE_2 ( > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.ArrayList new = VAR_2 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.List ; ) ) STRING_3 , STRING_2 ( METHOD_3 . TYPE_2 ( METHOD_2 . VAR_1 ; ) STRING_1 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.lang.Object [ ] VAR_1 ) { vds . METHOD_2 ( ) . add ( iface ) ; if ( VAR_1 ! = null ) { for ( java.lang.Object name : VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 : vds . METHOD_2 ( ) ) { if ( VAR_2 . getName ( ) . equals ( name . toString ( ) ) ) { VAR_2 . METHOD_3 ( iface . getName ( ) ) ; } } } } } } } } } } ; ) ) ( getName . iface ( METHOD_3 . VAR_2 { ) ) ) ( toString . name ( equals . ) ( getName . VAR_2 ( if { ) ) ( METHOD_2 . vds : VAR_2 VdsNetworkInterface . org.ovirt.engine.core.common.businessentities ( for { ) VAR_1 : name java.lang.Object ( for { ) null = ! VAR_1 ( if ; ) iface ( add . ) ( METHOD_2 . vds { ) VAR_1 ] [ java.lang.Object , iface VdsNetworkInterface . org.ovirt.engine.core.common.businessentities , vds org.ovirt.engine.core.common.businessentities.VDS ( METHOD_1 void static private 
protected boolean METHOD_1 ( ) { if ( ( ! ( super . METHOD_1 ( ) ) ) || ( ! ( TYPE_1 . METHOD_2 ( ) ) ) ) { return false ; } VAR_1 = TYPE_1 . METHOD_3 ( ) . get ( TYPE_1 . METHOD_4 ( ) . getId ( ) ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; return METHOD_7 ( ) ; } } ; ) ( METHOD_7 return ; ) ) ( METHOD_6 . VAR_1 ( METHOD_5 . ) ( METHOD_4 . TYPE_1 ; ) ) ( getId . ) ( METHOD_4 . TYPE_1 ( get . ) ( METHOD_3 . TYPE_1 = VAR_1 } ; false return { ) ) ) ) ( METHOD_2 . TYPE_1 ( ! ( || ) ) ) ( METHOD_1 . super ( ! ( ( if { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , aQuery ) ; } } ; ) aQuery , ) ) ( METHOD_5 , VAR_1 ( TYPE_1 new ( METHOD_4 ; } } ; 1 : ) ( METHOD_3 . ) ) source ( ) java.lang.Integer ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( METHOD_2 java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { TYPE_1 parameters = new TYPE_1 ( TYPE_2 . getVm ( ) . getId ( ) , VAR_1 ) ; parameters . METHOD_2 ( false ) ; parameters . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; parameters . METHOD_5 ( TYPE_2 . getParameters ( ) ) ; parameters . METHOD_6 ( TYPE_2 . getParameters ( ) . METHOD_7 ( ) ) ; parameters . METHOD_8 ( VAR_2 ) ; return parameters ; } } ; parameters return ; ) VAR_2 ( METHOD_8 . parameters ; ) ) ( METHOD_7 . ) ( getParameters . TYPE_2 ( METHOD_6 . parameters ; ) ) ( getParameters . TYPE_2 ( METHOD_5 . parameters ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_3 . parameters ; ) false ( METHOD_2 . parameters ; ) VAR_1 , ) ( getId . ) ( getVm . TYPE_2 ( TYPE_1 new = parameters TYPE_1 { ) ( METHOD_1 TYPE_1 private 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; TYPE_2 VAR_3 = ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_4 = new java.util.ArrayList < > ( ) ; TYPE_4 VAR_5 = VAR_3 . METHOD_1 ( ) ; while ( VAR_5 . METHOD_2 ( ) ) { VAR_4 . add ( ( ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ) ( VAR_5 . METHOD_3 ( ) ) ) ) ; } VAR_2 . METHOD_4 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_4 . VAR_2 } ; ) ) ) ) ( METHOD_3 . VAR_5 ( ) org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( ( ( add . VAR_4 { ) ) ( METHOD_2 . VAR_5 ( while ; ) ( METHOD_1 . VAR_3 = VAR_5 TYPE_4 ; ) ( > < java.util.ArrayList new = VAR_4 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.ArrayList ; ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_3 ( ( = VAR_3 TYPE_2 ; ) ) model ( ) TYPE_1 ( ( = VAR_2 TYPE_1 { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_4 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . get ( TYPE_1 . any ( VAR_7 . Guid class ) ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . TYPE_3 , ) ( METHOD_6 . validator ( METHOD_5 . TYPE_2 ; ) VAR_4 ( thenReturn . ) ) ) class Guid . VAR_7 ( any . TYPE_1 ( get . VAR_6 ( org.mockito.Mockito.when ; ) VAR_5 ( METHOD_4 . VAR_4 ; ) ( org.ovirt.engine.core.common.businessentities.StoragePool new = VAR_4 org.ovirt.engine.core.common.businessentities.StoragePool ; ) VAR_3 ( METHOD_3 . VAR_1 ; ) VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; for ( java.lang.String VAR_3 : TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_4 = VAR_2 . get ( VAR_3 ) ; VAR_4 . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_6 . ) ( METHOD_5 . VAR_4 ; ) VAR_3 ( get . VAR_2 = VAR_4 org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface { ) ) ( METHOD_4 . ) ( getParameters . TYPE_1 : VAR_3 java.lang.String ( for ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 = VAR_2 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , java.lang.String < java.util.Map { ) VAR_1 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , java.lang.String < java.util.Map ( METHOD_1 void private 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 model ) { if ( METHOD_2 ( ) ) { return getEntity ( VAR_1 . VM class , VAR_2 , new TYPE_2 ( METHOD_3 ( model . getId ( ) ) ) , model . getId ( ) ) ; } return getEntity ( VAR_1 . VM class , VAR_3 . VM , ( STRING_1 + ( model . getName ( ) ) ) ) ; } } ; ) ) ) ) ( getName . model ( + STRING_1 ( , VM . VAR_3 , class VM . VAR_1 ( getEntity return } ; ) ) ( getId . model , ) ) ) ( getId . model ( METHOD_3 ( TYPE_2 new , VAR_2 , class VM . VAR_1 ( getEntity return { ) ) ( METHOD_2 ( if { ) model TYPE_1 ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM private 
private void METHOD_1 ( boolean VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( vm ) ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_5 ( vm . getId ( ) ) ) . thenReturn ( vm . METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 . vm ( thenReturn . ) ) ) ( getId . vm ( METHOD_5 . VAR_6 ( org.mockito.Mockito.when ; ) ) vm ( METHOD_4 . TYPE_3 ( thenReturn . ) ) ) class Guid . VAR_5 ( any . TYPE_2 ( METHOD_3 . VAR_4 ( org.mockito.Mockito.when ; ) VAR_1 , VAR_3 , VAR_2 ( METHOD_2 . TYPE_1 = vm org.ovirt.engine.core.common.businessentities.VM { ) VAR_1 boolean ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String name , java.lang.String value ) { VAR_1 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 , STRING_2 ) ; VAR_1 . METHOD_2 ( VAR_4 , VAR_2 ) ; VAR_1 . METHOD_3 ( name , value ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_1 ; ) ( METHOD_4 . VAR_1 ; ) ( METHOD_4 . VAR_1 ; ) value , name ( METHOD_3 . VAR_1 ; ) VAR_2 , VAR_4 ( METHOD_2 . VAR_1 ; ) STRING_2 , VAR_3 ( METHOD_2 . VAR_1 ; ) STRING_1 , VAR_3 ( METHOD_2 . VAR_1 { ) value java.lang.String , name java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) ) ; VAR_2 = new TYPE_4 ( VAR_3 ) ; VAR_4 = new TYPE_4 ( VAR_3 ) ; VAR_5 = new TYPE_5 < org.ovirt.engine.core.common.businessentities.VDS > ( new TYPE_6 < org.ovirt.engine.core.common.businessentities.VDS > ( ) { public java.lang.String METHOD_2 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . METHOD_3 ( ) ; } } ) ; } } ; ) } } ; ) ( METHOD_3 . vds return { ) vds org.ovirt.engine.core.common.businessentities.VDS ( METHOD_2 java.lang.String public { ) ( > org.ovirt.engine.core.common.businessentities.VDS < TYPE_6 new ( > org.ovirt.engine.core.common.businessentities.VDS < TYPE_5 new = VAR_5 ; ) VAR_3 ( TYPE_4 new = VAR_4 ; ) VAR_3 ( TYPE_4 new = VAR_2 ; ) ) ( > TYPE_2 < TYPE_3 new ( > TYPE_2 < TYPE_1 new = VAR_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( new TYPE_1 . DiskImage ( ) ) ; TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , null , VAR_1 , null ) , true , null ) ; } } ; ) null , true , ) null , VAR_1 , null , ) ( org.ovirt.engine.core.common.businessentities.VM new ( METHOD_3 . VAR_2 ( METHOD_2 . TYPE_2 ; ) ) ( DiskImage . TYPE_1 new ( add . VAR_1 ; ) ( > < java.util.ArrayList new = VAR_1 > Disk . TYPE_1 < java.util.List { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( VAR_7 class , VAR_8 ) ; } } ; ) VAR_8 , class VAR_7 ( METHOD_9 . VAR_6 ; ) ) ( METHOD_8 . TYPE_2 ( METHOD_7 . ) VAR_1 ( when . ) ( METHOD_6 . org.mockito.Mockito ; ) ( METHOD_5 . ) VAR_1 ( when . ) VAR_5 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) VAR_1 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) VAR_1 ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ) VAR_2 ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { java.lang.String [ ] VAR_1 = this . METHOD_2 ( ) ; this . VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String id : VAR_1 ) { if ( ! ( TYPE_1 . equals ( id ) ) ) { VAR_2 . add ( id ) ; } } } } } } ; ) id ( add . VAR_2 { ) ) ) id ( equals . TYPE_1 ( ! ( if { ) VAR_1 : id java.lang.String ( for ; ) ( > < java.util.ArrayList new = VAR_2 . this ; ) ( METHOD_2 . this = VAR_1 ] [ java.lang.String { ) ( METHOD_1 void private 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; VAR_1 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . VAR_1 ; ) VAR_2 ( add . ) ( METHOD_3 . VAR_1 ; ) ) ) returnValue ( ) > TYPE_2 < java.util.ArrayList ( ( ( METHOD_2 . VAR_1 ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ) ; java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( TYPE_3 < TYPE_1 > ) ( returnValue ) ) ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_4 ( ) . setItems ( VAR_1 ) ; } } ; ) VAR_1 ( setItems . ) ( METHOD_4 ; ) null , 0 ( add . VAR_1 ; ) ) ) ) returnValue ( ) > TYPE_1 < TYPE_3 ( ( ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_2 = VAR_1 > TYPE_1 < java.util.List ; ) ( METHOD_1 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 , boolean VAR_3 , boolean VAR_4 ) { TYPE_1 action = null ; if ( VAR_2 ) { action = VAR_5 ; } else if ( VAR_3 ) { action = VAR_6 ; } else if ( VAR_4 ) { action = VAR_7 ; } return action ; } } ; action return } ; VAR_7 = action { ) VAR_4 ( if else } ; VAR_6 = action { ) VAR_3 ( if else } ; VAR_5 = action { ) VAR_2 ( if ; null = action TYPE_1 { ) VAR_4 boolean , VAR_3 boolean , VAR_2 boolean , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . add ( VAR_3 , java.lang.Boolean . toString ( VAR_1 ) ) ; int VAR_4 = TYPE_1 . getParameters ( ) . METHOD_3 ( ) . getValue ( ) ; VAR_5 = TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_4 , VAR_2 ) ; TYPE_1 . METHOD_6 ( ) ; METHOD_7 ( TYPE_1 . METHOD_8 ( VAR_6 ) ) ; } } ; ) ) VAR_6 ( METHOD_8 . TYPE_1 ( METHOD_7 ; ) ( METHOD_6 . TYPE_1 ; ) VAR_2 , VAR_4 ( METHOD_5 . ) ( METHOD_4 . TYPE_1 = VAR_5 ; ) ( getValue . ) ( METHOD_3 . ) ( getParameters . TYPE_1 = VAR_4 int ; ) ) VAR_1 ( toString . java.lang.Boolean , VAR_3 ( add . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 ; ) ( METHOD_2 . ) ( getParameters . TYPE_1 = VAR_1 boolean { ) ( METHOD_1 void protected 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , false , true ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) true , false , ) ) ( METHOD_5 . TYPE_2 ( METHOD_4 . ) ( METHOD_3 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( METHOD_2 . TYPE_1 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List private 
public TYPE_1 . ValidationResult METHOD_1 ( ) { TYPE_1 . ValidationResult VAR_1 = METHOD_2 ( vm ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return VAR_1 ; } VAR_1 = METHOD_4 ( vm , METHOD_5 ( ) , METHOD_6 ( ) ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return VAR_1 ; } VAR_1 = METHOD_7 ( METHOD_8 ( ) , METHOD_6 ( ) ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return VAR_1 ; } return VAR_2 ; } } ; VAR_2 return } ; VAR_1 return { ) ) ) ( METHOD_3 . VAR_1 ( ! ( if ; ) ) ( METHOD_6 , ) ( METHOD_8 ( METHOD_7 = VAR_1 } ; VAR_1 return { ) ) ) ( METHOD_3 . VAR_1 ( ! ( if ; ) ) ( METHOD_6 , ) ( METHOD_5 , vm ( METHOD_4 = VAR_1 } ; VAR_1 return { ) ) ) ( METHOD_3 . VAR_1 ( ! ( if ; ) vm ( METHOD_2 = VAR_1 ValidationResult . TYPE_1 { ) ( METHOD_1 ValidationResult . TYPE_1 public 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.String value ) { TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; if ( ( value == null ) || ( TYPE_2 . METHOD_2 ( value ) ) ) { result . METHOD_3 ( false ) ; result . METHOD_4 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) ) ; } return result ; } } ; result return } ; ) ) ( METHOD_5 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( add . ) ( METHOD_4 . result ; ) false ( METHOD_3 . result { ) ) ) value ( METHOD_2 . TYPE_2 ( || ) null == value ( ( if ; ) ( ValidationResult . TYPE_1 new = result ValidationResult . TYPE_1 { ) value java.lang.String ( METHOD_1 ValidationResult . TYPE_1 public 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 returnValue ; if ( VAR_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ) { returnValue = VAR_1 . get ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ; } else { VAR_1 . put ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) , new TYPE_1 ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ) ; returnValue = VAR_1 . get ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ; } return returnValue ; } } ; returnValue return } ; ) ) ( getStoragePoolId . ) ( getParameters . TYPE_2 ( get . VAR_1 = returnValue ; ) ) ) ( getStoragePoolId . ) ( getParameters . TYPE_2 ( TYPE_1 new , ) ( getStoragePoolId . ) ( getParameters . TYPE_2 ( put . VAR_1 { else } ; ) ) ( getStoragePoolId . ) ( getParameters . TYPE_2 ( get . VAR_1 = returnValue { ) ) ) ( getStoragePoolId . ) ( getParameters . TYPE_2 ( METHOD_2 . VAR_1 ( if ; returnValue TYPE_1 { ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; TYPE_3 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_4 ( METHOD_7 . ) ( METHOD_6 . ) ( getReturnValue . cmd ( METHOD_5 . TYPE_3 ; ) ) ( METHOD_4 . cmd ( METHOD_3 . TYPE_3 ; ) ) ) null ( TYPE_2 new ( > TYPE_2 < TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_1 ) ) { TYPE_1 . METHOD_4 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; } else { VAR_2 . METHOD_5 ( STRING_1 , TYPE_1 . getParameters ( ) . getStoragePoolId ( ) ) ; METHOD_4 ( TYPE_3 . getInstance ( ) . METHOD_6 ( VAR_3 , new TYPE_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) . getReturnValue ( ) ) ; } } } } ; ) ) ( getReturnValue . ) ) ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 ( TYPE_4 new , VAR_3 ( METHOD_6 . ) ( getInstance . TYPE_3 ( METHOD_4 ; ) ) ( getStoragePoolId . ) ( getParameters . TYPE_1 , STRING_1 ( METHOD_5 . VAR_2 { else } ; ) ) ( > TYPE_2 < java.util.ArrayList new ( METHOD_4 . TYPE_1 { ) ) VAR_1 ( equals . ) ( METHOD_3 . ) ( METHOD_2 . TYPE_1 ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; METHOD_3 ( false ) ; cmd . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , cmd , VAR_2 ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) , TYPE_2 . any ( VAR_5 class ) ) ; org.mockito.Mockito . METHOD_6 ( cmd , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; } } ; ) ( METHOD_10 . ) ) 0 ( METHOD_7 . org.mockito.Mockito , cmd ( METHOD_6 . org.mockito.Mockito ; ) ) class VAR_5 ( any . TYPE_2 , ) VAR_4 ( METHOD_9 . TYPE_2 ( METHOD_8 . ) ) 1 ( METHOD_7 . org.mockito.Mockito , VAR_3 ( METHOD_6 . org.mockito.Mockito ; ) VAR_2 , cmd , STRING_1 ( METHOD_5 . TYPE_1 ; ) ( METHOD_4 . cmd ; ) false ( METHOD_3 ; ) null ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { if ( ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) ) ) { return ; } if ( TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) { VAR_2 . METHOD_6 ( METHOD_7 ( ) ) ; } else { VAR_2 . METHOD_6 ( null ) ; } VAR_2 . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . VAR_2 } ; ) null ( METHOD_6 . VAR_2 { else } ; ) ) ( METHOD_7 ( METHOD_6 . VAR_2 { ) ) ) ( METHOD_5 . VAR_1 ( METHOD_4 . TYPE_1 ( if } ; return { ) ) ) ) ( METHOD_3 ( ! ( || ) ) ) ( METHOD_2 ( ! ( ( if { ) ( METHOD_1 void private 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { final java.util.List < TYPE_2 > VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; final java.util.List < TYPE_2 > VAR_3 = ( ( java.util.List < TYPE_2 > ) ( VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ) ) ; for ( final TYPE_2 VAR_4 : VAR_3 ) { { TYPE_2 user = METHOD_4 ( VAR_4 , METHOD_3 ( ) . METHOD_5 ( ) ) ; VAR_2 . add ( user ) ; } } METHOD_6 ( VAR_2 ) ; METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 ; ) VAR_2 ( METHOD_6 } } ; ) user ( add . VAR_2 ; ) ) ( METHOD_5 . ) ( METHOD_3 , VAR_4 ( METHOD_4 = user TYPE_2 { { ) VAR_3 : VAR_4 TYPE_2 final ( for ; ) ) ) ) ( METHOD_3 ( METHOD_2 . VAR_1 ( ) > TYPE_2 < java.util.List ( ( = VAR_3 > TYPE_2 < java.util.List final ; ) ( > TYPE_2 < java.util.ArrayList new = VAR_2 > TYPE_2 < java.util.List final { ) VAR_1 TYPE_1 ( METHOD_1 void protected 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { if ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) == true ) { METHOD_3 ( ) . setEntity ( true ) ; METHOD_3 ( ) . setIsChangable ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; } } } } ; ) true ( setIsChangable . ) ( METHOD_3 { else } ; ) false ( setIsChangable . ) ( METHOD_3 ; ) true ( setEntity . ) ( METHOD_3 { ) true == ) ) ) ( getEntity . ) ( METHOD_2 ( ) java.lang.Boolean ( ( ( if { ) args TYPE_1 , sender java.lang.Object ( METHOD_1 void private 
public java.util.Map METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { try { log . METHOD_2 ( STRING_1 , new java.lang.Object [ ] { VAR_2 , VAR_1 } ) ; final TYPE_1 VAR_3 = METHOD_3 ( VAR_2 ) ; final TYPE_2 . StorageDomain storageDomain = VAR_3 . METHOD_4 ( ) . get ( VAR_1 ) ; storageDomain . METHOD_5 ( VAR_4 ) ; METHOD_6 ( storageDomain ) ; return METHOD_7 ( ) ; } catch ( java.lang.Exception e ) { throw error ( e ) ; } } } } ; ) e ( error throw { ) e java.lang.Exception ( catch } ; ) ( METHOD_7 return ; ) storageDomain ( METHOD_6 ; ) VAR_4 ( METHOD_5 . storageDomain ; ) VAR_1 ( get . ) ( METHOD_4 . VAR_3 = storageDomain StorageDomain . TYPE_2 final ; ) VAR_2 ( METHOD_3 = VAR_3 TYPE_1 final ; ) } VAR_1 , VAR_2 { ] [ java.lang.Object new , STRING_1 ( METHOD_2 . log { try { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.util.Map public 
public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) & & ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; } } ; list return } } ; ) ) ( getName . VAR_3 ( add . list { ) ) ) ) ( getName . VAR_3 ( METHOD_3 . VAR_2 ( & & ) ) ) ( METHOD_2 . VAR_3 ( ! ( ( if { ) VAR_1 : VAR_3 network . org.ovirt.engine.core.common.businessentities ( for ; ) ( > java.lang.String < java.util.ArrayList new = list > java.lang.String < java.util.List { ) VAR_2 > java.lang.String < TYPE_1 , VAR_1 > network . org.ovirt.engine.core.common.businessentities < java.util.List ( METHOD_1 > java.lang.String < java.util.List static public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , TYPE_4 VAR_4 , TYPE_5 VAR_5 , TYPE_6 VAR_6 , TYPE_7 VAR_7 , TYPE_8 VAR_8 , TYPE_9 VAR_9 , TYPE_10 VAR_10 , TYPE_11 constants ) { VAR_11 . add ( new TYPE_12 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , constants ) ) ; } } ; ) ) constants , VAR_10 , VAR_9 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_12 new ( add . VAR_11 { ) constants TYPE_11 , VAR_10 TYPE_10 , VAR_9 TYPE_9 , VAR_8 TYPE_8 , VAR_7 TYPE_7 , VAR_6 TYPE_6 , VAR_5 TYPE_5 , VAR_4 TYPE_4 , VAR_3 TYPE_3 , VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) { frontend . METHOD_2 ( VAR_1 ) ; frontend . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; frontend . METHOD_5 ( ) . METHOD_4 ( new TYPE_1 ( ) { public void METHOD_6 ( TYPE_2 VAR_3 , java.lang.Object sender , TYPE_3 args ) { user . METHOD_7 ( ) ; } } ) ; frontend . METHOD_8 ( METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 ( METHOD_8 . frontend ; ) } } ; ) ( METHOD_7 . user { ) args TYPE_3 , sender java.lang.Object , VAR_3 TYPE_2 ( METHOD_6 void public { ) ( TYPE_1 new ( METHOD_4 . ) ( METHOD_5 . frontend ; ) VAR_2 ( METHOD_4 . ) ( METHOD_3 . frontend ; ) VAR_1 ( METHOD_2 . frontend { ) ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } } ; ) aQuery , params , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; ) VAR_1 ( METHOD_2 . params ; ) vmId ( org.ovirt.engine.core.common.queries.IdQueryParameters new = params org.ovirt.engine.core.common.queries.IdQueryParameters ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.ArrayList new return } ; source return { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 boolean , vmId org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_3 ( ) . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } } ) , id ) ; } } ; ) id , ) } } ; ) ) ) returnValue ( ) java.lang.Boolean ( ( ( setEntity . ) ( METHOD_3 . ) ( getModel { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , ) ( getModel ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_1 { ) id org.ovirt.engine.core.compat.Guid ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , false , false , false ) ; METHOD_2 ( 1 , true , true , true ) ; METHOD_3 ( VAR_1 [ 1 ] ) ; METHOD_4 ( METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( getModel ( 0 ) ) , 0 ) ; } } ; ) 0 , ) ) 0 ( getModel ( METHOD_7 . resource ( METHOD_6 ; ) ) true , true , } { ] [ java.lang.Object new , } { ] [ java.lang.String new , class VAR_3 , VAR_2 ( METHOD_5 ( METHOD_4 ; ) ] 1 [ VAR_1 ( METHOD_3 ; ) true , true , true , 1 ( METHOD_2 ; ) false , false , false , 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_11 ; ) VAR_4 ( METHOD_10 ; ) VAR_4 ( METHOD_9 ; ) VAR_4 ( METHOD_8 ; ) VAR_4 ( METHOD_7 ; ) parameters ( METHOD_6 = VAR_4 TYPE_2 ; ) VAR_3 ( METHOD_5 . parameters ; ) VAR_1 ( add . VAR_3 ; ) ( TYPE_1 new = parameters TYPE_1 ; ) VAR_3 , VAR_1 ( METHOD_4 ; ) ) ( getName . VAR_1 ( METHOD_3 = VAR_3 > VdsNetworkInterface . org.ovirt.engine.core.common.businessentities < java.util.List ; ) null , VAR_2 ( METHOD_2 = VAR_1 VdsNetworkInterface . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; try { TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 , STRING_1 , null ) ; TYPE_4 . METHOD_3 ( VAR_3 ) ; } catch ( java.lang.Exception e ) { return ; } TYPE_5 . METHOD_4 ( STRING_2 ) ; } } ; ) STRING_2 ( METHOD_4 . TYPE_5 } ; return { ) e java.lang.Exception ( catch } ; ) VAR_3 ( METHOD_3 . TYPE_4 ; ) null , STRING_1 , VAR_2 ( TYPE_3 new = VAR_3 TYPE_3 { try ; ) VAR_1 ( METHOD_2 = VAR_2 TYPE_2 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_1 > TYPE_1 < java.util.List { java.lang.Exception throws ) ( METHOD_1 void public 
private java.lang.Integer METHOD_1 ( java.lang.Object entity ) { if ( entity instanceof java.lang.Integer ) { return ( ( java.lang.Integer ) ( entity ) ) ; } if ( ! ( entity instanceof java.lang.String ) ) { return null ; } java.lang.String VAR_1 = ( ( java.lang.String ) ( entity ) ) ; try { return new java.lang.Integer ( VAR_1 ) ; } catch ( java.lang.Exception e ) { return null ; } } } } ; null return { ) e java.lang.Exception ( catch } ; ) VAR_1 ( java.lang.Integer new return { try ; ) ) entity ( ) java.lang.String ( ( = VAR_1 java.lang.String } ; null return { ) ) java.lang.String instanceof entity ( ! ( if } ; ) ) entity ( ) java.lang.Integer ( ( return { ) java.lang.Integer instanceof entity ( if { ) entity java.lang.Object ( METHOD_1 java.lang.Integer private 
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_2 ) . METHOD_4 ( STRING_1 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } } ; VAR_1 return } } ; ) VAR_2 ( add . VAR_1 { ) ) STRING_1 ( METHOD_4 . ) VAR_2 ( METHOD_3 ( if { ) ) ( METHOD_2 : VAR_2 int ( for ; ) ( > < java.util.ArrayList new = VAR_1 > java.lang.Integer < java.util.ArrayList { ) ( METHOD_1 > java.lang.Integer < java.util.ArrayList public 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters , boolean VAR_2 , boolean VAR_3 ) { TYPE_1 returnValue = METHOD_2 ( VAR_1 ) ; if ( returnValue ! = null ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; list . add ( returnValue ) ; return list ; } else { return METHOD_3 ( VAR_1 , parameters , false , VAR_2 , VAR_3 ) ; } } } } ; ) VAR_3 , VAR_2 , false , parameters , VAR_1 ( METHOD_3 return { else } ; list return ; ) returnValue ( add . list ; ) ( > TYPE_1 < java.util.ArrayList new = list > TYPE_1 < java.util.ArrayList { ) null = ! returnValue ( if ; ) VAR_1 ( METHOD_2 = returnValue TYPE_1 { ) VAR_3 boolean , VAR_2 boolean , parameters > VdcActionParametersBase . TYPE_2 < java.util.ArrayList , VAR_1 VdcActionType . TYPE_2 ( METHOD_1 > TYPE_1 < java.util.ArrayList public 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } } ; TYPE_2 . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . TYPE_2 ; } } ; ) ) ) returnValue ( ) > TYPE_1 < java.util.List ( ( ( METHOD_3 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) this ( METHOD_2 . VAR_1 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { TYPE_1 < TYPE_2 > . TYPE_3 validator = new TYPE_3 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) , TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; return ( ( validate ( validator . METHOD_4 ( ) ) ) & & ( validate ( validator . METHOD_5 ( ) ) ) ) & & ( validate ( validator . METHOD_6 ( ) ) ) ; } } ; ) ) ) ( METHOD_6 . validator ( validate ( & & ) ) ) ) ( METHOD_5 . validator ( validate ( & & ) ) ) ( METHOD_4 . validator ( validate ( ( return ; ) ) ( METHOD_3 . ) ( getParameters . TYPE_1 , ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( TYPE_3 new = validator TYPE_3 . > TYPE_2 < TYPE_1 { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_3 . METHOD_6 ( ) , VAR_4 ) ; TYPE_2 . assertEquals ( 1 , VAR_3 . METHOD_7 ( ) . size ( ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_3 . METHOD_7 ( ) . get ( 0 ) . METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 . ) 0 ( get . ) ( METHOD_7 . VAR_3 , STRING_1 ( assertEquals . TYPE_2 ; ) ) ( size . ) ( METHOD_7 . VAR_3 , 1 ( assertEquals . TYPE_2 ; ) VAR_4 , ) ( METHOD_6 . VAR_3 ( assertEquals . TYPE_2 ; ) VAR_3 ( METHOD_5 . TYPE_2 ; ) ( METHOD_4 . VAR_2 = VAR_3 TYPE_1 ; ) VAR_1 ( METHOD_3 . VAR_2 ; ) STRING_2 , STRING_1 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; org.mockito.Mockito.when ( nic . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , validator . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . validator , VAR_1 ( assertEquals . TYPE_2 ; ) VAR_3 ( thenReturn . ) ) ( METHOD_3 . nic ( org.mockito.Mockito.when ; ) VAR_2 , null , VAR_5 ( METHOD_2 . VAR_4 { ) VAR_3 java.lang.String , VAR_2 boolean , VAR_1 ValidationResult . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; } } ; ) } ) id ( METHOD_7 . TYPE_4 , ) ( METHOD_8 . TYPE_4 { ] [ java.lang.Object new , ) VAR_2 ( METHOD_7 . TYPE_4 ( METHOD_6 . ) log ( METHOD_5 . org.mockito.Mockito ; ) ) ( TYPE_3 new , id , log ( METHOD_4 . TYPE_2 ; ) true ( thenReturn . ) ) ( METHOD_3 . log ( org.mockito.Mockito.when ; ) class VAR_1 ( METHOD_2 . org.mockito.Mockito = log TYPE_1 ; STRING_1 = id java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . StoragePool ) , aQuery ) ; } } ; ) aQuery , ) StoragePool . VAR_2 , ) STRING_2 + ) name + STRING_1 ( ( ( TYPE_1 new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) name java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private TYPE_1 < TYPE_2 > METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 ) { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_3 ( vm ) ; TYPE_1 < TYPE_2 > cmd = METHOD_4 ( vm , VAR_4 ) ; TYPE_3 . METHOD_5 ( cmd ) ; return cmd ; } } ; cmd return ; ) cmd ( METHOD_5 . TYPE_3 ; ) VAR_4 , vm ( METHOD_4 = cmd > TYPE_2 < TYPE_1 ; ) vm ( METHOD_3 ; ) VAR_3 , VAR_2 , VAR_1 ( METHOD_2 = vm org.ovirt.engine.core.common.businessentities.VM { ) VAR_4 org.ovirt.engine.core.compat.Guid , VAR_3 int final , VAR_2 int final , VAR_1 int final ( METHOD_1 > TYPE_2 < TYPE_1 private 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; TYPE_2 result = VAR_2 . METHOD_5 ( VAR_3 , VAR_1 ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 ) . METHOD_7 ( org.mockito.Mockito . METHOD_8 ( VAR_5 ) , TYPE_3 . any ( VAR_6 class ) ) ; TYPE_4 . METHOD_9 ( result . getSucceeded ( ) ) ; TYPE_4 . assertEquals ( result . METHOD_10 ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( METHOD_10 . result ( assertEquals . TYPE_4 ; ) ) ( getSucceeded . result ( METHOD_9 . TYPE_4 ; ) ) class VAR_6 ( any . TYPE_3 , ) VAR_5 ( METHOD_8 . org.mockito.Mockito ( METHOD_7 . ) VAR_4 ( METHOD_6 . org.mockito.Mockito ; ) VAR_1 , VAR_3 ( METHOD_5 . VAR_2 = result TYPE_2 ; ) ( METHOD_4 = VAR_1 TYPE_1 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . getInstance ( ) . METHOD_3 ( METHOD_4 ( ) . getId ( ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = METHOD_5 ( ) . getSelectedItem ( ) ; METHOD_5 ( ) . setItems ( ( ( TYPE_2 < java.lang.String > ) ( returnValue ) ) ) ; METHOD_5 ( ) . setSelectedItem ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; } } ) ) ; } } ; ) ) } } ; ) ( METHOD_7 ; ) ( METHOD_6 ; ) VAR_1 ( setSelectedItem . ) ( METHOD_5 ; ) ) ) returnValue ( ) > java.lang.String < TYPE_2 ( ( ( setItems . ) ( METHOD_5 ; ) ( getSelectedItem . ) ( METHOD_5 = VAR_1 java.lang.String { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new ( org.ovirt.engine.ui.frontend.AsyncQuery new , ) ( getId . ) ( METHOD_4 ( METHOD_3 . ) ( getInstance . TYPE_1 ; ) null ( METHOD_2 { ) ( METHOD_1 void private 
private static void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_2 ( STRING_1 , VAR_2 ) ; VAR_4 . METHOD_2 ( STRING_2 , VAR_3 ) ; new TYPE_3 . AuditLogDirector ( ) . log ( VAR_4 , VAR_1 ) ; } } ; ) VAR_1 , VAR_4 ( log . ) ( AuditLogDirector . TYPE_3 new ; ) VAR_3 , STRING_2 ( METHOD_2 . VAR_4 ; ) VAR_2 , STRING_1 ( METHOD_2 . VAR_4 ; ) ( TYPE_2 new = VAR_4 TYPE_2 { ) VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 AuditLogType . TYPE_1 ( METHOD_1 void static private 
private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else { java.util.Map < java.lang.String , java.lang.String > VAR_1 = TYPE_1 . METHOD_5 ( STRING_1 , TYPE_2 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_2 , VAR_1 ) ; return false ; } return true ; } } ; true return } ; false return ; ) VAR_1 , VAR_2 ( METHOD_7 ; ) ) ( METHOD_6 . TYPE_2 , STRING_1 ( METHOD_5 . TYPE_1 = VAR_1 > java.lang.String , java.lang.String < java.util.Map { else } ; ) ( METHOD_4 ; ) ( METHOD_3 { ) ) ( METHOD_2 ( if { ) ( METHOD_1 boolean private 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( 1 ) ; java.util.List < TYPE_2 . Disk > VAR_3 = new java.util.ArrayList ( TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 ) , METHOD_4 ( ) . getId ( ) ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( VAR_5 , METHOD_6 ( ) . getId ( ) , false ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_7 ( ) . METHOD_8 ( ) ) . thenReturn ( VAR_4 ) ; } } ; ) VAR_4 ( thenReturn . ) ) ( METHOD_8 . ) ( METHOD_7 ( org.mockito.Mockito.when ; ) VAR_3 ( thenReturn . ) ) false , ) ( getId . ) ( METHOD_6 , VAR_5 ( METHOD_5 . VAR_4 ( org.mockito.Mockito.when ; ) ) ) ( getId . ) ( METHOD_4 , ) VAR_1 ( METHOD_3 . TYPE_4 ( METHOD_2 . TYPE_3 ( java.util.ArrayList new = VAR_3 > Disk . TYPE_2 < java.util.List ; ) 1 ( get . VAR_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( ) ; entity . METHOD_2 ( VAR_2 . METHOD_1 ( rs , VAR_1 ) ) ; entity . METHOD_3 ( rs.getString ( STRING_1 ) ) ; entity . METHOD_4 ( new org.ovirt.engine.core.compat . Version ( rs.getString ( STRING_2 ) ) ) ; return entity ; } } ; entity return ; ) ) ) STRING_2 ( rs.getString ( Version . org.ovirt.engine.core.compat new ( METHOD_4 . entity ; ) ) STRING_1 ( rs.getString ( METHOD_3 . entity ; ) ) VAR_1 , rs ( METHOD_1 . VAR_2 ( METHOD_2 . entity ; ) ( TYPE_1 new = entity TYPE_1 { TYPE_3 throws ) VAR_1 int , rs TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . setIsChangable ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . setIsChangable ( false ) ; } } } } } } ; ) false ( setIsChangable . ) ( METHOD_3 . VAR_3 { ) VAR_4 ! ( if ; ) false ( setIsChangable . ) ( METHOD_2 . VAR_3 { ) 0 > ) ) ( size . VAR_2 ( ( if ; ) ) result ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_2 > TYPE_1 < java.util.ArrayList { ) result java.lang.Object , VAR_1 java.lang.Object ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object returnValue ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( returnValue ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) , TYPE_3 . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) ) class VAR_4 ( any . TYPE_3 , ) VAR_1 ( METHOD_4 . TYPE_3 ( METHOD_3 . VAR_3 ( org.mockito.Mockito.when ; ) returnValue ( METHOD_2 . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 { ) returnValue java.lang.Object , VAR_1 TYPE_1 ( METHOD_1 void private 
protected final TYPE_1 METHOD_1 ( TYPE_1 entity , int VAR_1 ) { TYPE_2 . METHOD_2 ( entity . getId ( ) ) . METHOD_3 ( VAR_2 [ VAR_1 ] ) . METHOD_4 ( ) ; TYPE_2 . METHOD_2 ( entity . METHOD_5 ( ) ) . METHOD_3 ( VAR_2 [ VAR_1 ] ) . METHOD_4 ( ) ; METHOD_1 ( entity ) ; return entity ; } } ; entity return ; ) entity ( METHOD_1 ; ) ( METHOD_4 . ) ] VAR_1 [ VAR_2 ( METHOD_3 . ) ) ( METHOD_5 . entity ( METHOD_2 . TYPE_2 ; ) ( METHOD_4 . ) ] VAR_1 [ VAR_2 ( METHOD_3 . ) ) ( getId . entity ( METHOD_2 . TYPE_2 { ) VAR_1 int , entity TYPE_1 ( METHOD_1 TYPE_1 final protected 
static org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity , TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( entity . METHOD_3 ( ) ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; TYPE_2 . METHOD_2 ( entity . METHOD_6 ( ) ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; TYPE_2 . METHOD_2 ( entity . METHOD_7 ( ) ) . METHOD_4 ( TYPE_3 . METHOD_7 ( ) ) . METHOD_5 ( ) ; return entity ; } } ; entity return ; ) ( METHOD_5 . ) ) ( METHOD_7 . TYPE_3 ( METHOD_4 . ) ) ( METHOD_7 . entity ( METHOD_2 . TYPE_2 ; ) ( METHOD_5 . ) VAR_1 ( METHOD_4 . ) ) ( METHOD_6 . entity ( METHOD_2 . TYPE_2 ; ) ( METHOD_5 . ) VAR_2 ( METHOD_4 . ) ) ( METHOD_3 . entity ( METHOD_2 . TYPE_2 { ) VAR_1 TYPE_1 , entity org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM static 
public void METHOD_1 ( TYPE_1 < java.util.List < TYPE_2 > > VAR_1 ) { super . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) , false ) ; super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_5 ( ) ; for ( java.util.List < TYPE_2 > value : VAR_1 ) { METHOD_6 ( value ) ; VAR_2 . add ( value . get ( 0 ) ) ; } } } } ; ) ) 0 ( get . value ( add . VAR_2 ; ) value ( METHOD_6 { ) VAR_1 : value > TYPE_2 < java.util.List ( for ; ) ( METHOD_5 . VAR_2 ; ) VAR_1 ( METHOD_1 . super ; ) false , ) ( METHOD_4 . ) ( METHOD_3 . VAR_1 ( METHOD_2 . super { ) VAR_1 > > TYPE_2 < java.util.List < TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; try { resource . METHOD_4 ( new TYPE_1 ( ) ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_1 ) { METHOD_6 ( VAR_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } } } ; ) STRING_5 , STRING_4 , STRING_3 , STRING_2 , VAR_1 ( METHOD_6 { ) VAR_1 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_5 ; ) ) ( TYPE_1 new ( METHOD_4 . resource { try ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( ) . setEntity ( null ) ; boolean VAR_3 = true ; for ( TYPE_2 VAR_4 : VAR_2 . METHOD_3 ( ) ) { if ( ! ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) ) ) { VAR_3 = false ; break ; } } VAR_2 . METHOD_2 ( ) . setEntity ( VAR_3 ) ; } } ; ) VAR_3 ( setEntity . ) ( METHOD_2 . VAR_2 } } ; break ; false = VAR_3 { ) ) ) VAR_4 ( METHOD_5 . ) ( METHOD_4 . VAR_2 ( ! ( if { ) ) ( METHOD_3 . VAR_2 : VAR_4 TYPE_2 ( for ; true = VAR_3 boolean ; ) null ( setEntity . ) ( METHOD_2 . VAR_2 ; ) ) VAR_1 ( ) TYPE_1 ( ( = VAR_2 TYPE_1 { ) VAR_1 java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( final java.util.List < TYPE_1 . VdcActionType > VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final java.util.List < TYPE_2 > VAR_2 , final TYPE_2 VAR_3 , final java.lang.Object VAR_4 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , VAR_3 , VAR_4 , false ) ; } } ; ) false , VAR_4 , VAR_3 , VAR_2 , parameters , VAR_1 ( METHOD_1 { ) VAR_4 java.lang.Object final , VAR_3 TYPE_2 final , VAR_2 > TYPE_2 < java.util.List final , parameters > VdcActionParametersBase . TYPE_1 < java.util.List final , VAR_1 > VdcActionType . TYPE_1 < java.util.List final ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 iface ) { if ( ( TYPE_2 . isEmpty ( iface . METHOD_2 ( ) ) ) & & ( ( TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) ) > 0 ) ) { iface . METHOD_5 ( TYPE_3 . METHOD_3 ( ) . METHOD_6 ( ) ) ; } } } } ; ) ) ( METHOD_6 . ) ( METHOD_3 . TYPE_3 ( METHOD_5 . iface { ) ) 0 > ) ) ( METHOD_4 . ) ( METHOD_3 . TYPE_3 ( ( & & ) ) ) ( METHOD_2 . iface ( isEmpty . TYPE_2 ( ( if { ) iface TYPE_1 ( METHOD_1 void protected 
protected java.util.List < TYPE_1 . Network > METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = getEntity ( VAR_1 . VDS class , VAR_2 , new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( METHOD_3 ( ) ) ) , STRING_1 ) ; return getEntity ( VAR_3 . List class , VAR_4 , new TYPE_3 ( vds . METHOD_4 ( ) ) , STRING_2 ) ; } } ; ) STRING_2 , ) ) ( METHOD_4 . vds ( TYPE_3 new , VAR_4 , class List . VAR_3 ( getEntity return ; ) STRING_1 , ) ) ) ( METHOD_3 ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( TYPE_2 new , VAR_2 , class VDS . VAR_1 ( getEntity = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 > Network . TYPE_1 < java.util.List protected 
private void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { TYPE_1 resource = new TYPE_1 ( id , new TYPE_2 ( VAR_1 ) ) ; resource . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; try { VAR_3 . METHOD_4 ( ) ; resource . get ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_4 ) { assertEquals ( INT_1 , VAR_4 . METHOD_6 ( ) . getStatus ( ) ) ; } } } } ; ) ) ( getStatus . ) ( METHOD_6 . VAR_4 , INT_1 ( assertEquals { ) VAR_4 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_5 ; ) ( get . resource ; ) ( METHOD_4 . VAR_3 { try ; ) VAR_2 ( METHOD_3 . ) ( METHOD_2 . resource ; ) ) VAR_1 ( TYPE_2 new , id ( TYPE_1 new = resource TYPE_1 { java.lang.Exception throws ) id java.lang.String ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) ! = null ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.String VAR_2 : getEntity ( ) . METHOD_2 ( ) . METHOD_3 ( STRING_1 , ( - 1 ) ) ) { VAR_1 . add ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; } setItems ( VAR_1 ) ; } else { setItems ( null ) ; } } } } ; ) null ( setItems { else } ; ) VAR_1 ( setItems } ; ) ) VAR_2 ( METHOD_4 . TYPE_2 ( add . VAR_1 { ) ) ) 1 - ( , STRING_1 ( METHOD_3 . ) ( METHOD_2 . ) ( getEntity : VAR_2 java.lang.String ( for ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_1 > TYPE_1 < java.util.ArrayList { ) null = ! ) ) ( getEntity ( ( if ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat . Version VAR_3 : VAR_4 < TYPE_1 < org.ovirt.engine.core.compat . Version > > getValue ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; } } ; ) STRING_2 ( METHOD_2 . VAR_1 } ; ) ) VAR_3 ( TYPE_2 new , VAR_3 ( put . VAR_2 { ) ) VAR_5 ( getValue > > Version . org.ovirt.engine.core.compat < TYPE_1 < VAR_4 : VAR_3 Version . org.ovirt.engine.core.compat ( for ; ) ( METHOD_3 . VAR_2 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void static public 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_2 ( model ) ; } else if ( STRING_2 . equals ( VAR_2 ) ) { METHOD_3 ( model ) ; METHOD_4 ( model ) ; } } } } ; ) model ( METHOD_4 ; ) model ( METHOD_3 { ) ) VAR_2 ( equals . STRING_2 ( if else } ; ) model ( METHOD_2 { ) ) VAR_2 ( equals . STRING_1 ( if { ) args TYPE_2 , sender java.lang.Object , VAR_1 > TYPE_2 extends ? < TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 ( ) ) ; VAR_2 = new TYPE_3 ( ) ; VAR_3 = new TYPE_4 ( new TYPE_5 ( VAR_4 . METHOD_2 ( ) ) , VAR_2 ) ; VAR_3 . METHOD_3 ( TYPE_6 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ) ; } } ; ) ) ) ( METHOD_5 . VAR_4 ( METHOD_4 . TYPE_6 ( METHOD_3 . VAR_3 ; ) VAR_2 , ) ) ( METHOD_2 . VAR_4 ( TYPE_5 new ( TYPE_4 new = VAR_3 ; ) ( TYPE_3 new = VAR_2 ; ) ) ( TYPE_2 new ( TYPE_1 new = VAR_1 { ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) & & ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { java.lang.String VAR_2 = VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 = new TYPE_2 ( VAR_4 < java.lang.String > METHOD_6 ( VAR_5 ) , METHOD_2 ( ) . METHOD_7 ( ) , METHOD_2 ( ) . METHOD_8 ( ) ) . METHOD_9 ( VAR_2 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_2 ( METHOD_9 . ) ) ( METHOD_8 . ) ( METHOD_2 , ) ( METHOD_7 . ) ( METHOD_2 , ) VAR_5 ( METHOD_6 > java.lang.String < VAR_4 ( TYPE_2 new = VAR_1 ; ) ( METHOD_5 . ) ( METHOD_4 . VAR_3 = VAR_2 java.lang.String { ) ) ) ( METHOD_3 . ) ( METHOD_2 ( & & ) null == ) VAR_1 ( ( ( if { ) ( METHOD_1 TYPE_1 private 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) . get ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( storageDomain . METHOD_4 ( ) ) ) ; java.util.List < TYPE_2 > VAR_3 = METHOD_5 ( ) . METHOD_6 ( VAR_2 . getId ( ) ) ; org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_7 ( ) . get ( VAR_1 ) ; return TYPE_3 . METHOD_8 ( storageDomain , vds , VAR_3 ) ; } } ; ) VAR_3 , vds , storageDomain ( METHOD_8 . TYPE_3 return ; ) VAR_1 ( get . ) ( METHOD_7 = vds org.ovirt.engine.core.common.businessentities.VDS ; ) ) ( getId . VAR_2 ( METHOD_6 . ) ( METHOD_5 = VAR_3 > TYPE_2 < java.util.List ; ) ) ) ( METHOD_4 . storageDomain ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( get . ) ( METHOD_2 = VAR_2 TYPE_1 { ) VAR_1 org.ovirt.engine.core.compat.Guid , storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ( METHOD_1 boolean public 
public void METHOD_1 ( ) { java.util.List < java.lang.String > source = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; TYPE_2 . assertEquals ( STRING_2 , TYPE_3 . METHOD_3 ( source , STRING_2 , STRING_5 ) ) ; TYPE_2 . assertEquals ( STRING_2 , TYPE_3 . METHOD_3 ( source , STRING_5 , STRING_2 ) ) ; TYPE_2 . assertEquals ( null , TYPE_3 . METHOD_3 ( source , null ) ) ; } } ; ) ) null , source ( METHOD_3 . TYPE_3 , null ( assertEquals . TYPE_2 ; ) ) STRING_2 , STRING_5 , source ( METHOD_3 . TYPE_3 , STRING_2 ( assertEquals . TYPE_2 ; ) ) STRING_5 , STRING_2 , source ( METHOD_3 . TYPE_3 , STRING_2 ( assertEquals . TYPE_2 ; ) STRING_4 , STRING_3 , STRING_2 , STRING_1 ( METHOD_2 . TYPE_1 = source > java.lang.String < java.util.List { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . getParameters ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_8 ( ) , null ) ; } } ; ) null , ) ( METHOD_8 . ) ( getParameters . ) ( METHOD_2 , ) ( METHOD_7 . ) ) ( METHOD_6 . ) ( getParameters . ) ( METHOD_2 ( get . ) ( METHOD_5 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance , ) ( METHOD_4 . ) ( getParameters . ) ( METHOD_2 , ) ( METHOD_3 . ) ( getParameters . ) ( METHOD_2 , ) ( getStoragePoolId . ) ( getParameters . ) ( METHOD_2 ( TYPE_2 new return { ) ( METHOD_1 TYPE_1 protected 
private boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( ( ( validate ( VAR_1 . METHOD_3 ( ) ) ) & & ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) & & ( validate ( VAR_1 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ) ) ) & & ( METHOD_1 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_1 ( & & ) ) ) ) ) ( METHOD_6 . TYPE_2 ( METHOD_5 . VAR_1 ( validate ( & & ) ) ) ) ( METHOD_4 . VAR_1 ( validate ( & & ) ) ) ( METHOD_3 . VAR_1 ( validate ( ( ( return ; ) ( METHOD_2 = VAR_1 TYPE_1 final { ) ( METHOD_1 boolean private 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; for ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 } ; return { ) null == VAR_3 ( if } ; ) ) ( toString . ) ( getId . VAR_2 ( METHOD_1 . VAR_3 { ) VAR_1 : VAR_2 org.ovirt.engine.core.common.businessentities.StoragePool ( for ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.List ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.StoragePool < java.util.List { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command , java.lang.Object ... parameters ) { if ( ( ( command == ( METHOD_2 ( ) ) ) & & ( ( parameters . length ) > 0 ) ) & & ( TYPE_1 . equals ( parameters [ 0 ] ) ) ) { this . VAR_1 = true ; super . METHOD_1 ( command , parameters ) ; this . VAR_1 = false ; } } } } ; false = VAR_1 . this ; ) parameters , command ( METHOD_1 . super ; true = VAR_1 . this { ) ) ) ] 0 [ parameters ( equals . TYPE_1 ( & & ) ) 0 > ) length . parameters ( ( & & ) ) ) ( METHOD_2 ( == command ( ( ( if { ) parameters ... java.lang.Object , command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( ) . put ( VAR_2 . METHOD_5 ( ) , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . add ( VAR_2 ) ; return null ; } } ; null return ; ) VAR_2 ( add . ) ( METHOD_6 . VAR_4 ; ) VAR_2 , ) ( METHOD_5 . VAR_2 ( put . ) ( METHOD_4 . VAR_4 ; ) VAR_3 ( METHOD_3 . ) ( METHOD_2 . VAR_2 { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 java.lang.Object public 
protected void METHOD_1 ( TYPE_1 . VM model , int VAR_1 ) { METHOD_2 ( model . METHOD_3 ( ) . getId ( ) ) ; assertEquals ( VAR_2 [ 2 ] . toString ( ) , model . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( model , VAR_1 ) ; } } ; ) VAR_1 , model ( METHOD_4 ; ) ) ( getId . ) ( METHOD_3 . model , ) ( toString . ] 2 [ VAR_2 ( assertEquals ; ) ) ( getId . ) ( METHOD_3 . model ( METHOD_2 { ) VAR_1 int , model VM . TYPE_1 ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 result = METHOD_4 ( VAR_1 , new TYPE_2 ( VAR_3 , VAR_4 class ) , VAR_5 , new TYPE_3 ( ) ) ; if ( result ! = null ) { TYPE_4 . METHOD_5 ( this , result ) ; } return result ; } } ; result return } ; ) result , this ( METHOD_5 . TYPE_4 { ) null = ! result ( if ; ) ) ( TYPE_3 new , VAR_5 , ) class VAR_4 , VAR_3 ( TYPE_2 new , VAR_1 ( METHOD_4 = result TYPE_1 ; ) VAR_1 ( METHOD_3 ; ) VAR_1 , class VAR_2 ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 TYPE_1 public 
private static < TYPE_1 extends TYPE_2 < org.ovirt.engine.core.compat.Guid > & TYPE_3 > boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String name , TYPE_4 < TYPE_1 > map ) { TYPE_1 VAR_1 = map . get ( id ) ; TYPE_1 VAR_2 = map . get ( name ) ; return ! ( TYPE_5 . equals ( VAR_1 , VAR_2 ) ) ; } } ; ) ) VAR_2 , VAR_1 ( equals . TYPE_5 ( ! return ; ) name ( get . map = VAR_2 TYPE_1 ; ) id ( get . map = VAR_1 TYPE_1 { ) map > TYPE_1 < TYPE_4 , name java.lang.String , id org.ovirt.engine.core.compat.Guid ( METHOD_1 boolean > TYPE_3 & > org.ovirt.engine.core.compat.Guid < TYPE_2 extends TYPE_1 < static private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( STRING_2 ) ) ; boolean result = dao . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( result ) ; } } ; ) result ( METHOD_6 . TYPE_2 ; ) VAR_1 ( METHOD_5 . dao = result boolean ; ) ) STRING_2 ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_1 ; ) ) STRING_1 ( METHOD_2 . org.ovirt.engine.core.compat.Guid ( get . dao = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_4 ( METHOD_7 . ) ( METHOD_6 . ) ( getReturnValue . cmd ( METHOD_5 . TYPE_3 ; ) ) ( validate . cmd ( METHOD_4 . TYPE_3 ; ) VAR_2 ( METHOD_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; VAR_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_4 ) . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_5 , VAR_6 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( ( ( TYPE_3 ) ( org.mockito.Mockito . any ( ) ) ) ) ; } } ; ) ) ) ) ( any . org.mockito.Mockito ( ) TYPE_3 ( ( ( METHOD_7 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_3 ( METHOD_4 . org.mockito.Mockito ; ) VAR_6 , VAR_5 ( METHOD_5 . ) VAR_1 ( METHOD_4 . org.mockito.Mockito ; ) VAR_3 , VAR_1 ( METHOD_3 . ) VAR_4 ( METHOD_4 . org.mockito.Mockito ; ) VAR_4 , VAR_3 , VAR_1 ( METHOD_3 . VAR_2 ; ) null ( thenReturn . ) ) ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { TYPE_2 , TYPE_1 throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; } } ; ) ) VAR_2 , } } ; ) ( METHOD_3 ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( ( = VAR_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; } } ; ) VAR_4 , ) ( METHOD_8 . cmd ( assertEquals . TYPE_4 ; ) ) class VAR_3 ( any . TYPE_3 ( METHOD_7 . ) ) 1 ( METHOD_6 . org.mockito.Mockito , VAR_2 ( METHOD_5 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) null , true ( METHOD_4 ; ) ( METHOD_3 ; ) ) ) VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , null , null ) . equals ( STRING_1 ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , null , VAR_1 ) . equals ( STRING_1 ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , null , VAR_2 ) . equals ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( equals . ) VAR_2 , null , INT_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 ; ) ) STRING_1 ( equals . ) VAR_1 , null , INT_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 ; ) ) STRING_1 ( equals . ) null , null , INT_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; java.lang.String version = VAR_2 . METHOD_3 ( ) ; if ( TYPE_1 . METHOD_4 ( version ) ) { TYPE_2 VAR_3 = METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_3 ) ; if ( VAR_3 == null ) { throw new TYPE_3 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } METHOD_7 ( VAR_3 . METHOD_2 ( ) ) ; } else { METHOD_8 ( VAR_1 , version ) ; } } } } ; ) version , VAR_1 ( METHOD_8 { else } ; ) ) ( METHOD_2 . VAR_3 ( METHOD_7 } ; ) ) STRING_2 + ) VAR_1 + STRING_1 ( ( ( TYPE_3 new throw { ) null == VAR_3 ( if ; ) VAR_3 ( METHOD_6 ; ) VAR_1 ( METHOD_5 = VAR_3 TYPE_2 { ) ) version ( METHOD_4 . TYPE_1 ( if ; ) ( METHOD_3 . VAR_2 = version java.lang.String ; ) ( METHOD_2 . VAR_2 = VAR_1 java.lang.String { java.lang.Exception throws ) ( METHOD_1 void private 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_5 . TYPE_2 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_1 ( METHOD_4 . VAR_2 ( org.mockito.Mockito.when ; ) VAR_3 ( thenReturn . ) ) ) VAR_1 ( METHOD_3 . TYPE_1 ( METHOD_2 . VAR_2 ( org.mockito.Mockito.when { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( VAR_1 , null ) ; TYPE_2 . METHOD_8 ( command , VAR_4 ) ; } } ; ) VAR_4 , command ( METHOD_8 . TYPE_2 ; ) null , VAR_1 ( METHOD_7 . ) command ( when . ) true ( org.mockito.Mockito.doReturn ; ) VAR_3 ( METHOD_6 . parameters ; ) VAR_1 ( METHOD_5 . parameters ; ) ) ( toString . ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_1 ; ) STRING_3 , STRING_2 , VAR_2 , STRING_1 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_2 new , VAR_3 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList new return } ; list return ; ) ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ( METHOD_2 > org.ovirt.engine.core.common.businessentities.VDS < Linq . VAR_2 = list > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new TYPE_2 < TYPE_1 > ( ) ; for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( ! ( VAR_2 . METHOD_2 ( ) ) ) & & ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { VAR_1 . add ( VAR_2 . METHOD_3 ( ) ) ; } } return VAR_1 ; } } ; VAR_1 return } } ; ) ) ( METHOD_3 . VAR_2 ( add . VAR_1 { ) ) ) ( METHOD_4 . ) ( METHOD_3 . VAR_2 ( & & ) ) ) ( METHOD_2 . VAR_2 ( ! ( ( if { ) VAR_3 : VAR_2 TYPE_3 ( for ; ) ( > TYPE_1 < TYPE_2 new = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_2 ) ; TYPE_1 VAR_2 = METHOD_3 ( VAR_1 , vmId ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . METHOD_5 ( VAR_2 ) ) == 0 ) ) ; TYPE_1 VAR_3 = METHOD_3 ( VAR_1 , vmId ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . METHOD_5 ( VAR_3 ) ) == 0 ) ) ; } } ; ) ) 0 == ) ) VAR_3 ( METHOD_5 . VAR_2 ( ( ( METHOD_4 . TYPE_2 ; ) vmId , VAR_1 ( METHOD_3 = VAR_3 TYPE_1 ; ) ) 0 == ) ) VAR_2 ( METHOD_5 . VAR_2 ( ( ( METHOD_4 . TYPE_2 ; ) vmId , VAR_1 ( METHOD_3 = VAR_2 TYPE_1 ; ) STRING_2 ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 org.ovirt.engine.core.compat.Guid ; ) STRING_1 ( METHOD_2 . org.ovirt.engine.core.compat.Guid = vmId org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.lang.String VAR_4 = ( VAR_1 + VAR_2 ) + VAR_3 ; try { byte [ ] VAR_5 = TYPE_2 . getInstance ( VAR_6 ) . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_5 , true ) ; return VAR_7 ; } catch ( TYPE_3 e ) { throw new TYPE_4 ( e ) ; } } } } ; ) e ( TYPE_4 new throw { ) e TYPE_3 ( catch } ; VAR_7 return ; ) true , VAR_5 ( TYPE_1 new = VAR_7 TYPE_1 ; ) ) ( METHOD_3 . VAR_4 ( METHOD_2 . ) VAR_6 ( getInstance . TYPE_2 = VAR_5 ] [ byte { try ; VAR_3 + ) VAR_2 + VAR_1 ( = VAR_4 java.lang.String { ) VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 TYPE_1 static public 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; if ( ( ( ! ( getModel ( ) . METHOD_2 ( ) ) ) & & ( getModel ( ) . METHOD_3 ( ) ) ) & & ( ! ( getModel ( ) . METHOD_4 ( ) ) ) ) { VAR_1 = TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( METHOD_6 . VAR_2 ( METHOD_5 . TYPE_2 = VAR_1 { ) ) ) ) ( METHOD_4 . ) ( getModel ( ! ( & & ) ) ) ( METHOD_3 . ) ( getModel ( & & ) ) ) ( METHOD_2 . ) ( getModel ( ! ( ( ( if ; null = VAR_1 TYPE_1 { ) ( METHOD_1 TYPE_1 public 
public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( METHOD_3 ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getReturnValue ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; } } ; ) VAR_5 ( METHOD_4 return ; ) ) ) ( getReturnValue . VAR_2 ( ) > TYPE_5 < java.util.List ( ( = VAR_5 > TYPE_5 < java.util.List ; ) ) false , VAR_1 , ) ( METHOD_3 ( TYPE_4 new , VAR_4 ( METHOD_2 . VAR_3 = VAR_2 TYPE_3 { ) VAR_1 > TYPE_2 < java.util.List ( METHOD_1 > TYPE_1 < java.util.List public 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_1 = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_1 . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( vds . getId ( ) , METHOD_2 ( vds , parameters ) ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ) parameters , vds ( METHOD_2 , ) ( getId . vds ( > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 new ( add . VAR_1 { ) hosts : vds org.ovirt.engine.core.common.businessentities.VDS ( for ; ) ( > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.ArrayList new = VAR_1 > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List { ) parameters > java.lang.String , java.lang.String < java.util.Map , vm org.ovirt.engine.core.common.businessentities.VM , hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.List ( METHOD_1 > > java.lang.Integer , org.ovirt.engine.core.compat.Guid < TYPE_1 < java.util.List public 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( returnValue ! = null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 } ; true = VAR_4 { else } ; VAR_2 = VAR_3 ; ) ) returnValue ( ) org.ovirt.engine.core.common.businessentities.VDS ( ( = VAR_2 org.ovirt.engine.core.common.businessentities.VDS { ) null = ! returnValue ( if ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
private boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { java.util.List < TYPE_1 > VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_3 < java.lang.String > VAR_3 = new TYPE_4 < > ( VAR_1 ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_3 . METHOD_6 ( VAR_4 . METHOD_7 ( ) ) ) { VAR_3 . METHOD_8 ( VAR_4 . METHOD_7 ( ) ) ; } } return VAR_3 . isEmpty ( ) ; } } ; ) ( isEmpty . VAR_3 return } } ; ) ) ( METHOD_7 . VAR_4 ( METHOD_8 . VAR_3 { ) ) ) ( METHOD_7 . VAR_4 ( METHOD_6 . VAR_3 ( if { ) VAR_2 : VAR_4 TYPE_1 ( for ; ) VAR_1 ( > < TYPE_4 new = VAR_3 > java.lang.String < TYPE_3 ; ) ) ( METHOD_5 . ) ( METHOD_4 . TYPE_2 ( METHOD_3 . ) ( METHOD_2 . TYPE_2 = VAR_2 > TYPE_1 < java.util.List { ) storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain , VAR_1 > java.lang.String < java.util.List ( METHOD_1 boolean private 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( ) ) . when ( VAR_3 ) . METHOD_7 ( TYPE_2 . any ( VAR_5 . Guid class ) ) ; } } ; ) ) class Guid . VAR_5 ( any . TYPE_2 ( METHOD_7 . ) VAR_3 ( when . ) ) ( METHOD_6 ( org.mockito.Mockito.doReturn ; ) ( METHOD_5 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) command TYPE_1 ( METHOD_1 void private 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; int value = TYPE_2 . getInstance ( ) . METHOD_1 ( VAR_2 , VAR_1 ) ; org.ovirt.engine.ui.uicommonweb.models.EntityModel tempVar = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; tempVar . setEntity ( value ) ; METHOD_2 ( VAR_3 ) ; model . METHOD_3 ( ) . setSelectedItem ( tempVar ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_5 ; ) VAR_3 ( METHOD_4 ; ) tempVar ( setSelectedItem . ) ( METHOD_3 . model ; ) VAR_3 ( METHOD_2 ; ) value ( setEntity . tempVar ; ) ( org.ovirt.engine.ui.uicommonweb.models.EntityModel new = tempVar org.ovirt.engine.ui.uicommonweb.models.EntityModel ; ) VAR_1 , VAR_2 ( METHOD_1 . ) ( getInstance . TYPE_2 = value int ; ) ) returnValue ( ) java.lang.Integer ( ( = VAR_1 ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 . TYPE_2 } } ; ) VAR_3 , id ( METHOD_6 . TYPE_1 { ) VAR_2 : VAR_3 network . org.ovirt.engine.core.common.businessentities ( for ; ) id ( METHOD_5 . ) ( METHOD_4 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_2 > network . org.ovirt.engine.core.common.businessentities < java.util.List { ) VAR_1 : id org.ovirt.engine.core.compat.Guid ( for ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void protected 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { TYPE_1 . ValidationResult result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ( ( java.lang.String ) ( value ) ) ) ) ; } return result ; } } ; result return } ; ) ) ) ) value ( ) java.lang.String ( ( ( METHOD_4 ( add . ) ( METHOD_3 . result { ) ) ) ( METHOD_2 . result ( ! ( if ; ) value ( METHOD_1 . super = result ValidationResult . TYPE_1 { ) value java.lang.Object ( METHOD_1 ValidationResult . TYPE_1 public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.core.common.businessentities.VDS VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 ) { if ( cluster . METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( STRING_1 , cluster . METHOD_4 ( ) ) ; return ; } TYPE_1 < TYPE_2 > VAR_4 = METHOD_5 ( cluster , VAR_1 , VAR_2 ) ; if ( VAR_4 ! = null ) { METHOD_6 ( VAR_2 , VAR_4 ) ; } } } } ; ) VAR_4 , VAR_2 ( METHOD_6 { ) null = ! VAR_4 ( if ; ) VAR_2 , VAR_1 , cluster ( METHOD_5 = VAR_4 > TYPE_2 < TYPE_1 } ; return ; ) ) ( METHOD_4 . cluster , STRING_1 ( METHOD_3 . VAR_3 { ) ) ( METHOD_2 . cluster ( if { ) VAR_2 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List , VAR_1 org.ovirt.engine.core.common.businessentities.VDS , cluster org.ovirt.engine.core.common.businessentities.VDSGroup ( METHOD_1 void private 
public boolean METHOD_1 ( TYPE_1 < ? > args , TYPE_2 VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( args , VAR_3 , new TYPE_3 < java.lang.String > ( ) { public void METHOD_4 ( java.lang.String result ) { VAR_4 this . VAR_5 = result ; VAR_4 this . VAR_6 = VAR_3 ; } } , VAR_1 ) ; } } ; ) VAR_1 , } } ; VAR_3 = VAR_6 . this VAR_4 ; result = VAR_5 . this VAR_4 { ) result java.lang.String ( METHOD_4 void public { ) ( > java.lang.String < TYPE_3 new , VAR_3 , args ( METHOD_3 . VAR_2 return ; ) ( METHOD_2 { ) VAR_1 TYPE_2 , args > ? < TYPE_1 ( METHOD_1 boolean public 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > , java.lang.Boolean > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } } ; ) VAR_1 , ) VAR_5 ( TYPE_3 new , VAR_4 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ) ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( ( ) > java.lang.Boolean , > Version . org.ovirt.engine.core.compat , java.lang.Integer < TYPE_1 < java.util.Map ( ( = VAR_3 { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new = VAR_2 ; ) ( org.ovirt.engine.ui.frontend.AsyncQuery new = VAR_1 org.ovirt.engine.ui.frontend.AsyncQuery { ) ( METHOD_1 void static public 
public void setEntity ( java.lang.Object value ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( value ) ) ; VAR_1 = ( ( ( vds == null ) || ( ( getEntity ( ) ) == null ) ) || ( ! ( vds . getId ( ) . equals ( getEntity ( ) . getId ( ) ) ) ) ) || ( ! ( vds . getStatus ( ) . equals ( getEntity ( ) . getStatus ( ) ) ) ) ; super . setEntity ( value ) ; } } ; ) value ( setEntity . super ; ) ) ) ) ( getStatus . ) ( getEntity ( equals . ) ( getStatus . vds ( ! ( || ) ) ) ) ) ( getId . ) ( getEntity ( equals . ) ( getId . vds ( ! ( || ) ) null == ) ) ( getEntity ( ( || ) null == vds ( ( ( = VAR_1 ; ) ) value ( ) org.ovirt.engine.core.common.businessentities.VDS ( ( = vds org.ovirt.engine.core.common.businessentities.VDS { ) value java.lang.Object ( setEntity void public 
private void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { METHOD_2 ( ) ; aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( returnValue ! = null ) { VAR_1 . METHOD_3 ( ( ( java.util.HashMap < TYPE_1 < TYPE_2 , java.lang.String > , java.lang.Object > ) ( returnValue ) ) ) ; } return VAR_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_3 ( ) , aQuery ) ; } } ; ) aQuery , ) ( TYPE_3 new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; VAR_1 return } ; ) ) ) returnValue ( ) > java.lang.Object , > java.lang.String , TYPE_2 < TYPE_1 < java.util.HashMap ( ( ( METHOD_3 . VAR_1 { ) null = ! returnValue ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , returnValue java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback ; ) ( METHOD_2 { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void private 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 VAR_3 ) { if ( VAR_1 instanceof TYPE_5 ) { return new TYPE_6 ( ( ( TYPE_5 ) ( VAR_1 ) ) , VAR_2 ) ; } else if ( VAR_1 instanceof TYPE_7 ) { return new TYPE_8 ( ( ( TYPE_7 ) ( VAR_1 ) ) , VAR_2 , VAR_3 ) ; } else { return new TYPE_9 ( VAR_1 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_1 ( TYPE_9 new return { else } ; ) VAR_3 , VAR_2 , ) ) VAR_1 ( ) TYPE_7 ( ( ( TYPE_8 new return { ) TYPE_7 instanceof VAR_1 ( if else } ; ) VAR_2 , ) ) VAR_1 ( ) TYPE_5 ( ( ( TYPE_6 new return { ) TYPE_5 instanceof VAR_1 ( if { ) VAR_3 TYPE_4 , VAR_2 TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 dao = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = dao . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 ! = null ) { dao . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) VAR_2 ( METHOD_7 . dao ; ) ) ( METHOD_6 . org.ovirt.engine.core.compat.Guid ( setId . VAR_2 ; ) VAR_1 ( TYPE_1 new = VAR_2 { else } ; ) VAR_2 ( METHOD_5 . dao { ) null = ! VAR_2 ( if ; ) ) ( getId . VAR_1 , ) ( METHOD_4 . VAR_1 ( METHOD_3 . dao = VAR_2 TYPE_1 ; ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = dao TYPE_3 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } TYPE_1 VAR_1 = new TYPE_1 ( ) ; return validate ( VAR_1 . METHOD_2 ( getParameters ( ) . METHOD_3 ( ) , METHOD_4 ( ) , getParameters ( ) . METHOD_5 ( ) , false ) ) ; } } ; ) ) false , ) ( METHOD_5 . ) ( getParameters , ) ( METHOD_4 , ) ( METHOD_3 . ) ( getParameters ( METHOD_2 . VAR_1 ( validate return ; ) ( TYPE_1 new = VAR_1 TYPE_1 } ; false return { ) ) ) ( METHOD_1 . super ( ! ( if { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_1 status ) { vm . METHOD_2 ( status ) ; TYPE_1 VAR_1 = vm . getStatus ( ) ; boolean VAR_2 = org.ovirt.engine.core.common.businessentities.VM . METHOD_3 ( VAR_1 ) ; if ( VAR_2 || ( VAR_1 == ( VAR_3 ) ) ) { METHOD_4 ( vm ) ; if ( VAR_2 ) { vm . METHOD_5 ( null ) ; vm . METHOD_6 ( VAR_4 ) ; } } } } } } ; ) VAR_4 ( METHOD_6 . vm ; ) null ( METHOD_5 . vm { ) VAR_2 ( if ; ) vm ( METHOD_4 { ) ) ) VAR_3 ( == VAR_1 ( || VAR_2 ( if ; ) VAR_1 ( METHOD_3 . org.ovirt.engine.core.common.businessentities.VM = VAR_2 boolean ; ) ( getStatus . vm = VAR_1 TYPE_1 ; ) status ( METHOD_2 . vm { ) status TYPE_1 , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 void public 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( false , true ) ; TYPE_3 < java.lang.String > VAR_2 = new TYPE_3 < java.lang.String > ( ) { public java.lang.String getValue ( java.lang.String VAR_3 ) { return VAR_3 ; } } ; VAR_1 . addColumn ( VAR_2 , VAR_4 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ) ; VAR_1 . METHOD_4 ( STRING_1 , true ) ; VAR_1 . METHOD_5 ( new TYPE_4 ( ) ) ; } } ; ) ) ( TYPE_4 new ( METHOD_5 . VAR_1 ; ) true , STRING_1 ( METHOD_4 . VAR_1 ; ) ) ( > org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.util.ArrayList new ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . VAR_4 , VAR_2 ( addColumn . VAR_1 ; } } ; VAR_3 return { ) VAR_3 java.lang.String ( getValue java.lang.String public { ) ( > java.lang.String < TYPE_3 new = VAR_2 > java.lang.String < TYPE_3 ; ) true , false ( > TYPE_2 < TYPE_1 new = VAR_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , null ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_4 ( METHOD_8 . ) ( METHOD_7 . ) ( getReturnValue . cmd ( METHOD_6 . TYPE_3 ; ) ) ( METHOD_5 . cmd ( METHOD_4 . TYPE_3 ; ) cmd ( METHOD_3 ; ) ) ) null , VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_2 model = getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_8 { ) VAR_3 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_7 . TYPE_1 ; ) model ( METHOD_6 . resource { try ; ) ) ( toString . ] 1 [ VAR_2 ( setId . model ; ) 1 ( getModel = model TYPE_2 ; ) ( METHOD_5 . VAR_1 ; ) false , 0 , 1 ( METHOD_4 ; ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_7 . TYPE_3 ; ) ( METHOD_6 . VAR_1 = VAR_4 org.ovirt.engine.core.common.businessentities.VDS final ; ) vm ( METHOD_5 . VAR_1 ; ) VAR_3 ( METHOD_4 . VAR_1 ; ) vds ( METHOD_3 . VAR_1 ; ) VAR_2 ( METHOD_2 . vm ; ) ( org.ovirt.engine.core.common.businessentities.VM new = vm org.ovirt.engine.core.common.businessentities.VM final ; null = vds org.ovirt.engine.core.common.businessentities.VDS final ; ) ( TYPE_2 new = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.lang.String VAR_4 = VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_5 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_5 . METHOD_3 ( STRING_3 , VAR_3 ) ; TYPE_3 . log ( VAR_5 , VAR_6 ) ; } } ; ) VAR_6 , VAR_5 ( log . TYPE_3 ; ) VAR_3 , STRING_3 ( METHOD_3 . VAR_5 ; ) VAR_4 , STRING_2 ( METHOD_3 . VAR_5 ; ) VAR_2 , STRING_1 ( METHOD_3 . VAR_5 ; ) ( TYPE_2 new = VAR_5 TYPE_2 ; ) ( METHOD_2 . VAR_1 = VAR_4 java.lang.String { ) VAR_3 java.lang.String , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void static private 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( resource , VAR_1 ) ; org.ovirt.engine.core.common.businessentities . network network = METHOD_3 ( resource ) ; if ( network ! = null ) { resource . METHOD_4 ( ) . METHOD_5 ( network . METHOD_6 ( ) ) ; resource . METHOD_4 ( ) . setId ( null ) ; } return METHOD_7 ( resource , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , resource ( METHOD_7 return } ; ) null ( setId . ) ( METHOD_4 . resource ; ) ) ( METHOD_6 . network ( METHOD_5 . ) ( METHOD_4 . resource { ) null = ! network ( if ; ) resource ( METHOD_3 = network network . org.ovirt.engine.core.common.businessentities ; ) VAR_1 , resource ( METHOD_2 { ) resource TYPE_1 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( VAR_2 ) . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_4 ( VAR_1 ) ) . thenReturn ( METHOD_5 ( VAR_6 ) ) ; } } ; ) ) VAR_6 ( METHOD_5 ( thenReturn . ) ) VAR_1 ( METHOD_4 . VAR_5 ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ) class Guid . VAR_3 ( any . TYPE_1 ( get . ) VAR_2 ( when . ) cluster ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( returnValue ) ) ) ; } } ) ) ; } } ; ) ) } } ; ) ) ) returnValue ( ) > TYPE_3 < java.util.List ( ( ( METHOD_3 . VAR_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void private 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , model . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 { else } ; ) ) ) ( METHOD_4 . model , } } ; ) ( METHOD_3 ; ) ) returnValue ( ) java.lang.Integer ( ( = VAR_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . ) ( getInstance . TYPE_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . VdcActionParametersBase getParameters ( TYPE_1 VAR_5 , TYPE_1 entity ) { return new TYPE_5 ( METHOD_3 ( VAR_6 , VAR_7 class ) . map ( VAR_5 , entity ) ) ; } } ) ; } } ; ) } } ; ) ) entity , VAR_5 ( map . ) class VAR_7 , VAR_6 ( METHOD_3 ( TYPE_5 new return { ) entity TYPE_1 , VAR_5 TYPE_1 ( getParameters VdcActionParametersBase . TYPE_4 public { ) ( > TYPE_1 , TYPE_1 < TYPE_3 new , VAR_4 , ) class IdQueryParameters . VAR_3 , VAR_2 ( > org.ovirt.engine.core.compat.Guid < TYPE_2 new , VAR_1 ( METHOD_2 return { ) VAR_1 TYPE_1 ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_2 ) ; TYPE_3 . METHOD_5 ( VAR_3 , VAR_1 , VAR_4 ) ; } } ; ) VAR_4 , VAR_1 , VAR_3 ( METHOD_5 . TYPE_3 ; ) VAR_2 , STRING_1 ( METHOD_4 . VAR_3 ; ) ) ( METHOD_3 ( METHOD_2 . VAR_3 ; ) ( TYPE_2 new = VAR_3 TYPE_2 { ) VAR_2 java.lang.String , VAR_1 AuditLogType . TYPE_1 ( METHOD_1 void private 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < java.lang.String > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( vm . METHOD_4 ( ) , vm . METHOD_5 ( ) ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { TYPE_2 . getInstance ( ) . METHOD_6 ( VAR_2 , VAR_1 ) ; return false ; } return true ; } } ; true return } ; false return ; ) VAR_1 , VAR_2 ( METHOD_6 . ) ( getInstance . TYPE_2 { ) ) ) ( isEmpty . VAR_2 ( ! ( if ; ) ) ( METHOD_5 . vm , ) ( METHOD_4 . vm ( METHOD_3 . ) ( METHOD_2 = VAR_2 > TYPE_1 < java.util.List { ) VAR_1 > java.lang.String < java.util.List , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 boolean public 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( VAR_1 ) ; TYPE_2 command = new TYPE_2 ( new TYPE_3 ( VAR_1 , VAR_2 ) ) { protected void METHOD_2 ( ) { } } ; VAR_3 = METHOD_3 ( ) ; TYPE_4 . METHOD_4 ( command . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . command ( METHOD_4 . TYPE_4 ; ) ( METHOD_3 = VAR_3 ; } } { ) ( METHOD_2 void protected { ) ) VAR_2 , VAR_1 ( TYPE_3 new ( TYPE_2 new = command TYPE_2 ; ) VAR_1 ( setId . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 ; ) STRING_1 ( org.ovirt.engine.core.compat.Guid new = VAR_1 org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void public 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : result ) { TYPE_1 . assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( ) , vds . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . vds , ) ( METHOD_4 . VAR_1 , STRING_1 ( assertEquals . TYPE_1 { ) result : vds org.ovirt.engine.core.common.businessentities.VDS ( for ; ) ) ( isEmpty . result ( METHOD_3 . TYPE_1 ; ) result ( METHOD_2 . TYPE_1 { ) result > org.ovirt.engine.core.common.businessentities.VDS < java.util.List ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( ) { public TYPE_3 METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return inject ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_2 , VAR_5 ( > TYPE_3 , TYPE_7 < TYPE_6 new ( inject return ; ) ) id ( METHOD_3 , VAR_1 ( TYPE_5 new = VAR_4 TYPE_5 ; } } ; ) VAR_2 ( METHOD_2 . VAR_3 return { TYPE_4 throws ) VAR_2 org.ovirt.engine.core.compat.Guid ( METHOD_2 TYPE_3 public { ) ( > org.ovirt.engine.core.compat.Guid < TYPE_2 new = VAR_1 > org.ovirt.engine.core.compat.Guid < TYPE_2 { ) ( METHOD_1 TYPE_1 public 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( i ) ) & & ( TYPE_1 . METHOD_3 ( i . getName ( ) , iface . getName ( ) ) ) ) { return true ; } } return false ; } } ; false return } } ; true return { ) ) ) ) ( getName . iface , ) ( getName . i ( METHOD_3 . TYPE_1 ( & & ) ) i ( METHOD_2 . TYPE_1 ( ( if { ) VAR_1 : i org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( for { ) VAR_1 > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.List , iface org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( METHOD_1 boolean static public 
public boolean METHOD_1 ( ) { try { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( host . getId ( ) ) ) ; TYPE_2 returnValue = VAR_1 . get ( VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) , VAR_5 ) ; if ( returnValue . getSucceeded ( ) ) { return true ; } } catch ( java.lang.Exception e ) { } return false ; } } ; false return } { ) e java.lang.Exception ( catch } } ; true return { ) ) ( getSucceeded . returnValue ( if ; ) VAR_5 , ) VAR_4 ( METHOD_4 > java.lang.Integer < VAR_3 ( get . VAR_1 = returnValue TYPE_2 ; ) ) ) ( getId . host ( TYPE_4 new , VAR_2 ( METHOD_3 . ) ( METHOD_2 . ) ( getInstance . TYPE_3 = VAR_1 > TYPE_2 < TYPE_1 { try { ) ( METHOD_1 boolean public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; } } ; ) } ) id ( METHOD_7 . TYPE_4 , ) ( METHOD_8 . TYPE_4 { ] [ java.lang.Object new , ) VAR_2 ( METHOD_7 . TYPE_4 ( METHOD_6 . ) log ( METHOD_5 . org.mockito.Mockito ; ) ) ( java.lang.Object new , ) ( TYPE_3 new , id , log ( METHOD_4 . TYPE_2 ; ) true ( thenReturn . ) ) ( METHOD_3 . log ( org.mockito.Mockito.when ; ) class VAR_1 ( METHOD_2 . org.mockito.Mockito = log TYPE_1 ; STRING_1 = id java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 ; switch ( METHOD_2 ( ) . METHOD_3 ( ) ) { case VAR_2 : return null ; case VAR_3 : VAR_1 = METHOD_4 ( ) . METHOD_5 ( ) ; break ; case VAR_4 : VAR_1 = METHOD_6 ( ) . METHOD_7 ( ) ; break ; default : VAR_1 = METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 . METHOD_8 ( METHOD_6 ( ) . METHOD_7 ( ) ) ; break ; } return VAR_1 ; } } ; VAR_1 return } ; break ; ) ) ( METHOD_7 . ) ( METHOD_6 ( METHOD_8 . VAR_1 ; ) ( METHOD_5 . ) ( METHOD_4 = VAR_1 : default ; break ; ) ( METHOD_7 . ) ( METHOD_6 = VAR_1 : VAR_4 case ; break ; ) ( METHOD_5 . ) ( METHOD_4 = VAR_1 : VAR_3 case ; null return : VAR_2 case { ) ) ( METHOD_3 . ) ( METHOD_2 ( switch ; VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List private 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; if ( returnValue ! = null ) { model . METHOD_2 ( ( ( java.util.HashMap < org.ovirt.engine.core.compat . Version , java.util.ArrayList < java.lang.String > > ) ( returnValue ) ) ) ; } } } } ; ) ) ) returnValue ( ) > > java.lang.String < java.util.ArrayList , Version . org.ovirt.engine.core.compat < java.util.HashMap ( ( ( METHOD_2 . model { ) null = ! returnValue ( if ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , java.util.List < TYPE_2 > VAR_3 ) { TYPE_1 VAR_4 = VAR_5 . METHOD_2 ( VAR_2 , VAR_6 class , METHOD_3 ( VAR_1 ) ) ; TYPE_1 VAR_7 = METHOD_4 ( VAR_1 , VAR_4 , VAR_3 ) ; return VAR_7 ; } } ; VAR_7 return ; ) VAR_3 , VAR_4 , VAR_1 ( METHOD_4 = VAR_7 TYPE_1 ; ) ) VAR_1 ( METHOD_3 , class VAR_6 , VAR_2 ( METHOD_2 . VAR_5 = VAR_4 TYPE_1 { ) VAR_3 > TYPE_2 < java.util.List , VAR_2 TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 public 
public static boolean METHOD_1 ( int value , java.util.List < java.lang.String > VAR_1 ) { boolean VAR_2 = false ; if ( ( value > = 0 ) & & ( value < = ( VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) ) ) { VAR_2 = true ; } else { VAR_1 . add ( TYPE_1 . toString ( ) ) ; VAR_1 . add ( java.lang.String . METHOD_3 ( STRING_1 , VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ) VAR_4 ( METHOD_2 > java.lang.Integer < VAR_3 , STRING_1 ( METHOD_3 . java.lang.String ( add . VAR_1 ; ) ) ( toString . TYPE_1 ( add . VAR_1 { else } ; true = VAR_2 { ) ) ) ) VAR_4 ( METHOD_2 > java.lang.Integer < VAR_3 ( = < value ( & & ) 0 = > value ( ( if ; false = VAR_2 boolean { ) VAR_1 > java.lang.String < java.util.List , value int ( METHOD_1 boolean static public 
private java.lang.Integer METHOD_1 ( java.lang.Object entity ) { if ( entity instanceof java.lang.Integer ) { return ( ( java.lang.Integer ) ( entity ) ) ; } if ( ( entity == null ) || ( ! ( entity instanceof java.lang.String ) ) ) { return null ; } java.lang.String VAR_1 = ( ( java.lang.String ) ( entity ) ) ; try { return new java.lang.Integer ( VAR_1 ) ; } catch ( java.lang.Exception e ) { return null ; } } } } ; null return { ) e java.lang.Exception ( catch } ; ) VAR_1 ( java.lang.Integer new return { try ; ) ) entity ( ) java.lang.String ( ( = VAR_1 java.lang.String } ; null return { ) ) ) java.lang.String instanceof entity ( ! ( || ) null == entity ( ( if } ; ) ) entity ( ) java.lang.Integer ( ( return { ) java.lang.Integer instanceof entity ( if { ) entity java.lang.Object ( METHOD_1 java.lang.Integer private 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_2 = METHOD_2 ( VAR_1 ) ; try { TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 , STRING_1 , VAR_1 . get ( 0 ) ) ; TYPE_4 . METHOD_3 ( VAR_3 ) ; } catch ( java.lang.Exception e ) { return ; } TYPE_5 . METHOD_4 ( STRING_2 ) ; } } ; ) STRING_2 ( METHOD_4 . TYPE_5 } ; return { ) e java.lang.Exception ( catch } ; ) VAR_3 ( METHOD_3 . TYPE_4 ; ) ) 0 ( get . VAR_1 , STRING_1 , VAR_2 ( TYPE_3 new = VAR_3 TYPE_3 { try ; ) VAR_1 ( METHOD_2 = VAR_2 TYPE_2 ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_1 > TYPE_1 < java.util.List { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 returnValue = org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 , new TYPE_2 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_4 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_5 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_6 ( ) . getSelectedItem ( ) ) ) ) ) ; if ( ( returnValue ! = null ) & & ( returnValue . getSucceeded ( ) ) ) { } } } } { ) ) ) ( getSucceeded . returnValue ( & & ) null = ! returnValue ( ( if ; ) ) ) ) ) ( getSelectedItem . ) ( METHOD_6 ( ) java.lang.String ( ( , ) ) ) ( getEntity . ) ( METHOD_5 ( ) java.lang.String ( ( , ) ) ) ( getEntity . ) ( METHOD_4 ( ) java.lang.String ( ( , ) ) ) ( getEntity . ) ( METHOD_3 ( ) java.lang.String ( ( ( TYPE_2 new , VAR_1 ( METHOD_2 . org.ovirt.engine.ui.frontend.Frontend = returnValue TYPE_1 { ) ( METHOD_1 void private 
private void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { TYPE_1 object = new TYPE_1 ( METHOD_2 ( VAR_1 ) , VAR_2 , INT_1 ) ; TYPE_1 VAR_4 = org.mockito.Mockito . METHOD_3 ( object ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_4 ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_4 . validate ( null ) . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( TYPE_4 . METHOD_8 ( VAR_3 ) ) ) ; } } ; ) ) ) VAR_3 ( METHOD_8 . TYPE_4 ( METHOD_7 . TYPE_3 , ) ( METHOD_6 . ) null ( validate . VAR_4 ( METHOD_5 . TYPE_2 ; ) ( METHOD_4 . ) VAR_4 ( when . ) true ( org.mockito.Mockito.doReturn ; ) object ( METHOD_3 . org.mockito.Mockito = VAR_4 TYPE_1 ; ) INT_1 , VAR_2 , ) VAR_1 ( METHOD_2 ( TYPE_1 new = object TYPE_1 { ) VAR_3 boolean , VAR_2 int , VAR_1 int ( METHOD_1 void private 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_2 ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_5 ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) VAR_5 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) VAR_1 ( thenReturn . ) ) VAR_2 ( get . VAR_4 ( org.mockito.Mockito.when ; ) VAR_3 ( METHOD_2 . VAR_1 ; ) VAR_2 ( setId . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_2 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_3 ) ; TYPE_1 VAR_3 = METHOD_3 ( VAR_1 , vmId ) ; TYPE_1 VAR_4 = METHOD_3 ( VAR_2 , vmId ) ; METHOD_4 ( VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 ( METHOD_4 ; ) vmId , VAR_2 ( METHOD_3 = VAR_4 TYPE_1 ; ) vmId , VAR_1 ( METHOD_3 = VAR_3 TYPE_1 ; ) STRING_3 ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_2 org.ovirt.engine.core.compat.Guid ; ) STRING_2 ( METHOD_2 . org.ovirt.engine.core.compat.Guid = VAR_1 org.ovirt.engine.core.compat.Guid ; ) STRING_1 ( METHOD_2 . org.ovirt.engine.core.compat.Guid = vmId org.ovirt.engine.core.compat.Guid { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 . VM entity = new TYPE_1 . VM ( ) ; entity . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; entity . METHOD_4 ( VAR_2 ) ; TYPE_2 . METHOD_5 ( ) ; TYPE_1 . VM model = TYPE_3 . map ( entity , null ) ; assertEquals ( VAR_2 . toString ( ) , model . METHOD_6 ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( METHOD_6 . model , ) ( toString . VAR_2 ( assertEquals ; ) null , entity ( map . TYPE_3 = model VM . TYPE_1 ; ) ( METHOD_5 . TYPE_2 ; ) VAR_2 ( METHOD_4 . entity ; ) ( METHOD_3 . org.ovirt.engine.core.compat.Guid = VAR_2 org.ovirt.engine.core.compat.Guid ; ) VAR_1 ( METHOD_2 . entity ; ) ( VM . TYPE_1 new = entity VM . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( cmd , VAR_3 ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; } } ; ) ) ( validate . cmd ( METHOD_5 . TYPE_4 ; ) VAR_3 , cmd ( METHOD_4 ; ) ) null , ) ) ( METHOD_3 . TYPE_3 , null , null , VAR_2 , STRING_2 , STRING_1 , VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( cmd , VAR_3 ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; } } ; ) ) ( validate . cmd ( METHOD_6 . TYPE_4 ; ) VAR_3 , cmd ( METHOD_5 ; ) ) null , ) ) ) null , STRING_3 ( METHOD_4 ( METHOD_3 . TYPE_3 , null , null , VAR_2 , STRING_2 , STRING_1 , VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 { java.util.List < java.lang.String > result = VAR_1 . METHOD_2 ( new java.lang.String [ ] { VAR_2 } , VAR_3 , VAR_4 , STRING_1 ) ; TYPE_2 . METHOD_3 ( ( ( result . size ( ) ) == 2 ) ) ; TYPE_2 . METHOD_3 ( result . METHOD_4 ( VAR_5 ) ) ; TYPE_2 . METHOD_3 ( result . METHOD_4 ( VAR_6 ) ) ; } } ; ) ) VAR_6 ( METHOD_4 . result ( METHOD_3 . TYPE_2 ; ) ) VAR_5 ( METHOD_4 . result ( METHOD_3 . TYPE_2 ; ) ) 2 == ) ) ( size . result ( ( ( METHOD_3 . TYPE_2 ; ) STRING_1 , VAR_4 , VAR_3 , } VAR_2 { ] [ java.lang.String new ( METHOD_2 . VAR_1 = result > java.lang.String < java.util.List { TYPE_1 throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } } } } ; ) VAR_5 ( METHOD_7 { ) VAR_5 TYPE_2 ( catch } ; ) STRING_2 ( METHOD_6 ; ) ( get . resource { try ; ) ( METHOD_5 . VAR_4 ; ) null , ) ( > TYPE_1 < java.util.ArrayList new , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_5 ; ) VAR_2 , ) ( METHOD_3 , } { ] [ java.lang.Object new , } { ] [ java.lang.String new , class IdQueryParameters . VAR_4 , VAR_3 ( METHOD_2 ; ) VAR_1 , STRING_1 ( assertEquals { java.lang.Exception throws ) VAR_2 java.lang.Object , VAR_1 java.lang.String ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_2 ( ) ) ; TYPE_1 . METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_3 ( METHOD_6 { ) VAR_3 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_5 . TYPE_1 ; ) ) ( TYPE_2 new ( add . VAR_2 { try ; ) ( METHOD_4 . VAR_1 ; ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { if ( VAR_3 . METHOD_2 ( VAR_1 ) ) { return VAR_3 . get ( VAR_1 ) ; } TYPE_1 storageDomain = METHOD_3 ( ) . METHOD_4 ( VAR_1 , VAR_2 ) ; VAR_3 . put ( VAR_1 , storageDomain ) ; return storageDomain ; } } ; storageDomain return ; ) storageDomain , VAR_1 ( put . VAR_3 ; ) VAR_2 , VAR_1 ( METHOD_4 . ) ( METHOD_3 = storageDomain TYPE_1 } ; ) VAR_1 ( get . VAR_3 return { ) ) VAR_1 ( METHOD_2 . VAR_3 ( if { ) VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 private 
protected java.lang.Object [ ] METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return new java.lang.Object [ 0 ] ; } else { java.util.ArrayList < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) ) { TYPE_1 i = ( ( TYPE_1 ) ( item ) ) ; VAR_1 . add ( i . getId ( ) ) ; } return VAR_1 . METHOD_3 ( new java.lang.Object [ ] { } ) ; } } } } ; ) } { ] [ java.lang.Object new ( METHOD_3 . VAR_1 return } ; ) ) ( getId . i ( add . VAR_1 ; ) ) item ( ) TYPE_1 ( ( = i TYPE_1 { ) ) ( METHOD_2 : item java.lang.Object ( for ; ) ( > java.lang.Object < java.util.ArrayList new = VAR_1 > java.lang.Object < java.util.ArrayList { else } ; ] 0 [ java.lang.Object new return { ) null == ) ) ( METHOD_2 ( ( if { ) ( METHOD_1 ] [ java.lang.Object protected 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) . onSuccess ( VAR_2 . getModel ( ) , result ) ; if ( ( org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( ) ) ! = null ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . ) ( METHOD_3 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance { ) null = ! ) ) ( METHOD_3 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ( ( if ; ) result , ) ( getModel . VAR_2 ( onSuccess . ) ( METHOD_2 . VAR_2 ; ) STRING_1 ( METHOD_1 . VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( STRING_1 ) ; VAR_2 . METHOD_5 ( STRING_2 ) ; VAR_2 . METHOD_6 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_6 . VAR_2 ; ) STRING_2 ( METHOD_5 . VAR_2 ; ) STRING_1 ( METHOD_4 . VAR_2 ; ) STRING_1 ( METHOD_3 . VAR_2 ; ) ( org.ovirt.engine.core.common.businessentities.network.Network new = VAR_2 ; ) ( METHOD_2 . VAR_1 = dao ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_1 from ) { while ( ( from . METHOD_2 ( ) ) == 0 ) { from . METHOD_3 ( TYPE_2 . METHOD_4 ( INT_1 ) ) ; } from . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_1 class ) ) ; from . METHOD_7 ( ) . METHOD_8 ( INT_2 ) ; from . METHOD_9 ( ) . METHOD_10 ( new TYPE_3 ( ) ) ; return from ; } } ; from return ; ) ) ( TYPE_3 new ( METHOD_10 . ) ( METHOD_9 . from ; ) INT_2 ( METHOD_8 . ) ( METHOD_7 . from ; ) ) class VAR_1 ( METHOD_6 . TYPE_2 ( METHOD_5 . from } ; ) ) INT_1 ( METHOD_4 . TYPE_2 ( METHOD_3 . from { ) 0 == ) ) ( METHOD_2 . from ( ( while { ) from TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , false , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( false ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . getStatus ( ) ) ; METHOD_8 ( ( ( response . getEntity ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . getEntity ( ) ) ) , 1 ) ; } } ; ) 1 , ) ) ) ( getEntity . response ( ) TYPE_3 ( ( ( METHOD_9 ; ) ) TYPE_3 instanceof ) ) ( getEntity . response ( ( ( METHOD_8 ; ) ) ( getStatus . response , INT_1 ( assertEquals ; ) ) ( METHOD_7 ( add . VAR_3 = response TYPE_2 ; ) VAR_4 ( METHOD_6 . VAR_3 ; ) false ( METHOD_5 ; ) ) false , VAR_1 , STRING_1 , false , VAR_2 ( METHOD_4 ( METHOD_3 ; ) ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( METHOD_3 ( ) . getId ( ) ) ; VAR_1 . METHOD_4 ( ( ( java.lang.String ) ( getName ( ) . getEntity ( ) ) ) ) ; VAR_1 . METHOD_5 ( ( ( java.lang.String ) ( METHOD_6 ( ) . getEntity ( ) ) ) ) ; VAR_1 . METHOD_7 ( METHOD_8 ( ) ) ; VAR_1 . METHOD_9 ( METHOD_10 ( ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ( METHOD_10 ( METHOD_9 . VAR_1 ; ) ) ( METHOD_8 ( METHOD_7 . VAR_1 ; ) ) ) ) ( getEntity . ) ( METHOD_6 ( ) java.lang.String ( ( ( METHOD_5 . VAR_1 ; ) ) ) ) ( getEntity . ) ( getName ( ) java.lang.String ( ( ( METHOD_4 . VAR_1 ; ) ) ( getId . ) ( METHOD_3 ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : METHOD_3 ( ) . METHOD_4 ( ) ) { try { METHOD_5 ( cluster ) ; } catch ( java.lang.Exception e ) { VAR_1 . METHOD_6 ( STRING_2 , cluster . METHOD_7 ( ) , e ) ; continue ; } } } } } } ; continue ; ) e , ) ( METHOD_7 . cluster , STRING_2 ( METHOD_6 . VAR_1 { ) e java.lang.Exception ( catch } ; ) cluster ( METHOD_5 { try { ) ) ( METHOD_4 . ) ( METHOD_3 : cluster org.ovirt.engine.core.common.businessentities.VDSGroup ( for ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
protected java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { java.util.HashMap < java.lang.String , java.lang.Boolean > VAR_2 = new java.util.HashMap < java.lang.String , java.lang.Boolean > ( ) ; VAR_2 . put ( VAR_3 , true ) ; VAR_1 . get ( i ) . METHOD_3 ( VAR_2 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_2 ( METHOD_3 . ) i ( get . VAR_1 ; ) true , VAR_3 ( put . VAR_2 ; ) ( > java.lang.Boolean , java.lang.String < java.util.HashMap new = VAR_2 > java.lang.Boolean , java.lang.String < java.util.HashMap { ) ++ i ; ) ) ( size . VAR_1 ( < i ; 0 = i int ( for ; ) ( METHOD_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List protected 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_3 , response ( METHOD_5 . TYPE_5 { ) VAR_2 java.lang.Exception ( catch } ; ) ) ) ( METHOD_4 ( METHOD_3 . TYPE_6 , response ( METHOD_2 . TYPE_5 { try { TYPE_4 , TYPE_3 throws ) response TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void protected 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . getStatus ( ) ) ! = ( VAR_2 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) , VAR_1 . getStatus ( ) . name ( ) , VAR_2 . METHOD_2 ( ) . name ( ) ) ; } } } } ; ) ) ( name . ) ( METHOD_2 . VAR_2 , ) ( name . ) ( getStatus . VAR_1 , ) ( getId . VAR_1 , ) ( METHOD_4 . VAR_1 , STRING_1 ( METHOD_3 . VAR_3 { ) ) ) ( METHOD_2 . VAR_2 ( = ! ) ) ( getStatus . VAR_1 ( ( if { ) VAR_2 TYPE_1 , VAR_1 org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 void static private 
public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( ) ; boolean VAR_2 = true ; for ( TYPE_2 VAR_3 : result . getReturnValue ( ) ) { VAR_2 = VAR_3 . METHOD_3 ( ) ; if ( ! VAR_2 ) { break ; } } if ( VAR_2 ) { METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 { ) VAR_2 ( if } } ; break { ) VAR_2 ! ( if ; ) ( METHOD_3 . VAR_3 = VAR_2 { ) ) ( getReturnValue . result : VAR_3 TYPE_2 ( for ; true = VAR_2 boolean ; ) ( METHOD_2 . VAR_1 { ) result TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; try { VAR_1 = new TYPE_1 ( STRING_1 ) ; } catch ( TYPE_2 e ) { e . METHOD_2 ( ) ; } TYPE_3 . METHOD_3 ( VAR_1 ) ; long VAR_2 = - 1 ; try { VAR_2 = VAR_1 . METHOD_4 ( VAR_3 , INT_1 ) ; } catch ( TYPE_2 e ) { } TYPE_3 . assertEquals ( VAR_2 , INT_2 ) ; } } ; ) INT_2 , VAR_2 ( assertEquals . TYPE_3 } { ) e TYPE_2 ( catch } ; ) INT_1 , VAR_3 ( METHOD_4 . VAR_1 = VAR_2 { try ; 1 - = VAR_2 long ; ) VAR_1 ( METHOD_3 . TYPE_3 } ; ) ( METHOD_2 . e { ) e TYPE_2 ( catch } ; ) STRING_1 ( TYPE_1 new = VAR_1 { try ; null = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
private TYPE_1 getModel ( int VAR_1 ) { TYPE_1 model = new TYPE_1 ( ) ; model . setId ( VAR_2 [ VAR_1 ] . toString ( ) ) ; model . METHOD_1 ( VAR_3 [ VAR_1 ] ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . setId ( VAR_2 [ 0 ] . toString ( ) ) ; model . METHOD_2 ( VAR_4 ) ; model . METHOD_3 ( TYPE_3 . name ( ) ) ; return model ; } } ; model return ; ) ) ( name . TYPE_3 ( METHOD_3 . model ; ) VAR_4 ( METHOD_2 . model ; ) ) ( toString . ] 0 [ VAR_2 ( setId . VAR_4 ; ) ( TYPE_2 new = VAR_4 TYPE_2 ; ) ] VAR_1 [ VAR_3 ( METHOD_1 . model ; ) ) ( toString . ] VAR_1 [ VAR_2 ( setId . model ; ) ( TYPE_1 new = model TYPE_1 { ) VAR_1 int ( getModel TYPE_1 private 
private void METHOD_1 ( TYPE_1 pool ) { VAR_1 . put ( pool . getId ( ) , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_2 < java.lang.String , java.util.List < org.ovirt.engine.core.compat.Guid > > > ( ) ) ; VAR_2 . put ( pool . getId ( ) , new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( ) ) ; VAR_3 . put ( pool . getId ( ) , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_4 > ( ) ) ; } } ; ) ) ( > TYPE_4 , org.ovirt.engine.core.compat.Guid < java.util.HashMap new , ) ( getId . pool ( put . VAR_3 ; ) ) ( > org.ovirt.engine.core.compat.Guid < TYPE_3 new , ) ( getId . pool ( put . VAR_2 ; ) ) ( > > > org.ovirt.engine.core.compat.Guid < java.util.List , java.lang.String < TYPE_2 , org.ovirt.engine.core.compat.Guid < java.util.HashMap new , ) ( getId . pool ( put . VAR_1 { ) pool TYPE_1 ( METHOD_1 void private 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . METHOD_1 ( model , VAR_1 , ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) , null ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) null , ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ( ( , VAR_1 , model ( METHOD_1 . model ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , METHOD_4 ( ) . getStatus ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . getId ( ) , METHOD_4 ( ) . getStatus ( ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; } } ; null return ; ) ( METHOD_8 . ) ( METHOD_2 ; ) ) ( getStatus . ) ( METHOD_4 , ) ( getId . ) ( METHOD_4 ( METHOD_7 . ) ( METHOD_6 ; ) VAR_1 ( METHOD_5 . ) ( METHOD_4 ; ) ) ( getStatus . ) ( METHOD_4 , ) ( METHOD_4 ( METHOD_3 . ) ( METHOD_2 { ) ( METHOD_1 java.lang.Object public 
protected boolean METHOD_1 ( ) { return TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , new TYPE_2 ( TYPE_3 . getParameters ( ) . METHOD_4 ( ) , TYPE_3 . getParameters ( ) . getStoragePoolId ( ) , TYPE_3 . getParameters ( ) . METHOD_5 ( ) . METHOD_6 ( ) , new java.util.ArrayList < TYPE_4 > ( TYPE_5 . METHOD_7 ( new TYPE_4 [ ] { TYPE_3 . METHOD_8 ( ) } ) ) ) ) . getSucceeded ( ) ; } } ; ) ( getSucceeded . ) ) ) ) } ) ( METHOD_8 . TYPE_3 { ] [ TYPE_4 new ( METHOD_7 . TYPE_5 ( > TYPE_4 < java.util.ArrayList new , ) ( METHOD_6 . ) ( METHOD_5 . ) ( getParameters . TYPE_3 , ) ( getStoragePoolId . ) ( getParameters . TYPE_3 , ) ( METHOD_4 . ) ( getParameters . TYPE_3 ( TYPE_2 new , VAR_1 ( METHOD_3 . ) ( METHOD_2 . ) ( getInstance . TYPE_1 return { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = command . METHOD_2 ( ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . when ( command ) . METHOD_4 ( TYPE_3 . any ( VAR_2 class ) ) ; TYPE_4 . METHOD_5 ( command ) ; command . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . getReturnValue ( ) . getSucceeded ( ) ) ; } } ; ) ) ( getSucceeded . ) ( getReturnValue . command ( METHOD_7 . TYPE_5 ; ) ( METHOD_6 . command ; ) command ( METHOD_5 . TYPE_4 ; ) ) class VAR_2 ( any . TYPE_3 ( METHOD_4 . ) command ( when . ) ) ) ( getId . VAR_1 , VAR_1 ( TYPE_2 new ( org.mockito.Mockito.doReturn ; ) ( METHOD_3 . ) ( METHOD_2 . command = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . Integer class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_3 . any ( ) ) ; VAR_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_1 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_8 , VAR_4 ) ; } } ; ) VAR_4 , VAR_8 ( METHOD_7 . ) VAR_5 ( METHOD_6 . org.mockito.Mockito ; ) VAR_1 , VAR_7 ( METHOD_7 . ) VAR_5 ( METHOD_6 . org.mockito.Mockito ; ) VAR_6 , VAR_5 ( METHOD_5 . VAR_2 ; ) ) ( any . TYPE_3 ( METHOD_4 . ) VAR_2 ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ) class Integer . VAR_3 ( METHOD_3 . TYPE_3 ( METHOD_2 . ) VAR_2 ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { TYPE_2 , TYPE_1 throws ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } } ) , getEntity ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( getEntity , ) } } ; ) ( METHOD_3 ; ) ) ) returnValue ( ) > TYPE_2 < java.util.List ( ( ( setItems { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_1 } ; return { ) null == ) ) ( getEntity ( ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( TYPE_1 < TYPE_2 > event ) { TYPE_2 value = event . getValue ( ) ; boolean VAR_1 = METHOD_2 ( value ) ; if ( VAR_1 ! = ( VAR_2 ) ) { ( ( TYPE_3 < TYPE_4 , TYPE_2 , TYPE_5 > . VAR_3 ) ( widget . METHOD_3 ( ) ) ) . METHOD_4 ( ( ! VAR_1 ) ) ; METHOD_5 ( value , widget , VAR_1 ) ; VAR_2 = VAR_1 ; } } } } ; VAR_1 = VAR_2 ; ) VAR_1 , widget , value ( METHOD_5 ; ) ) VAR_1 ! ( ( METHOD_4 . ) ) ) ( METHOD_3 . widget ( ) VAR_3 . > TYPE_5 , TYPE_2 , TYPE_4 < TYPE_3 ( ( { ) ) VAR_2 ( = ! VAR_1 ( if ; ) value ( METHOD_2 = VAR_1 boolean ; ) ( getValue . event = value TYPE_2 { ) event > TYPE_2 < TYPE_1 ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { return source ; } return STRING_1 ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } } ; ) aQuery , params , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; ) VAR_1 ( METHOD_2 . params ; ) ( TYPE_2 new = params TYPE_2 ; } } ; STRING_1 return } ; source return { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 TYPE_1 , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 < ? extends TYPE_3 > VAR_1 , java.lang.String ... VAR_2 ) { model = METHOD_2 ( model ) ; model = METHOD_3 ( model , VAR_1 , VAR_2 ) ; model = TYPE_4 . METHOD_1 ( TYPE_5 . METHOD_4 ( ) , model , VAR_1 ) ; return model ; } } ; model return ; ) VAR_1 , model , ) ( METHOD_4 . TYPE_5 ( METHOD_1 . TYPE_4 = model ; ) VAR_2 , VAR_1 , model ( METHOD_3 = model ; ) model ( METHOD_2 = model { ) VAR_2 ... java.lang.String , VAR_1 > TYPE_3 extends ? < TYPE_2 , model TYPE_1 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . getReturnValue ( ) ) ; } } ; getWindow ( ) . METHOD_5 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; } } ; ) VAR_2 , parameters , VAR_3 ( METHOD_6 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) null ( METHOD_5 . ) ( getWindow ; } } ; ) ) ( getReturnValue . result ( METHOD_4 { ) result TYPE_4 ( METHOD_3 void public { ) ( TYPE_3 new = VAR_2 TYPE_3 ; ) ) ( METHOD_2 . VAR_1 ( TYPE_2 new = parameters TYPE_2 ; ) ) ) ( getSelectedItem ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; hosts . add ( 0 , null ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . setIsChangable ( true ) ; METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 ; ) true ( setIsChangable . VAR_1 ; ) hosts ( setItems . VAR_1 ; ) null , 0 ( add . hosts ; ) ( METHOD_1 = VAR_1 > org.ovirt.engine.core.common.businessentities.VDS < TYPE_1 ; ) ) result ( ) > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ( ( = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList { ) result java.lang.Object , model java.lang.Object ( onSuccess void public 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { boolean result = false ; if ( ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) & & ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) & & ( VAR_3 . METHOD_3 ( VAR_1 ) ) ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 ) ; result = ( VAR_4 == null ) ? false : VAR_4 . METHOD_3 ( VAR_2 ) ; } else { VAR_5 . METHOD_4 ( VAR_6 , VAR_1 ) ; } return result ; } } ; result return } ; ) VAR_1 , VAR_6 ( METHOD_4 . VAR_5 { else } ; ) VAR_2 ( METHOD_3 . VAR_4 : false ? ) null == VAR_4 ( = result ; ) VAR_1 ( get . VAR_3 = VAR_4 > java.lang.String , java.lang.String < java.util.HashMap { ) ) ) VAR_1 ( METHOD_3 . VAR_3 ( & & ) ) ) VAR_2 ( METHOD_2 . TYPE_1 ( & & ) ) VAR_1 ( METHOD_2 . TYPE_1 ( ( ( if ; false = result boolean { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 boolean public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = METHOD_3 ( ) . METHOD_4 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_2 ) { if ( cluster . METHOD_5 ( ) ) { try { METHOD_6 ( cluster ) ; } catch ( java.lang.Exception e ) { VAR_1 . METHOD_7 ( STRING_2 , cluster . METHOD_8 ( ) , e ) ; continue ; } } } } } } } } ; continue ; ) e , ) ( METHOD_8 . cluster , STRING_2 ( METHOD_7 . VAR_1 { ) e java.lang.Exception ( catch } ; ) cluster ( METHOD_6 { try { ) ) ( METHOD_5 . cluster ( if { ) VAR_2 : cluster org.ovirt.engine.core.common.businessentities.VDSGroup ( for ; ) ( METHOD_4 . ) ( METHOD_3 = VAR_2 > org.ovirt.engine.core.common.businessentities.VDSGroup < java.util.List ; ) STRING_1 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( 1 , VAR_1 ) ; disk = TYPE_1 . METHOD_3 ( ) ; disk . METHOD_4 ( STRING_1 ) ; disk . METHOD_5 ( VAR_1 ) ; validator = org.mockito.Mockito . METHOD_6 ( new TYPE_2 ( disk ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( validator ) . METHOD_7 ( ) ; } } ; ) ( METHOD_7 . ) validator ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ) disk ( TYPE_2 new ( METHOD_6 . org.mockito.Mockito = validator ; ) VAR_1 ( METHOD_5 . disk ; ) STRING_1 ( METHOD_4 . disk ; ) ( METHOD_3 . TYPE_1 = disk ; ) VAR_1 , 1 ( METHOD_2 { ) ( METHOD_1 void public 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * 2 ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , i ) ; } } } } ; ) i , ) i ( get . VAR_1 ( METHOD_3 { ) ++ i ; ) length . VAR_2 ( < i ; 0 = i int ( for ; ) ) ( size . VAR_1 , ) 2 * ) length . VAR_2 ( ( ( assertEquals ; ) VAR_1 ( METHOD_2 { java.lang.Exception throws ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void protected 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( nic ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = METHOD_4 ( METHOD_5 ( nic , METHOD_6 ( nic . getName ( ) , INT_1 , VAR_1 ) ) ) ; METHOD_7 ( VAR_2 , VAR_3 , VAR_1 ) ; } } ; ) VAR_1 , VAR_3 , VAR_2 ( METHOD_7 ; ) ) ) VAR_1 , INT_1 , ) ( getName . nic ( METHOD_6 , nic ( METHOD_5 ( METHOD_4 = VAR_2 TYPE_1 ; STRING_2 = VAR_1 java.lang.String ; ) nic ( METHOD_3 ; ) null , STRING_1 ( METHOD_2 = nic VdsNetworkInterface . org.ovirt.engine.core.common.businessentities { ) ( METHOD_1 void public 
private boolean METHOD_1 ( TYPE_1 parameters , TYPE_2 < TYPE_3 . AuditLogType , TYPE_4 > VAR_1 ) { boolean result = METHOD_2 ( parameters , VAR_1 ) ; if ( result ) { result = METHOD_3 ( parameters , VAR_1 ) ; if ( result ) { return true ; } else { TYPE_1 VAR_2 = METHOD_4 ( parameters ) ; METHOD_2 ( VAR_2 , VAR_1 ) ; METHOD_3 ( parameters , VAR_1 ) ; } } else { TYPE_1 VAR_2 = METHOD_4 ( parameters ) ; METHOD_2 ( VAR_2 , VAR_1 ) ; } return result ; } } ; result return } ; ) VAR_1 , VAR_2 ( METHOD_2 ; ) parameters ( METHOD_4 = VAR_2 TYPE_1 { else } } ; ) VAR_1 , parameters ( METHOD_3 ; ) VAR_1 , VAR_2 ( METHOD_2 ; ) parameters ( METHOD_4 = VAR_2 TYPE_1 { else } ; true return { ) result ( if ; ) VAR_1 , parameters ( METHOD_3 = result { ) result ( if ; ) VAR_1 , parameters ( METHOD_2 = result boolean { ) VAR_1 > TYPE_4 , AuditLogType . TYPE_3 < TYPE_2 , parameters TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ) 0 ( getModel ( METHOD_6 . resource { try ; ) ( METHOD_5 . VAR_1 ; ) true , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( TYPE_1 new , VAR_2 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; ) ( > network . org.ovirt.engine.core.common.businessentities < java.util.ArrayList new : ) ) source ( ) > network . org.ovirt.engine.core.common.businessentities < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId , final TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_2 > VAR_5 = TYPE_3 . METHOD_3 ( VAR_3 , new TYPE_4 < TYPE_2 > ( ) { public boolean METHOD_4 ( TYPE_2 VAR_6 ) { return ( VAR_2 . METHOD_5 ( VAR_6 . METHOD_6 ( ) ) ) & & ( METHOD_7 ( VAR_6 ) ) ; } } ) ; METHOD_8 ( VAR_1 , vmId , new TYPE_5 ( VAR_5 ) ) ; } } ; ) ) VAR_5 ( TYPE_5 new , vmId , VAR_1 ( METHOD_8 ; ) } } ; ) ) VAR_6 ( METHOD_7 ( & & ) ) ) ( METHOD_6 . VAR_6 ( METHOD_5 . VAR_2 ( return { ) VAR_6 TYPE_2 ( METHOD_4 boolean public { ) ( > TYPE_2 < TYPE_4 new , VAR_3 ( METHOD_3 . TYPE_3 = VAR_5 > TYPE_2 < java.util.List ; ) VAR_1 ( METHOD_2 . VAR_4 = VAR_3 > TYPE_2 < java.util.List { ) VAR_2 > java.lang.String < TYPE_1 final , vmId org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void public 
private TYPE_1 < java.lang.Boolean , TYPE_2 < java.lang.String > > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { TYPE_3 VAR_4 = VAR_5 . get ( VAR_1 ) ; if ( VAR_4 ! = null ) { return new TYPE_1 < java.lang.Boolean , TYPE_2 < java.lang.String > > ( java.lang.Boolean . FALSE , VAR_4 . METHOD_2 ( ) ) ; } if ( ! VAR_3 ) { VAR_5 . put ( VAR_1 , new TYPE_3 ( 0 , VAR_2 , true ) ) ; } return VAR_6 ; } } ; VAR_6 return } ; ) ) true , VAR_2 , 0 ( TYPE_3 new , VAR_1 ( put . VAR_5 { ) VAR_3 ! ( if } ; ) ) ( METHOD_2 . VAR_4 , FALSE . java.lang.Boolean ( > > java.lang.String < TYPE_2 , java.lang.Boolean < TYPE_1 new return { ) null = ! VAR_4 ( if ; ) VAR_1 ( get . VAR_5 = VAR_4 TYPE_3 { ) VAR_3 boolean , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 > > java.lang.String < TYPE_2 , java.lang.Boolean < TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } } } ; ) VAR_3 ( METHOD_8 { ) VAR_3 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_7 ; ) model ( METHOD_6 . resource { try ; ) ) ( toString . ] 1 [ VAR_2 ( setId . model ; ) 1 ( getModel . TYPE_2 = model TYPE_1 ; ) ( METHOD_5 . VAR_1 ; ) false , 0 , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 ( VAR_1 , version ) ; java.lang.Object value = TYPE_3 . getValue ( TYPE_4 . valueOf ( VAR_1 . toString ( ) ) , version ) ; VAR_2 . put ( VAR_3 , value ) ; } } ; ) value , VAR_3 ( put . VAR_2 ; ) version , ) ) ( toString . VAR_1 ( valueOf . TYPE_4 ( getValue . TYPE_3 = value java.lang.Object ; ) version , VAR_1 ( TYPE_2 new = VAR_3 > java.lang.String , TYPE_1 < TYPE_2 { ) VAR_2 > java.lang.Object , > java.lang.String , TYPE_1 < TYPE_2 < java.util.Map , version java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . getParameters ( ) . getStoragePoolId ( ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ) ; } } ; ) ) ) ( METHOD_7 . ) ( getParameters . TYPE_1 , ) ( METHOD_6 . TYPE_1 , ) ( getStoragePoolId . ) ( getParameters . TYPE_1 ( get . ) ( METHOD_5 . ) ( METHOD_4 . TYPE_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void protected 
protected TYPE_1 . Network METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid id , java.lang.String name , java.util.List < TYPE_1 . Network > VAR_2 ) { for ( TYPE_1 . Network network : VAR_2 ) { if ( ( ( id ! = null ) & & ( id . equals ( network . getId ( ) ) ) ) || ( ( name ! = null ) & & ( name . equals ( network . METHOD_2 ( ) ) ) ) ) { return network ; } } return null ; } } ; null return } } ; network return { ) ) ) ) ) ( METHOD_2 . network ( equals . name ( & & ) null = ! name ( ( || ) ) ) ) ( getId . network ( equals . id ( & & ) null = ! id ( ( ( if { ) VAR_2 : network Network . TYPE_1 ( for { ) VAR_2 > Network . TYPE_1 < java.util.List , name java.lang.String , id org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 Network . TYPE_1 protected 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( ) { METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( ) ) ; METHOD_7 ( ) . METHOD_8 ( VAR_1 , VAR_2 ) ; METHOD_9 ( ) ; METHOD_4 ( ) . METHOD_10 ( ) ; return null ; } } ) ; TYPE_4 . METHOD_11 ( ) ; } } ; ) ( METHOD_11 . TYPE_4 ; ) } } ; null return ; ) ( METHOD_10 . ) ( METHOD_4 ; ) ( METHOD_9 ; ) VAR_2 , VAR_1 ( METHOD_8 . ) ( METHOD_7 ; ) ) ( METHOD_6 ( METHOD_5 . ) ( METHOD_4 { ) ( METHOD_3 TYPE_3 public { ) ( > TYPE_3 < TYPE_2 new ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { return ( ( ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) & & ( METHOD_3 ( ) ) ) & & ( ( TYPE_1 . METHOD_4 ( ) . getStatus ( ) ) == ( VAR_1 ) ) ) & & ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 . ) ( METHOD_5 . ) ( METHOD_4 . TYPE_1 ( & & ) ) ) VAR_1 ( == ) ) ( getStatus . ) ( METHOD_4 . TYPE_1 ( ( & & ) ) ) ( METHOD_3 ( & & ) ) ) ( METHOD_2 . ) ( getParameters . TYPE_1 ( ! ( ( ( return { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 { ) ) STRING_2 , ) ( getName . command ( METHOD_4 . TYPE_1 ( if else } ; ) ( METHOD_5 { ) ) STRING_1 , ) ( getName . command ( METHOD_4 . TYPE_1 ( if else } ; ) ( METHOD_3 { ) ) ) ( METHOD_2 ( == command ( if ; ) command ( METHOD_1 . super { ) command org.ovirt.engine.ui.uicommonweb.UICommand ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , true ) ; TYPE_1 resource = ( ( TYPE_1 ) ( this . resource ) ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_2 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_8 { ) VAR_2 TYPE_3 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ) 0 ( getModel . TYPE_2 ( METHOD_6 . resource { try ; ) ( METHOD_5 . VAR_1 ; ) ) resource . this ( ) TYPE_1 ( ( = resource TYPE_1 ; ) true , 0 , 1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( getName ( ) ) ; getEntity ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; getEntity ( ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; getEntity ( ) . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . VAR_1 ( METHOD_8 . ) ( getEntity ; ) ) ( METHOD_7 . VAR_1 ( METHOD_6 . ) ( getEntity ; ) ) ( METHOD_5 . VAR_1 ( METHOD_4 . ) ( getEntity ; ) ) ( getName ( METHOD_3 . ) ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void private 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , new TYPE_2 ( ) , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , status . getValue ( ) ) ) ; } } ; ) ) ) ( getValue . status , STRING_3 ( addValue . ) VAR_1 , STRING_2 ( addValue . ) ( METHOD_4 , ) ( TYPE_2 new , STRING_1 ( METHOD_3 . ) ( METHOD_2 return { ) status TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 > org.ovirt.engine.core.common.businessentities.VDS < java.util.List public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } } ; ) aQuery , ) id ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; source return } ; ) ( > org.ovirt.engine.core.common.businessentities.VM < java.util.ArrayList new return { ) null == source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) id org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { if ( ( ( VAR_1 ) == null ) & & ( ( METHOD_1 ( ) ) ! = null ) ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : TYPE_1 . METHOD_2 ( ) . METHOD_3 ( METHOD_1 ( ) . getId ( ) ) ) { VAR_1 = vm ; break ; } } return VAR_1 ; } } ; VAR_1 return } } ; break ; vm = VAR_1 { ) ) ) ( getId . ) ( METHOD_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_1 : vm org.ovirt.engine.core.common.businessentities.VM ( for { ) ) null = ! ) ) ( METHOD_1 ( ( & & ) null == ) VAR_1 ( ( ( if { ) ( getVm org.ovirt.engine.core.common.businessentities.VM public 
private void METHOD_1 ( ) { TYPE_1 entity = ( ( TYPE_1 ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; TYPE_2 params = new TYPE_2 ( entity . METHOD_3 ( ) , org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( ) , false ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_5 ( VAR_1 , params , new TYPE_3 ( ) { public void METHOD_6 ( TYPE_4 result ) { if ( ! ( result . getReturnValue ( ) . getSucceeded ( ) ) ) { return ; } } } , this ) ; } } ; ) this , } } } ; return { ) ) ) ( getSucceeded . ) ( getReturnValue . result ( ! ( if { ) result TYPE_4 ( METHOD_6 void public { ) ( TYPE_3 new , params , VAR_1 ( METHOD_5 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; ) false , ) ( METHOD_4 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance , ) ( METHOD_3 . entity ( TYPE_2 new = params TYPE_2 ; ) ) ) ( getEntity . ) ( METHOD_2 ( ) TYPE_1 ( ( = entity TYPE_1 { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { TYPE_1 returnValue = TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) , false ) ; if ( ! ( returnValue . METHOD_7 ( ) ) ) { TYPE_3 . getReturnValue ( ) . METHOD_8 ( returnValue . METHOD_9 ( ) ) ; return false ; } return true ; } } ; true return } ; false return ; ) ) ( METHOD_9 . returnValue ( METHOD_8 . ) ( getReturnValue . TYPE_3 { ) ) ) ( METHOD_7 . returnValue ( ! ( if ; ) false , ) ( METHOD_6 . ) ( METHOD_5 . ) ( METHOD_4 . TYPE_3 , ) ( METHOD_3 , VAR_1 ( METHOD_2 . TYPE_2 = returnValue TYPE_1 { ) ( METHOD_1 boolean protected 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; METHOD_7 ( false ) ; } } ; ) false ( METHOD_7 ; ) disk ( thenReturn . ) ) VAR_1 ( get . VAR_3 ( org.mockito.Mockito.when ; ) ( METHOD_6 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) vmId ( METHOD_5 . disk ; ) true ( METHOD_4 . disk ; ) VAR_2 ( METHOD_3 . disk ; ) VAR_1 ( METHOD_2 . disk ; ) ( org.ovirt.engine.core.common.businessentities.DiskImage new = disk org.ovirt.engine.core.common.businessentities.DiskImage { ) ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_2 VAR_2 = TYPE_3 . getParameters ( ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( VAR_3 ) ; VAR_1 . METHOD_9 ( VAR_2 . METHOD_10 ( ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ( METHOD_10 . VAR_2 ( METHOD_9 . VAR_1 ; ) VAR_3 ( METHOD_8 . VAR_1 ; ) ) ( METHOD_7 . VAR_2 ( METHOD_6 . VAR_3 ; ) ) ( METHOD_5 . VAR_2 ( METHOD_4 . VAR_3 ; ) ) ( METHOD_3 . VAR_2 ( METHOD_2 . VAR_3 ; ) ( TYPE_4 new = VAR_3 TYPE_4 ; ) ( getParameters . TYPE_3 = VAR_2 TYPE_2 ; ) ( METHOD_1 . super = VAR_1 TYPE_1 { ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ; VAR_1 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command . validate ( ) ) ; } } ; ) ) ( validate . command , STRING_1 ( METHOD_6 . TYPE_2 ; ) ) ( METHOD_5 . org.ovirt.engine.core.compat.Guid ( METHOD_4 . VAR_1 ; ) ) ( any . TYPE_1 , ) ( any . TYPE_1 ( METHOD_3 . ) command ( when . ) false ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { return new TYPE_2 ( VAR_2 class ) ; } else if ( STRING_2 . equals ( VAR_1 ) ) { return new TYPE_2 ( VAR_3 class ) ; } else if ( STRING_3 . equals ( VAR_1 ) ) { return new TYPE_2 ( VAR_4 class ) ; } return null ; } } ; null return } ; ) class VAR_4 ( TYPE_2 new return { ) ) VAR_1 ( equals . STRING_3 ( if else } ; ) class VAR_3 ( TYPE_2 new return { ) ) VAR_1 ( equals . STRING_2 ( if else } ; ) class VAR_2 ( TYPE_2 new return { ) ) VAR_1 ( equals . STRING_1 ( if { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
private static TYPE_1 map ( TYPE_2 VAR_1 , TYPE_1 template ) { TYPE_3 value = TYPE_4 . map ( VAR_1 , ( ( TYPE_3 ) ( null ) ) ) ; if ( value == null ) { return null ; } else { template = ( template == null ) ? new TYPE_1 ( ) : template ; template . METHOD_1 ( value . value ( ) ) ; return template ; } } } } ; template return ; ) ) ( value . value ( METHOD_1 . template ; template : ) ( TYPE_1 new ? ) null == template ( = template { else } ; null return { ) null == value ( if ; ) ) ) null ( ) TYPE_3 ( ( , VAR_1 ( map . TYPE_4 = value TYPE_3 { ) template TYPE_1 , VAR_1 TYPE_2 ( map TYPE_1 static private 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 entity ) { return entity . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 entity ) { return entity . METHOD_6 ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . VAR_2 , } } ; ) ( METHOD_6 . entity return { ) entity TYPE_2 ( METHOD_3 java.lang.String public { ) ( > TYPE_2 < TYPE_1 new ( METHOD_2 . VAR_1 ; ) ) ( METHOD_5 . VAR_2 , } } ; ) ( METHOD_4 . entity return { ) entity TYPE_2 ( METHOD_3 java.lang.String public { ) ( > TYPE_2 < TYPE_1 new ( METHOD_2 . VAR_1 { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( vds == null ) { vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; } METHOD_3 ( vds , null , false , null ) ; getName ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } } ; ) false ( setIsChangable . ) ( METHOD_4 ; ) false ( setIsChangable . ) ( getName ; ) null , false , null , vds ( METHOD_3 } ; ) ( org.ovirt.engine.core.common.businessentities.VDS new = vds { ) null == vds ( if ; ) ) ) ( getSelectedItem . ) ( METHOD_2 ( ) org.ovirt.engine.core.common.businessentities.VDS ( ( = vds org.ovirt.engine.core.common.businessentities.VDS { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( getVm ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = resource . get ( ) ; METHOD_7 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_7 ; ) ( get . resource = VAR_3 TYPE_2 ; ) ( METHOD_6 . VAR_2 ; ) ) ( getVm ( METHOD_5 ; ) VAR_1 ( METHOD_4 ; ) STRING_1 , VAR_1 ( METHOD_3 = VAR_1 ; ) ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . network > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_1 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . network > VAR_2 = new java.util.HashMap < java.lang.String , org.ovirt.engine.core.common.businessentities . network > ( ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . METHOD_2 ( ) , VAR_3 ) ; } return VAR_2 ; } else { return TYPE_1 . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . TYPE_1 return { else } ; VAR_2 return } ; ) VAR_3 , ) ( METHOD_2 . VAR_3 ( put . VAR_2 { ) VAR_1 : VAR_3 network . org.ovirt.engine.core.common.businessentities ( for ; ) ( > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.HashMap new = VAR_2 > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.Map { ) ) ) ( isEmpty . VAR_1 ( ! ( if { ) VAR_1 > network . org.ovirt.engine.core.common.businessentities < java.util.List ( METHOD_1 > network . org.ovirt.engine.core.common.businessentities , java.lang.String < java.util.Map static public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] . toString ( ) ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_4 ( METHOD_7 { ) VAR_4 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_6 ; ) model ( add . VAR_3 { try ; ) ( METHOD_5 . VAR_2 ; ) ) ( METHOD_4 ( METHOD_3 ; ) ) ( toString . ] 0 [ VAR_1 ( METHOD_2 . model ; ) ( TYPE_1 new = model TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( getId . ) ( METHOD_4 . ) ( METHOD_3 . result ( assertEquals . TYPE_1 ; ) ) ( size . result , 1 ( assertEquals . TYPE_1 ; ) VAR_1 ( METHOD_2 . dao = result > org.ovirt.engine.core.common.businessentities.VM < java.util.List { ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_3 ( model , list ) ; } } ; ) list , model ( METHOD_3 . model } } ; ) a ( add . list { ) ) VAR_1 ( == ) ) ( METHOD_2 . a ( ( if { ) ) ) returnValue ( ) > TYPE_2 < java.util.ArrayList ( ( : a TYPE_2 ( for ; ) ( > TYPE_2 < java.util.ArrayList new = list > TYPE_2 < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ( ( java.lang.Boolean ) ( model . METHOD_4 ( ) . getEntity ( ) ) ) ) ; VAR_1 . METHOD_5 ( ( ( java.lang.Boolean ) ( model . METHOD_6 ( ) . getEntity ( ) ) ) ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_7 ( VAR_2 , VAR_1 , new TYPE_3 ( model , VAR_3 , METHOD_2 ( ) . getId ( ) ) , this ) ; } } ; ) this , ) ) ( getId . ) ( METHOD_2 , VAR_3 , model ( TYPE_3 new , VAR_1 , VAR_2 ( METHOD_7 . org.ovirt.engine.ui.frontend.Frontend ; ) ) ) ) ( getEntity . ) ( METHOD_6 . model ( ) java.lang.Boolean ( ( ( METHOD_5 . VAR_1 ; ) ) ) ) ( getEntity . ) ( METHOD_4 . model ( ) java.lang.Boolean ( ( ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 ( TYPE_2 new = VAR_1 TYPE_2 { ) result TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_3 ) ; try { cmd . METHOD_5 ( ) ; } catch ( TYPE_3 e ) { TYPE_4 . assertEquals ( e . METHOD_6 ( ) , VAR_3 ) ; } org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_5 . any ( VAR_5 class ) ) ; } } ; ) ) class VAR_5 ( any . TYPE_5 ( METHOD_9 . ) ) ( METHOD_8 . org.mockito.Mockito , VAR_4 ( METHOD_7 . org.mockito.Mockito } ; ) VAR_3 , ) ( METHOD_6 . e ( assertEquals . TYPE_4 { ) e TYPE_3 ( catch } ; ) ( METHOD_5 . cmd { try ; ) VAR_3 , false ( METHOD_4 ; ) ( METHOD_3 ; ) ) null , ) VAR_2 , VAR_1 ( TYPE_2 new ( TYPE_1 new ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new org.ovirt.engine.core.common.businessentities.VDS ( ) , true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . thenReturn ( false ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) ; TYPE_2 . METHOD_6 ( command . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . toString ( ) ) ) ; } } ; ) ) ) ( toString . TYPE_3 ( METHOD_8 . ) ( METHOD_7 . ) ( getReturnValue . command ( METHOD_6 . TYPE_2 ; ) ) ( validate . command ( METHOD_5 . TYPE_2 ; ) false ( thenReturn . ) ) ) VAR_3 ( METHOD_4 . TYPE_1 , ) class Guid . VAR_2 ( any . TYPE_1 ( METHOD_3 . VAR_1 ( org.mockito.Mockito.when ; ) true , ) ( org.ovirt.engine.core.common.businessentities.VDS new , true ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; } } ; ) aQuery , ) name ( TYPE_1 new , VAR_1 ( RunQuery . org.ovirt.engine.ui.frontend.Frontend ; } } ; false : ) ) ( METHOD_2 . ) ) source ( ) java.lang.Boolean ( ( ( ! ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) name java.lang.String , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( ) . addValue ( STRING_1 , METHOD_3 ( VAR_3 ) ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , vmId ) . addValue ( STRING_5 , TYPE_2 . name ( ) ) ; METHOD_4 ( ) . METHOD_5 ( STRING_6 , VAR_4 ) ; } } ; ) VAR_4 , STRING_6 ( METHOD_5 . ) ( METHOD_4 ; ) ) ( name . TYPE_2 , STRING_5 ( addValue . ) vmId , STRING_4 ( addValue . ) VAR_2 , STRING_3 ( addValue . ) VAR_1 , STRING_2 ( addValue . ) ) VAR_3 ( METHOD_3 , STRING_1 ( addValue . ) ( METHOD_2 = VAR_4 TYPE_1 { ) VAR_3 java.lang.String , VAR_2 org.ovirt.engine.core.compat.Guid , VAR_1 org.ovirt.engine.core.compat.Guid , vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = dao . METHOD_2 ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; TYPE_1 . assertEquals ( STRING_2 , VAR_1 . size ( ) , 1 ) ; TYPE_1 . assertEquals ( STRING_3 , VAR_1 . get ( 0 ) . getId ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( getId . ) 0 ( get . VAR_1 , STRING_3 ( assertEquals . TYPE_1 ; ) 1 , ) ( size . VAR_1 , STRING_2 ( assertEquals . TYPE_1 ; ) ) STRING_1 ( org.ovirt.engine.core.compat.Guid new ( METHOD_2 . dao = VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.List { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_1 value ) { java.lang.String result = value . METHOD_2 ( ) ; if ( ( ( VAR_1 ) > 0 ) & & ( ( result . length ( ) ) > ( VAR_1 ) ) ) { result = result . METHOD_3 ( 0 , TYPE_2 . METHOD_4 ( ( ( VAR_1 ) - ( TYPE_3 . length ( ) ) ) , 0 ) ) ; result = result + ( TYPE_3 ) ; } return TYPE_4 . METHOD_5 ( result ) ; } } ; ) result ( METHOD_5 . TYPE_4 return } ; ) TYPE_3 ( + result = result ; ) ) 0 , ) ) ) ( length . TYPE_3 ( - ) VAR_1 ( ( ( METHOD_4 . TYPE_2 , 0 ( METHOD_3 . result = result { ) ) ) VAR_1 ( > ) ) ( length . result ( ( & & ) 0 > ) VAR_1 ( ( ( if ; ) ( METHOD_2 . value = result java.lang.String { ) value TYPE_1 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk , TYPE_1 . METHOD_5 ( TYPE_1 . METHOD_6 ( STRING_1 ) ) , TYPE_1 . METHOD_7 ( STRING_2 ) , TYPE_1 . METHOD_8 ( 1 ) ) ; TYPE_1 . METHOD_9 ( disk ) ; } } ; ) disk ( METHOD_9 . TYPE_1 ; ) ) 1 ( METHOD_8 . TYPE_1 , ) STRING_2 ( METHOD_7 . TYPE_1 , ) ) STRING_1 ( METHOD_6 . TYPE_1 ( METHOD_5 . TYPE_1 , disk ( METHOD_4 ; ) STRING_2 ( METHOD_3 . disk ; ) STRING_1 ( METHOD_2 . disk { java.lang.Exception throws ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; VAR_2 . METHOD_1 ( VAR_2 , VAR_3 , ( returnValue == null ) ) ; } } ; ) ) null == returnValue ( , VAR_3 , VAR_2 ( METHOD_1 . VAR_2 ; ) ) ] 1 [ VAR_1 ( ) TYPE_2 ( ( = VAR_3 TYPE_2 ; ) ) ] 0 [ VAR_1 ( ) TYPE_1 ( ( = VAR_2 TYPE_1 ; ) ) target ( ) ] [ java.lang.Object ( ( = VAR_1 ] [ java.lang.Object { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( org.mockito.Mockito . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; } } ; ) VAR_2 ( thenReturn . ) ) ) class VAR_4 ( any . org.mockito.Mockito ( get . VAR_3 ( org.mockito.Mockito.when ; ) ( METHOD_3 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) VAR_1 ( METHOD_2 . VAR_2 ; ) ) ( TYPE_2 new ( setId . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) VAR_1 boolean ( METHOD_1 void protected 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.lang.Boolean VAR_1 ) { if ( VAR_1 == null ) { return ; } if ( VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( vmId ) ) ) { TYPE_1 . METHOD_3 ( vmId ) ; } } else { TYPE_1 . METHOD_4 ( vmId ) ; } } } } ; ) vmId ( METHOD_4 . TYPE_1 { else } } ; ) vmId ( METHOD_3 . TYPE_1 { ) ) ) vmId ( METHOD_2 . TYPE_1 ( ! ( if { ) VAR_1 ( if } ; return { ) null == VAR_1 ( if { ) VAR_1 java.lang.Boolean , vmId org.ovirt.engine.core.compat.Guid ( METHOD_1 void static public 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > vms = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_3 . METHOD_1 ( vms , new TYPE_4 ( ) ) ; VAR_2 . setItems ( vms ) ; VAR_2 . METHOD_2 ( ( ( vms . size ( ) ) == 0 ) ) ; } } ; ) ) 0 == ) ) ( size . vms ( ( ( METHOD_2 . VAR_2 ; ) vms ( setItems . VAR_2 ; ) ) ( TYPE_4 new , vms ( METHOD_1 . TYPE_3 ; ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_2 ( ( = vms > org.ovirt.engine.core.common.businessentities.VM < java.util.ArrayList ; ) ) model ( ) TYPE_1 ( ( = VAR_2 TYPE_1 { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.String domain : METHOD_2 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( domain ) ; TYPE_2 VAR_3 = new TYPE_2 ( domain . METHOD_4 ( ) , true ) ; VAR_2 . setId ( ( VAR_3 ! = null ? VAR_3 . toString ( ) : null ) ) ; VAR_1 . add ( VAR_2 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_2 ( add . VAR_1 ; ) ) null : ) ( toString . VAR_3 ? null = ! VAR_3 ( ( setId . VAR_2 ; ) true , ) ( METHOD_4 . domain ( TYPE_2 new = VAR_3 TYPE_2 ; ) domain ( METHOD_3 . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) ) ( METHOD_2 : domain java.lang.String ( for ; ) ( > TYPE_1 < java.util.ArrayList new = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 > TYPE_1 < java.util.List private 
protected java.lang.Object [ ] METHOD_1 ( java.lang.Object [ ] parameters , TYPE_1 VAR_1 ) { if ( parameters == null ) { return null ; } java.lang.Object [ ] VAR_2 = parameters . METHOD_2 ( ) ; int VAR_3 = 0 ; for ( java.lang.Object VAR_4 : parameters ) { if ( VAR_4 instanceof TYPE_2 ) { VAR_2 [ VAR_3 ] = VAR_1 . METHOD_3 ( ( ( TYPE_2 ) ( VAR_4 ) ) ) ; } VAR_3 ++ ; } return VAR_2 ; } } ; VAR_2 return } ; ++ VAR_3 } ; ) ) ) VAR_4 ( ) TYPE_2 ( ( ( METHOD_3 . VAR_1 = ] VAR_3 [ VAR_2 { ) TYPE_2 instanceof VAR_4 ( if { ) parameters : VAR_4 java.lang.Object ( for ; 0 = VAR_3 int ; ) ( METHOD_2 . parameters = VAR_2 ] [ java.lang.Object } ; null return { ) null == parameters ( if { ) VAR_1 TYPE_1 , parameters ] [ java.lang.Object ( METHOD_1 ] [ java.lang.Object protected 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; METHOD_4 ( ) . METHOD_5 ( true ) ; if ( ( ( java.lang.Boolean ) ( METHOD_6 ( ) . getEntity ( ) ) ) ) { METHOD_4 ( ) . METHOD_7 ( new TYPE_2 [ ] { VAR_1 , new TYPE_3 ( ) } ) ; } return METHOD_4 ( ) . METHOD_8 ( ) ; } } ; ) ( METHOD_8 . ) ( METHOD_4 return } ; ) } ) ( TYPE_3 new , VAR_1 { ] [ TYPE_2 new ( METHOD_7 . ) ( METHOD_4 { ) ) ) ) ( getEntity . ) ( METHOD_6 ( ) java.lang.Boolean ( ( ( if ; ) true ( METHOD_5 . ) ( METHOD_4 ; ) INT_1 ( METHOD_3 . VAR_1 ; ) 1 ( METHOD_2 . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 boolean public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_8 ( ( ( VAR_4 . METHOD_9 ( ) . getEntity ( ) ) instanceof TYPE_2 ) ) ; assertEquals ( METHOD_10 ( VAR_2 ) , ( ( TYPE_2 ) ( VAR_4 . METHOD_9 ( ) . getEntity ( ) ) ) . METHOD_11 ( ) ) ; } } } } ; ) ) ( METHOD_11 . ) ) ) ( getEntity . ) ( METHOD_9 . VAR_4 ( ) TYPE_2 ( ( , ) VAR_2 ( METHOD_10 ( assertEquals ; ) ) TYPE_2 instanceof ) ) ( getEntity . ) ( METHOD_9 . VAR_4 ( ( ( METHOD_8 { ) VAR_4 TYPE_1 ( catch } ; ) STRING_1 ( METHOD_7 ; ) ( METHOD_6 { try ; ) ( METHOD_5 . VAR_3 ; ) VAR_2 ( METHOD_4 ; ) ) null ( METHOD_3 ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) { VAR_3 . METHOD_2 ( STRING_1 ) ; java.lang.Integer VAR_4 = VAR_1 < java.lang.Integer > getValue ( VAR_5 ) ; TYPE_1 . get ( VAR_6 class ) . METHOD_3 ( VAR_7 . instance , STRING_2 , new TYPE_2 [ ] { } , new java.lang.Object [ ] { } , VAR_4 , VAR_4 , VAR_8 ) ; VAR_3 . METHOD_2 ( STRING_3 ) ; } } } } ; ) STRING_3 ( METHOD_2 . VAR_3 ; ) VAR_8 , VAR_4 , VAR_4 , } { ] [ java.lang.Object new , } { ] [ TYPE_2 new , STRING_2 , instance . VAR_7 ( METHOD_3 . ) class VAR_6 ( get . TYPE_1 ; ) VAR_5 ( getValue > java.lang.Integer < VAR_1 = VAR_4 java.lang.Integer ; ) STRING_1 ( METHOD_2 . VAR_3 { ) ) VAR_2 ( getValue > java.lang.Boolean < VAR_1 ( if { ) ( METHOD_1 void static public 
public static < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_3 VAR_1 , TYPE_4 < TYPE_1 > VAR_2 ) { assert VAR_1 ! = null : STRING_1 ; for ( TYPE_2 list : VAR_1 . METHOD_2 ( ) ) { if ( ( list ! = null ) & & ( list . METHOD_3 ( ) . equals ( VAR_2 ) ) ) { return ( ( TYPE_1 ) ( list ) ) ; } } throw new TYPE_5 ( ( ( STRING_2 + VAR_2 ) + STRING_3 ) ) ; } } ; ) ) STRING_3 + ) VAR_2 + STRING_2 ( ( ( TYPE_5 new throw } } ; ) ) list ( ) TYPE_1 ( ( return { ) ) ) VAR_2 ( equals . ) ( METHOD_3 . list ( & & ) null = ! list ( ( if { ) ) ( METHOD_2 . VAR_1 : list TYPE_2 ( for ; STRING_1 : null = ! VAR_1 assert { ) VAR_2 > TYPE_1 < TYPE_4 , VAR_1 TYPE_3 ( METHOD_1 TYPE_1 > TYPE_2 extends TYPE_1 < static public 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_2 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_2 class ) ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_4 ( VAR_3 , cluster , VAR_4 ) ; TYPE_5 . METHOD_7 ( validator . METHOD_8 ( ) , TYPE_6 . METHOD_9 ( VAR_5 ) ) ; } } ; ) ) VAR_5 ( METHOD_9 . TYPE_6 , ) ( METHOD_8 . validator ( METHOD_7 . TYPE_5 ; ) VAR_4 , cluster , VAR_3 ( TYPE_4 new = validator ; ) VAR_1 ( thenReturn . ) ) ( METHOD_6 . VAR_3 ( org.mockito.Mockito.when ; ) ) ) class VAR_2 ( METHOD_5 . org.mockito.Mockito ( METHOD_4 . TYPE_3 ( thenReturn . ) ) ) ( METHOD_3 . TYPE_2 , ) ( any . TYPE_1 ( METHOD_2 . VAR_1 ( org.mockito.Mockito.when { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , java.lang.String value , TYPE_3 VAR_2 , TYPE_4 event , TYPE_5 < java.lang.String > VAR_3 ) { VAR_4 . METHOD_1 ( context , VAR_1 , value , event , VAR_3 ) ; super . METHOD_1 ( context , VAR_1 , value , VAR_2 , event , VAR_3 ) ; } } ; ) VAR_3 , event , VAR_2 , value , VAR_1 , context ( METHOD_1 . super ; ) VAR_3 , event , value , VAR_1 , context ( METHOD_1 . VAR_4 { ) VAR_3 > java.lang.String < TYPE_5 , event TYPE_4 , VAR_2 TYPE_3 , value java.lang.String , VAR_1 TYPE_2 , context TYPE_1 ( METHOD_1 void public 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( VAR_3 , new TYPE_3 ( ) ) ; TYPE_4 VAR_4 = ( ( TYPE_4 ) ( VAR_1 ) ) ; VAR_4 . setItems ( VAR_3 ) ; } } ; ) VAR_3 ( setItems . VAR_4 ; ) ) VAR_1 ( ) TYPE_4 ( ( = VAR_4 TYPE_4 ; ) ) ( TYPE_3 new , VAR_3 ( METHOD_1 . TYPE_2 ; ) ( getReturnValue . ) ) VAR_2 ( ) VdcQueryReturnValue . TYPE_1 ( ( = VAR_3 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List { ) VAR_2 java.lang.Object , VAR_1 java.lang.Object ( onSuccess void public 
public void METHOD_1 ( ) { TYPE_1 status = VAR_1 ; cmd . METHOD_2 ( status ) ; java.util.List < java.lang.String > VAR_2 = cmd . getReturnValue ( ) . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 0 ) , TYPE_3 . toString ( ) ) ; TYPE_2 . assertEquals ( VAR_2 . get ( 1 ) , java.lang.String . METHOD_4 ( STRING_1 , status ) ) ; } } ; ) ) status , STRING_1 ( METHOD_4 . java.lang.String , ) 1 ( get . VAR_2 ( assertEquals . TYPE_2 ; ) ) ( toString . TYPE_3 , ) 0 ( get . VAR_2 ( assertEquals . TYPE_2 ; ) ( METHOD_3 . ) ( getReturnValue . cmd = VAR_2 > java.lang.String < java.util.List ; ) status ( METHOD_2 . cmd ; VAR_1 = status TYPE_1 { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String VAR_1 , TYPE_2 type ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( id . toString ( ) ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( type ) ; return VAR_2 ; } } ; VAR_2 return ; ) type ( METHOD_4 . VAR_2 ; ) VAR_1 ( METHOD_3 . VAR_2 ; ) ) ( toString . id ( METHOD_2 . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) type TYPE_2 , VAR_1 java.lang.String , id org.ovirt.engine.core.compat.Guid ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } else { VAR_1 . METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 . VAR_1 { else } ; ) ( METHOD_5 . VAR_1 ; ) ) ( METHOD_4 ( add . ) ( METHOD_3 . VAR_1 { ) ) VAR_2 ( METHOD_2 . VAR_1 ( if ; ) ) returnValue ( ) > TYPE_2 < java.util.ArrayList ( ( = VAR_2 > TYPE_2 < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) , aQuery ) ; } } ; ) aQuery , ) ) ( METHOD_3 . TYPE_2 , VAR_2 ( TYPE_1 new , VAR_1 ( METHOD_2 . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; STRING_1 : ) ) source ( ) java.lang.String ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.DiskImage diskImage = ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( METHOD_2 ( ) ) ) ; final TYPE_1 VAR_1 = diskImage . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( new TYPE_3 < TYPE_4 > ( ) { public TYPE_4 METHOD_5 ( ) { METHOD_6 ( ) . METHOD_7 ( diskImage . METHOD_8 ( ) , VAR_1 ) ; METHOD_6 ( ) . METHOD_9 ( ) ; diskImage . METHOD_10 ( VAR_2 ) ; TYPE_5 . METHOD_11 ( diskImage . METHOD_12 ( ) , VAR_2 ) ; return null ; } } ) ; } } ; ) } } ; null return ; ) VAR_2 , ) ( METHOD_12 . diskImage ( METHOD_11 . TYPE_5 ; ) VAR_2 ( METHOD_10 . diskImage ; ) ( METHOD_9 . ) ( METHOD_6 ; ) VAR_1 , ) ( METHOD_8 . diskImage ( METHOD_7 . ) ( METHOD_6 { ) ( METHOD_5 TYPE_4 public { ) ( > TYPE_4 < TYPE_3 new ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . diskImage = VAR_1 TYPE_1 final ; ) ) ) ( METHOD_2 ( ) org.ovirt.engine.core.common.businessentities.DiskImage ( ( = diskImage org.ovirt.engine.core.common.businessentities.DiskImage final { ) ( METHOD_1 void private 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM VAR_2 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; TYPE_1 VAR_3 = org.mockito.Mockito . METHOD_2 ( VAR_4 class ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_1 ) ) . thenReturn ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; org.mockito.Mockito.when ( METHOD_5 ( ) . METHOD_6 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_3 . METHOD_7 ( VAR_5 class ) ; TYPE_3 . METHOD_8 ( ) . when ( VAR_5 class ) ; TYPE_4 . METHOD_9 ( VAR_2 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_2 ( METHOD_9 . TYPE_4 ; ) class VAR_5 ( when . ) ( METHOD_8 . TYPE_3 ; ) class VAR_5 ( METHOD_7 . TYPE_3 ; ) VAR_3 ( thenReturn . ) ) ( METHOD_6 . ) ( METHOD_5 ( org.mockito.Mockito.when ; ) ) VAR_2 ( METHOD_4 . TYPE_2 ( thenReturn . ) ) VAR_1 ( METHOD_3 . VAR_3 ( org.mockito.Mockito.when ; ) class VAR_4 ( METHOD_2 . org.mockito.Mockito = VAR_3 TYPE_1 ; ) ( org.ovirt.engine.core.common.businessentities.VM new = VAR_2 org.ovirt.engine.core.common.businessentities.VM { ) VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 org.ovirt.engine.core.common.businessentities.VM private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; } } ; ) aQuery , ) VAR_2 , VAR_1 ( TYPE_1 new , VAR_3 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList new return } ; source return { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_2 boolean , VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) ! = ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 ( METHOD_7 . TYPE_1 ; ) ( METHOD_6 . TYPE_1 } ; ) ) ( METHOD_5 . TYPE_1 , ) ( METHOD_4 . ) ( getVm . TYPE_1 ( METHOD_3 . TYPE_2 { ) ) VAR_1 ( = ! ) ) ( METHOD_2 . ) ( getVm . TYPE_1 ( ( if { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , model . METHOD_4 ( ) ) ) ; } else { METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 { else } ; ) ) ) ( METHOD_4 . model , } } ; ) ( METHOD_3 ; ) ) returnValue ( ) java.lang.Integer ( ( = VAR_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public { ) ( org.ovirt.engine.ui.frontend.INewAsyncCallback new , this ( org.ovirt.engine.ui.frontend.AsyncQuery new ( METHOD_2 . TYPE_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( METHOD_3 ( ) ) ; return ( ( validate ( VAR_1 . METHOD_4 ( ) ) ) & & ( ( METHOD_5 ( ) ) || ( validate ( VAR_2 . METHOD_6 ( ) ) ) ) ) & & ( validate ( METHOD_7 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) ) ; } } ; ) ) ) ) ( METHOD_3 , ) ( METHOD_2 ( METHOD_7 ( validate ( & & ) ) ) ) ) ( METHOD_6 . VAR_2 ( validate ( || ) ) ( METHOD_5 ( ( & & ) ) ) ( METHOD_4 . VAR_1 ( validate ( ( return ; ) ) ( METHOD_3 ( TYPE_1 new = VAR_2 TYPE_1 ; ) ) ( METHOD_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; for ( TYPE_1 pool : result ) { TYPE_2 . assertEquals ( VAR_1 , pool . METHOD_5 ( ) ) ; } } } } ; ) ) ( METHOD_5 . pool , VAR_1 ( assertEquals . TYPE_2 { ) result : pool TYPE_1 ( for ; ) ) ( isEmpty . result ( METHOD_4 . TYPE_2 ; ) result ( METHOD_3 . TYPE_2 ; ) VAR_1 ( METHOD_2 . dao = result > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 VAR_2 = null ; for ( TYPE_1 storageDomain : VAR_1 ) { if ( ( storageDomain . METHOD_2 ( ) ) ! = ( VAR_3 ) ) { if ( ( storageDomain . METHOD_2 ( ) ) ! = ( VAR_4 ) ) { METHOD_3 ( storageDomain ) ; } } else { VAR_2 = storageDomain ; } } if ( VAR_2 ! = null ) { METHOD_3 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_3 { ) null = ! VAR_2 ( if } } ; storageDomain = VAR_2 { else } } ; ) storageDomain ( METHOD_3 { ) ) VAR_4 ( = ! ) ) ( METHOD_2 . storageDomain ( ( if { ) ) VAR_3 ( = ! ) ) ( METHOD_2 . storageDomain ( ( if { ) VAR_1 : storageDomain TYPE_1 ( for ; null = VAR_2 TYPE_1 { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void private 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; org.ovirt.engine.core.compat . Version VAR_1 = vm . METHOD_2 ( ) ; if ( VAR_1 == null ) { METHOD_3 ( false ) ; } else { METHOD_3 ( ( ( java.lang.Boolean ) ( ! ( TYPE_1 . METHOD_4 ( getEntity ( ) . METHOD_5 ( ) , VAR_1 ) . isEmpty ( ) ) ) ) ) ; } } } } ; ) ) ) ) ) ( isEmpty . ) VAR_1 , ) ( METHOD_5 . ) ( getEntity ( METHOD_4 . TYPE_1 ( ! ( ) java.lang.Boolean ( ( ( METHOD_3 { else } ; ) false ( METHOD_3 { ) null == VAR_1 ( if ; ) ( METHOD_2 . vm = VAR_1 Version . org.ovirt.engine.core.compat ; ) ( getEntity = vm org.ovirt.engine.core.common.businessentities.VM { ) ( METHOD_1 void protected 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; return ( vm ! = null ) & & ( ( ( ( vm . METHOD_2 ( ) ) == ( VAR_1 ) ) || ( ( vm . METHOD_2 ( ) ) == ( VAR_2 ) ) ) || ( ( vm . METHOD_2 ( ) ) == ( VAR_3 ) ) ) ; } } ; ) ) ) VAR_3 ( == ) ) ( METHOD_2 . vm ( ( || ) ) ) VAR_2 ( == ) ) ( METHOD_2 . vm ( ( || ) ) VAR_1 ( == ) ) ( METHOD_2 . vm ( ( ( ( & & ) null = ! vm ( return ; ) ( getEntity = vm org.ovirt.engine.core.common.businessentities.VM { ) ( METHOD_1 boolean public 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 . VdcQueryReturnValue response = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( response . getSucceeded ( ) ) { model . METHOD_1 ( ( ( java.util.ArrayList < TYPE_3 > ) ( response . getReturnValue ( ) ) ) , false ) ; model . METHOD_2 ( STRING_1 ) ; } else { model . METHOD_2 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; } } } } ; ) ) ( METHOD_3 . ) ( getConstants . ) ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( METHOD_2 . model { else } ; ) STRING_1 ( METHOD_2 . model ; ) false , ) ) ) ( getReturnValue . response ( ) > TYPE_3 < java.util.ArrayList ( ( ( METHOD_1 . model { ) ) ( getSucceeded . response ( if ; ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = response VdcQueryReturnValue . TYPE_2 ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( onSuccess void public 
public static void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) { VAR_3 . METHOD_2 ( STRING_1 ) ; TYPE_1 . get ( VAR_4 class ) . METHOD_3 ( VAR_5 . instance , STRING_2 , new TYPE_2 [ ] { } , new java.lang.Object [ ] { } , VAR_1 < java.lang.Integer > getValue ( VAR_6 ) , VAR_1 < java.lang.Integer > getValue ( VAR_6 ) , VAR_7 ) ; VAR_3 . METHOD_2 ( STRING_3 ) ; } } } } ; ) STRING_3 ( METHOD_2 . VAR_3 ; ) VAR_7 , ) VAR_6 ( getValue > java.lang.Integer < VAR_1 , ) VAR_6 ( getValue > java.lang.Integer < VAR_1 , } { ] [ java.lang.Object new , } { ] [ TYPE_2 new , STRING_2 , instance . VAR_5 ( METHOD_3 . ) class VAR_4 ( get . TYPE_1 ; ) STRING_1 ( METHOD_2 . VAR_3 { ) ) VAR_2 ( getValue > java.lang.Boolean < VAR_1 ( if { ) ( METHOD_1 void static public 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; } VAR_1 . put ( vds . METHOD_2 ( ) . toString ( ) , TYPE_1 . name ( ) ) ; } } ; ) ) ( name . TYPE_1 , ) ( toString . ) ( METHOD_2 . vds ( put . VAR_1 } ; ) ( > java.lang.String , java.lang.String < java.util.HashMap new = VAR_1 { ) null == ) VAR_1 ( ( if { ) vds org.ovirt.engine.core.common.businessentities.VDS ( METHOD_1 void private 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) . setEntity ( true ) ; METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . get ( vm . METHOD_6 ( ) ) ) ; METHOD_3 ( ) . METHOD_7 ( vm . METHOD_8 ( ) ) ; METHOD_9 ( ) ; } } ; ) ( METHOD_9 ; ) ) ( METHOD_8 . vm ( METHOD_7 . ) ( METHOD_3 ; ) ) ) ( METHOD_6 . vm ( get . ) ( METHOD_5 . TYPE_1 ( METHOD_4 . ) ( METHOD_3 ; ) true ( setEntity . ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String VAR_1 , java.util.List < java.lang.String > VAR_2 ) { java.lang.String VAR_3 = ( VAR_1 ! = null ) ? VAR_1 : vm . METHOD_2 ( ) ; java.util.List < TYPE_1 > VAR_4 = METHOD_3 ( ) . METHOD_1 ( vm . METHOD_4 ( ) , VAR_3 ) ; if ( ! ( VAR_4 . isEmpty ( ) ) ) { METHOD_3 ( ) . METHOD_5 ( VAR_4 , VAR_2 ) ; return false ; } return true ; } } ; true return } ; false return ; ) VAR_2 , VAR_4 ( METHOD_5 . ) ( METHOD_3 { ) ) ) ( isEmpty . VAR_4 ( ! ( if ; ) VAR_3 , ) ( METHOD_4 . vm ( METHOD_1 . ) ( METHOD_3 = VAR_4 > TYPE_1 < java.util.List ; ) ( METHOD_2 . vm : VAR_1 ? ) null = ! VAR_1 ( = VAR_3 java.lang.String { ) VAR_2 > java.lang.String < java.util.List , VAR_1 java.lang.String , vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 boolean protected 
public static < TYPE_1 extends TYPE_2 . VdcActionParametersBase > boolean METHOD_1 ( TYPE_2 . VdcActionType action , TYPE_1 parameters , TYPE_3 VAR_1 ) { return ( TYPE_4 . METHOD_2 ( TYPE_5 . METHOD_3 ( action . name ( ) , VAR_2 ) , parameters . METHOD_4 ( ) , VAR_1 . METHOD_4 ( ) ) ) ! = null ; } } ; null = ! ) ) ) ( METHOD_4 . VAR_1 , ) ( METHOD_4 . parameters , ) VAR_2 , ) ( name . action ( METHOD_3 . TYPE_5 ( METHOD_2 . TYPE_4 ( return { ) VAR_1 TYPE_3 , parameters TYPE_1 , action VdcActionType . TYPE_2 ( METHOD_1 boolean > VdcActionParametersBase . TYPE_2 extends TYPE_1 < static public 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_1 . get ( 0 ) . METHOD_4 ( ) , STRING_2 ) ; } } ; ) STRING_2 , ) ( METHOD_4 . ) 0 ( get . VAR_1 ( assertEquals . TYPE_2 ; ) 1 , ) ( size . VAR_1 ( assertEquals . TYPE_2 ; ) ) STRING_1 ( METHOD_3 . org.ovirt.engine.core.compat.Guid ( METHOD_2 . dao = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 value ) { TYPE_3 resource = VAR_1 . METHOD_2 ( METHOD_3 ( value ) ) ; if ( ( resource == null ) || ( ! ( resource instanceof TYPE_1 ) ) ) { return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( METHOD_4 ( value ) ) ) ) ; } return ( ( TYPE_1 ) ( resource ) ) ; } } ; ) ) resource ( ) TYPE_1 ( ( return } ; ) ) ) ) value ( METHOD_4 ( METHOD_2 . VAR_1 ( ) TYPE_1 ( ( return { ) ) ) TYPE_1 instanceof resource ( ! ( || ) null == resource ( ( if ; ) ) value ( METHOD_3 ( METHOD_2 . VAR_1 = resource TYPE_3 { ) value TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; METHOD_4 ( METHOD_5 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , java.lang.Boolean . FALSE } , VAR_3 [ 0 ] ) ) ; METHOD_6 ( resource . METHOD_7 ( new TYPE_1 ( ) ) ) ; } } ; ) ) ) ( TYPE_1 new ( METHOD_7 . resource ( METHOD_6 ; ) ) ] 0 [ VAR_3 , } FALSE . java.lang.Boolean , ] 0 [ VAR_3 { ] [ java.lang.Object new , } STRING_2 , STRING_1 { ] [ java.lang.String new , class VAR_2 , VAR_1 ( METHOD_5 ( METHOD_4 ; ) ( METHOD_3 ; ) 1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 , java.lang.String id ) { if ( ! ( METHOD_2 ( value ) ) ) { return ; } VAR_1 . METHOD_3 ( ( ( STRING_1 + id ) + STRING_2 ) ) ; TYPE_4 < TYPE_5 < TYPE_2 , ? > > VAR_2 = VAR_3 . METHOD_4 ( ) ; while ( VAR_2 . METHOD_5 ( ) ) { METHOD_1 ( context , value , VAR_1 , VAR_2 . METHOD_6 ( ) , id ) ; } VAR_1 . METHOD_3 ( STRING_3 ) ; } } ; ) STRING_3 ( METHOD_3 . VAR_1 } ; ) id , ) ( METHOD_6 . VAR_2 , VAR_1 , value , context ( METHOD_1 { ) ) ( METHOD_5 . VAR_2 ( while ; ) ( METHOD_4 . VAR_3 = VAR_2 > > ? , TYPE_2 < TYPE_5 < TYPE_4 ; ) ) STRING_2 + ) id + STRING_1 ( ( ( METHOD_3 . VAR_1 } ; return { ) ) ) value ( METHOD_2 ( ! ( if { ) id java.lang.String , VAR_1 TYPE_3 , value TYPE_2 , context TYPE_1 ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM object ) { final org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_2 ( ) . getEntity ( ) ; if ( ( object . getStatus ( ) . equals ( VAR_1 ) ) & & ( vds . getId ( ) . equals ( object . METHOD_3 ( ) ) ) ) { return VAR_2 ; } return object . getStatus ( ) ; } } ; ) ( getStatus . object return } ; VAR_2 return { ) ) ) ) ( METHOD_3 . object ( equals . ) ( getId . vds ( & & ) ) VAR_1 ( equals . ) ( getStatus . object ( ( if ; ) ( getEntity . ) ( METHOD_2 = vds org.ovirt.engine.core.common.businessentities.VDS final { ) object org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 TYPE_1 protected 
protected boolean METHOD_1 ( ) { boolean returnValue = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; returnValue = false ; } else if ( ( METHOD_3 ( ) ) & & ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ! = ( VAR_2 ) ) ) { addCanDoActionMessage ( VAR_3 ) ; returnValue = false ; } return returnValue ; } } ; returnValue return } ; false = returnValue ; ) VAR_3 ( addCanDoActionMessage { ) ) ) VAR_2 ( = ! ) ) ( METHOD_4 . ) ( METHOD_2 . TYPE_1 ( ( & & ) ) ( METHOD_3 ( ( if else } ; false = returnValue ; ) VAR_1 ( addCanDoActionMessage { ) null == ) ) ( METHOD_2 . TYPE_1 ( ( if ; true = returnValue boolean { ) ( METHOD_1 boolean protected 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . hosts = hosts ; VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 ; hosts = hosts . VAR_1 ; ) ) returnValue ( ) > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ( ( = hosts > org.ovirt.engine.core.common.businessentities.VDS < java.util.ArrayList ; ) ) target ( ) TYPE_1 ( ( = VAR_1 TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { METHOD_3 ( STRING_1 ) ; } if ( ! ( VAR_1 . METHOD_4 ( ) ) ) { METHOD_3 ( STRING_2 ) ; } if ( ! ( VAR_1 . METHOD_5 ( ) ) ) { METHOD_3 ( STRING_3 ) ; } if ( ! ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ) { METHOD_3 ( STRING_4 ) ; } METHOD_8 ( VAR_1 . METHOD_6 ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( METHOD_6 . VAR_1 ( METHOD_8 } ; ) STRING_4 ( METHOD_3 { ) ) ) ( METHOD_7 . ) ( METHOD_6 . VAR_1 ( ! ( if } ; ) STRING_3 ( METHOD_3 { ) ) ) ( METHOD_5 . VAR_1 ( ! ( if } ; ) STRING_2 ( METHOD_3 { ) ) ) ( METHOD_4 . VAR_1 ( ! ( if } ; ) STRING_1 ( METHOD_3 { ) ) ) ( METHOD_2 . VAR_1 ( ! ( if { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_5 . METHOD_3 ( ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_6 . METHOD_3 ( ) ) ) . thenReturn ( null ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( VAR_1 . getId ( ) ) , TYPE_4 . METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 . TYPE_4 , ) ) ( getId . VAR_1 ( METHOD_5 . validator ( METHOD_4 . TYPE_3 ; ) null ( thenReturn . ) ) ) ( METHOD_3 . VAR_6 ( get . VAR_4 ( org.mockito.Mockito.when ; ) null ( thenReturn . ) ) ) ( METHOD_3 . VAR_5 ( get . VAR_4 ( org.mockito.Mockito.when ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_3 ( any . TYPE_2 ( get . VAR_2 ( org.mockito.Mockito.when ; ) ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else if ( VAR_1 == ( getModel ( ) . METHOD_3 ( ) ) ) { return VAR_4 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_1 , source ( METHOD_1 . super return { else } ; ) ( get . VAR_4 return { ) ) ) ( METHOD_3 . ) ( getModel ( == VAR_1 ( if else } ; ) ( get . VAR_3 return { ) ) ) ( METHOD_2 . ) ( getModel ( == VAR_1 ( if { ) VAR_2 TYPE_2 , VAR_1 org.ovirt.engine.ui.uicommonweb.UICommand , source TYPE_3 ( METHOD_1 > ? , TYPE_2 extends ? < TYPE_1 public 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 < TYPE_2 . ValidationResult > VAR_2 ) { org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( VAR_4 ) ) . thenReturn ( ( VAR_1 ? TYPE_3 . METHOD_4 ( ) : TYPE_3 . METHOD_5 ( null ) ) ) ; TYPE_4 . METHOD_6 ( validator . METHOD_7 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_7 . validator ( METHOD_6 . TYPE_4 ; ) ) ) null ( METHOD_5 . TYPE_3 : ) ( METHOD_4 . TYPE_3 ? VAR_1 ( ( thenReturn . ) ) VAR_4 ( METHOD_3 . VAR_5 ( org.mockito.Mockito.when ; ) VAR_4 ( thenReturn . ) ) ( METHOD_2 . VAR_3 ( org.mockito.Mockito.when { ) VAR_2 > ValidationResult . TYPE_2 < TYPE_1 , VAR_1 boolean ( METHOD_1 void private 
public void METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( new TYPE_1 . DiskImage ( ) ) ; TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , VAR_1 , null ) , true , null ) ; } } ; ) null , true , ) null , VAR_1 , ) ( org.ovirt.engine.core.common.businessentities.VM new ( METHOD_3 . VAR_2 ( METHOD_2 . TYPE_2 ; ) ) ( DiskImage . TYPE_1 new ( add . VAR_1 ; ) ( > < java.util.ArrayList new = VAR_1 > Disk . TYPE_1 < java.util.List { ) ( METHOD_1 void public 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( VAR_2 class ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) command ( when . ) VAR_4 ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) VAR_3 ( org.mockito.Mockito.doReturn ; ) ) class VAR_2 ( any . TYPE_1 ( METHOD_3 . ) command ( when . ) null ( org.mockito.Mockito.doReturn ; ) ( METHOD_2 . ) command ( when . ) VAR_1 ( org.mockito.Mockito.doReturn { ) ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_3 ( VAR_4 ) . METHOD_2 ( ) ; this . VAR_5 = new TYPE_4 ( VAR_3 ) ; this . VAR_6 = new TYPE_5 ( VAR_3 , this . VAR_5 ) ; VAR_2 . put ( VAR_7 , VAR_8 ) ; } } ; ) VAR_8 , VAR_7 ( put . VAR_2 ; ) VAR_5 . this , VAR_3 ( TYPE_5 new = VAR_6 . this ; ) VAR_3 ( TYPE_4 new = VAR_5 . this ; ) ( METHOD_2 . ) VAR_4 ( TYPE_3 new = VAR_3 TYPE_2 { ) VAR_2 TYPE_1 , VAR_1 TYPE_1 ( METHOD_1 void private 
private java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( new java.util.ArrayList ( METHOD_5 ( ) ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( new java.util.ArrayList ( METHOD_5 ( ) ) ) ; return new java.util.ArrayList ( TYPE_2 . METHOD_6 ( VAR_3 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_3 ( METHOD_6 . TYPE_2 ( java.util.ArrayList new return ; ) ) ) ( METHOD_5 ( java.util.ArrayList new ( METHOD_4 . VAR_4 ; ) VAR_2 ( METHOD_3 . VAR_4 ; ) VAR_1 ( METHOD_2 . VAR_4 ; ) ( TYPE_1 new = VAR_4 TYPE_1 ; ) ) ) ( METHOD_5 ( java.util.ArrayList new ( METHOD_4 . VAR_3 ; ) VAR_2 ( METHOD_3 . VAR_3 ; ) VAR_1 ( METHOD_2 . VAR_3 ; ) ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 java.lang.String , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 > TYPE_1 < java.util.List private 
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) ! = null ) { TYPE_1 . METHOD_3 ( this ) ; } if ( ! ( METHOD_4 ( ) ) ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { TYPE_2 . METHOD_5 ( this ) ; } TYPE_1 . METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 . TYPE_1 } ; ) this ( METHOD_5 . TYPE_2 { ) null == ) ) ( METHOD_2 . TYPE_1 ( ( if { ) ) ) ( METHOD_4 ( ! ( if } ; ) this ( METHOD_3 . TYPE_1 { ) null = ! ) ) ( METHOD_2 . TYPE_1 ( ( if { ) ( METHOD_1 void private 
protected boolean METHOD_1 ( ) { return ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) & & ( METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ) ; } } ; ) ) ) ( METHOD_7 . TYPE_1 , ) ( METHOD_6 . ) ( getParameters . TYPE_1 , ) ( METHOD_5 . ) ( getParameters . TYPE_1 ( METHOD_4 ( & & ) ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 ( return { ) ( METHOD_1 boolean protected 
protected void METHOD_1 ( ) { if ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) . VAR_1 ) ) { return ; } TYPE_2 VAR_2 = new TYPE_2 ( vds . getId ( ) ) ; VAR_2 . METHOD_4 ( vds ) ; VAR_2 . METHOD_5 ( STRING_1 , TYPE_1 . METHOD_3 ( ) . VAR_1 ) ; VAR_3 . log ( VAR_2 , VAR_4 ) ; } } ; ) VAR_4 , VAR_2 ( log . VAR_3 ; ) VAR_1 . ) ( METHOD_3 . TYPE_1 , STRING_1 ( METHOD_5 . VAR_2 ; ) vds ( METHOD_4 . VAR_2 ; ) ) ( getId . vds ( TYPE_2 new = VAR_2 TYPE_2 } ; return { ) ) VAR_1 . ) ( METHOD_3 . TYPE_1 ( METHOD_2 ( if { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { TYPE_1 params = METHOD_2 ( ) ; org.mockito.Mockito.when ( params . METHOD_3 ( ) ) . thenReturn ( vmId ) ; TYPE_2 < TYPE_1 > VAR_1 = METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; java.util.List < TYPE_3 > VAR_2 = ( ( java.util.List < TYPE_3 > ) ( VAR_1 . METHOD_6 ( ) . getReturnValue ( ) ) ) ; TYPE_4 . METHOD_7 ( STRING_1 , VAR_2 . METHOD_8 ( VAR_3 ) ) ; TYPE_4 . assertEquals ( STRING_2 , 1 , VAR_2 . size ( ) ) ; } } ; ) ) ( size . VAR_2 , 1 , STRING_2 ( assertEquals . TYPE_4 ; ) ) VAR_3 ( METHOD_8 . VAR_2 , STRING_1 ( METHOD_7 . TYPE_4 ; ) ) ) ( getReturnValue . ) ( METHOD_6 . VAR_1 ( ) > TYPE_3 < java.util.List ( ( = VAR_2 > TYPE_3 < java.util.List ; ) ( METHOD_5 . VAR_1 ; ) ( METHOD_4 = VAR_1 > TYPE_1 < TYPE_2 ; ) vmId ( thenReturn . ) ) ( METHOD_3 . params ( org.mockito.Mockito.when ; ) ( METHOD_2 = params TYPE_1 { ) ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( ( VAR_3 . size ( ) ) > 0 ) { VAR_2 . put ( VAR_4 , VAR_3 ) ; } } } } ; ) VAR_3 , VAR_4 ( put . VAR_2 { ) 0 > ) ) ( size . VAR_3 ( ( if ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_2 = VAR_3 > java.lang.String , java.lang.String < java.util.Map { ) VAR_2 > java.lang.Object , java.lang.String < java.util.Map , VAR_1 TYPE_1 ( METHOD_1 void static private 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { for ( org.ovirt.engine.core.common.businessentities . Disk disk : vm . METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ( disk . METHOD_4 ( ) ) == ( VAR_1 ) ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( disk ) ) ; diskImage . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . METHOD_7 ( diskImage . METHOD_8 ( ) , diskImage . METHOD_9 ( ) ) ) ; } } } } } } ; ) ) ) ( METHOD_9 . diskImage , ) ( METHOD_8 . diskImage ( METHOD_7 . TYPE_1 ( METHOD_6 . ) ( METHOD_5 . diskImage ; ) ) disk ( ) org.ovirt.engine.core.common.businessentities.DiskImage ( ( = diskImage org.ovirt.engine.core.common.businessentities.DiskImage { ) ) VAR_1 ( == ) ) ( METHOD_4 . disk ( ( if { ) ) ( METHOD_3 . ) ( METHOD_2 . vm : disk Disk . org.ovirt.engine.core.common.businessentities ( for { ) vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 void static public 
public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( this ) == obj ) { return true ; } if ( ( obj . METHOD_1 ( ) ) ! = ( this . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) & & ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } } ; ) ) VAR_4 , VAR_3 ( equals . TYPE_2 ( & & ) ) VAR_2 , VAR_1 ( equals . TYPE_2 ( return ; ) ) obj ( ) TYPE_1 ( ( = other TYPE_1 } ; false return { ) ) ) ( METHOD_1 . this ( = ! ) ) ( METHOD_1 . obj ( ( if } ; true return { ) obj == ) this ( ( if } ; false return { ) null == obj ( if { ) obj java.lang.Object ( equals boolean public 
public static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , TYPE_1 > VAR_2 = new java.util.HashMap < > ( ) ; TYPE_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_2 ) ; VAR_1 . put ( VAR_3 , new java.util.ArrayList ( VAR_2 . METHOD_2 ( ) ) ) ; } } ; ) ) ) ( METHOD_2 . VAR_2 ( java.util.ArrayList new , VAR_3 ( put . VAR_1 ; ) VAR_2 , VAR_3 , VAR_1 ( METHOD_1 . TYPE_2 ; ) ( > < java.util.HashMap new = VAR_2 > TYPE_1 , java.lang.String < java.util.Map { ) VAR_1 TYPE_1 ( METHOD_1 void static public 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = TYPE_4 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) , VAR_3 . METHOD_7 ( ) ) ; METHOD_8 ( VAR_5 , new TYPE_5 ( VAR_4 , VAR_1 ) ) ; } } ; ) ) VAR_1 , VAR_4 ( TYPE_5 new , VAR_5 ( METHOD_8 ; ) ) ( METHOD_7 . VAR_3 , ) ( METHOD_6 . VAR_3 , ) ( METHOD_5 . VAR_3 , ) ( METHOD_4 . VAR_3 , ) ( METHOD_3 . VAR_3 , VAR_2 ( METHOD_2 . TYPE_4 = VAR_4 TYPE_3 { ) VAR_3 TYPE_2 , VAR_2 TYPE_1 , VAR_1 org.ovirt.engine.core.compat.Guid ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } } } } ; ) STRING_4 , STRING_3 , STRING_2 , VAR_4 ( METHOD_7 { ) VAR_4 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_6 ; ) model ( add . VAR_3 { try ; ) ( METHOD_5 . VAR_2 ; ) ) ( METHOD_4 ( METHOD_3 ; ) ] 0 [ VAR_1 ( METHOD_2 . model ; ) ( Network . TYPE_1 new = model Network . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( null ) ; if ( METHOD_4 ( ) ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_5 ( ) . METHOD_6 ( ) , METHOD_5 ( ) . getStoragePoolId ( ) , VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ; METHOD_9 ( ) . METHOD_10 ( VAR_3 ) ; METHOD_11 ( ) ; } return new TYPE_1 ( VAR_4 , VAR_5 ) ; } } ; ) VAR_5 , VAR_4 ( TYPE_1 new return } ; ) ( METHOD_11 ; ) VAR_3 ( METHOD_10 . ) ( METHOD_9 ; ) VAR_1 ( METHOD_8 . ) ( METHOD_7 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ; ) VAR_2 , ) ( getStoragePoolId . ) ( METHOD_5 , ) ( METHOD_6 . ) ( METHOD_5 ( TYPE_2 new = VAR_1 TYPE_2 { ) ) ( METHOD_4 ( if ; ) null ( METHOD_3 ; ) null ( METHOD_2 { ) ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; } } ; ) aQuery , ) id ( TYPE_2 new , VAR_1 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ( > TYPE_1 < java.util.ArrayList new ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) id org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
public void METHOD_1 ( ) { dao . METHOD_2 ( new TYPE_1 ( new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_3 ( ) . toString ( ) ) , VAR_1 . METHOD_4 ( ) ) ) ; TYPE_2 result = dao . get ( new TYPE_1 ( VAR_1 . METHOD_3 ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ) ; TYPE_3 . METHOD_5 ( result ) ; } } ; ) result ( METHOD_5 . TYPE_3 ; ) ) ) ) ( toString . ) ( METHOD_4 . VAR_1 ( org.ovirt.engine.core.compat.Guid new , ) ( METHOD_3 . VAR_1 ( TYPE_1 new ( get . dao = result TYPE_2 ; ) ) ) ( METHOD_4 . VAR_1 , ) ) ( toString . ) ( METHOD_3 . VAR_1 ( org.ovirt.engine.core.compat.Guid new ( TYPE_1 new ( METHOD_2 . dao { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 , null ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_2 ) . METHOD_5 ( TYPE_3 . any ( VAR_3 . String class ) , TYPE_3 . any ( VAR_4 . Guid class ) ) ; return command ; } } ; command return ; ) ) class Guid . VAR_4 ( any . TYPE_3 , ) class String . VAR_3 ( any . TYPE_3 ( METHOD_5 . ) VAR_2 ( when . ) null ( org.mockito.Mockito.doReturn ; ) ( METHOD_4 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ) null , VAR_1 ( TYPE_1 new ( METHOD_3 . org.mockito.Mockito = command ; ) ) ( METHOD_2 ( TYPE_2 new = VAR_1 TYPE_2 { ) ( METHOD_1 TYPE_1 private 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source ! = null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain : VAR_1 ) { if ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_2 . add ( storageDomain ) ; } } return VAR_2 ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } } ; ) ( > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList new return } ; VAR_2 return } } ; ) storageDomain ( add . VAR_2 { ) ) VAR_3 ( == ) ) ( METHOD_2 . storageDomain ( ( if { ) VAR_1 : storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ( for ; ) ( > < java.util.ArrayList new = VAR_2 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ; ) ) source ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList ( ( = VAR_1 > org.ovirt.engine.core.common.businessentities.StorageDomain < java.util.ArrayList { ) null = ! source ( if { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( METHOD_1 java.lang.Object public 
public void METHOD_1 ( ) { cmd . getParameters ( ) . getVm ( ) . METHOD_2 ( cluster . getId ( ) ) ; cmd . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . any ( VAR_2 . Version class ) ) ) . thenReturn ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( STRING_2 , cmd . METHOD_8 ( ) ) ; } } ; ) ) ( METHOD_8 . cmd , STRING_2 ( METHOD_7 . TYPE_3 ; ) ) ) STRING_1 ( METHOD_6 . TYPE_2 ( > < java.util.ArrayList new ( thenReturn . ) ) ) class Version . VAR_2 ( any . TYPE_1 , ) ( METHOD_5 . TYPE_1 ( METHOD_4 . VAR_1 ( org.mockito.Mockito.when ; ) ( METHOD_3 . cmd ; ) ) ( getId . cluster ( METHOD_2 . ) ( getVm . ) ( getParameters . cmd { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( TYPE_2 , STRING_1 ) ) ; METHOD_2 ( VAR_2 , TYPE_1 . METHOD_3 ( TYPE_2 , STRING_2 ) ) ; METHOD_2 ( VAR_3 , TYPE_1 . METHOD_3 ( TYPE_2 , STRING_3 ) ) ; METHOD_2 ( VAR_4 , TYPE_1 . METHOD_3 ( TYPE_2 , STRING_4 ) ) ; METHOD_2 ( VAR_5 , TYPE_1 . METHOD_3 ( TYPE_2 , STRING_5 ) ) ; } } ; ) ) STRING_5 , TYPE_2 ( METHOD_3 . TYPE_1 , VAR_5 ( METHOD_2 ; ) ) STRING_4 , TYPE_2 ( METHOD_3 . TYPE_1 , VAR_4 ( METHOD_2 ; ) ) STRING_3 , TYPE_2 ( METHOD_3 . TYPE_1 , VAR_3 ( METHOD_2 ; ) ) STRING_2 , TYPE_2 ( METHOD_3 . TYPE_1 , VAR_2 ( METHOD_2 ; ) ) STRING_1 , TYPE_2 ( METHOD_3 . TYPE_1 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) { TYPE_1 . AsyncQuery VAR_1 = new TYPE_1 . AsyncQuery ( ) ; VAR_2 = new TYPE_2 ( ) { public void onSuccess ( java.lang.Object returnValue ) { TYPE_3 < TYPE_4 > VAR_3 = ( ( TYPE_3 < TYPE_4 > ) ( returnValue ) ) ; VAR_4 = TYPE_5 . METHOD_2 ( VAR_3 ) ; METHOD_3 ( ) ; } } ; TYPE_6 . getInstance ( ) . METHOD_4 ( getEntity ( ) . getStoragePoolId ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( getStoragePoolId . ) ( getEntity ( METHOD_4 . ) ( getInstance . TYPE_6 ; } } ; ) ( METHOD_3 ; ) VAR_3 ( METHOD_2 . TYPE_5 = VAR_4 ; ) ) returnValue ( ) > TYPE_4 < TYPE_3 ( ( = VAR_3 > TYPE_4 < TYPE_3 { ) returnValue java.lang.Object ( onSuccess void public { ) ( TYPE_2 new = VAR_2 ; ) ( AsyncQuery . TYPE_1 new = VAR_1 AsyncQuery . TYPE_1 { ) ( METHOD_1 void private 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ! = null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } } ; ) aQuery , ) VAR_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters new , VAR_2 ( runQuery . ) ( org.ovirt.engine.ui.frontend.Frontend.getInstance ; } } ; ) ( > TYPE_1 < java.util.ArrayList new : ) ) source ( ) > TYPE_1 < java.util.ArrayList ( ( ? null = ! source return { ) _asyncQuery org.ovirt.engine.ui.frontend.AsyncQuery , source java.lang.Object ( Convert java.lang.Object public { ) ( org.ovirt.engine.ui.frontend.IAsyncConverter new = aQuery.converterCallback { ) VAR_1 org.ovirt.engine.core.compat.Guid , aQuery org.ovirt.engine.ui.frontend.AsyncQuery ( METHOD_1 void static public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , version ) ; java.lang.Object value = VAR_4 < java.lang.Object > METHOD_2 ( TYPE_3 . valueOf ( VAR_1 . toString ( ) ) , version ) ; VAR_2 . put ( VAR_3 , value ) ; } } ; ) value , VAR_3 ( put . VAR_2 ; ) version , ) ) ( toString . VAR_1 ( valueOf . TYPE_3 ( METHOD_2 > java.lang.Object < VAR_4 = value java.lang.Object ; ) version , VAR_1 ( > java.lang.String , TYPE_1 < TYPE_2 new = VAR_3 > java.lang.String , TYPE_1 < TYPE_2 { ) VAR_2 > java.lang.Object , > java.lang.String , TYPE_1 < TYPE_2 < java.util.Map , version java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( final TYPE_1 resource ) { resource . METHOD_2 ( VAR_1 ) ; resource . METHOD_3 ( VAR_2 ) ; resource . METHOD_4 ( VAR_3 ) ; if ( resource instanceof TYPE_2 ) { ( ( TYPE_2 ) ( resource ) ) . METHOD_5 ( VAR_4 ) ; } else if ( resource instanceof TYPE_3 ) { ( ( TYPE_4 ) ( resource ) ) . METHOD_5 ( VAR_4 ) ; } resource . METHOD_6 ( VAR_5 ) ; VAR_6 . add ( resource ) ; } } ; ) resource ( add . VAR_6 ; ) VAR_5 ( METHOD_6 . resource } ; ) VAR_4 ( METHOD_5 . ) ) resource ( ) TYPE_4 ( ( { ) TYPE_3 instanceof resource ( if else } ; ) VAR_4 ( METHOD_5 . ) ) resource ( ) TYPE_2 ( ( { ) TYPE_2 instanceof resource ( if ; ) VAR_3 ( METHOD_4 . resource ; ) VAR_2 ( METHOD_3 . resource ; ) VAR_1 ( METHOD_2 . resource { ) resource TYPE_1 final ( METHOD_1 void private 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; model . METHOD_2 ( ( result ! = null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; } } ; ) ) ) ( > TYPE_3 < java.util.ArrayList new : ) ) result ( ) > TYPE_3 < java.util.ArrayList ( ( ? null = ! result ( ( METHOD_2 . model ; ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( = result java.lang.Object ; ) ) target ( ) TYPE_1 ( ( = model TYPE_1 { ) returnValue java.lang.Object , target java.lang.Object ( METHOD_1 void public 
private TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . setId ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; disk . METHOD_3 ( new java.util.ArrayList ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; return disk ; } } ; disk return ; ) ) ) VAR_2 ( METHOD_2 . TYPE_2 ( java.util.ArrayList new ( METHOD_3 . disk ; ) VAR_2 ( METHOD_2 . TYPE_2 ; ) VAR_1 ( setId . disk ; ) ( DiskImage . TYPE_1 new = disk DiskImage . TYPE_1 { ) ( METHOD_1 DiskImage . TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; vds = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_4 = new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ; storageDomain = new org.ovirt.engine.core.compat.Guid ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_5 ) ; VAR_5 . METHOD_6 ( new org.ovirt.engine.core.compat . Version ( STRING_6 ) ) ; } } ; ) ) STRING_6 ( Version . org.ovirt.engine.core.compat new ( METHOD_6 . VAR_5 ; ) STRING_5 ( METHOD_5 . VAR_5 ; ) ( TYPE_1 new = VAR_5 ; ) STRING_4 ( org.ovirt.engine.core.compat.Guid new = storageDomain ; ) STRING_3 ( org.ovirt.engine.core.compat.Guid new = VAR_4 ; ) STRING_2 ( org.ovirt.engine.core.compat.Guid new = vds ; ) VAR_3 ( METHOD_4 . VAR_2 ; ) ) STRING_1 ( org.ovirt.engine.core.compat.Guid new ( get . dao = VAR_2 ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 = dao ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { if ( result ! = null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm == null ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model ) ) ; VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( vm . getId ( ) ) ) ; } } } } ; ) ) ) ( getId . vm ( TYPE_3 new , VAR_2 ( METHOD_2 . VAR_1 ; ) ) model ( ) TYPE_2 ( ( = VAR_1 TYPE_2 } ; return { ) null == vm ( if ; ) ) ) ( getReturnValue . ) ) result ( ) VdcQueryReturnValue . TYPE_1 ( ( ( ) org.ovirt.engine.core.common.businessentities.VM ( ( = vm org.ovirt.engine.core.common.businessentities.VM { ) null = ! result ( if { ) result java.lang.Object , model java.lang.Object ( METHOD_1 void public 
protected boolean METHOD_1 ( ) { boolean returnValue = super . METHOD_1 ( ) ; TYPE_1 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; if ( returnValue & & ( VAR_1 == null ) ) { addCanDoActionMessage ( VAR_2 ) ; returnValue = false ; } else if ( returnValue & & ( ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) < 0 ) ) { addCanDoActionMessage ( VAR_3 ) ; returnValue = false ; } return returnValue ; } } ; returnValue return } ; false = returnValue ; ) VAR_3 ( addCanDoActionMessage { ) ) 0 < ) ) ( METHOD_5 . ) ( getParameters . TYPE_2 ( ( & & returnValue ( if else } ; false = returnValue ; ) VAR_2 ( addCanDoActionMessage { ) ) null == VAR_1 ( & & returnValue ( if ; ) ) ( METHOD_4 . ) ( METHOD_3 . TYPE_2 ( get . ) ( METHOD_2 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_1 TYPE_1 ; ) ( METHOD_1 . super = returnValue boolean { ) ( METHOD_1 boolean protected 
protected void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; } catch ( java.lang.Exception e ) { java.lang.String VAR_1 = TYPE_2 . METHOD_5 ( e . METHOD_6 ( ) ) . map ( TYPE_3 : : METHOD_7 ) . METHOD_8 ( STRING_1 ) ; log . error ( STRING_2 , VAR_1 ) ; TYPE_1 . METHOD_2 ( ) . METHOD_9 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( ) . METHOD_10 ( false ) ; } } } } ; ) false ( METHOD_10 . ) ( METHOD_2 . TYPE_1 ; ) VAR_1 ( METHOD_9 . ) ( METHOD_2 . TYPE_1 ; ) VAR_1 , STRING_2 ( error . log ; ) STRING_1 ( METHOD_8 . ) METHOD_7 : : TYPE_3 ( map . ) ) ( METHOD_6 . e ( METHOD_5 . TYPE_2 = VAR_1 java.lang.String { ) e java.lang.Exception ( catch } ; ) ) ( METHOD_4 ( METHOD_3 . ) ( METHOD_2 . TYPE_1 { try { ) ( METHOD_1 void protected 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( java.util.List < TYPE_1 . DiskImage > VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( getVm ( ) . METHOD_3 ( ) , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_3 . METHOD_4 ( getParameters ( ) . getStoragePoolId ( ) , VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; return storageDomain ; } } ; storageDomain return ; ) VAR_2 ( METHOD_5 . VAR_1 ; ) VAR_2 , ) ( getStoragePoolId . ) ( getParameters ( METHOD_4 . TYPE_3 = storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ; ) VAR_3 , ) ( METHOD_3 . ) ( getVm ( METHOD_2 . TYPE_2 = VAR_2 > DiskImage . TYPE_1 < java.util.List { ) VAR_1 > DiskImage . TYPE_1 < java.util.List ( METHOD_1 org.ovirt.engine.core.common.businessentities.StorageDomain private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } } } } ; ) VAR_5 ( METHOD_7 { ) VAR_5 TYPE_1 ( catch } ; ) STRING_2 ( METHOD_6 ; ) ( get . resource { try ; ) ( METHOD_5 . VAR_4 ; ) null , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public final TYPE_1 METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( 0 ) ; java.lang.String VAR_3 = METHOD_2 ( VAR_4 . String , name , VAR_1 ) . toString ( ) ; try { VAR_2 = new TYPE_2 ( STRING_1 ) . METHOD_3 ( VAR_3 ) ; } catch ( java.lang.Exception e ) { } return VAR_2 ; } } ; VAR_2 return } { ) e java.lang.Exception ( catch } ; ) VAR_3 ( METHOD_3 . ) STRING_1 ( TYPE_2 new = VAR_2 { try ; ) ( toString . ) VAR_1 , name , String . VAR_4 ( METHOD_2 = VAR_3 java.lang.String ; ) 0 ( TYPE_1 new = VAR_2 TYPE_1 { ) VAR_1 java.lang.String , name java.lang.String ( METHOD_1 TYPE_1 final public 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_3 . Disk > VAR_1 , boolean VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 . Disk disk : VAR_1 ) { if ( ( disk . METHOD_2 ( ) ) == ( VAR_4 ) ) { if ( ( ! VAR_2 ) || ( disk . METHOD_3 ( ) ) ) { VAR_3 . add ( ( ( TYPE_1 ) ( disk ) ) ) ; } } } return VAR_3 ; } } ; VAR_3 return } } } ; ) ) ) disk ( ) TYPE_1 ( ( ( add . VAR_3 { ) ) ) ( METHOD_3 . disk ( || ) VAR_2 ! ( ( if { ) ) VAR_4 ( == ) ) ( METHOD_2 . disk ( ( if { ) VAR_1 : disk Disk . TYPE_3 ( for ; ) ( > < java.util.ArrayList new = VAR_3 > TYPE_1 < java.util.List { ) VAR_2 boolean , VAR_1 > Disk . TYPE_3 extends ? < TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List static private 
protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) ) ; } } ; ) ) class VAR_4 ( any . TYPE_2 , ) VAR_3 ( METHOD_4 . TYPE_2 ( METHOD_3 . ) command ( when . ) VAR_2 ( org.mockito.Mockito.doReturn ; ) ) VAR_1 ! ( ( METHOD_2 . VAR_2 ; ) ( TYPE_1 new = VAR_2 TYPE_1 { ) VAR_1 boolean ( METHOD_1 void protected 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_3 , cmd . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . cmd , VAR_3 ( assertEquals . TYPE_2 ; ) ) class Guid . VAR_2 ( any . TYPE_1 ( METHOD_6 . ) ) 1 ( METHOD_5 . org.mockito.Mockito , VAR_1 ( METHOD_4 . org.mockito.Mockito ; ) ( METHOD_1 . cmd ; ) null , true ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { this . METHOD_1 ( ( returnValue == null ? new java.util.ArrayList < TYPE_1 > ( ) : ( ( java.util.List < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ) ; } } ; ) ) ) ) ) ( getReturnValue . ) ) returnValue ( ) VdcQueryReturnValue . TYPE_2 ( ( ( ) > TYPE_1 < java.util.List ( ( : ) ( > TYPE_1 < java.util.ArrayList new ? null == returnValue ( ( METHOD_1 . this { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( returnValue ! = null ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < java.lang.String > ( ( ( TYPE_3 < java.lang.String > ) ( returnValue ) ) ) ; VAR_1 . add ( STRING_1 ) ; java.lang.String VAR_2 = getModel ( ) . METHOD_1 ( ) . getSelectedItem ( ) ; getModel ( ) . METHOD_1 ( ) . setItems ( VAR_1 ) ; getModel ( ) . METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; } } } } ; ) VAR_2 ( setSelectedItem . ) ( METHOD_1 . ) ( getModel ; ) VAR_1 ( setItems . ) ( METHOD_1 . ) ( getModel ; ) ( getSelectedItem . ) ( METHOD_1 . ) ( getModel = VAR_2 java.lang.String ; ) STRING_1 ( add . VAR_1 ; ) ) ) returnValue ( ) > java.lang.String < TYPE_3 ( ( ( > java.lang.String < TYPE_2 new = VAR_1 > java.lang.String < TYPE_1 { ) null = ! returnValue ( if { ) returnValue java.lang.Object , model java.lang.Object ( onSuccess void public 
void METHOD_1 ( TYPE_1 constants ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( constants . METHOD_5 ( ) ) ; VAR_3 . METHOD_4 ( constants . METHOD_6 ( ) ) ; VAR_4 . METHOD_4 ( constants . METHOD_7 ( ) ) ; VAR_5 . METHOD_4 ( constants . METHOD_8 ( ) ) ; VAR_6 . METHOD_2 ( constants . METHOD_9 ( ) ) ; } } ; ) ) ( METHOD_9 . constants ( METHOD_2 . VAR_6 ; ) ) ( METHOD_8 . constants ( METHOD_4 . VAR_5 ; ) ) ( METHOD_7 . constants ( METHOD_4 . VAR_4 ; ) ) ( METHOD_6 . constants ( METHOD_4 . VAR_3 ; ) ) ( METHOD_5 . constants ( METHOD_4 . VAR_2 ; ) ) ( METHOD_3 . constants ( METHOD_2 . VAR_1 { ) constants TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( ) ; try { resource . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . getStatus ( ) ) ; } } } } ; ) ) ( getStatus . ) ( METHOD_7 . VAR_3 , INT_1 ( assertEquals { ) VAR_3 TYPE_2 ( catch } ; ) STRING_1 ( METHOD_6 ; ) ( METHOD_5 . resource { try ; ) ( METHOD_4 . VAR_2 ; ) VAR_1 ( METHOD_3 ; ) ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( final TYPE_1 . VdcActionType VAR_1 , final TYPE_1 . VdcActionParametersBase parameters , final TYPE_2 VAR_2 , final java.lang.Object VAR_3 , final boolean VAR_4 ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 , parameters , ( VAR_2 ! = null ? VAR_2 : VAR_5 ) , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , ) VAR_5 : VAR_2 ? null = ! VAR_2 ( , parameters , VAR_1 ( METHOD_2 . org.ovirt.engine.ui.frontend.Frontend { ) VAR_4 boolean final , VAR_3 java.lang.Object final , VAR_2 TYPE_2 final , parameters VdcActionParametersBase . TYPE_1 final , VAR_1 VdcActionType . TYPE_1 final ( METHOD_1 void static public 
public int METHOD_1 ( int VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 ++ ) ) ; VAR_3 . METHOD_2 ( ( VAR_1 ++ ) ) ; VAR_4 . METHOD_2 ( ( VAR_1 ++ ) ) ; VAR_1 = VAR_5 . METHOD_1 ( VAR_1 ) ; VAR_6 . METHOD_2 ( ( VAR_1 ++ ) ) ; VAR_7 . METHOD_2 ( ( VAR_1 ++ ) ) ; return VAR_1 ; } } ; VAR_1 return ; ) ) ++ VAR_1 ( ( METHOD_2 . VAR_7 ; ) ) ++ VAR_1 ( ( METHOD_2 . VAR_6 ; ) VAR_1 ( METHOD_1 . VAR_5 = VAR_1 ; ) ) ++ VAR_1 ( ( METHOD_2 . VAR_4 ; ) ) ++ VAR_1 ( ( METHOD_2 . VAR_3 ; ) ) ++ VAR_1 ( ( METHOD_2 . VAR_2 { ) VAR_1 int ( METHOD_1 int public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } } } } ; ) VAR_5 ( METHOD_7 { ) VAR_5 TYPE_1 ( catch } ; ) STRING_2 ( METHOD_6 ; ) ( get . resource { try ; ) ( METHOD_5 . VAR_4 ; ) ) ( > org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface < java.util.ArrayList new , } VAR_3 { ] [ java.lang.Object new , } STRING_1 { ] [ java.lang.String new , class IdQueryParameters . VAR_2 , VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( false , VAR_2 ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_7 ( ) ; TYPE_1 . assertEquals ( cmd . METHOD_8 ( ) , VAR_3 ) ; } } ; ) VAR_3 , ) ( METHOD_8 . cmd ( assertEquals . TYPE_1 ; ) ( METHOD_7 . cmd ; ) ) ( validate . cmd ( METHOD_6 . TYPE_1 ; ) VAR_2 , false ( METHOD_5 ; ) cmd ( METHOD_4 ; ) ) 0 , VAR_1 ( METHOD_3 ( METHOD_2 . org.mockito.Mockito = cmd { ) ( METHOD_1 void public 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , java.util.List < TYPE_1 . DiskImage > VAR_1 ) { for ( TYPE_1 . DiskImage disk : VAR_1 ) { disk . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_3 ( storageDomain . getId ( ) ) ) ) ; } METHOD_4 ( storageDomain . METHOD_5 ( ) , VAR_1 . get ( 0 ) ) ; } } ; ) ) 0 ( get . VAR_1 , ) ( METHOD_5 . storageDomain ( METHOD_4 } ; ) ) ) ) ( getId . storageDomain ( METHOD_3 . TYPE_2 ( > org.ovirt.engine.core.compat.Guid < java.util.ArrayList new ( METHOD_2 . disk { ) VAR_1 : disk DiskImage . TYPE_1 ( for { ) VAR_1 > DiskImage . TYPE_1 < java.util.List , storageDomain org.ovirt.engine.core.common.businessentities.StorageDomain ( METHOD_1 void protected 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat.Guid id : VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( id ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : VAR_2 ) { TYPE_1 . METHOD_6 ( id , VAR_3 ) ; } } TYPE_2 . METHOD_7 ( true ) ; } } ; ) true ( METHOD_7 . TYPE_2 } } ; ) VAR_3 , id ( METHOD_6 . TYPE_1 { ) VAR_2 : VAR_3 Network . org.ovirt.engine.core.common.businessentities ( for ; ) id ( METHOD_5 . ) ( METHOD_4 . ) ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance = VAR_2 > Network . org.ovirt.engine.core.common.businessentities < java.util.List { ) VAR_1 : id org.ovirt.engine.core.compat.Guid ( for ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void protected 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { TYPE_1 . assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_2 . toString ( ) } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_6 ; ) VAR_2 , ) ( METHOD_3 . TYPE_1 , } ) ( toString . TYPE_2 { ] [ java.lang.Object new , } VAR_5 { ] [ java.lang.String new , VAR_4 , VAR_3 ( METHOD_2 ; ) VAR_1 , STRING_1 ( assertEquals . TYPE_1 { java.lang.Exception throws ) VAR_2 java.lang.Object , VAR_1 java.lang.String ( METHOD_1 void protected 
protected void METHOD_1 ( TYPE_1 section ) { VAR_1 . METHOD_2 ( ) . setId ( new org.ovirt.engine.core.compat.Guid ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = section . METHOD_3 ( STRING_2 ) ; if ( node ! = null ) { if ( TYPE_3 . equals ( java.lang.String.valueOf ( VAR_2 ) ) ) { TYPE_3 = java.lang.String.valueOf ( VAR_3 ) ; } VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_4 . METHOD_5 ( TYPE_3 ) ) ; } } } } ; ) ) TYPE_3 ( METHOD_5 . VAR_4 ( METHOD_4 . ) ( METHOD_2 . VAR_1 } ; ) VAR_3 ( java.lang.String.valueOf = TYPE_3 { ) ) ) VAR_2 ( java.lang.String.valueOf ( equals . TYPE_3 ( if { ) null = ! node ( if ; ) STRING_2 ( METHOD_3 . section = node TYPE_1 ; ) ) ) ( getValue . ) STRING_1 ( get . TYPE_2 ( org.ovirt.engine.core.compat.Guid new ( setId . ) ( METHOD_2 . VAR_1 { ) section TYPE_1 ( METHOD_1 void protected 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_8 ; ) ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) ) ( METHOD_3 . TYPE_2 ( thenReturn . ) ) ) ( any . TYPE_1 ( get . VAR_1 ( org.mockito.Mockito.when ; ) ( METHOD_2 { ) ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( TYPE_2 . value ( ) , model . METHOD_2 ( ) ) ; assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( 1 , model . METHOD_3 ( ) . METHOD_3 ( ) . size ( ) ) ; assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . METHOD_3 ( ) . METHOD_3 ( ) . get ( 0 ) . getId ( ) ) ; METHOD_4 ( model ) ; } } ; ) model ( METHOD_4 ; ) ) ( getId . ) 0 ( get . ) ( METHOD_3 . ) ( METHOD_3 . model , ) ( toString . ] VAR_1 [ VAR_2 ( assertEquals ; ) ) ( size . ) ( METHOD_3 . ) ( METHOD_3 . model , 1 ( assertEquals ; ) ) ( getId . model , ) ( toString . ] VAR_1 [ VAR_2 ( assertEquals ; ) ) ( METHOD_2 . model , ) ( value . TYPE_2 ( assertEquals { ) VAR_1 int , model TYPE_1 ( METHOD_1 void protected 
private void METHOD_1 ( ) { VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( command . getStoragePoolId ( ) ) . thenReturn ( VAR_5 ) ; } } ; ) VAR_5 ( thenReturn . ) ) ( getStoragePoolId . command ( org.mockito.Mockito.when ; ) VAR_1 ( thenReturn . ) ) ) class Guid . VAR_4 ( any . TYPE_1 ( get . VAR_3 ( org.mockito.Mockito.when ; ) VAR_2 ( METHOD_2 . VAR_1 ; ) ( org.ovirt.engine.core.common.businessentities.StoragePool new = VAR_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_2 . toString ( ) , VAR_2 , VAR_3 , VAR_4 . VM ) ) ; TYPE_1 . METHOD_5 ( VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_2 . toString ( ) , VAR_5 , VAR_3 , VAR_4 . VM ) ) ; } } ; ) ) VM . VAR_4 , VAR_3 , VAR_5 , ) ( toString . TYPE_2 , ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_1 ( METHOD_5 . TYPE_1 ; ) ) VM . VAR_4 , VAR_3 , VAR_2 , ) ( toString . TYPE_2 , ) ( METHOD_4 . org.ovirt.engine.core.compat.Guid ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( cluster ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities . network result = dao . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; } } ; ) result , VAR_4 ( assertEquals . TYPE_2 ; ) result ( METHOD_4 . TYPE_2 ; ) ) ( METHOD_9 . VAR_4 ( METHOD_8 . dao = result network . org.ovirt.engine.core.common.businessentities ; ) VAR_4 ( METHOD_7 . dao ; ) ) ( METHOD_6 . org.ovirt.engine.core.compat.Guid ( setId . VAR_4 ; ) VAR_3 ( METHOD_5 . VAR_4 ; ) VAR_3 ( METHOD_4 . TYPE_2 ; ) 0 ( get . VAR_1 = VAR_3 TYPE_1 ; ) cluster ( METHOD_3 . ) ( METHOD_2 . VAR_2 = VAR_1 > TYPE_1 < java.util.List { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) ) ; return ; case VAR_4 : METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( false ) ; return ; } super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super } ; return ; ) false ( METHOD_8 . ) ( METHOD_7 . TYPE_2 ; ) VAR_1 ( METHOD_6 : VAR_4 case ; return ; ) ) ) ( METHOD_5 . ) ( getParameters . TYPE_2 , STRING_1 ( METHOD_4 . java.lang.String ( error . VAR_3 : VAR_2 case { ) VAR_1 ( switch ; ) ) ( METHOD_3 . TYPE_2 ( METHOD_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void protected 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; TYPE_1 pool = VAR_1 . get ( 0 ) ; if ( pool ! = null ) { TYPE_2 . METHOD_2 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } } } ; ) ) ( getId . pool , ) ) model ( ) org.ovirt.engine.ui.frontend.AsyncQuery ( ( ( METHOD_2 . TYPE_2 { ) null = ! pool ( if ; ) 0 ( get . VAR_1 = pool TYPE_1 ; ) ) returnValue ( ) > TYPE_1 < java.util.ArrayList ( ( = VAR_1 > TYPE_1 < java.util.ArrayList { ) returnValue java.lang.Object , model java.lang.Object ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; final java.util.ArrayList < TYPE_3 . VdcActionParametersBase > VAR_4 = new java.util.ArrayList < > ( ) ; VAR_4 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) ) ) ; TYPE_4 . METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_5 , VAR_4 ) ; } } ; ) VAR_4 , VAR_5 ( METHOD_9 ; ) VAR_4 ( METHOD_8 . TYPE_4 ; ) ) ) ( METHOD_7 . VAR_1 , ) ( METHOD_6 . VAR_1 ( METHOD_5 . VAR_2 ( METHOD_4 . VAR_4 ; ) ( > < java.util.ArrayList new = VAR_4 > VdcActionParametersBase . TYPE_3 < java.util.ArrayList final ; ) ) ( METHOD_3 ( METHOD_2 . VAR_3 = VAR_2 TYPE_2 final { ) VAR_1 TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( new TYPE_1 ( ) { public void METHOD_8 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_2 ( ) ; } } ) ; METHOD_9 ( ) . METHOD_10 ( ) . METHOD_7 ( new TYPE_1 ( ) { public void METHOD_8 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_11 ( new TYPE_4 ( VAR_2 ) ) ; } } ) ; } } ; ) } } ; ) ) VAR_2 ( TYPE_4 new ( METHOD_11 { ) args TYPE_3 , sender java.lang.Object , VAR_1 TYPE_2 ( METHOD_8 void public { ) ( TYPE_1 new ( METHOD_7 . ) ( METHOD_10 . ) ( METHOD_9 ; ) } } ; ) ( METHOD_2 { ) args TYPE_3 , sender java.lang.Object , VAR_1 TYPE_2 ( METHOD_8 void public { ) ( TYPE_1 new ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void protected 
public static final TYPE_1 < org.ovirt.engine.core.common.businessentities . Disk > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 < org.ovirt.engine.core.common.businessentities . Disk > column = new TYPE_1 < org.ovirt.engine.core.common.businessentities . Disk > ( ) { protected TYPE_3 METHOD_2 ( org.ovirt.engine.core.common.businessentities . Disk object ) { return ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( object ) ) . METHOD_3 ( ) ; } } ; return ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities . Disk > ) ( TYPE_4 . METHOD_4 ( column , VAR_1 ) ) ) ; } } ; ) ) ) VAR_1 , column ( METHOD_4 . TYPE_4 ( ) > Disk . org.ovirt.engine.core.common.businessentities < TYPE_1 ( ( return ; } } ; ) ( METHOD_3 . ) ) object ( ) org.ovirt.engine.core.common.businessentities.DiskImage ( ( return { ) object Disk . org.ovirt.engine.core.common.businessentities ( METHOD_2 TYPE_3 protected { ) ( > Disk . org.ovirt.engine.core.common.businessentities < TYPE_1 new = column > Disk . org.ovirt.engine.core.common.businessentities < TYPE_2 { ) VAR_1 java.lang.String ( METHOD_1 > Disk . org.ovirt.engine.core.common.businessentities < TYPE_1 final static public 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { if ( vm == null ) { return false ; } boolean VAR_1 = TYPE_1 . METHOD_2 ( vm . METHOD_3 ( ) , vm . METHOD_4 ( ) ) ; return ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_5 ( VAR_2 , vm . METHOD_4 ( ) . toString ( ) ) ) ) & & VAR_1 ; } } ; VAR_1 & & ) ) ) ) ( toString . ) ( METHOD_4 . vm , VAR_2 ( METHOD_5 . TYPE_1 ( ) java.lang.Boolean ( ( return ; ) ) ( METHOD_4 . vm , ) ( METHOD_3 . vm ( METHOD_2 . TYPE_1 = VAR_1 boolean } ; false return { ) null == vm ( if { ) vm org.ovirt.engine.core.common.businessentities.VM ( METHOD_1 boolean static public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( VAR_2 , STRING_1 ) ; } org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) . get ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( cluster , VAR_1 . getName ( ) ) ; java.util.List < TYPE_3 > VAR_3 = METHOD_5 ( ) . METHOD_6 ( VAR_1 . getId ( ) ) ; METHOD_7 ( cluster , VAR_3 ) ; } } ; ) VAR_3 , cluster ( METHOD_7 ; ) ) ( getId . VAR_1 ( METHOD_6 . ) ( METHOD_5 = VAR_3 > TYPE_3 < java.util.List ; ) ) ( getName . VAR_1 , cluster ( METHOD_4 ; ) ) ( METHOD_3 . VAR_1 ( get . ) ( METHOD_2 = cluster org.ovirt.engine.core.common.businessentities.VDSGroup } ; ) STRING_1 , VAR_2 ( TYPE_2 new throw { ) null == VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) ) ; TYPE_4 VAR_3 = ( ( TYPE_4 ) ( model ) ) ; VAR_3 . setItems ( VAR_2 ) ; } } ; ) VAR_2 ( setItems . VAR_3 ; ) ) model ( ) TYPE_4 ( ( = VAR_3 TYPE_4 ; ) ) ( TYPE_3 new , VAR_2 ( METHOD_1 . TYPE_2 ; ) ( getReturnValue . ) ) VAR_1 ( ) VdcQueryReturnValue . TYPE_1 ( ( = VAR_2 > org.ovirt.engine.core.common.businessentities.DiskImage < java.util.List { ) VAR_1 java.lang.Object , model java.lang.Object ( onSuccess void public 
public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String [ ] VAR_2 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_3 = null ; if ( VAR_2 ! = null ) { VAR_3 = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; } else { VAR_3 = VAR_4 . METHOD_1 ( VAR_1 ) ; } TYPE_1 VAR_5 = new TYPE_1 ( VAR_3 ) ; return VAR_5 ; } catch ( TYPE_2 VAR_6 ) { throw new TYPE_3 ( VAR_6 ) ; } } } } ; ) VAR_6 ( TYPE_3 new throw { ) VAR_6 TYPE_2 ( catch } ; VAR_5 return ; ) VAR_3 ( TYPE_1 new = VAR_5 TYPE_1 } ; ) VAR_1 ( METHOD_1 . VAR_4 = VAR_3 { else } ; ) VAR_2 , VAR_1 ( METHOD_1 . VAR_4 = VAR_3 { ) null = ! VAR_2 ( if ; null = VAR_3 > java.lang.Object , java.lang.String < java.util.Map { try { ) VAR_2 ] [ java.lang.String , VAR_1 int ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( TYPE_1 . AddVmCommand < TYPE_2 > command ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_1 . setId ( VAR_3 ) ; VAR_2 . setId ( VAR_4 ) ; VAR_5 . put ( VAR_3 , VAR_1 ) ; VAR_5 . put ( VAR_4 , VAR_2 ) ; } } ; ) VAR_2 , VAR_4 ( put . VAR_5 ; ) VAR_1 , VAR_3 ( put . VAR_5 ; ) VAR_4 ( setId . VAR_2 ; ) VAR_3 ( setId . VAR_1 ; ) ( org.ovirt.engine.core.common.businessentities.StorageDomain new = VAR_2 org.ovirt.engine.core.common.businessentities.StorageDomain ; ) ( org.ovirt.engine.core.common.businessentities.StorageDomain new = VAR_1 org.ovirt.engine.core.common.businessentities.StorageDomain { ) command > TYPE_2 < AddVmCommand . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > list = ( ( TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( sender ) ) ; if ( ( list . getSelectedItem ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) & & ( METHOD_4 ( ) ) ) { METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; } else { METHOD_5 ( STRING_1 ) ; } } } } ; ) STRING_1 ( METHOD_5 { else } ; ) ) ( METHOD_6 . VAR_2 ( METHOD_5 { ) ) ) ( METHOD_4 ( & & ) ) ( METHOD_3 . ) ( METHOD_2 . ) ( getSelectedItem . list ( ( if ; ) ) sender ( ) > org.ovirt.engine.core.common.businessentities.StorageDomain < TYPE_3 ( ( = list > org.ovirt.engine.core.common.businessentities.StorageDomain < TYPE_3 { ) args TYPE_2 , sender java.lang.Object , VAR_1 > TYPE_2 extends ? < TYPE_1 ( METHOD_1 void public 

( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  METHOD_3 ( STRING_2 ) )  METHOD_3 ( STRING_2 ) (  METHOD_3 ( VAR_1 , VAR_2 ) )  METHOD_3 ( VAR_1 , VAR_2 ) (  METHOD_3 ( VAR_3 , user ) )  METHOD_3 ( VAR_3 , user ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_3 ( STRING_2 ) )  METHOD_3 ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( out , VAR_2 ) )  VAR_1 . METHOD_1 ( out , VAR_2 ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_1 . query ( TYPE_1 . METHOD_4 ( query , STRING_1 ) ) )  VAR_1 . query ( TYPE_1 . METHOD_4 ( query , STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.PatchSetApproval ) TYPE TYPE_1.PatchSetApproval ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_3 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( ) ) )  VAR_2 . METHOD_1 ( VAR_3 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , line , VAR_3 ) )  METHOD_1 ( VAR_1 , VAR_2 , line , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) VAR VAR (  return VAR_1 . to ( git , STRING_1 ) ; )  return VAR_1 . to ( git , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1.ChangeInfo> ) RETURN java.util.List<TYPE_1.ChangeInfo> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_5 ( ) ; )  throw new TYPE_5 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE TYPE_2.PatchSet ) TYPE TYPE_2.PatchSet ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) )  TYPE_3 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( 0 , cfg . METHOD_3 ( STRING_1 , VAR_1 . getName ( ) , name , VAR_2 ) ) ; )  return TYPE_3 . METHOD_2 ( 0 , cfg . METHOD_3 ( STRING_1 , VAR_1 . getName ( ) , name , VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) )  VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( VAR_3 , cfg ) ) INIT = new TYPE_1 ( VAR_3 , cfg ) ) VAR VAR (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) )  VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = METHOD_2 ( c , ps ) ) INIT = METHOD_2 ( c , ps ) ) VAR VAR (  VAR_1 = c . METHOD_3 ( ) . equals ( ps . getId ( ) ) )  VAR_1 = c . METHOD_3 ( ) . equals ( ps . getId ( ) ) (  return d ; )  return d ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; )  return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( repo , branch , STRING_1 ) ; )  return METHOD_1 ( repo , branch , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ref . METHOD_1 ( ) ) != null ) COND ( ref . METHOD_1 ( ) ) != null ( THEN THEN (  return ref . METHOD_1 ( ) ; )  return ref . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return ref . METHOD_2 ( ) ; )  return ref . METHOD_2 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Key ) RETURN TYPE_1.Key ( NAME getKey ) NAME getKey ( BLOCK BLOCK (  return key ; )  return key ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 . METHOD_2 ( ) ) ) COND ! ( VAR_1 . METHOD_2 ( ) ) ( THEN THEN ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_3 ( ) ) INIT = METHOD_3 ( ) ) VAR VAR (  VAR_3 . METHOD_4 ( VAR_2 ) )  VAR_3 . METHOD_4 ( VAR_2 ) (  VAR_4 . METHOD_4 ( VAR_2 ) )  VAR_4 . METHOD_4 ( VAR_2 ) (  VAR_5 . METHOD_5 ( VAR_4 ) )  VAR_5 . METHOD_5 ( VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( null ) ; )  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . add ( id ) )  VAR_1 . add ( id ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) (  TYPE_2 . METHOD_1 ( ) )  TYPE_2 . METHOD_1 ( ) (  TYPE_3 . METHOD_1 ( ) )  TYPE_3 . METHOD_1 ( ) (  TYPE_4 . METHOD_1 ( ) )  TYPE_4 . METHOD_1 ( ) (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReceiveCommand ) TYPE TYPE_1.ReceiveCommand ( NAME cmd ) NAME cmd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ) . add ( cmd ) )  VAR_1 . METHOD_3 ( ) . add ( cmd ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , project , STRING_1 , false ) )  METHOD_2 ( VAR_1 , project , STRING_1 , false ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ) . contains ( VAR_1 . METHOD_3 ( ) ) ; )  return METHOD_2 ( ) . contains ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . append ( log ( ( STRING_1 + ( VAR_2 . get ( ) . METHOD_2 ( ) ) ) ) ) )  VAR_1 . append ( log ( ( STRING_1 + ( VAR_2 . get ( ) . METHOD_2 ( ) ) ) ) ) (  METHOD_3 ( VAR_3 . get ( ) , STRING_2 , STRING_3 , new java.lang.String [ ] { } ) )  METHOD_3 ( VAR_3 . get ( ) , STRING_2 , STRING_3 , new java.lang.String [ ] { } ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . append ( VAR_2 . getName ( ) ) . append ( STRING_1 ) . append ( value ) . append ( CHAR_1 ) )  VAR_1 . append ( VAR_2 . getName ( ) ) . append ( STRING_1 ) . append ( value ) . append ( CHAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( IN config . METHOD_1 ( VAR_1 ) ) IN config . METHOD_1 ( VAR_1 ) ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( d . METHOD_3 ( ) . getName ( ) ) ) COND METHOD_2 ( d . METHOD_3 ( ) . getName ( ) ) ( THEN THEN (  METHOD_4 ( d , VAR_2 ) )  METHOD_4 ( d , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( FOR FOR ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) COND VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } . METHOD_3 ( ) ) ; )  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = TYPE_1 . METHOD_2 ( name ) )  this . VAR_2 = TYPE_1 . METHOD_2 ( name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ++ ( VAR_1 ) ) == 1 ) COND ( ++ ( VAR_1 ) ) == 1 ( THEN THEN ( IF IF ( COND ( VAR_2 ) == 0 ) COND ( VAR_2 ) == 0 ( THEN THEN (  VAR_3 . METHOD_2 ( true ) )  VAR_3 . METHOD_2 ( true ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 , TYPE_3 . METHOD_3 ( STRING_2 ) ) ) ) INIT = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 , TYPE_3 . METHOD_3 ( STRING_2 ) ) ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1<java.lang.String>> ) TYPE java.util.List<TYPE_1<java.lang.String>> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ( INIT = parseCommit ( VAR_2 ) ) INIT = parseCommit ( VAR_2 ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_1 , commit . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , commit . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME server ) NAME server ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  org.junit.Assert . METHOD_3 ( STRING_1 ) )  org.junit.Assert . METHOD_3 ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_2 ( VAR_1 ) . METHOD_2 ( ) )  new TYPE_2 ( VAR_1 ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . projects ( ) . create ( in ) )  VAR_1 . projects ( ) . create ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ) VAR VAR (  r . append ( changeId . get ( ) ) )  r . append ( changeId . get ( ) ) (  return r . toString ( ) ; )  return r . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; )  return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ; )  return ( VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME insert ) NAME insert ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , null ) )  METHOD_1 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Factory ) TYPE TYPE_1.Factory ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_4> ) TYPE TYPE_3<TYPE_4> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , project , user , VAR_2 , STRING_1 , VAR_3 , TYPE_7 . of ( ) ) )  METHOD_1 ( VAR_1 , project , user , VAR_2 , STRING_1 , VAR_3 , TYPE_7 . of ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.revwalk.RevWalk ) RETURN org.eclipse.jgit.revwalk.RevWalk ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( input . changeId ) != null ? input . changeId : VAR_1 ; )  return ( input . changeId ) != null ? input . changeId : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  e . METHOD_2 ( ) )  e . METHOD_2 ( ) (  TYPE_2 . display ( TYPE_3 . METHOD_3 ( changeId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_3 ( changeId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( this : : METHOD_1 ) ; )  return METHOD_2 ( this : : METHOD_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = false ) INIT = false ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( IN METHOD_2 ( project , VAR_4 ) ) IN METHOD_2 ( project , VAR_4 ) ( BLOCK BLOCK (  VAR_2 &= METHOD_1 ( VAR_3 , VAR_1 ) )  VAR_2 &= METHOD_1 ( VAR_3 , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( db , patchSet , null , false , true ) ; )  return METHOD_2 ( db , patchSet , null , false , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( null ) ; )  return new TYPE_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . equals ( VAR_2 ) ) COND TYPE_1 . equals ( VAR_2 ) ( THEN THEN (  return VAR_3 . METHOD_2 ( ) ; )  return VAR_3 . METHOD_2 ( ) ; ) THEN THEN ) IF IF (  return ( METHOD_3 ( VAR_4 , VAR_1 ) ) && ( METHOD_4 ( ) ) ; )  return ( METHOD_3 ( VAR_4 , VAR_1 ) ) && ( METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( change , event , db ) )  METHOD_2 ( change , event , db ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , null , false , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , null , false , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return STRING_1 + ( VAR_3 . get ( ) ) ; )  return STRING_1 + ( VAR_3 . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) (  VAR_3 . projects ( ) . name ( project . get ( ) ) . branch ( STRING_2 ) . create ( new TYPE_1 ( ) ) )  VAR_3 . projects ( ) . name ( project . get ( ) ) . branch ( STRING_2 ) . create ( new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( commit ) ) INIT = METHOD_2 ( commit ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  display ( ) )  display ( ) (  VAR_2 . display ( VAR_1 ) )  VAR_2 . display ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_2 , new java.lang.String ( res . METHOD_3 ( ) , VAR_1 ) ) )  org.junit.Assert.assertEquals ( STRING_2 , new java.lang.String ( res . METHOD_3 ( ) , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  sshd = false )  sshd = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( STRING_1 ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( res ) )  TYPE_3 . METHOD_2 ( res ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_2 , e ) ; )  throw new TYPE_3 ( STRING_2 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ( FINALLY FINALLY ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1<TYPE_2,TYPE_3,TYPE_4> ) RETURN TYPE_1<TYPE_2,TYPE_3,TYPE_4> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , null , null , id ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , null , null , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( a . METHOD_2 ( ) , b . METHOD_2 ( ) ) ; )  return METHOD_1 ( a . METHOD_2 ( ) , b . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME topic ) NAME topic ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . schema ( VAR_1 ) , topic ) , TYPE_4 . METHOD_3 ( ) ) ) ; )  return query ( TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . schema ( VAR_1 ) , topic ) , TYPE_4 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ( ELSE ELSE (  cm . METHOD_3 ( 0 , VAR_3 , VAR_4 . METHOD_4 ( ) ) )  cm . METHOD_3 ( 0 , VAR_3 , VAR_4 . METHOD_4 ( ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( STRING_1 ) )  VAR_1 . METHOD_2 ( STRING_1 ) (  VAR_1 . METHOD_3 ( 2 ) )  VAR_1 . METHOD_3 ( 2 ) (  VAR_1 . METHOD_4 ( INT_1 ) )  VAR_1 . METHOD_4 ( INT_1 ) (  VAR_1 . METHOD_5 ( INT_2 ) )  VAR_1 . METHOD_5 ( INT_2 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , false ) ; )  return METHOD_1 ( VAR_1 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND n < 0 ) COND n < 0 ( THEN THEN (  VAR_1 = INT_1 )  VAR_1 = INT_1 ) THEN THEN ( ELSE ELSE ( IF IF ( COND n == 0 ) COND n == 0 ( THEN THEN (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 ) THEN THEN ( ELSE ELSE (  VAR_1 = TYPE_1 . METHOD_2 ( n , VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( n , VAR_2 ) ) ELSE ELSE ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( db , changeId ) ; )  return VAR_1 . METHOD_1 ( db , changeId ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return new TYPE_1 ( name , email ) . METHOD_1 ( ) ; )  return new TYPE_1 ( name , email ) . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_1 , e ) ; )  throw new TYPE_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( res . METHOD_2 ( ) , res ) ; )  return TYPE_3 . METHOD_1 ( res . METHOD_2 ( ) , res ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) . METHOD_6 ( METHOD_6 ( ) ) ; )  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) . METHOD_6 ( METHOD_6 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( row ) ) != null ) COND ( METHOD_2 ( row ) ) != null ( THEN THEN (  METHOD_3 ( row ) )  METHOD_3 ( row ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( input . getChange ( ) ) != null ; )  return ( input . getChange ( ) ) != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME modules ) NAME modules ( INIT = new java.util.ArrayList < TYPE_2 > ( ) ) INIT = new java.util.ArrayList < TYPE_2 > ( ) ) VAR VAR (  modules.add ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) )  modules.add ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) (  return VAR_2 . METHOD_2 ( modules ) ; )  return VAR_2 . METHOD_2 ( modules ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME rw ) NAME rw ( INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ( INIT = rw . parseCommit ( VAR_1 ) ) INIT = rw . parseCommit ( VAR_1 ) ) VAR VAR (  return VAR_2 . METHOD_2 ( db , rw , commit ) ; )  return VAR_2 . METHOD_2 ( db , rw , commit ) ; ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME add ) NAME add ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 != null ) && ( ( VAR_2 . METHOD_1 ( ) ) != null ) ) COND ( VAR_2 != null ) && ( ( VAR_2 . METHOD_1 ( ) ) != null ) ( THEN THEN (  add ( VAR_1 , VAR_2 . METHOD_1 ( ) ) )  add ( VAR_1 , VAR_2 . METHOD_1 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . append ( CHAR_1 ) )  VAR_1 . append ( CHAR_1 ) (  VAR_1 . append ( VAR_2 . name ( ) ) )  VAR_1 . append ( VAR_2 . name ( ) ) (  VAR_1 . append ( CHAR_1 ) )  VAR_1 . append ( CHAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( true , java.util.Collections . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_1 ) ) , VAR_2 ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( true , java.util.Collections . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_1 ) ) , VAR_2 ) ) (  METHOD_2 ( TYPE_3 . METHOD_6 ( true ) ) )  METHOD_2 ( TYPE_3 . METHOD_6 ( true ) ) (  METHOD_7 ( new TYPE_4 ( VAR_3 ) ) )  METHOD_7 ( new TYPE_4 ( VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; )  return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME set ) NAME set ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_2 . get ( ) )  VAR_1 = TYPE_2 . get ( ) (  super . set ( value ) )  super . set ( value ) (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; )  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( branch ) ) COND TYPE_2 . METHOD_2 ( branch ) ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  TYPE_2 . METHOD_3 ( branch ) )  TYPE_2 . METHOD_3 ( branch ) ) BLOCK BLOCK ( FINALLY FINALLY (  TYPE_2 . METHOD_4 ( branch ) )  TYPE_2 . METHOD_4 ( branch ) ) FINALLY FINALLY ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ? null : VAR_1 ; )  return ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ? null : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN Account.Id ) RETURN Account.Id ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . getAccountId ( ) ; )  return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . getAccountId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME base ) NAME base ( BLOCK BLOCK (  return new TYPE_1 ( null ) ; )  return new TYPE_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( revision , VAR_1 , 0 ) ; )  return TYPE_1 . METHOD_1 ( revision , VAR_1 , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( ! ( e . getValue ( ) ) ) ) )  VAR_1 . METHOD_2 ( ( ! ( e . getValue ( ) ) ) ) (  view . METHOD_3 ( ( ! ( e . getValue ( ) ) ) ) )  view . METHOD_3 ( ( ! ( e . getValue ( ) ) ) ) (  view . METHOD_4 ( ) )  view . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.AccountGroup ) TYPE com.google.gerrit.reviewdb.client.AccountGroup ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , user . get ( ) , group ) ; )  return new TYPE_1 ( VAR_1 , user . get ( ) , group ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN com.google.gerrit.reviewdb.client.PatchSet ) RETURN com.google.gerrit.reviewdb.client.PatchSet ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( db , psId . getParentKey ( ) ) . patchSet ( psId ) ; )  return VAR_1 . create ( db , psId . getParentKey ( ) ) . patchSet ( psId ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  METHOD_1 ( ) )  METHOD_1 ( ) (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( result . METHOD_3 ( ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( result . METHOD_3 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) )  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) (  METHOD_2 ( VAR_1 . get ( ) ) )  METHOD_2 ( VAR_1 . get ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  org.junit.Assert.assertEquals ( name , VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) )  org.junit.Assert.assertEquals ( name , VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 , false ) )  TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( null , null , null ) ; )  return METHOD_1 ( null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_1 ( value ) )  METHOD_2 ( ) . METHOD_1 ( value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; )  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == 0 ) COND VAR_1 == 0 ( THEN THEN (  return STRING_1 ; )  return STRING_1 ; ) THEN THEN ( ELSE ELSE (  return java.lang.String.format ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , STRING_4 ) ; )  return java.lang.String.format ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , STRING_4 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME id ) NAME id ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( IF IF ( COND id . METHOD_2 ( VAR_2 ) ) COND id . METHOD_2 ( VAR_2 ) ( THEN THEN (  return id . METHOD_3 ( ) ; )  return id . METHOD_3 ( ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_2 ( email ) , null ) ; )  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_2 ( email ) , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  projects . display ( result ) )  projects . display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_3.HttpServletResponse ) TYPE TYPE_3.HttpServletResponse ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( server , req , VAR_1 ) ; )  return new TYPE_1 ( server , req , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME reject ) NAME reject ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReceiveCommand ) TYPE TYPE_1.ReceiveCommand ( NAME cmd ) NAME cmd ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  cmd . METHOD_1 ( VAR_2 , VAR_1 ) )  cmd . METHOD_1 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME e ) NAME e ( INIT = METHOD_2 ( name ) ) INIT = METHOD_2 ( name ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return METHOD_1 ( e ) ; )  return METHOD_1 ( e ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  e . close ( ) )  e . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final ) MODIFIER public static final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 ) )  TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( project ) , TYPE_2 . commit ( TYPE_2 . schema ( VAR_2 ) , VAR_1 ) ) ) ; )  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( project ) , TYPE_2 . commit ( TYPE_2 . schema ( VAR_2 ) , VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME changes ) NAME changes ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ( IN changes ) IN changes ( BLOCK BLOCK (  cd . METHOD_2 ( ) )  cd . METHOD_2 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_4 ( ) ) INIT = METHOD_4 ( ) ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_5 ( STRING_1 , STRING_1 ) ) INIT = VAR_1 . METHOD_5 ( STRING_1 , STRING_1 ) ) VAR VAR (  assertEquals ( STRING_2 , VAR_2 ) )  assertEquals ( STRING_2 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ( VAR_1 . length ) > 0 ) ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ) > 0 ) ( THEN THEN (  METHOD_2 ( cfg , TYPE_3 . METHOD_3 ( VAR_1 ) ) )  METHOD_2 ( cfg , TYPE_3 . METHOD_3 ( VAR_1 ) ) ) THEN THEN ) IF IF (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN PatchSet.Id ) RETURN PatchSet.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return getChange ( c ) . change ( ) . currentPatchSetId ( ) ; )  return getChange ( c ) . change ( ) . currentPatchSetId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = false )  VAR_1 = false (  METHOD_1 ( ) )  METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) ) THEN THEN ) IF IF (  TYPE_2 . METHOD_4 ( STRING_1 , token ) )  TYPE_2 . METHOD_4 ( STRING_1 , token ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) , java.lang.String . METHOD_2 ( VAR_3 ) ) )  METHOD_1 ( VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) , java.lang.String . METHOD_2 ( VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , new TYPE_1 ( ) , null , null , true ) )  submit ( changeId , new TYPE_1 ( ) , null , null , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) (  METHOD_4 ( VAR_1 , VAR_2 ) )  METHOD_4 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3>> ) TYPE TYPE_1<TYPE_2<TYPE_3>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_4 ( TYPE_3 . base ( project ) ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) )  new TYPE_4 ( TYPE_3 . base ( project ) ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( event . getValue ( ) ) )  TYPE_2 . display ( event . getValue ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = ( name != null ) ? name . METHOD_2 ( ) : null )  VAR_1 = ( name != null ) ? name . METHOD_2 ( ) : null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME refs ) NAME refs ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( args , change . getProject ( ) , change , false , refs ) . METHOD_2 ( ) ; )  return new TYPE_1 ( args , change . getProject ( ) , change , false , refs ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.lib.Repository ) RETURN org.eclipse.jgit.lib.Repository ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( name ) ; )  return VAR_1 . METHOD_1 ( name ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME err ) NAME err ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) )  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( ( name + STRING_2 ) ) . create ( ) . get ( ) . name ) )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( ( name + STRING_2 ) ) . create ( ) . get ( ) . name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( b == 0 ) || ( ( METHOD_2 ( ( b - 1 ) ) ) == CHAR_1 ) ; )  return ( b == 0 ) || ( ( METHOD_2 ( ( b - 1 ) ) ) == CHAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; )  return METHOD_2 ( ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final native ) MODIFIER private static final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME m ) NAME m ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME t ) NAME t ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME id ) NAME id ( BLOCK BLOCK (  return TYPE_1 . toString ( change . getChange ( ) . getId ( ) . get ( ) ) ; )  return TYPE_1 . toString ( change . getChange ( ) . getId ( ) . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , new TYPE_2 ( ) ) )  TYPE_1 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , new TYPE_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_2 . METHOD_3 ( STRING_1 , e ) )  VAR_2 . METHOD_3 ( STRING_1 , e ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 ) )  VAR_1 . METHOD_2 ( STRING_1 ) (  VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) )  VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) (  VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) )  VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return e . METHOD_2 ( ) ; )  return e . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , true ) ; )  return METHOD_1 ( VAR_1 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . format ( INT_1 ) ) )  assertEquals ( STRING_1 , TYPE_1 . format ( INT_1 ) ) (  assertEquals ( STRING_2 , TYPE_1 . format ( - INT_2 ) ) )  assertEquals ( STRING_2 , TYPE_1 . format ( - INT_2 ) ) (  assertEquals ( STRING_3 , TYPE_1 . format ( - INT_3 ) ) )  assertEquals ( STRING_3 , TYPE_1 . format ( - INT_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( STRING_1 + ( ps . getParentKey ( ) ) ) + STRING_2 ) + ( ps . get ( ) ) ; )  return ( ( STRING_1 + ( ps . getParentKey ( ) ) ) + STRING_2 ) + ( ps . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 , VAR_2 , VAR_3 ) ) )  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 , VAR_2 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  METHOD_3 ( new java.lang.Exception ( VAR_1 ) ) )  METHOD_3 ( new java.lang.Exception ( VAR_1 ) ) (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME ctl ) NAME ctl ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ctl . METHOD_2 ( VAR_1 . data ( ) . change ( ) ) . METHOD_3 ( VAR_1 . patchSet ( ) , VAR_1 . data ( ) ) ; )  return ctl . METHOD_2 ( VAR_1 . data ( ) . change ( ) ) . METHOD_3 ( VAR_1 . patchSet ( ) , VAR_1 . data ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) ) ; )  return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_1<TYPE_2>> ) TYPE java.util.List<TYPE_1<TYPE_2>> ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( ) ) INIT = TYPE_3 . METHOD_2 ( ) ) VAR VAR (  VAR_2 . add ( VAR_3 ) )  VAR_2 . add ( VAR_3 ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . add ( VAR_4 ) )  VAR_2 . add ( VAR_4 ) ) THEN THEN ) IF IF (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . get ( ) . apply ( revision , null ) )  VAR_1 . get ( ) . apply ( revision , null ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_1 , e ) ; )  throw new TYPE_1 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  server . METHOD_2 ( ) )  server . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( project ) ) )  repo = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( project ) ) (  METHOD_4 ( project , STRING_1 ) )  METHOD_4 ( project , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_2 = true )  VAR_2 = true (  VAR_3 . METHOD_2 ( info . METHOD_3 ( ) ) )  VAR_3 . METHOD_2 ( info . METHOD_3 ( ) ) ) THEN THEN ( ELSE ELSE ( IF IF ( COND ! ( VAR_1 . isEmpty ( ) ) ) COND ! ( VAR_1 . isEmpty ( ) ) ( THEN THEN (  METHOD_4 ( true ) )  METHOD_4 ( true ) ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME index ) NAME index ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND b == null ) COND b == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return b . METHOD_2 ( ) ; )  return b . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . get ( VAR_1 , id ) ) ; )  return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . get ( VAR_1 , id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.AccountGroup ) TYPE com.google.gerrit.reviewdb.client.AccountGroup ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . METHOD_2 ( VAR_4 . get ( ) , VAR_1 . getId ( ) , VAR_2 . METHOD_3 ( ) ) ; )  return VAR_3 . METHOD_2 ( VAR_4 . get ( ) , VAR_1 . getId ( ) , VAR_2 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ) RETURN TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME get ) NAME get ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return new TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > ( VAR_1 , VAR_2 . ReviewDb class ) ; )  return new TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > ( VAR_1 , VAR_2 . ReviewDb class ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) ) THEN THEN ) IF IF (  VAR_1 . add ( query ) )  VAR_1 . add ( query ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( ) ) . METHOD_1 ( VAR_1 ) ; )  return new TYPE_1 ( METHOD_2 ( ) ) . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( id , VAR_1 ) . view ( STRING_1 ) . id ( VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( id , VAR_1 ) . view ( STRING_1 ) . id ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( user ) ; )  return VAR_1 . METHOD_2 ( user ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Factory ) TYPE TYPE_1.Factory ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Change ) TYPE TYPE_2.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . create ( change . METHOD_2 ( ) ) . METHOD_3 ( change ) )  VAR_1 . create ( change . METHOD_2 ( ) ) . METHOD_3 ( change ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( cd ) ; )  return new TYPE_3 ( cd ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3.Id ) TYPE TYPE_3.Id ( NAME patch ) NAME patch ) VAR VAR ( VAR VAR ( TYPE TYPE_4.Id ) TYPE TYPE_4.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , args . rw , VAR_2 ) ; )  return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , args . rw , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( this ) ) INIT = new TYPE_1 ( this ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME c ) NAME c ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( c , c ) )  VAR_1 . METHOD_2 ( c , c ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1.Account ) TYPE TYPE_1.Account ( NAME account ) NAME account ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME close ) NAME close ( BLOCK BLOCK (  rw . METHOD_1 ( ) )  rw . METHOD_1 ( ) (  repo . close ( ) )  repo . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( ) ) INIT = VAR_2 . get ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( size ) )  VAR_1 . METHOD_2 ( size ) (  return VAR_1 . apply ( account ) . METHOD_3 ( ) ; )  return VAR_1 . apply ( account ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( change ) ; )  return VAR_1 . create ( change ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return project . getProject ( ) . METHOD_2 ( ) ; )  return project . getProject ( ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME schema ) NAME schema ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ( INIT = schema . METHOD_3 ( ) ) INIT = schema . METHOD_3 ( ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ( INIT = schema . METHOD_3 ( ) ) INIT = schema . METHOD_3 ( ) ) VAR VAR (  METHOD_4 ( ( a != b ) ) )  METHOD_4 ( ( a != b ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( VAR_1 ) ) COND TYPE_2 . METHOD_2 ( VAR_1 ) ( THEN THEN (  return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , VAR_2 ) ) ; )  return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , VAR_2 ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( config , STRING_1 , ref , true ) ; )  return METHOD_2 ( config , STRING_1 , ref , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 . METHOD_2 ( ) ) IN VAR_1 . METHOD_2 ( ) ( BLOCK BLOCK ( IF IF ( COND VAR_2 . getName ( ) . METHOD_3 ( VAR_3 ) ) COND VAR_2 . getName ( ) . METHOD_3 ( VAR_3 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . create ( user ) ; )  return VAR_1 . create ( user ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  METHOD_2 ( VAR_1 , db ) )  METHOD_2 ( VAR_1 , db ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  c . close ( ) )  c . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cm ) NAME cm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  cm . METHOD_3 ( VAR_2 ) )  cm . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME url ) NAME url ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( changeId , r . id ( ) ) ; )  return TYPE_2 . METHOD_1 ( changeId , r . id ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . close ( ) )  VAR_1 . close ( ) (  db . close ( ) )  db . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_3 ( STRING_1 ) )  VAR_2 . METHOD_3 ( STRING_1 ) (  VAR_3 . METHOD_3 ( STRING_1 ) )  VAR_3 . METHOD_3 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( IN METHOD_2 ( ) ) IN METHOD_2 ( ) ( BLOCK BLOCK (  p . METHOD_3 ( name ) )  p . METHOD_3 ( name ) (  p . METHOD_3 ( CHAR_1 ) )  p . METHOD_3 ( CHAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  p . METHOD_4 ( ) )  p . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_1 ( id , path ) . delete ( VAR_1 ) )  TYPE_3 . METHOD_1 ( id , path ) . delete ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) (  factory ( VAR_4 . Factory class ) )  factory ( VAR_4 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( cd . METHOD_2 ( VAR_1 ) ) || ( VAR_2 . METHOD_1 ( cd ) ) ; )  return ( cd . METHOD_2 ( VAR_1 ) ) || ( VAR_2 . METHOD_1 ( cd ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND branch . METHOD_2 ( VAR_1 ) ) COND branch . METHOD_2 ( VAR_1 ) ( THEN THEN (  return branch ; )  return branch ; ) THEN THEN ( ELSE ELSE (  return ( VAR_2 ) + branch ; )  return ( VAR_2 ) + branch ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2.ChangeInfo> ) TYPE TYPE_1<TYPE_2.ChangeInfo> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_1 ( id ) . get ( VAR_1 ) )  TYPE_3 . METHOD_1 ( id ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( name , STRING_1 ) ) || ( TYPE_1 . METHOD_2 ( name , STRING_2 ) ) ; )  return ( TYPE_1 . METHOD_2 ( name , STRING_1 ) ) || ( TYPE_1 . METHOD_2 ( name , STRING_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME label ) NAME label ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  approvals . put ( label . METHOD_2 ( ) , value ) )  approvals . put ( label . METHOD_2 ( ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( STRING_1 . METHOD_2 ( VAR_1 ) ) || ( STRING_2 . METHOD_2 ( VAR_1 ) ) ) || ( STRING_3 . METHOD_2 ( VAR_1 ) ) ; )  return ( ( STRING_1 . METHOD_2 ( VAR_1 ) ) || ( STRING_2 . METHOD_2 ( VAR_1 ) ) ) || ( STRING_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) VAR VAR (  return VAR_3 . equals ( VAR_2 . key ) ; )  return VAR_3 . equals ( VAR_2 . key ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.ReviewDb ) TYPE TYPE_2.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return db . METHOD_1 ( ) . METHOD_2 ( TYPE_4 . getAccountId ( ) ) . METHOD_3 ( ) ; )  return db . METHOD_1 ( ) . METHOD_2 ( TYPE_4 . getAccountId ( ) ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 . METHOD_2 ( null ) , INT_1 , STRING_1 , VAR_1 , STRING_1 ) ; )  return new TYPE_1 ( TYPE_2 . METHOD_2 ( null ) , INT_1 , STRING_1 , VAR_1 , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_1 ( row , VAR_1 , name ) )  METHOD_2 ( ) . METHOD_1 ( row , VAR_1 , name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . error ( ( STRING_1 + ( c . getId ( ) ) ) , t ) )  VAR_1 . error ( ( STRING_1 + ( c . getId ( ) ) ) , t ) (  VAR_2 . set ( false ) )  VAR_2 . set ( false ) (  VAR_3 . update ( 1 ) )  VAR_3 . update ( 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) )  org.junit.Assert.assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME isEmpty ) NAME isEmpty ( BLOCK BLOCK (  return ( VAR_1 . isEmpty ( ) ) && ( VAR_2 . isEmpty ( ) ) ; )  return ( VAR_1 . isEmpty ( ) ) && ( VAR_2 . isEmpty ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  return new TYPE_1 ( c . getProject ( ) , c . getId ( ) , VAR_1 , walk , VAR_2 , VAR_3 , VAR_4 ) ; )  return new TYPE_1 ( c . getProject ( ) , c . getId ( ) , VAR_1 , walk , VAR_2 , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , false ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , false ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . commit ( id ) ) ; )  return query ( TYPE_1 . commit ( id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_1 ( VAR_2 ) ) INIT = new TYPE_1 ( VAR_2 ) ) VAR VAR (  VAR_4 . put ( VAR_1 , VAR_3 ) )  VAR_4 . put ( VAR_1 , VAR_3 ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_4 < TYPE_2 > ( TYPE_5 . METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_4 < TYPE_2 > ( TYPE_5 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getKey ( ) ) ) ) ) )  TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getKey ( ) ) ) ) ) (  this . psId = psId )  this . psId = psId ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 < TYPE_2 > ( ) )  VAR_1 = new TYPE_1 < TYPE_2 > ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 1 ; )  return 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = new TYPE_1 ( VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { METHOD_2 ( ) ; } } ) ) INIT = new TYPE_1 ( VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { METHOD_2 ( ) ; } } ) ) VAR VAR ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD (  d . METHOD_3 ( ) )  d . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND log . METHOD_2 ( ) ) COND log . METHOD_2 ( ) ( THEN THEN (  log . METHOD_3 ( STRING_1 , new TYPE_2 [ ] { VAR_1 , VAR_2 , VAR_3 } ) )  log . METHOD_3 ( STRING_1 , new TYPE_2 [ ] { VAR_1 , VAR_2 , VAR_3 } ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2.ChangeInfo ) TYPE TYPE_2.ChangeInfo ( NAME c ) NAME c ( INIT = event . getChange ( ) ) INIT = event . getChange ( ) ) VAR VAR (  METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) . email ) )  METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) . email ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cm ) NAME cm ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = cm )  VAR_2 = cm ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  ( VAR_3 ) ++ )  ( VAR_3 ) ++ ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND STRING_1 . equals ( VAR_1 ) ) COND STRING_1 . equals ( VAR_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( 0 , INT_1 ) , INT_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( 0 , INT_1 ) , INT_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_2 . METHOD_1 ( VAR_1 ) ) || ( ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ) ; )  return ( TYPE_2 . METHOD_1 ( VAR_1 ) ) || ( ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME file ) NAME file ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . create ( VAR_2 . METHOD_1 ( revision , TYPE_3 . METHOD_2 ( path ) ) ) ; )  return VAR_1 . create ( VAR_2 . METHOD_1 ( revision , TYPE_3 . METHOD_2 ( path ) ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; )  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,java.util.List<TYPE_1>> ) RETURN java.util.Map<java.lang.String,java.util.List<TYPE_1>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } ) ; )  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( METHOD_2 ( ) ) instanceof TYPE_1 ) && ( ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) ) ; )  return ( ( METHOD_2 ( ) ) instanceof TYPE_1 ) && ( ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . base ( ) , revision , VAR_1 , null , line ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . base ( ) , revision , VAR_1 , null , line ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3<com.google.gerrit.reviewdb.client.AccountGroup> ) TYPE TYPE_3<com.google.gerrit.reviewdb.client.AccountGroup> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_1 ( ) ) INIT = VAR_2 . METHOD_1 ( ) ) VAR VAR (  return METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; )  return METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 ) ( event ) ) ) ) )  VAR_1 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 ) ( event ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  projects . display ( result ) )  projects . display ( result ) (  projects . METHOD_2 ( ) )  projects . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . name = name )  this . name = name (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) (  commit ( ) )  commit ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( TYPE_3 . equals ( VAR_3 , METHOD_3 ( VAR_1 , VAR_2 ) ) ) ; )  return ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( TYPE_3 . equals ( VAR_3 , METHOD_3 ( VAR_1 , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) )  VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) (  METHOD_3 ( false ) )  METHOD_3 ( false ) (  VAR_3 . METHOD_1 ( ) )  VAR_3 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME edit ) NAME edit ( INIT = new TYPE_1 ( VAR_1 , result , path , VAR_2 , VAR_3 , VAR_4 ) ) INIT = new TYPE_1 ( VAR_1 , result , path , VAR_2 , VAR_3 , VAR_4 ) ) VAR VAR (  edit . METHOD_1 ( ) )  edit . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( project ) ) INIT = VAR_2 . create ( project ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  cfg . commit ( VAR_1 ) )  cfg . commit ( VAR_1 ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . close ( ) )  VAR_1 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = project . METHOD_2 ( CHAR_1 ) ) INIT = project . METHOD_2 ( CHAR_1 ) ) VAR VAR ( IF IF ( COND i < 0 ) COND i < 0 ( THEN THEN (  return project ; )  return project ; ) THEN THEN ( ELSE ELSE (  return project . METHOD_3 ( ( i + 1 ) ) ; )  return project . METHOD_3 ( ( i + 1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Branch ) RETURN TYPE_1.Branch ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( put , TYPE_4 . METHOD_1 ( id ) ) ; )  return new TYPE_1 ( put , TYPE_4 . METHOD_1 ( id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . create ( VAR_1 . getChange ( ) , id . get ( ) ) ; )  return VAR_2 . create ( VAR_1 . getChange ( ) , id . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  display ( ) )  display ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( cd , false ) ; )  return new TYPE_3 ( cd , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 + ( TYPE_1 . METHOD_2 ( query ) ) ) + STRING_2 ; )  return ( STRING_1 + ( TYPE_1 . METHOD_2 ( query ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( null ) ) INIT = TYPE_1 . METHOD_2 ( null ) ) VAR VAR (  assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) )  assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( change ) == null ) COND ( change ) == null ( THEN THEN (  change = db . get ( ) . changes ( ) . get ( VAR_1 ) )  change = db . get ( ) . changes ( ) . get ( VAR_1 ) ) THEN THEN ) IF IF (  return change ; )  return change ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( null != s ) && ( ( ( s . equals ( STRING_1 ) ) || ( s . METHOD_2 ( STRING_2 ) ) ) || ( TYPE_1 . METHOD_1 ( s ) ) ) ; )  return ( null != s ) && ( ( ( s . equals ( STRING_1 ) ) || ( s . METHOD_2 ( STRING_2 ) ) ) || ( TYPE_1 . METHOD_1 ( s ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_3 ( true ) )  VAR_2 . METHOD_3 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( TYPE_3 . getName ( ) , id . get ( ) ) ; )  return TYPE_2 . METHOD_2 ( TYPE_3 . getName ( ) , id . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( m . METHOD_1 ( name . value ( ) , VAR_1 ) ) ) COND ! ( m . METHOD_1 ( name . value ( ) , VAR_1 ) ) ( THEN THEN (  throw new TYPE_1 ( java.lang.String.format ( STRING_1 , name . value ( ) ) ) ; )  throw new TYPE_1 ( java.lang.String.format ( STRING_1 , name . value ( ) ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME change ) NAME change ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return cd . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( cd ) ; )  return cd . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( cd ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  return TYPE_2 . change ( STRING_1 , e ) ; )  return TYPE_2 . change ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patch ) NAME patch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( this , repo , cd , patch ) ; )  return TYPE_2 . METHOD_2 ( this , repo , cd , patch ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( cd , true ) ; )  return new TYPE_3 ( cd , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getProject ( ) . getName ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getProject ( ) . getName ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 . getValue ( ) , VAR_1 . getName ( ) ) ; )  return new TYPE_1 ( VAR_1 . getValue ( ) , VAR_1 . getName ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 . getId ( ) , VAR_2 . getId ( ) , STRING_1 ) ) )  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 . getId ( ) , VAR_2 . getId ( ) , STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3>> ) TYPE TYPE_1<TYPE_2<TYPE_3>> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  r . add ( result ) )  r . add ( result ) (  VAR_1 = ! ( result . isEmpty ( ) ) )  VAR_1 = ! ( result . isEmpty ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Change.Key ) RETURN Change.Key ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client.Change . Key ( change . id ) ; )  return new com.google.gerrit.reviewdb.client.Change . Key ( change . id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . display ( TYPE_2 . METHOD_2 ( changeId ) ) )  TYPE_1 . display ( TYPE_2 . METHOD_2 ( changeId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME ctl ) NAME ctl ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ctl . METHOD_2 ( ) ) COND ctl . METHOD_2 ( ) ( THEN THEN (  return new TYPE_1 ( ctl ) ; )  return new TYPE_1 ( ctl ) ; ) THEN THEN ) IF IF (  throw new TYPE_3 ( VAR_1 ) ; )  throw new TYPE_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME changes ) NAME changes ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ( IN changes ) IN changes ( BLOCK BLOCK (  cd . METHOD_2 ( db ) )  cd . METHOD_2 ( db ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 , 0 ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = METHOD_1 ( VAR_1 ) ) INIT = METHOD_1 ( VAR_1 ) ) VAR VAR (  return 0 <= index ? VAR_2 [ index ] : TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return 0 <= index ? VAR_2 [ index ] : TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ( INIT = VAR_1 . METHOD_2 ( TYPE_1 . of ( VAR_2 , STRING_1 , VAR_3 , STRING_2 ) ) ) INIT = VAR_1 . METHOD_2 ( TYPE_1 . of ( VAR_2 , STRING_1 , VAR_3 , STRING_2 ) ) ) VAR VAR (  com.google.common.truth.Truth.assertThat ( query ) . METHOD_3 ( VAR_4 ) )  com.google.common.truth.Truth.assertThat ( query ) . METHOD_3 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME close ) NAME close ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME err ) NAME err ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( err ) ) COND TYPE_2 . METHOD_2 ( err ) ( THEN THEN (  new TYPE_2 ( err . getMessage ( ) ) . METHOD_3 ( ) )  new TYPE_2 ( err . getMessage ( ) ) . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ( ELSE ELSE (  super . METHOD_1 ( err ) )  super . METHOD_1 ( err ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; )  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<TYPE_2<?>> ) RETURN TYPE_1<TYPE_2<?>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2<?>> ) TYPE TYPE_1<TYPE_2<?>> ( NAME b ) NAME b ( INIT = ( ( TYPE_1 < TYPE_2 < ? > > ) ( e ) ) ) INIT = ( ( TYPE_1 < TYPE_2 < ? > > ) ( e ) ) ) VAR VAR (  return b ; )  return b ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) (  bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) )  bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) (  bind ( VAR_5 class ) . to ( VAR_6 class ) )  bind ( VAR_5 class ) . to ( VAR_6 class ) (  bind ( VAR_7 class ) )  bind ( VAR_7 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME git ) NAME git ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) VAR VAR (  return VAR_1 . to ( git , STRING_1 ) ; )  return VAR_1 . to ( git , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( ) ) COND TYPE_2 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ( ELSE ELSE (  TYPE_2 . METHOD_3 ( METHOD_4 ( ) ) )  TYPE_2 . METHOD_3 ( METHOD_4 ( ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  display ( ) )  display ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( project , STRING_1 ) )  METHOD_2 ( project , STRING_1 ) (  VAR_1 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) )  VAR_1 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1.Key<TYPE_2> ) RETURN TYPE_1.Key<TYPE_2> ( NAME key ) NAME key ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . get ( VAR_1 class , TYPE_4 . METHOD_1 ( name ) ) ; )  return TYPE_3 . get ( VAR_1 class , TYPE_4 . METHOD_1 ( name ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> ) RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> ( NAME approvals ) NAME approvals ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( METHOD_2 ( db ) . values ( ) ) ; )  return TYPE_2 . METHOD_1 ( METHOD_2 ( db ) . values ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( true ) )  TYPE_1 . METHOD_2 ( true ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) VAR VAR (  return VAR_1 . to ( git , STRING_1 ) ; )  return VAR_1 . to ( git , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND 0 <= VAR_1 ) COND 0 <= VAR_1 ( THEN THEN (  return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; ) THEN THEN ) IF IF (  return getValue ( ) . METHOD_1 ( ) ; )  return getValue ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( query , VAR_1 ) ; )  return TYPE_1 . METHOD_1 ( query , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( cd . getId ( ) , false ) )  METHOD_2 ( cd . getId ( ) , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND 0 <= VAR_1 ) COND 0 <= VAR_1 ( THEN THEN (  return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; ) THEN THEN ) IF IF (  return value . METHOD_4 ( ) ; )  return value . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , true ) ; )  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , change ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , change ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME config ) NAME config ( INIT = new TYPE_4 ( TYPE_5 . METHOD_2 ( ) , VAR_2 ) ) INIT = new TYPE_4 ( TYPE_5 . METHOD_2 ( ) , VAR_2 ) ) VAR VAR (  config . METHOD_3 ( ) )  config . METHOD_3 ( ) (  return config ; )  return config ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , name ) ; )  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) > 0 ) COND ( VAR_1 ) > 0 ( THEN THEN (  return TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ) ; )  return TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ) ; ) THEN THEN ( ELSE ELSE (  return TYPE_2 . METHOD_4 ( ) ; )  return TYPE_2 . METHOD_4 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Project ) RETURN TYPE_1.Project ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c , msg , true , true ) )  METHOD_2 ( c , msg , true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( null ) ) INIT = new TYPE_1 ( null ) ) VAR VAR (  assertEquals ( 0 , p . METHOD_2 ( ) ) )  assertEquals ( 0 , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME value ) NAME value ( BLOCK BLOCK (  return value ; )  return value ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  approvals = TYPE_1 . of ( ) )  approvals = TYPE_1 . of ( ) (  reviewers = TYPE_2 . of ( ) )  reviewers = TYPE_2 . of ( ) (  VAR_1 = TYPE_3 . of ( ) )  VAR_1 = TYPE_3 . of ( ) (  VAR_2 = TYPE_3 . of ( ) )  VAR_2 = TYPE_3 . of ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) VAR VAR (  TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) )  TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) (  METHOD_5 ( VAR_2 , cfg ) )  METHOD_5 ( VAR_2 , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cm ) NAME cm ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( TYPE_3 . METHOD_3 ( path , METHOD_4 ( cm ) , ( line + 1 ) , null , null ) ) ; )  return METHOD_2 ( TYPE_3 . METHOD_3 ( path , METHOD_4 ( cm ) , ( line + 1 ) , null , null ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.util.Set<TYPE_1.Id> ) RETURN java.util.Set<TYPE_1.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( ) ; )  return java.util.Collections . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( id ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( id ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( STRING_1 , STRING_2 , VAR_1 ) ; )  return METHOD_1 ( STRING_1 , STRING_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ( INIT = METHOD_3 ( STRING_1 ) ) INIT = METHOD_3 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( ( ( id ( STRING_2 ) ) + STRING_3 ) , res . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( ( ( id ( STRING_2 ) ) + STRING_3 ) , res . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . edit ( id ) . delete ( VAR_1 ) )  TYPE_3 . edit ( id ) . delete ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME patchSet ) NAME patchSet ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( patchSet ) )  METHOD_5 ( patchSet ) (  METHOD_6 ( patchSet , 1 ) )  METHOD_6 ( patchSet , 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( cd ) . METHOD_2 ( ) )  METHOD_1 ( cd ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 ) )  VAR_1 . METHOD_2 ( STRING_1 ) (  VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) )  VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) (  VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) )  VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ( INIT = VAR_1 . METHOD_1 ( ) ) INIT = VAR_1 . METHOD_1 ( ) ) VAR VAR ( IF IF ( COND ( s == null ) || ( s . equals ( TYPE_1 . METHOD_2 ( ) ) ) ) COND ( s == null ) || ( s . equals ( TYPE_1 . METHOD_2 ( ) ) ) ( THEN THEN (  s = STRING_1 )  s = STRING_1 ) THEN THEN ) IF IF (  return s ; )  return s ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND topic . METHOD_2 ( ) ) COND topic . METHOD_2 ( ) ( THEN THEN (  topic . METHOD_3 ( ) )  topic . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( TYPE_4 . create ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) ) , VAR_2 . Collections < java.lang.String , java.lang.String > METHOD_4 ( ) ) ; )  return TYPE_3 . METHOD_2 ( TYPE_4 . create ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) ) , VAR_2 . Collections < java.lang.String , java.lang.String > METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . add ( this ) )  VAR_1 . add ( this ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_1 ( ) )  METHOD_1 ( ) ) BLOCK BLOCK ( FINALLY FINALLY ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , args ) )  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , args ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ! ( METHOD_2 ( ) ) ) || ( ( ( VAR_1 ) + 1 ) < ( VAR_2 ) ) ; )  return ( ! ( METHOD_2 ( ) ) ) || ( ( ( VAR_1 ) + 1 ) < ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , c . getProject ( ) , c ) . METHOD_2 ( ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , c . getProject ( ) , c ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return this . VAR_1 ; )  return this . VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  VAR_1 = null )  VAR_1 = null (  VAR_3 = null )  VAR_3 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . create ( VAR_1 ) ; )  return TYPE_1 . create ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME revision ) NAME revision ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME type ) NAME type ( CASE VAR_1 ( BLOCK BLOCK (  this . VAR_3 = TYPE_3 . METHOD_2 ( revision ) )  this . VAR_3 = TYPE_3 . METHOD_2 ( revision ) (  return this ; )  return this ; ) BLOCK BLOCK ) CASE VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  this . VAR_3 = TYPE_3 . METHOD_2 ( revision ) )  this . VAR_3 = TYPE_3 . METHOD_2 ( revision ) (  return this ; )  return this ; ) BLOCK BLOCK ) CASE VAR_2 ( DEFAULT DEFAULT ( BLOCK BLOCK (  throw new TYPE_4 ( java.lang.String.format ( STRING_1 , type ) ) ; )  throw new TYPE_4 ( java.lang.String.format ( STRING_1 , type ) ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( query ( in ) , METHOD_3 ( in ) ) )  org.junit.Assert.assertEquals ( query ( in ) , METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cm ) NAME cm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME group ) NAME group ( INIT = METHOD_2 ( cm ) ) INIT = METHOD_2 ( cm ) ) VAR VAR ( IF IF ( COND group != null ) COND group != null ( THEN THEN (  group . METHOD_1 ( ) )  group . METHOD_1 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_1 ( ) ; } } } ; )  return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_1 ( ) ; } } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME get ) NAME get ( BLOCK BLOCK (  return METHOD_1 ( ) ; )  return METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( false ) )  TYPE_1 . METHOD_2 ( false ) (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . isEmpty ( ) ; )  return VAR_1 . isEmpty ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , project , STRING_1 ) )  METHOD_2 ( VAR_1 , project , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . apply ( account ) ; )  return VAR_1 . apply ( account ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , null ) )  METHOD_1 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_3<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  METHOD_2 ( VAR_1 , db ) )  METHOD_2 ( VAR_1 , db ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN org.eclipse.jgit.revwalk.RevCommit ) RETURN org.eclipse.jgit.revwalk.RevCommit ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<org.eclipse.jgit.lib.Repository> ) TYPE TYPE_2<org.eclipse.jgit.lib.Repository> ( NAME repo ) NAME repo ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( VAR_1 , repo , ( ( org.eclipse.jgit.revwalk.RevCommit [ ] ) ( null ) ) ) ; )  return TYPE_3 . METHOD_1 ( VAR_1 , repo , ( ( org.eclipse.jgit.revwalk.RevCommit [ ] ) ( null ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME label ) NAME label ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label , value ) )  METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) ; )  return ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) ; ) THEN THEN ( ELSE ELSE (  return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; )  return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , account ) )  METHOD_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , account ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME name ) NAME name ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 ) )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 ) (  assertThat ( VAR_5 ) . METHOD_4 ( ) )  assertThat ( VAR_5 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_1 ( ) ) . getName ( VAR_1 ) ; )  return new TYPE_1 ( METHOD_1 ( ) ) . getName ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( edit . METHOD_3 ( ) . METHOD_4 ( ) , org.eclipse.jgit.lib.ObjectId . METHOD_5 ( ) , edit . getRefName ( ) ) ) )  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( edit . METHOD_3 ( ) . METHOD_4 ( ) , org.eclipse.jgit.lib.ObjectId . METHOD_5 ( ) , edit . getRefName ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ) INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ) VAR VAR (  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; )  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . add ( new TYPE_1 ( name , value ) . format ( ) ) )  VAR_1 . add ( new TYPE_1 ( name , value ) . format ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) ) THEN THEN ( ELSE ELSE (  bind ( VAR_2 class ) . METHOD_2 ( VAR_3 < TYPE_2 > of ( null ) ) )  bind ( VAR_2 class ) . METHOD_2 ( VAR_3 < TYPE_2 > of ( null ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; )  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) )  TYPE_4 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) + ( id . toString ( ) ) ; )  return ( VAR_1 ) + ( id . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  admin = VAR_1 . create ( STRING_1 , STRING_2 ) )  admin = VAR_1 . create ( STRING_1 , STRING_2 ) (  VAR_2 = new TYPE_1 ( admin ) )  VAR_2 = new TYPE_1 ( admin ) (  db = VAR_3 . METHOD_2 ( ) )  db = VAR_3 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( changeId , VAR_1 , VAR_2 , VAR_3 ) )  TYPE_2 . METHOD_2 ( changeId , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( id , VAR_1 ) ) )  TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( id , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( token , false ) )  TYPE_1 . METHOD_2 ( token , false ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  TYPE_2 . METHOD_3 ( token ) )  TYPE_2 . METHOD_3 ( token ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.client.Change.Id> ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Change.Id> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( VAR_1 ) ) )  METHOD_2 ( METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = info )  VAR_1 = info (  METHOD_1 ( result ) )  METHOD_1 ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( this ) instanceof TYPE_1 ; )  return ( this ) instanceof TYPE_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.lib.Repository ) RETURN org.eclipse.jgit.lib.Repository ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return repo ; )  return repo ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . close ( ) )  VAR_1 . close ( ) (  VAR_2 . close ( ) )  VAR_2 . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.PatchSet ) RETURN com.google.gerrit.reviewdb.client.PatchSet ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 , true ) )  submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  res . METHOD_2 ( VAR_2 ) )  res . METHOD_2 ( VAR_2 ) (  res . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) )  res . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) (  METHOD_4 ( req , res ) )  METHOD_4 ( req , res ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( this . token , new TYPE_2 ( TYPE_3 . METHOD_1 ( this . token ) ) ) )  TYPE_1 . display ( this . token , new TYPE_2 ( TYPE_3 . METHOD_1 ( this . token ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  display ( null , null , VAR_1 ) )  display ( null , null , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c , user ) ) INIT = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c , user ) ) VAR VAR (  return VAR_1 . changes ( ) . METHOD_3 ( ) ; )  return VAR_1 . changes ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) ) )  TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2.ChangeInfo> ) TYPE TYPE_1<TYPE_2.ChangeInfo> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) )  TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND row > 0 ) COND row > 0 ( THEN THEN (  METHOD_2 ( row ) )  METHOD_2 ( row ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( METHOD_4 ( METHOD_5 ( row ) ) ) )  TYPE_1 . METHOD_3 ( METHOD_4 ( METHOD_5 ( row ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ( INIT = METHOD_2 ( ) . getChangeId ( ) ) INIT = METHOD_2 ( ) . getChangeId ( ) ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME reviewers ) NAME reviewers ( INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) VAR VAR (  com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( token ) ) INIT = TYPE_1 . METHOD_2 ( token ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) (  VAR_2 . put ( VAR_1 . METHOD_4 ( ) , VAR_1 . getValue ( ) ) )  VAR_2 . put ( VAR_1 . METHOD_4 ( ) , VAR_1 . getValue ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  log . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) )  log . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) (  client ( ) . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_4 ( VAR_1 ) ) )  client ( ) . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_4 ( VAR_1 ) ) (  log . METHOD_2 ( STRING_2 , VAR_1 , VAR_2 ) )  log . METHOD_2 ( STRING_2 , VAR_1 , VAR_2 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final native ) MODIFIER private static final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME notes ) NAME notes ( BLOCK BLOCK ( IF IF ( COND ( notes ) == null ) COND ( notes ) == null ( THEN THEN (  notes = VAR_1 . create ( db , project , VAR_2 ) )  notes = VAR_1 . create ( db , project , VAR_2 ) ) THEN THEN ) IF IF (  return notes ; )  return notes ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Change.Id,java.lang.String> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Change.Id,java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Change ) TYPE TYPE_2.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_5 . METHOD_2 ( METHOD_3 ( change ) , db . get ( ) ) ; )  return TYPE_5 . METHOD_2 ( METHOD_3 ( change ) , db . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND value > 0 ) COND value > 0 ( THEN THEN (  return STRING_1 + value ; )  return STRING_1 + value ; ) THEN THEN ( ELSE ELSE (  return TYPE_1 . toString ( value ) ; )  return TYPE_1 . toString ( value ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME getRevision ) NAME getRevision ( BLOCK BLOCK (  return revision . METHOD_1 ( ) ; )  return revision . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3.ProjectConfig ) TYPE TYPE_3.ProjectConfig ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ) VAR VAR (  return VAR_1 . to ( git , ref ) ; )  return VAR_1 . to ( git , ref ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 < TYPE_2 > ( ) )  VAR_1 = new TYPE_1 < TYPE_2 > ( ) (  VAR_2 = new TYPE_3 ( ) )  VAR_2 = new TYPE_3 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( change . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( METHOD_2 ( db ) ) ) ) COND ( ( change . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( METHOD_2 ( db ) ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND change . getStatus ( ) . METHOD_1 ( ) ) COND change . getStatus ( ) . METHOD_1 ( ) ( THEN THEN (  change . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) )  change . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) (  return change ; )  return change ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( p ) ; )  return TYPE_3 . METHOD_1 ( p ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( 0 ) ; )  return TYPE_1 . METHOD_2 ( 0 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( STRING_1 ) ) )  METHOD_2 ( METHOD_3 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ( INIT = req . METHOD_2 ( ) ) INIT = req . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND TYPE_2 . METHOD_3 ( token ) ) COND TYPE_2 . METHOD_3 ( token ) ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return TYPE_3 . is ( CHAR_1 ) . METHOD_4 ( token ) ; )  return TYPE_3 . is ( CHAR_1 ) . METHOD_4 ( token ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_2<TYPE_3>> ) TYPE java.util.Map<java.lang.String,TYPE_2<TYPE_3>> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME group ) NAME group ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_1 . put ( ( STRING_1 + name ) , in ) . METHOD_1 ( ) )  VAR_1 . put ( ( STRING_1 + name ) , in ) . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( input . METHOD_1 ( ) ) == null ) && ( ( input . METHOD_2 ( ) . METHOD_3 ( ) ) >= ( VAR_1 . METHOD_3 ( ) ) ) ; )  return ( ( input . METHOD_1 ( ) ) == null ) && ( ( input . METHOD_2 ( ) . METHOD_3 ( ) ) >= ( VAR_1 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  r . status = VAR_1 )  r . status = VAR_1 (  r . type = type )  r . type = type (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) (  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) )  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( key ) )  VAR_1 . METHOD_1 ( key ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 ) ) )  METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1<TYPE_2,TYPE_3,TYPE_4> ) RETURN TYPE_1<TYPE_2,TYPE_3,TYPE_4> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) ( IF IF ( COND result . isEmpty ( ) ) COND result . isEmpty ( ) ( THEN THEN (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . index ( rsrc . getChange ( ) ) )  VAR_1 . index ( rsrc . getChange ( ) ) (  return TYPE_1 . METHOD_1 ( ) ; )  return TYPE_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 + VAR_1 ) + name ; )  return ( STRING_1 + VAR_1 ) + name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( VAR_1 ) ) COND TYPE_2 . METHOD_2 ( VAR_1 ) ( THEN THEN (  return TYPE_3 . METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; )  return TYPE_3 . METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . info ( STRING_1 ) )  VAR_1 . info ( STRING_1 ) ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( STRING_2 , e ) )  VAR_1 . METHOD_3 ( STRING_2 , e ) (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( id ) )  VAR_1 . METHOD_2 ( id ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Project ) RETURN TYPE_1.Project ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( ctl ) ; )  return TYPE_1 . METHOD_1 ( ctl ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_3 ) NAME METHOD_3 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  display ( result ) )  display ( result ) ) BLOCK BLOCK ) METHOD METHOD (  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { display ( result ) ; } } ) )  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { display ( result ) ; } } ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( INIT = TYPE_4 . METHOD_2 ( ) . get ( VAR_2 ) ) INIT = TYPE_4 . METHOD_2 ( ) . get ( VAR_2 ) ) VAR VAR (  return TYPE_5 . METHOD_1 ( VAR_1 , e ) ; )  return TYPE_5 . METHOD_1 ( VAR_1 , e ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  return TYPE_3 . METHOD_2 ( d , path , VAR_1 , line , message ) ; )  return TYPE_3 . METHOD_2 ( d , path , VAR_1 , line , message ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , cfg ) )  VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME input ) NAME input ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 = true )  VAR_1 = true ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME r ) NAME r ( INIT = METHOD_2 ( info . project , VAR_2 ) ) INIT = METHOD_2 ( info . project , VAR_2 ) ) VAR VAR (  VAR_3 . apply ( r , input ) )  VAR_3 . apply ( r , input ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME result ) NAME result ( INIT = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_4 ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_4 ) ) VAR VAR (  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_3 ) , result . METHOD_5 ( ) ) )  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_3 ) , result . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) COND ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( VAR_4 ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( BLOCK BLOCK (  TYPE_3 . METHOD_1 ( ( ( VAR_1 ) != null ) , STRING_1 ) )  TYPE_3 . METHOD_1 ( ( ( VAR_1 ) != null ) , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( true ) )  VAR_2 . METHOD_2 ( true ) (  TYPE_2 . METHOD_3 ( VAR_3 ) )  TYPE_2 . METHOD_3 ( VAR_3 ) (  new TYPE_3 ( VAR_1 . getMessage ( ) ) . METHOD_4 ( ) )  new TYPE_3 ( VAR_1 . getMessage ( ) ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . display ( TYPE_2 . METHOD_2 ( id ) ) )  TYPE_1 . display ( TYPE_2 . METHOD_2 ( id ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND STRING_1 . equals ( VAR_1 ) ) COND STRING_1 . equals ( VAR_1 ) ( THEN THEN (  return name ; )  return name ; ) THEN THEN ( ELSE ELSE (  return ( VAR_1 + STRING_2 ) + name ; )  return ( VAR_1 + STRING_2 ) + name ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  METHOD_2 ( ( VAR_1 == ( VAR_2 ) ) ) )  METHOD_2 ( ( VAR_1 == ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?,?,?> ) TYPE TYPE_1<?,?,?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ) COND ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ( THEN THEN (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2.ChangeInfo ) TYPE TYPE_2.ChangeInfo ( NAME c ) NAME c ( INIT = event . getChange ( ) ) INIT = event . getChange ( ) ) VAR VAR (  METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) ) )  METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME query ) NAME query ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ) INIT = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ) VAR VAR (  return VAR_2 . get ( ) . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . get ( ) . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( VAR_2 ) )  VAR_1 = METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_2 ( VAR_2 , project , branch , topic , key ) )  VAR_1 = new TYPE_2 ( VAR_2 , project , branch , topic , key ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) ) ; )  return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . auth ( ) . METHOD_3 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( ) . auth ( ) . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME change ) NAME change ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( STRING_1 ) . id ( java.lang.String . METHOD_1 ( id ) ) ; )  return new TYPE_1 ( STRING_1 ) . id ( java.lang.String . METHOD_1 ( id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) (  display ( result ) )  display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( db , changeId , true ) ; )  return METHOD_1 ( db , changeId , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( ) ) COND TYPE_2 . METHOD_2 ( ) ( THEN THEN (  TYPE_2 . display ( VAR_1 , true ) )  TYPE_2 . display ( VAR_1 , true ) ) THEN THEN ( ELSE ELSE (  TYPE_2 . display ( VAR_2 , true ) )  TYPE_2 . display ( VAR_2 , true ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.server.query.change.ChangeData ( t . getId ( ) . getParentKey ( ) ) ; )  return new com.google.gerrit.server.query.change.ChangeData ( t . getId ( ) . getParentKey ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , new TYPE_1 ( ) ) )  METHOD_2 ( STRING_1 , new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_3.HttpServletResponse ) TYPE TYPE_3.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( req , res , VAR_1 ) )  METHOD_2 ( req , res , VAR_1 ) (  return res . METHOD_3 ( ) ; )  return res . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 . get ( ) ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = ( VAR_2 == null ) ? VAR_1 : new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 . user , VAR_4 , VAR_5 , VAR_6 , VAR_2 . email ) )  VAR_1 = ( VAR_2 == null ) ? VAR_1 : new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 . user , VAR_4 , VAR_5 , VAR_6 , VAR_2 . email ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( STRING_1 + key ) ) )  VAR_1 . METHOD_2 ( ( STRING_1 + key ) ) (  return new TYPE_1 ( key , VAR_2 , branch , VAR_3 ) ; )  return new TYPE_1 ( key , VAR_2 , branch , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Change.Id ) RETURN Change.Id ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( changeId ) ; )  return TYPE_1 . METHOD_1 ( changeId ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME commit ) NAME commit ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3.NameKey ) TYPE TYPE_3.NameKey ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) )  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME r ) NAME r ( INIT = VAR_1 . create ( db , admin . METHOD_2 ( ) ) . to ( git , STRING_1 ) ) INIT = VAR_1 . create ( db , admin . METHOD_2 ( ) ) . to ( git , STRING_1 ) ) VAR VAR (  r . METHOD_3 ( ) )  r . METHOD_3 ( ) (  METHOD_4 ( r . METHOD_5 ( ) ) )  METHOD_4 ( r . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( name , VAR_1 ) )  METHOD_3 ( name , VAR_1 ) (  return METHOD_4 ( name , VAR_1 . METHOD_5 ( ) ) ; )  return METHOD_4 ( name , VAR_1 . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( false , VAR_1 ) ; )  return new TYPE_1 ( false , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME patch ) NAME patch ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . get ( ) . apply ( revision ) ; )  return VAR_1 . get ( ) . apply ( revision ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME set ) NAME set ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . apply ( rsrc . METHOD_1 ( ) , path ) ; )  return VAR_1 . apply ( rsrc . METHOD_1 ( ) , path ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . format ( rsrc . METHOD_1 ( ) ) ; )  return VAR_1 . format ( rsrc . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( null ) ; )  return TYPE_3 . METHOD_2 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME index ) NAME index ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1<?,TYPE_2> ) TYPE TYPE_1<?,TYPE_2> ( NAME i ) NAME i ( IN VAR_1 . METHOD_1 ( ) ) IN VAR_1 . METHOD_1 ( ) ( BLOCK BLOCK (  i . METHOD_2 ( VAR_2 . get ( id ) ) )  i . METHOD_2 ( VAR_2 . get ( id ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return notes ; )  return notes ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , TYPE_4 . METHOD_1 ( id ) ) ; )  return new TYPE_1 ( VAR_2 , TYPE_4 . METHOD_1 ( id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_2> ) TYPE TYPE_3<TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 . getProject ( ) , VAR_1 . METHOD_2 ( ) . getName ( ) , id . get ( ) ) ; )  return new TYPE_1 ( VAR_1 . getProject ( ) , VAR_1 . METHOD_2 ( ) . getName ( ) , id . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.ProjectConfig ) TYPE TYPE_2.ProjectConfig ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE TYPE_3.AccountGroup ) TYPE TYPE_3.AccountGroup ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( config . METHOD_2 ( group ) ) ; )  return new TYPE_1 ( config . METHOD_2 ( group ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME walk ) NAME walk ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) )  this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = TYPE_1 . add ( VAR_2 ) )  VAR_1 = TYPE_1 . add ( VAR_2 ) (  VAR_3 = TYPE_1 . add ( VAR_4 ) )  VAR_3 = TYPE_1 . add ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME p ) NAME p ( INIT = TYPE_3 . METHOD_1 ( ) ) INIT = TYPE_3 . METHOD_1 ( ) ) VAR VAR (  result . METHOD_2 ( p ) )  result . METHOD_2 ( p ) (  TYPE_3 . METHOD_3 ( p ) )  TYPE_3 . METHOD_3 ( p ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> ) RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( METHOD_3 ( db ) . values ( ) ) ; )  return TYPE_2 . METHOD_2 ( METHOD_3 ( db ) . values ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( ( ( id ) != null ? id : name ) ) ; )  return new TYPE_1 ( ( ( id ) != null ? id : name ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return user ; )  return user ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3<?extendsTYPE_1<TYPE_2>> ) TYPE TYPE_3<?extendsTYPE_1<TYPE_2>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; )  return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , false ) ; )  return METHOD_2 ( VAR_1 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( a == null ) && ( b == null ) ) COND ( a == null ) && ( b == null ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return a != null ? a . equals ( b ) : false ; )  return a != null ? a . equals ( b ) : false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME getChange ) NAME getChange ( BLOCK BLOCK (  return notes . getChange ( ) ; )  return notes . getChange ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<com.google.gerrit.reviewdb.client.Change.Id> ) RETURN java.util.List<com.google.gerrit.reviewdb.client.Change.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c ) ) INIT = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c ) ) VAR VAR (  return VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; )  return VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Project ) TYPE TYPE_1.Project ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND p != null ) COND p != null ( THEN THEN (  VAR_1 . METHOD_2 ( p . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( p . METHOD_3 ( ) ) (  VAR_1 . METHOD_2 ( p . getId ( ) ) )  VAR_1 . METHOD_2 ( p . getId ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ( INIT = VAR_1 . get ( ) ) INIT = VAR_1 . get ( ) ) VAR VAR ( IF IF ( COND user instanceof TYPE_3 ) COND user instanceof TYPE_3 ( THEN THEN (  return ( ( TYPE_3 ) ( user ) ) . getAccountId ( ) ; )  return ( ( TYPE_3 ) ( user ) ) . getAccountId ( ) ; ) THEN THEN ( ELSE ELSE (  return VAR_2 ; )  return VAR_2 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Status ) TYPE com.google.gerrit.reviewdb.client.Change.Status ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( repo , null , null , null , status , null ) ; )  return METHOD_2 ( repo , null , null , null , status , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( projectName , false ) )  VAR_1 = METHOD_2 ( projectName , false ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) )  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( STRING_1 + ( VAR_1 ) ) + ( ( VAR_2 ) ++ ) ; )  return ( STRING_1 + ( VAR_1 ) ) + ( ( VAR_2 ) ++ ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  format = VAR_2 )  format = VAR_2 (  return display ( null ) ; )  return display ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( event . METHOD_2 ( ) ) == ( VAR_1 ) ) COND ( event . METHOD_2 ( ) ) == ( VAR_1 ) ( THEN THEN (  event . METHOD_3 ( ) )  event . METHOD_3 ( ) (  event . METHOD_4 ( ) )  event . METHOD_4 ( ) (  VAR_2 . submit ( ) )  VAR_2 . submit ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Change.Id ) RETURN Change.Id ( NAME getId ) NAME getId ( BLOCK BLOCK (  return notes . getChangeId ( ) ; )  return notes . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( STRING_1 + ( id . toString ( ) ) ) + STRING_2 ) + VAR_1 ; )  return ( ( STRING_1 + ( id . toString ( ) ) ) + STRING_2 ) + VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . get ( getKey ( VAR_1 , VAR_2 ) ) . METHOD_1 ( ) ; )  return VAR_3 . get ( getKey ( VAR_1 , VAR_2 ) ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false ) )  METHOD_2 ( false ) (  VAR_1 . METHOD_3 ( false ) )  VAR_1 . METHOD_3 ( false ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR ( IF IF ( COND ( VAR_2 . length ) > i ) COND ( VAR_2 . length ) > i ( THEN THEN (  VAR_1 = VAR_2 [ i ] )  VAR_1 = VAR_2 [ i ] ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND change . getStatus ( ) . METHOD_1 ( ) ) COND change . getStatus ( ) . METHOD_1 ( ) ( THEN THEN (  change . METHOD_2 ( VAR_1 ) )  change . METHOD_2 ( VAR_1 ) (  change . METHOD_3 ( VAR_2 ) )  change . METHOD_3 ( VAR_2 ) (  TYPE_1 . METHOD_4 ( change ) )  TYPE_1 . METHOD_4 ( change ) (  return change ; )  return change ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = ( ( METHOD_2 ( ) . METHOD_3 ( ) ) || ( METHOD_4 ( VAR_2 ) ) ) && ( METHOD_5 ( ) ) )  VAR_1 = ( ( METHOD_2 ( ) . METHOD_3 ( ) ) || ( METHOD_4 ( VAR_2 ) ) ) && ( METHOD_5 ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) )  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME put ) NAME put ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . put ( TYPE_3 . METHOD_1 ( user . METHOD_2 ( ) ) , METHOD_3 ( TYPE_3 . METHOD_1 ( VAR_1 ) ) ) )  VAR_2 . put ( TYPE_3 . METHOD_1 ( user . METHOD_2 ( ) ) , METHOD_3 ( TYPE_3 . METHOD_1 ( VAR_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ( INIT = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ) VAR VAR (  return url ; )  return url ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.lib.Repository ) RETURN org.eclipse.jgit.lib.Repository ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( project . getProject ( ) . METHOD_2 ( ) ) ; )  return VAR_1 . METHOD_1 ( project . getProject ( ) . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_3 ( ( ( TYPE_4 . base ( project ) ) + STRING_1 ) ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) )  new TYPE_3 ( ( ( TYPE_4 . base ( project ) ) + STRING_1 ) ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ) || ( METHOD_5 ( ) ) ; )  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ) || ( METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1.Project> ) TYPE java.util.List<TYPE_1.Project> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  VAR_2 = false )  VAR_2 = false (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<?> ) TYPE java.util.List<?> ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_1 ( VAR_1 , repo ) )  TYPE_3 . METHOD_1 ( VAR_1 , repo ) (  TYPE_3 . METHOD_1 ( VAR_2 , VAR_3 ) )  TYPE_3 . METHOD_1 ( VAR_2 , VAR_3 ) (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) (  return TYPE_4 . METHOD_3 ( null ) ; )  return TYPE_4 . METHOD_3 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) . to ( VAR_1 class ) )  METHOD_2 ( ) . to ( VAR_1 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_3 class ) )  METHOD_2 ( ) . to ( VAR_3 class ) (  METHOD_2 ( ) . to ( VAR_4 class ) )  METHOD_2 ( ) . to ( VAR_4 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_3 = size )  VAR_3 = size ) THEN THEN ( ELSE ELSE (  VAR_2 = new TYPE_2 ( size ) )  VAR_2 = new TYPE_2 ( size ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  assertEquals ( in , METHOD_3 ( in ) ) )  assertEquals ( in , METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSet> ) TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSet> ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE java.util.Map<com.google.gerrit.reviewdb.client.PatchSet.Id,TYPE_2<com.google.gerrit.reviewdb.client.PatchSetApproval>> ) TYPE java.util.Map<com.google.gerrit.reviewdb.client.PatchSet.Id,TYPE_2<com.google.gerrit.reviewdb.client.PatchSetApproval>> ( NAME approvals ) NAME approvals ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , ps , approvals , false , null , VAR_2 ) )  METHOD_1 ( VAR_1 , ps , approvals , false , null , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . set ( VAR_2 ) ) INIT = TYPE_2 . set ( VAR_2 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ( FINALLY FINALLY (  TYPE_2 . set ( VAR_1 ) )  TYPE_2 . set ( VAR_1 ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c ) )  METHOD_2 ( c ) (  VAR_1 . METHOD_3 ( c ) )  VAR_1 . METHOD_3 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 , VAR_3 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 , VAR_3 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.server.query.change.ChangeData ( t ) ; )  return new com.google.gerrit.server.query.change.ChangeData ( t ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 . index ( VAR_2 ) ) . METHOD_3 ( true ) )  TYPE_1 . METHOD_2 ( VAR_1 . index ( VAR_2 ) ) . METHOD_3 ( true ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  VAR_3 . METHOD_5 ( cd ) )  VAR_3 . METHOD_5 ( cd ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME c ) NAME c ( INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = c . METHOD_3 ( STRING_2 ) ) INIT = c . METHOD_3 ( STRING_2 ) ) VAR VAR (  VAR_1 . METHOD_4 ( true ) )  VAR_1 . METHOD_4 ( true ) (  VAR_1 . METHOD_5 ( c , false ) )  VAR_1 . METHOD_5 ( c , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_3 . apply ( VAR_4 . METHOD_2 ( ) , VAR_1 , VAR_2 ) )  VAR_3 . apply ( VAR_4 . METHOD_2 ( ) , VAR_1 , VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  throw TYPE_3 . METHOD_3 ( STRING_1 , e ) ; )  throw TYPE_3 . METHOD_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( VAR_1 , id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) )  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( VAR_1 , id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 ) ) ) INIT = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 ) ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) (  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_2 class ) )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME getId ) NAME getId ( BLOCK BLOCK (  return changeId . get ( ) ; )  return changeId . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME out ) NAME out ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( out , VAR_2 ) )  VAR_1 . METHOD_2 ( out , VAR_2 ) (  return out . toString ( TYPE_4 . name ( ) ) ; )  return out . toString ( TYPE_4 . name ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 class )  VAR_1 class ( BLOCK BLOCK (  VAR_2 = TYPE_1 . METHOD_2 ( ) )  VAR_2 = TYPE_1 . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_1 ) ) )  TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_1 ) ) (  format = new TYPE_2 ( STRING_2 ) )  format = new TYPE_2 ( STRING_2 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = type . METHOD_2 ( ) )  VAR_1 = type . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ( INIT = METHOD_2 ( ) . getChangeId ( ) ) INIT = METHOD_2 ( ) . getChangeId ( ) ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME reviewers ) NAME reviewers ( INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) )  org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( VAR_2 . METHOD_1 ( ) , VAR_3 , value , VAR_2 . METHOD_2 ( ) ) ) INIT = new TYPE_1 ( VAR_2 . METHOD_1 ( ) , VAR_3 , value , VAR_2 . METHOD_2 ( ) ) ) VAR VAR (  VAR_4 . insert ( VAR_1 , index ) )  VAR_4 . insert ( VAR_1 , index ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  walk . METHOD_2 ( ) )  walk . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_2 ) ) ; )  return VAR_1 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , account ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , account ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,TYPE_2> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( cd . METHOD_2 ( ) ) ; )  return METHOD_1 ( cd . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = STRING_2 ) INIT = STRING_2 ) VAR VAR (  org.junit.Assert.assertEquals ( TYPE_1 . METHOD_2 ( VAR_3 . format ( null , null , null , null , cfg , VAR_1 ) , VAR_2 ) , 1 ) )  org.junit.Assert.assertEquals ( TYPE_1 . METHOD_2 ( VAR_3 . format ( null , null , null , null , cfg , VAR_1 ) , VAR_2 ) , 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) VAR VAR (  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) )  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) (  METHOD_5 ( project , cfg ) )  METHOD_5 ( project , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1.Project> ) TYPE java.util.List<TYPE_1.Project> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  projects . display ( result ) )  projects . display ( result ) (  projects . METHOD_2 ( true ) )  projects . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( null , 0 ) ; )  return new TYPE_1 ( null , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , VAR_2 , null ) ; )  return METHOD_1 ( VAR_1 , VAR_2 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query . METHOD_1 ( STRING_1 , project ) ; )  return query . METHOD_1 ( STRING_1 , project ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) )  bind ( VAR_1 class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = METHOD_2 ( VAR_2 class ) )  VAR_1 = METHOD_2 ( VAR_2 class ) ( VAR VAR ( TYPE com.google.gerrit.extensions.registration.DynamicSet<TYPE_1> ) TYPE com.google.gerrit.extensions.registration.DynamicSet<TYPE_1> ( NAME VAR_3 ) NAME VAR_3 ( INIT = com.google.gerrit.extensions.registration.DynamicSet . METHOD_3 ( ) ) INIT = com.google.gerrit.extensions.registration.DynamicSet . METHOD_3 ( ) ) VAR VAR (  VAR_3 . add ( VAR_1 ) )  VAR_3 . add ( VAR_1 ) (  VAR_4 = new TYPE_2 ( null , VAR_3 , null , null ) )  VAR_4 = new TYPE_2 ( null , VAR_3 , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) )  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 ( ) { public void run ( ) { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } } ; )  return new TYPE_1 ( ) { public void run ( ) { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( change . getStatus ( ) ) == ( VAR_1 ) ) COND ( change . getStatus ( ) ) == ( VAR_1 ) ( THEN THEN (  change . METHOD_1 ( VAR_2 ) )  change . METHOD_1 ( VAR_2 ) (  TYPE_1 . METHOD_2 ( change ) )  TYPE_1 . METHOD_2 ( change ) (  return change ; )  return change ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME reviewers ) NAME reviewers ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) . values ( ) ) ; )  return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) . values ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  rp . METHOD_1 ( VAR_1 ) )  rp . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME getChange ) NAME getChange ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 . get ( ) . METHOD_2 ( commit . getChangeId ( ) ) ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 . get ( ) . METHOD_2 ( commit . getChangeId ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ( INIT = cm . METHOD_1 ( ) . METHOD_2 ( ) ) INIT = cm . METHOD_1 ( ) . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( w , VAR_1 ) )  METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( w , VAR_1 ) (  METHOD_6 ( true ) )  METHOD_6 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME m ) NAME m ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  m . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) )  m . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . change ( id ) . view ( STRING_1 ) . METHOD_2 ( TYPE_4 . create ( ) , VAR_1 ) )  TYPE_3 . change ( id ) . view ( STRING_1 ) . METHOD_2 ( TYPE_4 . create ( ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ) INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ) VAR VAR (  return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; )  return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 . Collections < java.lang.String > METHOD_3 ( ) ) ; )  return METHOD_2 ( VAR_1 . Collections < java.lang.String > METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_5 . METHOD_2 ( METHOD_3 ( id ) , db . get ( ) ) ; )  return TYPE_5 . METHOD_2 ( METHOD_3 ( id ) , db . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_2 , e ) ; )  throw new TYPE_3 ( STRING_2 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( true ) )  VAR_2 . METHOD_2 ( true ) (  VAR_3 . METHOD_2 ( true ) )  VAR_3 . METHOD_2 ( true ) (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME auth ) NAME auth ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Account ) TYPE TYPE_2.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return account != null ? new TYPE_1 ( account . getId ( ) , false ) : null ; )  return account != null ? new TYPE_1 ( account . getId ( ) , false ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ( ( VAR_1 ) == null ) , STRING_1 ) )  TYPE_2 . METHOD_2 ( ( ( VAR_1 ) == null ) , STRING_1 ) ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = new TYPE_1 ( new TYPE_3 ( VAR_3 , VAR_4 ) ) )  VAR_2 = new TYPE_1 ( new TYPE_3 ( VAR_3 , VAR_4 ) ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( TYPE_2 . get ( VAR_2 class , VAR_3 class ) ) ) INIT = VAR_1 . METHOD_2 ( TYPE_2 . get ( VAR_2 class , VAR_3 class ) ) ) VAR VAR (  return new TYPE_3 ( ) . METHOD_3 ( cfg ) . isEmpty ( ) ; )  return new TYPE_3 ( ) . METHOD_3 ( cfg ) . isEmpty ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) VAR VAR (  TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) . METHOD_5 ( true ) )  TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) . METHOD_5 ( true ) (  METHOD_6 ( VAR_2 , cfg ) )  METHOD_6 ( VAR_2 , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 ) ) INIT = VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  cm . METHOD_3 ( ) )  cm . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( token ) == null ) COND ( token ) == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ( ELSE ELSE (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME commit ) NAME commit ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME schema ) NAME schema ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( schema , id ) ; )  return new TYPE_3 ( schema , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.revwalk.RevCommit ) RETURN org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME update ) NAME update ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_1 ( update ) ) INIT = METHOD_1 ( update ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( update . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( update . METHOD_3 ( ) ) (  return VAR_1 . commit ( ) ; )  return VAR_1 . commit ( ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . close ( ) )  VAR_1 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  METHOD_3 ( VAR_1 , STRING_1 , VAR_3 ) )  METHOD_3 ( VAR_1 , STRING_1 , VAR_3 ) (  assertThat ( VAR_4 ) . METHOD_4 ( ) )  assertThat ( VAR_4 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_2 : : METHOD_1 ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; )  return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_2 : : METHOD_1 ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = ctl . getChange ( ) . getKey ( ) . get ( ) ) INIT = ctl . getChange ( ) . getKey ( ) . get ( ) ) VAR VAR (  TYPE_1 . METHOD_2 ( VAR_1 . equals ( changeId ) , STRING_1 , VAR_1 , changeId ) )  TYPE_1 . METHOD_2 ( VAR_1 . equals ( changeId ) , STRING_1 , VAR_1 , changeId ) (  this . changeId = changeId )  this . changeId = changeId ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ( INIT = VAR_1 . insert ( new TYPE_2 ( ) ) ) INIT = VAR_1 . insert ( new TYPE_2 ( ) ) ) VAR VAR (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return id ; )  return id ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( VAR_1 ) ; )  return TYPE_2 . change ( id ) . view ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME rw ) NAME rw ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project ) TYPE com.google.gerrit.reviewdb.client.Project ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<com.google.gerrit.reviewdb.client.Change> ) TYPE java.util.List<com.google.gerrit.reviewdb.client.Change> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.util.Map<com.google.gerrit.reviewdb.client.Change.Id,TYPE_3> ) TYPE java.util.Map<com.google.gerrit.reviewdb.client.Change.Id,TYPE_3> ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME edit ) NAME edit ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME file ) NAME file ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , edit , file , null ) ; )  return METHOD_2 ( VAR_1 , edit , file , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 < java.lang.String > ( change . METHOD_2 ( ) ) ; )  return new TYPE_2 < java.lang.String > ( change . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( change . branch ) ; )  return TYPE_1 . METHOD_1 ( change . branch ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( name ) ) INIT = VAR_2 . get ( name ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return super . METHOD_1 ( name ) ; )  return super . METHOD_1 ( name ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; )  return TYPE_2 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME result ) NAME result ( INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR (  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) )  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME u ) NAME u ( INIT = user . get ( ) ) INIT = user . get ( ) ) VAR VAR ( IF IF ( COND u . METHOD_2 ( ) ) COND u . METHOD_2 ( ) ( THEN THEN (  return u . METHOD_3 ( ) . METHOD_1 ( ) ; )  return u . METHOD_3 ( ) . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_1> ) TYPE java.util.Map<java.lang.String,TYPE_1> ( NAME refs ) NAME refs ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . create ( METHOD_2 ( ) , METHOD_3 ( ) ) . METHOD_1 ( refs , repo , VAR_1 ) ; )  return VAR_2 . create ( METHOD_2 ( ) , METHOD_3 ( ) ) . METHOD_1 ( refs , repo , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ( THEN THEN (  revision = VAR_1 )  revision = VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; )  return ( METHOD_2 ( db ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return STRING_1 + ( VAR_1 . get ( ) ) ; )  return STRING_1 + ( VAR_1 . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new byte [ INT_1 ] ) INIT = new byte [ INT_1 ] ) VAR VAR (  TYPE_3 . METHOD_2 ( VAR_1 , db ) )  TYPE_3 . METHOD_2 ( VAR_1 , db ) (  return TYPE_4 . METHOD_3 ( VAR_1 ) ; )  return TYPE_4 . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . get ( VAR_2 ) )  TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . get ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ) INIT = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ) VAR VAR (  return VAR_1 . METHOD_1 ( VAR_2 ) ; )  return VAR_1 . METHOD_1 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( METHOD_2 ( db ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ) && ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ; )  return ( ( METHOD_2 ( db ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ) && ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = VAR_2 . get ( getAccountId ( ) ) )  VAR_1 = VAR_2 . get ( getAccountId ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . get ( ) . apply ( revision , in ) ; )  return VAR_1 . get ( ) . apply ( revision , in ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_1 , e ) ; )  throw new TYPE_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME update ) NAME update ( INIT = METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ) INIT = METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ) VAR VAR (  update . METHOD_4 ( STRING_1 ) )  update . METHOD_4 ( STRING_1 ) (  update . commit ( ) )  update . commit ( ) (  com.google.common.truth.Truth.assertThat ( update . getRevision ( ) ) . METHOD_5 ( ) )  com.google.common.truth.Truth.assertThat ( update . getRevision ( ) ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return input . getAccountId ( ) . equals ( rsrc . METHOD_1 ( ) . getAccountId ( ) ) ; )  return input . getAccountId ( ) . equals ( rsrc . METHOD_1 ( ) . getAccountId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2.Account> ) RETURN TYPE_1<TYPE_2.Account> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 . equals ( id . get ( ) ) ) || ( STRING_2 . METHOD_2 ( id . get ( ) ) ) ; )  return ( STRING_1 . equals ( id . get ( ) ) ) || ( STRING_2 . METHOD_2 ( id . get ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME base ) NAME base ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( STRING_1 , id . get ( ) ) )  VAR_1 . METHOD_1 ( STRING_1 , id . get ( ) ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = b )  VAR_1 = b (  VAR_2 . METHOD_2 ( row , VAR_3 , ( ( b . value ) != 0 ? VAR_4 : STRING_1 ) ) )  VAR_2 . METHOD_2 ( row , VAR_3 , ( ( b . value ) != 0 ? VAR_4 : STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  new TYPE_1 ( ) . inject ( this ) )  new TYPE_1 ( ) . inject ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId ) ) )  TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return METHOD_1 ( ) . getName ( VAR_1 ) ; )  return METHOD_1 ( ) . getName ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; )  return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  TYPE_1 . METHOD_2 ( STRING_2 ) )  TYPE_1 . METHOD_2 ( STRING_2 ) (  TYPE_1 . METHOD_2 ( STRING_3 ) )  TYPE_1 . METHOD_2 ( STRING_3 ) (  TYPE_1 . METHOD_2 ( STRING_4 ) )  TYPE_1 . METHOD_2 ( STRING_4 ) (  TYPE_1 . METHOD_2 ( STRING_5 ) )  TYPE_1 . METHOD_2 ( STRING_5 ) (  TYPE_1 . METHOD_2 ( STRING_6 ) )  TYPE_1 . METHOD_2 ( STRING_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result , VAR_2 ) )  VAR_1 . display ( result , VAR_2 ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( ) )  new TYPE_1 ( ) (  new TYPE_2 ( ) )  new TYPE_2 ( ) (  new TYPE_3 ( ) )  new TYPE_3 ( ) (  new TYPE_4 ( ) )  new TYPE_4 ( ) (  new TYPE_5 ( ) )  new TYPE_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; )  return METHOD_1 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ( THEN THEN (  project = VAR_1 )  project = VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) )  bind ( VAR_1 class ) (  factory ( VAR_2 class ) )  factory ( VAR_2 class ) (  bind ( VAR_3 class ) )  bind ( VAR_3 class ) (  bind ( VAR_4 . Factory class ) )  bind ( VAR_4 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND user . METHOD_2 ( ) ) COND user . METHOD_2 ( ) ( THEN THEN (  return user . getAccountId ( ) . toString ( ) ; )  return user . getAccountId ( ) . toString ( ) ; ) THEN THEN ) IF IF (  return user . toString ( ) ; )  return user . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( in , METHOD_3 ( in ) ) )  org.junit.Assert.assertEquals ( in , METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) )  TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) )  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 , id ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( FOR FOR ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) COND VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  VAR_4 . METHOD_2 ( false ) )  VAR_4 . METHOD_2 ( false ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( null ) ) INIT = TYPE_1 . METHOD_2 ( null ) ) VAR VAR (  VAR_1 . METHOD_3 ( CHAR_1 ) )  VAR_1 . METHOD_3 ( CHAR_1 ) (  assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) )  assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 2 ; )  return 2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . message = message )  this . message = message ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , input , null , null , true ) )  submit ( changeId , input , null , null , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) )  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( change , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  METHOD_2 ( change , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = repo . METHOD_2 ( ) ) INIT = repo . METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_3 ( VAR_1 ) . name ( ) ; )  return VAR_2 . METHOD_3 ( VAR_1 ) . name ( ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . get ( ) . apply ( revision , in ) )  VAR_1 . get ( ) . apply ( revision , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|TYPE_3 ) TYPE com.google.gwtorm.server.OrmException|TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2.ReviewDb> ) RETURN TYPE_1<TYPE_2.ReviewDb> ( NAME get ) NAME get ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = ( TYPE_2 . METHOD_2 ( VAR_1 ) ) - 1 ) INIT = ( TYPE_2 . METHOD_2 ( VAR_1 ) ) - 1 ) VAR VAR ) INIT INIT ( COND i >= 0 ) COND i >= 0 ( UPDATE UPDATE (  i -- )  i -- ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_2 . METHOD_3 ( VAR_1 , TYPE_2 . METHOD_4 ( VAR_1 , i ) ) )  TYPE_2 . METHOD_3 ( VAR_1 , TYPE_2 . METHOD_4 ( VAR_1 , i ) ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) (  TYPE_1 . METHOD_2 ( VAR_3 , true ) )  TYPE_1 . METHOD_2 ( VAR_3 , true ) (  input . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) )  input . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) (  input . METHOD_5 ( true ) )  input . METHOD_5 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ( INIT = cd . change ( VAR_1 ) ) INIT = cd . change ( VAR_1 ) ) VAR VAR (  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) > 0 ) ; )  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) > 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( METHOD_2 ( STRING_1 ) . name , VAR_1 ) )  org.junit.Assert.assertEquals ( METHOD_2 ( STRING_1 ) . name , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ( INIT = cd . change ( VAR_1 ) ) INIT = cd . change ( VAR_1 ) ) VAR VAR (  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) < 0 ) ; )  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) < 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ; )  return ( ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( msg ) )  VAR_1 . METHOD_2 ( msg ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 == ( VAR_2 . METHOD_2 ( ) ) ) COND VAR_1 == ( VAR_2 . METHOD_2 ( ) ) ( THEN THEN (  return VAR_3 . METHOD_1 ( ) ; )  return VAR_3 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return VAR_4 . METHOD_1 ( ) ; )  return VAR_4 . METHOD_1 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result , VAR_2 ) )  VAR_1 . display ( result , VAR_2 ) ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  VAR_3 = false )  VAR_3 = false (  METHOD_1 ( ) )  METHOD_1 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME ref ) NAME ref ( INIT = VAR_1 . getValue ( ) ) INIT = VAR_1 . getValue ( ) ) VAR VAR ( IF IF ( COND ref != null ) COND ref != null ( THEN THEN (  METHOD_2 ( ref ) )  METHOD_2 ( ref ) ) THEN THEN ( ELSE ELSE (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ++ ( VAR_1 ) ) == ( VAR_2 . size ( ) ) ) COND ( ++ ( VAR_1 ) ) == ( VAR_2 . size ( ) ) ( THEN THEN (  METHOD_1 ( ) )  METHOD_1 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( row - 1 ) , row ) )  METHOD_2 ( ( row - 1 ) , row ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( change . getStatus ( ) ) == ( VAR_1 ) ) COND ( change . getStatus ( ) ) == ( VAR_1 ) ( THEN THEN (  change . METHOD_1 ( VAR_2 ) )  change . METHOD_1 ( VAR_2 ) (  TYPE_2 . METHOD_2 ( change ) )  TYPE_2 . METHOD_2 ( change ) ) THEN THEN ) IF IF (  return change ; )  return change ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_3 ( req , VAR_1 ) ) INIT = new TYPE_3 ( req , VAR_1 ) ) VAR VAR ( IF IF ( COND ( query ) == null ) COND ( query ) == null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ) IF IF (  query = VAR_2 )  query = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , this ) )  VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( query ( in ) , VAR_1 . METHOD_3 ( in , 0 , VAR_2 ) ) )  org.junit.Assert.assertEquals ( query ( in ) , VAR_1 . METHOD_3 ( in , 0 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSet> ) TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSet> ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( a , ps , null , false , null , VAR_1 ) )  METHOD_1 ( a , ps , null , false , null , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( changeId ) . view ( STRING_1 ) . id ( VAR_1 ) ; )  return TYPE_2 . change ( changeId ) . view ( STRING_1 ) . id ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . branch = STRING_1 )  in . branch = STRING_1 (  VAR_1 = STRING_2 )  VAR_1 = STRING_2 (  in . project = project . get ( ) )  in . project = project . get ( ) (  return in ; )  return in ; ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME r ) NAME r ( INIT = new java.lang.StringBuilder ( ) ) INIT = new java.lang.StringBuilder ( ) ) VAR VAR (  r . append ( STRING_1 ) )  r . append ( STRING_1 ) (  r . append ( project ) )  r . append ( project ) (  return r . toString ( ) ; )  return r . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( index ) )  VAR_1 . METHOD_1 ( index ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) . METHOD_3 ( true ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) . METHOD_3 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( IN METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( event . METHOD_3 ( ) ) , VAR_2 ) ) IN METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( event . METHOD_3 ( ) ) , VAR_2 ) ( BLOCK BLOCK (  METHOD_4 ( VAR_1 , event . METHOD_5 ( ) ) )  METHOD_4 ( VAR_1 , event . METHOD_5 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME diff ) NAME diff ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . get ( ) . apply ( file ) . value ( ) ; )  return VAR_1 . get ( ) . apply ( file ) . value ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException|TYPE_3|com.google.gwtorm.server.OrmException ) TYPE java.io.IOException|TYPE_3|com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) COND ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ( THEN THEN (  VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , t ) )  VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , t ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  info . METHOD_1 ( ) )  info . METHOD_1 ( ) (  METHOD_2 ( info ) )  METHOD_2 ( info ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; )  return TYPE_2 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) (  projects . display ( result . METHOD_4 ( ) ) )  projects . display ( result . METHOD_4 ( ) ) (  projects . METHOD_5 ( ) )  projects . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  METHOD_6 ( ) )  METHOD_6 ( ) (  METHOD_7 ( ) )  METHOD_7 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return ( TYPE_2 . METHOD_3 ( VAR_2 ) ) || ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; )  return ( TYPE_2 . METHOD_3 ( VAR_2 ) ) || ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( change ) != null ) COND ( change ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( change , ctx . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , ctx . METHOD_6 ( ) ) )  VAR_1 . METHOD_2 ( change , ctx . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , ctx . METHOD_6 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  info . METHOD_1 ( ) )  info . METHOD_1 ( ) (  METHOD_2 ( info ) )  METHOD_2 ( info ) (  METHOD_3 ( info , base ) )  METHOD_3 ( info , base ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( ) )  new TYPE_1 ( ) (  new TYPE_2 ( ) )  new TYPE_2 ( ) (  new TYPE_3 ( ) )  new TYPE_3 ( ) (  new TYPE_4 ( ) )  new TYPE_4 ( ) (  new TYPE_5 ( ) )  new TYPE_5 ( ) (  new TYPE_6 ( ) )  new TYPE_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 , VAR_2 ) , new TYPE_6 ( VAR_1 , VAR_2 ) ) ) ; )  return new TYPE_1 ( TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 , VAR_2 ) , new TYPE_6 ( VAR_1 , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ) COND TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ( THEN THEN (  TYPE_4 . delete ( changeId , VAR_1 ) )  TYPE_4 . delete ( changeId , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) )  assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ! ( VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ) ) && ( VAR_3 . METHOD_3 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ) ; )  return ( ! ( VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ) ) && ( VAR_3 . METHOD_3 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) ) ; )  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . getMessage ( ) ) INIT = VAR_1 . getMessage ( ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) THEN THEN ) IF IF ) THEN THEN ) IF IF (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + msg ) , args ) )  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + msg ) , args ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  bind ( VAR_3 class ) . to ( VAR_4 class ) )  bind ( VAR_3 class ) . to ( VAR_4 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ) TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ( NAME VAR_1 ) NAME VAR_1 ( INIT = cd . METHOD_2 ( ) ) INIT = cd . METHOD_2 ( ) ) VAR VAR (  return ! ( VAR_1 . isEmpty ( ) ) ? VAR_1 . contains ( id ) : ( id ) == ( VAR_2 ) ; )  return ! ( VAR_1 . isEmpty ( ) ) ? VAR_1 . contains ( id ) : ( id ) == ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( id ) )  VAR_1 . METHOD_2 ( id ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_4 ( VAR_1 . METHOD_2 ( TYPE_5 . getName ( ) ) . METHOD_3 ( ) ) ) INIT = new TYPE_4 ( VAR_1 . METHOD_2 ( TYPE_5 . getName ( ) ) . METHOD_3 ( ) ) ) VAR VAR (  return VAR_3 . get ( ) . METHOD_4 ( VAR_2 ) ; )  return VAR_3 . get ( ) . METHOD_4 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME put ) NAME put ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . put ( new TYPE_3 ( VAR_1 , c ) ) )  VAR_2 . put ( new TYPE_3 ( VAR_1 , c ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Key ) TYPE TYPE_2.Key ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( key ) ; )  return METHOD_2 ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME admin ) NAME admin ( INIT = VAR_1 . create ( STRING_1 , STRING_2 ) ) INIT = VAR_1 . create ( STRING_1 , STRING_2 ) ) VAR VAR (  VAR_2 = new TYPE_2 ( admin ) )  VAR_2 = new TYPE_2 ( admin ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = VAR_2 . METHOD_2 ( db , notes ) )  VAR_1 = VAR_2 . METHOD_2 ( db , notes ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 ) )  METHOD_2 ( VAR_1 , VAR_2 ) (  METHOD_2 ( VAR_1 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_1 ) ; (  METHOD_3 ( VAR_3 ) )  METHOD_3 ( VAR_3 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR (  METHOD_4 ( ( ( ( google ) - ( java ) ) - ( format ) ) ) )  METHOD_4 ( ( ( ( google ) - ( java ) ) - ( format ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME assertEquals ) NAME assertEquals ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  TYPE_1 . assertEquals ( VAR_3 . toString ( ) , VAR_1 ) )  TYPE_1 . assertEquals ( VAR_3 . toString ( ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1.ChangeInfo> ) TYPE java.util.List<TYPE_1.ChangeInfo> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  table . METHOD_1 ( ) )  table . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Account ) RETURN TYPE_1.Account ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( null ) ) ) ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( null ) ) ) ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( r , message , false ) )  METHOD_1 ( r , message , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_1 . display ( TYPE_2 . METHOD_3 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , revision . METHOD_4 ( ) ) , path ) ) )  TYPE_1 . display ( TYPE_2 . METHOD_3 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , revision . METHOD_4 ( ) ) , path ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN PatchSet.Id ) RETURN PatchSet.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return getChange ( c ) . currentPatchSetId ( ) ; )  return getChange ( c ) . currentPatchSetId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ( INIT = VAR_1 . METHOD_2 ( VAR_2 . get ( ) ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 . get ( ) ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return METHOD_3 ( key , repo ) ; )  return METHOD_3 ( key , repo ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  repo . close ( ) )  repo . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , admin ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , admin ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  this . VAR_1 = false )  this . VAR_1 = false (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( new TYPE_1 ( ) ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( new TYPE_1 ( ) ) (  bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) )  bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) (  bind ( VAR_5 class ) )  bind ( VAR_5 class ) (  bind ( VAR_6 class ) )  bind ( VAR_6 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_3 ( args , project , VAR_2 , VAR_3 ) ) INIT = new TYPE_3 ( args , project , VAR_2 , VAR_3 ) ) VAR VAR (  return VAR_1 . METHOD_1 ( type ) ; )  return VAR_1 . METHOD_1 ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME m ) NAME m ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  m . METHOD_2 ( ) )  m . METHOD_2 ( ) (  m . METHOD_3 ( STRING_1 , STRING_2 ) )  m . METHOD_3 ( STRING_1 , STRING_2 ) (  m . METHOD_4 ( ) )  m . METHOD_4 ( ) (  m . METHOD_5 ( VAR_1 ) )  m . METHOD_5 ( VAR_1 ) (  m . METHOD_6 ( ) )  m . METHOD_6 ( ) (  m . METHOD_7 ( ) )  m . METHOD_7 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( rsrc . getProject ( ) . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , rsrc . METHOD_4 ( ) , null ) ; )  return VAR_1 . METHOD_1 ( rsrc . getProject ( ) . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , rsrc . METHOD_4 ( ) , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) COND ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) . METHOD_3 ( TYPE_1 ) ) COND METHOD_2 ( ) . METHOD_3 ( TYPE_1 ) ( THEN THEN (  return METHOD_2 ( ) . METHOD_4 ( TYPE_1 . length ( ) ) ; )  return METHOD_2 ( ) . METHOD_4 ( TYPE_1 . length ( ) ) ; ) THEN THEN ) IF IF (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cm ) NAME cm ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( cm , VAR_3 . METHOD_3 ( ) , ( VAR_1 - 1 ) , VAR_2 , VAR_4 ) )  METHOD_2 ( cm , VAR_3 . METHOD_3 ( ) , ( VAR_1 - 1 ) , VAR_2 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) . toString ( ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) )  assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( db , changeId , false ) ; )  return METHOD_2 ( db , changeId , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) , STRING_1 , VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) , STRING_1 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( args , change . getProject ( ) , change ) . METHOD_2 ( ) ; )  return new TYPE_1 ( args , change . getProject ( ) , change ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME VAR_2 ) NAME VAR_2 ( INIT = getProject ( ) . METHOD_2 ( ) ) INIT = getProject ( ) . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  return VAR_4 . get ( VAR_2 ) ; )  return VAR_4 . get ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , TYPE_3 . of ( VAR_1 ) , null , id ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , TYPE_3 . of ( VAR_1 ) , null , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( r . getChange ( ) . getProject ( ) , r . METHOD_2 ( ) , r . getChange ( ) . METHOD_3 ( ) ) ; )  return METHOD_1 ( r . getChange ( ) . getProject ( ) , r . METHOD_2 ( ) , r . getChange ( ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME notes ) NAME notes ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( db , notes . getChange ( ) ) ; )  return VAR_1 . create ( db , notes . getChange ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( project , STRING_1 ) )  METHOD_2 ( project , STRING_1 ) (  VAR_1 . METHOD_3 ( VAR_2 class ) )  VAR_1 . METHOD_3 ( VAR_2 class ) (  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_4 ( STRING_2 ) . get ( ) )  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_4 ( STRING_2 ) . get ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( query , VAR_1 , VAR_2 , VAR_3 , METHOD_3 ( ) ) )  TYPE_1 . METHOD_2 ( query , VAR_1 , VAR_2 , VAR_3 , METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME change ) NAME change ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( message , VAR_1 ) ; )  return new TYPE_3 ( message , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) )  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) (  VAR_4 = new TYPE_2 ( 1 ) )  VAR_4 = new TYPE_2 ( 1 ) (  VAR_5 = new TYPE_3 ( VAR_2 , VAR_4 ) )  VAR_5 = new TYPE_3 ( VAR_2 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) . METHOD_3 ( STRING_1 , null , STRING_2 ) ) INIT = METHOD_2 ( ) . METHOD_3 ( STRING_1 , null , STRING_2 ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new TYPE_1 ( STRING_3 ) ; )  throw new TYPE_1 ( STRING_3 ) ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 + ( VAR_1 / 2 ) ) INIT = VAR_1 + ( VAR_1 / 2 ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . get ( ) . apply ( revision , new TYPE_2 ( ) ) )  VAR_1 . get ( ) . apply ( revision , new TYPE_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_1 , e ) ; )  throw new TYPE_1 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME getKey ) NAME getKey ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( project , VAR_1 , VAR_2 , VAR_3 ) ; )  return new TYPE_1 ( project , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN com.google.gerrit.reviewdb.server.ReviewDb ) RETURN com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ( BLOCK BLOCK (  return ( cd ) != null ? cd . db ( ) : null ; )  return ( cd ) != null ? cd . db ( ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 < TYPE_1 < TYPE_2 > > METHOD_3 ( new TYPE_3 . Factory ( ) , new TYPE_4 . Factory ( ) , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( ) ) ) )  METHOD_2 ( VAR_1 < TYPE_1 < TYPE_2 > > METHOD_3 ( new TYPE_3 . Factory ( ) , new TYPE_4 . Factory ( ) , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE int ) TYPE int ( NAME id ) NAME id ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( 1 , id ) )  TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( 1 , id ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME label ) NAME label ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label ) )  METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) . METHOD_1 ( revision ) ; )  return VAR_1 . get ( ) . METHOD_1 ( revision ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME walk ) NAME walk ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) )  this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . error ( ( ( VAR_2 ) + msg ) ) )  VAR_1 . error ( ( ( VAR_2 ) + msg ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( ( VAR_2 ) + ( projectName . get ( ) ) ) + ( VAR_3 ) ) + VAR_1 ; )  return ( ( ( VAR_2 ) + ( projectName . get ( ) ) ) + ( VAR_3 ) ) + VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( user . METHOD_2 ( ) ) && ( ( ( TYPE_1 ) ( user ) ) . getAccountId ( ) . equals ( id ) ) ) COND ( user . METHOD_2 ( ) ) && ( ( ( TYPE_1 ) ( user ) ) . getAccountId ( ) . equals ( id ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME index ) NAME index ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( null ) ; )  return TYPE_2 . METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE TYPE_1.PatchSet ) TYPE TYPE_1.PatchSet ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) )  TYPE_2 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN ( WHILE WHILE ( COND ( VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) COND ( VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ( BLOCK BLOCK ) BLOCK BLOCK ) WHILE WHILE ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ( INIT = VAR_3 . METHOD_1 ( VAR_2 ) ) INIT = VAR_3 . METHOD_1 ( VAR_2 ) ) VAR VAR (  commit ( VAR_3 ) )  commit ( VAR_3 ) (  return key ; )  return key ; ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , input , null , null ) )  submit ( changeId , input , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getChangeId ) NAME getChangeId ( BLOCK BLOCK (  return commit . getChangeId ( ) ; )  return commit . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Factory ) TYPE TYPE_1.Factory ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getId ( ) ) ) ) ) )  TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getId ( ) ) ) ) ) (  this . psId = psId )  this . psId = psId ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( METHOD_1 ( ) ) )  TYPE_1 . display ( METHOD_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( msg ) )  METHOD_1 ( msg ) (  VAR_1 . METHOD_2 ( ( STRING_1 + ( change.getId ( ) ) ) , t ) )  VAR_1 . METHOD_2 ( ( STRING_1 + ( change.getId ( ) ) ) , t ) (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( STRING_1 , VAR_1 , true ) ; )  return METHOD_1 ( STRING_1 , VAR_1 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME contains ) NAME contains ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( COND b < e ) COND b < e ( UPDATE UPDATE (  b ++ )  b ++ ) UPDATE UPDATE ( BLOCK BLOCK ( IF IF ( COND ( METHOD_1 ( b ) ) == c ) COND ( METHOD_1 ( b ) ) == c ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR FOR (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME index ) NAME index ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( change ) . METHOD_2 ( ) )  METHOD_1 ( change ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME id ) NAME id ( INIT = TYPE_3 . METHOD_1 ( name ) ) INIT = TYPE_3 . METHOD_1 ( name ) ) VAR VAR (  return TYPE_1 . METHOD_2 ( id ) . METHOD_3 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; )  return TYPE_1 . METHOD_2 ( id ) . METHOD_3 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME notes ) NAME notes ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patch ) NAME patch ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 ) ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( key . METHOD_3 ( VAR_1 ) , java.util.Collections . METHOD_4 ( ) ) ; )  return TYPE_4 . METHOD_2 ( key . METHOD_3 ( VAR_1 ) , java.util.Collections . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_2 ) NAME METHOD_2 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD (  new TYPE_2 ( VAR_1 . getMessage ( ) ) { public void METHOD_2 ( final java.lang.String t ) { } } . METHOD_3 ( ) )  new TYPE_2 ( VAR_1 . getMessage ( ) ) { public void METHOD_2 ( final java.lang.String t ) { } } . METHOD_3 ( ) (  METHOD_4 ( true ) )  METHOD_4 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ) || ( METHOD_5 ( ) ) ; )  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ) || ( METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , id ) ; )  return new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.PatchSetApproval ) TYPE TYPE_1.PatchSetApproval ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_1.PatchSetApproval ) TYPE TYPE_1.PatchSetApproval ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return a . METHOD_2 ( ) . METHOD_3 ( b . METHOD_2 ( ) ) ; )  return a . METHOD_2 ( ) . METHOD_3 ( b . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) )  METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . id = ( id != null ) ? TYPE_1 . METHOD_2 ( id ) : null )  this . id = ( id != null ) ? TYPE_1 . METHOD_2 ( id ) : null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( n , TYPE_3 . METHOD_3 ( n ) ) ) INIT = TYPE_1 . METHOD_2 ( n , TYPE_3 . METHOD_3 ( n ) ) ) VAR VAR (  n . METHOD_4 ( VAR_2 ) )  n . METHOD_4 ( VAR_2 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME rsrc ) NAME rsrc ( INIT = METHOD_2 ( id . get ( ) ) ) INIT = METHOD_2 ( id . get ( ) ) ) VAR VAR ( IF IF ( COND rsrc == null ) COND rsrc == null ( THEN THEN (  throw new TYPE_4 ( id ) ; )  throw new TYPE_4 ( id ) ; ) THEN THEN ) IF IF (  return rsrc ; )  return rsrc ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; )  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . append ( STRING_1 ) )  VAR_1 . append ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( c ) , false ) )  TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( c ) , false ) (  TYPE_4 . display ( new TYPE_5 ( c ) ) )  TYPE_4 . display ( new TYPE_5 ( c ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.ChangeInfo ) RETURN TYPE_1.ChangeInfo ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return format ( cd , VAR_1 < com.google.gerrit.reviewdb.client.PatchSet.Id > METHOD_1 ( ) ) ; )  return format ( cd , VAR_1 < com.google.gerrit.reviewdb.client.PatchSet.Id > METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) VAR VAR (  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) . METHOD_5 ( true ) )  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) . METHOD_5 ( true ) (  METHOD_6 ( project , cfg ) )  METHOD_6 ( project , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( VAR_3 ) ) INIT = VAR_2 . create ( VAR_3 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  cfg . commit ( VAR_1 ) )  cfg . commit ( VAR_1 ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . close ( ) )  VAR_1 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  group ( STRING_1 , STRING_2 ) )  group ( STRING_1 , STRING_2 ) (  group ( STRING_3 , STRING_2 ) )  group ( STRING_3 , STRING_2 ) (  METHOD_2 ( STRING_4 ) )  METHOD_2 ( STRING_4 ) (  METHOD_2 ( STRING_5 ) )  METHOD_2 ( STRING_5 ) (  org.junit.Assert.assertEquals ( METHOD_3 ( STRING_4 ) . name , STRING_1 ) )  org.junit.Assert.assertEquals ( METHOD_3 ( STRING_4 ) . name , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , name ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 < TYPE_1 > METHOD_2 ( ) . METHOD_1 ( name ) ; )  return VAR_1 < TYPE_1 > METHOD_2 ( ) . METHOD_1 ( name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) VAR VAR (  METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 ) (  assertThat ( VAR_6 ) . METHOD_4 ( ) )  assertThat ( VAR_6 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME error ) NAME error ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new java.util.ArrayList < > ( INT_1 ) )  VAR_1 = new java.util.ArrayList < > ( INT_1 ) ) THEN THEN ) IF IF (  VAR_1 . add ( error ) )  VAR_1 . add ( error ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) (  servlet = TYPE_5 . create ( repo ) )  servlet = TYPE_5 . create ( repo ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project ) TYPE com.google.gerrit.reviewdb.client.Project ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( project . METHOD_2 ( ) ) ; )  return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( project . METHOD_2 ( ) ) ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 class ) )  VAR_1 . METHOD_2 ( VAR_2 class ) (  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( ) . get ( ) )  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( ) . get ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_2 ( VAR_2 , project , branch , key ) )  VAR_1 = new TYPE_2 ( VAR_2 , project , branch , key ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 : : )  return new TYPE_1 ( TYPE_2 : : ( LABELED LABELED ( NAME TYPE_2 ) NAME TYPE_2 ) LABELED LABELED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 = true )  VAR_1 = true (  submit ( in ) )  submit ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME err ) NAME err ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( err ) )  TYPE_3 . METHOD_2 ( err ) (  return err . METHOD_3 ( ) ; )  return err . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ( ELSE ELSE (  return VAR_3 . create ( change . METHOD_2 ( ) ) ; )  return VAR_3 . create ( change . METHOD_2 ( ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ? VAR_1 : null ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ? VAR_1 : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME update ) NAME update ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  update . METHOD_2 ( VAR_1 . getMessage ( ) ) )  update . METHOD_2 ( VAR_1 . getMessage ( ) ) (  db . METHOD_3 ( ) . insert ( java.util.Collections.singleton ( VAR_1 ) ) )  db . METHOD_3 ( ) . insert ( java.util.Collections.singleton ( VAR_1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) )  VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2.ChangeInfo> ) RETURN TYPE_1<TYPE_2.ChangeInfo> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME rsrc ) NAME rsrc ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  return TYPE_1 . METHOD_2 ( METHOD_3 ( ) . format ( rsrc ) ) ; )  return TYPE_1 . METHOD_2 ( METHOD_3 ( ) . format ( rsrc ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_3 ( ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  VAR_3 . METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_4 , project ) ) )  VAR_3 . METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_4 , project ) ) ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( e . getValue ( ) ) )  VAR_1 . METHOD_2 ( e . getValue ( ) ) (  view . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) )  view . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( name , STRING_1 ) ) INIT = new TYPE_1 ( name , STRING_1 ) ) VAR VAR (  c . METHOD_2 ( 0 ) )  c . METHOD_2 ( 0 ) (  TYPE_2 . METHOD_3 ( ) . VAR_1 . METHOD_4 ( c ) )  TYPE_2 . METHOD_3 ( ) . VAR_1 . METHOD_4 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return METHOD_1 ( ) ; )  return METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME c ) NAME c ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_2> ) TYPE java.util.Map<java.lang.String,TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_3 ( c ) ) INIT = METHOD_3 ( c ) ) VAR VAR (  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( 0 ) )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 + VAR_1 ) + STRING_2 ; )  return ( STRING_1 + VAR_1 ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 = new TYPE_1 ( this ) )  VAR_2 = new TYPE_1 ( this ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 , 1 ) )  VAR_1 . METHOD_2 ( STRING_1 , 1 ) (  api . getProject ( VAR_2 . get ( ) ) )  api . getProject ( VAR_2 . get ( ) ) (  TYPE_4 . METHOD_3 ( VAR_1 ) )  TYPE_4 . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 . log ) ) ; )  return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 . log ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ( INIT = VAR_2 . METHOD_3 ( VAR_3 ) ) INIT = VAR_2 . METHOD_3 ( VAR_3 ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( repo , VAR_1 ) ; )  return TYPE_2 . METHOD_1 ( repo , VAR_1 ) ; ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 ) )  TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) )  TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME auth ) NAME auth ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND account != null ) COND account != null ( THEN THEN (  return new TYPE_1 ( account . getAccountId ( ) , null , false ) ; )  return new TYPE_1 ( account . getAccountId ( ) , null , false ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FIELD FIELD ( MODIFIER private static final ) MODIFIER private static final ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = INT_1 ) INIT = INT_1 ) FIELD FIELD ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_2 ) NAME METHOD_2 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_3.HttpServletResponse ) TYPE TYPE_3.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  res . METHOD_3 ( VAR_2 ) )  res . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 ( null ) { private static final long VAR_1 = INT_1 ; public void METHOD_2 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) { res . METHOD_3 ( VAR_2 ) ; } } ; )  return new TYPE_1 ( null ) { private static final long VAR_1 = INT_1 ; public void METHOD_2 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) { res . METHOD_3 ( VAR_2 ) ; } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) . id ( STRING_1 ) . get ( ) )  VAR_1 . METHOD_2 ( ) . id ( STRING_1 ) . get ( ) (  org.junit.Assert . METHOD_3 ( STRING_2 ) )  org.junit.Assert . METHOD_3 ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( project , STRING_1 ) )  METHOD_2 ( project , STRING_1 ) (  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ( INIT = METHOD_2 ( ) . getChangeId ( ) ) INIT = METHOD_2 ( ) . getChangeId ( ) ) VAR VAR (  METHOD_3 ( project , STRING_1 ) )  METHOD_3 ( project , STRING_1 ) (  VAR_1 . METHOD_4 ( ( ( STRING_2 + changeId ) + STRING_3 ) ) . METHOD_5 ( ) )  VAR_1 . METHOD_4 ( ( ( STRING_2 + changeId ) + STRING_3 ) ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ) RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ) TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > ( this . VAR_1 ) ) INIT = new TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > ( this . VAR_1 ) ) VAR VAR (  VAR_1 . METHOD_2 ( reviewers ) )  VAR_1 . METHOD_2 ( reviewers ) (  return java.util.Collections . METHOD_3 ( VAR_1 ) ; )  return java.util.Collections . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . changes ( ) . id ( id ) . revision ( STRING_1 ) . METHOD_2 ( new TYPE_1 ( ) . label ( STRING_2 , 2 ) ) )  VAR_1 . changes ( ) . id ( id ) . revision ( STRING_1 ) . METHOD_2 ( new TYPE_1 ( ) . label ( STRING_2 , 2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project ) TYPE com.google.gerrit.reviewdb.client.Project ( NAME project ) NAME project ( INIT = VAR_1 . METHOD_2 ( ) . getProject ( ) ) INIT = VAR_1 . METHOD_2 ( ) . getProject ( ) ) VAR VAR (  return project . METHOD_3 ( ) ; )  return project . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  cfg . METHOD_1 ( ) )  cfg . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( commands ) )  METHOD_1 ( commands ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( index , p , VAR_1 ) ; )  return new TYPE_1 ( index , p , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME label ) NAME label ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( psId , VAR_1 , label , VAR_2 ) ; )  return new TYPE_2 ( psId , VAR_1 , label , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,?> ) TYPE java.util.Map<java.lang.String,?> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( res , VAR_1 , METHOD_3 ( req , res , VAR_2 ) ) )  VAR_3 . METHOD_2 ( res , VAR_1 , METHOD_3 ( req , res , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN org.eclipse.jgit.revwalk.RevCommit ) RETURN org.eclipse.jgit.revwalk.RevCommit ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ( INIT = VAR_1 . METHOD_2 ( project ) ) INIT = VAR_1 . METHOD_2 ( project ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return METHOD_3 ( repo , STRING_1 ) ; )  return METHOD_3 ( repo , STRING_1 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  repo . close ( ) )  repo . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , project , VAR_1 , VAR_2 , false ) ; )  return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , project , VAR_1 , VAR_2 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; )  return METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; ) THEN THEN ( ELSE ELSE (  return java.util.Collections . METHOD_6 ( ) ; )  return java.util.Collections . METHOD_6 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) )  db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) (  VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) )  VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  table . METHOD_1 ( result . METHOD_2 ( ) ) )  table . METHOD_1 ( result . METHOD_2 ( ) ) (  VAR_1 . display ( result . METHOD_3 ( ) ) )  VAR_1 . display ( result . METHOD_3 ( ) ) (  table . METHOD_4 ( true ) )  table . METHOD_4 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME edit ) NAME edit ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . edit ( id ) . get ( VAR_1 ) )  TYPE_3 . edit ( id ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , true , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_2 , true , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  run ( VAR_1 , VAR_2 . create ( id ) ) )  run ( VAR_1 , VAR_2 . create ( id ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . apply ( account , in ) )  VAR_1 . apply ( account , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; )  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) )  assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ( ( create ( ) ) instanceof TYPE_1 ) ) )  METHOD_2 ( ( ( create ( ) ) instanceof TYPE_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  TYPE_2 . METHOD_2 ( ( ( VAR_2 ) != null ) , STRING_1 ) )  TYPE_2 . METHOD_2 ( ( ( VAR_2 ) != null ) , STRING_1 ) (  VAR_1 = new TYPE_1 ( VAR_2 ) )  VAR_1 = new TYPE_1 ( VAR_2 ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3,TYPE_4> ) TYPE TYPE_2<TYPE_3,TYPE_4> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_5 ( VAR_1 , METHOD_2 ( ) . METHOD_3 ( STRING_1 ) , METHOD_4 ( ) . METHOD_5 ( ) ) ; )  return new TYPE_5 ( VAR_1 , METHOD_2 ( ) . METHOD_3 ( STRING_1 ) , METHOD_4 ( ) . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_1> ) TYPE TYPE_2<TYPE_1> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) )  TYPE_3 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ( INIT = VAR_1 . change ( VAR_2 ) ) INIT = VAR_1 . change ( VAR_2 ) ) VAR VAR (  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( ) ) < ( VAR_3 ) ) ; )  return ( change != null ) && ( ( change . METHOD_2 ( ) . METHOD_3 ( ) ) < ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; )  return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return create ( ) ; )  return create ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2.OrmException ) TYPE TYPE_2.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_1 , e ) ; )  throw new TYPE_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.HttpServletResponse ) TYPE TYPE_1.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  res . METHOD_2 ( STRING_1 , STRING_2 ) )  res . METHOD_2 ( STRING_1 , STRING_2 ) (  res . METHOD_2 ( STRING_3 , STRING_4 ) )  res . METHOD_2 ( STRING_3 , STRING_4 ) (  res . METHOD_2 ( STRING_5 , STRING_6 ) )  res . METHOD_2 ( STRING_5 , STRING_6 ) (  res . METHOD_2 ( STRING_7 , STRING_8 ) )  res . METHOD_2 ( STRING_7 , STRING_8 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) . run ( ) )  VAR_1 . METHOD_2 ( ) . run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 . name ( ) , TYPE_3 . METHOD_2 ( VAR_2 ) ) )  METHOD_1 ( VAR_1 . name ( ) , TYPE_3 . METHOD_2 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( TYPE_2 . METHOD_1 ( ) ) ) ; )  return ( ( TYPE_1 ) ( TYPE_2 . METHOD_1 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_1 ) . isEmpty ( ) ) )  org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_1 ) . isEmpty ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  value = VAR_1 )  value = VAR_1 (  VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) )  VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ) VAR VAR ( IF IF ( COND VAR_2 . METHOD_4 ( ) ) COND VAR_2 . METHOD_4 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_5 ( new TYPE_3 ( VAR_1 ) ) )  VAR_1 . METHOD_5 ( new TYPE_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( TYPE_1 . project ( name . get ( ) ) ) )  METHOD_2 ( TYPE_1 . project ( name . get ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) . to ( VAR_1 class ) )  METHOD_2 ( ) . to ( VAR_1 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_3 class ) )  METHOD_2 ( ) . to ( VAR_3 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME reject ) NAME reject ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReceiveCommand ) TYPE TYPE_1.ReceiveCommand ( NAME cmd ) NAME cmd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . reject ( cmd , STRING_1 ) )  TYPE_2 . reject ( cmd , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( cd , true ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( cd , true ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ( INIT = VAR_1 . getAccountId ( ) ) INIT = VAR_1 . getAccountId ( ) ) VAR VAR (  return id != null ? VAR_2 . create ( id ) : VAR_3 ; )  return id != null ? VAR_2 . create ( id ) : VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ( INIT = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ) INIT = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ) VAR VAR (  return VAR_2 . get ( id ) ; )  return VAR_2 . get ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) (  VAR_2 . display ( result . METHOD_4 ( ) ) )  VAR_2 . display ( result . METHOD_4 ( ) ) (  VAR_2 . METHOD_5 ( ) )  VAR_2 . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctl ) NAME ctl ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ( IF IF ( COND ctl == null ) COND ctl == null ( THEN THEN (  ctl = VAR_2 . create ( this ) )  ctl = VAR_2 . create ( this ) (  VAR_1 = ctl )  VAR_1 = ctl ) THEN THEN ) IF IF (  return ctl ; )  return ctl ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  change . METHOD_1 ( VAR_1 . get ( VAR_2 , ps . getId ( ) ) ) )  change . METHOD_1 ( VAR_1 . get ( VAR_2 , ps . getId ( ) ) ) (  return change ; )  return change ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ) != null ) && ( METHOD_4 ( VAR_1 ) ) ; )  return ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ) != null ) && ( METHOD_4 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 < java.lang.String , TYPE_2 > of ( ) , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 < java.lang.String , TYPE_2 > of ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; )  return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return c . METHOD_2 ( ) . METHOD_3 ( ) ; )  return c . METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME n ) NAME n ( INIT = getName ( ) ) INIT = getName ( ) ) VAR VAR ( IF IF ( COND n . METHOD_2 ( STRING_1 ) ) COND n . METHOD_2 ( STRING_1 ) ( THEN THEN (  return n . METHOD_3 ( STRING_1 . length ( ) ) ; )  return n . METHOD_3 ( STRING_1 . length ( ) ) ; ) THEN THEN ) IF IF (  return n ; )  return n ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return in ; )  return in ; ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 < java.lang.String > ( VAR_1 ) { public java.lang.String apply ( java.lang.String in ) { return in ; } } ; )  return new TYPE_1 < java.lang.String > ( VAR_1 ) { public java.lang.String apply ( java.lang.String in ) { return in ; } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; )  return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME rsrc ) NAME rsrc ( INIT = METHOD_2 ( id ) ) INIT = METHOD_2 ( id ) ) VAR VAR ( IF IF ( COND rsrc == null ) COND rsrc == null ( THEN THEN (  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , id ) ) ; )  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , id ) ) ; ) THEN THEN ) IF IF (  return rsrc ; )  return rsrc ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME me ) NAME me ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME base ) NAME base ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( me , VAR_1 , VAR_2 , base , VAR_3 , VAR_2 . METHOD_2 ( ) ) ; )  return METHOD_1 ( me , VAR_1 , VAR_2 , base , VAR_3 , VAR_2 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME m ) NAME m ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 ? new TYPE_1 ( m ) : new TYPE_1 ( m , VAR_3 . METHOD_2 ( VAR_1 ) ) ; )  return VAR_2 ? new TYPE_1 ( m ) : new TYPE_1 ( m , VAR_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  httpd = false )  httpd = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ( VAR_2 ) == VAR_3 ) ) COND ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ( VAR_2 ) == VAR_3 ) ( THEN THEN (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME git ) NAME git ( INIT = VAR_1 . METHOD_2 ( project ) ) INIT = VAR_1 . METHOD_2 ( project ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 . METHOD_3 ( git . METHOD_4 ( ) ) ) ; )  return new TYPE_1 ( TYPE_2 . METHOD_3 ( git . METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  git . close ( ) )  git . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ) INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ) VAR VAR (  r . append ( changeId . get ( ) ) )  r . append ( changeId . get ( ) ) (  return r . toString ( ) ; )  return r . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) )  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . commit ( TYPE_2 . METHOD_2 ( id ) ) ) ; )  return query ( TYPE_1 . commit ( TYPE_2 . METHOD_2 ( id ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client.Project.NameKey ( ( ( info . name ) != null ? info . name : TYPE_2 . METHOD_1 ( info . id ) ) ) . equals ( p ) ; )  return new com.google.gerrit.reviewdb.client.Project.NameKey ( ( ( info . name ) != null ? info . name : TYPE_2 . METHOD_1 ( info . id ) ) ) . equals ( p ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) ) )  VAR_1 . METHOD_2 ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME value ) NAME value ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( new TYPE_1 . Key ( VAR_1 . getId ( ) , ( ( short ) ( value ) ) ) , name ) ; )  return new TYPE_1 ( new TYPE_1 . Key ( VAR_1 . getId ( ) , ( ( short ) ( value ) ) ) , name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_1 ( false , true ) ) COND VAR_2 . METHOD_1 ( false , true ) ( THEN THEN (  log . METHOD_2 ( VAR_1 ) )  log . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  VAR_3 = VAR_1 . length ( ) )  VAR_3 = VAR_1 . length ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<java.lang.String> ) RETURN java.util.List<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( ) ; )  return java.util.Collections . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  walk . METHOD_2 ( ) )  walk . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . get ( config . METHOD_2 ( ) . METHOD_3 ( ) ) ) INIT = TYPE_2 . get ( config . METHOD_2 ( ) . METHOD_3 ( ) ) ) VAR VAR (  TYPE_3 . METHOD_4 ( VAR_1 ) )  TYPE_3 . METHOD_4 ( VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ) INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ) VAR VAR (  return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; )  return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  VAR_1 . append ( METHOD_2 ( VAR_2 ) ) )  VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ) THEN THEN ( ELSE ELSE (  VAR_1 . append ( VAR_3 ) )  VAR_1 . append ( VAR_3 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.Account.Id> ( NAME reviewers ) NAME reviewers ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( METHOD_2 ( ) ) ; )  return TYPE_3 . METHOD_1 ( METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME projectName ) NAME projectName ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( VAR_2 . METHOD_2 ( VAR_3 class ) ) == null ) INIT = ( VAR_2 . METHOD_2 ( VAR_3 class ) ) == null ) VAR VAR (  METHOD_3 ( TYPE_2 . config ( VAR_2 ) , VAR_1 ) )  METHOD_3 ( TYPE_2 . config ( VAR_2 ) , VAR_1 ) (  base . METHOD_1 ( ) )  base . METHOD_1 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.client.Account> ) TYPE TYPE_2<com.google.gerrit.reviewdb.client.Account> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , schema . METHOD_3 ( ) , VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , schema . METHOD_3 ( ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( FLOAT_1 ) )  METHOD_2 ( FLOAT_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } ) ; )  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , project , STRING_1 , true , VAR_2 ) )  METHOD_3 ( VAR_1 , project , STRING_1 , true , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME id ) NAME id ( INIT = TYPE_3 . METHOD_2 ( name ) ) INIT = TYPE_3 . METHOD_2 ( name ) ) VAR VAR (  return TYPE_1 . METHOD_3 ( id ) . METHOD_4 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; )  return TYPE_1 . METHOD_3 ( id ) . METHOD_4 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . in ( VAR_3 ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . in ( VAR_3 ) (  bind ( VAR_4 class ) . in ( VAR_3 ) )  bind ( VAR_4 class ) . in ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 . add ( table ) )  VAR_1 . add ( table ) (  table . METHOD_3 ( false ) )  table . METHOD_3 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( change , e ) )  METHOD_2 ( change , e ) (  throw e ; )  throw e ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; )  return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctl ) NAME ctl ( INIT = VAR_1 . METHOD_2 ( changeId , user ) ) INIT = VAR_1 . METHOD_2 ( changeId , user ) ) VAR VAR (  return METHOD_1 ( ctl . getChange ( ) , user ) ; )  return METHOD_1 ( ctl . getChange ( ) , user ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME index ) NAME index ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.AccountGroup ) TYPE com.google.gerrit.reviewdb.client.AccountGroup ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_1 ( ) ) != null ) COND ( VAR_1 . METHOD_1 ( ) ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) . METHOD_2 ( group ) )  VAR_1 . METHOD_1 ( ) . METHOD_2 ( group ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , project , STRING_1 , true ) )  METHOD_2 ( VAR_1 , project , STRING_1 , true ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( -- ( VAR_1 ) ) == 0 ) COND ( -- ( VAR_1 ) ) == 0 ( THEN THEN (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 (  VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) )  VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME lang ) NAME lang ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 ? new TYPE_2 ( lang ) : new TYPE_3 ( ) ; )  return VAR_1 ? new TYPE_2 ( lang ) : new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  return ( ( int ) ( TYPE_2 . METHOD_3 ( VAR_2 ) ) ) ; )  return ( ( int ) ( TYPE_2 . METHOD_3 ( VAR_2 ) ) ) ; ) THEN THEN ( ELSE ELSE (  return - 1 ; )  return - 1 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , METHOD_1 ( ) ) ; )  return new TYPE_1 ( VAR_1 , METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return create ( ( ( TYPE_2 ) ( null ) ) , id ) ; )  return create ( ( ( TYPE_2 ) ( null ) ) , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME message ) NAME message ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 , 0 , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , 0 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  table . METHOD_1 ( result . METHOD_2 ( ) ) )  table . METHOD_1 ( result . METHOD_2 ( ) ) (  VAR_1 . display ( result . METHOD_3 ( ) ) )  VAR_1 . display ( result . METHOD_3 ( ) ) (  table . METHOD_4 ( true ) )  table . METHOD_4 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( ctl . METHOD_2 ( ) ) ) ; )  return ( ( TYPE_1 ) ( ctl . METHOD_2 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 ) ; )  return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  METHOD_2 ( ) . to ( VAR_4 class ) )  METHOD_2 ( ) . to ( VAR_4 class ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , false , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_2 , false , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . length ( ) ) * 2 ; )  return ( VAR_1 . length ( ) ) * 2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = url )  this . VAR_1 = url ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 (  VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) )  VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME result ) NAME result ( INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ) INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ) VAR VAR (  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) )  org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = METHOD_2 ( ) )  VAR_1 = METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) )  TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return )  return (  ( ) )  ( ) (  - > )  - > (  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) )  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 , null , revision , VAR_1 , null , 0 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 , null , revision , VAR_1 , null , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME notes ) NAME notes ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patch ) NAME patch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( this , db , notes , patch , VAR_1 , VAR_2 , VAR_3 ) ; )  return TYPE_3 . METHOD_2 ( this , db , notes , patch , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c ) )  METHOD_2 ( c ) (  VAR_1 . METHOD_3 ( c ) )  VAR_1 . METHOD_3 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME rw ) NAME rw ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( rw . parseCommit ( id ) ) ) ; )  return ( ( TYPE_1 ) ( rw . parseCommit ( id ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData,?> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData,?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( false , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( false , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; )  return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME id ) NAME id ( INIT = INT_1 ) INIT = INT_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( id ) ) INIT = new TYPE_1 ( id ) ) VAR VAR (  assertEquals ( ( ( int ) ( id ) ) , p . METHOD_2 ( ) ) )  assertEquals ( ( ( int ) ( id ) ) , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  return TYPE_3 . METHOD_2 ( c , path , VAR_1 , line , message ) ; )  return TYPE_3 . METHOD_2 ( c , path , VAR_1 , line , message ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  METHOD_2 ( b , b . append ( FLOAT_1 ) ) )  METHOD_2 ( b , b . append ( FLOAT_1 ) ) (  assertEquals ( STRING_1 , b . METHOD_3 ( ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Change.Key ) RETURN Change.Key ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . apply ( change , input ) . value ( ) ; )  return VAR_1 . apply ( change , input ) . value ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_1 , e ) ; )  throw new TYPE_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.lib.Repository ) RETURN org.eclipse.jgit.lib.Repository ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( name ) ; )  return VAR_1 . METHOD_1 ( name ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME err ) NAME err ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) )  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  rpc ( VAR_1 class ) )  rpc ( VAR_1 class ) (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) (  install ( new TYPE_2 ( ) ) )  install ( new TYPE_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_2 ( STRING_3 ) . METHOD_2 ( STRING_4 ) ; )  return VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_2 ( STRING_3 ) . METHOD_2 ( STRING_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME revision ) NAME revision ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME revision ) NAME revision ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( revision ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( revision ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  c . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  c . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) (  TYPE_2 . METHOD_4 ( c ) )  TYPE_2 . METHOD_4 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . append ( METHOD_2 ( VAR_2 ) ) )  VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 . getChangeId ( ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 . getChangeId ( ) ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ) COND STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ( THEN THEN (  VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) )  VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) (  VAR_1 . METHOD_5 ( TYPE_3 . css ( ) . METHOD_6 ( ) ) )  VAR_1 . METHOD_5 ( TYPE_3 . css ( ) . METHOD_6 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND c . getStatus ( ) . METHOD_1 ( ) ) COND c . getStatus ( ) . METHOD_1 ( ) ( THEN THEN (  c . METHOD_2 ( VAR_1 ) )  c . METHOD_2 ( VAR_1 ) (  TYPE_2 . METHOD_3 ( c ) )  TYPE_2 . METHOD_3 ( c ) ) THEN THEN ) IF IF (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) (  VAR_1 . delete ( ) )  VAR_1 . delete ( ) (  repo = TYPE_2 . METHOD_3 ( VAR_1 ) )  repo = TYPE_2 . METHOD_3 ( VAR_1 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  change . METHOD_1 ( ) )  change . METHOD_1 ( ) (  return change ; )  return change ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ; )  return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3<TYPE_4>>> ) TYPE TYPE_1<TYPE_2<TYPE_3<TYPE_4>>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_5 . revision ( id , STRING_1 ) . get ( VAR_1 ) )  TYPE_5 . revision ( id , STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  project . METHOD_1 ( c . project ( ) ) )  project . METHOD_1 ( c . project ( ) ) (  TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( path , null , null ) ) )  TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( path , null , null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( r . METHOD_2 ( ) ) ) INIT = new TYPE_2 ( r . METHOD_2 ( ) ) ) VAR VAR (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) (  return METHOD_4 ( ) . METHOD_5 ( VAR_1 , VAR_2 . String class ) ; )  return METHOD_4 ( ) . METHOD_5 ( VAR_1 , VAR_2 . String class ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) . get ( ) ) )  TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) . get ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . edit ( id ) . id ( path ) ; )  return TYPE_2 . edit ( id ) . id ( path ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patch ) NAME patch ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSet.Id,com.google.gerrit.reviewdb.client.PatchSetApproval> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSet.Id,com.google.gerrit.reviewdb.client.PatchSetApproval> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = VAR_2 . METHOD_2 ( db , notes ( ) ) )  VAR_1 = VAR_2 . METHOD_2 ( db , notes ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME close ) NAME close ( BLOCK BLOCK (  walk ( ) . close ( ) )  walk ( ) . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_1 ( ) ; )  return METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) && ( METHOD_4 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) && ( METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME user ) NAME user ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND url == null ) COND url == null ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ( ELSE ELSE (  return new TYPE_2 ( url , user , VAR_1 ) ; )  return new TYPE_2 ( url , user , VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME close ) NAME close ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ( TRY TRY ( BLOCK BLOCK (  VAR_4 . close ( ) )  VAR_4 . close ( ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_5 . close ( ) )  VAR_5 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 == 1 ) || ( VAR_1 == INT_1 ) ) COND ( VAR_1 == 1 ) || ( VAR_1 == INT_1 ) ( THEN THEN (  METHOD_2 ( row , VAR_1 ) )  METHOD_2 ( row , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  ( VAR_2 ) ++ )  ( VAR_2 ) ++ (  return ( VAR_2 ) <= ( VAR_3 ) ; )  return ( VAR_2 ) <= ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( null ) ) )  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.ChangeInfo ) RETURN TYPE_1.ChangeInfo ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . apply ( change , VAR_1 ) . value ( ) ; )  return VAR_2 . apply ( change , VAR_1 ) . value ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|TYPE_4 ) TYPE com.google.gwtorm.server.OrmException|TYPE_4 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( STRING_1 , e ) ; )  throw new TYPE_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . get ( ) ) == null ) COND ( VAR_1 . get ( ) ) == null ( THEN THEN (  return super . METHOD_1 ( ) ; )  return super . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME out ) NAME out ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( project ) ) INIT = VAR_2 . get ( project ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 ) . get ( ) . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 ) . get ( ) . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_2 ) && ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ( INIT = java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , this ) , p ) ) INIT = java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , this ) , p ) ) VAR VAR (  return r < 0 ? - ( r + 1 ) : r ; )  return r < 0 ? - ( r + 1 ) : r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME change ) NAME change ( INIT = METHOD_2 ( git ) ) INIT = METHOD_2 ( git ) ) VAR VAR (  submit ( change . getChangeId ( ) ) )  submit ( change . getChangeId ( ) ) (  com.google.common.truth.Truth.assertThat ( METHOD_3 ( ) . getId ( ) ) . isEqualTo ( change . METHOD_4 ( ) ) )  com.google.common.truth.Truth.assertThat ( METHOD_3 ( ) . getId ( ) ) . isEqualTo ( change . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) ) )  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_3 != null ) COND VAR_3 != null ( THEN THEN (  plugins . put ( VAR_2 . getName ( ) , VAR_3 ) )  plugins . put ( VAR_2 . getName ( ) , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  this . VAR_1 = false )  this . VAR_1 = false (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . projects ( ) . name ( project . get ( ) ) . METHOD_1 ( ) . get ( ) ; )  return VAR_1 . projects ( ) . name ( project . get ( ) ) . METHOD_1 ( ) . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) ) ; )  return TYPE_2 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ( INIT = VAR_1 . getAccountId ( ) ) INIT = VAR_1 . getAccountId ( ) ) VAR VAR (  return id != null ? new TYPE_3 ( id ) : VAR_2 ; )  return id != null ? new TYPE_3 ( id ) : VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cmd ) NAME cmd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = cmd )  VAR_1 = cmd (  update ( ) )  update ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return new TYPE_1 ( index , p ) ; )  return new TYPE_1 ( index , p ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_4 ( ( ( STRING_1 + p ) + STRING_2 ) , e ) ; )  throw new TYPE_4 ( ( ( STRING_1 + p ) + STRING_2 ) , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_4> ) TYPE TYPE_3<TYPE_4> ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3.Id ) TYPE TYPE_3.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME commit ) NAME commit ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3.NameKey ) TYPE TYPE_3.NameKey ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_4 ( STRING_1 ) ; )  throw new TYPE_4 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . format = VAR_1 )  this . format = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  METHOD_6 ( ) )  METHOD_6 ( ) (  METHOD_7 ( ) )  METHOD_7 ( ) (  METHOD_8 ( ) )  METHOD_8 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return db . changes ( ) . get ( update . getChange ( ) . getId ( ) ) ; )  return db . changes ( ) . get ( update . getChange ( ) . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( id ) )  VAR_1 . METHOD_2 ( id ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return a . run ( in . get ( ) ) ; )  return a . run ( in . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . equals ( VAR_2 ) ) COND VAR_1 . equals ( VAR_2 ) ( THEN THEN (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , null ) )  METHOD_1 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME getStatus ) NAME getStatus ( BLOCK BLOCK (  return status ; )  return status ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  projects . display ( result ) )  projects . display ( result ) (  projects . METHOD_1 ( ) )  projects . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  display ( null , null , false , VAR_1 , VAR_2 ) )  display ( null , null , false , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , null , db , id ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , null , db , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ps . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( db ) ) ) ) COND ( ps . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( db ) ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_4 ( db ) ; )  return METHOD_4 ( db ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 . create ( user ) )  VAR_1 = VAR_2 . create ( user ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; )  return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . add ( e ) )  VAR_1 . add ( e ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( VAR_2 ) )  VAR_1 = METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return get ( STRING_1 , true ) ; )  return get ( STRING_1 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  org.junit.Assert . METHOD_2 ( VAR_2 , VAR_2 . contains ( VAR_1 ) ) )  org.junit.Assert . METHOD_2 ( VAR_2 , VAR_2 . contains ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_1 ( git , i , msg , true ) ; )  return TYPE_4 . METHOD_1 ( git , i , msg , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( args , c . getProject ( ) , c ) . METHOD_2 ( ) ; )  return new TYPE_1 ( args , c . getProject ( ) , c ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME rsp ) NAME rsp ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( req , rsp ) )  METHOD_2 ( req , rsp ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME message ) NAME message ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; )  return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_4 . METHOD_2 ( ) )  TYPE_4 . METHOD_2 ( ) (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( VAR_2 + ( VAR_3 ) ) ) . METHOD_3 ( ) ; )  return VAR_1 . METHOD_2 ( ( VAR_2 + ( VAR_3 ) ) ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_1 ( ) ) INIT = TYPE_3 . METHOD_1 ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ( IN extensions ) IN extensions ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) )  VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME p ) NAME p ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ( IF IF ( COND ! ( p . METHOD_2 ( ) ) ) COND ! ( p . METHOD_2 ( ) ) ( THEN THEN (  p = p . METHOD_3 ( ) )  p = p . METHOD_3 ( ) (  VAR_1 = p )  VAR_1 = p ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; (  METHOD_4 ( VAR_3 ) )  METHOD_4 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return STRING_1 + ( c . get ( ) ) ; )  return STRING_1 + ( c . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_1 ) , id . name ( ) ) ) ; )  return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_1 ) , id . name ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) )  install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) (  install ( new TYPE_2 ( ) ) )  install ( new TYPE_2 ( ) ) (  bind ( VAR_3 class ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) )  bind ( VAR_3 class ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN PatchSet.Id ) RETURN PatchSet.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 == ( VAR_2 ) ) && ( ( base ) != null ) ? base : revision ; )  return ( VAR_1 == ( VAR_2 ) ) && ( ( base ) != null ) ? base : revision ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) )  org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.Branch ) RETURN TYPE_1.Branch ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) )  bind ( VAR_1 class ) (  bind ( VAR_2 class ) . to ( VAR_3 class ) )  bind ( VAR_2 class ) . to ( VAR_3 class ) (  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 class ) )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 class ) (  METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_5 class ) )  METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_5 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( line , VAR_2 . METHOD_2 ( line ) ) )  VAR_1 . METHOD_1 ( line , VAR_2 . METHOD_2 ( line ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , true ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , true ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . getChange ( ) . METHOD_2 ( ) ? VAR_2 : VAR_3 ; )  return VAR_1 . getChange ( ) . METHOD_2 ( ) ? VAR_2 : VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) * INT_1 ; )  return ( VAR_1 ) * INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true , true ) )  METHOD_2 ( true , true ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  commit ( ) )  commit ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.NameKey ) RETURN TYPE_1.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 . NameKey ( projectName ) ; )  return new TYPE_1 . NameKey ( projectName ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = VAR_1 . create ( changeId , VAR_2 ) . METHOD_1 ( ) ) INIT = VAR_1 . create ( changeId , VAR_2 ) . METHOD_1 ( ) ) VAR VAR (  result . METHOD_2 ( VAR_3 . create ( changeId ) . METHOD_1 ( ) ) )  result . METHOD_2 ( VAR_3 . create ( changeId ) . METHOD_1 ( ) ) (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( true ) ; )  return METHOD_1 ( true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1<java.lang.String>> ) TYPE java.util.List<TYPE_1<java.lang.String>> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) )  assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( changeId ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( changeId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , null , true , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , null , true , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) ? key . token : null ; )  return METHOD_2 ( ) ? key . token : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = INT_1 ) INIT = INT_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = 1 ) INIT = 1 ) VAR VAR (  result = ( VAR_1 * result ) + ( id ) )  result = ( VAR_1 * result ) + ( id ) (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( db , VAR_1 , VAR_2 , VAR_3 , change ) . METHOD_1 ( ) ; )  return new TYPE_1 ( db , VAR_1 , VAR_2 , VAR_3 , change ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . apply ( STRING_1 ) ) )  org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . apply ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) )  VAR_1 . METHOD_1 ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME getStatus ( ) ) NAME getStatus ( ) ( CASE VAR_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_3 ( DEFAULT DEFAULT ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( in ) ; )  return VAR_1 . METHOD_1 ( in ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , e ) )  TYPE_2 . METHOD_2 ( VAR_1 , e ) (  org.junit.Assert.assertEquals ( VAR_2 , e . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_2 , e . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME edit ) NAME edit ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( VAR_1 ) ) INIT = new TYPE_1 ( VAR_1 ) ) VAR VAR (  assertEquals ( VAR_1 . METHOD_2 ( ) , p . METHOD_2 ( ) ) )  assertEquals ( VAR_1 . METHOD_2 ( ) , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) COND ( ( VAR_1 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ( THEN THEN (  VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , args ) )  VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , args ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , VAR_1 ) )  submit ( changeId , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.gwtorm[] ) RETURN TYPE_1.gwtorm[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 . Key < ? > [ ] { VAR_1 } ; )  return new TYPE_2 . Key < ? > [ ] { VAR_1 } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND c . getStatus ( ) . METHOD_1 ( ) ) COND c . getStatus ( ) . METHOD_1 ( ) ( THEN THEN ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  c . METHOD_2 ( VAR_2 ) )  c . METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( c ) )  TYPE_1 . METHOD_3 ( c ) ) THEN THEN ) IF IF (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_2 = new TYPE_1 ( ) )  VAR_2 = new TYPE_1 ( ) (  VAR_1 = TYPE_2 . METHOD_2 ( ) )  VAR_1 = TYPE_2 . METHOD_2 ( ) (  METHOD_3 ( VAR_2 , VAR_2 ) )  METHOD_3 ( VAR_2 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) )  db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) (  VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) )  VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( changeId , VAR_1 ) )  TYPE_2 . METHOD_2 ( changeId , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( name ) ; )  return TYPE_1 . METHOD_2 ( name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 . C ) )  bind ( VAR_1 class ) . to ( VAR_2 . C ) (  bind ( VAR_3 class ) . to ( VAR_4 class ) )  bind ( VAR_3 class ) . to ( VAR_4 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1.ReviewDb ) RETURN TYPE_1.ReviewDb ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; )  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_4.OrmException ) TYPE TYPE_4.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( 1 , STRING_1 ) ; )  throw new TYPE_2 ( 1 , STRING_1 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.lib.ObjectId ) RETURN org.eclipse.jgit.lib.ObjectId ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return commit . METHOD_2 ( ) . getId ( ) ; )  return commit . METHOD_2 ( ) . getId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( null ) )  METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) ) ; )  return VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . display ( METHOD_2 ( ) , METHOD_3 ( ) ) )  TYPE_1 . display ( METHOD_2 ( ) , METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( id != null ) && ( id . equals ( TYPE_1 ) ) ; )  return ( id != null ) && ( id . equals ( TYPE_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . edit ( id ) . METHOD_2 ( STRING_1 ) ; )  return TYPE_2 . edit ( id ) . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; )  return ( VAR_1 instanceof TYPE_3 ) && ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  db = TYPE_1 . METHOD_2 ( ) )  db = TYPE_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 . get ( ) )  VAR_2 = VAR_1 . get ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; )  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this , VAR_2 ) )  VAR_1 . METHOD_2 ( this , VAR_2 ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  cm . METHOD_4 ( ) )  cm . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  key = new TYPE_1 . Key ( ( STRING_1 + id ) ) )  key = new TYPE_1 . Key ( ( STRING_1 + id ) ) (  VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 , null ) )  VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 class ) )  factory ( VAR_1 class ) (  factory ( VAR_2 class ) )  factory ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( changeId ) . view ( STRING_1 ) ; )  return TYPE_2 . change ( changeId ) . view ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( VAR_1 , p ) ) INIT = TYPE_1 . METHOD_2 ( VAR_1 , p ) ) VAR VAR (  return r < 0 ? - ( r + 1 ) : r ; )  return r < 0 ? - ( r + 1 ) : r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( input . change ) != null ; )  return ( input . change ) != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( null , index , p , VAR_1 ) ; )  return new TYPE_1 ( null , index , p , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) )  TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = result . METHOD_2 ( ref ) ) INIT = result . METHOD_2 ( ref ) ) VAR VAR (  com.google.common.truth.Truth.assertThat ( message ( VAR_2 ) . METHOD_3 ( ) ) . METHOD_4 ( message ( VAR_2 ) ) . contains ( VAR_1 . METHOD_3 ( ) ) )  com.google.common.truth.Truth.assertThat ( message ( VAR_2 ) . METHOD_3 ( ) ) . METHOD_4 ( message ( VAR_2 ) ) . contains ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.AccountGroup ) RETURN TYPE_1.AccountGroup ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME file ) NAME file ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( view ) . METHOD_3 ( path ) . METHOD_4 ( ) , config ) ; )  return new TYPE_1 ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( view ) . METHOD_3 ( path ) . METHOD_4 ( ) , config ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c , msg , true ) )  METHOD_2 ( c , msg , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 , type , VAR_3 . METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 , type , VAR_3 . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3>> ) TYPE TYPE_1<TYPE_2<TYPE_3>> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( result ) )  METHOD_1 ( result ) (  METHOD_2 ( result ) )  METHOD_2 ( result ) (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  info . METHOD_1 ( ) )  info . METHOD_1 ( ) (  METHOD_2 ( info ) )  METHOD_2 ( info ) (  METHOD_3 ( info ) )  METHOD_3 ( info ) (  METHOD_4 ( info , base ) )  METHOD_4 ( info , base ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ( INIT = new TYPE_1 ( this , VAR_1 , VAR_2 ) ) INIT = new TYPE_1 ( this , VAR_1 , VAR_2 ) ) VAR VAR (  VAR_3 . add ( VAR_4 ) )  VAR_3 . add ( VAR_4 ) (  return ctx ; )  return ctx ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ( INIT = VAR_1 . getName ( ) ) INIT = VAR_1 . getName ( ) ) VAR VAR ( IF IF ( COND TYPE_2 . METHOD_2 ( ref ) ) COND TYPE_2 . METHOD_2 ( ref ) ( THEN THEN (  return TYPE_1 . METHOD_1 ( ref , VAR_1 ) ; )  return TYPE_1 . METHOD_1 ( ref , VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3.PatchSet> ) TYPE TYPE_2<TYPE_3.PatchSet> ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( a , ps , null ) )  METHOD_1 ( a , ps , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME notes ) NAME notes ( BLOCK BLOCK ( IF IF ( COND ( notes ) == null ) COND ( notes ) == null ( THEN THEN (  notes = VAR_1 . create ( change ( ) ) )  notes = VAR_1 . create ( change ( ) ) ) THEN THEN ) IF IF (  return notes ; )  return notes ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( token , new TYPE_2 ( base , TYPE_3 . patchSet ( id . getParentKey ( ) ) , id . get ( ) , VAR_1 , line ) ) )  TYPE_1 . display ( token , new TYPE_2 ( base , TYPE_3 . patchSet ( id . getParentKey ( ) ) , id . get ( ) , VAR_1 , line ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . get ( TYPE_4 . METHOD_4 ( VAR_1 ) ) )  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . get ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 ( repo ) )  VAR_1 = new TYPE_1 ( repo ) (  VAR_2 = new TYPE_2 ( null , null , null ) )  VAR_2 = new TYPE_2 ( null , null , null ) (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . patch ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) )  TYPE_1 . patch ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_2.Change ) TYPE TYPE_2.Change ( NAME change ) NAME change ( INIT = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) INIT = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) VAR VAR (  METHOD_5 ( METHOD_6 ( VAR_2 , VAR_3 ) ) )  METHOD_5 ( METHOD_6 ( VAR_2 , VAR_3 ) ) (  METHOD_7 ( change ) )  METHOD_7 ( change ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_2 ( ) ) (  org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME group ) NAME group ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_4 ( STRING_1 ) . id ( group . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) )  new TYPE_4 ( STRING_1 ) . id ( group . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3.ReceiveCommand> ) TYPE TYPE_2<TYPE_3.ReceiveCommand> ( NAME commands ) NAME commands ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( commands ) )  METHOD_2 ( commands ) (  METHOD_3 ( rp ) )  METHOD_3 ( rp ) (  METHOD_4 ( rp . METHOD_5 ( ) ) )  METHOD_4 ( rp . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( ) . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) ; )  return VAR_1 . get ( ) . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME ps ) NAME ps ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3.PatchSet> ) TYPE TYPE_2<TYPE_3.PatchSet> ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE java.util.Map<TYPE_4.Id,TYPE_2<TYPE_3.PatchSetApproval>> ) TYPE java.util.Map<TYPE_4.Id,TYPE_2<TYPE_3.PatchSetApproval>> ( NAME approvals ) NAME approvals ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , ps , approvals , false , null ) )  METHOD_1 ( VAR_1 , ps , approvals , false , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Account ) TYPE TYPE_2.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_1 . name = account . METHOD_2 ( ) )  VAR_1 . name = account . METHOD_2 ( ) (  VAR_1 . email = account . METHOD_3 ( ) )  VAR_1 . email = account . METHOD_3 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  c . METHOD_1 ( VAR_1 ) )  c . METHOD_1 ( VAR_1 ) (  TYPE_1 . METHOD_2 ( c ) )  TYPE_1 . METHOD_2 ( c ) (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . close ( ) )  VAR_2 . close ( ) (  VAR_3 . close ( ) )  VAR_3 . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , new TYPE_1 ( ) , null , null ) )  submit ( changeId , new TYPE_1 ( ) , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( user . METHOD_2 ( ) . METHOD_3 ( ) ) ; )  return VAR_1 . create ( user . METHOD_2 ( ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . changes ( ) . id ( changeId ) . get ( TYPE_2 . of ( VAR_2 ) ) . VAR_3 ; )  return VAR_1 . changes ( ) . id ( changeId ) . get ( TYPE_2 . of ( VAR_2 ) ) . VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return )  return (  ( ) )  ( ) (  - > )  - > (  VAR_1 . METHOD_2 ( ( ! ( VAR_1 . getValue ( ) ) ) , true ) )  VAR_1 . METHOD_2 ( ( ! ( VAR_1 . getValue ( ) ) ) , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  com.google.common.truth.Truth.assertThat ( log ( d ) ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( ) )  com.google.common.truth.Truth.assertThat ( log ( d ) ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) (  new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) )  new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) (  VAR_1 . METHOD_3 ( false ) )  VAR_1 . METHOD_3 ( false ) (  VAR_2 . METHOD_3 ( false ) )  VAR_2 . METHOD_3 ( false ) (  VAR_3 . METHOD_3 ( false ) )  VAR_3 . METHOD_3 ( false ) (  display ( result ) )  display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_1 class ) )  com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_1 class ) (  com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_2 class ) )  com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_2 class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) (  install ( new TYPE_1 ( ) ) )  install ( new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ( IN new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 } ) IN new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 } ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_9 , s ) )  TYPE_1 . METHOD_2 ( STRING_9 , s ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . METHOD_2 ( ) ) COND TYPE_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ( ELSE ELSE (  TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) )  TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  display ( null , null , null , false , VAR_1 , VAR_2 ) )  display ( null , null , null , false , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_1 , ref ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 , ref ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( METHOD_2 ( VAR_1 ) , VAR_2 ) )  VAR_3 . METHOD_1 ( METHOD_2 ( VAR_1 ) , VAR_2 ) (  log ( VAR_1 ) )  log ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId . getParentKey ( ) , java.lang.String . METHOD_3 ( psId . get ( ) ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId . getParentKey ( ) , java.lang.String . METHOD_3 ( psId . get ( ) ) ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) )  METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE char ) TYPE char ( NAME c ) NAME c ( IN TYPE_1 . METHOD_2 ( ) ) IN TYPE_1 . METHOD_2 ( ) ( BLOCK BLOCK (  METHOD_3 ( ( STRING_1 + c ) , TYPE_2 . METHOD_4 ( c ) ) )  METHOD_3 ( ( STRING_1 + c ) , TYPE_2 . METHOD_4 ( c ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == ( VAR_3 ) ) COND ( VAR_2 ) == ( VAR_3 ) ( THEN THEN (  return ( line ) - ( VAR_1 . line ) ; )  return ( line ) - ( VAR_1 . line ) ; ) THEN THEN ( ELSE ELSE (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_6 . METHOD_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; )  return TYPE_6 . METHOD_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , this ) ; )  throw new TYPE_2 ( STRING_1 , this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME user ) NAME user ( INIT = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ) VAR VAR (  return user ; )  return user ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 , c ) . METHOD_2 ( ) ; )  return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 , c ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( key ) ; )  return VAR_1 . get ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return branch . getName ( ) ; )  return branch . getName ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  METHOD_2 ( r . METHOD_3 ( ) ) )  METHOD_2 ( r . METHOD_3 ( ) ) ) THEN THEN ) IF IF (  display ( r ) )  display ( r ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) (  METHOD_3 ( 1 , VAR_4 ) )  METHOD_3 ( 1 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  cm . METHOD_2 ( TYPE_2 . create ( line ) ) )  cm . METHOD_2 ( TYPE_2 . create ( line ) ) (  cm . METHOD_3 ( TYPE_3 . METHOD_4 ( 0 , ( VAR_1 - ( FLOAT_1 * VAR_2 ) ) ) ) )  cm . METHOD_3 ( TYPE_3 . METHOD_4 ( 0 , ( VAR_1 - ( FLOAT_1 * VAR_2 ) ) ) ) (  cm . METHOD_5 ( ) )  cm . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME topic ) NAME topic ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . topic ( topic ) , TYPE_3 . METHOD_3 ( ) ) ) ; )  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . topic ( topic ) , TYPE_3 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) . METHOD_5 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) . METHOD_5 ( ) (  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_6 ( ) ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_6 ( ) ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ) TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , null , db , id ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , null , db , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( event ) )  VAR_1 . METHOD_2 ( event ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME index ) NAME index ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  index . apply ( change , new TYPE_2 ( ) ) )  index . apply ( change , new TYPE_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_1 , e ) ; )  throw new TYPE_1 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME diff ) NAME diff ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 . revision ( id ) . view ( STRING_1 ) . id ( path ) . view ( STRING_2 ) ) ; )  return new TYPE_1 ( TYPE_2 . revision ( id ) . view ( STRING_1 ) . id ( path ) . view ( STRING_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( cd . change ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) <= ( VAR_1 . METHOD_3 ( ) ) ; )  return ( cd . change ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) <= ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , getId ( ) ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ( THEN THEN (  branch = VAR_1 )  branch = VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) )  this . VAR_1 = VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.Account.Id> ( NAME reviewers ) NAME reviewers ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) ) ; )  return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.AccountGroup ) TYPE TYPE_2.AccountGroup ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( TYPE_1 . METHOD_2 ( group ) ) ; )  return METHOD_1 ( TYPE_1 . METHOD_2 ( group ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . changeId = changeId )  this . changeId = changeId ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 ) )  submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_3 ( ) ; )  return VAR_2 . METHOD_3 ( ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . close ( ) )  VAR_2 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  VAR_3 = TYPE_1 . METHOD_1 ( ) )  VAR_3 = TYPE_1 . METHOD_1 ( ) (  log . METHOD_2 ( ctx , VAR_4 , VAR_1 ) )  log . METHOD_2 ( ctx , VAR_4 , VAR_1 ) (  VAR_2 = true )  VAR_2 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . create ( TYPE_2 . METHOD_2 ( repo ) , METHOD_3 ( repo ) ) ; )  return TYPE_1 . create ( TYPE_2 . METHOD_2 ( repo ) , METHOD_3 ( repo ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( change , VAR_2 . create ( id ) ) ; )  return VAR_1 . METHOD_2 ( change , VAR_2 . create ( id ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change ) ; )  return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ) RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND in . METHOD_1 ( ) . equals ( psId ) ) COND in . METHOD_1 ( ) . equals ( psId ) ( THEN THEN (  return in ; )  return in ; ) THEN THEN ( ELSE ELSE (  return new com.google.gerrit.reviewdb.client . PatchSetApproval ( psId , in ) ; )  return new com.google.gerrit.reviewdb.client . PatchSetApproval ( psId , in ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) ) && ( ( METHOD_3 ( ) ) == ( VAR_1 ) ) ) COND ( METHOD_2 ( ) ) && ( ( METHOD_3 ( ) ) == ( VAR_1 ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , project , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , project , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME topic ) NAME topic ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( repo , null , null , null , null , topic ) ; )  return METHOD_2 ( repo , null , null , null , null , topic ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_1 ( false ) ) INIT = TYPE_1 . METHOD_1 ( false ) ) VAR VAR (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . close ( ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . close ( ) (  VAR_2 . METHOD_4 ( STRING_1 ) )  VAR_2 . METHOD_4 ( STRING_1 ) (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN PatchSet.Id ) RETURN PatchSet.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , ( VAR_1 . equals ( STRING_1 ) ? 0 : TYPE_1 . METHOD_2 ( VAR_1 ) ) ) ; )  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , ( VAR_1 . equals ( STRING_1 ) ? 0 : TYPE_1 . METHOD_2 ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ) COND ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ( THEN THEN (  VAR_1 = VAR_1 . METHOD_3 ( 0 , VAR_1 . METHOD_2 ( VAR_2 ) ) )  VAR_1 = VAR_1 . METHOD_3 ( 0 , VAR_1 . METHOD_2 ( VAR_2 ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_1 ( ) , VAR_1 ) ; )  return METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_1 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 . getName ( ) ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 . getName ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.extensions.registration.DynamicSet<TYPE_1> ) RETURN com.google.gerrit.extensions.registration.DynamicSet<TYPE_1> ( NAME get ) NAME get ( BLOCK BLOCK (  return new com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > ( TYPE_2 . METHOD_1 ( VAR_1 , type ) ) ; )  return new com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > ( TYPE_2 . METHOD_1 ( VAR_1 , type ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; )  return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  c . METHOD_2 ( ) )  c . METHOD_2 ( ) (  TYPE_2 . METHOD_3 ( c ) )  TYPE_2 . METHOD_3 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME add ) NAME add ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME to ) NAME to ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ! ( VAR_2 ) ) || ( VAR_3 . contains ( to ) ) ) COND ( ! ( VAR_2 ) ) || ( VAR_3 . contains ( to ) ) ( THEN THEN (  super . add ( VAR_1 , to ) )  super . add ( VAR_1 , to ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false ) ) )  bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) (  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) )  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND event instanceof TYPE_2 ) COND event instanceof TYPE_2 ( THEN THEN (  VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( event ) ) ) )  VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( event ) ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ! ( METHOD_2 ( VAR_1 , true ) ) ; )  return ! ( METHOD_2 ( VAR_1 , true ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) )  VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_3 . METHOD_1 ( ) )  VAR_3 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  VAR_3 . run ( ) )  VAR_3 . run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final native ) MODIFIER private static final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME t ) NAME t ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; )  return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2.ChangeInfo> ) RETURN TYPE_1<TYPE_2.ChangeInfo> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( info ) == null ) COND ( info ) == null ( THEN THEN (  info = new TYPE_1 < TYPE_2 . ChangeInfo > ( ) )  info = new TYPE_1 < TYPE_2 . ChangeInfo > ( ) ) THEN THEN ) IF IF (  return info ; )  return info ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; )  return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  index = new TYPE_1 ( VAR_1 ) )  index = new TYPE_1 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_2 . METHOD_2 ( index ) )  VAR_2 . METHOD_2 ( index ) (  VAR_3 = new TYPE_3 ( VAR_2 ) )  VAR_3 = new TYPE_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( TYPE_1 . METHOD_2 ( STRING_1 ) , STRING_2 ) )  assertEquals ( TYPE_1 . METHOD_2 ( STRING_1 ) , STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( 0 , VAR_1 , VAR_2 ) )  METHOD_2 ( 0 , VAR_1 , VAR_2 ) (  METHOD_3 ( 0 , VAR_1 , STRING_1 ) )  METHOD_3 ( 0 , VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . get ( ) . apply ( revision ) ; )  return VAR_1 . get ( ) . apply ( revision ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return java.util.Collections . METHOD_2 ( VAR_1 ) ; )  return java.util.Collections . METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return java.util.Collections . METHOD_3 ( ) ; )  return java.util.Collections . METHOD_3 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND value > 0 ) COND value > 0 ( THEN THEN (  return STRING_1 + value ; )  return STRING_1 + value ; ) THEN THEN ( ELSE ELSE (  return TYPE_1 . toString ( value ) ; )  return TYPE_1 . toString ( value ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . apply ( VAR_1 . METHOD_1 ( ) , path , VAR_3 ) )  VAR_2 . apply ( VAR_1 . METHOD_1 ( ) , path , VAR_3 ) (  return TYPE_1 . METHOD_2 ( ) ; )  return TYPE_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME git ) NAME git ( INIT = VAR_1 . METHOD_2 ( project ) ) INIT = VAR_1 . METHOD_2 ( project ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = git . METHOD_3 ( ) ) INIT = git . METHOD_3 ( ) ) VAR VAR (  return METHOD_1 ( VAR_2 ) ; )  return METHOD_1 ( VAR_2 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  git . close ( ) )  git . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . getName ( ) . METHOD_3 ( STRING_1 ) ) ; )  return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . getName ( ) . METHOD_3 ( STRING_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . error ( message ) )  VAR_1 . error ( message ) (  res . METHOD_2 ( status ) )  res . METHOD_2 ( status ) (  VAR_2 . METHOD_3 ( new TYPE_1 ( message ) , METHOD_4 ( ) ) )  VAR_2 . METHOD_3 ( new TYPE_1 ( message ) , METHOD_4 ( ) ) (  METHOD_4 ( ) . METHOD_5 ( ) )  METHOD_4 ( ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2<TYPE_1> ) TYPE TYPE_2<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_1 ( 1 ) . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_1 ( 1 ) . METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( result ) )  VAR_1 . METHOD_3 ( result ) (  VAR_2 . onSuccess ( VAR_1 ) )  VAR_2 . onSuccess ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME index ) NAME index ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  index . apply ( account , new TYPE_2 ( ) ) )  index . apply ( account , new TYPE_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException|com.google.gwtorm.server.OrmException ) TYPE java.io.IOException|com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_1 , e ) ; )  throw new TYPE_1 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) (  VAR_2 . METHOD_2 ( STRING_1 ) )  VAR_2 . METHOD_2 ( STRING_1 ) (  VAR_3 . METHOD_2 ( STRING_1 ) )  VAR_3 . METHOD_2 ( STRING_1 ) (  display ( result ) )  display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) (  VAR_3 . METHOD_3 ( VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_4 ) (  VAR_5 . METHOD_3 ( true ) )  VAR_5 . METHOD_3 ( true ) (  VAR_6 . METHOD_3 ( true ) )  VAR_6 . METHOD_3 ( true ) (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_1 ( req , VAR_2 ) ) INIT = TYPE_2 . METHOD_1 ( req , VAR_2 ) ) VAR VAR (  return VAR_3 ? VAR_1 . METHOD_2 ( VAR_4 ) : VAR_1 ; )  return VAR_3 ? VAR_1 . METHOD_2 ( VAR_4 ) : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . onSuccess ( result . METHOD_1 ( ) ) )  VAR_1 . onSuccess ( result . METHOD_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change . getProject ( ) , change.getId ( ) ) ; )  return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change . getProject ( ) , change.getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . append ( CHAR_1 ) )  VAR_1 . append ( CHAR_1 ) (  VAR_1 . append ( VAR_2 ) )  VAR_1 . append ( VAR_2 ) (  VAR_1 . append ( CHAR_1 ) )  VAR_1 . append ( CHAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( ) ; )  return TYPE_2 . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Account.Id ) RETURN Account.Id ( NAME getAccountId ) NAME getAccountId ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME u ) NAME u ( INIT = VAR_1 . get ( ) ) INIT = VAR_1 . get ( ) ) VAR VAR ( IF IF ( COND u . METHOD_1 ( ) ) COND u . METHOD_1 ( ) ( THEN THEN (  return ( ( TYPE_2 ) ( u ) ) . getAccountId ( ) ; )  return ( ( TYPE_2 ) ( u ) ) . getAccountId ( ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == ( VAR_3 ) ) COND ( VAR_2 ) == ( VAR_3 ) ( THEN THEN (  METHOD_2 ( ( ! VAR_1 ) ) )  METHOD_2 ( ( ! VAR_1 ) ) ) THEN THEN ( ELSE ELSE ( IF IF ( COND ( VAR_2 ) == ( VAR_4 ) ) COND ( VAR_2 ) == ( VAR_4 ) ( THEN THEN (  METHOD_3 ( ( ! VAR_1 ) ) )  METHOD_3 ( ( ! VAR_1 ) ) ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND user != null ) COND user != null ( THEN THEN (  VAR_1 . METHOD_2 ( user . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( user . METHOD_3 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( ) ) ; )  return new TYPE_1 ( METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( db . patchSets ( ) . METHOD_3 ( changeId ) . METHOD_4 ( ) ) )  VAR_1 . METHOD_2 ( db . patchSets ( ) . METHOD_3 ( changeId ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . close ( ) )  VAR_2 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( p ) . changes ( ) ; )  return VAR_1 . METHOD_1 ( p ) . changes ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new com.google.gwtorm.server.OrmException ( e ) ; )  throw new com.google.gwtorm.server.OrmException ( e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  METHOD_1 ( ) )  METHOD_1 ( ) (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( id ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( id ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_1 ( ) . METHOD_2 ( ) ) INIT = METHOD_1 ( ) . METHOD_2 ( ) ) VAR VAR (  return VAR_2 . METHOD_3 ( line ) . METHOD_4 ( VAR_1 ) ; )  return VAR_2 . METHOD_3 ( line ) . METHOD_4 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( null ) ) INIT = TYPE_1 . METHOD_2 ( null ) ) VAR VAR (  VAR_1 . METHOD_3 ( CHAR_1 ) )  VAR_1 . METHOD_3 ( CHAR_1 ) (  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) )  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE TYPE_1.PatchSet ) TYPE TYPE_1.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_1 , null , false ) , TYPE_3 . branch ( STRING_2 , null , false ) ) , METHOD_3 ( ) . get ( ) ) )  TYPE_1 . METHOD_2 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_1 , null , false ) , TYPE_3 . branch ( STRING_2 , null , false ) ) , METHOD_3 ( ) . get ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME to ) NAME to ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . add ( git , VAR_1 , VAR_2 ) )  TYPE_4 . add ( git , VAR_1 , VAR_2 ) (  return METHOD_1 ( git , ref ) ; )  return METHOD_1 ( git , ref ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , VAR_2 , true ) ; )  return METHOD_1 ( VAR_1 , VAR_2 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , true , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , true , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( config , false , false ) ) )  bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( config , false , false ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReceiveCommand ) TYPE TYPE_1.ReceiveCommand ( NAME cmd ) NAME cmd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( cmd ) )  METHOD_2 ( ) . METHOD_3 ( cmd ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cm ) NAME cm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME group ) NAME group ( INIT = METHOD_2 ( cm ) ) INIT = METHOD_2 ( cm ) ) VAR VAR ( IF IF ( COND group != null ) COND group != null ( THEN THEN (  group . METHOD_3 ( ) )  group . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_3 ( ) ; } } } ; )  return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group != null ) { group . METHOD_3 ( ) ; } } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_1 ( value , null ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_1 ( value , null ) ; ) THEN THEN ( ELSE ELSE (  return TYPE_2 . METHOD_3 ( VAR_1 , value ) ; )  return TYPE_2 . METHOD_3 ( VAR_1 , value ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_2 . METHOD_2 ( STRING_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME n ) NAME n ( INIT = VAR_1 . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_3 ( ) ) VAR VAR (  METHOD_4 ( VAR_1 , n ) )  METHOD_4 ( VAR_1 , n ) (  assertEquals ( STRING_2 , n . METHOD_5 ( ) ) )  assertEquals ( STRING_2 , n . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  this . run ( ) )  this . run ( ) ) BLOCK BLOCK ( FINALLY FINALLY (  METHOD_3 ( ) )  METHOD_3 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Status ) TYPE TYPE_2.Status ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , false , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , false , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  user = VAR_3 . create ( TYPE_2 . of ( db ) , VAR_2 ) )  user = VAR_3 . create ( TYPE_2 . of ( db ) , VAR_2 ) (  return user ; )  return user ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME group ) NAME group ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( STRING_1 ) . id ( group . get ( ) ) ; )  return new TYPE_1 ( STRING_1 ) . id ( group . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME ctl ) NAME ctl ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) )  METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( id , true ) )  METHOD_2 ( id , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = url )  this . VAR_1 = url (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( email != null ) && ( ! ( email . isEmpty ( ) ) ) ) COND ( email != null ) && ( ! ( email . isEmpty ( ) ) ) ( THEN THEN (  VAR_1 . METHOD_2 ( email ) )  VAR_1 . METHOD_2 ( email ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null ) )  TYPE_1 . METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( account . getId ( ) ) . METHOD_2 ( ) . METHOD_3 ( ) ; )  return VAR_1 . create ( account . getId ( ) ) . METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME err ) NAME err ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . error ( err ) )  VAR_2 . error ( err ) (  return TYPE_2 . METHOD_2 ( ) ; )  return TYPE_2 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return TYPE_2 . METHOD_3 ( err ) ; )  return TYPE_2 . METHOD_3 ( err ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ) COND ( VAR_1 . METHOD_2 ( VAR_2 ) ) >= 0 ( THEN THEN (  VAR_1 = VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) + 1 ) ) )  VAR_1 = VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) + 1 ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME close ) NAME close ( BLOCK BLOCK (  VAR_1 . close ( ) )  VAR_1 . close ( ) (  rw . close ( ) )  rw . close ( ) (  repo . close ( ) )  repo . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  index . close ( ) )  index . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) ) )  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_3 class ) )  METHOD_2 ( ) . to ( VAR_3 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME i ) NAME i ( IN METHOD_2 ( ) ) IN METHOD_2 ( ) ( BLOCK BLOCK (  i . delete ( id ) )  i . delete ( id ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  METHOD_3 ( id ) )  METHOD_3 ( id ) (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . change ( id ) . view ( STRING_1 ) . delete ( VAR_1 ) )  TYPE_3 . change ( id ) . view ( STRING_1 ) . delete ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 == ( VAR_2 ) ) && ( ( base ) == null ) ? VAR_3 : VAR_4 ; )  return ( VAR_1 == ( VAR_2 ) ) && ( ( base ) == null ) ? VAR_3 : VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME rsrc ) NAME rsrc ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return rsrc . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_4 : : new ) ; )  return rsrc . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_4 : : new ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ) RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctl ) NAME ctl ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; )  return new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Factory ) TYPE TYPE_1.Factory ( NAME factory ) NAME factory ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> ( NAME schema ) NAME schema ( INIT = ( ( VAR_2 ) != null ) ? TYPE_4 . get ( VAR_2 ) : TYPE_4 . METHOD_2 ( ) ) INIT = ( ( VAR_2 ) != null ) ? TYPE_4 . get ( VAR_2 ) : TYPE_4 . METHOD_2 ( ) ) VAR VAR (  return factory . create ( schema , base ) ; )  return factory . create ( schema , base ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) (  new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) . METHOD_4 ( ) )  new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.Gerrit ) RETURN TYPE_1.Gerrit ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( gerrit ) == null ) COND ( gerrit ) == null ( THEN THEN (  gerrit = new TYPE_1 . Gerrit ( METHOD_2 ( ) ) )  gerrit = new TYPE_1 . Gerrit ( METHOD_2 ( ) ) ) THEN THEN ) IF IF (  return gerrit ; )  return gerrit ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_1> ) TYPE TYPE_2<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_2 ) NAME VAR_2 ( INIT = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ) INIT = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ) VAR VAR (  java.util.Collections . METHOD_2 ( VAR_2 , VAR_3 ) )  java.util.Collections . METHOD_2 ( VAR_2 , VAR_3 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( this ) ; )  return new TYPE_1 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( VAR_2 , 0 ) ) INIT = new TYPE_1 ( VAR_2 , 0 ) ) VAR VAR (  METHOD_2 ( TYPE_2 . create ( 0 , 0 ) , VAR_1 . METHOD_3 ( 0 ) ) )  METHOD_2 ( TYPE_2 . create ( 0 , 0 ) , VAR_1 . METHOD_3 ( 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) )  VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . close ( ) )  VAR_2 . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND id . equals ( STRING_1 ) ) COND id . equals ( STRING_1 ) ( THEN THEN (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  throw new TYPE_4 ( id ) ; )  throw new TYPE_4 ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN org.eclipse.jgit.revwalk.RevCommit ) RETURN org.eclipse.jgit.revwalk.RevCommit ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( patchSet ) ) INIT = TYPE_1 . METHOD_2 ( patchSet ) ) VAR VAR ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME VAR_3 ) NAME VAR_3 ( INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) ) INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  return VAR_3 . parseCommit ( VAR_2 ) ; )  return VAR_3 . parseCommit ( VAR_2 ) ; ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) . isEqualTo ( new java.lang.String [ ] { } ) )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) . isEqualTo ( new java.lang.String [ ] { } ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  submit . METHOD_2 ( ( VAR_1 && ( VAR_2 ) ) ) )  submit . METHOD_2 ( ( VAR_1 && ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( true ) )  METHOD_1 ( true ) (  display ( result ) )  display ( result ) (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN PatchSet.Id ) RETURN PatchSet.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id . getParentKey ( ) , ( ( id . get ( ) ) + 1 ) ) ; )  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id . getParentKey ( ) , ( ( id . get ( ) ) + 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ( VAR VAR ( TYPE java.util.Set<TYPE_1> ) TYPE java.util.Set<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_3 . METHOD_1 ( query ) ) INIT = TYPE_3 . METHOD_1 ( query ) ) VAR VAR (  TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 ) (  VAR_3 . get ( VAR_2 ) )  VAR_3 . get ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . onSuccess ( TYPE_3 . METHOD_2 ( ) ) )  VAR_1 . onSuccess ( TYPE_3 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Project ) TYPE TYPE_2.Project ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_4> ) TYPE TYPE_3<TYPE_4> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) . METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; )  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN Change.Key ) RETURN Change.Key ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( VAR_1 ) )  METHOD_1 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( out ) ) INIT = METHOD_2 ( out ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 . display ( VAR_2 ) )  VAR_1 . display ( VAR_2 ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( name ) ? ( TYPE_1 . METHOD_3 ( name ) . METHOD_4 ( VAR_1 ) ) == 0 : false ; )  return TYPE_1 . METHOD_2 ( name ) ? ( TYPE_1 . METHOD_3 ( name ) . METHOD_4 ( VAR_1 ) ) == 0 : false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.lang.String.format ( STRING_1 , TYPE_2 . METHOD_2 ( VAR_1 , input . getChange ( ) ) ) ; )  return java.lang.String.format ( STRING_1 , TYPE_2 . METHOD_2 ( VAR_1 , input . getChange ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; )  return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( getChange ( ) ) ; )  return TYPE_1 . METHOD_1 ( getChange ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = super . get ( VAR_1 ) ) INIT = super . get ( VAR_1 ) ) VAR VAR (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.HttpServletResponse ) TYPE TYPE_1.HttpServletResponse ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 . HttpServletResponse class ) ) INIT = METHOD_2 ( VAR_2 . HttpServletResponse class ) ) VAR VAR (  servlet . METHOD_3 ( null , VAR_1 ) )  servlet . METHOD_3 ( null , VAR_1 ) (  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) )  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . refs ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( path ) ; )  return TYPE_3 . refs ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( path ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return STRING_1 + project ; )  return STRING_1 + project ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  VAR_2 = false )  VAR_2 = false (  METHOD_1 ( ) )  METHOD_1 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( - 1 ) ) )  METHOD_2 ( ( - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctl ) NAME ctl ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  db . METHOD_2 ( ) . insert ( METHOD_3 ( db , ctl , psId ) ) )  db . METHOD_2 ( ) . insert ( METHOD_3 ( db , ctl , psId ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( db , patchSet , null , false , false ) ; )  return METHOD_1 ( db , patchSet , null , false , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME u ) NAME u ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( u . METHOD_2 ( ref ) . METHOD_3 ( ) ) . METHOD_4 ( ( STRING_1 + ref ) ) . METHOD_5 ( ) )  com.google.common.truth.Truth.assertThat ( u . METHOD_2 ( ref ) . METHOD_3 ( ) ) . METHOD_4 ( ( STRING_1 + ref ) ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return getChange ( ) . getProject ( ) ; )  return getChange ( ) . getProject ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , true ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , true ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  org.junit.Assert . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) )  org.junit.Assert . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( config , STRING_1 , VAR_1 , false ) ; )  return METHOD_2 ( config , STRING_1 , VAR_1 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Account ) TYPE TYPE_1.Account ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND result != null ) COND result != null ( THEN THEN (  TYPE_2 . METHOD_1 ( result ) )  TYPE_2 . METHOD_1 ( result ) ) THEN THEN ( ELSE ELSE (  TYPE_3 . METHOD_2 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_1 ) (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) ELSE ELSE ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME id ) NAME id ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return id != null ? TYPE_2 . format ( id ) : STRING_1 ; )  return id != null ? TYPE_2 . format ( id ) : STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! VAR_1 ) COND ! VAR_1 ( THEN THEN (  return ( ( TYPE_1 < TYPE_2 > ) ( VAR_2 . METHOD_1 ( change ) ) ) ; )  return ( ( TYPE_1 < TYPE_2 > ) ( VAR_2 . METHOD_1 ( change ) ) ) ; ) THEN THEN ) IF IF (  return TYPE_4 . METHOD_2 ( null ) ; )  return TYPE_4 . METHOD_2 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_1> ) TYPE java.util.Map<java.lang.String,TYPE_1> ( NAME refs ) NAME refs ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( refs , false ) ; )  return METHOD_1 ( refs , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . edit ( id ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) )  TYPE_3 . edit ( id ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( ) . METHOD_2 ( ) )  VAR_1 = new TYPE_1 ( ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( ) . id ( group ) . METHOD_3 ( ) . isEmpty ( ) ) )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( ) . id ( group ) . METHOD_3 ( ) . isEmpty ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . changes ( ) . id ( changeId ) . revision ( ps . getId ( ) . get ( ) ) . delete ( ) )  VAR_1 . changes ( ) . id ( changeId ) . revision ( ps . getId ( ) . get ( ) ) . delete ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) (  bind ( VAR_3 class ) . METHOD_2 ( user ) )  bind ( VAR_3 class ) . METHOD_2 ( user ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . email = email )  this . email = email (  this . VAR_1 = METHOD_2 ( email ) )  this . VAR_1 = METHOD_2 ( email ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  METHOD_3 ( VAR_3 , VAR_4 ) )  METHOD_3 ( VAR_3 , VAR_4 ) (  METHOD_4 ( VAR_1 . changeId , VAR_5 , VAR_6 ) )  METHOD_4 ( VAR_1 . changeId , VAR_5 , VAR_6 ) (  assertThat ( VAR_7 ) . METHOD_5 ( ) )  assertThat ( VAR_7 ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME revision ) NAME revision ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = new TYPE_2 ( info . METHOD_2 ( ) , info . project ( ) , info . revision ( revision ) , VAR_2 , VAR_3 , VAR_4 ) )  VAR_1 = new TYPE_2 ( info . METHOD_2 ( ) , info . project ( ) , info . revision ( revision ) , VAR_2 , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ( INIT = METHOD_2 ( ) . get ( VAR_1 . get ( ) ) ) INIT = METHOD_2 ( ) . get ( VAR_1 . get ( ) ) ) VAR VAR (  return t != null ? t : METHOD_1 ( ) . get ( VAR_1 . get ( ) . METHOD_3 ( ) ) ; )  return t != null ? t : METHOD_1 ( ) . get ( VAR_1 . get ( ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  group ( STRING_1 ) )  group ( STRING_1 ) (  METHOD_2 ( STRING_2 ) . METHOD_3 ( ) )  METHOD_2 ( STRING_2 ) . METHOD_3 ( ) (  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_2 ) . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_2 ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<com.google.gerrit.reviewdb.client.Change.Id> ) RETURN java.util.Set<com.google.gerrit.reviewdb.client.Change.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.util.List<TYPE_1.ChangeInfo> ) RETURN java.util.List<TYPE_1.ChangeInfo> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( ) ) INIT = VAR_4 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_3 != null ) COND VAR_3 != null ( THEN THEN (  return METHOD_3 ( VAR_1 ) ; )  return METHOD_3 ( VAR_1 ) ; ) THEN THEN ) IF IF (  return METHOD_4 ( VAR_1 , VAR_2 ) ; )  return METHOD_4 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( STRING_1 , VAR_1 , VAR_2 ) ; )  return METHOD_1 ( STRING_1 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME group ) NAME group ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( group ) ) COND METHOD_2 ( group ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Factory ) TYPE TYPE_1.Factory ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( branch ) ) COND METHOD_2 ( branch ) ( THEN THEN (  METHOD_3 ( VAR_1 , branch ) )  METHOD_3 ( VAR_1 , branch ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; )  return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1.Id ) RETURN TYPE_1.Id ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME r ) NAME r ( INIT = new TYPE_1 . Id ( ) ) INIT = new TYPE_1 . Id ( ) ) VAR VAR (  r . METHOD_2 ( VAR_1 ) )  r . METHOD_2 ( VAR_1 ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME topic ) NAME topic ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . query ( VAR_1 . get ( ) ) . METHOD_1 ( topic ) ; )  return TYPE_1 . query ( VAR_1 . get ( ) ) . METHOD_1 ( topic ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . get ( ) . apply ( change , in ) )  VAR_1 . get ( ) . apply ( change , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|TYPE_3|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|TYPE_3|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME rsp ) NAME rsp ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( req , rsp ) )  TYPE_3 . METHOD_2 ( req , rsp ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 . getValue ( VAR_2 . METHOD_4 ( ) ) ) ) )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 . getValue ( VAR_2 . METHOD_4 ( ) ) ) ) (  view . METHOD_5 ( ) )  view . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . create ( VAR_1 , db , repo , rw , VAR_4 , VAR_5 , VAR_2 , METHOD_2 ( VAR_6 ) , VAR_7 ) ; )  return VAR_3 . create ( VAR_1 , db , repo , rw , VAR_4 , VAR_5 , VAR_2 , METHOD_2 ( VAR_6 ) , VAR_7 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3.PatchSet> ) TYPE TYPE_2<TYPE_3.PatchSet> ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( a , ps , null , false , null ) )  METHOD_1 ( a , ps , null , false , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_2 . METHOD_2 ( ) ) && ( VAR_1 . get ( ) . METHOD_3 ( VAR_3 ) ) ; )  return ( VAR_2 . METHOD_2 ( ) ) && ( VAR_1 . get ( ) . METHOD_3 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( 0 ) ) INIT = new TYPE_1 ( 0 ) ) VAR VAR (  assertEquals ( 0 , p . METHOD_2 ( ) ) )  assertEquals ( 0 , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , account , TYPE_3 . of ( ) , TYPE_3 . of ( ) , new TYPE_4 < > ( ) ) ; )  return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , account , TYPE_3 . of ( ) , TYPE_3 . of ( ) , new TYPE_4 < > ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) )  VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) (  METHOD_2 ( VAR_1 . get ( ) ) )  METHOD_2 ( VAR_1 . get ( ) ) (  VAR_2 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 ) )  VAR_2 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 ) (  METHOD_2 ( VAR_2 . get ( ) ) )  METHOD_2 ( VAR_2 . get ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ( INIT = new TYPE_1 ( project , ref , VAR_1 ) ) INIT = new TYPE_1 ( project , ref , VAR_1 ) ) VAR VAR (  METHOD_2 ( project , ref , event ) )  METHOD_2 ( project , ref , event ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3[] ) TYPE TYPE_3[] ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( ) ) INIT = VAR_4 . METHOD_2 ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME m ) NAME m ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , m , VAR_2 ) )  METHOD_3 ( VAR_1 , m , VAR_2 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_2 ) , VAR_1 ) ) ; )  return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_2 ) , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cm ) NAME cm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND cm . METHOD_2 ( ) ) COND cm . METHOD_2 ( ) ( THEN THEN ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = cm . METHOD_3 ( ) ) INIT = cm . METHOD_3 ( ) ) VAR VAR (  cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) ) )  cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) ) (  cm . METHOD_6 ( null ) )  cm . METHOD_6 ( null ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME add ) NAME add ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . put ( VAR_3 , VAR_1 ) )  VAR_2 . put ( VAR_3 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . get ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ) INIT = VAR_1 . get ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return get . get ( ) . apply ( VAR_1 ) ; )  return get . get ( ) . apply ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( event . getValue ( ) ) )  TYPE_2 . METHOD_2 ( event . getValue ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME commit ) NAME commit ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( commit ) . view ( VAR_1 ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( commit ) . view ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return input . getProject ( ) . METHOD_1 ( ) . equals ( rsrc . METHOD_1 ( ) ) ; )  return input . getProject ( ) . METHOD_1 ( ) . equals ( rsrc . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final native ) MODIFIER private static final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( cd , false ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( cd , false ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME name ) NAME name ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( VAR_1 , VAR_2 , name . METHOD_1 ( VAR_3 ) ) ; )  return new TYPE_3 ( VAR_1 , VAR_2 , name . METHOD_1 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( STRING_1 + ( VAR_1 ) ) + STRING_2 ; )  return ( STRING_1 + ( VAR_1 ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( 1 ) )  METHOD_2 ( 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( ) , VAR_1 , walk , VAR_2 ) ; )  return new TYPE_1 ( METHOD_2 ( ) , VAR_1 , walk , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) (  METHOD_4 ( VAR_2 ) )  METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) )  TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 , STRING_4 ) ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 , STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( ) ; )  return new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , java.lang.String . METHOD_3 ( revision . get ( ) ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , java.lang.String . METHOD_3 ( revision . get ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( ctl . getId ( ) ) ; )  return TYPE_1 . METHOD_1 ( ctl . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . name = name )  this . name = name ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( getRefName ( ) ) ) ) . METHOD_3 ( VAR_2 ) ) && ( METHOD_4 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( getRefName ( ) ) ) ) . METHOD_3 ( VAR_2 ) ) && ( METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  METHOD_3 ( in , METHOD_4 ( in ) ) )  METHOD_3 ( in , METHOD_4 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( row ) )  METHOD_2 ( row ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_2 , VAR_3 ) )  METHOD_3 ( VAR_2 , VAR_3 ) (  VAR_2 = null )  VAR_2 = null (  VAR_3 = null )  VAR_3 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; )  return TYPE_3 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  info . METHOD_1 ( ) )  info . METHOD_1 ( ) (  METHOD_2 ( info , base ) )  METHOD_2 ( info , base ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( VAR_3 , account . getId ( ) ) ) INIT = VAR_2 . create ( VAR_3 , account . getId ( ) ) ) VAR VAR (  return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; )  return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( ( ( ! ( rsrc . METHOD_5 ( ) ) ) && ( METHOD_6 ( rsrc ) ) ) ) ; )  return new TYPE_3 ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( ( ( ! ( rsrc . METHOD_5 ( ) ) ) && ( METHOD_6 ( rsrc ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME change ) NAME change ( INIT = VAR_1 . get ( ) ) INIT = VAR_1 . get ( ) ) VAR VAR ( IF IF ( COND ! ( VAR_2 . METHOD_2 ( change ) ) ) COND ! ( VAR_2 . METHOD_2 ( change ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( change ) )  METHOD_3 ( change ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . get ( ) . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . get ( ) . METHOD_3 ( STRING_2 ) ) ; )  return ( VAR_1 . get ( ) . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . get ( ) . METHOD_3 ( STRING_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 , TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_4 ( s ) ) ) )  VAR_1 . METHOD_2 ( STRING_1 , TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_4 ( s ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 == null ? STRING_1 : VAR_1 ; )  return VAR_1 == null ? STRING_1 : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME url ) NAME url ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( changeId , java.lang.String . METHOD_2 ( r . METHOD_3 ( ) ) ) ; )  return TYPE_2 . METHOD_1 ( changeId , java.lang.String . METHOD_2 ( r . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return create ( VAR_1 , VAR_2 . create ( db , change ) ) ; )  return create ( VAR_1 , VAR_2 . create ( db , change ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME VAR_2 ) NAME VAR_2 ( INIT = getProject ( ) . METHOD_2 ( ) ) INIT = getProject ( ) . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  return VAR_4 . get ( VAR_2 ) ; )  return VAR_4 . get ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME label ) NAME label ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = TYPE_3 . METHOD_2 ( ) )  VAR_2 = TYPE_3 . METHOD_2 ( ) ) THEN THEN ) IF IF (  VAR_2 . add ( VAR_1 ) )  VAR_2 . add ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new java.lang.String [ 0 ] ; )  return new java.lang.String [ 0 ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 (  VAR_1 = java.util.Collections . METHOD_2 ( STRING_2 ) )  VAR_1 = java.util.Collections . METHOD_2 ( STRING_2 ) (  METHOD_3 ( in , VAR_2 class ) )  METHOD_3 ( in , VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND 0 <= VAR_1 ) COND 0 <= VAR_1 ( THEN THEN (  return STRING_1 + VAR_1 ; )  return STRING_1 + VAR_1 ; ) THEN THEN ( ELSE ELSE (  return java.lang.String . METHOD_2 ( VAR_1 ) ; )  return java.lang.String . METHOD_2 ( VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_5 ( args . db , VAR_2 , VAR_3 , VAR_1 ) ; )  return new TYPE_5 ( args . db , VAR_2 , VAR_3 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Account ) RETURN TYPE_1.Account ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return db . METHOD_1 ( ) . METHOD_2 ( TYPE_3 . getAccountId ( ) ) ; )  return db . METHOD_1 ( ) . METHOD_2 ( TYPE_3 . getAccountId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND message . getValue ( ) . METHOD_2 ( STRING_1 ) ) COND message . getValue ( ) . METHOD_2 ( STRING_1 ) ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  r . run ( ) )  r . run ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null (  VAR_2 = null )  VAR_2 = null (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . info ( STRING_1 ) )  VAR_1 . info ( STRING_1 ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_3 . delete ( ) )  VAR_3 . delete ( ) ) THEN THEN ) IF IF (  VAR_4 . METHOD_1 ( ) )  VAR_4 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,java.util.List<TYPE_1>> ) RETURN java.util.Map<java.lang.String,java.util.List<TYPE_1>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } . METHOD_3 ( ) ) ; )  return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME query ) NAME query ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_4> ) TYPE TYPE_3<TYPE_4> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_4 . METHOD_1 ( query ) ) INIT = TYPE_4 . METHOD_1 ( query ) ) VAR VAR (  TYPE_4 . METHOD_2 ( VAR_3 , VAR_1 ) )  TYPE_4 . METHOD_2 ( VAR_3 , VAR_1 ) (  VAR_3 . get ( VAR_2 ) )  VAR_3 . get ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; )  return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , java.lang.String . METHOD_2 ( line ) , VAR_3 . METHOD_3 ( ) ) )  METHOD_1 ( VAR_1 , VAR_2 , java.lang.String . METHOD_2 ( line ) , VAR_3 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) && ( METHOD_4 ( ) . getProject ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) && ( METHOD_4 ( ) . getProject ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 . ProjectConfig ( VAR_2 ) )  VAR_1 = new TYPE_1 . ProjectConfig ( VAR_2 ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  util . add ( VAR_1 ) )  util . add ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME token ) NAME token ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND token . METHOD_2 ( VAR_1 ) ) COND token . METHOD_2 ( VAR_1 ) ( THEN THEN (  VAR_2 = VAR_1 . length ( ) )  VAR_2 = VAR_1 . length ( ) (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME patchSet ) NAME patchSet ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( db , patchSet , null ) ; )  return METHOD_1 ( db , patchSet , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 ( false ) )  VAR_1 = new TYPE_1 ( false ) (  add ( VAR_1 ) )  add ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( ( ( STRING_1 + ( VAR_2 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( ( ( STRING_1 + ( VAR_2 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND change . getStatus ( ) . METHOD_1 ( ) ) COND change . getStatus ( ) . METHOD_1 ( ) ( THEN THEN (  change . METHOD_2 ( ) )  change . METHOD_2 ( ) (  change . METHOD_3 ( null ) )  change . METHOD_3 ( null ) (  return change ; )  return change ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) . to ( VAR_1 class ) )  METHOD_2 ( ) . to ( VAR_1 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) != ( VAR_2 ) ; )  return ( METHOD_2 ( VAR_1 ) ) != ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ( INIT = METHOD_2 ( path , STRING_1 , VAR_1 ) ) INIT = METHOD_2 ( path , STRING_1 , VAR_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_2 , res . METHOD_3 ( VAR_2 ) ) )  org.junit.Assert.assertEquals ( STRING_2 , res . METHOD_3 ( VAR_2 ) ) (  return res ; )  return res ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . create ( VAR_2 class . METHOD_1 ( ) ) . METHOD_2 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; )  return TYPE_2 . create ( VAR_2 class . METHOD_1 ( ) ) . METHOD_2 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( getKey ( null , METHOD_2 ( changeId ) ) ) . METHOD_3 ( ) ; )  return VAR_1 . get ( getKey ( null , METHOD_2 ( changeId ) ) ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( db ) )  TYPE_1 . METHOD_2 ( db ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) )  VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN org.eclipse.jgit.revwalk.RevCommit ) RETURN org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ( BLOCK BLOCK (  return commit ( TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) . create ( change . getProject ( ) ) ) ; )  return commit ( TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) . create ( change . getProject ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . create ( ) . insert ( db , TYPE_1 . METHOD_2 ( VAR_1 , id , user . getAccountId ( ) , email ) ) )  VAR_2 . create ( ) . insert ( db , TYPE_1 . METHOD_2 ( VAR_1 , id , user . getAccountId ( ) , email ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . in ( VAR_2 class ) )  bind ( VAR_1 class ) . in ( VAR_2 class ) (  bind ( VAR_3 class ) )  bind ( VAR_3 class ) (  bind ( VAR_4 class ) . in ( VAR_5 ) )  bind ( VAR_4 class ) . in ( VAR_5 ) (  bind ( VAR_6 class ) . in ( VAR_2 class ) )  bind ( VAR_6 class ) . in ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( row ) )  super . METHOD_1 ( row ) (  VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) )  VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . put ( TYPE_2 . id ( VAR_1 ) , VAR_2 ) )  VAR_3 . put ( TYPE_2 . id ( VAR_1 ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( false ) )  METHOD_2 ( false ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  set ( VAR_1 , VAR_2 , VAR_3 ) )  set ( VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 . project ) ; )  return new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 . project ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( p ) )  METHOD_2 ( p ) ( VAR VAR ( TYPE TYPE_3.Result ) TYPE TYPE_3.Result ( NAME r ) NAME r ( INIT = METHOD_3 ( STRING_1 ) ) INIT = METHOD_3 ( STRING_1 ) ) VAR VAR (  r . METHOD_4 ( ) )  r . METHOD_4 ( ) (  r . METHOD_5 ( VAR_1 , null ) )  r . METHOD_5 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_3 ( VAR_2 ) ; )  throw new TYPE_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_2> ) TYPE java.util.Map<java.lang.String,TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = new TYPE_3 ( ) )  VAR_3 = new TYPE_3 ( ) (  VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_4 , null , VAR_5 , VAR_2 , false ) ) )  VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_4 , null , VAR_5 , VAR_2 , false ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) ) )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_4 ) ) , METHOD_2 ( STRING_1 ) ) )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_4 ) ) , METHOD_2 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = new TYPE_1 ( VAR_1 , VAR_2 ) ) INIT = new TYPE_1 ( VAR_1 , VAR_2 ) ) VAR VAR (  r . METHOD_2 ( false ) )  r . METHOD_2 ( false ) (  r . METHOD_3 ( false ) )  r . METHOD_3 ( false ) (  VAR_3 . add ( r ) )  VAR_3 . add ( r ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME branch ) NAME branch ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( branch ) ) COND METHOD_2 ( branch ) ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( branch ) )  METHOD_3 ( branch ) ) BLOCK BLOCK ( FINALLY FINALLY (  METHOD_4 ( branch ) )  METHOD_4 ( branch ) ) FINALLY FINALLY ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( projectName , true ) )  VAR_1 = METHOD_2 ( projectName , true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; )  return ( METHOD_2 ( ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 . METHOD_1 ( ) ) ) COND ! ( VAR_1 . METHOD_1 ( ) ) ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) (  VAR_4 . METHOD_2 ( VAR_3 ) )  VAR_4 . METHOD_2 ( VAR_3 ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  VAR_4 . METHOD_3 ( ) )  VAR_4 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Id ) RETURN TYPE_1.Id ( NAME getKey ) NAME getKey ( BLOCK BLOCK (  return changeId ; )  return changeId ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ) RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( projectName ) , TYPE_3 . METHOD_3 ( ) ) ) ; )  return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( projectName ) , TYPE_3 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME git ) NAME git ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ) INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ) VAR VAR (  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; )  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c . notes , msg , true ) )  METHOD_2 ( c . notes , msg , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = user . METHOD_2 ( ) ) INIT = user . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND TYPE_3 . METHOD_3 ( VAR_1 ) ) COND TYPE_3 . METHOD_3 ( VAR_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return VAR_3 . get ( VAR_1 ) ; )  return VAR_3 . get ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( VAR_2 , result . METHOD_1 ( ) ) )  VAR_1 . display ( VAR_2 , result . METHOD_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME log ) NAME log ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME error ) NAME error ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log . error ( ( message + ( error . getMessage ( ) ) ) ) )  log . error ( ( message + ( error . getMessage ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_1 ( ) { public void error ( TYPE_3 error ) { log . error ( ( message + ( error . getMessage ( ) ) ) ) ; } } ; )  return new TYPE_1 ( ) { public void error ( TYPE_3 error ) { log . error ( ( message + ( error . getMessage ( ) ) ) ) ; } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME message ) NAME message ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( msg ) )  VAR_1 . METHOD_1 ( msg ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ( INIT = METHOD_2 ( admin ) ) INIT = METHOD_2 ( admin ) ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME reviewers ) NAME reviewers ( INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) INIT = METHOD_3 ( changeId , STRING_1 , INT_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) )  org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( info ) != null ? new TYPE_2 ( info ) : new TYPE_2 ( id ) ; )  return ( info ) != null ? new TYPE_2 ( info ) : new TYPE_2 ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.lib.Repository ) RETURN org.eclipse.jgit.lib.Repository ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return repo ; )  return repo ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . index ( rsrc . getChange ( ) ) . get ( ) )  VAR_1 . index ( rsrc . getChange ( ) ) . get ( ) (  return TYPE_6 . METHOD_1 ( ) ; )  return TYPE_6 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; )  return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_2 . METHOD_3 ( this ) )  VAR_2 . METHOD_3 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  input . METHOD_2 ( false ) )  input . METHOD_2 ( false ) (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) (  TYPE_2 . METHOD_3 ( VAR_2 , false ) )  TYPE_2 . METHOD_3 ( VAR_2 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ctx . METHOD_2 ( ps . getId ( ) ) . METHOD_3 ( magicBranch . topic ) )  ctx . METHOD_2 ( ps . getId ( ) ) . METHOD_3 ( magicBranch . topic ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3.NameKey ) TYPE TYPE_3.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( repo , VAR_1 . get ( ) ) ; )  return TYPE_4 . METHOD_2 ( repo , VAR_1 . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ReceiveCommits ) NAME ReceiveCommits ) VAR VAR ( VAR VAR ( TYPE java.util.Set ) TYPE java.util.Set ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR (  on ( VAR_3 ) )  on ( VAR_3 ) (  VAR_4 = VAR_1 )  VAR_4 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME label ) NAME label ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != 0 ) COND VAR_1 != 0 ( THEN THEN (  return TYPE_3 . METHOD_2 ( args , label , VAR_1 ) ; )  return TYPE_3 . METHOD_2 ( args , label , VAR_1 ) ; ) THEN THEN ) IF IF (  return TYPE_3 . METHOD_3 ( args , label ) ; )  return TYPE_3 . METHOD_3 ( args , label ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  event . METHOD_2 ( ) )  event . METHOD_2 ( ) ( IF IF ( COND ( event . METHOD_3 ( ) ) == ( VAR_1 ) ) COND ( event . METHOD_3 ( ) ) == ( VAR_1 ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME res ) NAME res ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  servlet . METHOD_2 ( req , res ) )  servlet . METHOD_2 ( req , res ) (  org.junit.Assert.assertEquals ( VAR_1 , res . getStatus ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , res . getStatus ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) (  VAR_1 = TYPE_2 . METHOD_3 ( VAR_1 ) )  VAR_1 = TYPE_2 . METHOD_3 ( VAR_1 ) (  return VAR_1 . METHOD_4 ( ) ; )  return VAR_1 . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( short ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , 1 ) ) ) ; )  return ( ( short ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , 1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME insert ) NAME insert ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( null ) ; )  return TYPE_3 . METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( line ) )  VAR_1 . METHOD_2 ( line ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME commit ) NAME commit ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( id ) ; )  return new TYPE_2 ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 , VAR_5 ) (  assertThat ( VAR_6 ) . METHOD_4 ( ) )  assertThat ( VAR_6 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND ! ( VAR_1 . isEmpty ( ) ) ) COND ! ( VAR_1 . isEmpty ( ) ) ( THEN THEN (  METHOD_3 ( VAR_1 , false ) )  METHOD_3 ( VAR_1 , false ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( BLOCK BLOCK (  TYPE_1 . display ( token , new TYPE_2 ( id , line ) ) )  TYPE_1 . display ( token , new TYPE_2 ( id , line ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , STRING_1 , VAR_5 , VAR_6 ) )  VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , STRING_1 , VAR_5 , VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 ) ; )  return METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , null ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , null ) ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , s , e ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , s , e ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ( ! ( isEmpty ( ) ) ) , STRING_1 ) )  TYPE_2 . METHOD_2 ( ( ! ( isEmpty ( ) ) ) , STRING_1 ) ( FOR-EACH FOR-EACH ( TYPE TYPE_3.ReceiveCommand ) TYPE TYPE_3.ReceiveCommand ( NAME cmd ) NAME cmd ( IN commands . values ( ) ) IN commands . values ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( cmd ) )  VAR_1 . METHOD_3 ( cmd ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ( ( VAR_1 ) + 1 ) , VAR_2 , VAR_3 , VAR_4 ) )  METHOD_2 ( ( ( VAR_1 ) + 1 ) , VAR_2 , VAR_3 , VAR_4 ) (  return ; )  return ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( repo ) ) INIT = new TYPE_1 ( repo ) ) VAR VAR (  VAR_1 . METHOD_3 ( in , out , err ) )  VAR_1 . METHOD_3 ( in , out , err ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( name , VAR_1 , METHOD_2 ( ) ) ; )  return METHOD_1 ( name , VAR_1 , METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( ) ; )  return java.util.Collections . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( projectName , VAR_1 ) . METHOD_3 ( ) ; )  return METHOD_2 ( projectName , VAR_1 ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3.Result ) TYPE TYPE_3.Result ( NAME r ) NAME r ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_1 ( ) )  VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  key = new TYPE_1 . Key ( ( STRING_1 + id ) ) )  key = new TYPE_1 . Key ( ( STRING_1 + id ) ) (  VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 ) )  VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( true , true ) )  VAR_2 . METHOD_2 ( true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) ) )  org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( project , commit ) ; )  return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( project , commit ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME changeId ) NAME changeId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , config ) . METHOD_2 ( true ) ; )  return new TYPE_1 ( VAR_1 , config ) . METHOD_2 ( true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return METHOD_3 ( ) . METHOD_1 ( ) ; )  return METHOD_3 ( ) . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . change ( id ) . delete ( VAR_1 ) )  TYPE_3 . change ( id ) . delete ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 (  VAR_1 . projects ( ) . create ( in ) )  VAR_1 . projects ( ) . create ( in ) (  VAR_1 . projects ( ) . create ( in ) )  VAR_1 . projects ( ) . create ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_1 ) )  new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_1 ) (  METHOD_3 ( STRING_3 ) )  METHOD_3 ( STRING_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME changeId ) NAME changeId ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( changeId , STRING_1 ) )  METHOD_3 ( changeId , STRING_1 ) ( VAR VAR ( TYPE TYPE_3.ChangeInfo ) TYPE TYPE_3.ChangeInfo ( NAME c ) NAME c ( INIT = getChange ( ( STRING_2 + changeId ) ) ) INIT = getChange ( ( STRING_2 + changeId ) ) ) VAR VAR (  org.junit.Assert . METHOD_4 ( VAR_1 ) )  org.junit.Assert . METHOD_4 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) (  db . close ( ) )  db . close ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( change , db ) )  TYPE_1 . METHOD_2 ( change , db ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2.OrmException ) TYPE TYPE_2.OrmException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME notes ) NAME notes ( BLOCK BLOCK (  return METHOD_1 ( ) . METHOD_2 ( ) ; )  return METHOD_1 ( ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( new TYPE_1 ( ) ) )  METHOD_2 ( new TYPE_1 ( ) ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND id == null ) COND id == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; )  return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( STRING_1 ) ) )  METHOD_2 ( METHOD_3 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME values ) NAME values ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ( INIT = new TYPE_1 ( name , TYPE_3 . METHOD_2 ( values ) ) ) INIT = new TYPE_1 ( name , TYPE_3 . METHOD_2 ( values ) ) ) VAR VAR (  type . METHOD_3 ( id ) )  type . METHOD_3 ( id ) (  return type ; )  return type ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( null , null , VAR_1 ) ; )  return new TYPE_1 ( null , null , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ) ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ) ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME psId ) NAME psId ( INIT = VAR_1 . apply ( in ) ) INIT = VAR_1 . apply ( in ) ) VAR VAR (  return ( VAR_2 . apply ( psId ) ) && ( patchSets . METHOD_1 ( psId ) ) ; )  return ( VAR_2 . apply ( psId ) ) && ( patchSets . METHOD_1 ( psId ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = - 1 )  VAR_2 = - 1 (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  display ( ) )  display ( ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( user ) ; )  return METHOD_2 ( ) . METHOD_3 ( user ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( git , ( ( VAR_1 ) + STRING_1 ) ) )  TYPE_1 . METHOD_2 ( git , ( ( VAR_1 ) + STRING_1 ) ) (  VAR_2 . METHOD_3 ( STRING_2 ) )  VAR_2 . METHOD_3 ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( new com.google.gerrit.reviewdb.client.Change . Id ( changeId ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) )  org.junit.Assert.assertEquals ( new com.google.gerrit.reviewdb.client.Change . Id ( changeId ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME assertThat ) NAME assertThat ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return com.google.common.truth.Truth . METHOD_1 ( VAR_2 ) . METHOD_2 ( VAR_1 ) ; )  return com.google.common.truth.Truth . METHOD_1 ( VAR_2 ) . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ( INIT = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) INIT = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) VAR VAR (  return VAR_2 . get ( id ) ; )  return VAR_2 . get ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( null ) ; )  return TYPE_3 . METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) (  factory ( VAR_4 . Factory class ) )  factory ( VAR_4 . Factory class ) (  factory ( VAR_5 . Factory class ) )  factory ( VAR_5 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; )  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_4.OrmException ) TYPE TYPE_4.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  servlet = new TYPE_1 ( VAR_1 ) )  servlet = new TYPE_1 ( VAR_1 ) (  id = TYPE_2 . METHOD_2 ( VAR_2 ) )  id = TYPE_2 . METHOD_2 ( VAR_2 ) (  TYPE_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( ( STRING_1 + ( VAR_2 ) ) ) )  TYPE_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( ( STRING_1 + ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<java.util.List<TYPE_3.Branch>> ) TYPE TYPE_2<java.util.List<TYPE_3.Branch>> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( e . getValue ( ) ) )  VAR_1 . METHOD_2 ( e . getValue ( ) ) (  view . METHOD_3 ( ) )  view . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.Result ) RETURN TYPE_1.Result ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME edit ) NAME edit ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME file ) NAME file ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_2 , edit , file , VAR_1 ) ; )  return METHOD_2 ( VAR_2 , edit , file , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  r . METHOD_3 ( ) )  r . METHOD_3 ( ) (  return r . METHOD_4 ( ) ; )  return r . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME user ) NAME user ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd ) ; )  return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3>> ) TYPE TYPE_1<TYPE_2<TYPE_3>> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_4 . METHOD_1 ( result . get ( path ) ) )  VAR_1 = TYPE_4 . METHOD_1 ( result . get ( path ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) )  VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) (  VAR_3 . METHOD_3 ( ) . METHOD_4 ( ( ! VAR_1 ? VAR_4 : VAR_5 ) ) )  VAR_3 . METHOD_3 ( ) . METHOD_4 ( ( ! VAR_1 ? VAR_4 : VAR_5 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.google.gerrit.reviewdb.client.PatchSet ) RETURN com.google.gerrit.reviewdb.client.PatchSet ( NAME update ) NAME update ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet ) TYPE com.google.gerrit.reviewdb.client.PatchSet ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  TYPE_3 . METHOD_2 ( value , 0 , VAR_1 ) )  TYPE_3 . METHOD_2 ( value , 0 , VAR_1 ) (  return new TYPE_1 ( name , VAR_1 . get ( ) ) ; )  return new TYPE_1 ( name , VAR_1 . get ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME changes ) NAME changes ( BLOCK BLOCK (  return changes . get ( ) ; )  return changes . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND METHOD_1 ( ) ) COND METHOD_1 ( ) ( THEN THEN (  VAR_1 . METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) )  VAR_1 . METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ) THEN THEN ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ChangeInfo ) TYPE TYPE_1.ChangeInfo ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_1 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( result . METHOD_2 ( ) , 1 ) , STRING_1 ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_1 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( result . METHOD_2 ( ) , 1 ) , STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  db . create ( ) )  db . create ( ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME config ) NAME config ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_1 , VAR_2 , 1 , 1 ) )  METHOD_3 ( VAR_1 , VAR_2 , 1 , 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR (  r = new TYPE_1 ( VAR_1 , new TYPE_3 ( this ) ) )  r = new TYPE_1 ( VAR_1 , new TYPE_3 ( this ) ) (  VAR_2 . METHOD_3 ( VAR_1 , r ) )  VAR_2 . METHOD_3 ( VAR_1 , r ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.HttpServletResponse ) TYPE TYPE_1.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME out ) NAME out ( INIT = res . METHOD_2 ( ) ) INIT = res . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  TYPE_4 . METHOD_3 ( in , out ) )  TYPE_4 . METHOD_3 ( in , out ) ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( VAR_1 . isEmpty ( ) ) ) COND ( VAR_1 != null ) && ( VAR_1 . isEmpty ( ) ) ( THEN THEN (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  return METHOD_2 ( VAR_1 , VAR_2 , args ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , args ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ( VAR VAR ( TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ) TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_2 = null )  VAR_2 = null (  VAR_3 = null )  VAR_3 = null (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) . append ( value ) . append ( CHAR_1 ) )  TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) . append ( value ) . append ( CHAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( VAR_2 , true ) )  VAR_1 = METHOD_2 ( VAR_2 , true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) )  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , ui , VAR_2 ) ; )  return new TYPE_1 ( VAR_1 , ui , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME name ) NAME name ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( args , change ) . METHOD_2 ( ) ; )  return new TYPE_1 ( args , change ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ref . METHOD_2 ( VAR_1 ) ) && ( ref . contains ( VAR_2 ) ) ; )  return ( ref . METHOD_2 ( VAR_1 ) ) && ( ref . contains ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , id ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) VAR VAR (  METHOD_3 ( VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_4 , VAR_5 ) (  METHOD_4 ( VAR_1 . changeId , VAR_4 , VAR_6 ) )  METHOD_4 ( VAR_1 . changeId , VAR_4 , VAR_6 ) (  assertThat ( VAR_7 ) . METHOD_5 ( ) )  assertThat ( VAR_7 ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) )  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) (  VAR_1 . METHOD_6 ( true ) )  VAR_1 . METHOD_6 ( true ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( false ) )  TYPE_3 . METHOD_2 ( false ) (  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) )  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) (  VAR_2 . METHOD_5 ( STRING_1 ) )  VAR_2 . METHOD_5 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 instanceof TYPE_2 ) ) COND ! ( VAR_1 instanceof TYPE_2 ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) VAR VAR (  return ( VAR_3 ) == ( VAR_4 ) ; )  return ( VAR_3 ) == ( VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1<TYPE_2,TYPE_3> ) RETURN TYPE_1<TYPE_2,TYPE_3> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return view . get ( ) ; )  return view . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . get ( id , path , false , VAR_1 ) )  TYPE_3 . get ( id , path , false , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( VAR_1 . values ( ) ) ; )  return java.util.Collections . METHOD_2 ( VAR_1 . values ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Result ) TYPE TYPE_1.Result ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( r , message , false , false ) )  METHOD_1 ( r , message , false , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( s . length ( ) ) < ( VAR_1 ) ) COND ( s . length ( ) ) < ( VAR_1 ) ( THEN THEN (  return s ; )  return s ; ) THEN THEN ( ELSE ELSE (  return s . METHOD_1 ( 0 , VAR_1 ) ; )  return s . METHOD_1 ( 0 , VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c ) )  METHOD_2 ( c ) (  TYPE_2 . METHOD_3 ( ( ( c . getStatus ( ) ) == ( VAR_1 ) ) , STRING_1 ) )  TYPE_2 . METHOD_3 ( ( ( c . getStatus ( ) ) == ( VAR_1 ) ) , STRING_1 ) (  put . put ( TYPE_3 . key ( c ) , c ) )  put . put ( TYPE_3 . key ( c ) , c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ChangeInfo ) RETURN TYPE_1.ChangeInfo ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.Result ) TYPE TYPE_2.Result ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return get ( r . getChangeId ( ) , VAR_1 , VAR_2 ) ; )  return get ( r . getChangeId ( ) , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  r . singleton = new TYPE_1 . Key ( ) )  r . singleton = new TYPE_1 . Key ( ) (  VAR_1 = ( INT_1 * INT_2 ) * INT_2 )  VAR_1 = ( INT_1 * INT_2 ) * INT_2 (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_1.Id ) TYPE TYPE_1.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( STRING_1 + type ) + STRING_2 ) + ( id . toString ( ) ) ; )  return ( ( STRING_1 + type ) + STRING_2 ) + ( id . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( in , METHOD_2 ( in ) ) )  assertEquals ( in , METHOD_2 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) == null ) COND ( VAR_1 . METHOD_2 ( ) ) == null ( THEN THEN (  VAR_1 . METHOD_3 ( STRING_1 ) )  VAR_1 . METHOD_3 ( STRING_1 ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_4 ( VAR_1 , this ) )  VAR_2 . METHOD_4 ( VAR_1 , this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME insert ) NAME insert ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  commit ( ) )  commit ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK (  return METHOD_1 ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; )  return METHOD_1 ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . get ( ) . apply ( change , in ) )  VAR_1 . get ( ) . apply ( change , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  METHOD_3 ( p , TYPE_2 . METHOD_4 ( p , STRING_2 ) ) )  METHOD_3 ( p , TYPE_2 . METHOD_4 ( p , STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . apply ( VAR_3 . METHOD_2 ( ) , VAR_1 ) )  VAR_2 . apply ( VAR_3 . METHOD_2 ( ) , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  throw TYPE_2 . METHOD_3 ( STRING_1 , e ) ; )  throw TYPE_2 . METHOD_3 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( ( STRING_1 + VAR_1 ) , VAR_2 ) )  org.junit.Assert.assertEquals ( ( STRING_1 + VAR_1 ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3<com.google.gerrit.server.query.change.ChangeData,?>> ) TYPE TYPE_2<TYPE_3<com.google.gerrit.server.query.change.ChangeData,?>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( true , VAR_1 ) ; )  return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( true , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( ) ; )  return TYPE_2 . METHOD_2 ( ) ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( ) ; )  return TYPE_3 . METHOD_2 ( ) ; ) BLOCK BLOCK ) CASE VAR_3 ( DEFAULT DEFAULT ( BLOCK BLOCK (  throw new TYPE_4 ( ( STRING_1 + ( VAR_1 ) ) ) ; )  throw new TYPE_4 ( ( STRING_1 + ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ( INIT = new TYPE_1 ( new TYPE_3 ( projectName , VAR_1 ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ) INIT = new TYPE_1 ( new TYPE_3 ( projectName , VAR_1 ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ) VAR VAR (  return config ; )  return config ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( project ) ) ; )  return METHOD_2 ( METHOD_3 ( project ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return input . METHOD_1 ( STRING_1 , project ) ; )  return input . METHOD_1 ( STRING_1 , project ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( VAR_1 , true ) )  TYPE_2 . display ( VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( projectName ) )  VAR_1 = METHOD_2 ( projectName ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME req ) NAME req ( INIT = TYPE_2 . METHOD_2 ( name ) ) INIT = TYPE_2 . METHOD_2 ( name ) ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ( INIT = VAR_1 . METHOD_3 ( req ) . getAccountId ( ) ) INIT = VAR_1 . METHOD_3 ( req ) . getAccountId ( ) ) VAR VAR (  return VAR_2 . create ( TYPE_3 . of ( db ) , id ) ; )  return VAR_2 . create ( TYPE_3 . of ( db ) , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME account ) NAME account ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . create ( VAR_3 , account ) ) INIT = VAR_2 . create ( VAR_3 , account ) ) VAR VAR (  return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; )  return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME edit ) NAME edit ( INIT = new TYPE_1 ( id , result , path , VAR_1 . METHOD_1 ( ) , VAR_2 , VAR_3 ) ) INIT = new TYPE_1 ( id , result , path , VAR_1 . METHOD_1 ( ) , VAR_2 , VAR_3 ) ) VAR VAR (  edit . METHOD_2 ( ) )  edit . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = repo . METHOD_3 ( ) . METHOD_4 ( ) )  VAR_1 = repo . METHOD_3 ( ) . METHOD_4 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != ( - 1 ) ) COND ( VAR_1 ) != ( - 1 ) ( THEN THEN ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . get ( VAR_1 ) ) INIT = VAR_3 . get ( VAR_1 ) ) VAR VAR (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) (  VAR_1 = - 1 )  VAR_1 = - 1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_2 ( ) )  VAR_1 = new TYPE_2 ( ) (  VAR_1 . METHOD_2 ( TYPE_3 . css ( ) . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( TYPE_3 . css ( ) . METHOD_3 ( ) ) (  VAR_2 . add ( VAR_1 ) )  VAR_2 . add ( VAR_1 ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 ) )  VAR_1 . METHOD_2 ( STRING_1 ) (  return VAR_1 . apply ( revision ) ; )  return VAR_1 . apply ( revision ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_3 . getKey ( ) . get ( ) ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_3 . getKey ( ) . get ( ) ) (  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , null , STRING_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , null , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ) INIT = new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ) VAR VAR (  repo = new TYPE_4 < TYPE_1 > ( r ) )  repo = new TYPE_4 < TYPE_1 > ( r ) (  servlet = TYPE_5 . create ( repo ) )  servlet = TYPE_5 . create ( repo ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true ( IF IF ( COND ( table ) != null ) COND ( table ) != null ( THEN THEN (  table . METHOD_2 ( true ) )  table . METHOD_2 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . apply ( account , in ) )  VAR_1 . apply ( account , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException|TYPE_3 ) TYPE java.io.IOException|TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME cfg ) NAME cfg ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ) RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctl ) NAME ctl ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME VAR_2 ) NAME VAR_2 ( INIT = new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ) INIT = new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ) VAR VAR (  VAR_2 . METHOD_3 ( ctl . getChange ( ) ) )  VAR_2 . METHOD_3 ( ctl . getChange ( ) ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final native ) MODIFIER private static final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( repo , commit , null , null , null , null ) ; )  return METHOD_2 ( repo , commit , null , null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_3 . METHOD_2 ( ) ) COND TYPE_3 . METHOD_2 ( ) ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return TYPE_4 . METHOD_3 ( cfg , STRING_1 , null , STRING_2 , VAR_2 ) ; )  return TYPE_4 . METHOD_3 ( cfg , STRING_1 , null , STRING_2 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) (  servlet = TYPE_5 . create ( repo ) )  servlet = TYPE_5 . create ( repo ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , change , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , change , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_1> ) TYPE TYPE_2<TYPE_1> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) )  TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.ReviewDb ) TYPE TYPE_1.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; )  return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cfg ) NAME cfg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . get ( cfg . METHOD_2 ( ) . METHOD_3 ( ) ) ) INIT = TYPE_3 . get ( cfg . METHOD_2 ( ) . METHOD_3 ( ) ) ) VAR VAR (  TYPE_4 . METHOD_4 ( VAR_1 ) )  TYPE_4 . METHOD_4 ( VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME a ) NAME a ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( r , STRING_1 , VAR_1 ) )  TYPE_2 . METHOD_1 ( r , STRING_1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME in ) NAME in ( INIT = METHOD_2 ( STRING_1 ) ) INIT = METHOD_2 ( STRING_1 ) ) VAR VAR (  assertEquals ( query ( in ) , METHOD_3 ( in ) ) )  assertEquals ( query ( in ) , METHOD_3 ( in ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) (  METHOD_2 ( VAR_1 , VAR_2 , STRING_2 ) )  METHOD_2 ( VAR_1 , VAR_2 , STRING_2 ) (  METHOD_3 ( STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) )  METHOD_3 ( STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  METHOD_2 ( ) . to ( VAR_3 class ) )  METHOD_2 ( ) . to ( VAR_3 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 , project , STRING_1 , false , VAR_3 ) )  METHOD_2 ( VAR_2 , project , STRING_1 , false , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( index , p ) ; )  return new TYPE_1 ( index , p ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME query ) NAME query ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  query = TYPE_1 . METHOD_2 ( query ) . METHOD_3 ( STRING_1 , STRING_2 ) )  query = TYPE_1 . METHOD_2 ( query ) . METHOD_3 ( STRING_1 , STRING_2 ) (  return ( ( STRING_3 + query ) + STRING_4 ) + VAR_1 ; )  return ( ( STRING_3 + query ) + STRING_4 ) + VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = result . config )  VAR_1 = result . config ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_3 = VAR_2 )  VAR_3 = VAR_2 (  TYPE_2 . METHOD_1 ( ) )  TYPE_2 . METHOD_1 ( ) ) THEN THEN ) IF IF (  METHOD_2 ( VAR_4 ) )  METHOD_2 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 == ( VAR_2 ) ) || ( VAR_3 . contains ( VAR_1 ) ) ; )  return ( VAR_1 == ( VAR_2 ) ) || ( VAR_3 . contains ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Change ) TYPE TYPE_1.Change ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . contains ( VAR_1 . getId ( ) ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . contains ( VAR_1 . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  this . VAR_1 = true )  this . VAR_1 = true (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2<TYPE_3>> ) TYPE TYPE_1<TYPE_2<TYPE_3>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) )  TYPE_4 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  VAR_1 = new TYPE_3 ( ) )  VAR_1 = new TYPE_3 ( ) ) THEN THEN ) IF IF (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . contains ( n ) ) COND VAR_1 . contains ( n ) ( THEN THEN (  throw new TYPE_1 . OrmException ( ( ( STRING_1 + n ) + STRING_2 ) ) ; )  throw new TYPE_1 . OrmException ( ( ( STRING_1 + n ) + STRING_2 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) )  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ui ) NAME ui ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ui . METHOD_2 ( false , STRING_1 , url ) ; )  return ui . METHOD_2 ( false , STRING_1 , url ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1<?> ) RETURN TYPE_1<?> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . apply ( change ) . value ( ) ; )  return VAR_1 . apply ( change ) . value ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . create ( 0 , 0 , VAR_1 , VAR_2 ) ; )  return TYPE_1 . create ( 0 , 0 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( STRING_1 , VAR_1 ) ; )  return METHOD_1 ( STRING_1 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME reviewers ) NAME reviewers ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; )  return TYPE_2 . change ( id ) . view ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( TYPE_3 . create ( VAR_1 , id ) , VAR_2 , null , null ) ; )  return new TYPE_2 ( TYPE_3 . create ( VAR_1 , id ) , VAR_2 , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.HttpServletResponse ) TYPE TYPE_1.HttpServletResponse ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 . HttpServletResponse class ) ) INIT = METHOD_2 ( VAR_2 . HttpServletResponse class ) ) VAR VAR (  servlet . METHOD_3 ( null , VAR_1 ) )  servlet . METHOD_3 ( null , VAR_1 ) (  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) )  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( ) )  TYPE_3 . METHOD_2 ( ) (  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) )  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) (  VAR_2 . METHOD_5 ( STRING_1 ) )  VAR_2 . METHOD_5 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( TYPE_1 . METHOD_2 ( null ) ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( TYPE_1 . METHOD_2 ( null ) ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME rsrc ) NAME rsrc ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1.Change ) RETURN TYPE_1.Change ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.ChangeInfo ) TYPE TYPE_2.ChangeInfo ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; )  return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,?> ) RETURN TYPE_1<TYPE_2,?> ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND id . equals ( STRING_1 ) ) COND id . equals ( STRING_1 ) ( THEN THEN (  return VAR_2 . get ( ) ; )  return VAR_2 . get ( ) ; ) THEN THEN ) IF IF (  throw new TYPE_5 ( id ) ; )  throw new TYPE_5 ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( INIT = label ( VAR_1 . METHOD_2 ( ) . get ( ) ) ) INIT = label ( VAR_1 . METHOD_2 ( ) . get ( ) ) ) VAR VAR (  return ( ( r . METHOD_3 ( ) ) < 0 ) || ( ( r . METHOD_4 ( ) ) > 0 ) ; )  return ( ( r . METHOD_3 ( ) ) < 0 ) || ( ( r . METHOD_4 ( ) ) > 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) )  METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  factory ( VAR_2 . Factory class ) )  factory ( VAR_2 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME row ) NAME row ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( row ) ) != null ) COND ( TYPE_1 . METHOD_2 ( row ) ) != null ( THEN THEN (  METHOD_3 ( row ) )  METHOD_3 ( row ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_2 . create ( METHOD_2 ( ) , VAR_1 ) . METHOD_3 ( ) ; )  return VAR_2 . create ( METHOD_2 ( ) , VAR_1 ) . METHOD_3 ( ) ; ) THEN THEN ) IF IF (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) )  METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ) RETURN com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( db . get ( ) , c . notes , VAR_2 ) ; )  return VAR_1 . METHOD_1 ( db . get ( ) , c . notes , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ref . METHOD_2 ( VAR_1 ) ? STRING_1 : VAR_2 ) + ref ; )  return ( ref . METHOD_2 ( VAR_1 ) ? STRING_1 : VAR_2 ) + ref ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) (  bind ( VAR_4 class ) )  bind ( VAR_4 class ) (  factory ( VAR_5 class ) )  factory ( VAR_5 class ) (  bind ( VAR_6 class ) )  bind ( VAR_6 class ) (  bind ( VAR_7 . Factory class ) )  bind ( VAR_7 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( getChange ( ) . getId ( ) ) ; )  return TYPE_1 . METHOD_1 ( getChange ( ) . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) (  factory ( VAR_4 . Factory class ) )  factory ( VAR_4 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . get ( VAR_1 , null ) ; )  return TYPE_2 . get ( VAR_1 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_3 . create ( ) ) INIT = TYPE_3 . create ( ) ) VAR VAR (  VAR_3 . METHOD_2 ( new TYPE_4 ( VAR_2 ) , VAR_1 ) )  VAR_3 . METHOD_2 ( new TYPE_4 ( VAR_2 ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . put ( STRING_1 ) ) INIT = VAR_1 . put ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  commands = VAR_1 )  commands = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 == ( VAR_2 ) ) && ( base . METHOD_2 ( ) ) ) || ( base . METHOD_3 ( ) ) ) COND ( ( VAR_1 == ( VAR_2 ) ) && ( base . METHOD_2 ( ) ) ) || ( base . METHOD_3 ( ) ) ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.server.query.change.ChangeData ) TYPE com.google.gerrit.server.query.change.ChangeData ( NAME cd ) NAME cd ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( INIT = new TYPE_3 ( cd ) . METHOD_1 ( ) ) INIT = new TYPE_3 ( cd ) . METHOD_1 ( ) ) VAR VAR ( IF IF ( COND ( r . status ) != ( VAR_1 ) ) COND ( r . status ) != ( VAR_1 ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return r . type ; )  return r . type ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = ( METHOD_2 ( VAR_1 ) ) ? 1 : 0 ) INIT = ( METHOD_2 ( VAR_1 ) ) ? 1 : 0 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ( INIT = ( METHOD_2 ( VAR_2 ) ) ? 1 : 0 ) INIT = ( METHOD_2 ( VAR_2 ) ) ? 1 : 0 ) VAR VAR (  return VAR_3 - r ; )  return VAR_3 - r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( VAR_1 , true ) )  TYPE_2 . display ( VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD

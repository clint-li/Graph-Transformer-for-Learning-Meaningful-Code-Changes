( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( repo , null , VAR_1 , null , null , null ) ; )  return METHOD_2 ( repo , null , VAR_1 , null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 . METHOD_3 ( ) , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) )  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 . METHOD_3 ( ) , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME query ) NAME query ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( query ) . get ( ) )  METHOD_2 ( query ) . get ( ) (  org.junit.Assert . METHOD_3 ( ( STRING_1 + query ) ) )  org.junit.Assert . METHOD_3 ( ( STRING_1 + query ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( STRING_1 , true , true ) ; )  return METHOD_1 ( STRING_1 , true , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) )  TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) (  VAR_4 . METHOD_8 ( VAR_3 ) )  VAR_4 . METHOD_8 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  factory ( VAR_1 . Factory class ) )  factory ( VAR_1 . Factory class ) (  bind ( VAR_2 class ) . METHOD_2 ( VAR_3 ) )  bind ( VAR_2 class ) . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME user ) NAME user ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd , db ) ; )  return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd , db ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME delete ) NAME delete ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME req ) NAME req ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  req . get ( ) )  req . get ( ) (  org.junit.Assert . METHOD_2 ( STRING_1 ) )  org.junit.Assert . METHOD_2 ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) )  VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( 1 ) )  METHOD_2 ( 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR (  METHOD_2 ( ( -- ( VAR_5 ) ) ) )  METHOD_2 ( ( -- ( VAR_5 ) ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) ( SYNCHRONIZED SYNCHRONIZED (  VAR_6 )  VAR_6 ( BLOCK BLOCK (  VAR_7 = true )  VAR_7 = true ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . length ( ) ) < INT_1 ) COND ( VAR_1 . length ( ) ) < INT_1 ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return ( VAR_1 . METHOD_2 ( 0 , INT_2 ) ) + STRING_1 ; )  return ( VAR_1 . METHOD_2 ( 0 , INT_2 ) ) + STRING_1 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ( INIT = INT_1 ) INIT = INT_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( id ) ) INIT = new TYPE_1 ( id ) ) VAR VAR (  assertEquals ( id , p . METHOD_2 ( ) ) )  assertEquals ( id , p . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<TYPE_4.Result> ) TYPE TYPE_3<TYPE_4.Result> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_5 , project , name , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; )  return new TYPE_1 ( VAR_5 , project , name , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_2 . METHOD_3 ( ) ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ( THEN THEN (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  METHOD_3 ( ) . METHOD_4 ( ) )  METHOD_3 ( ) . METHOD_4 ( ) (  VAR_1 = null )  VAR_1 = null (  VAR_3 = null )  VAR_3 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) )  VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) )  VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  VAR_3 . METHOD_5 ( ) )  VAR_3 . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = new TYPE_1 . ProjectConfig ( new TYPE_3 . NameKey ( STRING_1 ) ) ) INIT = new TYPE_1 . ProjectConfig ( new TYPE_3 . NameKey ( STRING_1 ) ) ) VAR VAR (  cfg . METHOD_2 ( db , VAR_1 ) )  cfg . METHOD_2 ( db , VAR_1 ) (  return cfg ; )  return cfg ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_4 ( cm . METHOD_5 ( ) , line ) )  VAR_2 . METHOD_4 ( cm . METHOD_5 ( ) , line ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Change,com.google.gerrit.reviewdb.client.Change.Id> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Change,com.google.gerrit.reviewdb.client.Change.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  p . message = msg )  p . message = msg (  VAR_1 . add ( p ) )  VAR_1 . add ( p ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return STRING_1 + VAR_1 ; )  return STRING_1 + VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = null )  VAR_2 = null (  VAR_1 . onSuccess ( result ) )  VAR_1 . onSuccess ( result ) (  result = null )  result = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . apply ( rsrc , VAR_1 ) )  VAR_2 . apply ( rsrc , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException ) TYPE com.google.gwtorm.server.OrmException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_4 ( ) ) INIT = METHOD_4 ( ) ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_5 ( STRING_1 , STRING_2 ) ) INIT = VAR_1 . METHOD_5 ( STRING_1 , STRING_2 ) ) VAR VAR (  assertEquals ( STRING_3 , VAR_2 ) )  assertEquals ( STRING_3 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( changeId , VAR_1 , args ) ; )  return TYPE_3 . METHOD_1 ( changeId , VAR_1 , args ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2.Id ) TYPE TYPE_2.Id ( NAME id ) NAME id ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  add ( VAR_1 , id ) )  add ( VAR_1 , id ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME n ) NAME n ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( n + ( VAR_1 / 2 ) ) / VAR_1 ) INIT = ( n + ( VAR_1 / 2 ) ) / VAR_1 ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME p ) NAME p ( INIT = VAR_2 . get ( id . get ( ) ) ) INIT = VAR_2 . get ( id . get ( ) ) ) VAR VAR ( IF IF ( COND p == null ) COND p == null ( THEN THEN (  throw new TYPE_4 ( id ) ; )  throw new TYPE_4 ( id ) ; ) THEN THEN ) IF IF (  return new TYPE_1 ( p ) ; )  return new TYPE_1 ( p ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( args , change . getProject ( ) , change ) ; )  return new TYPE_1 ( args , change . getProject ( ) , change ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  commit ( ) )  commit ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account ) TYPE com.google.gerrit.reviewdb.client.Account ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 . getId ( ) ) ; )  return METHOD_1 ( VAR_1 . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  db = METHOD_2 ( ) )  db = METHOD_2 ( ) (  util = new TYPE_1 < org.eclipse.jgit.lib.Repository > ( db ) )  util = new TYPE_1 < org.eclipse.jgit.lib.Repository > ( db ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  this . VAR_2 = VAR_2 )  this . VAR_2 = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME display ) NAME display ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME view ) NAME view ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) THEN THEN ) IF IF (  VAR_1 = view )  VAR_1 = view (  VAR_2 . add ( VAR_1 , VAR_3 ) )  VAR_2 . add ( VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) ) ) . METHOD_3 ( ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) ) ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_3 ) != ( VAR_4 ) ) && ( ( VAR_5 ) == null ) ) COND ( ( VAR_3 ) != ( VAR_4 ) ) && ( ( VAR_5 ) == null ) ( THEN THEN (  throw new TYPE_4 ( ) ; )  throw new TYPE_4 ( ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) (  METHOD_4 ( VAR_2 . METHOD_5 ( ) ) )  METHOD_4 ( VAR_2 . METHOD_5 ( ) ) (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) )  bind ( VAR_1 class ) (  METHOD_2 ( ) . to ( VAR_2 class ) )  METHOD_2 ( ) . to ( VAR_2 class ) (  factory ( VAR_3 . Factory class ) )  factory ( VAR_3 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) (  bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) )  bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) (  bind ( VAR_5 class ) . to ( VAR_6 class ) )  bind ( VAR_5 class ) . to ( VAR_6 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = new TYPE_2 ( server , user ) . put ( STRING_1 ) ) INIT = new TYPE_2 ( server , user ) . put ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) <= ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_2 ( ) ) ) ; )  return ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) <= ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_2 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Key ) TYPE TYPE_1.Key ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME email ) NAME email ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 ) ; )  return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  group ( STRING_1 , STRING_2 ) )  group ( STRING_1 , STRING_2 ) (  org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_3 ) . isEmpty ( ) ) )  org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_3 ) . isEmpty ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . apply ( change , input ) )  VAR_1 . apply ( change , input ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2|TYPE_3 ) TYPE TYPE_2|TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME schema ) NAME schema ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  schema . close ( ) )  schema . close ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1.ProjectConfig ) RETURN TYPE_1.ProjectConfig ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , true , true ) ; )  return METHOD_1 ( VAR_1 , true , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_2> ) TYPE java.util.Map<java.lang.String,TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( db ) )  METHOD_2 ( db ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME revision ) NAME revision ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . revision ( id ) . view ( type ) ; )  return TYPE_2 . revision ( id ) . view ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ( VAR VAR ( TYPE TYPE_2.HttpServletResponse ) TYPE TYPE_2.HttpServletResponse ( NAME res ) NAME res ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME err ) NAME err ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . METHOD_1 ( req , res , VAR_1 , msg , VAR_2 , err ) )  TYPE_4 . METHOD_1 ( req , res , VAR_1 , msg , VAR_2 , err ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 ) (  bind ( VAR_4 class ) )  bind ( VAR_4 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME c ) NAME c ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME m ) NAME m ( INIT = TYPE_2 . METHOD_3 ( repo , c ) ) INIT = TYPE_2 . METHOD_3 ( repo , c ) ) VAR VAR (  org.junit.Assert.assertEquals ( 0 , m . size ( ) ) )  org.junit.Assert.assertEquals ( 0 , m . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME s ) NAME s ( CASE 0 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) CASE 0 ( CASE 1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) CASE 1 ) SWITCH SWITCH (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME commit ) NAME commit ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . revision ( id , commit ) . delete ( VAR_1 ) )  TYPE_3 . revision ( id , commit ) . delete ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ; )  return ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( project , id ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( project , id ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) . toString ( ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . equals ( VAR_2 ) ) COND TYPE_1 . equals ( VAR_2 ) ( THEN THEN (  return VAR_3 . METHOD_2 ( ) ; )  return VAR_3 . METHOD_2 ( ) ; ) THEN THEN ) IF IF (  return METHOD_3 ( VAR_4 , VAR_1 ) ; )  return METHOD_3 ( VAR_4 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . length ( ) ) ; )  return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . length ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 , new TYPE_2 ( ) , METHOD_2 ( VAR_2 class ) ) )  new TYPE_1 ( VAR_1 , new TYPE_2 ( ) , METHOD_2 ( VAR_2 class ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) && ( METHOD_3 ( ) ) ; )  return ( METHOD_2 ( VAR_1 ) ) && ( METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.ReviewDb ) TYPE TYPE_2.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_3 , id , db , VAR_1 ) ; )  return METHOD_1 ( VAR_3 , id , db , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ctx . METHOD_2 ( ctx . METHOD_3 ( ) , ctx . METHOD_4 ( ) ) ; )  return ctx . METHOD_2 ( ctx . METHOD_3 ( ) , ctx . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( config . METHOD_4 ( ) ) ) , null ) ; )  return VAR_1 . METHOD_1 ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( config . METHOD_4 ( ) ) ) , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( ) ; )  return java.util.Collections . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME repo ) NAME repo ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( repo , null , null , null , null , null ) ; )  return METHOD_1 ( repo , null , null , null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . equals ( VAR_1 ) ) COND TYPE_1 . equals ( VAR_1 ) ( THEN THEN (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return ! ( METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ; )  return ! ( METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME values ) NAME values ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME path ) NAME path ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND path != null ) COND path != null ( THEN THEN ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ( INIT = new TYPE_4 ( path ) ) INIT = new TYPE_4 ( path ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  METHOD_1 ( repo ) )  METHOD_1 ( repo ) ) BLOCK BLOCK ) TRY TRY ) THEN THEN ) IF IF (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND type ( ) . METHOD_2 ( ) ) COND type ( ) . METHOD_2 ( ) ( THEN THEN (  return TYPE_1 . METHOD_3 ( type ( ) . METHOD_4 ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_3 ( type ( ) . METHOD_4 ( VAR_1 ) ) ; ) THEN THEN ( ELSE ELSE (  return VAR_1 ; )  return VAR_1 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME put ) NAME put ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . put ( VAR_1 , VAR_2 ) )  VAR_3 . put ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) )  VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  project = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) )  project = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) (  TYPE_1 . METHOD_2 ( VAR_1 , project . get ( ) ) )  TYPE_1 . METHOD_2 ( VAR_1 , project . get ( ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME file ) NAME file ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . create ( VAR_2 . get ( ) . METHOD_1 ( revision , TYPE_2 . METHOD_2 ( path ) ) ) ; )  return VAR_1 . create ( VAR_2 . get ( ) . METHOD_1 ( revision , TYPE_2 . METHOD_2 ( path ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( ) ) INIT = VAR_2 . get ( ) ) VAR VAR (  return VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; )  return VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME insert ) NAME insert ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( insert ) )  TYPE_2 . METHOD_2 ( insert ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN Project.NameKey ) RETURN Project.NameKey ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return getChange ( ) . getProject ( ) ; )  return getChange ( ) . getProject ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change.Id ) TYPE com.google.gerrit.reviewdb.client.Change.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . create ( VAR_3 . get ( ) , id ) ; )  return VAR_2 . create ( VAR_3 . get ( ) , id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND METHOD_3 ( db , repo , commit ) ) COND METHOD_3 ( db , repo , commit ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( e . getValue ( ) ) )  VAR_1 . METHOD_2 ( e . getValue ( ) ) (  view . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) )  view . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1.ProjectConfig ) TYPE TYPE_1.ProjectConfig ( NAME cfg ) NAME cfg ( INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ) VAR VAR (  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) )  TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) (  METHOD_5 ( project , cfg ) )  METHOD_5 ( project , cfg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 ) )  METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  change = c )  change = c ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  VAR_2 = result . METHOD_2 ( ) )  VAR_2 = result . METHOD_2 ( ) (  METHOD_3 ( result . METHOD_4 ( ) ) )  METHOD_3 ( result . METHOD_4 ( ) ) (  METHOD_5 ( info ) )  METHOD_5 ( info ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return cfg . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return cfg . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_3 ( STRING_1 ) . id ( name . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) )  new TYPE_3 ( STRING_1 ) . id ( name . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) )  org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 ) ; )  return new TYPE_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( name , VAR_1 ) )  METHOD_3 ( name , VAR_1 ) (  return METHOD_4 ( name ) ; )  return METHOD_4 ( name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( user ) )  METHOD_2 ( user ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 (  METHOD_3 ( in , VAR_1 class ) )  METHOD_3 ( in , VAR_1 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME ref ) NAME ref ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ( INIT = new TYPE_1 ( project , ref , VAR_1 ) ) INIT = new TYPE_1 ( project , ref , VAR_1 ) ) VAR VAR (  METHOD_2 ( project , event ) )  METHOD_2 ( project , event ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME req ) NAME req ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return TYPE_2 . METHOD_2 ( req . METHOD_3 ( VAR_1 ) ) ; )  return TYPE_2 . METHOD_2 ( req . METHOD_3 ( VAR_1 ) ) ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . create ( TYPE_2 . of ( VAR_2 ) ) ; )  return VAR_1 . create ( TYPE_2 . of ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  install ( VAR_1 ) )  install ( VAR_1 ) (  install ( cm ) )  install ( cm ) (  install ( VAR_2 ) )  install ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( key ) ; )  return VAR_1 . get ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return name . get ( ) ; )  return name . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( getChangeId ( ) ) ; )  return TYPE_1 . METHOD_1 ( getChangeId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( e . getValue ( ) ) )  VAR_1 . METHOD_2 ( e . getValue ( ) ) ( IF IF ( COND ( view ) != null ) COND ( view ) != null ( THEN THEN (  view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) )  view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . config = config )  this . config = config ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , revision . getId ( ) ) ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , revision . getId ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . error ( VAR_1 ) )  TYPE_1 . error ( VAR_1 ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1.Branch> ) TYPE java.util.List<TYPE_1.Branch> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( true ) )  METHOD_1 ( true ) (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( ) ; )  return METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME delete ) NAME delete ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( new TYPE_2 ( ( ( VAR_3 . METHOD_2 ( ) ) + VAR_1 ) ) , new TYPE_3 ( ) ) ; )  return VAR_2 . METHOD_1 ( new TYPE_2 ( ( ( VAR_3 . METHOD_2 ( ) ) + VAR_1 ) ) , new TYPE_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . METHOD_2 ( data ) ) INIT = TYPE_3 . METHOD_2 ( data ) ) VAR VAR (  return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; )  return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.AccountGroup ) RETURN TYPE_1.AccountGroup ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . get ( new TYPE_2 . NameKey ( VAR_1 ) ) ; )  return VAR_2 . get ( new TYPE_2 . NameKey ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME update ) NAME update ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( update ) )  METHOD_1 ( update ) (  update . METHOD_2 ( message . getMessage ( ) ) )  update . METHOD_2 ( message . getMessage ( ) ) (  METHOD_3 ( update ) )  METHOD_3 ( update ) (  METHOD_4 ( update ) )  METHOD_4 ( update ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) . METHOD_2 ( ) ) ; )  return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.NameKey ) TYPE TYPE_1.NameKey ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  TYPE_3 . p ( r , project ) )  TYPE_3 . p ( r , project ) (  TYPE_3 . a ( r , STRING_1 ) )  TYPE_3 . a ( r , STRING_1 ) (  return ( VAR_1 ) + r ; )  return ( VAR_1 ) + r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND user . METHOD_2 ( ) ) COND user . METHOD_2 ( ) ( THEN THEN (  return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; )  return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; ) THEN THEN ) IF IF (  return user . toString ( ) ; )  return user . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . equals ( user . METHOD_1 ( ) ) ; )  return VAR_1 . equals ( user . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  this . METHOD_1 ( ) )  this . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN TYPE_1.Status ) RETURN TYPE_1.Status ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( db , query , VAR_1 ) ; )  return METHOD_1 ( db , query , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?,java.io.IOException> ) RETURN TYPE_1<?,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , false ) ) : VAR_2 < TYPE_3 , )  return ( VAR_1 ) != null ? submit ( new TYPE_2 ( change , false ) ) : VAR_2 < TYPE_3 , (  java.io.IOException > METHOD_2 ( null ) )  java.io.IOException > METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_2 . Factory ( ) ) )  TYPE_1 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_2 . Factory ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( VAR_1 ) )  TYPE_2 . METHOD_1 ( VAR_1 ) (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( ( ( double ) ( this . VAR_1 ) ) ) ; )  return new TYPE_2 ( ( ( double ) ( this . VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME url ) NAME url ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id ( NAME ps ) NAME ps ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( null , ps , info . path ( ) ) ; )  return TYPE_2 . METHOD_1 ( null , ps , info . path ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  in . name = STRING_1 )  in . name = STRING_1 ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( INIT = VAR_1 . put ( STRING_2 , in ) ) INIT = VAR_1 . put ( STRING_2 , in ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( event , db ) )  METHOD_2 ( event , db ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( null ) )  METHOD_2 ( null ) (  METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) )  METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) (  METHOD_5 ( STRING_1 ) )  METHOD_5 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME change ) NAME change ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( STRING_1 ) . id ( id ) ; )  return new TYPE_1 ( STRING_1 ) . id ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME err ) NAME err ) VAR VAR ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . error ( err , e ) )  VAR_2 . error ( err , e ) (  return TYPE_2 . METHOD_2 ( ) ; )  return TYPE_2 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return TYPE_2 . METHOD_3 ( err ) ; )  return TYPE_2 . METHOD_3 ( err ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ) RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> ( NAME schema ) NAME schema ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_3 . METHOD_1 ( schema ) ) == ( VAR_1 ) ) COND ( TYPE_3 . METHOD_1 ( schema ) ) == ( VAR_1 ) ( THEN THEN (  return new TYPE_4 ( ) ; )  return new TYPE_4 ( ) ; ) THEN THEN ) IF IF (  return TYPE_1 . not ( new TYPE_3 ( VAR_2 ) ) ; )  return TYPE_1 . not ( new TYPE_3 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ctx . METHOD_2 ( ) . METHOD_3 ( magicBranch . topic ) )  ctx . METHOD_2 ( ) . METHOD_3 ( magicBranch . topic ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN com.google.gerrit.reviewdb.client.Change ) RETURN com.google.gerrit.reviewdb.client.Change ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; )  return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 != null ? TYPE_2 . METHOD_1 ( VAR_1 ) : null ; )  return VAR_1 != null ? TYPE_2 . METHOD_1 ( VAR_1 ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . get ( input , args ) ; )  return VAR_1 . get ( input , args ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new com.google.gwtorm.server.OrmException ( e ) ; )  throw new com.google.gwtorm.server.OrmException ( e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( VAR_1 ) )  TYPE_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.PatchSet ) TYPE TYPE_1.PatchSet ( NAME ps ) NAME ps ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  patchSet = ps )  patchSet = ps ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_2 . METHOD_3 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  VAR_1 = new TYPE_2 ( true , VAR_2 ) )  VAR_1 = new TYPE_2 ( true , VAR_2 ) (  add ( VAR_1 ) )  add ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 class ) )  VAR_1 . METHOD_2 ( VAR_2 class ) (  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( STRING_1 ) . get ( ) )  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( STRING_1 ) . get ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . create ( VAR_1 , db , repo , rw , VAR_3 , VAR_4 , METHOD_2 ( VAR_5 ) , VAR_6 , VAR_7 . METHOD_3 ( ) ) ; )  return VAR_2 . create ( VAR_1 , db , repo , rw , VAR_3 , VAR_4 , METHOD_2 ( VAR_5 ) , VAR_6 , VAR_7 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME group ) NAME group ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3<TYPE_4,TYPE_5> ) TYPE TYPE_3<TYPE_4,TYPE_5> ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND ( VAR_2 . get ( line ) ) == group ) COND ( VAR_2 . get ( line ) ) == group ( THEN THEN (  VAR_2 . METHOD_3 ( line ) )  VAR_2 . METHOD_3 ( line ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ( FINALLY FINALLY (  plugins . METHOD_1 ( name , VAR_1 ) )  plugins . METHOD_1 ( name , VAR_1 ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( ( ( ( STRING_1 + ( change.getId ( ) ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; )  return new TYPE_1 ( ( ( ( STRING_1 + ( change.getId ( ) ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  return METHOD_4 ( ) ; )  return METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Account ) TYPE TYPE_1.Account ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) )  VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) (  METHOD_4 ( ( ! ( METHOD_5 ( ) ) ) ) )  METHOD_4 ( ( ! ( METHOD_5 ( ) ) ) ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.Repository ) TYPE org.eclipse.jgit.lib.Repository ( NAME repo ) NAME repo ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME rw ) NAME rw ( INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( rw , VAR_2 ) )  VAR_1 . METHOD_1 ( rw , VAR_2 ) ) BLOCK BLOCK ( FINALLY FINALLY (  rw . METHOD_2 ( ) )  rw . METHOD_2 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME submit ) NAME submit ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  submit . get ( ) . apply ( revision , in ) )  submit . get ( ) . apply ( revision , in ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE com.google.gwtorm.server.OrmException|java.io.IOException ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 , e ) ; )  throw new TYPE_2 ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; )  return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ) RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 . get ( TYPE_2 . create ( VAR_3 , VAR_1 ) ) ) . METHOD_3 ( TYPE_3 : : METHOD_4 ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 . get ( TYPE_2 . create ( VAR_3 , VAR_1 ) ) ) . METHOD_3 ( TYPE_3 : : METHOD_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Project.NameKey ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME c ) NAME c ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  return c . METHOD_3 ( ) . get ( new TYPE_1 . Key ( ) ) ; )  return c . METHOD_3 ( ) . get ( new TYPE_1 . Key ( ) ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  c . close ( ) )  c . close ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  status = VAR_1 )  status = VAR_1 (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME changeId ) NAME changeId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME revision ) NAME revision ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . revision ( changeId , revision ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) )  TYPE_3 . revision ( changeId , revision ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME cm ) NAME cm ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( cm ) ) INIT = METHOD_2 ( cm ) ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME info ) NAME info ( INIT = TYPE_4 . create ( path , VAR_1 , ( line + 1 ) , null , null ) ) INIT = TYPE_4 . create ( path , VAR_1 , ( line + 1 ) , null , null ) ) VAR VAR (  return METHOD_3 ( info , false ) ; )  return METHOD_3 ( info , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getRefName ) NAME getRefName ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , getChange ( ) . getId ( ) ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , getChange ( ) . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_1 ( ) ) COND METHOD_1 ( ) ( THEN THEN (  VAR_1 = new TYPE_2 < java.lang.String > ( VAR_2 ) )  VAR_1 = new TYPE_2 < java.lang.String > ( VAR_2 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME file ) NAME file ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Account.Id ) TYPE com.google.gerrit.reviewdb.client.Account.Id ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , TYPE_3 . of ( VAR_1 ) , null , id , null ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , TYPE_3 . of ( VAR_1 ) , null , id , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND ( METHOD_3 ( ) ) != null ) COND ( METHOD_3 ( ) ) != null ( THEN THEN (  VAR_1 . append ( STRING_1 ) )  VAR_1 . append ( STRING_1 ) (  VAR_1 . append ( METHOD_3 ( ) ) )  VAR_1 . append ( METHOD_3 ( ) ) (  VAR_1 . append ( STRING_2 ) )  VAR_1 . append ( STRING_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.NameKey ) TYPE TYPE_2.NameKey ( NAME projectName ) NAME projectName ) VAR VAR ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME base ) NAME base ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_3> ) TYPE java.util.List<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME message ) NAME message ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,java.io.IOException> ) RETURN TYPE_1<TYPE_2,java.io.IOException> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.Change ) TYPE com.google.gerrit.reviewdb.client.Change ( NAME change ) NAME change ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( VAR_1 . submit ( new TYPE_4 ( VAR_2 , change ) ) , VAR_3 ) ; )  return TYPE_3 . METHOD_2 ( VAR_1 . submit ( new TYPE_4 ( VAR_2 , change ) ) , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . onSuccess ( TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) )  VAR_2 . onSuccess ( TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  bind ( VAR_1 class ) . to ( VAR_2 class ) )  bind ( VAR_1 class ) . to ( VAR_2 class ) (  bind ( VAR_3 class ) )  bind ( VAR_3 class ) (  bind ( VAR_4 class ) )  bind ( VAR_4 class ) (  METHOD_2 ( ) . to ( VAR_4 class ) )  METHOD_2 ( ) . to ( VAR_4 class ) (  factory ( VAR_5 . Factory class ) )  factory ( VAR_5 . Factory class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) )  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) (  servlet = TYPE_5 . create ( repo ) )  servlet = TYPE_5 . create ( repo ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return config . METHOD_1 ( STRING_1 , name , VAR_1 , VAR_2 ) ; )  return config . METHOD_1 ( STRING_1 , name , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1.AccountGroup> ) TYPE java.util.List<TYPE_1.AccountGroup> ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . display ( result ) )  VAR_1 . display ( result ) (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME onSuccess ) NAME onSuccess ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( getValue ( ) ) )  TYPE_2 . METHOD_1 ( getValue ( ) ) (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ctx ) NAME ctx ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE com.google.gerrit.reviewdb.server.ReviewDb ) TYPE com.google.gerrit.reviewdb.server.ReviewDb ( NAME db ) NAME db ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  TYPE_2 . METHOD_2 ( i , VAR_1 ) )  TYPE_2 . METHOD_2 ( i , VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME notes ) NAME notes ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_2 ( METHOD_3 ( notes ) , VAR_1 ) . METHOD_4 ( ) ) . isEmpty ( ) )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_2 ( METHOD_3 ( notes ) , VAR_1 ) . METHOD_4 ( ) ) . isEmpty ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  METHOD_2 ( b , b . METHOD_3 ( ) ) )  METHOD_2 ( b , b . METHOD_3 ( ) ) (  assertEquals ( STRING_1 , b . METHOD_4 ( ) ) )  assertEquals ( STRING_1 , b . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , new TYPE_2 ( ) ) )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , new TYPE_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_2 . METHOD_4 ( STRING_1 , e ) )  VAR_2 . METHOD_4 ( STRING_1 , e ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME create ) NAME create ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2.ReviewDb ) TYPE TYPE_2.ReviewDb ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3.NameKey ) TYPE TYPE_3.NameKey ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4.Repository ) TYPE TYPE_4.Repository ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_5.RevCommit ) TYPE TYPE_5.RevCommit ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.PatchSet ) TYPE TYPE_2.PatchSet ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN org.eclipse.jgit.revwalk.RevWalk ) RETURN org.eclipse.jgit.revwalk.RevWalk ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( - 1 ) ) )  METHOD_2 ( ( - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) ) ; )  return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  d . METHOD_1 ( repo ) )  d . METHOD_1 ( repo ) (  com.google.common.truth.Truth.assertThat ( d . getValue ( ) ) . isEqualTo ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( d . getValue ( ) ) . isEqualTo ( VAR_1 ) (  return d ; )  return d ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3<TYPE_1> ) TYPE TYPE_3<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( new TYPE_3 < TYPE_2 > ( key , VAR_3 ) ) ) INIT = VAR_2 . get ( new TYPE_3 < TYPE_2 > ( key , VAR_3 ) ) ) VAR VAR (  return VAR_1 != null ? VAR_1 . METHOD_1 ( VAR_4 , VAR_5 ) : null ; )  return VAR_1 != null ? VAR_1 . METHOD_1 ( VAR_4 , VAR_5 ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) )  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE org.eclipse.jgit.lib.ObjectId ) TYPE org.eclipse.jgit.lib.ObjectId ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevWalk ) TYPE org.eclipse.jgit.revwalk.RevWalk ( NAME rw ) NAME rw ( INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK ( VAR VAR ( TYPE org.eclipse.jgit.revwalk.RevCommit ) TYPE org.eclipse.jgit.revwalk.RevCommit ( NAME commit ) NAME commit ( INIT = rw . parseCommit ( VAR_1 ) ) INIT = rw . parseCommit ( VAR_1 ) ) VAR VAR (  return VAR_2 . METHOD_2 ( db . get ( ) , rw , commit ) ; )  return VAR_2 . METHOD_2 ( db . get ( ) , rw , commit ) ; ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , ( VAR_3 + 1 ) , VAR_4 ) ; )  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , ( VAR_3 + 1 ) , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN com.google.gerrit.server.query.change.ChangeData ) RETURN com.google.gerrit.server.query.change.ChangeData ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new com.google.gerrit.server.query.change.ChangeData ( t . METHOD_2 ( ) . getParentKey ( ) ) ; )  return new com.google.gerrit.server.query.change.ChangeData ( t . METHOD_2 ( ) . getParentKey ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_2 . METHOD_2 ( VAR_1 ) ) COND TYPE_2 . METHOD_2 ( VAR_1 ) ( THEN THEN (  return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; )  return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = false )  VAR_1 = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) <= ( VAR_2 ) ) COND ( VAR_1 ) <= ( VAR_2 ) ( THEN THEN (  VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) )  VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) (  VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) )  VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) (  return false ; )  return false ; ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME apply ) NAME apply ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_6 ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ) ; )  return new TYPE_6 ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME view ) NAME view ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  view . METHOD_2 ( VAR_1 ) )  view . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( null ) ) INIT = TYPE_1 . METHOD_2 ( null ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) )  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME user ) NAME user ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = user . METHOD_2 ( ) ) INIT = user . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND TYPE_3 . METHOD_3 ( VAR_1 ) ) COND TYPE_3 . METHOD_3 ( VAR_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ( ELSE ELSE (  return VAR_3 . get ( VAR_1 ) ; )  return VAR_3 . get ( VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME in ) NAME in ( INIT = TYPE_3 . METHOD_2 ( ) ) INIT = TYPE_3 . METHOD_2 ( ) ) VAR VAR (  new TYPE_4 ( STRING_1 ) . id ( VAR_1 ) . METHOD_3 ( ) . data ( in ) . put ( VAR_2 ) )  new TYPE_4 ( STRING_1 ) . id ( VAR_1 ) . METHOD_3 ( ) . data ( in ) . put ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME user ) NAME user ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . create ( TYPE_3 . of ( db ) , VAR_1 . getId ( ) ) ; )  return VAR_2 . create ( TYPE_3 . of ( db ) , VAR_1 . getId ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ! ( METHOD_2 ( event ) ) ) && ( ( event . getRefName ( ) . METHOD_3 ( VAR_1 ) ) || ( event . getRefName ( ) . METHOD_3 ( VAR_2 ) ) ) ; )  return ( ! ( METHOD_2 ( event ) ) ) && ( ( event . getRefName ( ) . METHOD_3 ( VAR_1 ) ) || ( event . getRefName ( ) . METHOD_3 ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2.Key ) TYPE TYPE_2.Key ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) , null , 0 ) ; )  return TYPE_3 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) , null , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
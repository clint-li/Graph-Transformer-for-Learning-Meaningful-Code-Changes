( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 , VAR_2 , VAR_3 ) )  VAR_1 . METHOD_2 ( STRING_1 , VAR_2 , VAR_3 ) (  TYPE_1 . METHOD_1 ( ( VAR_2 ? VAR_3 : 0 ) ) )  TYPE_1 . METHOD_1 ( ( VAR_2 ? VAR_3 : 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( input ) ; )  return TYPE_1 . METHOD_2 ( input ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , e.getMessage ( ) ) , e ) ; )  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , e.getMessage ( ) ) , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME m ) NAME m ( INIT = VAR_1 . METHOD_2 ( VAR_2 ) ) INIT = VAR_1 . METHOD_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_3 ( m ) )  VAR_1 . METHOD_3 ( m ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( config ) ; )  return service . METHOD_1 ( config ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME y ) NAME y ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( WHILE WHILE ( COND ( VAR_2 -- ) > 0 ) COND ( VAR_2 -- ) > 0 ( BLOCK BLOCK (  x [ VAR_2 ] ^= y [ ( VAR_1 + VAR_2 ) ] )  x [ VAR_2 ] ^= y [ ( VAR_1 + VAR_2 ) ] ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN byte ) RETURN byte ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return get ( METHOD_1 ( METHOD_2 ( i ) ) ) ; )  return get ( METHOD_1 ( METHOD_2 ( i ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME call ) NAME call ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_1 ( name , VAR_2 ) ) INIT = TYPE_2 . METHOD_1 ( name , VAR_2 ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND method . METHOD_2 ( ) ) COND method . METHOD_2 ( ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_3 ( method ) ; )  return METHOD_3 ( method ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) )  METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = TYPE_3 . METHOD_2 ( key . toString ( ) ) )  VAR_2 = TYPE_3 . METHOD_2 ( key . toString ( ) ) (  VAR_3 [ VAR_2 ] = new TYPE_3 ( ) )  VAR_3 [ VAR_2 ] = new TYPE_3 ( ) (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 ) ; )  return METHOD_3 ( mContext , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( name . equals ( STRING_1 ) ) || ( name . METHOD_2 ( STRING_2 ) ) ) COND ( name . equals ( STRING_1 ) ) || ( name . METHOD_2 ( STRING_2 ) ) ( THEN THEN (  return VAR_1 . out ; )  return VAR_1 . out ; ) THEN THEN ) IF IF (  return new TYPE_2 ( name ) ; )  return new TYPE_2 ( name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return ( TYPE_1 . length ( ) ) / ( VAR_2 ) ; )  return ( TYPE_1 . length ( ) ) / ( VAR_2 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) )  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN int[] ) RETURN int[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  android.util.Log . i ( VAR_2 . TAG , VAR_1 ) )  android.util.Log . i ( VAR_2 . TAG , VAR_1 ) ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_3 ) NAME VAR_3 ( INIT = new android.content.Intent ( VAR_4 ) ) INIT = new android.content.Intent ( VAR_4 ) ) VAR VAR (  METHOD_3 ( VAR_3 ) )  METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( METHOD_2 ( ) , METHOD_3 ( ) , METHOD_4 ( ) ) ; )  return METHOD_1 ( METHOD_2 ( ) , METHOD_3 ( ) , METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( 3 ) ) INIT = Main . METHOD_3 ( 3 ) ) VAR VAR (  return VAR_1 | VAR_2 ; )  return VAR_1 | VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_3 . d ( STRING_1 , null ) )  TYPE_3 . d ( STRING_1 , null ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 = true )  VAR_3 = true ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME action ) NAME action ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND action . equals ( VAR_2 ) ) COND action . equals ( VAR_2 ) ( THEN THEN (  METHOD_3 ( VAR_3 ) )  METHOD_3 ( VAR_3 ) (  VAR_4 . METHOD_4 ( false ) )  VAR_4 . METHOD_4 ( false ) (  METHOD_5 ( VAR_1 ) )  METHOD_5 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) )  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_5 ( ) ) INIT = TYPE_3 . METHOD_5 ( ) ) VAR VAR (  TYPE_4 . METHOD_6 ( VAR_2 ) )  TYPE_4 . METHOD_6 ( VAR_2 ) (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( type ) == ( VAR_2 ) ) COND ( type ) == ( VAR_2 ) ( THEN THEN (  VAR_3 = id )  VAR_3 = id (  VAR_4 = VAR_1 )  VAR_4 = VAR_1 (  state = state )  state = state ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( 0 <= index ) && ( index < ( VAR_1 . length ) ) ) COND ( 0 <= index ) && ( index < ( VAR_1 . length ) ) ( THEN THEN (  VAR_2 = index )  VAR_2 = index ) THEN THEN ( ELSE ELSE (  VAR_2 = - 1 )  VAR_2 = - 1 ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 . METHOD_2 ( VAR_1 ) )  VAR_4 . METHOD_2 ( VAR_1 ) (  VAR_5 . METHOD_2 ( VAR_1 ) )  VAR_5 . METHOD_2 ( VAR_1 ) (  VAR_6 . METHOD_3 ( VAR_2 ) )  VAR_6 . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME source ) NAME source ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND source == null ) COND source == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return new TYPE_2 ( source , VAR_1 . METHOD_1 ( source ) ) ; )  return new TYPE_2 ( source , VAR_1 . METHOD_1 ( source ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , e , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , e , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.List<TYPE_2> ) RETURN TYPE_1.List<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3<TYPE_2> ) TYPE TYPE_3<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_4 . METHOD_2 ( ) ) INIT = TYPE_4 . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) (  METHOD_3 ( VAR_1 , VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_1 , VAR_4 , VAR_5 ) (  return VAR_1 . build ( ) ; )  return VAR_1 . build ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 (  VAR_6 = VAR_2 )  VAR_6 = VAR_2 (  VAR_7 = VAR_3 )  VAR_7 = VAR_3 (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( false ) ; )  return METHOD_1 ( false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_1 , config , VAR_2 ) ) INIT = METHOD_2 ( VAR_1 , config , VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_3 == 0 ) COND VAR_3 == 0 ( THEN THEN (  return VAR_4 ; )  return VAR_4 ; ) THEN THEN ) IF IF (  return new TYPE_4 ( VAR_3 ) ; )  return new TYPE_4 ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( FLOAT_1 ) ) INIT = Main . METHOD_2 ( FLOAT_1 ) ) VAR VAR (  return ( ( float ) ( VAR_1 ) ) ; )  return ( ( float ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , VAR_1 , false , 0 , 0 , 0 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , VAR_1 , false , 0 , 0 , 0 ) ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME action ) NAME action ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_3 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_3 ( STRING_1 ) ) VAR VAR (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.RuntimeException ) TYPE java.lang.RuntimeException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_2 . METHOD_4 ( ) )  TYPE_2 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( VAR_1 , VAR_1 , true ) )  t . METHOD_2 ( VAR_1 , VAR_1 , true ) (  args.out = TYPE_3 . METHOD_3 ( VAR_2 , t ) )  args.out = TYPE_3 . METHOD_3 ( VAR_2 , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ? null : new TYPE_1 ( new java.util.ArrayList < java.lang.String > ( VAR_1 . METHOD_3 ( ) ) ) ; )  return VAR_1 . METHOD_2 ( ) ? null : new TYPE_1 ( new java.util.ArrayList < java.lang.String > ( VAR_1 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.e ( VAR_2 . TAG , ( STRING_1 + ( VAR_1 . toString ( ) ) ) ) )  android.util.Log.e ( VAR_2 . TAG , ( STRING_1 + ( VAR_1 . toString ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( name ) + STRING_1 ) + ( METHOD_2 ( ) ) ) + STRING_2 ; )  return ( ( ( name ) + STRING_1 ) + ( METHOD_2 ( ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ( INIT = x - y ) INIT = x - y ) VAR VAR (  return VAR_2 + y ; )  return VAR_2 + y ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( false ) ; )  return TYPE_4 . METHOD_2 ( false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return INT_1 ; )  return INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , null , VAR_4 ) )  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , null , VAR_4 ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , 1 , STRING_1 , 9 ) )  METHOD_1 ( VAR_1 , 1 , STRING_1 , 9 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , null ) )  VAR_1 . METHOD_2 ( VAR_2 , null ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_3 . METHOD_4 ( METHOD_5 ( VAR_4 ) ) )  VAR_3 . METHOD_4 ( METHOD_5 ( VAR_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 = TYPE_3 . METHOD_2 ( key ) ) != null ) COND ( VAR_2 = TYPE_3 . METHOD_2 ( key ) ) != null ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ( INIT = new TYPE_1 ( VAR_1 ) ) INIT = new TYPE_1 ( VAR_1 ) ) VAR VAR (  VAR_2 = state )  VAR_2 = state (  event . device = METHOD_2 ( address ) )  event . device = METHOD_2 ( address ) (  METHOD_3 ( VAR_3 , event ) )  METHOD_3 ( VAR_3 , event ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME output ) NAME output ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( ) , java.lang.String.format ( VAR_1 , args ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( ) , java.lang.String.format ( VAR_1 , args ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( false ) ) INIT = VAR_2 . METHOD_2 ( false ) ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) )  VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) THEN THEN ) IF IF (  return VAR_2 . METHOD_4 ( VAR_1 ) ; )  return VAR_2 . METHOD_4 ( VAR_1 ) ; (  VAR_3 = VAR_4 )  VAR_3 = VAR_4 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( this ) )  TYPE_1 . METHOD_2 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  a . METHOD_2 ( id , METHOD_3 ( VAR_2 . get ( id ) ) ) )  a . METHOD_2 ( id , METHOD_3 ( VAR_2 . get ( id ) ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = new TYPE_2 ( mRS , res , VAR_2 ) )  VAR_1 = new TYPE_2 ( mRS , res , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_1 . i ( this , STRING_1 ) )  TYPE_1 . i ( this , STRING_1 ) (  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) (  VAR_5 . METHOD_3 ( VAR_3 , VAR_6 ) )  VAR_5 . METHOD_3 ( VAR_3 , VAR_6 ) (  VAR_2 = false )  VAR_2 = false ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_5 = VAR_6 [ VAR_2 ] )  VAR_5 = VAR_6 [ VAR_2 ] ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return this . < TYPE_1 > METHOD_2 ( VAR_1 [ i ] ) ; )  return this . < TYPE_1 > METHOD_2 ( VAR_1 [ i ] ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return TYPE_4 . METHOD_3 ( VAR_2 ) ; )  return TYPE_4 . METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return super . METHOD_1 ( ) ; )  return super . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return ( index >= 0 ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ VAR_1 . METHOD_2 ( ) ] : 0 ; )  return ( index >= 0 ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ VAR_1 . METHOD_2 ( ) ] : 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.e ( VAR_2 . TAG , ( STRING_1 + ( VAR_1 . length ) ) ) )  android.util.Log.e ( VAR_2 . TAG , ( STRING_1 + ( VAR_1 . length ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return METHOD_1 ( null ) ; )  return METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_3 ( e , null ) ) INIT = new TYPE_3 ( e , null ) ) VAR VAR (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_5 . METHOD_1 ( VAR_2 ) )  VAR_5 . METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME result ) NAME result ( INIT = true ) INIT = true ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  result = null instanceof TYPE_1 )  result = null instanceof TYPE_1 (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME format ) NAME format ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE -1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE -1 ( CASE CHAR_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE CHAR_1 ( CASE CHAR_2 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE CHAR_2 ( CASE CHAR_3 ( BLOCK BLOCK (  return format != ( VAR_2 ) ; )  return format != ( VAR_2 ) ; ) BLOCK BLOCK ) CASE CHAR_3 ( CASE CHAR_4 ( BLOCK BLOCK (  return format != ( VAR_2 ) ; )  return format != ( VAR_2 ) ; ) BLOCK BLOCK ) CASE CHAR_4 ( DEFAULT DEFAULT ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , true , null ) )  METHOD_3 ( VAR_1 , true , null ) (  TYPE_2 . fail ( ) )  TYPE_2 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) )  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND call . METHOD_2 ( ) ) COND call . METHOD_2 ( ) ( THEN THEN (  TYPE_2 . i ( this , STRING_1 , call ) )  TYPE_2 . i ( this , STRING_1 , call ) (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_2 . d ( this , STRING_2 , call ) )  TYPE_2 . d ( this , STRING_2 , call ) (  METHOD_3 ( call ) )  METHOD_3 ( call ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.e ( getName ( ) , s ) )  android.util.Log.e ( getName ( ) , s ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( TYPE_1 . METHOD_2 ( INT_1 ) , STRING_1 ) )  assertEquals ( TYPE_1 . METHOD_2 ( INT_1 ) , STRING_1 ) (  assertEquals ( TYPE_1 . METHOD_2 ( INT_2 ) , STRING_1 ) )  assertEquals ( TYPE_1 . METHOD_2 ( INT_2 ) , STRING_1 ) (  assertEquals ( TYPE_1 . METHOD_2 ( INT_3 ) , STRING_1 ) )  assertEquals ( TYPE_1 . METHOD_2 ( INT_3 ) , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ) COND ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( VAR_3 , VAR_4 ) )  METHOD_3 ( VAR_3 , VAR_4 ) (  METHOD_3 ( VAR_5 , VAR_4 ) )  METHOD_3 ( VAR_5 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_1 ) )  TYPE_2 . METHOD_3 ( VAR_1 ) (  TYPE_3 . assertTrue ( STRING_1 , TYPE_2 . METHOD_4 ( VAR_1 ) ) )  TYPE_3 . assertTrue ( STRING_1 , TYPE_2 . METHOD_4 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME d ) NAME d ( INIT = new TYPE_2 ( METHOD_2 ( ) , VAR_1 ) ) INIT = new TYPE_2 ( METHOD_2 ( ) , VAR_1 ) ) VAR VAR ( IF IF ( COND d . METHOD_3 ( ) ) COND d . METHOD_3 ( ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , obj ) ; )  return METHOD_3 ( mContext , obj ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  return VAR_1 instanceof TYPE_1 ? ( ( TYPE_1 ) ( VAR_1 ) ) : null ; )  return VAR_1 instanceof TYPE_1 ? ( ( TYPE_1 ) ( VAR_1 ) ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) ) )  VAR_3 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) (  assertTrue ( VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) ) (  assertFalse ( VAR_1 . METHOD_2 ( STRING_5 , STRING_4 ) ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_5 , STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( context , TYPE_3 . METHOD_2 ( context ) ) ; )  return new TYPE_1 ( context , TYPE_3 . METHOD_2 ( context ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND call . METHOD_2 ( ) ) COND call . METHOD_2 ( ) ( THEN THEN (  TYPE_2 . i ( this , STRING_1 , call ) )  TYPE_2 . i ( this , STRING_1 , call ) (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( call ) )  METHOD_3 ( call ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = new TYPE_1 . File ( VAR_1 ) )  this . VAR_1 = new TYPE_1 . File ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  return VAR_1 != null ? VAR_1 . METHOD_1 ( ) : 0 ; )  return VAR_1 != null ? VAR_1 . METHOD_1 ( ) : 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME data ) NAME data ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( data , offset , count ) ; )  return TYPE_1 . METHOD_2 ( data , offset , count ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return INT_1 - ( arg + INT_2 ) ; )  return INT_1 - ( arg + INT_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , METHOD_1 ( VAR_1 . METHOD_4 ( ) ) ) ; )  return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , METHOD_1 ( VAR_1 . METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  type . METHOD_1 ( VAR_1 class ) )  type . METHOD_1 ( VAR_1 class ) (  type . METHOD_1 ( VAR_2 class ) )  type . METHOD_1 ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) )  METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( null ) )  METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 , type ) ) INIT = METHOD_2 ( VAR_2 , type ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_3 , VAR_1 ) )  METHOD_3 ( VAR_3 , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( new TYPE_4 ( e ) ) ; )  throw new TYPE_1 ( new TYPE_4 ( e ) ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( 9 ) ) INIT = Main . METHOD_2 ( 9 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( 2 ) ) INIT = Main . METHOD_3 ( 2 ) ) VAR VAR (  return VAR_1 > > VAR_2 ; )  return VAR_1 > > VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME subId ) NAME subId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( subId ) ) INIT = TYPE_1 . METHOD_2 ( subId ) ) VAR VAR (  return METHOD_3 ( VAR_1 ) ; )  return METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return get ( key , null ) ; )  return get ( key , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME invoke ) NAME invoke ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return invoke ( VAR_1 , args , METHOD_1 ( ) ) ; )  return invoke ( VAR_1 , args , METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) )  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) ) THEN THEN ) IF IF ( IF IF ( COND ! ( METHOD_2 ( device ) ) ) COND ! ( METHOD_2 ( device ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1<?extendsTYPE_2> ) RETURN TYPE_1<?extendsTYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 ) ) ; )  return TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<java.lang.String> ) RETURN java.util.List<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_2 . get ( VAR_1 ) ; )  return VAR_2 . get ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return new TYPE_3 ( mContext , this , VAR_3 , VAR_1 , VAR_4 , new TYPE_4 ( this ) ) ; )  return new TYPE_3 ( mContext , this , VAR_3 , VAR_1 , VAR_4 , new TYPE_4 ( this ) ) ; ) THEN THEN ( ELSE ELSE (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME start ) NAME start ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  return data [ ( ( pos ) + 1 ) ] ; )  return data [ ( ( pos ) + 1 ) ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( args , TYPE_5 . METHOD_2 ( ) ) ; )  return METHOD_1 ( args , TYPE_5 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; )  return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_5 , VAR_6 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  METHOD_2 ( ) )  METHOD_2 ( ) ( BLOCK BLOCK (  TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_1 ) )  TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_1 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  mContext = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  mContext = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) == null ? super . METHOD_1 ( ) : VAR_2 ; )  return ( VAR_1 ) == null ? super . METHOD_1 ( ) : VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return verify ( VAR_1 , VAR_2 ) ; )  return verify ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  p . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) . VAR_3 ) )  p . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) . VAR_3 ) (  p . METHOD_2 ( STRING_2 , STRING_3 ) )  p . METHOD_2 ( STRING_2 , STRING_3 ) (  return p ; )  return p ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( - arg1 ) + ( - VAR_1 ) ; )  return ( - arg1 ) + ( - VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( ( VAR_3 = VAR_4 ) ) )  METHOD_3 ( ( VAR_3 = VAR_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) || ( ! ( VAR_2 ) ) ; )  return ( VAR_1 ) || ( ! ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<byte[],byte[]> ) RETURN TYPE_1<byte[],byte[]> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) ) != ( VAR_1 ) ) COND ( METHOD_2 ( ) ) != ( VAR_1 ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) )  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device ) ; )  return service . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( device ) )  METHOD_2 ( device ) (  METHOD_3 ( true ) )  METHOD_3 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 , null ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_3 , 0 ) )  VAR_2 . METHOD_2 ( VAR_3 , 0 ) (  VAR_2 . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 , STRING_1 ) )  VAR_2 . METHOD_3 ( VAR_4 , VAR_5 , VAR_6 , STRING_1 ) (  VAR_1 = true )  VAR_1 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = 0 )  VAR_1 = 0 (  VAR_2 = 0 )  VAR_2 = 0 ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ( INIT = VAR_3 ) INIT = VAR_3 ) VAR VAR (  args.out = ( ( byte ) ( ( java.lang.Integer . METHOD_2 ( ( x & INT_1 ) ) ) - INT_2 ) ) )  args.out = ( ( byte ) ( ( java.lang.Integer . METHOD_2 ( ( x & INT_1 ) ) ) - INT_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  args.out = ( ( short ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) )  args.out = ( ( short ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == ( VAR_2 ) ) COND ( VAR_1 ) == ( VAR_2 ) ( THEN THEN ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) ) THEN THEN ) IF IF (  VAR_4 . METHOD_1 ( ) )  VAR_4 . METHOD_1 ( ) (  VAR_1 = VAR_5 )  VAR_1 = VAR_5 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( address ) )  TYPE_1 . METHOD_2 ( address ) ) BLOCK BLOCK ( FINALLY FINALLY (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_3 ( ) , true , true , VAR_4 , VAR_5 , VAR_6 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_3 ( ) , true , true , VAR_4 , VAR_5 , VAR_6 ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return ( ( ( VAR_1 . toString ( ) ) + STRING_1 ) + ( f . toString ( ) ) ) + STRING_2 ; )  return ( ( ( VAR_1 . toString ( ) ) + STRING_1 ) + ( f . toString ( ) ) ) + STRING_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_2 . log ( STRING_1 ) )  TYPE_2 . log ( STRING_1 ) ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( 1 , 1 , 1 ) )  VAR_1 . METHOD_2 ( 1 , 1 , 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME getName ) NAME getName ( BLOCK BLOCK (  return method . METHOD_1 ( ) . getName ( ) ; )  return method . METHOD_1 ( ) . getName ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 ) INIT = VAR_4 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) (  VAR_4 . METHOD_4 ( VAR_5 , VAR_1 ) )  VAR_4 . METHOD_4 ( VAR_5 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log ( VAR_1 , arg ) )  log ( VAR_1 , arg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  return ; )  return ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND ( VAR_1 . METHOD_3 ( ) ) && ( METHOD_4 ( ) ) ) COND ( VAR_1 . METHOD_3 ( ) ) && ( METHOD_4 ( ) ) ( THEN THEN (  METHOD_5 ( ) )  METHOD_5 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  TYPE_2 . i ( STRING_1 , STRING_2 ) )  TYPE_2 . i ( STRING_1 , STRING_2 ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_2 = false )  VAR_2 = false (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = ( VAR_1 == null ) ? null : VAR_1 . METHOD_2 ( ) ) INIT = ( VAR_1 == null ) ? null : VAR_1 . METHOD_2 ( ) ) VAR VAR (  return ( VAR_3 != null ) && ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) ) ; )  return ( VAR_3 != null ) && ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return VAR_2 . METHOD_3 ( VAR_1 ) ? STRING_1 + name : name ; )  return VAR_2 . METHOD_3 ( VAR_1 ) ? STRING_1 + name : name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return index < ( VAR_2 . length ) ? VAR_2 [ index ] : 0 ; )  return index < ( VAR_2 . length ) ? VAR_2 [ index ] : 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  METHOD_2 ( ) . METHOD_3 ( VAR_1 ) )  METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND x ) COND x ( THEN THEN (  return 1 ; )  return 1 ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND y ) COND y ( THEN THEN (  return 2 ; )  return 2 ; ) THEN THEN ( ELSE ELSE (  return 3 ; )  return 3 ; ) ELSE ELSE ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) (  TYPE_2 . METHOD_3 ( ( STRING_1 + STRING_2 ) ) )  TYPE_2 . METHOD_3 ( ( STRING_1 + STRING_2 ) ) (  METHOD_4 ( VAR_2 , VAR_1 ) )  METHOD_4 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_3 = VAR_2 )  this . VAR_3 = VAR_2 (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[][] ) TYPE byte[][] ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE byte[][] ) TYPE byte[][] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( TYPE_1 . METHOD_2 ( expected ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) )  assertEquals ( TYPE_1 . METHOD_2 ( expected ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 = false )  VAR_2 = false (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_3 < java.lang.String > METHOD_2 ( ) , VAR_1 , VAR_2 ) )  METHOD_1 ( VAR_3 < java.lang.String > METHOD_2 ( ) , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME call ) NAME call ( BLOCK BLOCK (  server . METHOD_1 ( false ) )  server . METHOD_1 ( false ) ( TRY TRY ( BLOCK BLOCK (  server . METHOD_2 ( ) )  server . METHOD_2 ( ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME sb ) NAME sb ( INIT = new TYPE_1 ( 100 ) ) INIT = new TYPE_1 ( 100 ) ) VAR VAR (  sb.append ( METHOD_1 ( ) . getName ( ) ) )  sb.append ( METHOD_1 ( ) . getName ( ) ) (  sb.append ( VAR_1 ) )  sb.append ( VAR_1 ) (  return sb . toString ( ) ; )  return sb . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg > > > INT_1 ) & 7 ; )  return ( arg > > > INT_1 ) & 7 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) || ( METHOD_2 ( ) ) ; )  return ( VAR_1 ) || ( METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  new TYPE_2 ( ) . METHOD_2 ( element ) )  new TYPE_2 ( ) . METHOD_2 ( element ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , VAR_2 , status ) )  VAR_1 . METHOD_1 ( this , VAR_2 , status ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND ( VAR_2 ) == ( VAR_3 ) ) COND ( VAR_2 ) == ( VAR_3 ) ( THEN THEN (  VAR_1 -- )  VAR_1 -- (  VAR_1 -= 10 )  VAR_1 -= 10 ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , flags , VAR_3 , null , null ) )  METHOD_2 ( VAR_1 , VAR_2 , flags , VAR_3 , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) == null ) && ( VAR_2 ) ) COND ( ( VAR_1 ) == null ) && ( VAR_2 ) ( THEN THEN (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) )  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  tree . METHOD_1 ( ) )  tree . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1.File ) RETURN TYPE_1.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,java.lang.String> ) TYPE java.util.Map<java.lang.String,java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( test , VAR_1 ) )  VAR_2 . METHOD_2 ( test , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , 5 , 8 ) )  METHOD_2 ( STRING_1 , STRING_2 , 5 , 8 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( ) ) )  METHOD_2 ( METHOD_3 ( ) ) ( IF IF ( COND METHOD_4 ( METHOD_3 ( ) , STRING_1 ) ) COND METHOD_4 ( METHOD_3 ( ) , STRING_1 ) ( THEN THEN (  TYPE_1 . METHOD_5 ( STRING_2 , METHOD_3 ( ) , INT_1 ) )  TYPE_1 . METHOD_5 ( STRING_2 , METHOD_3 ( ) , INT_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ~ ( ~ arg ) ; )  return ~ ( ~ arg ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( netId >= 0 ) && ( netId < ( VAR_1 . length ) ) ) COND ( netId >= 0 ) && ( netId < ( VAR_1 . length ) ) ( THEN THEN (  return VAR_1 [ netId ] ; )  return VAR_1 [ netId ] ; ) THEN THEN ( ELSE ELSE (  return null ; )  return null ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 , arg ) )  VAR_2 . METHOD_1 ( VAR_1 , arg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; )  return METHOD_3 ( VAR_4 ) . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) )  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) (  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) )  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , true ) )  METHOD_2 ( STRING_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN (  VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) )  VAR_2 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ) THEN THEN ( ELSE ELSE ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . METHOD_2 ( null ) )  Main . METHOD_2 ( null ) (  Main . METHOD_2 ( VAR_1 ) )  Main . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME line ) NAME line ( INIT = METHOD_2 ( in ) ) INIT = METHOD_2 ( in ) ) VAR VAR ( IF IF ( COND ! ( line . METHOD_3 ( ) ) ) COND ! ( line . METHOD_3 ( ) ) ( THEN THEN (  throw new TYPE_2 ( ( STRING_1 + line ) ) ; )  throw new TYPE_2 ( ( STRING_1 + line ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 , 0 , callback , VAR_6 ) )  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 , 0 , callback , VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . VAR_1 ; )  return METHOD_2 ( ) . VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND type . METHOD_1 ( ) ) COND type . METHOD_1 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( IF IF ( COND METHOD_2 ( type ) ) COND METHOD_2 ( type ) ( THEN THEN (  type . METHOD_3 ( VAR_1 ) )  type . METHOD_3 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND type . METHOD_1 ( ) ) COND type . METHOD_1 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  type . METHOD_2 ( VAR_1 class ) )  type . METHOD_2 ( VAR_1 class ) (  type . METHOD_2 ( VAR_2 class ) )  type . METHOD_2 ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME m ) NAME m ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME c ) NAME c ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND c == null ) COND c == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) )  TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) , METHOD_2 ( STRING_9 ) ) )  assertEquals ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) , METHOD_2 ( STRING_9 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( ( ( TYPE_2 ) ( VAR_2 ) ) , VAR_1 ) ; )  return new TYPE_1 ( ( ( TYPE_2 ) ( VAR_2 ) ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_5 = VAR_2 )  VAR_5 = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ( INIT = null ) INIT = null ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( output ) )  TYPE_1 . METHOD_2 ( output ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.RuntimeException ) TYPE java.lang.RuntimeException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 5 , INT_1 , false ) )  t . METHOD_2 ( 5 , INT_1 , false ) (  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) )  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . METHOD_1 ( t ) ) COND TYPE_1 . METHOD_1 ( t ) ( THEN THEN ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( t ) ) INIT = TYPE_1 . METHOD_2 ( t ) ) VAR VAR (  t . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) )  t . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( ) ) INIT = VAR_3 . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME state ) NAME state ( INIT = TYPE_3 . METHOD_2 ( project ) ) INIT = TYPE_3 . METHOD_2 ( project ) ) VAR VAR (  return ( state . METHOD_3 ( ) ) == false ; )  return ( state . METHOD_3 ( ) ) == false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . size ( ) ) > 0 ; )  return ( VAR_1 . size ( ) ) > 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  TYPE_2 . METHOD_3 ( fd , VAR_1 , VAR_2 ) )  TYPE_2 . METHOD_3 ( fd , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) ^ ( VAR_2 . METHOD_1 ( ) ) ; )  return ( ( VAR_1 . METHOD_1 ( ) ) * INT_1 ) ^ ( VAR_2 . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( state , VAR_1 ) )  METHOD_2 ( state , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME res ) NAME res ( INIT = 0 ) INIT = 0 ) VAR VAR ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < length ) COND i < length ( UPDATE UPDATE (  i ++ )  i ++ ) UPDATE UPDATE ( BLOCK BLOCK (  res = ( res < < 1 ) + 1 )  res = ( res < < 1 ) + 1 ) BLOCK BLOCK ) FOR FOR (  return res ; )  return res ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_1 ) (  TYPE_2 . METHOD_2 ( VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_2 ) ( IF IF ( COND VAR_1 == VAR_2 ) COND VAR_1 == VAR_2 ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_3 ( VAR_2 ) ; )  return VAR_1 . METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return node . METHOD_2 ( VAR_1 ) ; )  return node . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 class ) )  TYPE_1 . METHOD_1 ( VAR_1 class ) (  TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_2 ( ) (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( new java.io.File ( TYPE_2 . METHOD_5 ( ) , STRING_3 ) ) . METHOD_6 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( new java.io.File ( TYPE_2 . METHOD_5 ( ) , STRING_3 ) ) . METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; )  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  VAR_3 = VAR_4 )  VAR_3 = VAR_4 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , false , false ) )  METHOD_2 ( false , false , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ! ( VAR_1 ) ) || ( VAR_2 . METHOD_1 ( ) ) ; )  return ( ! ( VAR_1 ) ) || ( VAR_2 . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( METHOD_3 ( packageName ) ) )  VAR_2 . METHOD_2 ( METHOD_3 ( packageName ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ( TRY TRY ( BLOCK BLOCK (  VAR_3 = java.lang.Integer.parseInt ( VAR_2 ) )  VAR_3 = java.lang.Integer.parseInt ( VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_3 = 0 )  VAR_3 = 0 ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) == ( VAR_1 ) ; )  return ( METHOD_2 ( ) ) == ( VAR_1 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME sb ) NAME sb ( INIT = new java.lang.StringBuilder ( INT_1 ) ) INIT = new java.lang.StringBuilder ( INT_1 ) ) VAR VAR (  TYPE_2 . append ( sb , node , 0 , VAR_1 ) )  TYPE_2 . append ( sb , node , 0 , VAR_1 ) (  return sb . toString ( ) ; )  return sb . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( STRING_1 ) )  VAR_1 . METHOD_1 ( STRING_1 ) (  verify ( VAR_2 ) . METHOD_1 ( STRING_2 , STRING_1 ) )  verify ( VAR_2 ) . METHOD_1 ( STRING_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . size ( ) ) <= 0 ) COND ( VAR_1 . size ( ) ) <= 0 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 = VAR_1 . METHOD_2 ( ) )  VAR_2 = VAR_1 . METHOD_2 ( ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; )  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME app ) NAME app ( INIT = TYPE_2 . METHOD_2 ( mContext ) ) INIT = TYPE_2 . METHOD_2 ( mContext ) ) VAR VAR ( IF IF ( COND app == null ) COND app == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME p ) NAME p ( INIT = new TYPE_3 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_2 , VAR_3 , VAR_4 ) ) INIT = new TYPE_3 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_2 , VAR_3 , VAR_4 ) ) VAR VAR (  METHOD_3 ( p ) )  METHOD_3 ( p ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ( ( VAR_1 ) | ( VAR_2 ) ) , VAR_3 , true , true ) )  METHOD_3 ( ( ( VAR_1 ) | ( VAR_2 ) ) , VAR_3 , true , true ) (  METHOD_3 ( VAR_4 , VAR_3 , true , false ) )  METHOD_3 ( VAR_4 , VAR_3 , true , false ) (  status = VAR_5 )  status = VAR_5 (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2[] ) TYPE TYPE_2[] ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( VAR_2 , STRING_1 ) )  VAR_1 . METHOD_3 ( VAR_2 , STRING_1 ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME verify ) NAME verify ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 ) ? METHOD_2 ( VAR_1 , VAR_2 ) : METHOD_3 ( VAR_1 , VAR_2 ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 ) ? METHOD_2 ( VAR_1 , VAR_2 ) : METHOD_3 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . d ( this , ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) + STRING_2 ) + msg ) , TYPE_1 . METHOD_3 ( VAR_1 ) ) )  TYPE_1 . d ( this , ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) + STRING_2 ) + msg ) , TYPE_1 . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_3 ( VAR_1 ) )  TYPE_1 . METHOD_3 ( VAR_1 ) (  TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) )  TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( ) . METHOD_2 ( 0 ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( false ) . METHOD_7 ( true ) . METHOD_8 ( false ) ; )  return new TYPE_2 ( ) . METHOD_2 ( 0 ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( false ) . METHOD_7 ( true ) . METHOD_8 ( false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) < 5 ) ) || ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; )  return ( ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) < 5 ) ) || ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , true , true , false ) )  METHOD_2 ( false , true , true , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( event . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 ) ; )  return TYPE_2 . METHOD_2 ( event . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 3 ] ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 3 ] ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( VAR_4 ) )  VAR_1 . METHOD_2 ( VAR_4 ) (  VAR_1 . METHOD_3 ( VAR_4 ) )  VAR_1 . METHOD_3 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( char ) ( value & INT_1 ) ) ; )  return ( ( char ) ( value & INT_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 . values ( ) ) IN VAR_3 . values ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR (  TYPE_1 . METHOD_4 ( ( STRING_1 + ( VAR_4 ) ) , VAR_4 , VAR_2 ) )  TYPE_1 . METHOD_4 ( ( STRING_1 + ( VAR_4 ) ) , VAR_4 , VAR_2 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 ( STRING_1 , INT_1 ) )  VAR_1 = new TYPE_1 ( STRING_1 , INT_1 ) (  VAR_2 = new TYPE_1 ( STRING_2 , INT_2 ) )  VAR_2 = new TYPE_1 ( STRING_2 , INT_2 ) (  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN char[] ) RETURN char[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 class ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 class ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME from ) NAME from ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME to ) NAME to ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( from ) ) INIT = TYPE_1 . METHOD_2 ( from ) ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( to ) ) INIT = TYPE_1 . METHOD_2 ( to ) ) VAR VAR (  return VAR_1 && ( ! VAR_2 ) ; )  return VAR_1 && ( ! VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg < < 0 ; )  return arg < < 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return element . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; )  return element . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ( INIT = VAR_1 . METHOD_2 ( 7 , e . METHOD_3 ( VAR_1 ) ) ) INIT = VAR_1 . METHOD_2 ( 7 , e . METHOD_3 ( VAR_1 ) ) ) VAR VAR (  return new TYPE_1 ( id , VAR_1 ) ; )  return new TYPE_1 ( id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME pkg ) NAME pkg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( pkg ) )  METHOD_2 ( pkg ) (  METHOD_3 ( pkg , 0 , VAR_1 ) )  METHOD_3 ( pkg , 0 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ) INIT = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ) VAR VAR ( IF IF ( COND ( VAR_1 == null ) || ( VAR_1 . METHOD_4 ( ) ) ) COND ( VAR_1 == null ) || ( VAR_1 . METHOD_4 ( ) ) ( THEN THEN (  METHOD_5 ( ) )  METHOD_5 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<android.bluetooth.BluetoothDevice> ) RETURN java.util.List<android.bluetooth.BluetoothDevice> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( WHILE WHILE ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( BLOCK BLOCK ) BLOCK BLOCK ) WHILE WHILE (  return VAR_2 . METHOD_2 ( new int [ ] { VAR_3 , VAR_4 , VAR_5 } ) ; )  return VAR_2 . METHOD_2 ( new int [ ] { VAR_3 , VAR_4 , VAR_5 } ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( name . length ( ) ) == 0 ) COND ( name . length ( ) ) == 0 ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return new TYPE_1 ( name , VAR_1 ) ; )  return new TYPE_1 ( name , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( 5 , VAR_1 ) )  assertEquals ( 5 , VAR_1 ) (  assertEquals ( 10 , VAR_2 ) )  assertEquals ( 10 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ( BLOCK BLOCK (  METHOD_3 ( t ) )  METHOD_3 ( t ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( context ) ? TYPE_3 . get ( TYPE_4 . METHOD_3 ( context ) . METHOD_4 ( ) ) : null ; )  return TYPE_2 . METHOD_2 ( context ) ? TYPE_3 . get ( TYPE_4 . METHOD_3 ( context ) . METHOD_4 ( ) ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( ( ( TYPE_1 ) ( x ) ) ) ; )  return METHOD_1 ( ( ( TYPE_1 ) ( x ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) (  METHOD_5 ( false ) )  METHOD_5 ( false ) (  METHOD_6 ( ) )  METHOD_6 ( ) (  METHOD_7 ( ) )  METHOD_7 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( CHAR_1 ) ) + 1 ) ) ; )  return VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( CHAR_1 ) ) + 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( ) , VAR_1 ) )  METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.renderscript.Allocation ) TYPE android.renderscript.Allocation ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( 0 , null , VAR_1 , null ) )  METHOD_1 ( 0 , null , VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 ) ; )  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . context = context )  this . context = context (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_1 , VAR_2 ) ) COND METHOD_2 ( VAR_1 , VAR_2 ) ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 , VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_1 , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = msg.arg1 ) INIT = msg.arg1 ) VAR VAR ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  assertEquals ( ( ( int ) ( VAR_2 ) ) , VAR_1 ) )  assertEquals ( ( ( int ) ( VAR_2 ) ) , VAR_1 ) ) THEN THEN ) IF IF (  METHOD_2 ( VAR_1 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( STRING_1 , STRING_2 ) ) COND METHOD_2 ( STRING_1 , STRING_2 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_3 ) , VAR_1 , VAR_2 ) )  METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_3 ) , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , type , method ) )  METHOD_2 ( VAR_1 , type , method ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , 9 , STRING_2 , 6 ) )  METHOD_2 ( STRING_1 , 9 , STRING_2 , 6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ( INIT = java.lang.String.format ( format , VAR_1 ) ) INIT = java.lang.String.format ( format , VAR_1 ) ) VAR VAR (  TYPE_1 . METHOD_2 ( VAR_2 , s ) )  TYPE_1 . METHOD_2 ( VAR_2 , s ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! VAR_3 ) COND ! VAR_3 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_4 . METHOD_2 ( VAR_2 ) )  VAR_4 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME on ) NAME on ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) != on ) COND ( VAR_1 . METHOD_2 ( ) ) != on ( THEN THEN (  TYPE_1 . i ( this , STRING_1 , on ) )  TYPE_1 . i ( this , STRING_1 , on ) (  VAR_1 . METHOD_1 ( on ) )  VAR_1 . METHOD_1 ( on ) (  VAR_2 . METHOD_3 ( on ) )  VAR_2 . METHOD_3 ( on ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( VAR_3 ) ) INIT = VAR_1 . METHOD_2 ( VAR_3 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  result . METHOD_3 ( VAR_2 ) )  result . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF (  VAR_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) )  VAR_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_1 = METHOD_3 ( ) )  VAR_1 = METHOD_3 ( ) (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 (  VAR_4 = VAR_5 )  VAR_4 = VAR_5 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) >= ( VAR_3 ) ) COND ( VAR_2 ) >= ( VAR_3 ) ( THEN THEN (  return VAR_4 ; )  return VAR_4 ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ( INIT = VAR_1 . METHOD_2 ( VAR_6 , false ) ) INIT = VAR_1 . METHOD_2 ( VAR_6 , false ) ) VAR VAR (  return VAR_5 ? VAR_4 : VAR_7 ; )  return VAR_5 ? VAR_4 : VAR_7 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) == null ) COND ( VAR_3 ) == null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ( ELSE ELSE (  METHOD_3 ( VAR_2 , false ) )  METHOD_3 ( VAR_2 , false ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ) || ( ( this ) == ( VAR_3 ) ) ; )  return ( ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ) || ( ( this ) == ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,java.lang.String> ) TYPE java.util.Map<java.lang.String,java.lang.String> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( true ) )  VAR_3 . METHOD_2 ( true ) (  METHOD_3 ( VAR_4 , VAR_1 ) )  METHOD_3 ( VAR_4 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME c ) NAME c ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND c == null ) COND c == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN short ) RETURN short ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?extendsTYPE_2> ) TYPE java.lang.Class<?extendsTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR (  return METHOD_4 ( VAR_2 , new TYPE_4 ( ) ) ; )  return METHOD_4 ( VAR_2 , new TYPE_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  METHOD_3 ( VAR_1 , VAR_2 ) )  METHOD_3 ( VAR_1 , VAR_2 ) ) THEN THEN ( ELSE ELSE (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( i ) ) ; )  return METHOD_2 ( METHOD_3 ( i ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( context , TYPE_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) , VAR_1 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( context , TYPE_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( name , VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_1 ( name , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( this , false ) )  TYPE_1 . METHOD_2 ( this , false ) (  TYPE_1 . METHOD_3 ( this ) )  TYPE_1 . METHOD_3 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( this . VAR_1 ) == null ) COND ( this . VAR_1 ) == null ( THEN THEN (  this . VAR_1 = METHOD_2 ( ) )  this . VAR_1 = METHOD_2 ( ) ) THEN THEN ) IF IF (  return this . VAR_1 ; )  return this . VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  TYPE_3 . METHOD_3 ( fd , address , VAR_1 ) )  TYPE_3 . METHOD_3 ( fd , address , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( value == null ) || ( ! ( value . METHOD_2 ( ) ) ) ) COND ( value == null ) || ( ! ( value . METHOD_2 ( ) ) ) ( THEN THEN (  return value ; )  return value ; ) THEN THEN ) IF IF (  return new TYPE_1 ( value . METHOD_3 ( ) . METHOD_1 ( ) ) ; )  return new TYPE_1 ( value . METHOD_3 ( ) . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) == ( VAR_2 ) ; )  return ( VAR_1 ) == ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2,TYPE_2> ) RETURN TYPE_1<TYPE_2,TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( context ) ? TYPE_5 . get ( TYPE_6 . METHOD_3 ( context ) . METHOD_4 ( ) ) : null ; )  return TYPE_4 . METHOD_2 ( context ) ? TYPE_5 . get ( TYPE_6 . METHOD_3 ( context ) . METHOD_4 ( ) ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( i ) )  TYPE_1 . METHOD_2 ( i ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) )  METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.ArrayList<TYPE_1> ) RETURN java.util.ArrayList<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) )  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  TYPE_2 . METHOD_4 ( this ) )  TYPE_2 . METHOD_4 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_2 ) ) )  VAR_1 . METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , type , VAR_1 ) ; )  return METHOD_3 ( mContext , type , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = METHOD_2 ( ) )  VAR_2 = METHOD_2 ( ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_2 . METHOD_3 ( ) ) INIT = VAR_2 . METHOD_3 ( ) ) VAR VAR (  VAR_4 = STRING_1 + VAR_3 )  VAR_4 = STRING_1 + VAR_3 (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) >= ( VAR_2 ) ; )  return ( VAR_1 ) >= ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( value , VAR_1 ) ; )  return new TYPE_1 ( value , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) )  TYPE_1 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 , result ) (  METHOD_3 ( result ) )  METHOD_3 ( result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( false ) )  METHOD_1 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return args . METHOD_2 ( STRING_1 ) ; )  return args . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( null ) ; )  return METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) VAR VAR (  VAR_4 = in . METHOD_2 ( ) )  VAR_4 = in . METHOD_2 ( ) (  METHOD_3 ( INT_1 , 4 ) )  METHOD_3 ( INT_1 , 4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1<TYPE_2,TYPE_3> ) RETURN TYPE_1<TYPE_2,TYPE_3> ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_1 ( METHOD_2 ( index ) , METHOD_3 ( index ) ) ; )  return TYPE_4 . METHOD_1 ( METHOD_2 ( index ) , METHOD_3 ( index ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  throw new java.lang.RuntimeException ( STRING_1 ) ; )  throw new java.lang.RuntimeException ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_2> ) TYPE java.util.Set<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = session . METHOD_1 ( ) . METHOD_2 ( ) ) INIT = session . METHOD_1 ( ) . METHOD_2 ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME info ) NAME info ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  info . METHOD_3 ( STRING_1 ) )  info . METHOD_3 ( STRING_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( context , listener , TYPE_5 . METHOD_2 ( ) ) ; )  return TYPE_1 . METHOD_1 ( context , listener , TYPE_5 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 , STRING_2 ) , VAR_3 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 , STRING_2 ) , VAR_3 ) ) VAR VAR (  return p . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; )  return p . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( super . VAR_1 ) ) ; )  return ( ( TYPE_1 ) ( super . VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( number . length ( ) ) <= 20 ; )  return ( number . length ( ) ) <= 20 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME expected ) NAME expected ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( STRING_1 ) )  VAR_2 . METHOD_2 ( STRING_1 ) (  METHOD_3 ( TYPE_2 . METHOD_1 ( VAR_1 ) ) )  METHOD_3 ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . size ( ) ) == 0 ; )  return ( VAR_1 . size ( ) ) == 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , null , false , VAR_1 ) )  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , null , false , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( node . METHOD_2 ( VAR_1 class ) ) == null ) COND ( node . METHOD_2 ( VAR_1 class ) ) == null ( THEN THEN (  METHOD_3 ( node ) )  METHOD_3 ( node ) ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) )  METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) (  METHOD_2 ( STRING_2 , STRING_3 ) )  METHOD_2 ( STRING_2 , STRING_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean[] ) TYPE boolean[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( this ) )  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ( ELSE ELSE (  return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_3 ( VAR_3 class ) ) INIT = TYPE_1 . METHOD_3 ( VAR_3 class ) ) VAR VAR (  VAR_2 . METHOD_4 ( null , VAR_1 , true ) )  VAR_2 . METHOD_4 ( null , VAR_1 , true ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( STRING_1 , STRING_2 ) ) COND METHOD_2 ( STRING_1 , STRING_2 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME result ) NAME result ( INIT = TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_3 ) , VAR_1 ) . format ( INT_1 ) ) INIT = TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_3 ) , VAR_1 ) . format ( INT_1 ) ) VAR VAR (  METHOD_4 ( STRING_2 , STRING_4 , result ) )  METHOD_4 ( STRING_2 , STRING_4 , result ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_3 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_3 ( STRING_1 ) ) VAR VAR ( IF IF ( COND VAR_1 != 0 ) COND VAR_1 != 0 ( THEN THEN (  TYPE_1 . METHOD_4 ( VAR_1 ) )  TYPE_1 . METHOD_4 ( VAR_1 ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.io.File> ) TYPE java.util.List<java.io.File> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.io.IOException> ) TYPE java.util.List<java.io.IOException> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 , null , VAR_3 , true ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , null , VAR_3 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME response ) NAME response ( INIT = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR (  return new TYPE_1 ( response ) ; )  return new TYPE_1 ( response ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_3 ( ) . METHOD_4 ( 1 , true ) )  VAR_2 . METHOD_3 ( ) . METHOD_4 ( 1 , true ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != 0 ) COND ( VAR_1 ) != 0 ( THEN THEN (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( FINALLY FINALLY (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_2 ) != null ? new TYPE_1 ( VAR_1 ) : VAR_2 ; )  return ( VAR_2 ) != null ? new TYPE_1 ( VAR_1 ) : VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) (  Main . METHOD_4 ( ) )  Main . METHOD_4 ( ) (  Main . METHOD_5 ( ) )  Main . METHOD_5 ( ) (  java.lang.System.out.println ( STRING_2 ) )  java.lang.System.out.println ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( context ) )  TYPE_2 . METHOD_2 ( context ) ( IF IF ( COND ( VAR_1 ) >= ( VAR_2 ) ) COND ( VAR_1 ) >= ( VAR_2 ) ( THEN THEN (  TYPE_2 . METHOD_3 ( context ) )  TYPE_2 . METHOD_3 ( context ) ) THEN THEN ( ELSE ELSE (  TYPE_2 . METHOD_4 ( context ) )  TYPE_2 . METHOD_4 ( context ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , true ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME v ) NAME v ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) - 1 ) ) )  VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( ) ) - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) )  METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) (  VAR_2 = false )  VAR_2 = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( VAR_2 != ( VAR_3 ) ) ) COND ( VAR_1 != null ) && ( VAR_2 != ( VAR_3 ) ) ( THEN THEN (  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) THEN THEN ( ELSE ELSE (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME log ) NAME log ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . log ( log ) )  VAR_1 . log ( log ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) )  VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) (  METHOD_3 ( STRING_1 , VAR_1 ) )  METHOD_3 ( STRING_1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME values ) NAME values ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = values ) INIT = values ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return values = new TYPE_3 ( ) ; )  return values = new TYPE_3 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 & ( ( ( ( VAR_2 ) | ( VAR_3 ) ) | ( VAR_4 ) ) | ( VAR_5 ) ) )  this . VAR_1 = VAR_1 & ( ( ( ( VAR_2 ) | ( VAR_3 ) ) | ( VAR_4 ) ) | ( VAR_5 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - ( TYPE_2 . METHOD_1 ( a , VAR_1 ) ) ; )  return - ( TYPE_2 . METHOD_1 ( a , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( new TYPE_3 ( ) . build ( ) ) )  TYPE_2 . METHOD_2 ( new TYPE_3 ( ) . build ( ) ) (  VAR_1 = null )  VAR_1 = null (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME expectEquals ) NAME expectEquals ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND expected != result ) COND expected != result ( THEN THEN (  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; )  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_3 ( name ) ) INIT = METHOD_3 ( name ) ) VAR VAR (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) (  VAR_2 . METHOD_5 ( VAR_1 ) )  VAR_2 . METHOD_5 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME values ) NAME values ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = values ) INIT = values ) VAR VAR (  return VAR_1 != null ? VAR_1 : ( values = new TYPE_3 ( ) ) ; )  return VAR_1 != null ? VAR_1 : ( values = new TYPE_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME scheduler ) NAME scheduler ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ( INIT = scheduler . METHOD_3 ( ) ) INIT = scheduler . METHOD_3 ( ) ) VAR VAR (  request . METHOD_4 ( scheduler . METHOD_5 ( ) ) )  request . METHOD_4 ( scheduler . METHOD_5 ( ) ) (  return request ; )  return request ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  listener . METHOD_2 ( VAR_1 ) )  listener . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 . getName ( ) , VAR_1 . METHOD_2 ( ) ) ; )  return new TYPE_1 ( VAR_1 . getName ( ) , VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 (  METHOD_2 ( VAR_3 , VAR_4 , null ) )  METHOD_2 ( VAR_3 , VAR_4 , null ) (  METHOD_3 ( VAR_5 , null ) )  METHOD_3 ( VAR_5 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( IF IF ( COND VAR_2 . METHOD_2 ( ) . equals ( STRING_1 ) ) COND VAR_2 . METHOD_2 ( ) . equals ( STRING_1 ) ( THEN THEN (  return VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; )  return VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME assertEquals ) NAME assertEquals ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME expected ) NAME expected ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != expected ) COND VAR_1 != expected ( THEN THEN (  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; )  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_1 ( ( x - ( VAR_3 ) ) ) ; )  return VAR_2 . METHOD_1 ( ( x - ( VAR_3 ) ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , VAR_1 ) )  METHOD_3 ( mContext , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) )  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) ) THEN THEN ) IF IF (  return METHOD_2 ( TYPE_1 . METHOD_3 ( device ) ) ; )  return METHOD_2 ( TYPE_1 . METHOD_3 ( device ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return data [ ( ( pos ) + 2 ) ] ; )  return data [ ( ( pos ) + 2 ) ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_2 ( ) ; )  throw e . METHOD_2 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( ( ( parent ) instanceof com.android.jack.ir.ast.JMethod ) || ( ( parent ) instanceof TYPE_1 ) ) ) COND ! ( ( ( parent ) instanceof com.android.jack.ir.ast.JMethod ) || ( ( parent ) instanceof TYPE_1 ) ) ( THEN THEN (  throw new TYPE_2 ( this , STRING_1 ) ; )  throw new TYPE_2 ( this , STRING_1 ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  fail ( STRING_1 ) )  fail ( STRING_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN long[] ) RETURN long[] ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_1 ( ( ( TYPE_4 ) ( ( ( TYPE_5 ) ( VAR_1 ) ) . METHOD_2 ( ) ) ) ) ; )  return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_1 ( ( ( TYPE_4 ) ( ( ( TYPE_5 ) ( VAR_1 ) ) . METHOD_2 ( ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) (  VAR_1 . METHOD_1 ( TYPE_2 . METHOD_3 ( ) ) )  VAR_1 . METHOD_1 ( TYPE_2 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME call ) NAME call ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  server . METHOD_1 ( ) )  server . METHOD_1 ( ) (  assertFalse ( VAR_1 ) )  assertFalse ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK (  assertTrue ( VAR_1 ) )  assertTrue ( VAR_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this . VAR_2 ) )  VAR_1 . METHOD_2 ( this . VAR_2 ) (  VAR_1 . METHOD_2 ( this . VAR_3 ) )  VAR_1 . METHOD_2 ( this . VAR_3 ) (  VAR_1 . METHOD_3 ( this . VAR_4 ) )  VAR_1 . METHOD_3 ( this . VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<?extendsTYPE_1> ) TYPE java.util.List<?extendsTYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_4 < java.lang.String > METHOD_2 ( ) , VAR_2 , TYPE_3 . METHOD_3 ( VAR_3 ) ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_4 < java.lang.String > METHOD_2 ( ) , VAR_2 , TYPE_3 . METHOD_3 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) )  VAR_3 . METHOD_1 ( new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) (  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) COND VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( this ) )  VAR_1 . METHOD_1 ( this ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 [ ( ( ( VAR_2 ) - 1 ) & ( ( VAR_1 . length ) - 1 ) ) ] ; )  return VAR_1 [ ( ( ( VAR_2 ) - 1 ) & ( ( VAR_1 . length ) - 1 ) ) ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_3 ) < ( VAR_4 ) ) || ( VAR_1 . METHOD_1 ( VAR_2 ) ) ; )  return ( ( VAR_3 ) < ( VAR_4 ) ) || ( VAR_1 . METHOD_1 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return METHOD_2 ( ) . METHOD_1 ( ) ; )  return METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_3 , VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_3 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1> ) TYPE java.util.Set<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR (  return ( VAR_1 = VAR_2 ) == null ? VAR_2 = new TYPE_2 ( ) : VAR_1 ; )  return ( VAR_1 = VAR_2 ) == null ? VAR_2 = new TYPE_2 ( ) : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.Class[] ) TYPE java.lang.Class[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_4 ) ) )  assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( ) ; )  return new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_4 , VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_4 , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_3 ( ) ) INIT = VAR_3 . METHOD_3 ( ) ) VAR VAR (  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) ) (  assertEquals ( VAR_2 , true ) )  assertEquals ( VAR_2 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = e )  VAR_2 = e ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return ( METHOD_2 ( VAR_1 , false ) ) && ( METHOD_3 ( VAR_1 ) ) ; )  return ( METHOD_2 ( VAR_1 , false ) ) && ( METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_3 ( ) . METHOD_1 ( ) ; )  return TYPE_1 . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_4 ( ) ; )  throw e . METHOD_4 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . log ( VAR_1 , format , args ) )  TYPE_1 . log ( VAR_1 , format , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_2 ( VAR_1 ) ) COND VAR_2 . METHOD_2 ( VAR_1 ) ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK (  METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) )  METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) CATCH CATCH ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ( BLOCK BLOCK (  METHOD_5 ( t ) )  METHOD_5 ( t ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = - arg1 ) INIT = - arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ( INIT = - VAR_1 ) INIT = - VAR_1 ) VAR VAR (  return ( VAR_3 + VAR_4 ) | ( VAR_3 + VAR_4 ) ; )  return ( VAR_3 + VAR_4 ) | ( VAR_3 + VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_3 ( ) ) INIT = VAR_2 . METHOD_3 ( ) ) VAR VAR (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = mContext ) INIT = mContext ) VAR VAR (  mContext = 0 )  mContext = 0 (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) (  METHOD_6 ( VAR_3 ) )  METHOD_6 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertNotNull ( VAR_1 ) )  assertNotNull ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null ) )  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 . getName ( ) ) ; )  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 . getName ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  METHOD_3 ( VAR_3 , VAR_4 , ( - 1 ) ) )  METHOD_3 ( VAR_3 , VAR_4 , ( - 1 ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) . METHOD_6 ( false ) )  METHOD_5 ( ) . METHOD_6 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 . METHOD_2 ( s ) ) ) COND ! ( VAR_1 . METHOD_2 ( s ) ) ( THEN THEN (  METHOD_3 ( s , VAR_1 ) )  METHOD_3 ( s , VAR_1 ) ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) )  VAR_3 . METHOD_1 ( new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) , VAR_2 , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME fail ) NAME fail ( BLOCK BLOCK (  VAR_1 . println ( STRING_1 ) )  VAR_1 . println ( STRING_1 ) (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_2 ( ) ) != 0 ) ) )  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_2 ( ) ) != 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  android.util.Log . i ( VAR_3 . TAG , STRING_1 ) )  android.util.Log . i ( VAR_3 . TAG , STRING_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_4 = null )  VAR_4 = null (  VAR_5 = null )  VAR_5 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( test ) )  VAR_1 . METHOD_2 ( test ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( i ) ) ; )  return METHOD_2 ( METHOD_3 ( i ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_3 ( ) ; )  return new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( type ) ; )  return VAR_2 . METHOD_2 ( type ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + type ) ) ; )  return METHOD_3 ( ( STRING_1 + type ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , id , VAR_1 ) ; )  return METHOD_3 ( mContext , id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = false )  VAR_2 = false (  VAR_3 = test )  VAR_3 = test (  VAR_3 . run ( device , VAR_1 ) )  VAR_3 . run ( device , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_3 ) )  TYPE_2 . METHOD_1 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.io.File ( STRING_1 ) ) INIT = new java.io.File ( STRING_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME input ) NAME input ( INIT = new TYPE_1 ( VAR_1 ) ) INIT = new TYPE_1 ( VAR_1 ) ) VAR VAR (  assertTrue ( ( ( input . METHOD_2 ( ) ) == 0 ) ) )  assertTrue ( ( ( input . METHOD_2 ( ) ) == 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  return this . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; )  return this . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) > 0 ) COND ( VAR_3 ) > 0 ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_4 ) )  VAR_2 . METHOD_2 ( VAR_1 , method , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( x , y ) )  VAR_1 . METHOD_2 ( x , y ) ) THEN THEN ) IF IF (  METHOD_3 ( x , y ) )  METHOD_3 ( x , y ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , INT_1 ) )  METHOD_2 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , INT_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF (  VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) )  VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( - 1 ) == ( VAR_1 ) ) COND ( - 1 ) == ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) VAR VAR (  return VAR_3 . length ; )  return VAR_3 . length ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND type . METHOD_1 ( ) ) COND type . METHOD_1 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  type . METHOD_2 ( VAR_1 class ) )  type . METHOD_2 ( VAR_1 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_2 ( 3 ) )  VAR_2 . METHOD_2 ( 3 ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_2 ( ( - 1 ) ) )  VAR_2 . METHOD_2 ( ( - 1 ) ) (  VAR_2 . METHOD_3 ( ( - 1 ) ) )  VAR_2 . METHOD_3 ( ( - 1 ) ) ) ELSE ELSE ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME version ) NAME version ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( ( ( STRING_1 + version ) + STRING_2 ) , TYPE_1 . toString ( TYPE_2 . get ( version ) ) , TYPE_1 . toString ( VAR_1 ) ) )  assertEquals ( ( ( STRING_1 + version ) + STRING_2 ) , TYPE_1 . toString ( TYPE_2 . get ( version ) ) , TYPE_1 . toString ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( new TYPE_3 ( null , null , VAR_1 ) ) ; )  return new TYPE_2 ( new TYPE_3 ( null , null , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_4> ) TYPE java.util.List<TYPE_4> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = new TYPE_1 ( context , VAR_1 , VAR_2 , VAR_3 ) ) INIT = new TYPE_1 ( context , VAR_1 , VAR_2 , VAR_3 ) ) VAR VAR (  VAR_4 . METHOD_1 ( ) )  VAR_4 . METHOD_1 ( ) (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME subId ) NAME subId ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( subId , VAR_1 , true ) )  METHOD_1 ( subId , VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = TYPE_2 . METHOD_2 ( VAR_1 class ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 class ) ) VAR VAR (  org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) (  org.junit.Assert.assertEquals ( 0 , result . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( 0 , result . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return STRING_1 + ( VAR_1 ) ; )  return STRING_1 + ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 class ) )  VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME t ) NAME t ) VAR VAR ) INIT INIT ( COND ( t = METHOD_2 ( ) ) != null ) COND ( t = METHOD_2 ( ) ) != null ( BLOCK BLOCK (  t . METHOD_3 ( ) )  t . METHOD_3 ( ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return element . METHOD_2 ( VAR_1 ) ; )  return element . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( t , VAR_2 ) ; )  return VAR_1 . METHOD_2 ( t , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return a == b ; )  return a == b ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( IF IF ( COND ( VAR_1 . size ( ) ) == 0 ) COND ( VAR_1 . size ( ) ) == 0 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; )  return VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME loge ) NAME loge ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.e ( VAR_2 , ( STRING_1 + s ) ) )  android.util.Log.e ( VAR_2 , ( STRING_1 + s ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != VAR_1 ) COND ( VAR_2 ) != VAR_1 ( THEN THEN (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = key . toString ( ) )  VAR_2 = key . toString ( ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , STRING_2 , STRING_2 , STRING_2 ) )  METHOD_2 ( STRING_1 , STRING_2 , STRING_2 , STRING_2 , STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_2 ) != ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; )  return ( VAR_2 ) != ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = METHOD_3 ( ) . METHOD_4 ( null ) ) INIT = METHOD_3 ( ) . METHOD_4 ( null ) ) VAR VAR (  return r != null ? VAR_1 : false ; )  return r != null ? VAR_1 : false ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 ( IF IF ( COND ! ( METHOD_2 ( VAR_3 , VAR_4 , null ) ) ) COND ! ( METHOD_2 ( VAR_3 , VAR_4 , null ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( VAR_5 , null ) )  METHOD_3 ( VAR_5 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final ) MODIFIER private final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME app ) NAME app ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ( VAR_3 ) ++ )  ( VAR_3 ) ++ (  METHOD_2 ( app , VAR_1 , VAR_2 , 0 ) )  METHOD_2 ( app , VAR_1 , VAR_2 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME response ) NAME response ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( response ) )  VAR_1 . METHOD_2 ( response ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) )  VAR_1 . METHOD_1 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ; )  return METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_3 ( VAR_1 ) )  VAR_1 . METHOD_3 ( VAR_1 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_3 ) NAME VAR_3 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( ) ; )  return new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 , count , d ) )  METHOD_4 ( VAR_1 , count , d ) (  TYPE_1 . METHOD_5 ( VAR_2 ) )  TYPE_1 . METHOD_5 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 2 , 2 , false ) )  t . METHOD_2 ( 2 , 2 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) + ( METHOD_2 ( VAR_2 ) ) ; )  return ( METHOD_2 ( VAR_1 ) ) + ( METHOD_2 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) (  METHOD_3 ( VAR_1 , STRING_1 ) )  METHOD_3 ( VAR_1 , STRING_1 ) (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_1 ( device ) )  VAR_1 . METHOD_1 ( device ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND ! ( METHOD_2 ( mContext , VAR_2 ) ) ) COND ! ( METHOD_2 ( mContext , VAR_2 ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( true ) ; )  return VAR_1 . METHOD_2 ( true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( IN VAR_2 . values ( ) ) IN VAR_2 . values ( ) ( BLOCK BLOCK (  java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) )  java.lang.System.out.println ( ( STRING_1 + ( VAR_3 ) ) ) (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( int ) ( ( double ) ( value ) ) ) ; )  return ( ( int ) ( ( double ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = false )  VAR_2 = false (  VAR_3 . METHOD_1 ( VAR_1 , args ) )  VAR_3 . METHOD_1 ( VAR_1 , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.Map<java.lang.String,java.util.List<java.lang.String>> ) RETURN java.util.Map<java.lang.String,java.util.List<java.lang.String>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; )  return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , flags ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , flags ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return METHOD_2 ( VAR_1 ) ; )  return METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return STRING_1 ; )  return STRING_1 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND key != null ) COND key != null ( THEN THEN (  VAR_1 . METHOD_2 ( key ) )  VAR_1 . METHOD_2 ( key ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_3 ( true ) )  VAR_1 . METHOD_3 ( true ) (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 , VAR_4 ) )  TYPE_3 . METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.io.File> ) TYPE java.util.List<java.io.File> ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) (  METHOD_3 ( VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_4 , VAR_5 ) (  METHOD_3 ( VAR_6 , VAR_5 ) )  METHOD_3 ( VAR_6 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 ) ) VAR VAR (  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) )  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) (  METHOD_5 ( VAR_1 ) )  METHOD_5 ( VAR_1 ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE double ) TYPE double ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME result ) NAME result ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 . format ( number , result , 0 ) )  VAR_1 . format ( number , result , 0 ) (  METHOD_1 ( result , VAR_1 ) )  METHOD_1 ( result , VAR_1 ) (  return result . toString ( ) ; )  return result . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_1 . equals ( STRING_1 ) ) COND VAR_1 . equals ( STRING_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME ex ) NAME ex ( BLOCK BLOCK (  throw new java.lang.NullPointerException ( STRING_2 ) ; )  throw new java.lang.NullPointerException ( STRING_2 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ) ; )  return new TYPE_1 ( TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( VAR_1 ) ) )  call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( VAR_1 ) ) (  METHOD_5 ( VAR_2 ) )  METHOD_5 ( VAR_2 ) (  VAR_3 . METHOD_6 ( VAR_4 ) )  VAR_3 . METHOD_6 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( ( VAR_1 & INT_1 ) ) ) )  assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( ( VAR_1 & INT_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) != null ? VAR_1 . METHOD_1 ( ) : null ; )  return ( VAR_1 ) != null ? VAR_1 . METHOD_1 ( ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return type . METHOD_2 ( ) ; )  return type . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME from ) NAME from ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME from ) NAME from ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( this . VAR_1 , VAR_2 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( this . VAR_1 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( STRING_1 ) )  METHOD_3 ( STRING_1 ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME location ) NAME location ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  TYPE_3 . w ( STRING_1 ) )  TYPE_3 . w ( STRING_1 ) (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME os ) NAME os ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND os == null ) COND os == null ( THEN THEN (  throw new java.lang.NullPointerException ( ) ; )  throw new java.lang.NullPointerException ( ) ; ) THEN THEN ) IF IF (  METHOD_1 ( os , VAR_1 , STRING_1 ) )  METHOD_1 ( os , VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , TYPE_3 . format ( VAR_1 ) ) )  METHOD_2 ( STRING_1 , TYPE_3 . format ( VAR_1 ) ) (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME from ) NAME from ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = from )  this . VAR_1 = from ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  return VAR_3 . METHOD_2 ( VAR_1 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) ( IF IF ( COND METHOD_3 ( ) ) COND METHOD_3 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_3 . METHOD_4 ( ) . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_4 ( ) . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<java.lang.Class<?extendsTYPE_3>> ) TYPE TYPE_2<java.lang.Class<?extendsTYPE_3>> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_5 . METHOD_2 ( VAR_1 ) ; )  return TYPE_5 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ( INIT = VAR_1 . METHOD_2 ( 4 , e . METHOD_3 ( VAR_1 ) ) ) INIT = VAR_1 . METHOD_2 ( 4 , e . METHOD_3 ( VAR_1 ) ) ) VAR VAR (  return new TYPE_1 ( id , VAR_1 ) ; )  return new TYPE_1 ( id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( i ) , x ) )  METHOD_2 ( METHOD_3 ( i ) , x ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( c ) )  METHOD_2 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( flags ) & ( VAR_1 ) ) != 0 ; )  return ( ( flags ) & ( VAR_1 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_2 . METHOD_2 ( ) ) && ( TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ) ; )  return ( TYPE_2 . METHOD_2 ( ) ) && ( TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( ) . METHOD_2 ( null ) )  new TYPE_1 ( ) . METHOD_2 ( null ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  new TYPE_2 ( STRING_2 ) . METHOD_3 ( ) )  new TYPE_2 ( STRING_2 ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( long ) ( VAR_1 ) ) ; )  return ( ( long ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME s ) NAME s ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_3 ( s ) ) INIT = METHOD_3 ( s ) ) VAR VAR (  assertEquals ( s , VAR_1 ) )  assertEquals ( s , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( null , null , VAR_1 ) ; )  return TYPE_2 . METHOD_1 ( null , null , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME out ) NAME out ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  out . METHOD_2 ( VAR_1 ) )  out . METHOD_2 ( VAR_1 ) (  out . METHOD_2 ( ( ( VAR_1 ) - ( VAR_2 ) ) ) )  out . METHOD_2 ( ( ( VAR_1 ) - ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME provider ) NAME provider ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  provider . METHOD_2 ( STRING_1 , STRING_2 ) )  provider . METHOD_2 ( STRING_1 , STRING_2 ) (  provider . METHOD_2 ( STRING_3 , STRING_4 ) )  provider . METHOD_2 ( STRING_3 , STRING_4 ) (  provider . METHOD_2 ( STRING_5 , STRING_6 ) )  provider . METHOD_2 ( STRING_5 , STRING_6 ) (  provider . METHOD_2 ( STRING_7 , STRING_4 ) )  provider . METHOD_2 ( STRING_7 , STRING_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( ( VAR_2 ) == null ? STRING_1 : ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) + STRING_2 ) , java.lang.String.format ( msg , VAR_1 ) ) )  TYPE_1 . METHOD_2 ( ( ( VAR_2 ) == null ? STRING_1 : ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) + STRING_2 ) , java.lang.String.format ( msg , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  METHOD_3 ( type ) )  METHOD_3 ( type ) (  VAR_2 . METHOD_4 ( type ) )  VAR_2 . METHOD_4 ( type ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_2 ( VAR_3 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_3 ) ) VAR VAR (  METHOD_3 ( VAR_2 , VAR_4 , VAR_4 , VAR_5 , VAR_6 ) )  METHOD_3 ( VAR_2 , VAR_4 , VAR_4 , VAR_5 , VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) )  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) (  org.junit.Assert.assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg / ( - FLOAT_1 ) ; )  return arg / ( - FLOAT_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF (  VAR_4 . METHOD_2 ( VAR_5 , VAR_1 ) )  VAR_4 . METHOD_2 ( VAR_5 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , id , VAR_1 ) ; )  return METHOD_3 ( mContext , id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 6 ; )  return 6 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < 10 ) COND i < 10 ( UPDATE UPDATE (  ++ i )  ++ i ) UPDATE UPDATE ( BLOCK BLOCK (  Main . METHOD_1 ( INT_1 ) )  Main . METHOD_1 ( INT_1 ) (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) ) BLOCK BLOCK ) FOR FOR (  VAR_1 = false )  VAR_1 = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<com.android.jack.ir.ast.JDefinedClassOrInterface> ) RETURN TYPE_1<com.android.jack.ir.ast.JDefinedClassOrInterface> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<com.android.jack.ir.ast.JDefinedClassOrInterface> ) TYPE TYPE_2<com.android.jack.ir.ast.JDefinedClassOrInterface> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) INIT = new TYPE_3 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) VAR VAR (  return new TYPE_1 ( VAR_1 , VAR_2 , null ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( VAR_4 ) )  VAR_3 . METHOD_2 ( VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( in ) )  METHOD_2 ( in ) (  METHOD_3 ( out ) )  METHOD_3 ( out ) (  run ( ) )  run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == ( - 1 ) ) COND ( VAR_1 ) == ( - 1 ) ( THEN THEN (  VAR_1 = ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ? VAR_3 . id : VAR_4 . id )  VAR_1 = ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ? VAR_3 . id : VAR_4 . id ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static native ) MODIFIER static native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ! ( METHOD_2 ( ) ) ; )  return ! ( METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 2 , 16 , false ) )  t . METHOD_2 ( 2 , 16 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = TYPE_3 . METHOD_2 ( type , key . toString ( ) ) )  VAR_2 = TYPE_3 . METHOD_2 ( type , key . toString ( ) ) (  VAR_3 = null )  VAR_3 = null (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = STRING_2 ) INIT = STRING_2 ) VAR VAR (  assertEquals ( STRING_3 , VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) ) )  assertEquals ( STRING_3 , VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( STRING_1 ) ; )  return METHOD_2 ( STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) )  TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( float ) ( VAR_1 ) ) ; )  return ( ( float ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ( INIT = super . METHOD_1 ( c ) ) INIT = super . METHOD_1 ( c ) ) VAR VAR (  TYPE_2 . METHOD_2 ( s , VAR_1 ) )  TYPE_2 . METHOD_2 ( s , VAR_1 ) (  return s ; )  return s ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( VAR_2 , input , offset , VAR_1 ) )  TYPE_1 . METHOD_3 ( VAR_2 , input , offset , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( FLOAT_1 , VAR_1 . METHOD_2 ( ) , FLOAT_2 ) )  assertEquals ( FLOAT_1 , VAR_1 . METHOD_2 ( ) , FLOAT_2 ) (  assertEquals ( 4 , VAR_1 . METHOD_3 ( ) , 0 ) )  assertEquals ( 4 , VAR_1 . METHOD_3 ( ) , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final native ) MODIFIER public static final native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( value ) )  VAR_1 . METHOD_1 ( value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) )  VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( STRING_1 , STRING_2 ) )  android.util.Log.d ( STRING_1 , STRING_2 ) ) THEN THEN ) IF IF ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 += ( java.lang.String.format ( VAR_1 , args ) ) + STRING_1 )  VAR_2 += ( java.lang.String.format ( VAR_1 , args ) ) + STRING_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( STRING_1 ) ; )  return METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_1 , true ) )  METHOD_3 ( VAR_1 , true ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 [ 0 ] = b )  VAR_1 [ 0 ] = b ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME msg ) NAME msg ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  assertEquals ( STRING_1 , VAR_2 , msg . METHOD_3 ( ) ) )  assertEquals ( STRING_1 , VAR_2 , msg . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) (  TYPE_2 . METHOD_4 ( ) )  TYPE_2 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME entry ) NAME entry ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_3 = entry )  VAR_3 = entry (  METHOD_2 ( entry , VAR_2 ) )  METHOD_2 ( entry , VAR_2 ) ) THEN THEN ( ELSE ELSE (  VAR_4 = entry )  VAR_4 = entry (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) )  TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) (  TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) )  TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) (  TYPE_2 . METHOD_5 ( VAR_4 ) )  TYPE_2 . METHOD_5 ( VAR_4 ) (  TYPE_2 . METHOD_6 ( VAR_5 ) )  TYPE_2 . METHOD_6 ( VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  return super . METHOD_1 ( VAR_1 ) ; )  return super . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_1 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( ) )  VAR_1 = METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ) THEN THEN ( ELSE ELSE ( IF IF ( COND METHOD_3 ( ) ) COND METHOD_3 ( ) ( THEN THEN (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) COND ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ( THEN THEN (  throw new java.io.IOException ( ( STRING_1 + VAR_1 ) ) ; )  throw new java.io.IOException ( ( STRING_1 + VAR_1 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_2 . METHOD_2 ( context ) ) != null ; )  return ( TYPE_2 . METHOD_2 ( context ) ) != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . get ( VAR_1 . METHOD_3 ( ) ) ; )  return TYPE_1 . get ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME from ) NAME from ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( e.getMessage ( ) ) ; )  throw new TYPE_1 ( e.getMessage ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( null , new java.lang.String [ ] { STRING_1 } ) ) INIT = new TYPE_1 ( null , new java.lang.String [ ] { STRING_1 } ) ) VAR VAR (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  a . METHOD_2 ( id , VAR_1 ) )  a . METHOD_2 ( id , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) ( IF IF ( COND ( METHOD_3 ( ) ) == ( VAR_1 ) ) COND ( METHOD_3 ( ) ) == ( VAR_1 ) ( THEN THEN (  METHOD_4 ( VAR_2 ) )  METHOD_4 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null , null , true ) )  METHOD_2 ( VAR_1 , VAR_2 , null , null , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final ) MODIFIER public static final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( ( 8 * ( VAR_3 ) ) + ( VAR_4 ) ) + ( VAR_5 ) ) + ( 20 * ( VAR_4 ) ) ) INIT = ( ( ( 8 * ( VAR_3 ) ) + ( VAR_4 ) ) + ( VAR_5 ) ) + ( 20 * ( VAR_4 ) ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( null ) )  VAR_2 . METHOD_2 ( null ) (  VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) . METHOD_4 ( ) )  VAR_2 . METHOD_3 ( VAR_3 , VAR_1 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 4 ) INIT = 4 ) VAR VAR (  return ( TYPE_1 . METHOD_2 ( ( expected - VAR_1 ) ) ) <= VAR_2 ; )  return ( TYPE_1 . METHOD_2 ( ( expected - VAR_1 ) ) ) <= VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) != null ? VAR_1 . size ( ) : 0 ; )  return ( VAR_1 ) != null ? VAR_1 . size ( ) : 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) , null , null , false , false , null ) ) INIT = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) , null , null , false , false , null ) ) VAR VAR (  TYPE_3 . METHOD_4 ( result ) )  TYPE_3 . METHOD_4 ( result ) (  TYPE_4 . METHOD_5 ( VAR_3 ) )  TYPE_4 . METHOD_5 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( s ) )  super . METHOD_1 ( s ) (  TYPE_1 . METHOD_2 ( s , TYPE_2 . METHOD_3 ( ) ) )  TYPE_1 . METHOD_2 ( s , TYPE_2 . METHOD_3 ( ) ) (  TYPE_1 . METHOD_4 ( s , TYPE_2 . METHOD_5 ( ) ) )  TYPE_1 . METHOD_4 ( s , TYPE_2 . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME invoke ) NAME invoke ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  new Main ( ) . METHOD_3 ( ) )  new Main ( ) . METHOD_3 ( ) (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) ) || ( VAR_2 . METHOD_2 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ) ) || ( VAR_2 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_1 ( VAR_5 . METHOD_2 ( VAR_1 ) , VAR_2 ) ) INIT = VAR_4 . METHOD_1 ( VAR_5 . METHOD_2 ( VAR_1 ) , VAR_2 ) ) VAR VAR (  return VAR_3 == null ? VAR_3 : new TYPE_2 ( VAR_3 , VAR_5 ) ; )  return VAR_3 == null ? VAR_3 : new TYPE_2 ( VAR_3 , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN short[] ) RETURN short[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertFalse ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) )  assertFalse ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) (  assertTrue ( TYPE_1 . METHOD_2 ( STRING_6 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) )  assertTrue ( TYPE_1 . METHOD_2 ( STRING_6 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 [ 0 ] ; )  return VAR_1 [ 0 ] ; ) THEN THEN ( ELSE ELSE (  return VAR_2 ; )  return VAR_2 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( null ) )  VAR_2 . METHOD_2 ( null ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  listener . METHOD_2 ( state , VAR_1 ) )  listener . METHOD_2 ( state , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ( VAR_3 ) - > VAR_3 . METHOD_4 ( this , VAR_1 ) ) )  VAR_2 . METHOD_3 ( ( VAR_3 ) - > VAR_3 . METHOD_4 ( this , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 } ; )  return new java.lang.String [ ] { VAR_1 , VAR_2 , VAR_3 , VAR_4 } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return this . METHOD_1 ( project ) ; )  return this . METHOD_1 ( project ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  args.out = TYPE_2 . METHOD_2 ( VAR_1 ) )  args.out = TYPE_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( address , ( ( int ) ( size ) ) , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; )  return new TYPE_2 ( address , ( ( int ) ( size ) ) , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return type ; )  return type ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) COND ( VAR_1 . METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  c . METHOD_3 ( null , STRING_1 ) )  c . METHOD_3 ( null , STRING_1 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null , true ) )  METHOD_2 ( VAR_1 , VAR_2 , null , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg > > > 0 ; )  return arg > > > 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log . error ( null , VAR_1 ) )  log . error ( null , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean[] ) RETURN boolean[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean[] ) TYPE boolean[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  assertEquals ( VAR_1 , VAR_2 ) )  assertEquals ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_4 . METHOD_3 ( ) )  VAR_4 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR (  assertTrue ( ( ( i = 2 ) == 2 ) ) )  assertTrue ( ( ( i = 2 ) == 2 ) ) (  assertTrue ( ( i == 2 ) ) )  assertTrue ( ( i == 2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( null , name , VAR_1 , true ) ; )  return METHOD_2 ( null , name , VAR_1 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 , null ) )  TYPE_1 . METHOD_2 ( STRING_1 , null ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final ) MODIFIER public static final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = TYPE_2 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_2 . METHOD_2 ( STRING_1 ) ) VAR VAR (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME on ) NAME on ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( INT_1 ) )  a = Main . METHOD_2 ( INT_1 ) (  b = Main . METHOD_2 ( INT_2 ) )  b = Main . METHOD_2 ( INT_2 ) (  c = a - b )  c = a - b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  c . METHOD_2 ( STRING_1 , STRING_2 ) )  c . METHOD_2 ( STRING_1 , STRING_2 ) (  c . METHOD_3 ( null , STRING_3 ) )  c . METHOD_3 ( null , STRING_3 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME options ) NAME options ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = options + STRING_1 )  VAR_1 = options + STRING_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( i ) , x ) )  METHOD_2 ( METHOD_3 ( i ) , x ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_2 , s , VAR_2 , VAR_1 , fd , callback ) )  super . METHOD_1 ( VAR_2 , s , VAR_2 , VAR_1 , fd , callback ) (  VAR_3 [ 0 ] = session )  VAR_3 [ 0 ] = session ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME values ) NAME values ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_2 . METHOD_3 ( VAR_3 , 0 , VAR_3 , 0 , VAR_4 ) )  TYPE_2 . METHOD_3 ( VAR_3 , 0 , VAR_3 , 0 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , 0 ) )  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , 0 ) (  TYPE_1 . fail ( STRING_1 ) )  TYPE_1 . fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , false , true , new TYPE_4 ( VAR_2 , this . context . METHOD_3 ( ) ) ) ; )  return METHOD_2 ( VAR_1 , false , true , new TYPE_4 ( VAR_2 , this . context . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( value ) ; )  return VAR_2 . METHOD_2 ( value ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + value ) ) ; )  return METHOD_3 ( ( STRING_1 + value ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_2 . METHOD_2 ( VAR_2 ) ) - ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; )  return ( TYPE_2 . METHOD_2 ( VAR_2 ) ) - ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Class ) TYPE java.lang.Class ( NAME c ) NAME c ( INIT = VAR_1 class ) INIT = VAR_1 class ) VAR VAR (  assertEquals ( STRING_1 , c . getName ( ) ) )  assertEquals ( STRING_1 , c . getName ( ) ) (  assertEquals ( VAR_2 class , c ) )  assertEquals ( VAR_2 class , c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) (  VAR_1 . println ( STRING_1 ) )  VAR_1 . println ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_2 ) )  java.lang.System.out.println ( STRING_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ) COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ( THEN THEN (  return STRING_1 ; )  return STRING_1 ; ) THEN THEN ) IF IF (  return VAR_2 [ VAR_1 ] ; )  return VAR_2 [ VAR_1 ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == false ) COND ( VAR_1 ) == false ( THEN THEN ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND index >= 0 ) COND index >= 0 ( THEN THEN (  METHOD_3 ( index ) )  METHOD_3 ( index ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_4 == null ) COND VAR_4 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_6 = TYPE_2 . METHOD_2 ( VAR_3 ) )  VAR_6 = TYPE_2 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME version ) NAME version ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 ) > ( TYPE_1 . METHOD_2 ( version ) ) ; )  return ( VAR_1 ) > ( TYPE_1 . METHOD_2 ( version ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_5 . invoke ( null , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  VAR_5 . invoke ( null , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log . error ( null , STRING_1 , t ) )  log . error ( null , STRING_1 , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME event ) NAME event ) VAR VAR ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  a . METHOD_2 ( id , event , VAR_1 ) )  a . METHOD_2 ( id , event , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( double ) ( VAR_1 ) ) ; )  return ( ( double ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , ( ( count ) - ( VAR_1 . count ) ) ) ; )  return METHOD_2 ( VAR_1 , ( ( count ) - ( VAR_1 . count ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_4 . METHOD_1 ( project , VAR_1 , true ) )  TYPE_4 . METHOD_1 ( project , VAR_1 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME fail ) NAME fail ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( VAR_1 ) ; )  throw new TYPE_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  print ( STRING_1 ) )  print ( STRING_1 ) (  METHOD_2 ( x ) )  METHOD_2 ( x ) (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = new TYPE_1 < java.lang.Class < ? extends TYPE_2 > , TYPE_2 > ( ) )  VAR_2 = new TYPE_1 < java.lang.Class < ? extends TYPE_2 > , TYPE_2 > ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_5> ) TYPE java.util.List<TYPE_5> ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.io.File> ) TYPE java.util.List<java.io.File> ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE TYPE_6 ) TYPE TYPE_6 ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.Class> ) RETURN java.util.Set<java.lang.Class> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ? VAR_2 < java.lang.Class > METHOD_2 ( VAR_3 class ) : VAR_2 < java.lang.Class > METHOD_3 ( ) ; )  return VAR_1 ? VAR_2 < java.lang.Class > METHOD_2 ( VAR_3 class ) : VAR_2 < java.lang.Class > METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( ) ) INIT = Main . METHOD_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_3 ( VAR_1 ) )  TYPE_1 . METHOD_3 ( VAR_1 ) (  java.lang.System.out.println ( TYPE_1 . toString ( VAR_1 ) ) )  java.lang.System.out.println ( TYPE_1 . toString ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( new java.io.File ( VAR_2 , STRING_1 ) ) ) INIT = new TYPE_2 ( new java.io.File ( VAR_2 , STRING_1 ) ) ) VAR VAR (  VAR_1 . METHOD_2 ( new TYPE_3 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ) )  VAR_1 . METHOD_2 ( new TYPE_3 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.ArrayList<java.lang.String> ) TYPE java.util.ArrayList<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME on ) NAME on ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND callback == null ) COND callback == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . get ( VAR_3 , ( VAR_1 ? VAR_4 : VAR_5 ) ) ) INIT = TYPE_1 . get ( VAR_3 , ( VAR_1 ? VAR_4 : VAR_5 ) ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( this ) )  TYPE_1 . METHOD_2 ( this ) (  TYPE_1 . METHOD_3 ( this ) )  TYPE_1 . METHOD_3 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ( INIT = TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 , VAR_1 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 , VAR_1 ) ) VAR VAR (  return r != 0 ? new TYPE_1 ( r ) : null ; )  return r != 0 ? new TYPE_1 ( r ) : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) (  METHOD_1 ( VAR_1 , METHOD_3 ( VAR_1 , false ) , TYPE_2 . METHOD_4 ( VAR_1 ) ) )  METHOD_1 ( VAR_1 , METHOD_3 ( VAR_1 , false ) , TYPE_2 . METHOD_4 ( VAR_1 ) ) (  TYPE_1 . METHOD_5 ( VAR_2 ) )  TYPE_1 . METHOD_5 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , config , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , config , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ( FINALLY FINALLY (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.android.jack.ir.ast.JDefinedClassOrInterface ) RETURN com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) (  METHOD_2 ( VAR_4 , VAR_5 , VAR_6 , false ) )  METHOD_2 ( VAR_4 , VAR_5 , VAR_6 , false ) (  status = VAR_7 )  status = VAR_7 (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = arg1 )  VAR_3 = arg1 (  return super . METHOD_1 ( VAR_1 , arg1 , VAR_2 ) ; )  return super . METHOD_1 ( VAR_1 , arg1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) != 2 ; )  return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) != 2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( new TYPE_3 ( null , VAR_1 , VAR_2 ) ) ; )  return new TYPE_2 ( new TYPE_3 ( null , VAR_1 , VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME out ) NAME out ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  METHOD_1 ( out ) )  METHOD_1 ( out ) (  out . METHOD_2 ( ) )  out . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , args.out ) )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , args.out ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( type , VAR_1 , VAR_3 ) ) ) COND ! ( METHOD_2 ( type , VAR_1 , VAR_3 ) ) ( THEN THEN (  android.util.Log.e ( VAR_4 . TAG , STRING_1 ) )  android.util.Log.e ( VAR_4 . TAG , STRING_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_3 ) )  METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_4 ( e , VAR_3 ) )  METHOD_4 ( e , VAR_3 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_1> ) TYPE java.util.Map<java.lang.String,TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( METHOD_3 ( ) , VAR_3 < java.lang.String > METHOD_4 ( ) , VAR_4 ) ) INIT = VAR_2 . METHOD_2 ( METHOD_3 ( ) , VAR_3 < java.lang.String > METHOD_4 ( ) , VAR_4 ) ) VAR VAR (  org.junit.Assert.assertEquals ( 9 , VAR_1 . size ( ) ) )  org.junit.Assert.assertEquals ( 9 , VAR_1 . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , d ) )  METHOD_3 ( mContext , id , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = arg1 - VAR_1 ) INIT = arg1 - VAR_1 ) VAR VAR (  return ( - VAR_3 ) | ( - VAR_3 ) ; )  return ( - VAR_3 ) | ( - VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , 1 ) ) )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , 1 ) ) (  VAR_2 = new TYPE_3 ( ) )  VAR_2 = new TYPE_3 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  VAR_1 . METHOD_6 ( VAR_2 ) )  VAR_1 . METHOD_6 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME set ) NAME set ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  set ( r . x , r . y , r . w , r . h ) )  set ( r . x , r . y , r . w , r . h ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = device )  this . VAR_1 = device ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected synchronized ) MODIFIER protected synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) )  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log . METHOD_2 ( VAR_1 . TAG , STRING_2 ) )  android.util.Log . METHOD_2 ( VAR_1 . TAG , STRING_2 ) (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( true ) )  METHOD_4 ( true ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME result ) NAME result ( INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  result . METHOD_3 ( ( ( TYPE_2 ) ( e ) ) ) )  result . METHOD_3 ( ( ( TYPE_2 ) ( e ) ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return VAR_3 . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( x ) ) != 0 ) COND ( TYPE_1 . METHOD_2 ( x ) ) != 0 ( THEN THEN (  x [ 0 ] ^= VAR_1 )  x [ 0 ] ^= VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_3 ( path ) )  VAR_1 . METHOD_3 ( path ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . d ( VAR_2 , STRING_1 ) )  TYPE_1 . d ( VAR_2 , STRING_1 ) ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  android.os.AsyncResult . METHOD_2 ( VAR_1 , null , METHOD_3 ( e ) ) )  android.os.AsyncResult . METHOD_2 ( VAR_1 , null , METHOD_3 ( e ) ) (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_4 . METHOD_1 ( fd , VAR_1 , VAR_2 , 0 ) ; )  return TYPE_4 . METHOD_1 ( fd , VAR_1 , VAR_2 , 0 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME ex ) NAME ex ( BLOCK BLOCK (  throw new TYPE_6 ( ex ) ; )  throw new TYPE_6 ( ex ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME response ) NAME response ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) ) )  METHOD_2 ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( TYPE_1 . METHOD_3 ( new char [ ] { c } ) ) ; )  return METHOD_2 ( TYPE_1 . METHOD_3 ( new char [ ] { c } ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( ( STRING_1 . equals ( VAR_1 ) ) || ( STRING_2 . equals ( VAR_1 ) ) ) || ( STRING_3 . equals ( VAR_1 ) ) ) || ( STRING_4 . equals ( VAR_1 ) ) ; )  return ( ( ( STRING_1 . equals ( VAR_1 ) ) || ( STRING_2 . equals ( VAR_1 ) ) ) || ( STRING_3 . equals ( VAR_1 ) ) ) || ( STRING_4 . equals ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg & ( - 1 ) ; )  return arg & ( - 1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; )  return VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; ) THEN THEN ( ELSE ELSE (  android.util.Log.e ( TYPE_1 . TAG , STRING_2 ) )  android.util.Log.e ( TYPE_1 . TAG , STRING_2 ) (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,TYPE_3> ) RETURN TYPE_1<TYPE_2,TYPE_3> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_4 . METHOD_3 ( key , value ) ) )  VAR_1 . METHOD_2 ( TYPE_4 . METHOD_3 ( key , value ) ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , b ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , b ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 ) )  TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME name ) NAME name ( INIT = new TYPE_1 ( STRING_1 ) ) INIT = new TYPE_1 ( STRING_1 ) ) VAR VAR (  assertEquals ( ( - INT_1 ) , TYPE_2 . METHOD_2 ( name ) ) )  assertEquals ( ( - INT_1 ) , TYPE_2 . METHOD_2 ( name ) ) (  assertEquals ( ( - INT_2 ) , TYPE_2 . METHOD_3 ( name ) ) )  assertEquals ( ( - INT_2 ) , TYPE_2 . METHOD_3 ( name ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  return TYPE_2 . METHOD_1 ( e , VAR_1 , index , VAR_1 . length ) ; )  return TYPE_2 . METHOD_1 ( e , VAR_1 , index , VAR_1 . length ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( VAR_1 ) )  service . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != null ) && ( ( METHOD_2 ( VAR_1 ) ) == ( VAR_2 ) ) ) COND ( ( VAR_1 ) != null ) && ( ( METHOD_2 ( VAR_1 ) ) == ( VAR_2 ) ) ( THEN THEN (  log ( STRING_1 ) )  log ( STRING_1 ) (  METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) )  METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ) THEN THEN ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( long ) ( ( int ) ( value ) ) ) ; )  return ( ( long ) ( ( int ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( int ) ( ( value ) ^ ( ( value ) > > > INT_1 ) ) ) ; )  return ( ( int ) ( ( value ) ^ ( ( value ) > > > INT_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , 3 , STRING_2 , STRING_3 , STRING_4 ) )  METHOD_2 ( STRING_1 , 3 , STRING_2 , STRING_3 , STRING_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ! ( Main . METHOD_2 ( arg ) ) ; )  return ! ( Main . METHOD_2 ( arg ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_2 . METHOD_4 ( ) . METHOD_1 ( ) )  VAR_2 . METHOD_4 ( ) . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF (  return VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) ; )  return VAR_4 . METHOD_2 ( this , VAR_1 , false , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_1 ( VAR_1 ) ) INIT = VAR_3 . METHOD_1 ( VAR_1 ) ) VAR VAR ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  android.util.Log.e ( VAR_4 . TAG , STRING_1 ) )  android.util.Log.e ( VAR_4 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  os . METHOD_2 ( VAR_1 , VAR_2 ) )  os . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ( INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 ) ) VAR VAR (  return VAR_2 . METHOD_4 ( device ) ; )  return VAR_2 . METHOD_4 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 = METHOD_1 ( VAR_2 ) )  VAR_1 = METHOD_1 ( VAR_2 ) (  VAR_1 . METHOD_2 ( STRING_1 ) )  VAR_1 . METHOD_2 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) VAR VAR (  VAR_4 = in . METHOD_2 ( ) )  VAR_4 = in . METHOD_2 ( ) (  METHOD_3 ( INT_1 , 0 ) )  METHOD_3 ( INT_1 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME slotId ) NAME slotId ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  listener . METHOD_2 ( VAR_1 ) )  listener . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , d ) )  METHOD_3 ( mContext , id , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( VAR_1 , VAR_2 ) . METHOD_2 ( ) ; )  return new TYPE_3 ( VAR_1 , VAR_2 ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( IF IF ( COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_3 ) ) ) COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_3 ) ) ( THEN THEN (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[][] ) RETURN TYPE_1[][] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1[][] ) TYPE TYPE_1[][] ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  VAR_1 = new TYPE_1 [ METHOD_3 ( ) . length ] [ 0 ] )  VAR_1 = new TYPE_1 [ METHOD_3 ( ) . length ] [ 0 ] ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) (  mRS . METHOD_3 ( ) )  mRS . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( d ) )  TYPE_1 . METHOD_2 ( d ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ( ( byte ) ( VAR_1 ) ) ) ; )  return VAR_2 . METHOD_2 ( ( ( byte ) ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return STRING_1 + ( name ) ; )  return STRING_1 + ( name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_2 ( ) ) COND VAR_2 . METHOD_2 ( ) ( THEN THEN (  return METHOD_3 ( VAR_1 ) ; )  return METHOD_3 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_4 ( VAR_1 ) ; )  return METHOD_4 ( VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  java.lang.System.out.println ( ( ( location + STRING_1 ) + VAR_3 ) ) )  java.lang.System.out.println ( ( ( location + STRING_1 ) + VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null ) )  TYPE_1 . METHOD_2 ( null ) (  TYPE_1 . METHOD_3 ( null , 0 ) )  TYPE_1 . METHOD_3 ( null , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME values ) NAME values ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_2 . METHOD_3 ( values , 0 , VAR_3 , 0 , VAR_4 ) )  TYPE_2 . METHOD_3 ( values , 0 , VAR_3 , 0 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( TYPE_1 . METHOD_2 ( ) ) )  assertTrue ( TYPE_1 . METHOD_2 ( ) ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR (  METHOD_3 ( ( ( ( VAR_2 ) - ( cts ) ) - ( VAR_3 ) ) ) )  METHOD_3 ( ( ( ( VAR_2 ) - ( cts ) ) - ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME start ) NAME start ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( start , VAR_1 ) )  METHOD_2 ( start , VAR_1 ) ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_3 ( VAR_3 , start , VAR_1 ) ) INIT = TYPE_2 . METHOD_3 ( VAR_3 , start , VAR_1 ) ) VAR VAR (  return new TYPE_1 ( VAR_2 ) ; )  return new TYPE_1 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) )  TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.Class ) RETURN java.lang.Class ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = config )  VAR_1 = config (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  TYPE_1 . METHOD_3 ( VAR_1 class , VAR_2 ) )  TYPE_1 . METHOD_3 ( VAR_1 class , VAR_2 ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_3 . println ( STRING_1 ) )  VAR_3 . println ( STRING_1 ) (  e . METHOD_2 ( ) )  e . METHOD_2 ( ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_2 ) NAME VAR_2 ( INIT = new android.os.Bundle ( ) ) INIT = new android.os.Bundle ( ) ) VAR VAR (  VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) )  VAR_2 . METHOD_2 ( STRING_1 , VAR_3 ) (  VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) )  VAR_2 . METHOD_2 ( STRING_2 , VAR_1 ) (  VAR_4 . METHOD_3 ( STRING_3 , VAR_2 ) )  VAR_4 . METHOD_3 ( STRING_3 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return type ; )  return type ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<java.lang.Object> ) RETURN TYPE_1<java.lang.Object> ( NAME is ) NAME is ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . is ( type ) ; )  return TYPE_2 . is ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 . METHOD_2 ( ) , VAR_9 , true , VAR_10 , null , null , null ) ; )  return new TYPE_1 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 . METHOD_2 ( ) , VAR_9 , true , VAR_10 , null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME r ) NAME r ( INIT = METHOD_2 ( VAR_1 , true , false ) ) INIT = METHOD_2 ( VAR_1 , true , false ) ) VAR VAR (  return new TYPE_1 ( r . METHOD_3 ( ) , r . METHOD_4 ( ) , r . METHOD_5 ( ) ) ; )  return new TYPE_1 ( r . METHOD_3 ( ) , r . METHOD_4 ( ) , r . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , VAR_1 , new TYPE_1 ( STRING_2 . METHOD_3 ( ) ) ) )  METHOD_2 ( STRING_1 , VAR_1 , new TYPE_1 ( STRING_2 . METHOD_3 ( ) ) ) (  METHOD_4 ( STRING_3 , STRING_4 ) )  METHOD_4 ( STRING_3 , STRING_4 ) (  METHOD_5 ( FLOAT_1 ) )  METHOD_5 ( FLOAT_1 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( this , VAR_1 ) )  VAR_2 . METHOD_1 ( this , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ( INIT = x + y ) INIT = x + y ) VAR VAR (  return VAR_2 - y ; )  return VAR_2 - y ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME p ) NAME p ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND arg > FLOAT_1 ) COND arg > FLOAT_1 ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME target ) NAME target ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) COND VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ) COND ! ( METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( VAR_4 , VAR_5 ) )  METHOD_3 ( VAR_4 , VAR_5 ) (  METHOD_3 ( VAR_6 , VAR_5 ) )  METHOD_3 ( VAR_6 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME pm ) NAME pm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_5 ( ) ) INIT = new TYPE_5 ( ) ) VAR VAR (  this . VAR_2 . METHOD_2 ( VAR_1 ) )  this . VAR_2 . METHOD_2 ( VAR_1 ) (  return VAR_1 . METHOD_3 ( ) ; )  return VAR_1 . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return VAR_3 . METHOD_2 ( VAR_1 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( VAR_1 , STRING_1 ) ; )  return METHOD_3 ( VAR_1 , STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) + ( VAR_1 ) ) + ( TYPE_1 . METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ) ; )  return ( ( TYPE_1 . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) + ( VAR_1 ) ) + ( TYPE_1 . METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = VAR_1 . METHOD_1 ( VAR_2 ) ) INIT = VAR_1 . METHOD_1 ( VAR_2 ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) (  return null ; )  return null ; ) THEN THEN ) IF IF (  return service ; )  return service ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ) INIT = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ) VAR VAR (  VAR_3 . METHOD_2 ( p . getName ( ) ) )  VAR_3 . METHOD_2 ( p . getName ( ) ) (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . get ( value ) ; )  return TYPE_1 . METHOD_2 ( ) . get ( value ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = VAR_2 = in . METHOD_2 ( ) )  VAR_1 = VAR_2 = in . METHOD_2 ( ) (  VAR_3 = in . METHOD_2 ( ) )  VAR_3 = in . METHOD_2 ( ) (  VAR_4 = VAR_5 = VAR_1 )  VAR_4 = VAR_5 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) (  METHOD_5 ( false ) )  METHOD_5 ( false ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( null ) )  c . METHOD_2 ( null ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected synchronized ) MODIFIER protected synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  android.util.Log.d ( VAR_4 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_4 . TAG , STRING_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  device . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) )  device . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( 10 ) ) INIT = Main . METHOD_2 ( 10 ) ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( INT_1 ) ) INIT = Main . METHOD_3 ( INT_1 ) ) VAR VAR (  return VAR_1 | VAR_2 ; )  return VAR_1 | VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_2 = super . METHOD_3 ( ) )  VAR_2 = super . METHOD_3 ( ) (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME sb ) NAME sb ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  sb.append ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) )  sb.append ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != ( VAR_3 ) ) COND VAR_1 != ( VAR_3 ) ( THEN THEN (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_1 ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  assertTrue ( VAR_3 . METHOD_3 ( ) ) )  assertTrue ( VAR_3 . METHOD_3 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ( BLOCK BLOCK (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN int ) RETURN int ( NAME length ) NAME length ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) VAR VAR (  VAR_4 = in . METHOD_2 ( ) )  VAR_4 = in . METHOD_2 ( ) (  METHOD_3 ( INT_1 , 16 ) )  METHOD_3 ( INT_1 , 16 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_1 = VAR_2 . METHOD_2 ( ) )  VAR_1 = VAR_2 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getMessage ) NAME getMessage ( BLOCK BLOCK (  return ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( METHOD_1 ( ) . getMessage ( ) ) ; )  return ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( METHOD_1 ( ) . getMessage ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_4 == null ) COND VAR_4 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) )  VAR_4 . METHOD_3 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE 1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 , this , true ) )  VAR_2 . METHOD_2 ( VAR_3 , this , true ) (  break ; )  break ; ) BLOCK BLOCK ) CASE 1 ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( key ) ) INIT = VAR_2 . get ( key ) ) VAR VAR (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ) INIT = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ) VAR VAR (  VAR_1 . METHOD_4 ( VAR_3 ) )  VAR_1 . METHOD_4 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . d ( STRING_1 , STRING_2 , VAR_1 , VAR_2 ) )  TYPE_3 . d ( STRING_1 , STRING_2 , VAR_1 , VAR_2 ) (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( call . METHOD_5 ( ) . METHOD_6 ( ) ) ) )  call . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( call . METHOD_5 ( ) . METHOD_6 ( ) ) ) (  METHOD_7 ( VAR_1 ) )  METHOD_7 ( VAR_1 ) (  VAR_2 . METHOD_8 ( VAR_3 ) )  VAR_2 . METHOD_8 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ( INIT = new byte [ VAR_1 ] ) INIT = new byte [ VAR_1 ] ) VAR VAR (  TYPE_1 . METHOD_3 ( output ) )  TYPE_1 . METHOD_3 ( output ) (  return output ; )  return output ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_4 ( ) ) , VAR_2 . METHOD_5 ( ) ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) , TYPE_2 . METHOD_2 ( VAR_2 . METHOD_4 ( ) ) , VAR_2 . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) TYPE java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR (  return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_4 ( ) ) ; )  return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; )  return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return this . METHOD_1 ( ) ; )  return this . METHOD_1 ( ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  this . VAR_1 = true )  this . VAR_1 = true (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , status ) )  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , status ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , false ) ; )  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( i ) , x ) )  METHOD_2 ( METHOD_3 ( i ) , x ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static synchronized ) MODIFIER public static synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_2 , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( number , VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 , context ) ) ; )  return TYPE_2 . METHOD_1 ( number , VAR_1 , TYPE_2 . METHOD_2 ( VAR_2 , context ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME set ) NAME set ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( ( ( int ) ( address ) ) , ( ( int ) ( size ) ) , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; )  return new TYPE_2 ( ( ( int ) ( address ) ) , ( ( int ) ( size ) ) , ( ( TYPE_3 . METHOD_2 ( ) ) != ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) (  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) )  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + ( VAR_3 ) ) ) )  android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + ( VAR_3 ) ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( msg ) )  super . METHOD_1 ( msg ) ( IF IF ( COND ( VAR_1 ) == 0 ) COND ( VAR_1 ) == 0 ( THEN THEN (  this . VAR_2 . METHOD_2 ( this . VAR_2 . METHOD_3 ( 1 ) ) )  this . VAR_2 . METHOD_2 ( this . VAR_2 . METHOD_3 ( 1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  VAR_1 = new TYPE_3 ( VAR_3 ) )  VAR_1 = new TYPE_3 ( VAR_3 ) ) THEN THEN ( ELSE ELSE (  VAR_1 = new TYPE_4 ( VAR_3 ) )  VAR_1 = new TYPE_4 ( VAR_3 ) ) ELSE ELSE ) IF IF (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME location ) NAME location ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 = true )  VAR_2 = true (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( this , VAR_1 , VAR_2 , VAR_3 ) ; )  return new TYPE_1 ( this , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.io.File> ) RETURN TYPE_1<java.io.File> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( METHOD_3 ( ) , TYPE_3 . of ( METHOD_4 ( ) , METHOD_5 ( ) ) ) ; )  return TYPE_2 . METHOD_2 ( METHOD_3 ( ) , TYPE_3 . of ( METHOD_4 ( ) , METHOD_5 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  METHOD_2 ( ) )  METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { new java.io.File ( VAR_2 , STRING_1 ) . METHOD_3 ( ) } ) . METHOD_4 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { new java.io.File ( VAR_2 , STRING_1 ) . METHOD_3 ( ) } ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( true ) )  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( true ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  new TYPE_3 ( this ) . start ( ) )  new TYPE_3 ( this ) . start ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) ) )  VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , VAR_2 ) ; )  return METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND METHOD_3 ( ) ) COND METHOD_3 ( ) ( THEN THEN (  this . METHOD_4 ( ) )  this . METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return METHOD_1 ( ) ; )  return METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( this , true ) )  VAR_1 = TYPE_1 . METHOD_2 ( this , true ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_2 . METHOD_2 ( ) ) IN VAR_2 . METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( METHOD_4 ( VAR_3 ) ) )  VAR_1 . METHOD_3 ( METHOD_4 ( VAR_3 ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) )  VAR_1 . METHOD_2 ( new TYPE_1 ( ) ) (  VAR_1 . METHOD_3 ( new TYPE_2 ( ) ) )  VAR_1 . METHOD_3 ( new TYPE_2 ( ) ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_3 ( ) . METHOD_1 ( ) ; )  return TYPE_1 . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_4 ( ) ; )  throw e . METHOD_4 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = method . METHOD_2 ( VAR_2 ) ) INIT = method . METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 . METHOD_3 ( ) ; )  return VAR_1 . METHOD_3 ( ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( e ) )  super . METHOD_1 ( e ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 , VAR_1 , method ) )  METHOD_2 ( VAR_2 , VAR_1 , method ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND TYPE_2 . METHOD_2 ( VAR_1 ) ) COND TYPE_2 . METHOD_2 ( VAR_1 ) ( THEN THEN (  VAR_2 |= VAR_3 )  VAR_2 |= VAR_3 ) THEN THEN ) IF IF ( IF IF ( COND TYPE_2 . METHOD_3 ( VAR_1 ) ) COND TYPE_2 . METHOD_3 ( VAR_1 ) ( THEN THEN (  VAR_2 |= VAR_4 )  VAR_2 |= VAR_4 ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , 0 ) ) )  TYPE_1 . METHOD_2 ( expected , TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 , 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  callback . METHOD_2 ( state , VAR_1 ) )  callback . METHOD_2 ( state , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device , VAR_1 , VAR_2 , VAR_3 ) ; )  return service . METHOD_1 ( device , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_3 ( ) ) INIT = VAR_4 . METHOD_3 ( ) ) VAR VAR (  VAR_4 . METHOD_4 ( ) )  VAR_4 . METHOD_4 ( ) (  VAR_4 . METHOD_5 ( VAR_3 ) )  VAR_4 . METHOD_5 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) )  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_2 = TYPE_2 . METHOD_2 ( ) )  VAR_2 = TYPE_2 . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( ( ( VAR_2 ) != 0 ) ) )  TYPE_1 . METHOD_3 ( ( ( VAR_2 ) != 0 ) ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( key ) == null ) COND ( key ) == null ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( this . key . METHOD_3 ( ) ) ; )  return TYPE_2 . METHOD_2 ( this . key . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; )  return METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( 10 * arg ) * 11 ) * 12 ; )  return ( ( 10 * arg ) * 11 ) * 12 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 , VAR_4 ) )  VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME uri ) NAME uri ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 <= 0 ) COND VAR_1 <= 0 ( THEN THEN (  return METHOD_1 ( ) ; )  return METHOD_1 ( ) ; ) THEN THEN ) IF IF (  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_7 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , VAR_6 ) )  VAR_7 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 , VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  mContext . METHOD_2 ( VAR_1 , node , mContext . METHOD_3 ( node ) , ( STRING_1 + STRING_2 ) , null ) )  mContext . METHOD_2 ( VAR_1 , node , mContext . METHOD_3 ( node ) , ( STRING_1 + STRING_2 ) , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  listener . METHOD_1 ( request , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) )  listener . METHOD_1 ( request , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME n ) NAME n ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME h ) NAME h ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; )  return METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 . METHOD_2 ( listener ) ) == false ) COND ( VAR_2 . METHOD_2 ( listener ) ) == false ( THEN THEN (  VAR_2 . METHOD_3 ( listener ) )  VAR_2 . METHOD_3 ( listener ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 4 , INT_1 , false ) )  t . METHOD_2 ( 4 , INT_1 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( ) ) INIT = VAR_3 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME w ) NAME w ( INIT = METHOD_3 ( ) ) INIT = METHOD_3 ( ) ) VAR VAR (  w . METHOD_1 ( ) )  w . METHOD_1 ( ) (  VAR_4 . METHOD_4 ( VAR_2 ) )  VAR_4 . METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) )  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME locale ) NAME locale ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . METHOD_2 ( id ) ) INIT = TYPE_3 . METHOD_2 ( id ) ) VAR VAR (  return new TYPE_1 ( VAR_1 , TYPE_4 . METHOD_3 ( locale ) ) ; )  return new TYPE_1 ( VAR_1 , TYPE_4 . METHOD_3 ( locale ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  VAR_2 = null )  VAR_2 = null (  VAR_2 = new TYPE_1 ( VAR_1 ) )  VAR_2 = new TYPE_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( netId , STRING_1 ) ; )  return METHOD_2 ( netId , STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == 0 ) COND ( VAR_1 ) == 0 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND ( VAR_2 - ( VAR_1 ) ) > ( VAR_3 ) ) COND ( VAR_2 - ( VAR_1 ) ) > ( VAR_3 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_2 ) <= VAR_1 ) && ( VAR_1 <= ( VAR_3 ) ) ; )  return ( ( VAR_2 ) <= VAR_1 ) && ( VAR_1 <= ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME sb ) NAME sb ( INIT = new java.lang.StringBuilder ( ) ) INIT = new java.lang.StringBuilder ( ) ) VAR VAR (  sb.append ( ( ( ( getName ( ) ) + STRING_1 ) + ( METHOD_2 ( ) ) ) ) )  sb.append ( ( ( ( getName ( ) ) + STRING_1 ) + ( METHOD_2 ( ) ) ) ) (  return sb . toString ( ) ; )  return sb . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == 0 ) COND ( VAR_1 ) == 0 ( THEN THEN (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( STRING_1 ) ; )  return METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK (  TYPE_1 . d ( this , STRING_1 ) )  TYPE_1 . d ( this , STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = this . METHOD_2 ( ) ) INIT = this . METHOD_2 ( ) ) VAR VAR (  return VAR_2 != null ? VAR_2 . METHOD_3 ( ) : null ; )  return VAR_2 != null ? VAR_2 . METHOD_3 ( ) : null ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME item ) NAME item ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return new TYPE_3 ( new TYPE_4 ( VAR_4 . METHOD_3 ( ) , VAR_2 , VAR_3 ) ) ; )  return new TYPE_3 ( new TYPE_4 ( VAR_4 . METHOD_3 ( ) , VAR_2 , VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , false , null ) )  METHOD_3 ( VAR_1 , false , null ) (  TYPE_2 . fail ( ) )  TYPE_2 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return new TYPE_3 ( new TYPE_4 ( VAR_3 . METHOD_3 ( ) , null , VAR_2 ) ) ; )  return new TYPE_3 ( new TYPE_4 ( VAR_3 . METHOD_3 ( ) , null , VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = ( ( VAR_1 * INT_1 ) / 100 ) - INT_2 )  VAR_1 = ( ( VAR_1 * INT_1 ) / 100 ) - INT_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = 3 )  VAR_1 = 3 (  VAR_2 = 16 )  VAR_2 = 16 (  args.out = ( ( float ) ( TYPE_2 . METHOD_2 ( args . in ) ) ) )  args.out = ( ( float ) ( TYPE_2 . METHOD_2 ( args . in ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) (  VAR_3 . METHOD_3 ( VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_4 ) (  TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_2 ) )  TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_2 ) (  METHOD_6 ( VAR_2 ) )  METHOD_6 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ) INIT = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ) VAR VAR (  VAR_1 . METHOD_2 ( 11 ) )  VAR_1 . METHOD_2 ( 11 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . d ( STRING_1 , STRING_2 ) )  TYPE_1 . d ( STRING_1 , STRING_2 ) (  METHOD_2 ( true ) )  METHOD_2 ( true ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 ) )  METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 = false )  VAR_2 = false ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( address ) ; )  return TYPE_1 . METHOD_2 ( address ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_3 ( VAR_3 , null , false ) ) INIT = VAR_2 . METHOD_3 ( VAR_3 , null , false ) ) VAR VAR (  assertEquals ( 2 , VAR_1 . size ( ) ) )  assertEquals ( 2 , VAR_1 . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( null , VAR_1 , VAR_2 ) ; )  return TYPE_2 . METHOD_1 ( null , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( b ) )  VAR_1 . METHOD_3 ( b ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_1 ) ) THEN THEN ( ELSE ELSE (  METHOD_2 ( ( STRING_1 + VAR_1 ) ) )  METHOD_2 ( ( STRING_1 + VAR_1 ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , id , VAR_1 ) ; )  return METHOD_3 ( mContext , id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME input ) NAME input ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . from ( VAR_1 . METHOD_1 ( input ) ) ; )  return TYPE_1 . from ( VAR_1 . METHOD_1 ( input ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , id , VAR_1 ) ; )  return METHOD_3 ( mContext , id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log . METHOD_1 ( null , VAR_1 ) )  log . METHOD_1 ( null , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , true ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( a , x ) )  TYPE_2 . METHOD_2 ( a , x ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) ) )  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( name ) != null ? name . METHOD_1 ( ) : 0 ; )  return ( name ) != null ? name . METHOD_1 ( ) : 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( INT_1 , 3 ) )  METHOD_2 ( INT_1 , 3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  VAR_2 = TYPE_1 . METHOD_2 ( context , VAR_1 , VAR_3 ) )  VAR_2 = TYPE_1 . METHOD_2 ( context , VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND expected != result ) COND expected != result ( THEN THEN (  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; )  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_1 ) ) COND METHOD_2 ( VAR_1 ) ( THEN THEN (  TYPE_1 . METHOD_3 ( VAR_2 ) )  TYPE_1 . METHOD_3 ( VAR_2 ) ( TRY TRY ( BLOCK BLOCK (  VAR_3 . METHOD_4 ( ) )  VAR_3 . METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  TYPE_2 . w ( VAR_4 , STRING_1 ) )  TYPE_2 . w ( VAR_4 , STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  c . METHOD_2 ( null ) )  c . METHOD_2 ( null ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( STRING_1 ) ) INIT = new TYPE_1 ( STRING_1 ) ) VAR VAR (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_3 ( STRING_2 ) )  VAR_1 . METHOD_3 ( STRING_2 ) (  assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) ) )  assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME log ) NAME log ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_1 ( log ) ) COND METHOD_1 ( log ) ( THEN THEN (  VAR_1 . METHOD_2 ( STRING_1 , log ) )  VAR_1 . METHOD_2 ( STRING_1 , log ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( false ) ; )  return VAR_1 . METHOD_1 ( false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 = METHOD_2 ( true , STRING_1 ) )  VAR_1 = METHOD_2 ( true , STRING_1 ) (  TYPE_1 . fail ( ) )  TYPE_1 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_2 ( ( VAR_1 + VAR_2 ) ) ) - ( VAR_3 ) ; )  return ( METHOD_2 ( ( VAR_1 + VAR_2 ) ) ) - ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.IllegalArgumentException ) RETURN java.lang.IllegalArgumentException ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new java.lang.IllegalArgumentException ( ( ( ( STRING_1 + STRING_2 ) + s ) + STRING_3 ) ) ; )  throw new java.lang.IllegalArgumentException ( ( ( ( STRING_1 + STRING_2 ) + s ) + STRING_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; )  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_1 , VAR_2 , listener ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) )  METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) ) (  METHOD_2 ( STRING_2 , VAR_2 class . getName ( ) ) )  METHOD_2 ( STRING_2 , VAR_2 class . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  METHOD_3 ( METHOD_4 ( VAR_2 ) ) )  METHOD_3 ( METHOD_4 ( VAR_2 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( 10 ) ) INIT = Main . METHOD_2 ( 10 ) ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( INT_1 ) ) INIT = Main . METHOD_3 ( INT_1 ) ) VAR VAR (  return VAR_1 ^ VAR_2 ; )  return VAR_1 ^ VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  TYPE_3 . METHOD_2 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_1 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ( INIT = new TYPE_1 ( null , VAR_1 ) ) INIT = new TYPE_1 ( null , VAR_1 ) ) VAR VAR (  test . run ( ) )  test . run ( ) (  TYPE_2 . assertTrue ( ( ( test . METHOD_2 ( ) ) == ( VAR_2 ) ) ) )  TYPE_2 . assertTrue ( ( ( test . METHOD_2 ( ) ) == ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 . getName ( ) , new TYPE_2 ( VAR_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ) )  VAR_2 . METHOD_2 ( VAR_1 . getName ( ) , new TYPE_2 ( VAR_3 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK (  METHOD_1 ( VAR_3 , VAR_2 ) )  METHOD_1 ( VAR_3 , VAR_2 ) ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . log ( e , VAR_1 ) )  TYPE_2 . log ( e , VAR_1 ) (  TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) (  return new TYPE_3 ( VAR_3 , VAR_4 , VAR_1 , e ) ; )  return new TYPE_3 ( VAR_3 , VAR_4 , VAR_1 , e ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) instanceof TYPE_2 ) COND ( VAR_1 ) instanceof TYPE_2 ( THEN THEN (  return ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ; )  return ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ( INIT = new TYPE_1 ( null , VAR_1 , VAR_2 , METHOD_2 ( null ) , METHOD_3 ( packageName ) , METHOD_4 ( packageName ) ) ) INIT = new TYPE_1 ( null , VAR_1 , VAR_2 , METHOD_2 ( null ) , METHOD_3 ( packageName ) , METHOD_4 ( packageName ) ) ) VAR VAR (  METHOD_5 ( packageName ) )  METHOD_5 ( packageName ) (  METHOD_6 ( info ) )  METHOD_6 ( info ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . get ( VAR_2 ) . booleanValue ( ) , VAR_1 ) ) ; )  return new TYPE_1 ( METHOD_2 ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . get ( VAR_2 ) . booleanValue ( ) , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) COND VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ( THEN THEN (  METHOD_4 ( VAR_2 ) )  METHOD_4 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME response ) NAME response ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( response ) )  VAR_1 . METHOD_2 ( response ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_3 , VAR_2 ) ; )  return new TYPE_1 ( VAR_1 , VAR_3 , VAR_2 ) ; (  return new TYPE_1 ( VAR_1 , VAR_3 ) ; )  return new TYPE_1 ( VAR_1 , VAR_3 ) ; (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) )  VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) (  VAR_3 = new TYPE_3 ( true , false , VAR_4 ) )  VAR_3 = new TYPE_3 ( true , false , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( this ) ) COND VAR_1 . METHOD_2 ( this ) ( THEN THEN (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_4 ( this ) )  VAR_1 . METHOD_4 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , 0 , VAR_2 , VAR_3 , VAR_4 ) )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , 0 , VAR_2 , VAR_3 , VAR_4 ) (  VAR_5 = false )  VAR_5 = false ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 , ( - 1 ) , true ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , ( - 1 ) , true ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 ) . METHOD_2 ( null , null ) )  new TYPE_1 ( STRING_1 ) . METHOD_2 ( null , null ) (  fail ( ( STRING_2 + STRING_3 ) ) )  fail ( ( STRING_2 + STRING_3 ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + ( VAR_3 ) ) ) )  android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + ( VAR_3 ) ) ) ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( a ) )  TYPE_1 . METHOD_1 ( a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) )  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_3 ( fd , VAR_1 ) ; )  return TYPE_2 . METHOD_3 ( fd , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME msg ) NAME msg ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_1 ( VAR_1 ) )  METHOD_1 ( VAR_1 ) (  METHOD_1 ( VAR_2 ) )  METHOD_1 ( VAR_2 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( e.getMessage ( ) ) ; )  throw new TYPE_1 ( e.getMessage ( ) ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return VAR_1 class . METHOD_1 ( ) ; )  return VAR_1 class . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER static final ) MODIFIER static final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME locale ) NAME locale ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( locale ) ) INIT = TYPE_1 . METHOD_2 ( locale ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( locale ) ; )  return TYPE_1 . METHOD_3 ( locale ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( offset ) != 0 ) || ( ( size ) != ( VAR_1 . length ) ) ; )  return ( ( offset ) != 0 ) || ( ( size ) != ( VAR_1 . length ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_3 ) ) INIT = METHOD_2 ( VAR_3 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  VAR_4 . METHOD_3 ( VAR_2 , VAR_1 ) )  VAR_4 . METHOD_3 ( VAR_2 , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , VAR_1 , VAR_2 , value , status ) )  VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) , VAR_1 , VAR_2 , value , status ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN byte ) RETURN byte ( NAME get ) NAME get ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return get ( METHOD_1 ( METHOD_2 ( ) ) ) ; )  return get ( METHOD_1 ( METHOD_2 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = false )  VAR_1 = false (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = TYPE_2 . METHOD_2 ( VAR_1 class ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 class ) ) VAR VAR (  org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( 0 , result . METHOD_3 ( ) ) (  org.junit.Assert.assertEquals ( 2 , result . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( 2 , result . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( STRING_2 ) )  VAR_2 . METHOD_2 ( STRING_2 ) ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) COND ( VAR_1 . METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( STRING_1 , STRING_2 ) )  c . METHOD_2 ( STRING_1 , STRING_2 ) (  c . METHOD_3 ( null , STRING_3 ) )  c . METHOD_3 ( null , STRING_3 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , uid , VAR_2 , STRING_1 , VAR_3 , false , false ) ; )  return METHOD_1 ( VAR_1 , uid , VAR_2 , STRING_1 , VAR_3 , false , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME app ) NAME app ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.io.File ( VAR_2 , project ) ) INIT = new java.io.File ( VAR_2 , project ) ) VAR VAR (  TYPE_4 . METHOD_2 ( app , VAR_1 ) )  TYPE_4 . METHOD_2 ( app , VAR_1 ) (  return METHOD_3 ( app ) ; )  return METHOD_3 ( app ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( TYPE_2 . equals ( VAR_1 ) ) ? VAR_3 : VAR_4 ) INIT = ( TYPE_2 . equals ( VAR_1 ) ) ? VAR_3 : VAR_4 ) VAR VAR (  return TYPE_3 . METHOD_1 ( node , VAR_1 , VAR_2 ) ; )  return TYPE_3 . METHOD_1 ( node , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return element . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return element . METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( i ) ) ; )  return METHOD_2 ( METHOD_3 ( i ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final ) MODIFIER private final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = METHOD_2 ( r , false ) ) INIT = METHOD_2 ( r , false ) ) VAR VAR ( IF IF ( COND index < 0 ) COND index < 0 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return METHOD_1 ( r , index , VAR_1 ) ; )  return METHOD_1 ( r , index , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 , offset , length ) ; )  return VAR_2 . METHOD_1 ( VAR_1 , offset , length ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( VAR_2 ) ; )  throw new TYPE_1 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  a . METHOD_2 ( id ) )  a . METHOD_2 ( id ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 ) )  METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 ) (  METHOD_3 ( false ) )  METHOD_3 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( CONSTRUCTOR CONSTRUCTOR ( MODIFIER public ) MODIFIER public ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 . METHOD_2 ( VAR_1 ) )  this . VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) CONSTRUCTOR CONSTRUCTOR
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) )  VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , ( ( java.lang.String ) ( null ) ) , args ) )  METHOD_1 ( VAR_1 , ( ( java.lang.String ) ( null ) ) , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN double ) RETURN double ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 | ( VAR_2 & INT_1 ) ) INIT = VAR_1 | ( VAR_2 & INT_1 ) ) VAR VAR (  VAR_4 . log ( new TYPE_1 ( VAR_5 , VAR_3 ) ) )  VAR_4 . log ( new TYPE_1 ( VAR_5 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . equals ( VAR_2 ) ) || ( VAR_1 . equals ( ( ( VAR_2 ) + STRING_1 ) ) ) ; )  return ( VAR_1 . equals ( VAR_2 ) ) || ( VAR_1 . equals ( ( ( VAR_2 ) + STRING_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) )  VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) (  VAR_1 . METHOD_2 ( VAR_4 ) )  VAR_1 . METHOD_2 ( VAR_4 ) (  VAR_1 . METHOD_4 ( VAR_5 , STRING_1 , STRING_2 , STRING_3 ) )  VAR_1 . METHOD_4 ( VAR_5 , STRING_1 , STRING_2 , STRING_3 ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( offset ) ) & INT_1 ; )  return ( VAR_1 . METHOD_2 ( offset ) ) & INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return 0 - ( - arg ) ; )  return 0 - ( - arg ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ) ; )  return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return name . toString ( ) ; )  return name . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 (  VAR_4 = VAR_5 )  VAR_4 = VAR_5 (  VAR_6 = VAR_7 )  VAR_6 = VAR_7 (  VAR_8 = 8 )  VAR_8 = 8 (  VAR_9 = VAR_10 )  VAR_9 = VAR_10 (  VAR_11 = 0 )  VAR_11 = 0 (  VAR_12 = 0 )  VAR_12 = 0 (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) (  METHOD_3 ( true ) )  METHOD_3 ( true ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ) INIT = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) ) VAR VAR (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this . VAR_2 ) )  VAR_1 . METHOD_2 ( this . VAR_2 ) (  VAR_1 . METHOD_3 ( this . VAR_3 ) )  VAR_1 . METHOD_3 ( this . VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_3 ( VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_3 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ) COND VAR_3 . METHOD_2 ( VAR_1 , VAR_4 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  super . METHOD_1 ( VAR_1 , location , VAR_2 , data ) )  super . METHOD_1 ( VAR_1 , location , VAR_2 , data ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , ( ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , 0 ) ) != 0 ) ) )  METHOD_2 ( VAR_1 , ( ( TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , 0 ) ) != 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = value )  VAR_1 = value ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( TRY TRY ( BLOCK BLOCK (  VAR_1 [ n ] = obj )  VAR_1 [ n ] = obj ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME ex ) NAME ex ( BLOCK BLOCK (  METHOD_3 ( n ) )  METHOD_3 ( n ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) VAR VAR (  return VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; )  return VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ( INIT = VAR_2 . get ( VAR_1 ) ) INIT = VAR_2 . get ( VAR_1 ) ) VAR VAR ( IF IF ( COND listener != null ) COND listener != null ( THEN THEN (  listener . METHOD_2 ( METHOD_3 ( VAR_1 ) ) )  listener . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( VAR_3 ) )  TYPE_1 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  this . VAR_3 = VAR_1 )  this . VAR_3 = VAR_1 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_2 ( context , element ) )  METHOD_2 ( context , element ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return VAR_3 . METHOD_2 ( VAR_1 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( null ) )  VAR_1 . METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) > 0 ) COND ( VAR_1 ) > 0 ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( VAR_3 ) ; )  return VAR_2 . METHOD_2 ( VAR_3 ) ; ) THEN THEN ( ELSE ELSE (  return VAR_2 . METHOD_2 ( null ) ; )  return VAR_2 . METHOD_2 ( null ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_4 ( BLOCK BLOCK (  return VAR_5 ; )  return VAR_5 ; ) BLOCK BLOCK ) CASE VAR_4 ( CASE VAR_6 ( BLOCK BLOCK (  return VAR_7 ; )  return VAR_7 ; ) BLOCK BLOCK ) CASE VAR_6 ( DEFAULT DEFAULT ( BLOCK BLOCK (  throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; )  throw new TYPE_1 ( ( STRING_1 + VAR_1 ) ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( ( ! VAR_1 ) ) )  METHOD_3 ( ( ! VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( context ) )  TYPE_2 . METHOD_2 ( context ) ( IF IF ( COND ( VAR_1 ) >= ( VAR_2 ) ) COND ( VAR_1 ) >= ( VAR_2 ) ( THEN THEN (  TYPE_2 . METHOD_3 ( context ) )  TYPE_2 . METHOD_3 ( context ) ) THEN THEN ( ELSE ELSE (  TYPE_2 . METHOD_4 ( context ) )  TYPE_2 . METHOD_4 ( context ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( VAR_1 ) )  VAR_1 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , args , VAR_2 ) )  METHOD_2 ( VAR_1 , args , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  assertNotNull ( VAR_1 ) )  assertNotNull ( VAR_1 ) (  assertNotNull ( VAR_2 ) )  assertNotNull ( VAR_2 ) (  assertTrue ( STRING_1 , METHOD_2 ( ) . METHOD_3 ( ) ) )  assertTrue ( STRING_1 , METHOD_2 ( ) . METHOD_3 ( ) ) (  METHOD_4 ( VAR_3 , false ) )  METHOD_4 ( VAR_3 , false ) (  METHOD_5 ( VAR_4 ) )  METHOD_5 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = mContext . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , STRING_1 ) , null , null , null ) ) INIT = mContext . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , STRING_1 ) , null , null , null ) ) VAR VAR (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) (  return VAR_1 . METHOD_6 ( 0 ) ; )  return VAR_1 . METHOD_6 ( 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( int ) ( VAR_1 ) ) ; )  return ( ( int ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) VAR VAR (  METHOD_2 ( this , VAR_1 ) )  METHOD_2 ( this , VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) . length ( ) ) >= 8 ) COND ( VAR_1 . METHOD_2 ( ) . length ( ) ) >= 8 ( THEN THEN (  VAR_2 = VAR_1 . METHOD_2 ( ) . toString ( ) )  VAR_2 = VAR_1 . METHOD_2 ( ) . toString ( ) (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME d ) NAME d ( INIT = TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME r ) NAME r ( INIT = new TYPE_4 ( d , VAR_2 ) ) INIT = new TYPE_4 ( d , VAR_2 ) ) VAR VAR (  VAR_3 . METHOD_4 ( d . METHOD_5 ( ) , r ) )  VAR_3 . METHOD_4 ( d . METHOD_5 ( ) , r ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_2 ) NAME METHOD_2 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME i ) NAME i ( INIT = VAR_1 . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_3 ( ) ) VAR VAR (  i . METHOD_4 ( ) )  i . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD (  return new TYPE_3 ( ) { public void METHOD_2 ( TYPE_4 VAR_1 ) { TYPE_5 i = VAR_1 . METHOD_3 ( ) ; i . METHOD_4 ( ) ; } } ; )  return new TYPE_3 ( ) { public void METHOD_2 ( TYPE_4 VAR_1 ) { TYPE_5 i = VAR_1 . METHOD_3 ( ) ; i . METHOD_4 ( ) ; } } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) (  assertFalse ( VAR_1 . METHOD_2 ( STRING_3 , STRING_2 ) ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_3 , STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  session . METHOD_1 ( ) )  session . METHOD_1 ( ) (  VAR_2 = new TYPE_1 ( VAR_3 , session ) )  VAR_2 = new TYPE_1 ( VAR_3 , session ) (  VAR_1 = false )  VAR_1 = false ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<java.lang.Class<?extendsTYPE_1>> ) RETURN java.util.List<java.lang.Class<?extendsTYPE_1>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME source ) NAME source ( INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ( INIT = source . METHOD_3 ( packageName ) ) INIT = source . METHOD_3 ( packageName ) ) VAR VAR (  return METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; )  return METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_3 ( ) ; )  return VAR_2 . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , count , d ) )  METHOD_3 ( VAR_1 , count , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null , false ) )  METHOD_2 ( VAR_1 , VAR_2 , null , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( x , y ) )  VAR_2 . METHOD_3 ( x , y ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( packageName ) )  VAR_1 . METHOD_2 ( packageName ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( STRING_1 + ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ) )  TYPE_1 . METHOD_2 ( ( STRING_1 + ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ) (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( x . METHOD_2 ( ) , x . METHOD_3 ( ) , ( ( TYPE_2 ) ( x . METHOD_4 ( ) ) ) ) ) INIT = new TYPE_1 ( x . METHOD_2 ( ) , x . METHOD_3 ( ) , ( ( TYPE_2 ) ( x . METHOD_4 ( ) ) ) ) ) VAR VAR (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN com.android.jack.ir.ast.JMethod ) RETURN com.android.jack.ir.ast.JMethod ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  throw new java.lang.Exception ( STRING_1 ) ; )  throw new java.lang.Exception ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_4 = VAR_2 )  VAR_4 = VAR_2 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  VAR_2 = new TYPE_1 ( this ) )  VAR_2 = new TYPE_1 ( this ) (  VAR_2 . METHOD_1 ( METHOD_2 ( ) , VAR_1 ) )  VAR_2 . METHOD_1 ( METHOD_2 ( ) , VAR_1 ) (  METHOD_3 ( ) . METHOD_4 ( VAR_3 ) )  METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[][] ) RETURN TYPE_1[][] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 ) )  METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return ( index >= 0 ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ index ] : VAR_3 ; )  return ( index >= 0 ) && ( index < ( VAR_2 . length ) ) ? VAR_2 [ index ] : VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.lang.String . METHOD_1 ( value , 0 , count , VAR_1 . METHOD_2 ( ) , 0 , VAR_1 . length ( ) , VAR_2 ) ; )  return java.lang.String . METHOD_1 ( value , 0 , count , VAR_1 . METHOD_2 ( ) , 0 , VAR_1 . length ( ) , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4<TYPE_2> ) TYPE TYPE_4<TYPE_2> ( NAME result ) NAME result ( INIT = new TYPE_4 < TYPE_2 > ( ) ) INIT = new TYPE_4 < TYPE_2 > ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 . values ( ) ) IN VAR_3 . values ( ) ( BLOCK BLOCK (  result . METHOD_2 ( VAR_4 ) )  result . METHOD_2 ( VAR_4 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND obj != null ) COND obj != null ( THEN THEN (  METHOD_2 ( obj . METHOD_3 ( null ) ) )  METHOD_2 ( obj . METHOD_3 ( null ) ) ) THEN THEN ( ELSE ELSE (  METHOD_2 ( 0 ) )  METHOD_2 ( 0 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_3 ( true ) )  VAR_2 . METHOD_3 ( true ) (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ) COND android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  return TYPE_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_6 ) ; )  return TYPE_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_6 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) )  METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) (  METHOD_2 ( VAR_2 ) . METHOD_3 ( this ) )  METHOD_2 ( VAR_2 ) . METHOD_3 ( this ) (  METHOD_2 ( VAR_3 ) . METHOD_3 ( this ) )  METHOD_2 ( VAR_3 ) . METHOD_3 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) || ( VAR_2 ) ; )  return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) || ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = false )  VAR_1 = false ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = uid )  this . VAR_1 = uid ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_1 . METHOD_2 ( ) ) ) COND ! ( TYPE_1 . METHOD_2 ( ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 ) )  TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.HashMap<java.lang.String,java.lang.String> ) TYPE java.util.HashMap<java.lang.String,java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ) INIT = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  return new TYPE_1 ( VAR_3 , VAR_1 , VAR_4 ) ; )  return new TYPE_1 ( VAR_3 , VAR_1 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , src , TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 ) ) )  TYPE_1 . METHOD_2 ( VAR_1 , src , TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( this . VAR_1 ) >= 0 ) && ( TYPE_1 . METHOD_2 ( this . VAR_1 ) ) ; )  return ( ( this . VAR_1 ) >= 0 ) && ( TYPE_1 . METHOD_2 ( this . VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) && ( TYPE_2 . METHOD_3 ( VAR_5 , VAR_1 ) ) ; )  return ( METHOD_2 ( ) ) && ( TYPE_2 . METHOD_3 ( VAR_5 , VAR_1 ) ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) (  VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) )  VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ( IF IF ( COND TYPE_1 . METHOD_4 ( VAR_2 ) ) COND TYPE_1 . METHOD_4 ( VAR_2 ) ( THEN THEN (  METHOD_5 ( ) )  METHOD_5 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME start ) NAME start ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) , VAR_2 ) ) INIT = TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) , VAR_2 ) ) VAR VAR (  return TYPE_4 . METHOD_4 ( context , VAR_1 ) ; )  return TYPE_4 . METHOD_4 ( context , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  this . METHOD_1 ( VAR_1 . key ) )  this . METHOD_1 ( VAR_1 . key ) (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . get ( VAR_2 ) . booleanValue ( ) ) ) ; )  return new TYPE_1 ( METHOD_2 ( ) , TYPE_2 . METHOD_3 ( TYPE_3 . get ( VAR_2 ) . booleanValue ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e ) )  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME state ) NAME state ( INIT = TYPE_3 . METHOD_2 ( project ) ) INIT = TYPE_3 . METHOD_2 ( project ) ) VAR VAR (  return state . METHOD_3 ( ) ; )  return state . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( fd , VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_2 ( fd , VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN byte ) RETURN byte ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) ) < 0 ; )  return ( VAR_1 . METHOD_2 ( ) ) < 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( context , callback , TYPE_6 . METHOD_2 ( ) , VAR_1 ) ; )  return TYPE_1 . METHOD_1 ( context , callback , TYPE_6 . METHOD_2 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( STRING_1 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_1 ) ) ) ) )  assertTrue ( STRING_1 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_1 ) ) ) ) (  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) )  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_5 ( config , VAR_4 ) ) INIT = new TYPE_5 ( config , VAR_4 ) ) VAR VAR (  VAR_3 . start ( ) )  VAR_3 . start ( ) (  VAR_1 . METHOD_1 ( VAR_3 ) )  VAR_1 . METHOD_1 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_3 ) ; )  return TYPE_2 . METHOD_2 ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_3 , VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_3 , VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ( INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) VAR VAR (  return b . METHOD_5 ( VAR_2 ) ; )  return b . METHOD_5 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final ) MODIFIER private static final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( VAR_1 ) (  TYPE_3 . METHOD_3 ( VAR_1 ) )  TYPE_3 . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( STRING_1 , null ) ) INIT = new TYPE_1 ( STRING_1 , null ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  c . METHOD_2 ( ( ( TYPE_2 ) ( null ) ) ) )  c . METHOD_2 ( ( ( TYPE_2 ) ( null ) ) ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  TYPE_2 . METHOD_3 ( VAR_1 ) )  TYPE_2 . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( false ) )  TYPE_1 . METHOD_2 ( false ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_2 ( true ) )  TYPE_1 . METHOD_2 ( true ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  METHOD_4 ( VAR_1 , 0 ) )  METHOD_4 ( VAR_1 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) (  Main . METHOD_4 ( ) )  Main . METHOD_4 ( ) (  Main . METHOD_5 ( ) )  Main . METHOD_5 ( ) (  Main . METHOD_6 ( ) )  Main . METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_5 ) ) INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_5 ) ) VAR VAR ( IF IF ( COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_6 ) ) COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_6 ) ( THEN THEN (  METHOD_4 ( false ) )  METHOD_4 ( false ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( false ) )  METHOD_2 ( false ) (  VAR_2 . METHOD_3 ( STRING_1 ) )  VAR_2 . METHOD_3 ( STRING_1 ) (  VAR_2 . METHOD_3 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_1 ) (  VAR_2 . METHOD_3 ( STRING_2 ) )  VAR_2 . METHOD_3 ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 2 , INT_1 , false ) )  t . METHOD_2 ( 2 , INT_1 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN float ) RETURN float ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  VAR_2 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) . getName ( ) ) )  VAR_2 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) < ( VAR_4 ) ) COND ( VAR_3 ) < ( VAR_4 ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_1 ( VAR_2 ) ; )  return VAR_1 . METHOD_1 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 , ( - 1 ) ) ; )  return VAR_2 . METHOD_1 ( VAR_1 , ( - 1 ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) )  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , new java.lang.Object [ ] { in } , new java.util.HashMap < TYPE_4 , java.lang.Object > ( ) ) ; )  return VAR_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 , new java.lang.Object [ ] { in } , new java.util.HashMap < TYPE_4 , java.lang.Object > ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) )  METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( ( ( TYPE_2 ) ( x ) ) ) ; )  return METHOD_1 ( ( ( TYPE_2 ) ( x ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  mContext . METHOD_2 ( VAR_1 , VAR_2 . TAG ) )  mContext . METHOD_2 ( VAR_1 , VAR_2 . TAG ) (  return METHOD_3 ( packageName ) ; )  return METHOD_3 ( packageName ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  logln ( STRING_1 ) )  logln ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) )  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( c ) )  super . METHOD_1 ( c ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  return VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; )  return VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( address , input , VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( address , input , VAR_2 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  assertFalse ( VAR_1 . METHOD_3 ( VAR_2 ) ) )  assertFalse ( VAR_1 . METHOD_3 ( VAR_2 ) ) (  METHOD_4 ( VAR_3 , VAR_1 . METHOD_5 ( ) ) )  METHOD_4 ( VAR_3 , VAR_1 . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , null } ) )  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , null } ) (  fail ( STRING_3 ) )  fail ( STRING_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 [ ] { new TYPE_1 ( this , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) } ; )  return new TYPE_1 [ ] { new TYPE_1 ( this , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) } ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  Main . METHOD_3 ( new TYPE_2 ( ) ) )  Main . METHOD_3 ( new TYPE_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = TYPE_3 . METHOD_2 ( key ) )  VAR_2 = TYPE_3 . METHOD_2 ( key ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , false , VAR_1 ) )  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , false , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 ) )  METHOD_2 ( VAR_1 , VAR_2 ) (  assertEquals ( VAR_1 , VAR_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) )  assertEquals ( VAR_1 , VAR_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) (  assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) )  assertEquals ( VAR_2 , VAR_3 . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( s ) ; )  return VAR_1 . METHOD_1 ( s ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) (  VAR_2 . METHOD_2 ( VAR_3 , null ) )  VAR_2 . METHOD_2 ( VAR_3 , null ) (  METHOD_3 ( new TYPE_1 ( VAR_4 ) ) )  METHOD_3 ( new TYPE_1 ( VAR_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return java.lang.String.format ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) , new TYPE_1 ( VAR_2 ) ) ; )  return java.lang.String.format ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) , new TYPE_1 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . i ( this , STRING_1 , VAR_1 ) )  TYPE_1 . i ( this , STRING_1 , VAR_1 ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK (  VAR_2 . METHOD_3 ( this , VAR_1 ) )  VAR_2 . METHOD_3 ( this , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME parent ) NAME parent ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( parent , name , null , VAR_2 ) ; )  return new TYPE_1 ( parent , name , null , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( short ) ( ( char ) ( value ) ) ) ; )  return ( ( short ) ( ( char ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME response ) NAME response ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME ret ) NAME ret ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) + STRING_2 ) + ( TYPE_1 . METHOD_4 ( response , ret ) ) ) ) )  METHOD_2 ( ( ( ( STRING_1 + ( TYPE_1 . METHOD_3 ( response ) ) ) + STRING_2 ) + ( TYPE_1 . METHOD_4 ( response , ret ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  VAR_4 . METHOD_2 ( java.lang.Integer . METHOD_3 ( VAR_1 ) , VAR_2 ) )  VAR_4 . METHOD_2 ( java.lang.Integer . METHOD_3 ( VAR_1 ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  service . METHOD_3 ( ) )  service . METHOD_3 ( ) (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ( INIT = VAR_1 . get ( name ) ) INIT = VAR_1 . get ( name ) ) VAR VAR ( IF IF ( COND type != null ) COND type != null ( THEN THEN (  return type ; )  return type ; ) THEN THEN ( ELSE ELSE (  return VAR_2 ; )  return VAR_2 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) ) * INT_1 ; )  return ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) ) * INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( address , input , VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( address , input , VAR_2 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( device ) ) INIT = VAR_1 . METHOD_2 ( device ) ) VAR VAR (  return VAR_2 == null ? false : VAR_2 . METHOD_3 ( VAR_3 , false ) ; )  return VAR_2 == null ? false : VAR_2 . METHOD_3 ( VAR_3 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg > > > INT_1 ) & 7 ; )  return ( arg > > > INT_1 ) & 7 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  TYPE_1 . d ( VAR_2 , STRING_1 ) )  TYPE_1 . d ( VAR_2 , STRING_1 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . get ( VAR_1 ) . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) )  TYPE_1 . get ( VAR_1 ) . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) (  TYPE_2 . METHOD_5 ( ) )  TYPE_2 . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) VAR VAR (  VAR_1 . c ( STRING_2 ) )  VAR_1 . c ( STRING_2 ) (  VAR_1 . c ( STRING_3 ) )  VAR_1 . c ( STRING_3 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  org.junit.Assert.assertEquals ( STRING_2 , VAR_1 . toString ( ) ) )  org.junit.Assert.assertEquals ( STRING_2 , VAR_1 . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return TYPE_2 . METHOD_3 ( ) . METHOD_1 ( ) ; )  return TYPE_2 . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_4 ( ) ; )  throw e . METHOD_4 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.ArrayList<TYPE_2> ) TYPE java.util.ArrayList<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_2 . METHOD_1 ( ) ) ) ) INIT = ( ( java.util.ArrayList < TYPE_2 > ) ( VAR_2 . METHOD_1 ( ) ) ) ) VAR VAR (  return new TYPE_1 ( VAR_1 ) ; )  return new TYPE_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) )  VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) (  return VAR_1 < ( VAR_3 . size ( ) ) ? VAR_3 . get ( VAR_1 ) : VAR_4 ; )  return VAR_1 < ( VAR_3 . size ( ) ) ? VAR_3 . get ( VAR_1 ) : VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) < ( VAR_2 ) ) COND ( VAR_1 ) < ( VAR_2 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) )  VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( id , VAR_1 , VAR_2 , VAR_3 ) ; )  return new TYPE_2 ( id , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . getName ( field . METHOD_2 ( ) ) ) INIT = VAR_2 . getName ( field . METHOD_2 ( ) ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_3 ( VAR_1 ) ) INIT = new TYPE_3 ( VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = new TYPE_1 ( VAR_3 ) ) INIT = new TYPE_1 ( VAR_3 ) ) VAR VAR (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  a . METHOD_2 ( id , VAR_1 ) )  a . METHOD_2 ( id , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 class )  VAR_3 class ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  VAR_5 = VAR_2 )  VAR_5 = VAR_2 ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 ) ) )  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 ) ) (  assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( STRING_4 ) ) )  assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( TYPE_2 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.v ( TYPE_2 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF (  VAR_3 = true )  VAR_3 = true ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  android.util.Log . i ( VAR_3 , ( STRING_1 + VAR_1 ) ) )  android.util.Log . i ( VAR_3 , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME size ) NAME size ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , name , size , VAR_1 , VAR_2 ) ; )  return METHOD_3 ( mContext , name , size , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  TYPE_3 . METHOD_3 ( VAR_1 ) )  TYPE_3 . METHOD_3 ( VAR_1 ) (  VAR_3 . METHOD_4 ( VAR_2 ) )  VAR_3 . METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  new TYPE_1 ( STRING_1 ) )  new TYPE_1 ( STRING_1 ) ) THEN THEN ) IF IF (  VAR_1 = true )  VAR_1 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = ! ( VAR_1 instanceof TYPE_2 ) ) INIT = ! ( VAR_1 instanceof TYPE_2 ) ) VAR VAR ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  method )  method ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = method . METHOD_2 ( VAR_2 ) ) INIT = method . METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 . METHOD_3 ( ) ; )  return VAR_1 . METHOD_3 ( ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) )  VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) (  VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) )  VAR_1 . METHOD_2 ( STRING_3 , STRING_4 ) (  VAR_1 . METHOD_2 ( STRING_5 , STRING_6 ) )  VAR_1 . METHOD_2 ( STRING_5 , STRING_6 ) (  VAR_1 . METHOD_2 ( STRING_7 , STRING_8 ) )  VAR_1 . METHOD_2 ( STRING_7 , STRING_8 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) != null ; )  return ( VAR_1 ) != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) (  VAR_2 = TYPE_1 . METHOD_3 ( ) )  VAR_2 = TYPE_1 . METHOD_3 ( ) (  VAR_3 = TYPE_1 . METHOD_4 ( ) )  VAR_3 = TYPE_1 . METHOD_4 ( ) (  VAR_4 = TYPE_1 . METHOD_5 ( ) )  VAR_4 = TYPE_1 . METHOD_5 ( ) (  VAR_5 = TYPE_1 . METHOD_6 ( ) )  VAR_5 = TYPE_1 . METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 ) )  METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( short ) ( ( double ) ( value ) ) ) ; )  return ( ( short ) ( ( double ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( d , d ) )  TYPE_1 . METHOD_2 ( d , d ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) & ( VAR_2 ) ) != 0 ; )  return ( ( VAR_1 ) & ( VAR_2 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( 5 , VAR_1 ) )  TYPE_1 . METHOD_3 ( 5 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME from ) NAME from ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = ( VAR_1 + STRING_1 ) + ( toString ( ) ) )  VAR_1 = ( VAR_1 + STRING_1 ) + ( toString ( ) ) ( IF IF ( COND from != null ) COND from != null ( THEN THEN (  VAR_1 += STRING_2 + from )  VAR_1 += STRING_2 + from ) THEN THEN ) IF IF (  throw new TYPE_1 ( VAR_1 ) ; )  throw new TYPE_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  assertNotNull ( VAR_1 . METHOD_2 ( ) ) )  assertNotNull ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME ex ) NAME ex ( BLOCK BLOCK (  fail ( ( STRING_1 + ex ) ) )  fail ( ( STRING_1 + ex ) ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( event ) ) )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( event ) ) ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  listener . METHOD_1 ( this , event ) )  listener . METHOD_1 ( this , event ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME pkg ) NAME pkg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_2 < TYPE_1 > ( ) )  VAR_1 = new TYPE_2 < TYPE_1 > ( ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( pkg ) )  VAR_1 . METHOD_2 ( pkg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 . equals ( VAR_3 . type ) ) COND VAR_2 . equals ( VAR_3 . type ) ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_6 ) TYPE TYPE_6 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_7 ) TYPE TYPE_7 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . of ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; )  return TYPE_1 . of ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN android.bluetooth.BluetoothDevice ) RETURN android.bluetooth.BluetoothDevice ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , value ) )  VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME log ) NAME log ( INIT = super . METHOD_2 ( ) ) INIT = super . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) INIT = METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) VAR VAR (  return TYPE_1 . METHOD_6 ( VAR_1 , log ) ; )  return TYPE_1 . METHOD_6 ( VAR_1 , log ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = new TYPE_2 ( VAR_1 ) )  VAR_2 = new TYPE_2 ( VAR_1 ) (  VAR_3 = VAR_1 . METHOD_2 ( ) . get ( VAR_4 ) )  VAR_3 = VAR_1 . METHOD_2 ( ) . get ( VAR_4 ) (  VAR_5 = VAR_1 . METHOD_2 ( ) . get ( VAR_6 ) )  VAR_5 = VAR_1 . METHOD_2 ( ) . get ( VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( null ) )  new TYPE_1 ( null ) (  fail ( ( STRING_1 + STRING_2 ) ) )  fail ( ( STRING_1 + STRING_2 ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; )  return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_3 ) )  TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME log ) NAME log ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( 7 ) )  METHOD_2 ( 7 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME when ) NAME when ) VAR VAR (  VAR_4 . METHOD_3 ( STRING_1 , VAR_1 , VAR_2 , VAR_5 ) )  VAR_4 . METHOD_3 ( STRING_1 , VAR_1 , VAR_2 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  a = - a )  a = - a (  Main.expectEquals ( ( - 1 ) , a ) )  Main.expectEquals ( ( - 1 ) , a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME VAR_4 ) NAME VAR_4 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_1 , STRING_2 , c . METHOD_3 ( ) . METHOD_4 ( ) ) )  org.junit.Assert.assertEquals ( STRING_1 , STRING_2 , c . METHOD_3 ( ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_1 ) ( server . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ) INIT = ( ( TYPE_1 ) ( server . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ) ) VAR VAR (  VAR_2 . METHOD_4 ( VAR_1 ) )  VAR_2 . METHOD_4 ( VAR_1 ) (  assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) )  assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME item ) NAME item ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = null ) INIT = null ) VAR VAR (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , callback , null ) )  METHOD_1 ( VAR_1 , VAR_2 , callback , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 1 ; )  return 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<java.lang.String,TYPE_2> ) RETURN TYPE_1<java.lang.String,TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( fd ) == null ) COND ( fd ) == null ( THEN THEN (  throw new java.io.IOException ( STRING_1 ) ; )  throw new java.io.IOException ( STRING_1 ) ; ) THEN THEN ) IF IF (  METHOD_2 ( data ) )  METHOD_2 ( data ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( FINALLY FINALLY (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return value > > ( VAR_1 & INT_1 ) ; )  return value > > ( VAR_1 & INT_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( VAR_1 , r , x . METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_2 ( VAR_1 , r , x . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( this , VAR_1 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; )  return METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( expected , TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 , VAR_3 ) ) )  TYPE_3 . METHOD_2 ( expected , TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME locale ) NAME locale ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( locale . toString ( ) , VAR_1 ) ; )  return TYPE_2 . METHOD_2 ( locale . toString ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME v ) NAME v ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) != null ) COND ( VAR_1 . METHOD_2 ( ) ) != null ( THEN THEN (  listener . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) )  listener . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) THEN THEN ( ELSE ELSE (  listener . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  listener . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  VAR_1 . println ( STRING_1 ) )  VAR_1 . println ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME ex ) NAME ex ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_2 ) )  java.lang.System.out.println ( STRING_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  VAR_2 = null )  VAR_2 = null (  VAR_3 = null )  VAR_3 = null (  VAR_4 = null )  VAR_4 = null (  mContext = null )  mContext = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 ) , new TYPE_5 ( ) ) ; )  return new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 ) , new TYPE_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND ( VAR_1 != null ) && ( VAR_1 . METHOD_3 ( ) ) ) COND ( VAR_1 != null ) && ( VAR_1 . METHOD_3 ( ) ) ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( data ) ; )  return TYPE_1 . METHOD_2 ( data ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = new TYPE_2 ( VAR_4 , VAR_2 , VAR_1 , VAR_5 ) )  VAR_3 = new TYPE_2 ( VAR_4 , VAR_2 , VAR_1 , VAR_5 ) (  VAR_6 . METHOD_2 ( VAR_3 ) )  VAR_6 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( INT_1 ) )  a = Main . METHOD_2 ( INT_1 ) (  b = Main . METHOD_2 ( INT_2 ) )  b = Main . METHOD_2 ( INT_2 ) (  c = a / b )  c = a / b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME getName ) NAME getName ( BLOCK BLOCK (  return field . METHOD_1 ( ) . getName ( ) ; )  return field . METHOD_1 ( ) . getName ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 , VAR_2 ) )  super . METHOD_1 ( VAR_1 , VAR_2 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = url )  VAR_2 = url (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.lang.Object [ 2 ] ) INIT = new java.lang.Object [ 2 ] ) VAR VAR (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 [ 0 ] ) INIT = VAR_1 [ 0 ] ) VAR VAR (  VAR_3 . METHOD_1 ( ) )  VAR_3 . METHOD_1 ( ) (  VAR_1 [ 1 ] = VAR_3 )  VAR_1 [ 1 ] = VAR_3 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK (  METHOD_2 ( VAR_2 , VAR_1 ) )  METHOD_2 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  VAR_4 . METHOD_3 ( true ) )  VAR_4 . METHOD_3 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , VAR_2 ) )  VAR_1 . METHOD_1 ( this , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  assertTrue ( VAR_1 . METHOD_1 ( ) ) )  assertTrue ( VAR_1 . METHOD_1 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND node instanceof TYPE_1 ) COND node instanceof TYPE_1 ( THEN THEN (  return ( ( TYPE_1 ) ( node ) ) ; )  return ( ( TYPE_1 ) ( node ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  config . METHOD_2 ( VAR_1 , VAR_3 ) )  config . METHOD_2 ( VAR_1 , VAR_3 ) (  config . METHOD_3 ( VAR_1 , VAR_4 ) )  config . METHOD_3 ( VAR_1 , VAR_4 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( INT_1 - FLOAT_1 ) ) )  METHOD_2 ( ( INT_1 - FLOAT_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( STRING_1 ) ) COND TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( STRING_1 ) ( THEN THEN (  VAR_1 . METHOD_4 ( android.os.Message . METHOD_5 ( VAR_2 , VAR_3 ) ) )  VAR_1 . METHOD_4 ( android.os.Message . METHOD_5 ( VAR_2 , VAR_3 ) ) ) THEN THEN ( ELSE ELSE (  METHOD_1 ( false ) )  METHOD_1 ( false ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_4 . METHOD_2 ( VAR_1 . name ) ) COND TYPE_4 . METHOD_2 ( VAR_1 . name ) ( THEN THEN (  return METHOD_3 ( VAR_1 , VAR_2 ) ; )  return METHOD_3 ( VAR_1 , VAR_2 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_4 ( VAR_1 , VAR_2 ) ; )  return METHOD_4 ( VAR_1 , VAR_2 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) VAR VAR ( IF IF ( COND ! ( METHOD_3 ( ) ) ) COND ! ( METHOD_3 ( ) ) ( THEN THEN (  assertEquals ( STRING_2 , STRING_3 , VAR_1 . METHOD_4 ( ) ) )  assertEquals ( STRING_2 , STRING_3 , VAR_1 . METHOD_4 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device ) ; )  return service . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND value == 0 ) COND value == 0 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != value ) COND ( VAR_3 ) != value ( THEN THEN (  VAR_4 = new TYPE_2 ( value ) )  VAR_4 = new TYPE_2 ( value ) ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( FLOAT_1 ) ) INIT = Main . METHOD_2 ( FLOAT_1 ) ) VAR VAR (  return ( ( int ) ( VAR_1 ) ) ; )  return ( ( int ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; )  return METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND ! ( VAR_2 . METHOD_1 ( ) ) ) COND ! ( VAR_2 . METHOD_1 ( ) ) ( THEN THEN (  loge ( STRING_2 ) )  loge ( STRING_2 ) (  return false ; )  return false ; ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( VAR_1 ) )  TYPE_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME n ) NAME n ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  n . flags |= VAR_1 )  n . flags |= VAR_1 (  VAR_2 = - INT_1 )  VAR_2 = - INT_1 (  VAR_3 = INT_2 )  VAR_3 = INT_2 (  VAR_4 = INT_2 )  VAR_4 = INT_2 (  VAR_5 . METHOD_1 ( 1 , n ) )  VAR_5 . METHOD_1 ( 1 , n ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return METHOD_2 ( VAR_1 , VAR_2 , uid , ( - 1 ) ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , uid , ( - 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) >= ( VAR_2 ) ) && ( ( VAR_1 ) <= ( VAR_3 ) ) ; )  return ( ( VAR_1 ) >= ( VAR_2 ) ) && ( ( VAR_1 ) <= ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME in ) NAME in ( INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) INIT = new TYPE_2 ( mRS , INPUTSIZE ) ) VAR VAR (  VAR_4 = in . METHOD_2 ( ) )  VAR_4 = in . METHOD_2 ( ) (  METHOD_3 ( INT_1 , 6 ) )  METHOD_3 ( INT_1 , 6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_4 == null ) COND VAR_4 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) )  VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , args ) ) )  VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , args ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) (  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) )  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME result ) NAME result ( INIT = ( ( TYPE_2 ) ( super . METHOD_1 ( ) ) ) ) INIT = ( ( TYPE_2 ) ( super . METHOD_1 ( ) ) ) ) VAR VAR (  data = data . METHOD_1 ( ) )  data = data . METHOD_1 ( ) (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return TYPE_1 . METHOD_3 ( ) ; )  return TYPE_1 . METHOD_3 ( ) ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , d ) )  METHOD_3 ( mContext , id , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( this , new TYPE_3 ( VAR_1 ) , VAR_2 ) )  VAR_3 . METHOD_1 ( this , new TYPE_3 ( VAR_1 ) , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( ( ( TYPE_2 . METHOD_2 ( ) . getName ( type ) ) + ( VAR_1 ) ) , CHAR_1 ) ; )  return new TYPE_1 ( ( ( TYPE_2 . METHOD_2 ( ) . getName ( type ) ) + ( VAR_1 ) ) , CHAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < VAR_1 ) COND i < VAR_1 ( UPDATE UPDATE (  ++ i )  ++ i ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME call ) NAME call ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_1 ( call , VAR_1 , VAR_2 , false ) ; )  return TYPE_4 . METHOD_1 ( call , VAR_1 , VAR_2 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , msg ) )  android.util.Log.d ( VAR_2 . TAG , msg ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK (  assertEquals ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) , METHOD_1 ( STRING_6 ) ) )  assertEquals ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) , METHOD_1 ( STRING_6 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( format , args ) )  VAR_1 . METHOD_2 ( format , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = service . METHOD_2 ( new byte [ ] { - INT_1 , 7 } ) ) INIT = service . METHOD_2 ( new byte [ ] { - INT_1 , 7 } ) ) VAR VAR (  assertEquals ( INT_2 , VAR_1 ) )  assertEquals ( INT_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) )  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) (  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) )  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) ) (  assertTrue ( STRING_3 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_3 ) ) ) ) )  assertTrue ( STRING_3 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_3 ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , java.lang.String.format ( VAR_3 , VAR_1 ) ) )  TYPE_1 . METHOD_2 ( VAR_2 , java.lang.String.format ( VAR_3 , VAR_1 ) ) (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != ( VAR_2 ) ) COND VAR_1 != ( VAR_2 ) ( THEN THEN ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ) THEN THEN ( ELSE ELSE (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) ELSE ELSE ) IF IF (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; )  return - ( VAR_1 . METHOD_2 ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( 3 , VAR_1 . length ) )  assertEquals ( 3 , VAR_1 . length ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return new TYPE_2 ( VAR_2 ) ; )  return new TYPE_2 ( VAR_2 ) ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return new TYPE_2 ( VAR_3 ) ; )  return new TYPE_2 ( VAR_3 ) ; ) BLOCK BLOCK ) CASE VAR_3 ) SWITCH SWITCH (  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) )  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) (  VAR_2 . METHOD_3 ( VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_3 ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( VAR_4 , false , false ) )  METHOD_5 ( VAR_4 , false , false ) (  status = VAR_5 )  status = VAR_5 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) )  METHOD_1 ( TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ; )  return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Map<java.lang.String,TYPE_1> ) RETURN java.util.Map<java.lang.String,TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( new TYPE_2 ( ) , false ) ; )  return METHOD_2 ( new TYPE_2 ( ) , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( VAR_1 ) && ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) ) && ( ( VAR_3 ) != null ) ) && ( VAR_3 . METHOD_1 ( ) ) ; )  return ( ( ( VAR_1 ) && ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) ) && ( ( VAR_3 ) != null ) ) && ( VAR_3 . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME action ) NAME action ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.io.File> ) TYPE java.util.List<java.io.File> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.HashMap<java.lang.String,java.lang.String> ) TYPE java.util.HashMap<java.lang.String,java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ) INIT = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  return new TYPE_1 ( VAR_3 , VAR_1 , type ) ; )  return new TYPE_1 ( VAR_3 , VAR_1 , type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( netId , STRING_1 , VAR_1 ) ; )  return METHOD_2 ( netId , STRING_1 , VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return 2 ; )  return 2 ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return 2 ; )  return 2 ; ) BLOCK BLOCK ) CASE VAR_3 ( CASE VAR_4 ( BLOCK BLOCK (  return 2 ; )  return 2 ; ) BLOCK BLOCK ) CASE VAR_4 ) SWITCH SWITCH (  return 1 ; )  return 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( STRING_1 , null ) ) INIT = new TYPE_1 ( STRING_1 , null ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  c . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) )  c . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = new TYPE_3 ( VAR_1 ) )  VAR_2 = new TYPE_3 ( VAR_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , false ) )  METHOD_2 ( STRING_1 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( VAR_1 . METHOD_1 ( ) , TYPE_3 . METHOD_2 ( ) . getName ( VAR_2 , VAR_3 ) ) ; )  return new TYPE_2 ( VAR_1 . METHOD_1 ( ) , TYPE_3 . METHOD_2 ( ) . getName ( VAR_2 , VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  throw new java.lang.Exception ( STRING_1 ) ; )  throw new java.lang.Exception ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_4 = VAR_2 )  VAR_4 = VAR_2 (  VAR_5 = false )  VAR_5 = false ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( key ) ; )  return VAR_1 . METHOD_2 ( key ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  TYPE_1 . log ( VAR_2 , ( STRING_1 + key ) , e ) )  TYPE_1 . log ( VAR_2 , ( STRING_1 + key ) , e ) (  return null ; )  return null ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 4 , INT_1 , false ) )  t . METHOD_2 ( 4 , INT_1 , false ) (  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) )  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( this , VAR_1 ) )  VAR_2 . METHOD_2 ( this , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( context , VAR_1 ) )  super . METHOD_1 ( context , VAR_1 ) ( TRY TRY ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new java.lang.RuntimeException ( STRING_1 , e ) ; )  throw new java.lang.RuntimeException ( STRING_1 , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( new TYPE_1 ( VAR_1 . METHOD_3 ( ) . get ( index ) ) ) )  METHOD_2 ( new TYPE_1 ( VAR_1 . METHOD_3 ( ) . get ( index ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_1 ) ; )  return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) (  VAR_4 . METHOD_2 ( VAR_5 ) )  VAR_4 . METHOD_2 ( VAR_5 ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  VAR_4 . METHOD_2 ( null ) )  VAR_4 . METHOD_2 ( null ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) )  TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_3 ( ) ) INIT = VAR_3 . METHOD_3 ( ) ) VAR VAR (  assertEquals ( VAR_2 , STRING_1 ) )  assertEquals ( VAR_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ) )  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ) (  assertEquals ( STRING_4 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_5 ) ) )  assertEquals ( STRING_4 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_5 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) (  TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_4 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME pw ) NAME pw ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  pw.println ( java.lang.String.format ( format , VAR_1 ) ) )  pw.println ( java.lang.String.format ( format , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( context ) . METHOD_2 ( ) ; )  return new TYPE_2 ( context ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.Allocation ) TYPE TYPE_1.Allocation ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( 0 , null , VAR_1 , null ) )  METHOD_1 ( 0 , null , VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( TYPE_1 . TAG , ( STRING_1 + status ) ) )  android.util.Log.v ( TYPE_1 . TAG , ( STRING_1 + status ) ) ) THEN THEN ) IF IF (  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( status ) ) )  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( status ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . METHOD_4 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double ) TYPE double ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg / FLOAT_1 ; )  return arg / FLOAT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) . METHOD_4 ( this ) )  ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) . METHOD_4 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( 8 ) )  a = Main . METHOD_2 ( 8 ) (  b = Main . METHOD_2 ( 3 ) )  b = Main . METHOD_2 ( 3 ) (  c = a % b )  c = a % b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return ( address ) == null ? STRING_1 : ( ( address . METHOD_1 ( ) ) + STRING_2 ) + ( VAR_1 ) ; )  return ( address ) == null ? STRING_1 : ( ( address . METHOD_1 ( ) ) + STRING_2 ) + ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( METHOD_4 ( s ) ) )  METHOD_3 ( METHOD_4 ( s ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND e instanceof TYPE_2 ) COND e instanceof TYPE_2 ( THEN THEN (  VAR_1 [ VAR_2 ] = true )  VAR_1 [ VAR_2 ] = true ) THEN THEN ) IF IF (  super . METHOD_1 ( t , e ) )  super . METHOD_1 ( t , e ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_4 . METHOD_2 ( VAR_5 , VAR_2 ) ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_4 . METHOD_2 ( VAR_5 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , null , null ) ; )  return new TYPE_1 ( VAR_1 , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return VAR_1 . equals ( VAR_2 ) ; )  return VAR_1 . equals ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = false )  VAR_1 = false (  VAR_2 = b )  VAR_2 = b (  METHOD_2 ( a ) )  METHOD_2 ( a ) (  return ! ( VAR_1 ) ; )  return ! ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( x , y ) ) != 0 ) COND ( TYPE_1 . METHOD_2 ( x , y ) ) != 0 ( THEN THEN (  y [ 0 ] ^= VAR_1 )  y [ 0 ] ^= VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( project , false ) )  METHOD_2 ( project , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  assertTrue ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) )  assertTrue ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ( BLOCK BLOCK (  METHOD_2 ( t ) )  METHOD_2 ( t ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( STRING_1 + key ) ) )  TYPE_1 . METHOD_2 ( ( STRING_1 + key ) ) (  VAR_2 . METHOD_3 ( key , VAR_1 ) )  VAR_2 . METHOD_3 ( key , VAR_1 ) (  TYPE_1 . METHOD_4 ( ) )  TYPE_1 . METHOD_4 ( ) (  TYPE_1 . METHOD_5 ( key ) )  TYPE_1 . METHOD_5 ( key ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) )  org.junit.Assert.assertEquals ( STRING_1 , key . METHOD_2 ( ) , ( - INT_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) VAR VAR (  return ( VAR_2 ) == VAR_1 ; )  return ( VAR_2 ) == VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , 1 , 12 ) )  METHOD_2 ( STRING_1 , STRING_2 , 1 , 12 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME project ) NAME project ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , device , project , VAR_2 ) . METHOD_3 ( VAR_1 , device , project , VAR_2 ) ; )  return METHOD_2 ( VAR_1 , device , project , VAR_2 ) . METHOD_3 ( VAR_1 , device , project , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME logln ) NAME logln ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  msg ( VAR_1 , VAR_2 , true , true ) )  msg ( VAR_1 , VAR_2 , true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_3 ( VAR_5 ) ) INIT = VAR_4 . METHOD_3 ( VAR_5 ) ) VAR VAR (  assertNotNull ( VAR_3 ) )  assertNotNull ( VAR_3 ) (  assertEquals ( 1 , VAR_3 . length ) )  assertEquals ( 1 , VAR_3 . length ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME out ) NAME out ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND line != null ) COND line != null ( THEN THEN ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_1 . info ( line ) )  VAR_1 . info ( line ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME flags ) NAME flags ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  flags . METHOD_1 ( VAR_1 ) )  flags . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ( STRING_1 + VAR_1 ) ) )  METHOD_2 ( ( STRING_1 + VAR_1 ) ) (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( type ) ) INIT = VAR_2 . get ( type ) ) VAR VAR (  return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; )  return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( - arg1 ) + VAR_1 ; )  return ( - arg1 ) + VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ( IN TYPE_1 . METHOD_2 ( ) ) IN TYPE_1 . METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 . println ( id ) )  VAR_1 . println ( id ) (  TYPE_1 . METHOD_3 ( id , STRING_1 ) )  TYPE_1 . METHOD_3 ( id , STRING_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return url . METHOD_2 ( ) ; )  return url . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return VAR_2 . METHOD_3 ( ) ; )  return VAR_2 . METHOD_3 ( ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  new TYPE_3 ( this ) . start ( ) )  new TYPE_3 ( this ) . start ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 ) ; )  return new TYPE_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . get ( VAR_1 ) ; )  return VAR_2 . get ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return METHOD_1 ( ) . METHOD_2 ( ) ; )  return METHOD_1 ( ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class<?>[] ) RETURN java.lang.Class<?>[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( this ) ; )  return TYPE_1 . METHOD_2 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  TYPE_3 . METHOD_3 ( VAR_1 , STRING_1 ) )  TYPE_3 . METHOD_3 ( VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) < ( VAR_3 ) ) COND ( VAR_2 ) < ( VAR_3 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , true , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME y ) NAME y ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  this . VAR_2 = VAR_2 )  this . VAR_2 = VAR_2 (  this . VAR_3 = VAR_3 )  this . VAR_3 = VAR_3 (  this . VAR_4 = VAR_4 )  this . VAR_4 = VAR_4 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return METHOD_1 ( null ) ; )  return METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND on ) COND on ( THEN THEN (  VAR_1 . METHOD_2 ( ( ( byte ) ( b ) ) ) )  VAR_1 . METHOD_2 ( ( ( byte ) ( b ) ) ) ) THEN THEN ) IF IF (  out . METHOD_1 ( b ) )  out . METHOD_1 ( b ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 , null ) )  VAR_2 . METHOD_2 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME subId ) NAME subId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( subId ) ; )  return METHOD_2 ( ) . METHOD_3 ( subId ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME ex ) NAME ex ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME ex ) NAME ex ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( IN VAR_2 . METHOD_2 ( ) ) IN VAR_2 . METHOD_2 ( ) ( BLOCK BLOCK (  assertEquals ( VAR_1 , r . METHOD_3 ( ) ) )  assertEquals ( VAR_1 , r . METHOD_3 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; )  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( this ) ; )  return TYPE_1 . METHOD_1 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  listener . error ( VAR_1 , VAR_2 ) )  listener . error ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_2 ( uid , VAR_3 ) )  METHOD_2 ( uid , VAR_3 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = VAR_1 . getName ( ) ) INIT = VAR_1 . getName ( ) ) VAR VAR (  return ! ( ( name . METHOD_2 ( VAR_2 ) ) || ( name . equals ( VAR_3 ) ) ) ; )  return ! ( ( name . METHOD_2 ( VAR_2 ) ) || ( name . equals ( VAR_3 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) (  VAR_4 . METHOD_2 ( ( ! VAR_1 ) ) )  VAR_4 . METHOD_2 ( ( ! VAR_1 ) ) (  METHOD_3 ( ) . METHOD_4 ( VAR_1 ) )  METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( address , VAR_1 ) ; )  return new TYPE_2 ( address , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , d ) )  METHOD_3 ( mContext , id , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND value == 0 ) COND value == 0 ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != value ) COND ( VAR_2 ) != value ( THEN THEN (  VAR_3 = new TYPE_2 ( value ) )  VAR_3 = new TYPE_2 ( value ) ) THEN THEN ) IF IF (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME s ) NAME s ( CASE VAR_1 ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) CASE VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return STRING_2 ; )  return STRING_2 ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return STRING_3 ; )  return STRING_3 ; ) BLOCK BLOCK ) CASE VAR_3 ( CASE VAR_4 ( BLOCK BLOCK (  return STRING_4 ; )  return STRING_4 ; ) BLOCK BLOCK ) CASE VAR_4 ( DEFAULT DEFAULT ( BLOCK BLOCK (  return STRING_5 ; )  return STRING_5 ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = INT_1 ) INIT = INT_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = super . METHOD_1 ( ) ) INIT = super . METHOD_1 ( ) ) VAR VAR (  result = ( VAR_1 * result ) + ( VAR_2 ) )  result = ( VAR_1 * result ) + ( VAR_2 ) (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( status ) )  VAR_1 . METHOD_1 ( status ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( this , VAR_1 ) )  VAR_2 . METHOD_1 ( this , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . println ( STRING_1 ) )  VAR_2 . println ( STRING_1 ) (  return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) )  assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) )  VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) . METHOD_8 ( ) ) ) ; )  return METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) . METHOD_8 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = VAR_4 = VAR_5 )  VAR_3 = VAR_4 = VAR_5 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Runnable ) TYPE java.lang.Runnable ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( ) ) INIT = TYPE_3 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  r . run ( ) )  r . run ( ) ) THEN THEN ) IF IF (  METHOD_3 ( r , VAR_1 ) )  METHOD_3 ( r , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( ) )  service . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) )  VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) )  VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = 0 )  VAR_1 = 0 (  VAR_2 = 0 )  VAR_2 = 0 (  args.out = ( ( short ) ( ( java.lang.Integer . METHOD_2 ( ( ( VAR_3 ) & INT_1 ) ) ) - 16 ) ) )  args.out = ( ( short ) ( ( java.lang.Integer . METHOD_2 ( ( ( VAR_3 ) & INT_1 ) ) ) - 16 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN android.bluetooth.BluetoothDevice[] ) RETURN android.bluetooth.BluetoothDevice[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return new android.bluetooth.BluetoothDevice [ 0 ] ; )  return new android.bluetooth.BluetoothDevice [ 0 ] ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , index ) ; )  return METHOD_3 ( mContext , VAR_1 , index ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( key != null ) && ( VAR_1 . METHOD_2 ( key ) ) ) COND ( key != null ) && ( VAR_1 . METHOD_2 ( key ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_3 ( STRING_1 ) )  TYPE_1 . METHOD_3 ( STRING_1 ) (  METHOD_4 ( VAR_3 ) )  METHOD_4 ( VAR_3 ) ) BLOCK BLOCK ( FINALLY FINALLY (  TYPE_1 . METHOD_3 ( STRING_2 ) )  TYPE_1 . METHOD_3 ( STRING_2 ) (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME f ) NAME f ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME c ) NAME c ( INIT = METHOD_2 ( f , VAR_1 ) ) INIT = METHOD_2 ( f , VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3<java.util.List<?>> ) TYPE TYPE_3<java.util.List<?>> ( NAME VAR_2 ) NAME VAR_2 ( INIT = c . METHOD_1 ( ) ) INIT = c . METHOD_1 ( ) ) VAR VAR (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  VAR_2 = TYPE_1 . METHOD_1 ( context , VAR_1 , VAR_3 ) )  VAR_2 = TYPE_1 . METHOD_1 ( context , VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ( INIT = null ) INIT = null ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( output ) )  TYPE_1 . METHOD_2 ( output ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.RuntimeException ) TYPE java.lang.RuntimeException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( config , VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( config , VAR_1 , VAR_2 ) (  VAR_4 . METHOD_3 ( VAR_5 ) )  VAR_4 . METHOD_3 ( VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( float ) ( VAR_1 ) ) ; )  return ( ( float ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME call ) NAME call ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  server . METHOD_1 ( ) )  server . METHOD_1 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static native ) MODIFIER static native ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class ) TYPE java.lang.Class ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.Class[] ) TYPE java.lang.Class[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_2 . METHOD_3 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != state ) COND ( VAR_2 ) != state ( THEN THEN (  VAR_2 = state )  VAR_2 = state (  METHOD_2 ( state ) )  METHOD_2 ( state ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null ) )  TYPE_1 . METHOD_2 ( null ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Integer ) RETURN java.lang.Integer ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_2 ( type , name ) ; )  return VAR_1 . METHOD_2 ( type , name ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 , false ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + ( this ) ) ) )  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + ( this ) ) ) ) THEN THEN ) IF IF (  VAR_1 = VAR_4 )  VAR_1 = VAR_4 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Set<java.lang.Integer> ) TYPE java.util.Set<java.lang.Integer> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = ( VAR_1 != null ) ? new TYPE_2 < java.lang.Integer > ( VAR_1 ) : null )  VAR_2 = ( VAR_1 != null ) ? new TYPE_2 < java.lang.Integer > ( VAR_1 ) : null (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_1 . METHOD_2 ( null ) )  VAR_1 . METHOD_2 ( null ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg * 1 ; )  return arg * 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_2 . i ( STRING_1 , STRING_2 ) )  TYPE_2 . i ( STRING_1 , STRING_2 ) (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( TYPE_3 . METHOD_2 ( VAR_1 ) ) || ( TYPE_4 . METHOD_3 ( VAR_1 ) ) ; )  return ( TYPE_3 . METHOD_2 ( VAR_1 ) ) || ( TYPE_4 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) == ( VAR_2 ) ) || ( ( VAR_1 ) == ( VAR_3 ) ) ; )  return ( ( VAR_1 ) == ( VAR_2 ) ) || ( ( VAR_1 ) == ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  return ( VAR_1 ) != null ; )  return ( VAR_1 ) != null ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ( ( VAR_2 . getName ( ) ) + ( TYPE_1 . METHOD_2 ( ) ) ) ) ; )  return VAR_1 . METHOD_1 ( ( ( VAR_2 . getName ( ) ) + ( TYPE_1 . METHOD_2 ( ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != ( this . VAR_1 ) ) COND VAR_1 != ( this . VAR_1 ) ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return ( start ) + offset ; )  return ( start ) + offset ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( ) . METHOD_2 ( true ) )  METHOD_1 ( ) . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) <= INT_1 ) COND ( VAR_2 ) <= INT_1 ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return new TYPE_3 ( VAR_1 ) ; )  return new TYPE_3 ( VAR_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) INIT = STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME expected ) NAME expected ( INIT = STRING_6 + STRING_7 ) INIT = STRING_6 + STRING_7 ) VAR VAR (  assertEquals ( expected , METHOD_2 ( VAR_1 ) ) )  assertEquals ( expected , METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME options ) NAME options ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?extendsTYPE_2> ) TYPE TYPE_1<?extendsTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) (  METHOD_3 ( STRING_1 , VAR_1 ) )  METHOD_3 ( STRING_1 , VAR_1 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND listener != null ) COND listener != null ( THEN THEN ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 . METHOD_2 ( listener ) ) ) COND ! ( VAR_1 . METHOD_2 ( listener ) ) ( THEN THEN (  VAR_1 . METHOD_3 ( listener ) )  VAR_1 . METHOD_3 ( listener ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) ) && ( new java.io.File ( VAR_1 , ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ) ) && ( new java.io.File ( VAR_1 , ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( ( - ( VAR_2 ) ) ) ) INIT = Main . METHOD_2 ( ( - ( VAR_2 ) ) ) ) VAR VAR (  return ( ( long ) ( VAR_1 ) ) ; )  return ( ( long ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME error ) NAME error ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME request ) NAME request ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND request != null ) COND request != null ( THEN THEN (  request . METHOD_3 ( error ) )  request . METHOD_3 ( error ) (  METHOD_4 ( VAR_1 , request ) )  METHOD_4 ( VAR_1 , request ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = true )  VAR_2 = true (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME status ) NAME status ( INIT = TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ) INIT = TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 ) ) VAR VAR (  return status ; )  return status ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  c . get ( null ) )  c . get ( null ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( 5 ) )  METHOD_3 ( 5 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return a . equals ( b ) ; )  return a . equals ( b ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR (  VAR_1 = METHOD_2 ( false , STRING_1 ) )  VAR_1 = METHOD_2 ( false , STRING_1 ) (  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) )  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 ) (  METHOD_3 ( VAR_1 , VAR_3 , STRING_3 ) )  METHOD_3 ( VAR_1 , VAR_3 , STRING_3 ) (  METHOD_3 ( VAR_1 , VAR_4 , STRING_4 ) )  METHOD_3 ( VAR_1 , VAR_4 , STRING_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return key ; )  return key ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( count ) == 0 ; )  return ( count ) == 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . get ( VAR_1 ) ) INIT = VAR_3 . get ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  return VAR_4 . get ( VAR_2 ) ; )  return VAR_4 . get ( VAR_2 ) ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device ) ; )  return service . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , 0 , null ) )  METHOD_1 ( VAR_1 , 0 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME a ) NAME a ( IN VAR_2 . values ( ) ) IN VAR_2 . values ( ) ( BLOCK BLOCK (  METHOD_3 ( a ) )  METHOD_3 ( a ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_2 ) ( VAR_2 . METHOD_1 ( ) ) ) ) INIT = ( ( TYPE_2 ) ( VAR_2 . METHOD_1 ( ) ) ) ) VAR VAR (  return new TYPE_3 ( METHOD_2 ( ) , METHOD_3 ( ) , VAR_1 ) ; )  return new TYPE_3 ( METHOD_2 ( ) , METHOD_3 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( project , true ) )  METHOD_2 ( project , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME expected ) NAME expected ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != expected ) COND VAR_1 != expected ( THEN THEN (  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; )  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 , name , value , TYPE_3 . METHOD_3 ( ) ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , name , value , TYPE_3 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; )  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( this ) )  TYPE_1 . METHOD_2 ( this ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) (  VAR_4 . METHOD_3 ( ) )  VAR_4 . METHOD_3 ( ) (  VAR_5 . METHOD_3 ( ) )  VAR_5 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( VAR_1 + STRING_1 ) + VAR_1 ) INIT = ( VAR_1 + STRING_1 ) + VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_4 ) ) INIT = METHOD_2 ( VAR_4 ) ) VAR VAR (  assertEquals ( VAR_2 , VAR_3 ) )  assertEquals ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 , VAR_2 ) . getName ( ) ) )  assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 , VAR_2 ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_1 ( VAR_4 ) ) INIT = new TYPE_1 ( VAR_4 ) ) VAR VAR (  VAR_3 . device = device )  VAR_3 . device = device (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 (  VAR_6 . METHOD_2 ( VAR_3 ) )  VAR_6 . METHOD_2 ( VAR_3 ) (  METHOD_3 ( VAR_7 ) )  METHOD_3 ( VAR_7 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN byte ) RETURN byte ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( byte ) ( value & INT_1 ) ) ; )  return ( ( byte ) ( value & INT_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 . METHOD_1 ( ) ) ) COND ! ( VAR_2 . METHOD_1 ( ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN byte ) RETURN byte ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return get ( i ) ; )  return get ( i ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) )  METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) (  TYPE_1 . assertTrue ( STRING_2 , VAR_2 . METHOD_4 ( ) ) )  TYPE_1 . assertTrue ( STRING_2 , VAR_2 . METHOD_4 ( ) ) (  VAR_3 = true )  VAR_3 = true (  VAR_4 = VAR_2 . METHOD_5 ( ) )  VAR_4 = VAR_2 . METHOD_5 ( ) (  return STRING_3 ; )  return STRING_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( 10 , 0 ) )  METHOD_2 ( 10 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . set ( TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ) )  VAR_1 . set ( TYPE_1 . METHOD_2 ( this ) . METHOD_3 ( ) ) (  VAR_2 = VAR_1 . get ( ) . METHOD_4 ( ) )  VAR_2 = VAR_1 . get ( ) . METHOD_4 ( ) (  VAR_3 = new TYPE_2 ( this ) )  VAR_3 = new TYPE_2 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  VAR_2 . METHOD_2 ( false ) )  VAR_2 . METHOD_2 ( false ) ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ( ELSE ELSE (  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , STRING_1 ) )  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , STRING_1 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , false ) )  METHOD_2 ( VAR_1 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) INIT = ( ( TYPE_2 ) ( VAR_1 ) ) ) VAR VAR (  VAR_2 . METHOD_2 ( new TYPE_3 ( VAR_3 ) ) )  VAR_2 . METHOD_2 ( new TYPE_3 ( VAR_3 ) ) (  VAR_2 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) )  VAR_2 . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME out ) NAME out ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  out . METHOD_2 ( name ) )  out . METHOD_2 ( name ) (  out . METHOD_3 ( type ) )  out . METHOD_3 ( type ) (  out . METHOD_2 ( VAR_1 ) )  out . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , args , null ) )  METHOD_1 ( VAR_1 , args , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return INT_1 != ( TYPE_2 . METHOD_2 ( i ) ) ? INT_2 : INT_3 ; )  return INT_1 != ( TYPE_2 . METHOD_2 ( i ) ) ? INT_2 : INT_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) >= ( VAR_2 ) ; )  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) >= ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  assertTrue ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_1 ) ) )  assertTrue ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . size ( ) ) == 0 ) COND ( VAR_1 . size ( ) ) == 0 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return ( ( TYPE_1 ) ( VAR_1 . get ( 0 ) ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 . get ( 0 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int[] ) RETURN int[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new java.io.File ( VAR_1 , VAR_4 ) ; )  return new java.io.File ( VAR_1 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( STRING_1 , STRING_2 ) )  c . METHOD_2 ( STRING_1 , STRING_2 ) (  c . METHOD_3 ( null ) )  c . METHOD_3 ( null ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { STRING_1 , STRING_2 } ) . METHOD_3 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { STRING_1 , STRING_2 } ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ( BLOCK BLOCK (  METHOD_2 ( t ) )  METHOD_2 ( t ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ( VAR VAR ( TYPE Main ) TYPE Main ( NAME VAR_1 ) NAME VAR_1 ( INIT = new Main ( ) ) INIT = new Main ( ) ) VAR VAR (  VAR_1 . run ( ) )  VAR_1 . run ( ) (  Main . METHOD_2 ( INT_1 ) )  Main . METHOD_2 ( INT_1 ) (  java.lang.System.out.println ( STRING_2 ) )  java.lang.System.out.println ( STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_3 . METHOD_3 ( VAR_1 ) )  VAR_3 . METHOD_3 ( VAR_1 ) (  VAR_4 . METHOD_3 ( VAR_2 ) )  VAR_4 . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( type , VAR_2 ) ) ) COND ! ( METHOD_2 ( type , VAR_2 ) ) ( THEN THEN (  android.util.Log.e ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.e ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_2> ) TYPE java.util.Set<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = session . METHOD_1 ( ) . METHOD_2 ( ) ) INIT = session . METHOD_1 ( ) . METHOD_2 ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME info ) NAME info ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  info . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) )  info . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  VAR_3 . METHOD_1 ( VAR_4 ) )  VAR_3 . METHOD_1 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( new TYPE_2 < > ( ) , false , false ) )  TYPE_1 . METHOD_1 ( new TYPE_2 < > ( ) , false , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_2 . e ( VAR_1 , STRING_1 ) )  TYPE_2 . e ( VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( x . METHOD_3 ( ) ) )  METHOD_2 ( x . METHOD_3 ( ) ) (  print ( TYPE_2 . METHOD_4 ( x . METHOD_5 ( ) ) ) )  print ( TYPE_2 . METHOD_4 ( x . METHOD_5 ( ) ) ) (  METHOD_6 ( x ) )  METHOD_6 ( x ) (  METHOD_7 ( ) )  METHOD_7 ( ) (  METHOD_8 ( x ) )  METHOD_8 ( x ) (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2[] ) TYPE TYPE_2[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . METHOD_2 ( type ) ) INIT = TYPE_3 . METHOD_2 ( type ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 == ( VAR_3 ) ) COND VAR_2 == ( VAR_3 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( ) , true , VAR_1 ) ; )  return METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( ) , true , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( METHOD_2 ( ) ) && ( VAR_1 ) ) && ( VAR_2 ) ; )  return ( ( METHOD_2 ( ) ) && ( VAR_1 ) ) && ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4<java.lang.String> ) TYPE TYPE_4<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ( INIT = device . METHOD_2 ( STRING_1 ) ) INIT = device . METHOD_2 ( STRING_1 ) ) VAR VAR (  VAR_1 . get ( ) )  VAR_1 . get ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME from ) NAME from ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME to ) NAME to ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( from ) ) INIT = TYPE_1 . METHOD_2 ( from ) ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( to ) ) INIT = TYPE_1 . METHOD_2 ( to ) ) VAR VAR (  return ( ! VAR_1 ) && VAR_2 ; )  return ( ! VAR_1 ) && VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) )  assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( ) ) (  assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( ) ) )  assertEquals ( STRING_1 , VAR_2 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( true ) )  TYPE_1 . METHOD_2 ( true ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  TYPE_1 . METHOD_2 ( false ) )  TYPE_1 . METHOD_2 ( false ) (  METHOD_4 ( VAR_1 , 0 ) )  METHOD_4 ( VAR_1 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( false ) ) )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( false ) ) (  return super . METHOD_1 ( x ) ; )  return super . METHOD_1 ( x ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 ) INIT = VAR_4 ) VAR VAR (  VAR_4 = VAR_1 )  VAR_4 = VAR_1 (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( VAR_3 ) )  TYPE_1 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , arg , 0 , TYPE_1 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 , arg , 0 , TYPE_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( address ) ; )  return TYPE_1 . METHOD_2 ( address ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) )  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) (  TYPE_1 . METHOD_2 ( STRING_3 , STRING_4 ) )  TYPE_1 . METHOD_2 ( STRING_3 , STRING_4 ) (  TYPE_1 . METHOD_2 ( STRING_5 , STRING_6 ) )  TYPE_1 . METHOD_2 ( STRING_5 , STRING_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ) INIT = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ) VAR VAR (  VAR_2 . METHOD_3 ( VAR_1 , 1 ) )  VAR_2 . METHOD_3 ( VAR_1 , 1 ) (  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == VAR_2 ) COND VAR_1 == VAR_2 ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF ( IF IF ( COND VAR_1 == VAR_3 ) COND VAR_1 == VAR_3 ( THEN THEN (  return VAR_4 ; )  return VAR_4 ; ) THEN THEN ) IF IF (  return VAR_5 . get ( VAR_1 ) . METHOD_2 ( ) ; )  return VAR_5 . get ( VAR_1 ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME assertEquals ) NAME assertEquals ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != expected ) COND VAR_1 != expected ( THEN THEN (  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; )  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) INIT = VAR_1 . METHOD_3 ( VAR_4 ) ) VAR VAR (  return VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; )  return VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return value < < ( VAR_1 & 3 ) ; )  return value < < ( VAR_1 & 3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( url , VAR_1 ) ; )  return new TYPE_3 ( url , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 ) ; )  return METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( id , ( - 1 ) , VAR_1 ) ; )  return new TYPE_1 ( id , ( - 1 ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND type . METHOD_2 ( ) ) COND type . METHOD_2 ( ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_3 ( type ) ; )  return METHOD_3 ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return super . METHOD_1 ( key , value ) ; )  return super . METHOD_1 ( key , value ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertTrue ( TYPE_1 . METHOD_2 ( ) ) )  assertTrue ( TYPE_1 . METHOD_2 ( ) ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1> ) TYPE java.util.Set<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ( ELSE ELSE (  return VAR_2 = new TYPE_2 ( ) ; )  return VAR_2 = new TYPE_2 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw TYPE_1 . METHOD_2 ( ) ; )  throw TYPE_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 2 ] ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 2 ] ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . d ( this , STRING_1 , call ) )  TYPE_2 . d ( this , STRING_1 , call ) (  VAR_1 . METHOD_2 ( call ) )  VAR_1 . METHOD_2 ( call ) ( IF IF ( COND call . equals ( VAR_2 ) ) COND call . equals ( VAR_2 ) ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( 3 , 4 ) )  TYPE_1 . METHOD_2 ( 3 , 4 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return super . METHOD_1 ( ) ; )  return super . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( IF IF ( COND ( VAR_2 . size ( ) ) == 0 ) COND ( VAR_2 . size ( ) ) == 0 ( THEN THEN (  METHOD_3 ( STRING_1 ) )  METHOD_3 ( STRING_1 ) (  VAR_3 . METHOD_4 ( VAR_4 ) )  VAR_3 . METHOD_4 ( VAR_4 ) ) THEN THEN ) IF IF (  METHOD_5 ( VAR_5 class , VAR_6 ) )  METHOD_5 ( VAR_5 class , VAR_6 ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME value ) NAME value ( IN TYPE_1 . values ( ) ) IN TYPE_1 . values ( ) ( BLOCK BLOCK ( IF IF ( COND i == index ) COND i == index ( THEN THEN (  return value ; )  return value ; ) THEN THEN ) IF IF (  i ++ )  i ++ ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . set ( config ) )  VAR_1 . set ( config ) (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  VAR_3 . METHOD_3 ( VAR_1 ) )  VAR_3 . METHOD_3 ( VAR_1 ) (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) )  METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ( INIT = VAR_3 . METHOD_2 ( VAR_4 ) ) INIT = VAR_3 . METHOD_2 ( VAR_4 ) ) VAR VAR (  VAR_3 . METHOD_3 ( msg ) )  VAR_3 . METHOD_3 ( msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[][] ) RETURN TYPE_1[][] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( args [ 1 ] ) )  TYPE_1 . METHOD_2 ( args [ 1 ] ) (  Main . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_2 ) , new TYPE_2 ( STRING_3 , STRING_4 ) ) )  Main . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_2 ) , new TYPE_2 ( STRING_3 , STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_2 . METHOD_2 ( ) ) ) COND ! ( TYPE_2 . METHOD_2 ( ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( call != null ) && ( TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ) ; )  return ( call != null ) && ( TYPE_3 . METHOD_3 ( call . METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( VAR_2 , STRING_1 ) ) INIT = new TYPE_1 ( VAR_2 , STRING_1 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_3 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( in , type , arg ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( in , type , arg ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_5 . METHOD_2 ( ) ) INIT = TYPE_5 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_1 ) ) THEN THEN ) IF IF (  return VAR_2 . METHOD_4 ( ) ; )  return VAR_2 . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME ret ) NAME ret ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND msg != null ) COND msg != null ( THEN THEN (  android.os.AsyncResult . METHOD_2 ( msg , ret , null ) )  android.os.AsyncResult . METHOD_2 ( msg , ret , null ) (  msg . METHOD_3 ( ) )  msg . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) )  TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) (  TYPE_1 . METHOD_3 ( INT_2 , VAR_1 ) )  TYPE_1 . METHOD_3 ( INT_2 , VAR_1 ) (  VAR_2 . METHOD_4 ( true ) )  VAR_2 . METHOD_4 ( true ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) )  METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( VAR_2 class , TYPE_1 . values ( ) ) . METHOD_2 ( new TYPE_4 ( ) , VAR_1 ) ; )  return new TYPE_3 ( VAR_2 class , TYPE_1 . values ( ) ) . METHOD_2 ( new TYPE_4 ( ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg * INT_1 ; )  return arg * INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 . METHOD_3 ( ) ; )  return VAR_1 . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ) COND ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) ) ( THEN THEN (  return VAR_2 . METHOD_1 ( VAR_3 , VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_3 , VAR_1 ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_3 . METHOD_1 ( event ) )  VAR_3 . METHOD_1 ( event ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1<TYPE_2>> ) RETURN java.util.Set<TYPE_1<TYPE_2>> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1<TYPE_2>> ) TYPE java.util.Set<TYPE_1<TYPE_2>> ( NAME result ) NAME result ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR (  return result == null ? VAR_1 = METHOD_2 ( ) : result ; )  return result == null ? VAR_1 = METHOD_2 ( ) : result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = super . METHOD_2 ( ) )  VAR_1 = super . METHOD_2 ( ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  assertTrue ( ( ( VAR_1 . length ) > 0 ) ) )  assertTrue ( ( ( VAR_1 . length ) > 0 ) ) (  assertTrue ( ( ( VAR_1 . length ) < 10 ) ) )  assertTrue ( ( ( VAR_1 . length ) < 10 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 = METHOD_2 ( false , STRING_1 ) )  VAR_1 = METHOD_2 ( false , STRING_1 ) (  TYPE_1 . fail ( ) )  TYPE_1 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND x != false ) COND x != false ( THEN THEN (  return INT_1 ; )  return INT_1 ; ) THEN THEN ( ELSE ELSE (  return INT_2 ; )  return INT_2 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?superTYPE_2> ) TYPE TYPE_1<?superTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( IN METHOD_3 ( true ) ) IN METHOD_3 ( true ) ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_2 ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND e instanceof TYPE_2 ) COND e instanceof TYPE_2 ( THEN THEN (  VAR_1 [ VAR_2 ] = true )  VAR_1 [ VAR_2 ] = true (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) THEN THEN ) IF IF (  super . METHOD_1 ( t , e ) )  super . METHOD_1 ( t , e ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME uri ) NAME uri ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_5 ) ++ ) > 0 ) COND ( ( VAR_5 ) ++ ) > 0 ( THEN THEN (  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) > ( VAR_2 ) ; )  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) > ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , 0 ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME r ) NAME r ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , flags , null ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , flags , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  return ( VAR_1 . y ) + 3 ; )  return ( VAR_1 . y ) + 3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return s . equals ( STRING_1 ) ; )  return s . equals ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 , VAR_2 . get ( id ) . VAR_4 ) )  a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 , VAR_2 . get ( id ) . VAR_4 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) )  VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( VAR_2 ) ) - ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; )  return ( TYPE_1 . METHOD_2 ( VAR_2 ) ) - ( TYPE_1 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN char ) RETURN char ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 & INT_1 ) INIT = VAR_1 & INT_1 ) VAR VAR (  return ( value > > VAR_3 ) + VAR_3 ; )  return ( value > > VAR_3 ) + VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 , VAR_4 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 > ( value . length ) ) COND VAR_1 > ( value . length ) ( THEN THEN (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , true , false , true ) )  METHOD_2 ( false , true , false , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , VAR_1 , VAR_2 , length , ( ! ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  a . METHOD_2 ( id , VAR_2 . get ( id ) . request , METHOD_3 ( VAR_2 . get ( id ) ) ) )  a . METHOD_2 ( id , VAR_2 . get ( id ) . request , METHOD_3 ( VAR_2 . get ( id ) ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_2 . start ( ) )  VAR_2 . start ( ) (  VAR_3 = true )  VAR_3 = true (  METHOD_4 ( VAR_3 ) )  METHOD_4 ( VAR_3 ) (  VAR_3 = ! ( VAR_3 ) )  VAR_3 = ! ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( type ) ; )  return VAR_2 . METHOD_2 ( type ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + type ) ) ; )  return METHOD_3 ( ( STRING_1 + type ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( null ) , VAR_2 ) )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_2 ( null ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) )  METHOD_1 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_3 ) NAME VAR_3 ( INIT = new android.content.Intent ( VAR_4 ) ) INIT = new android.content.Intent ( VAR_4 ) ) VAR VAR (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.ArrayList<TYPE_1> ) RETURN java.util.ArrayList<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; )  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( VAR_1 ) ? VAR_3 : VAR_4 ) INIT = ( VAR_1 ) ? VAR_3 : VAR_4 ) VAR VAR (  VAR_5 . METHOD_2 ( VAR_2 ) )  VAR_5 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?extendsTYPE_2> ) TYPE TYPE_1<?extendsTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = this ) INIT = this ) VAR VAR ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) )  VAR_1 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return key ; )  return key ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME format ) NAME format ( INIT = new TYPE_2 ( STRING_1 , VAR_2 ) ) INIT = new TYPE_2 ( STRING_1 , VAR_2 ) ) VAR VAR (  format . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  format . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) (  return format . format ( new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) ) ; )  return format . format ( new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( i , b ) )  METHOD_2 ( i , b ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( this ) ; )  return TYPE_1 . METHOD_3 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( this , VAR_1 ) )  VAR_2 . METHOD_1 ( this , VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 ) (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_4 ( VAR_2 , false ) )  METHOD_4 ( VAR_2 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( call ) ) COND VAR_1 . METHOD_2 ( call ) ( THEN THEN (  VAR_1 . METHOD_3 ( call ) )  VAR_1 . METHOD_3 ( call ) ) THEN THEN ) IF IF (  call . METHOD_4 ( VAR_2 ) )  call . METHOD_4 ( VAR_2 ) (  METHOD_5 ( call ) )  METHOD_5 ( call ) (  METHOD_6 ( ) )  METHOD_6 ( ) (  call . METHOD_7 ( ) )  call . METHOD_7 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . assertTrue ( VAR_2 , VAR_3 ) )  TYPE_1 . assertTrue ( VAR_2 , VAR_3 ) ) THEN THEN ( ELSE ELSE (  TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 ) )  TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( ) )  METHOD_2 ( ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_3 . METHOD_2 ( ) ) ) COND ! ( VAR_3 . METHOD_2 ( ) ) ( THEN THEN (  VAR_1 ++ )  VAR_1 ++ ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  android.util.Log . METHOD_3 ( VAR_1 . TAG , STRING_1 ) )  android.util.Log . METHOD_3 ( VAR_1 . TAG , STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_2 . METHOD_2 ( VAR_4 , VAR_1 , VAR_2 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_4 , VAR_1 , VAR_2 ) ) VAR VAR (  VAR_5 = new TYPE_3 ( this , VAR_3 ) )  VAR_5 = new TYPE_3 ( this , VAR_3 ) (  return VAR_5 ; )  return VAR_5 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_1 . TAG , STRING_1 ) (  VAR_2 . METHOD_2 ( VAR_3 , 0 ) )  VAR_2 . METHOD_2 ( VAR_3 , 0 ) (  METHOD_3 ( new TYPE_1 ( VAR_4 ) ) )  METHOD_3 ( new TYPE_1 ( VAR_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a - b )  c = a - b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND value == 0 ) COND value == 0 ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != value ) COND ( VAR_2 ) != value ( THEN THEN (  mContext = new TYPE_2 ( value ) )  mContext = new TYPE_2 ( value ) ) THEN THEN ) IF IF (  return mContext ; )  return mContext ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_1 ( context , callback , VAR_1 , VAR_2 ) ) INIT = new TYPE_1 ( context , callback , VAR_1 , VAR_2 ) ) VAR VAR (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND method == null ) COND method == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( method ) )  VAR_1 . METHOD_2 ( method ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg / ( - 1 ) ; )  return arg / ( - 1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = ~ arg ) INIT = ~ arg ) VAR VAR (  return VAR_2 + ( ~ VAR_2 ) ; )  return VAR_2 + ( ~ VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , s ) )  android.util.Log.d ( VAR_2 . TAG , s ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) (  throw new java.lang.RuntimeException ( STRING_1 ) ; )  throw new java.lang.RuntimeException ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( expected , expected . length , VAR_1 ) )  TYPE_1 . METHOD_2 ( expected , expected . length , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( this , element ) )  TYPE_3 . METHOD_2 ( this , element ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME src ) NAME src ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME d ) NAME d ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return d . METHOD_3 ( VAR_2 , src ) ; )  return d . METHOD_3 ( VAR_2 , src ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME error ) NAME error ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME request ) NAME request ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  request . METHOD_3 ( error ) )  request . METHOD_3 ( error ) ( IF IF ( COND request != null ) COND request != null ( THEN THEN (  METHOD_4 ( VAR_1 , request ) )  METHOD_4 ( VAR_1 , request ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  log ( STRING_1 ) )  log ( STRING_1 ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 ) ; )  return METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , n ) ) )  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , n ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( STRING_1 ) ) COND key . METHOD_2 ( STRING_1 ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND key . METHOD_2 ( STRING_2 ) ) COND key . METHOD_2 ( STRING_2 ) ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) . METHOD_1 ( ) ) == null ) COND ( METHOD_2 ( ) . METHOD_1 ( ) ) == null ( THEN THEN (  METHOD_2 ( ) . VAR_2 = TYPE_1 . METHOD_3 ( this , VAR_1 ) )  METHOD_2 ( ) . VAR_2 = TYPE_1 . METHOD_3 ( this , VAR_1 ) ) THEN THEN ) IF IF (  return METHOD_2 ( ) . METHOD_1 ( ) ; )  return METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device ) ; )  return service . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  Main . METHOD_3 ( new TYPE_2 ( ) ) )  Main . METHOD_3 ( new TYPE_2 ( ) ) (  Main . METHOD_3 ( new TYPE_3 ( ) ) )  Main . METHOD_3 ( new TYPE_3 ( ) ) (  Main . METHOD_3 ( new TYPE_4 ( ) ) )  Main . METHOD_3 ( new TYPE_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_2 , VAR_1 ) )  METHOD_3 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , VAR_2 ) )  METHOD_3 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = new TYPE_1 ( VAR_2 ) )  VAR_1 = new TYPE_1 ( VAR_2 ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( null , name , null , VAR_1 ) ; )  return new TYPE_1 ( null , name , null , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . get ( VAR_1 ) ; )  return VAR_2 . get ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 ) INIT = VAR_3 ) VAR VAR (  VAR_3 = ( VAR_1 . METHOD_2 ( VAR_4 , 0 ) ) != 0 )  VAR_3 = ( VAR_1 . METHOD_2 ( VAR_4 , 0 ) ) != 0 ( IF IF ( COND ( VAR_3 ) != VAR_2 ) COND ( VAR_3 ) != VAR_2 ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME subId ) NAME subId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , null , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  new TYPE_1 ( METHOD_2 ( ) , null , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  e . METHOD_2 ( ( ( java.lang.Runnable ) ( null ) ) ) )  e . METHOD_2 ( ( ( java.lang.Runnable ) ( null ) ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , null , VAR_2 , VAR_3 , VAR_4 ) )  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , null , VAR_2 , VAR_3 , VAR_4 ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( fd ) != null ) COND ( fd ) != null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  fd = null )  fd = null (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME log ) NAME log ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  log . METHOD_2 ( null , STRING_1 , VAR_1 , VAR_2 , VAR_3 ) )  log . METHOD_2 ( null , STRING_1 , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 [ VAR_2 ] ; )  return VAR_1 [ VAR_2 ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = 0 )  VAR_1 = 0 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 , VAR_5 , VAR_6 ) ; )  return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , null , VAR_4 , VAR_5 , VAR_6 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_2 ( VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return os . METHOD_1 ( path , name , VAR_1 ) ; )  return os . METHOD_1 ( path , name , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( new java.io.File ( VAR_1 ) ) )  TYPE_1 . METHOD_1 ( new java.io.File ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , new TYPE_2 ( null ) ) )  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 , new TYPE_2 ( null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME target ) NAME target ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; )  return java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) )  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_3 ( ( STRING_1 + STRING_2 ) ) ; )  throw new TYPE_3 ( ( STRING_1 + STRING_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , null ) )  VAR_1 . METHOD_2 ( VAR_2 , null ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ? null : VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ? null : VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . get ( VAR_1 ) ) INIT = VAR_3 . get ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg > > INT_1 ) & INT_2 ; )  return ( arg > > INT_1 ) & INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.ArrayList<TYPE_1> ) RETURN java.util.ArrayList<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) , VAR_1 . METHOD_4 ( VAR_3 ) , ( ( VAR_1 . METHOD_3 ( VAR_4 ) ) != 0 ) , VAR_1 . METHOD_4 ( VAR_5 ) ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) , VAR_1 . METHOD_4 ( VAR_3 ) , ( ( VAR_1 . METHOD_3 ( VAR_4 ) ) != 0 ) , VAR_1 . METHOD_4 ( VAR_5 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.File ) RETURN TYPE_1.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  METHOD_1 ( 4 , STRING_1 , VAR_1 , VAR_2 , new TYPE_2 ( ) ) )  METHOD_1 ( 4 , STRING_1 , VAR_1 , VAR_2 , new TYPE_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) )  VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 ) (  return ( VAR_2 ) < ( VAR_3 ) ; )  return ( VAR_2 ) < ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return d . METHOD_3 ( ) ; )  return d . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.lang.String> ) TYPE java.util.List<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , false , VAR_2 ) )  METHOD_1 ( VAR_1 , false , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new java.lang.RuntimeException ( STRING_1 ) ; )  throw new java.lang.RuntimeException ( STRING_1 ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME res ) NAME res ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( res ) )  METHOD_3 ( res ) (  return res ; )  return res ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.util.List<java.lang.String> ) RETURN java.util.List<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME m ) NAME m ( INIT = METHOD_2 ( method ) ) INIT = METHOD_2 ( method ) ) VAR VAR ( IF IF ( COND m == null ) COND m == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN byte[][] ) RETURN byte[][] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME f ) NAME f ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK ( IF IF ( COND f . METHOD_1 ( ) . equals ( VAR_1 ) ) COND f . METHOD_1 ( ) . equals ( VAR_1 ) ( THEN THEN (  return f ; )  return f ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( VAR_1 . METHOD_1 ( ) ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 . METHOD_1 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) )  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( ) )  service . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_2 . length ) ) ) && ( VAR_2 [ VAR_1 ] . METHOD_2 ( c ) ) ; )  return ( ( VAR_1 >= 0 ) && ( VAR_1 < ( VAR_2 . length ) ) ) && ( VAR_2 [ VAR_1 ] . METHOD_2 ( c ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( expected ) . METHOD_4 ( ) ) ) INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( expected ) . METHOD_4 ( ) ) ) VAR VAR (  assertEquals ( VAR_2 , VAR_1 ) )  assertEquals ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Integer[] ) TYPE java.lang.Integer[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.lang.Integer [ VAR_2 ] ) INIT = new java.lang.Integer [ VAR_2 ] ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) VAR VAR (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_4 ) NAME VAR_4 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device , VAR_1 , VAR_2 ) ; )  return service . METHOD_1 ( device , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME res ) NAME res ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = new TYPE_2 ( mRS , res , VAR_2 ) )  VAR_1 = new TYPE_2 ( mRS , res , VAR_2 ) (  VAR_3 = new TYPE_3 ( mRS , res , VAR_4 ) )  VAR_3 = new TYPE_3 ( mRS , res , VAR_4 ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME input ) NAME input ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( java.lang.String ) ( TYPE_1 . METHOD_1 ( null , VAR_1 , VAR_3 , VAR_4 , null , null , VAR_2 ) ) ) ; )  return ( ( java.lang.String ) ( TYPE_1 . METHOD_1 ( null , VAR_1 , VAR_3 , VAR_4 , null , null , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( name ) ; )  return VAR_2 . METHOD_2 ( name ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + name ) ) ; )  return METHOD_3 ( ( STRING_1 + name ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  assertEquals ( count , METHOD_3 ( ) ) )  assertEquals ( count , METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( null ) )  METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , name , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , name , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME msg ) NAME msg ( INIT = VAR_4 . METHOD_2 ( VAR_5 ) ) INIT = VAR_4 . METHOD_2 ( VAR_5 ) ) VAR VAR (  msg.arg1 = VAR_1 )  msg.arg1 = VAR_1 (  VAR_4 . METHOD_3 ( msg ) )  VAR_4 . METHOD_3 ( msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 3 , 16 , false ) )  t . METHOD_2 ( 3 , 16 , false ) (  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) )  args.out = TYPE_3 . METHOD_3 ( VAR_1 , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<java.lang.String,java.lang.String> ) TYPE TYPE_1<java.lang.String,java.lang.String> ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( args ) )  METHOD_2 ( ) . METHOD_3 ( args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( VAR_2 ) ) INIT = Main . METHOD_2 ( VAR_2 ) ) VAR VAR (  return ( ( int ) ( VAR_1 ) ) ; )  return ( ( int ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; )  return new TYPE_2 ( VAR_1 . METHOD_3 ( ) ) ; (  METHOD_4 ( ( VAR_2 = STRING_1 ) ) )  METHOD_4 ( ( VAR_2 = STRING_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return value < < ( VAR_1 & INT_1 ) ; )  return value < < ( VAR_1 & INT_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME error ) NAME error ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . toString ( error . METHOD_2 ( ) ) . METHOD_3 ( STRING_1 , STRING_2 ) ; )  return TYPE_1 . toString ( error . METHOD_2 ( ) ) . METHOD_3 ( STRING_1 , STRING_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . assertFalse ( VAR_1 . METHOD_2 ( ) ) )  TYPE_1 . assertFalse ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 ) )  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2>[] ) TYPE TYPE_1<TYPE_2>[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_1 . length ) )  this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_1 . length ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw TYPE_2 . METHOD_2 ( STRING_1 ) ; )  throw TYPE_2 . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_2 . log ( STRING_1 ) )  TYPE_2 . log ( STRING_1 ) ) THEN THEN ) IF IF (  VAR_3 = null )  VAR_3 = null ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  VAR_4 . METHOD_1 ( ) )  VAR_4 . METHOD_1 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return STRING_1 . equals ( s ) ; )  return STRING_1 . equals ( s ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( 8 ) )  a = Main . METHOD_2 ( 8 ) (  b = Main . METHOD_2 ( 3 ) )  b = Main . METHOD_2 ( 3 ) (  c = a / b )  c = a / b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 class ) )  TYPE_1 . METHOD_1 ( VAR_1 class ) (  TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = METHOD_2 ( ) )  VAR_1 = METHOD_2 ( ) (  VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) )  VAR_2 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ( INIT = 1 ) INIT = 1 ) VAR VAR (  VAR_5 = METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) )  VAR_5 = METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) >= ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ? VAR_1 : null ; )  return ( TYPE_1 . METHOD_2 ( VAR_1 ) ) >= ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ? VAR_1 : null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?>[] ) TYPE java.lang.Class<?>[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2[] ) TYPE TYPE_2[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?>[][] ) TYPE java.lang.Class<?>[][] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , STRING_1 ) )  METHOD_3 ( VAR_1 , STRING_1 ) (  TYPE_2 . fail ( ) )  TYPE_2 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ) COND ! ( METHOD_2 ( VAR_1 , VAR_2 , null ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( VAR_3 , null ) )  METHOD_3 ( VAR_3 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( index == ( this . index ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; )  return ( index == ( this . index ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 class , name , VAR_3 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 class , name , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  assertEquals ( INT_1 , VAR_1 . METHOD_3 ( ) ) )  assertEquals ( INT_1 , VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME data ) NAME data ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == ( VAR_3 ) ) COND ( VAR_2 ) == ( VAR_3 ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_2 ( ) ) INIT = VAR_5 . METHOD_2 ( ) ) VAR VAR (  VAR_4 . METHOD_3 ( VAR_6 , VAR_1 ) )  VAR_4 . METHOD_3 ( VAR_6 , VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME src ) NAME src ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new byte [ 4 ] ) INIT = new byte [ 4 ] ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME msg ) NAME msg ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  METHOD_3 ( STRING_1 , msg ) )  METHOD_3 ( STRING_1 , msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , 0 ) ; )  return new TYPE_1 ( VAR_1 , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) )  METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) ) (  METHOD_2 ( STRING_2 ) )  METHOD_2 ( STRING_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_1 ( VAR_2 ) )  METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( config ) ) INIT = METHOD_2 ( config ) ) VAR VAR (  return VAR_2 . METHOD_3 ( VAR_1 ) ; )  return VAR_2 . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . METHOD_2 ( VAR_1 ) ) COND TYPE_1 . METHOD_2 ( VAR_1 ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( new TYPE_2 ( ) , VAR_1 , null , VAR_2 , null , VAR_3 , false , true , FLOAT_1 , VAR_4 , ( ( TYPE_3 [ ] ) ( null ) ) ) )  TYPE_1 . METHOD_2 ( new TYPE_2 ( ) , VAR_1 , null , VAR_2 , null , VAR_3 , false , true , FLOAT_1 , VAR_4 , ( ( TYPE_3 [ ] ) ( null ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) (  return METHOD_1 ( VAR_1 , VAR_4 , false ) ; )  return METHOD_1 ( VAR_1 , VAR_4 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( java.lang.String ) ( VAR_2 . METHOD_2 ( new TYPE_1 ( name ) , VAR_1 ) ) ) ; )  return ( ( java.lang.String ) ( VAR_2 . METHOD_2 ( new TYPE_1 ( name ) , VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , status , VAR_2 ) )  VAR_1 . METHOD_1 ( this , status , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( config ) ; )  return service . METHOD_1 ( config ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( name ) )  TYPE_1 . METHOD_1 ( name ) ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_2 . METHOD_2 ( name , arg ) )  TYPE_2 . METHOD_2 ( name , arg ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected abstract ) MODIFIER protected abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME text ) NAME text ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_9 ) NAME VAR_9 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_10 ) NAME VAR_10 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  VAR_4 . METHOD_1 ( ) )  VAR_4 . METHOD_1 ( ) (  VAR_3 = false )  VAR_3 = false ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( args [ 1 ] ) )  TYPE_1 . METHOD_2 ( args [ 1 ] ) (  Main . METHOD_3 ( new TYPE_2 ( ) , new TYPE_3 ( ) ) )  Main . METHOD_3 ( new TYPE_2 ( ) , new TYPE_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME action ) NAME action ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , callback , METHOD_2 ( ) , VAR_2 , action , VAR_3 ) ; )  return METHOD_1 ( VAR_1 , callback , METHOD_2 ( ) , VAR_2 , action , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( ) ; )  return TYPE_4 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_2 . METHOD_2 ( VAR_1 ) ) || ( VAR_3 . METHOD_2 ( VAR_1 ) ) ; )  return ( VAR_2 . METHOD_2 ( VAR_1 ) ) || ( VAR_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( VAR_1 , METHOD_2 ( VAR_2 ) ) )  assertEquals ( VAR_1 , METHOD_2 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) && ( ! ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) ; )  return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) && ( ! ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . i ( VAR_1 . TAG , STRING_1 ) )  TYPE_1 . i ( VAR_1 . TAG , STRING_1 ) (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( a , FLOAT_1 ) ; )  return METHOD_1 ( a , FLOAT_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , new java.lang.String [ 0 ] , new TYPE_1 ( INT_1 , 0 ) ) )  METHOD_1 ( VAR_1 , new java.lang.String [ 0 ] , new TYPE_1 ( INT_1 , 0 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( IN this . METHOD_2 ( ) ) IN this . METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( ( uid ) != ( TYPE_1 . METHOD_2 ( ) ) ) && ( ( VAR_1 ) != ( TYPE_1 . METHOD_2 ( ) ) ) ) COND ( ( uid ) != ( TYPE_1 . METHOD_2 ( ) ) ) && ( ( VAR_1 ) != ( TYPE_1 . METHOD_2 ( ) ) ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME pkg ) NAME pkg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( pkg ) ) == ( VAR_2 ) ) COND ( VAR_1 . METHOD_2 ( pkg ) ) == ( VAR_2 ) ( THEN THEN (  return ( VAR_1 . METHOD_3 ( ) ) == ( pkg . METHOD_3 ( ) ) ; )  return ( VAR_1 . METHOD_3 ( ) ) == ( pkg . METHOD_3 ( ) ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( TYPE_3 . METHOD_3 ( data ) ) )  METHOD_2 ( TYPE_3 . METHOD_3 ( data ) ) (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME uri ) NAME uri ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( uri , null ) )  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( uri , null ) (  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( VAR_1 , null ) )  METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME expected ) NAME expected ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  METHOD_1 ( project , VAR_2 , VAR_3 , VAR_4 , expected ) )  METHOD_1 ( project , VAR_2 , VAR_3 , VAR_4 , expected ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  VAR_3 = TYPE_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( VAR_5 ) )  VAR_3 = TYPE_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( VAR_5 ) (  VAR_6 = VAR_7 . METHOD_4 ( ) . length )  VAR_6 = VAR_7 . METHOD_4 ( ) . length (  VAR_8 = 0 )  VAR_8 = 0 (  VAR_9 = 0 )  VAR_9 = 0 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME verify ) NAME verify ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( type ) ; )  return TYPE_2 . METHOD_2 ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( ) )  VAR_3 . METHOD_2 ( VAR_4 ) . METHOD_3 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) (  VAR_3 = VAR_4 )  VAR_3 = VAR_4 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( VAR_1 , new TYPE_4 ( path . METHOD_2 ( METHOD_3 ( ) ) ) , VAR_2 ) ; )  return new TYPE_3 ( VAR_1 , new TYPE_4 ( path . METHOD_2 ( METHOD_3 ( ) ) ) , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == ( VAR_2 ) ) COND VAR_1 == ( VAR_2 ) ( THEN THEN ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 ) INIT = VAR_4 ) VAR VAR (  VAR_4 = VAR_5 . METHOD_2 ( ) )  VAR_4 = VAR_5 . METHOD_2 ( ) ( IF IF ( COND ( VAR_4 ) != VAR_3 ) COND ( VAR_4 ) != VAR_3 ( THEN THEN (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) INIT = VAR_2 . METHOD_2 ( STRING_1 ) ) VAR VAR (  VAR_1 . c ( STRING_2 ) )  VAR_1 . c ( STRING_2 ) (  VAR_1 . c ( STRING_3 ) )  VAR_1 . c ( STRING_3 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . toString ( ) ) )  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1.File ) RETURN TYPE_1.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME value ) NAME value ( INIT = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ) VAR VAR ( IF IF ( COND ! ( value instanceof TYPE_1 ) ) COND ! ( value instanceof TYPE_1 ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return ( ( TYPE_1 ) ( value ) ) ; )  return ( ( TYPE_1 ) ( value ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME locale ) NAME locale ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( TYPE_4 . METHOD_2 ( locale ) , VAR_1 , VAR_2 ) ; )  return TYPE_3 . METHOD_1 ( TYPE_4 . METHOD_2 ( locale ) , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) instanceof TYPE_1 ) COND ( VAR_1 ) instanceof TYPE_1 ( THEN THEN (  METHOD_2 ( ( ( METHOD_3 ( ) ) - 1 ) ) )  METHOD_2 ( ( ( METHOD_3 ( ) ) - 1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR (  assertTrue ( ( ( i = 2 ) == 2 ) ) )  assertTrue ( ( ( i = 2 ) == 2 ) ) (  assertTrue ( ( i == 2 ) ) )  assertTrue ( ( i == 2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ; )  return ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( id , VAR_1 , VAR_2 ) ; )  return new TYPE_1 ( id , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_1 ( VAR_1 , VAR_2 ) ) INIT = METHOD_1 ( VAR_1 , VAR_2 ) ) VAR VAR (  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) )  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_5 ) NAME VAR_5 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) (  METHOD_4 ( VAR_1 , VAR_3 , VAR_4 ) )  METHOD_4 ( VAR_1 , VAR_3 , VAR_4 ) (  VAR_1 . METHOD_3 ( VAR_5 ) )  VAR_1 . METHOD_3 ( VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log . i ( VAR_2 , STRING_1 ) )  android.util.Log . i ( VAR_2 , STRING_1 ) (  VAR_3 = null )  VAR_3 = null (  VAR_4 = null )  VAR_4 = null (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null ) )  TYPE_1 . METHOD_2 ( null ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return source . METHOD_1 ( ) ; )  return source . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( STRING_1 ) ; )  return METHOD_2 ( STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) )  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) (  assertEquals ( VAR_3 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) )  assertEquals ( VAR_3 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( INT_1 ) )  a = Main . METHOD_2 ( INT_1 ) (  b = Main . METHOD_2 ( INT_2 ) )  b = Main . METHOD_2 ( INT_2 ) (  c = a % b )  c = a % b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) )  VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN int[] ) RETURN int[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ( INIT = new int [ count ] ) INIT = new int [ count ] ) VAR VAR (  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , 0 ) )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , 0 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) )  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) (  VAR_1 . METHOD_3 ( 1 ) )  VAR_1 . METHOD_3 ( 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return new TYPE_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) ) ; )  return new TYPE_1 ( VAR_1 , TYPE_3 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null ) )  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( WHILE WHILE ( COND n > 0 ) COND n > 0 ( BLOCK BLOCK (  device . METHOD_2 ( ) )  device . METHOD_2 ( ) (  n -- )  n -- ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double ) TYPE double ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( d > FLOAT_1 ) != false ? INT_1 : INT_2 ; )  return ( d > FLOAT_1 ) != false ? INT_1 : INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME expected ) NAME expected ( BLOCK BLOCK (  return true ; )  return true ; (  METHOD_1 ( FLOAT_1 ) )  METHOD_1 ( FLOAT_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return ( ( TYPE_1 ) ( VAR_1 [ VAR_2 ] ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 [ VAR_2 ] ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND event . METHOD_2 ( ) . equals ( VAR_1 ) ) COND event . METHOD_2 ( ) . equals ( VAR_1 ) ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( ) ) )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = true )  VAR_3 = true (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CASE VAR_3 ( CASE VAR_4 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CASE VAR_4 ) SWITCH SWITCH (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( null , VAR_1 , STRING_1 ) )  c . METHOD_2 ( null , VAR_1 , STRING_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new java.io.File ( VAR_1 , METHOD_2 ( ) ) ; )  return new java.io.File ( VAR_1 , METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( 1 ) )  METHOD_1 ( 1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return - ( arg1 - VAR_1 ) ; )  return - ( arg1 - VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 . METHOD_2 ( call ) ) COND VAR_2 . METHOD_2 ( call ) ( THEN THEN (  TYPE_1 . i ( this , STRING_1 , call ) )  TYPE_1 . i ( this , STRING_1 , call ) (  call . METHOD_3 ( ) )  call . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , null ) )  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( key , value ) )  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( key , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) )  android.util.Log.d ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ( INIT = false ) INIT = false ) VAR VAR (  METHOD_2 ( VAR_1 , VAR_4 ) )  METHOD_2 ( VAR_1 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME config ) NAME config ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ) COND ( TYPE_1 . METHOD_1 ( ) ) < ( VAR_1 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  log ( TYPE_1 , msg ) )  log ( TYPE_1 , msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , STRING_1 ) ; )  return METHOD_1 ( VAR_1 , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , n ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , n ) ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( METHOD_3 ( i ) , x ) )  METHOD_2 ( METHOD_3 ( i ) , x ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( ( ( TYPE_2 ) ( x ) ) , VAR_1 ) )  METHOD_1 ( ( ( TYPE_2 ) ( x ) ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( VAR_2 ) ) INIT = new TYPE_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME ex ) NAME ex ( BLOCK BLOCK (  throw new TYPE_1 ( ex . getMessage ( ) ) ; )  throw new TYPE_1 ( ex . getMessage ( ) ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  METHOD_3 ( out ) )  METHOD_3 ( out ) (  run ( ) )  run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 . set ( VAR_1 ) )  VAR_4 . set ( VAR_1 ) (  return ( ( TYPE_1 ) ( this . VAR_5 . METHOD_1 ( s , VAR_1 , VAR_2 , VAR_3 ) ) ) ; )  return ( ( TYPE_1 ) ( this . VAR_5 . METHOD_1 ( s , VAR_1 , VAR_2 , VAR_3 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return ( METHOD_2 ( VAR_1 ) ) >= 0 ; )  return ( METHOD_2 ( VAR_1 ) ) >= 0 ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new java.io.File ( VAR_1 ) . getName ( ) ; )  return new java.io.File ( VAR_1 ) . getName ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_3 ( ) ) INIT = METHOD_3 ( ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  VAR_1 . METHOD_4 ( VAR_2 ) )  VAR_1 . METHOD_4 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return ( ( VAR_1 . size ( ) ) * ( VAR_2 ) ) + 4 ; )  return ( ( VAR_1 . size ( ) ) * ( VAR_2 ) ) + 4 ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME ex ) NAME ex ( BLOCK BLOCK (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , ( ( java.lang.String ) ( null ) ) , TYPE_2 . METHOD_2 ( args ) ) )  METHOD_1 ( VAR_1 , ( ( java.lang.String ) ( null ) ) , TYPE_2 . METHOD_2 ( args ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , true , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) )  METHOD_2 ( VAR_1 , true , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME version ) NAME version ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return version == 2 ; )  return version == 2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return ( STRING_1 + STRING_2 ) + ( value ) ; )  return ( STRING_1 + STRING_2 ) + ( value ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . get ( VAR_1 . METHOD_2 ( ) ) ; )  return TYPE_1 . get ( VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) )  TYPE_1 . log ( ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( out , s ) )  TYPE_2 . METHOD_2 ( out , s ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( new TYPE_2 ( VAR_1 ) , VAR_2 , METHOD_3 ( VAR_3 ) ) )  METHOD_2 ( new TYPE_2 ( VAR_1 ) , VAR_2 , METHOD_3 ( VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( VAR_1 , VAR_2 ) ; )  return new TYPE_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND e instanceof TYPE_2 ) COND e instanceof TYPE_2 ( THEN THEN (  VAR_1 [ VAR_2 ] = true )  VAR_1 [ VAR_2 ] = true ) THEN THEN ( ELSE ELSE (  super . METHOD_1 ( t , e ) )  super . METHOD_1 ( t , e ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( id , VAR_2 ) ) ; )  return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( id , VAR_2 ) ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . METHOD_6 ( ) )  VAR_1 . METHOD_6 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = VAR_4 )  VAR_3 = VAR_4 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_1 ( device , this ) ) INIT = VAR_3 . METHOD_1 ( device , this ) ) VAR VAR ( IF IF ( COND VAR_2 == true ) COND VAR_2 == true ( THEN THEN (  VAR_4 = device )  VAR_4 = device (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 ) THEN THEN ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 [ VAR_1 . METHOD_2 ( ) ] ; )  return VAR_2 [ VAR_1 . METHOD_2 ( ) ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return device . METHOD_2 ( key ) ; )  return device . METHOD_2 ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ) THEN THEN ( ELSE ELSE (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.util.List<android.bluetooth.BluetoothDevice> ) RETURN java.util.List<android.bluetooth.BluetoothDevice> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ( INIT = new int [ ] { VAR_3 } ) INIT = new int [ ] { VAR_3 } ) VAR VAR (  return METHOD_3 ( VAR_2 ) ; )  return METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ( INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) VAR VAR ( IF IF ( COND config == null ) COND config == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  METHOD_1 ( config ) )  METHOD_1 ( config ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , true , STRING_3 ) )  METHOD_3 ( VAR_1 , true , STRING_3 ) (  TYPE_2 . fail ( ) )  TYPE_2 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( device ) ; )  return VAR_1 . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 , VAR_4 , listener ) )  METHOD_3 ( VAR_2 ) . METHOD_1 ( VAR_3 , VAR_4 , listener ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 . METHOD_2 ( ) ) != ( - 1 ) ) || ( ( VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) ; )  return ( ( VAR_1 . METHOD_2 ( ) ) != ( - 1 ) ) || ( ( VAR_1 . METHOD_3 ( ) ) != ( - 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ( BLOCK BLOCK (  METHOD_4 ( t ) )  METHOD_4 ( t ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  throw new java.lang.RuntimeException ( ) ; )  throw new java.lang.RuntimeException ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) )  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) (  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) )  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME src ) NAME src ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , src , null ) )  TYPE_1 . METHOD_2 ( VAR_1 , src , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( INT_1 , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , false ) )  VAR_1 = new TYPE_1 ( INT_1 , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_3 ( null ) )  VAR_1 . METHOD_3 ( null ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_3 ) NAME VAR_3 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( WHILE WHILE ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( BLOCK BLOCK (  result . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  result . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == false ) COND ( VAR_2 ) == false ( THEN THEN (  throw new java.lang.RuntimeException ( ( ( VAR_3 . TAG ) + STRING_1 ) ) ; )  throw new java.lang.RuntimeException ( ( ( VAR_3 . TAG ) + STRING_1 ) ) ; ) THEN THEN ) IF IF (  return METHOD_2 ( VAR_1 ) ; )  return METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null , STRING_1 ) )  TYPE_1 . METHOD_2 ( null , STRING_1 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 > 0 ) COND VAR_1 > 0 ( THEN THEN (  VAR_2 -= VAR_1 )  VAR_2 -= VAR_1 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , d , VAR_2 ) )  METHOD_3 ( mContext , id , d , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( METHOD_2 ( ) ) ; )  return TYPE_1 . METHOD_1 ( METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?superTYPE_2> ) TYPE TYPE_1<?superTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_4 . values ( ) ) IN VAR_4 . values ( ) ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . log ( d ) )  TYPE_1 . log ( d ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.lang.Integer,java.lang.Integer> ) RETURN TYPE_1<java.lang.Integer,java.lang.Integer> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  mRS = TYPE_1 . METHOD_2 ( this ) )  mRS = TYPE_1 . METHOD_2 ( this ) (  TYPE_2 = new TYPE_3 ( this ) )  TYPE_2 = new TYPE_3 ( this ) (  TYPE_2 . METHOD_3 ( mRS , METHOD_4 ( ) ) )  TYPE_2 . METHOD_3 ( mRS , METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_1 ( t ) ) COND METHOD_1 ( t ) ( THEN THEN ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( t ) ) INIT = TYPE_1 . METHOD_2 ( t ) ) VAR VAR (  t . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) )  t . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( this ) )  TYPE_1 . METHOD_2 ( this ) (  VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 class ) )  VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 class ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) (  Main . METHOD_4 ( ) )  Main . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE float ) TYPE float ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a + b )  c = a + b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true (  assertEquals ( STRING_1 , METHOD_2 ( STRING_2 , STRING_3 , STRING_4 ) ) )  assertEquals ( STRING_1 , METHOD_2 ( STRING_2 , STRING_3 , STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( 5 - arg ) + 6 ; )  return ( 5 - arg ) + 6 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , getName ( ) , METHOD_3 ( ) ) )  VAR_1 = new TYPE_1 ( METHOD_2 ( ) , getName ( ) , METHOD_3 ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , false , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) )  METHOD_2 ( VAR_1 , false , false , STRING_1 , ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( short ) ( value & INT_1 ) ) ; )  return ( ( short ) ( value & INT_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( a ) )  TYPE_1 . METHOD_1 ( a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_2 ) )  METHOD_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 &= ~ ( VAR_3 ) )  VAR_2 &= ~ ( VAR_3 ) ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 ) INIT = VAR_5 ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_6 ) NAME VAR_6 ( IN VAR_4 ) IN VAR_4 ( BLOCK BLOCK (  VAR_7 &= ~ ( VAR_3 ) )  VAR_7 &= ~ ( VAR_3 ) (  METHOD_2 ( VAR_6 ) )  METHOD_2 ( VAR_6 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( ) ; )  return VAR_1 . get ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) (  assertEquals ( STRING_1 , METHOD_3 ( STRING_2 , STRING_3 , STRING_4 ) ) )  assertEquals ( STRING_1 , METHOD_3 ( STRING_2 , STRING_3 , STRING_4 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3<TYPE_4> ) TYPE TYPE_3<TYPE_4> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME p ) NAME p ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ; )  return ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return x ? 1 : y ? 2 : 3 ; )  return x ? 1 : y ? 2 : 3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME field ) NAME field ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND field == null ) COND field == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( field ) )  VAR_1 . METHOD_2 ( field ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME action ) NAME action ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( context , METHOD_2 ( ) , METHOD_2 ( ) , METHOD_3 ( VAR_2 ) , METHOD_3 ( VAR_2 ) , VAR_1 ) ; )  return new TYPE_1 ( context , METHOD_2 ( ) , METHOD_2 ( ) , METHOD_3 ( VAR_2 ) , METHOD_3 ( VAR_2 ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Class ) TYPE java.lang.Class ( NAME c ) NAME c ( INIT = VAR_1 class ) INIT = VAR_1 class ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = c . METHOD_2 ( ( ( java.lang.Class [ ] ) ( null ) ) ) ) INIT = c . METHOD_2 ( ( ( java.lang.Class [ ] ) ( null ) ) ) ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ( INIT = VAR_2 . METHOD_3 ( ) ) INIT = VAR_2 . METHOD_3 ( ) ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( ( VAR_2 ) - > VAR_2 . METHOD_4 ( this ) ) )  VAR_1 . METHOD_3 ( ( VAR_2 ) - > VAR_2 . METHOD_4 ( this ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_3 ( key . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  return VAR_3 . METHOD_3 ( VAR_1 ) ; )  return VAR_3 . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME type ) NAME type ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . type ( VAR_1 ) )  VAR_2 . type ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  TYPE_1 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , e ) )  TYPE_1 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , e ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 ) >= 20 ? VAR_2 : VAR_3 ; )  return ( VAR_1 ) >= 20 ? VAR_2 : VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( 1 , VAR_1 ) )  VAR_2 . METHOD_2 ( 1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) ) )  assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME format ) NAME format ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME result ) NAME result ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 . format ( number , result , 0 ) )  VAR_1 . format ( number , result , 0 ) (  METHOD_1 ( result , VAR_1 ) )  METHOD_1 ( result , VAR_1 ) (  return result . toString ( ) ; )  return result . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 . TAG ) )  TYPE_2 . METHOD_2 ( VAR_1 . TAG ) (  TYPE_2 . METHOD_3 ( context ) )  TYPE_2 . METHOD_3 ( context ) (  TYPE_2 . METHOD_4 ( ) )  TYPE_2 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) (  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) (  METHOD_6 ( METHOD_7 ( ) ) )  METHOD_6 ( METHOD_7 ( ) ) (  METHOD_8 ( ) )  METHOD_8 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME s ) NAME s ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  METHOD_3 ( VAR_1 , s ) )  METHOD_3 ( VAR_1 , s ) (  s . METHOD_4 ( ) )  s . METHOD_4 ( ) (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) (  s . METHOD_6 ( ) )  s . METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , 0 ) ; )  return new TYPE_1 ( VAR_1 , 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) VAR VAR (  VAR_3 . METHOD_4 ( java.lang.Integer . METHOD_5 ( VAR_2 ) ) )  VAR_3 . METHOD_4 ( java.lang.Integer . METHOD_5 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( a ) )  TYPE_1 . METHOD_1 ( a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME action ) NAME action ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( INT_1 , 0 ) )  METHOD_2 ( INT_1 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( VAR_3 ) ) INIT = VAR_1 . METHOD_2 ( VAR_3 ) ) VAR VAR ( IF IF ( COND VAR_2 . METHOD_3 ( ) ) COND VAR_2 . METHOD_3 ( ) ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static final ) MODIFIER static final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME field ) NAME field ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 & ( 1 < < field ) ) != 0 ; )  return ( VAR_1 & ( 1 < < field ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null ( IF IF ( COND VAR_2 . METHOD_2 ( ) ) COND VAR_2 . METHOD_2 ( ) ( THEN THEN (  TYPE_1 . METHOD_3 ( VAR_2 ) )  TYPE_1 . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) )  VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) (  return TYPE_4 . get ( VAR_4 ) ; )  return TYPE_4 . get ( VAR_4 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( index ) )  METHOD_1 ( index ) (  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; )  return VAR_1 . METHOD_2 ( ( index * ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( VAR_1 ) )  service . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  tree . METHOD_2 ( ) )  tree . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.Integer> ) RETURN java.util.Set<java.lang.Integer> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 < java.lang.Integer > ( VAR_1 ) ; )  return new TYPE_1 < java.lang.Integer > ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ) )  VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ) (  VAR_4 = null )  VAR_4 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR (  return ( ( double ) ( VAR_1 ) ) ; )  return ( ( double ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND name == null ) COND name == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 . get ( name ) ; )  return VAR_2 . get ( name ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) (  METHOD_3 ( STRING_1 , VAR_1 ) )  METHOD_3 ( STRING_1 , VAR_1 ) (  METHOD_3 ( STRING_2 , VAR_1 ) )  METHOD_3 ( STRING_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_2 ( ) (  context . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( context . METHOD_6 ( ) ) , STRING_1 , new java.lang.String [ ] { } ) )  context . METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( context . METHOD_6 ( ) ) , STRING_1 , new java.lang.String [ ] { } ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( ) ) INIT = VAR_3 . METHOD_2 ( ) ) VAR VAR (  VAR_3 . METHOD_3 ( VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_4 ) (  assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) ) )  assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 = ( VAR_3 ) ? VAR_5 : 0 )  VAR_4 = ( VAR_3 ) ? VAR_5 : 0 (  return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; )  return super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = size )  this . VAR_1 = size ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE java.util.Map<java.lang.String,java.lang.String> ) TYPE java.util.Map<java.lang.String,java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( test ) ) )  VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( test ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) )  VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) )  this . VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( false ) )  VAR_1 . METHOD_2 ( false ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_3 ( ) ) VAR VAR (  VAR_3 . METHOD_4 ( VAR_2 ) )  VAR_3 . METHOD_4 ( VAR_2 ) (  METHOD_5 ( VAR_2 ) )  METHOD_5 ( VAR_2 ) (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( this ) instanceof TYPE_2 ) COND ( this ) instanceof TYPE_2 ( THEN THEN (  return super . METHOD_1 ( ) ; )  return super . METHOD_1 ( ) ; ) THEN THEN ) IF IF (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<android.bluetooth.BluetoothDevice> ) RETURN java.util.List<android.bluetooth.BluetoothDevice> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  return METHOD_2 ( new int [ ] { VAR_3 } ) ; )  return METHOD_2 ( new int [ ] { VAR_3 } ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = super . METHOD_1 ( name ) ) INIT = super . METHOD_1 ( name ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  VAR_3 = this )  VAR_3 = this (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( false ) )  METHOD_1 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( this . address ) ) INIT = TYPE_1 . METHOD_2 ( this . address ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( VAR_1 , this . type ) ) INIT = new TYPE_1 ( VAR_1 , this . type ) ) VAR VAR (  VAR_3 = this . VAR_4 )  VAR_3 = this . VAR_4 (  VAR_5 = this . VAR_6 )  VAR_5 = this . VAR_6 (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; )  return METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == ( VAR_4 ) ) COND VAR_1 == ( VAR_4 ) ( THEN THEN (  assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_5 ) ) )  assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_3 , VAR_5 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_3 . equals ( type ) ) ) COND ! ( TYPE_3 . equals ( type ) ) ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return new TYPE_4 ( ) ; )  return new TYPE_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getMessage ) NAME getMessage ( BLOCK BLOCK (  return ( ( METHOD_1 ( ) . getMessage ( ) ) + STRING_1 ) + ( VAR_1 . getName ( ) ) ; )  return ( ( METHOD_1 ( ) . getMessage ( ) ) + STRING_1 ) + ( VAR_1 . getName ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ( INIT = super . METHOD_1 ( c ) ) INIT = super . METHOD_1 ( c ) ) VAR VAR (  TYPE_2 . METHOD_2 ( s , TYPE_3 . METHOD_3 ( ) ) )  TYPE_2 . METHOD_2 ( s , TYPE_3 . METHOD_3 ( ) ) (  TYPE_2 . METHOD_4 ( s , VAR_1 ) )  TYPE_2 . METHOD_4 ( s , VAR_1 ) (  return s ; )  return s ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static native ) MODIFIER static native ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME address ) NAME address ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) == false ) && ( ( TYPE_1 . METHOD_2 ( VAR_2 ) ) == false ) ; )  return ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) == false ) && ( ( TYPE_1 . METHOD_2 ( VAR_2 ) ) == false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME sb ) NAME sb ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND x < 10 ) COND x < 10 ( THEN THEN (  sb.append ( CHAR_1 ) )  sb.append ( CHAR_1 ) ) THEN THEN ) IF IF (  sb.append ( x ) )  sb.append ( x ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( value ) ; )  return VAR_1 . get ( value ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( index < 0 ) || ( index > ( count ) ) ) COND ( index < 0 ) || ( index > ( count ) ) ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_1 ( this , index , VAR_1 ) ; )  return TYPE_2 . METHOD_1 ( this , index , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg | 0 ; )  return arg | 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( STRING_1 ) ) INIT = new TYPE_1 ( STRING_1 ) ) VAR VAR (  assertEquals ( STRING_2 , METHOD_2 ( VAR_1 , STRING_3 ) ) )  assertEquals ( STRING_2 , METHOD_2 ( VAR_1 , STRING_3 ) ) (  assertEquals ( STRING_4 , METHOD_2 ( VAR_1 , STRING_5 ) ) )  assertEquals ( STRING_4 , METHOD_2 ( VAR_1 , STRING_5 ) ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , TYPE_1 . METHOD_3 ( STRING_1 ) , false ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , TYPE_1 . METHOD_3 ( STRING_1 ) , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 super . METHOD_1 ( key , VAR_1 ) ; )  return VAR_2 super . METHOD_1 ( key , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , 1 , 16 ) )  METHOD_2 ( STRING_1 , STRING_2 , 1 , 16 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME getElement ) NAME getElement ( BLOCK BLOCK (  return key ; )  return key ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) COND ! ( VAR_3 . METHOD_2 ( VAR_1 ) ) ( THEN THEN (  VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  return this . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return this . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME b ) NAME b ( INIT = new byte [ length ] ) INIT = new byte [ length ] ) VAR VAR (  VAR_1 . METHOD_2 ( b ) )  VAR_1 . METHOD_2 ( b ) (  return new java.lang.String ( b , STRING_1 ) ; )  return new java.lang.String ( b , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  call . METHOD_2 ( ) )  call . METHOD_2 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) (  VAR_2 . METHOD_5 ( ) )  VAR_2 . METHOD_5 ( ) (  VAR_3 . METHOD_6 ( VAR_4 , METHOD_7 ( ) ) )  VAR_3 . METHOD_6 ( VAR_4 , METHOD_7 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_3 ( device ) ) INIT = VAR_3 . METHOD_3 ( device ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return VAR_4 ; )  return VAR_4 ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( STRING_1 , null , STRING_2 ) )  c . METHOD_2 ( STRING_1 , null , STRING_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , t ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , t ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) COND ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) )  METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) ) )  TYPE_3 . METHOD_2 ( context . METHOD_3 ( ) ) ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_4 ( context ) )  METHOD_4 ( context ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME s ) NAME s ( INIT = this . METHOD_1 ( VAR_1 , new TYPE_5 ( listener ) ) ) INIT = this . METHOD_1 ( VAR_1 , new TYPE_5 ( listener ) ) ) VAR VAR (  return s != null ? s . METHOD_2 ( ) : null ; )  return s != null ? s . METHOD_2 ( ) : null ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( VAR_2 ) ) COND ( VAR_1 ) && ( VAR_2 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN ( IF IF ( COND STRING_1 . equals ( METHOD_3 ( ) ) ) COND STRING_1 . equals ( METHOD_3 ( ) ) ( THEN THEN ) THEN THEN ) IF IF (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = super . METHOD_1 ( ) ) INIT = super . METHOD_1 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 , VAR_3 ) ) INIT = new TYPE_2 ( VAR_1 , VAR_3 ) ) VAR VAR (  return TYPE_3 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ; )  return TYPE_3 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) )  TYPE_1 . METHOD_2 ( METHOD_3 ( pos ) , src , VAR_1 , length , ( ! ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( args [ 1 ] ) )  TYPE_1 . METHOD_2 ( args [ 1 ] ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) (  Main . METHOD_4 ( ) )  Main . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ( ELSE ELSE (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) ELSE ELSE ) IF IF (  VAR_1 . status = VAR_2 )  VAR_1 . status = VAR_2 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 < TYPE_2 > METHOD_3 ( ) ) )  VAR_1 . METHOD_2 ( VAR_2 < TYPE_2 > METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = b . METHOD_2 ( s . METHOD_3 ( ) , new java.lang.Object [ ] { new TYPE_3 . Float ( FLOAT_1 ) } , new java.util.HashMap < TYPE_4 , java.lang.Object > ( ) ) )  VAR_1 = b . METHOD_2 ( s . METHOD_3 ( ) , new java.lang.Object [ ] { new TYPE_3 . Float ( FLOAT_1 ) } , new java.util.HashMap < TYPE_4 , java.lang.Object > ( ) ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1<TYPE_2<TYPE_3,TYPE_4,TYPE_5>> ) RETURN TYPE_1<TYPE_2<TYPE_3,TYPE_4,TYPE_5>> ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . d ( VAR_2 , ( STRING_1 + s ) ) )  TYPE_1 . d ( VAR_2 , ( STRING_1 + s ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<?>.TYPE_2<TYPE_3> ) RETURN TYPE_1<?>.TYPE_2<TYPE_3> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 < TYPE_3 > ( this . VAR_1 . METHOD_2 ( context , value ) ) ; )  return new TYPE_2 < TYPE_3 > ( this . VAR_1 . METHOD_2 ( context , value ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 = new TYPE_1 ( VAR_1 ) )  VAR_3 = new TYPE_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) ; )  return new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 , w ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 , w ) ) VAR VAR (  TYPE_1 . METHOD_3 ( ( VAR_1 != ( - 1 ) ) ) )  TYPE_1 . METHOD_3 ( ( VAR_1 != ( - 1 ) ) ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  VAR_2 = VAR_1 . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( ) ) )  VAR_2 = VAR_1 . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( ) ) (  VAR_3 = VAR_1 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( ) ) )  VAR_3 = VAR_1 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  return METHOD_3 ( VAR_2 ) ; )  return METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND call . METHOD_2 ( ) ) COND call . METHOD_2 ( ) ( THEN THEN (  TYPE_3 . i ( this , STRING_1 , call ) )  TYPE_3 . i ( this , STRING_1 , call ) (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( call ) )  METHOD_3 ( call ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_1 ( VAR_1 , VAR_6 . METHOD_2 ( VAR_2 ) , VAR_3 ) ) INIT = VAR_5 . METHOD_1 ( VAR_1 , VAR_6 . METHOD_2 ( VAR_2 ) , VAR_3 ) ) VAR VAR (  return VAR_4 == null ? VAR_4 : new TYPE_2 ( VAR_4 , VAR_6 ) ; )  return VAR_4 == null ? VAR_4 : new TYPE_2 ( VAR_4 , VAR_6 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return size ; )  return size ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ( INIT = new java.io.File ( VAR_1 ) ) INIT = new java.io.File ( VAR_1 ) ) VAR VAR (  TYPE_1 . METHOD_2 ( VAR_2 , new TYPE_2 ( VAR_2 ) , VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_2 , new TYPE_2 ( VAR_2 ) , VAR_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME options ) NAME options ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 (  VAR_3 = VAR_4 . METHOD_2 ( ) )  VAR_3 = VAR_4 . METHOD_2 ( ) (  return new TYPE_1 ( options ) ; )  return new TYPE_1 ( options ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 [ count ] ; )  return VAR_1 [ count ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ( WHILE WHILE ( COND ( TYPE_1 . METHOD_2 ( ) ) != null ) COND ( TYPE_1 . METHOD_2 ( ) ) != null ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . field ) INIT = Main . field ) VAR VAR ( WHILE WHILE ( COND VAR_1 ) COND VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 = false )  VAR_2 = false ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 4 ; )  return 4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_2 . METHOD_2 ( ) ) ) COND ! ( TYPE_2 . METHOD_2 ( ) ) ( THEN THEN (  METHOD_3 ( true ) )  METHOD_3 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 class ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 class ) ) VAR VAR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( int ) ( ( double ) ( value ) ) ) ; )  return ( ( int ) ( ( double ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_2 ( ) ; )  throw e . METHOD_2 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 , VAR_2 ) )  super . METHOD_1 ( VAR_1 , VAR_2 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 ) INIT = VAR_4 ) VAR VAR ( IF IF ( COND VAR_3 != null ) COND VAR_3 != null ( THEN THEN (  METHOD_2 ( METHOD_3 ( ) , VAR_3 , VAR_1 , VAR_5 ) )  METHOD_2 ( METHOD_3 ( ) , VAR_3 , VAR_1 , VAR_5 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = 0 )  VAR_1 = 0 (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  METHOD_3 ( VAR_3 , TYPE_1 . METHOD_4 ( VAR_4 , ( ( ( VAR_3 ) + ( VAR_5 ) ) - 1 ) ) ) )  METHOD_3 ( VAR_3 , TYPE_1 . METHOD_4 ( VAR_4 , ( ( ( VAR_3 ) + ( VAR_5 ) ) - 1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , false , true ) )  METHOD_2 ( false , false , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME expectEquals ) NAME expectEquals ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND expected != result ) COND expected != result ( THEN THEN (  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; )  throw new TYPE_1 ( ( ( ( STRING_1 + expected ) + STRING_2 ) + result ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  VAR_4 . METHOD_1 ( this , VAR_1 , VAR_2 , VAR_3 ) )  VAR_4 . METHOD_1 ( this , VAR_1 , VAR_2 , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 = VAR_2 )  VAR_4 = VAR_2 (  VAR_5 . METHOD_2 ( ) )  VAR_5 . METHOD_2 ( ) (  VAR_6 . METHOD_3 ( ) )  VAR_6 . METHOD_3 ( ) (  VAR_5 . METHOD_4 ( ) )  VAR_5 . METHOD_4 ( ) (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( false ) )  METHOD_3 ( false ) (  TYPE_1 . when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( false ) )  TYPE_1 . when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( false ) (  assertFalse ( VAR_2 . METHOD_5 ( new TYPE_2 ( ) , false ) ) )  assertFalse ( VAR_2 . METHOD_5 ( new TYPE_2 ( ) , false ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg > > INT_1 ; )  return arg > > INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN ( IF IF ( COND TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) COND TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( value >= 0 ) && ( value <= INT_1 ) ) COND ( value >= 0 ) && ( value <= INT_1 ) ( THEN THEN (  size = value )  size = value ) THEN THEN ( ELSE ELSE (  throw new java.lang.IllegalArgumentException ( ( STRING_1 + value ) ) ; )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + value ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( VAR_3 ) ) INIT = VAR_2 . METHOD_2 ( VAR_3 ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return java.lang.Integer.parseInt ( VAR_1 ) ; )  return java.lang.Integer.parseInt ( VAR_1 ) ; ) THEN THEN ) IF IF (  return METHOD_3 ( ) ; )  return METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.ArrayList<TYPE_1> ) RETURN java.util.ArrayList<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_2 ) NAME VAR_2 ( INIT = new java.util.ArrayList < > ( ) ) INIT = new java.util.ArrayList < > ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( b ) )  VAR_2 . METHOD_2 ( b ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , ( ( getName ( ) ) + STRING_1 ) ) )  android.util.Log.d ( VAR_2 . TAG , ( ( getName ( ) ) + STRING_1 ) ) ) THEN THEN ) IF IF ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) (  VAR_3 = false )  VAR_3 = false ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( f ) )  TYPE_1 . METHOD_2 ( f ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  VAR_2 . METHOD_3 ( ) . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_3 ( ) . METHOD_1 ( VAR_1 ) (  TYPE_2 . get ( VAR_2 ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_1 ) )  TYPE_2 . get ( VAR_2 ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( 20 ) ; )  return TYPE_1 . METHOD_2 ( 20 ) ; (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return - ( - arg ) ; )  return - ( - arg ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( METHOD_2 ( ) ) & ( VAR_1 ) ) != 0 ; )  return ( ( METHOD_2 ( ) ) & ( VAR_1 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( 0 , TYPE_1 . METHOD_2 ( ) ) )  assertEquals ( 0 , TYPE_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME build ) NAME build ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , false ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 < 0 ) COND VAR_1 < 0 ( THEN THEN (  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  return new TYPE_3 ( VAR_1 , VAR_2 ) ; )  return new TYPE_3 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( 1 ) )  a = Main . METHOD_2 ( 1 ) (  b = Main . METHOD_2 ( 2 ) )  b = Main . METHOD_2 ( 2 ) (  c = a + b )  c = a + b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . d ( VAR_1 , ( STRING_1 + s ) ) )  TYPE_1 . d ( VAR_1 , ( STRING_1 + s ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , new TYPE_3 ( VAR_3 ) ) ; )  return VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , new TYPE_3 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 , listener ) ; )  return METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 , listener ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( 0 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . length ) )  assertEquals ( 0 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . length ) (  assertEquals ( 0 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) . length ) )  assertEquals ( 0 , METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( ) . length ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return TYPE_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_1 . METHOD_2 ( STRING_1 , false ) ) ) COND ! ( TYPE_1 . METHOD_2 ( STRING_1 , false ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; )  return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  log ( STRING_1 ) )  log ( STRING_1 ) (  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) (  VAR_4 . METHOD_3 ( VAR_5 ) )  VAR_4 . METHOD_3 ( VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  java.lang.System.out.println ( ( STRING_1 + ( this . f ) ) ) )  java.lang.System.out.println ( ( STRING_1 + ( this . f ) ) ) (  VAR_1 . println ( STRING_2 ) )  VAR_1 . println ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_3 ) )  java.lang.System.out.println ( STRING_3 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ( ( VAR_3 ) + STRING_1 ) ) )  METHOD_2 ( ( ( VAR_3 ) + STRING_1 ) ) (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME content ) NAME content ( INIT = new TYPE_1 ( this ) ) INIT = new TYPE_1 ( this ) ) VAR VAR (  content . METHOD_2 ( this ) )  content . METHOD_2 ( this ) (  METHOD_3 ( content ) )  METHOD_3 ( content ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_4 ) )  VAR_3 . METHOD_1 ( VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return value > > > ( VAR_1 & INT_1 ) ; )  return value > > > ( VAR_1 & INT_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) THEN THEN ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  TYPE_2 . METHOD_3 ( s , VAR_2 [ 0 ] ) )  TYPE_2 . METHOD_3 ( s , VAR_2 [ 0 ] ) (  return s ; )  return s ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME method ) NAME method ( INIT = VAR_1 class . METHOD_2 ( STRING_1 ) ) INIT = VAR_1 class . METHOD_2 ( STRING_1 ) ) VAR VAR (  method . METHOD_3 ( true ) )  method . METHOD_3 ( true ) (  method . invoke ( null ) )  method . invoke ( null ) (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , false , false ) )  METHOD_2 ( false , false , false ) (  METHOD_3 ( 0 , false , false ) )  METHOD_3 ( 0 , false , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return TYPE_1 . METHOD_3 ( id , VAR_2 ) ; )  return TYPE_1 . METHOD_3 ( id , VAR_2 ) ; ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_4 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg1 ) NAME arg1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = - arg1 ) INIT = - arg1 ) VAR VAR (  return ( VAR_3 - VAR_1 ) | ( VAR_3 - VAR_1 ) ; )  return ( VAR_3 - VAR_1 ) | ( VAR_3 - VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK (  TYPE_1 . assertTrue ( STRING_1 , ( ( VAR_1 ) != null ) ) )  TYPE_1 . assertTrue ( STRING_1 , ( ( VAR_1 ) != null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) , STRING_4 , 0 , 1 , 1 , 1 , 1 , 2 ) )  METHOD_2 ( new TYPE_1 ( STRING_1 , STRING_2 , STRING_3 ) , STRING_4 , 0 , 1 , 1 , 1 , 1 , 2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( new TYPE_3 ( VAR_1 ) ) )  VAR_2 . METHOD_1 ( new TYPE_3 ( VAR_1 ) ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( VAR_1 ) ) && ( 0 != ( METHOD_3 ( VAR_2 ) ) ) ) COND ( METHOD_2 ( VAR_1 ) ) && ( 0 != ( METHOD_3 ( VAR_2 ) ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ( ELSE ELSE (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( 5 , STRING_1 ) )  TYPE_1 . METHOD_2 ( 5 , STRING_1 ) (  TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) )  TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) (  TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) )  TYPE_1 . METHOD_2 ( STRING_4 , STRING_5 ) (  TYPE_1 . METHOD_2 ( ( - 4 ) , STRING_6 ) )  TYPE_1 . METHOD_2 ( ( - 4 ) , STRING_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ) INIT = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ) VAR VAR (  return TYPE_2 . METHOD_4 ( METHOD_2 ( ) , VAR_1 . METHOD_5 ( ) ) ; )  return TYPE_2 . METHOD_4 ( METHOD_2 ( ) , VAR_1 . METHOD_5 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( TYPE_2 . TAG , ( STRING_1 + ( VAR_2 ) ) ) )  android.util.Log.v ( TYPE_2 . TAG , ( STRING_1 + ( VAR_2 ) ) ) ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_2 ) (  VAR_2 = null )  VAR_2 = null ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 < 0 ) COND VAR_1 < 0 ( THEN THEN (  throw new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; )  throw new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( ) ) COND key . METHOD_2 ( ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  VAR_1 . METHOD_1 ( METHOD_4 ( ) ) )  VAR_1 . METHOD_1 ( METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 instanceof TYPE_1 ) == false ) COND ( VAR_1 instanceof TYPE_1 ) == false ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return toString ( ) . equals ( VAR_1 . toString ( ) ) ; )  return toString ( ) . equals ( VAR_1 . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ) COND android.util.Log . METHOD_2 ( VAR_1 , VAR_2 ) ( THEN THEN (  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_3 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  context . METHOD_3 ( new android.content.Intent ( context , VAR_4 class ) ) )  context . METHOD_3 ( new android.content.Intent ( context , VAR_4 class ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . name ( ) ) ; )  return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_1 . name ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME append ) NAME append ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_3 ( ) . METHOD_4 ( append ) ; )  return VAR_1 . METHOD_3 ( ) . METHOD_4 ( append ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME ex ) NAME ex ( BLOCK BLOCK (  fail ( ( STRING_1 + ex ) ) )  fail ( ( STRING_1 + ex ) ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 . size ( ) ) > 0 ) || ( VAR_2 ) ; )  return ( ( VAR_1 . size ( ) ) > 0 ) || ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ( ELSE ELSE (  METHOD_3 ( ) )  METHOD_3 ( ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( ( ( VAR_4 ) + VAR_1 ) , VAR_2 . METHOD_3 ( ) ) )  VAR_3 . METHOD_2 ( ( ( VAR_4 ) + VAR_1 ) , VAR_2 . METHOD_3 ( ) ) (  VAR_3 . METHOD_4 ( VAR_2 . getName ( ) , VAR_2 , STRING_1 ) )  VAR_3 . METHOD_4 ( VAR_2 . getName ( ) , VAR_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( METHOD_1 ( ) . METHOD_2 ( VAR_2 ) ) ) ) INIT = ( ( TYPE_1 ) ( METHOD_1 ( ) . METHOD_2 ( VAR_2 ) ) ) ) VAR VAR (  VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) )  VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) (  METHOD_1 ( ) . METHOD_4 ( ) )  METHOD_1 ( ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_2 . length ) )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_2 . length ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( listener ) )  VAR_1 . METHOD_2 ( listener ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( id ) ; )  return VAR_2 . METHOD_2 ( id ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + id ) ) ; )  return METHOD_3 ( ( STRING_1 + id ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_1 ( null ) )  METHOD_1 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME count ) NAME count ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , count , d ) )  METHOD_3 ( VAR_1 , count , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME assertEquals ) NAME assertEquals ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE char ) TYPE char ( NAME expected ) NAME expected ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != expected ) COND VAR_1 != expected ( THEN THEN (  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; )  throw new TYPE_1 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + expected ) + STRING_3 ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 3 , 16 , false ) )  t . METHOD_2 ( 3 , 16 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) (  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) )  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null )  VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null ) THEN THEN ) IF IF (  return VAR_1 . booleanValue ( ) ; )  return VAR_1 . booleanValue ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ; )  return ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME target ) NAME target ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return TYPE_2 . METHOD_1 ( VAR_1 ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ) IF IF (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) , VAR_5 ) )  METHOD_2 ( VAR_1 , new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 ) , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( METHOD_3 ( ) . VAR_1 , false ) ; )  return TYPE_2 . METHOD_2 ( METHOD_3 ( ) . VAR_1 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = VAR_2 . METHOD_1 ( ) )  VAR_1 = VAR_2 . METHOD_1 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != 0 ) COND ( VAR_1 ) != 0 ( THEN THEN (  TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) ) THEN THEN ) IF IF (  TYPE_1 . METHOD_2 ( size ) )  TYPE_1 . METHOD_2 ( size ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( TYPE_4 . METHOD_1 ( VAR_1 ) ) ; )  return new TYPE_3 ( TYPE_4 . METHOD_1 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_7 . METHOD_2 ( mContext , VAR_1 . METHOD_3 ( ) ) )  TYPE_7 . METHOD_2 ( mContext , VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( METHOD_3 ( x ) ) )  VAR_2 . METHOD_2 ( METHOD_3 ( x ) ) (  return true ; )  return true ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ( BLOCK BLOCK (  throw METHOD_4 ( x , e ) ; )  throw METHOD_4 ( x , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , new java.io.File [ ] { VAR_3 } ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , new java.io.File [ ] { VAR_3 } ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_4 , 0 , VAR_2 , 0 , VAR_3 ) )  TYPE_2 . METHOD_3 ( VAR_4 , 0 , VAR_2 , 0 , VAR_3 ) (  VAR_4 = VAR_2 )  VAR_4 = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a + b )  c = a + b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = this . VAR_2 . METHOD_2 ( ) ) INIT = this . VAR_2 . METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( null ) )  VAR_1 . METHOD_3 ( null ) (  this . VAR_2 . METHOD_4 ( false ) )  this . VAR_2 . METHOD_4 ( false ) (  METHOD_5 ( this . VAR_2 . METHOD_6 ( ) ) )  METHOD_5 ( this . VAR_2 . METHOD_6 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) COND ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; )  return TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; ) THEN THEN ) IF IF (  return ( VAR_2 ) == ( VAR_3 ) ; )  return ( VAR_2 ) == ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( e ) )  super . METHOD_1 ( e ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this ) )  VAR_1 . METHOD_1 ( this ) (  METHOD_2 ( VAR_2 , VAR_3 ) )  METHOD_2 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg * ( - 1 ) ; )  return arg * ( - 1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_4 ) IN VAR_4 ( BLOCK BLOCK (  VAR_2 . append ( VAR_3 . METHOD_2 ( VAR_1 ) ) )  VAR_2 . append ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_2 . toString ( ) ; )  return VAR_2 . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  VAR_3 = new TYPE_1 ( ) )  VAR_3 = new TYPE_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) )  TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) (  TYPE_2 . METHOD_3 ( VAR_1 , false ) )  TYPE_2 . METHOD_3 ( VAR_1 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( type ) ; )  return METHOD_2 ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( h , VAR_1 , obj ) )  VAR_2 . METHOD_2 ( h , VAR_1 , obj ) (  METHOD_3 ( METHOD_4 ( true ) , VAR_3 ) )  METHOD_3 ( METHOD_4 ( true ) , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME address ) NAME address ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( args [ 1 ] ) )  TYPE_1 . METHOD_2 ( args [ 1 ] ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 . METHOD_2 ( ) ) + CHAR_1 ) + ( TYPE_1 . METHOD_3 ( ) ) ; )  return ( ( TYPE_1 . METHOD_2 ( ) ) + CHAR_1 ) + ( TYPE_1 . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME h ) NAME h ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( h ) )  VAR_2 . METHOD_2 ( h ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = new TYPE_1 ( INT_1 ) ) INIT = new TYPE_1 ( INT_1 ) ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  TYPE_2 . METHOD_2 ( d , VAR_1 , STRING_2 ) )  TYPE_2 . METHOD_2 ( d , VAR_1 , STRING_2 ) (  TYPE_2 . METHOD_3 ( STRING_3 , VAR_1 , d ) )  TYPE_2 . METHOD_3 ( STRING_3 , VAR_1 , d ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . i ( VAR_2 . TAG , STRING_1 ) )  TYPE_1 . i ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  VAR_5 = false )  VAR_5 = false (  VAR_6 = false )  VAR_6 = false ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<java.lang.String> ) RETURN TYPE_1<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_4 , VAR_2 ) ) INIT = METHOD_2 ( VAR_4 , VAR_2 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_5 ) NAME VAR_5 ( INIT = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ) INIT = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ) VAR VAR (  TYPE_4 . assertTrue ( VAR_5 . METHOD_3 ( VAR_1 ) ) )  TYPE_4 . assertTrue ( VAR_5 . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class ) RETURN java.lang.Class ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = name . METHOD_2 ( CHAR_1 , CHAR_2 ) ) INIT = name . METHOD_2 ( CHAR_1 , CHAR_2 ) ) VAR VAR (  return METHOD_3 ( VAR_2 , VAR_1 ) ; )  return METHOD_3 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , VAR_2 , true ) ; )  return METHOD_1 ( VAR_1 , VAR_2 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ) INIT = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ) VAR VAR (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( double ) ( ( int ) ( value ) ) ) ; )  return ( ( double ) ( ( int ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK (  VAR_2 [ VAR_3 ] = false )  VAR_2 [ VAR_3 ] = false ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE short ) TYPE short ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( short ) ( value & INT_1 ) ) ) INIT = ( ( short ) ( value & INT_1 ) ) ) VAR VAR (  return ( ( double ) ( VAR_2 ) ) ; )  return ( ( double ) ( VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_1 = null )  VAR_1 = null ) THEN THEN ) IF IF (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final ) MODIFIER private static final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  e . METHOD_1 ( ) )  e . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( 0 , VAR_1 . METHOD_2 ( null , null , false ) . size ( ) ) )  assertEquals ( 0 , VAR_1 . METHOD_2 ( null , null , false ) . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( type , id , VAR_1 ) )  VAR_2 . METHOD_1 ( type , id , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<java.io.File> ) TYPE java.util.List<java.io.File> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.io.IOException> ) TYPE java.util.List<java.io.IOException> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 , null , VAR_3 , true , null ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , null , VAR_3 , true , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = this . METHOD_2 ( ) ) INIT = this . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return VAR_2 . METHOD_1 ( VAR_3 ) ; )  return VAR_2 . METHOD_1 ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_2 ( VAR_3 , type ) ) INIT = VAR_1 . METHOD_2 ( VAR_3 , type ) ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 . METHOD_3 ( VAR_4 , id ) , null ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , id , VAR_3 . METHOD_3 ( VAR_4 , id ) , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  args.out = new TYPE_2 ( TYPE_3 . METHOD_2 ( FLOAT_1 , ( ( VAR_1 ) - ( VAR_2 ) ) ) , 0 , 0 ) )  args.out = new TYPE_2 ( TYPE_3 . METHOD_2 ( FLOAT_1 , ( ( VAR_1 ) - ( VAR_2 ) ) ) , 0 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + status ) ) )  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + status ) ) ) THEN THEN ) IF IF (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME v ) NAME v ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) THEN THEN ( ELSE ELSE (  start ( ) )  start ( ) ) ELSE ELSE ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ) ; )  return METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ! ( TYPE_1 . METHOD_2 ( ) ) ) ) COND ( VAR_1 ) && ( ! ( TYPE_1 . METHOD_2 ( ) ) ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( ) ) INIT = VAR_3 . METHOD_2 ( ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_2 , VAR_4 , ( VAR_1 ? 1 : 0 ) ) )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_4 , ( VAR_1 ? 1 : 0 ) ) (  VAR_5 . METHOD_4 ( ) )  VAR_5 . METHOD_4 ( ) (  VAR_5 . METHOD_5 ( ) )  VAR_5 . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( VAR_2 . TAG ) )  VAR_1 . METHOD_3 ( VAR_2 . TAG ) ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  TYPE_1 . METHOD_4 ( VAR_4 ) )  TYPE_1 . METHOD_4 ( VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_3 , result , 0 , VAR_2 ) )  METHOD_2 ( VAR_1 , VAR_3 , result , 0 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  ( VAR_1 ) -- )  ( VAR_1 ) -- ( IF IF ( COND ( VAR_1 ) == 1 ) COND ( VAR_1 ) == 1 ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ) IF IF (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME options ) NAME options ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_3 = VAR_2 )  VAR_3 = VAR_2 ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR (  METHOD_1 ( 4 , STRING_1 , VAR_1 , VAR_4 , options ) )  METHOD_1 ( 4 , STRING_1 , VAR_1 , VAR_4 , options ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) )  VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( STRING_1 , VAR_3 , VAR_4 ) )  assertEquals ( STRING_1 , VAR_3 , VAR_4 ) (  assertEquals ( STRING_2 , VAR_1 , VAR_5 ) )  assertEquals ( STRING_2 , VAR_1 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_4 . METHOD_1 ( ( ( VAR_4 ) + VAR_1 ) , VAR_2 ) ) INIT = TYPE_4 . METHOD_1 ( ( ( VAR_4 ) + VAR_1 ) , VAR_2 ) ) VAR VAR (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN android.content.Intent ) RETURN android.content.Intent ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( number , VAR_1 ) . METHOD_2 ( true , TYPE_3 . METHOD_3 ( VAR_2 , context ) ) . build ( ) ; )  return new TYPE_2 ( number , VAR_1 ) . METHOD_2 ( true , TYPE_3 . METHOD_3 ( VAR_2 , context ) ) . build ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return a [ 0 ] ; )  return a [ 0 ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( IF IF ( COND ( TYPE_2 . METHOD_3 ( ) ) == ( TYPE_2 . METHOD_4 ( ) ) ) COND ( TYPE_2 . METHOD_3 ( ) ) == ( TYPE_2 . METHOD_4 ( ) ) ( THEN THEN (  METHOD_5 ( ) )  METHOD_5 ( ) ) THEN THEN ( ELSE ELSE (  METHOD_6 ( ) )  METHOD_6 ( ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; )  return METHOD_1 ( ( ( TYPE_2 ) ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Slog.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Slog.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( true ) )  VAR_3 . METHOD_1 ( true ) (  VAR_4 . METHOD_2 ( ) )  VAR_4 . METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME ex ) NAME ex ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME level ) NAME level ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( level ) )  VAR_1 . METHOD_1 ( level ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = new TYPE_2 ( this ) )  VAR_2 = new TYPE_2 ( this ) (  VAR_2 . start ( ) )  VAR_2 . start ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME v ) NAME v ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  METHOD_6 ( ) )  METHOD_6 ( ) (  VAR_1 . METHOD_7 ( true ) )  VAR_1 . METHOD_7 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_2 ) ) INIT = METHOD_2 ( VAR_2 ) ) VAR VAR (  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) )  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) (  METHOD_3 ( VAR_1 , VAR_3 ) )  METHOD_3 ( VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 , false , 0 , 0 , 0 ) )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 , false , 0 , 0 , 0 ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME options ) NAME options ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME values ) NAME values ( INIT = options . METHOD_2 ( ) ) INIT = options . METHOD_2 ( ) ) VAR VAR (  org.junit.Assert.assertEquals ( 1 , values . size ( ) ) )  org.junit.Assert.assertEquals ( 1 , values . size ( ) ) (  TYPE_2 . assertTrue ( values . METHOD_3 ( VAR_1 ) ) )  TYPE_2 . assertTrue ( values . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME config ) NAME config ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  config . METHOD_1 ( type ) )  config . METHOD_1 ( type ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . log ( VAR_3 , VAR_2 ) )  TYPE_1 . log ( VAR_3 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME f ) NAME f ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( f > FLOAT_1 ) == true ? INT_1 : INT_2 ; )  return ( f > FLOAT_1 ) == true ? INT_1 : INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK (  assertEquals ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) , METHOD_1 ( STRING_6 , STRING_7 ) ) )  assertEquals ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) , METHOD_1 ( STRING_6 , STRING_7 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 ) )  METHOD_3 ( mContext , id , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null , true ) )  TYPE_1 . METHOD_2 ( null , true ) (  TYPE_1 . METHOD_2 ( null , false ) )  TYPE_1 . METHOD_2 ( null , false ) (  TYPE_1 . METHOD_3 ( ( ( TYPE_2 ) ( null ) ) ) )  TYPE_1 . METHOD_3 ( ( ( TYPE_2 ) ( null ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ) INIT = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ) VAR VAR (  return VAR_2 != null ? VAR_2 . METHOD_3 ( ) : VAR_4 ; )  return VAR_2 != null ? VAR_2 . METHOD_3 ( ) : VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN char[] ) RETURN char[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( context ) ) ; )  return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( context ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME src ) NAME src ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , VAR_1 , src ) )  METHOD_3 ( mContext , VAR_1 , src ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) , null , null , false , false , null ) ) INIT = VAR_1 . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) , null , null , false , false , null ) ) VAR VAR (  TYPE_3 . METHOD_3 ( result ) )  TYPE_3 . METHOD_3 ( result ) (  TYPE_4 . METHOD_4 ( VAR_2 , VAR_3 ) )  TYPE_4 . METHOD_4 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  return ( ( VAR_1 == ( VAR_3 ) ) || ( VAR_1 == ( VAR_4 ) ) ) || ( VAR_1 == ( VAR_5 ) ) ; )  return ( ( VAR_1 == ( VAR_3 ) ) || ( VAR_1 == ( VAR_4 ) ) ) || ( VAR_1 == ( VAR_5 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( 10 ) ) INIT = Main . METHOD_2 ( 10 ) ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( INT_1 ) ) INIT = Main . METHOD_3 ( INT_1 ) ) VAR VAR (  return VAR_1 & VAR_2 ; )  return VAR_1 & VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) ( IF IF ( COND TYPE_2 . METHOD_3 ( VAR_1 ) ) COND TYPE_2 . METHOD_3 ( VAR_1 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_5 ( ) )  VAR_2 . METHOD_5 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 5 , INT_1 , false ) )  t . METHOD_2 ( 5 , INT_1 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_1 ) )  java.lang.System.out.println ( STRING_1 ) ( WHILE WHILE ( COND true ) COND true ( BLOCK BLOCK (  java.lang.System.out.println ( STRING_2 ) )  java.lang.System.out.println ( STRING_2 ) ( WHILE WHILE ( COND VAR_1 ) COND VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  callback . METHOD_2 ( VAR_1 ) )  callback . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME output ) NAME output ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  output . METHOD_2 ( ( i > > 8 ) ) )  output . METHOD_2 ( ( i > > 8 ) ) (  output . METHOD_2 ( i ) )  output . METHOD_2 ( i ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) )  android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  android.util.Log.e ( TYPE_2 . TAG , STRING_2 ) )  android.util.Log.e ( TYPE_2 . TAG , STRING_2 ) (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_2 ( ( STRING_1 + VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ) VAR VAR (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 instanceof TYPE_1 ) COND VAR_1 instanceof TYPE_1 ( THEN THEN (  return new TYPE_1 ( ( ( TYPE_1 ) ( VAR_1 ) ) ) ; )  return new TYPE_1 ( ( ( TYPE_1 ) ( VAR_1 ) ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME listener ) NAME listener ( INIT = VAR_2 . get ( ) ) INIT = VAR_2 . get ( ) ) VAR VAR ( IF IF ( COND listener != null ) COND listener != null ( THEN THEN (  return listener . METHOD_2 ( VAR_1 ) ; )  return listener . METHOD_2 ( VAR_1 ) ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME options ) NAME options ( INIT = TYPE_2 . METHOD_1 ( null , null , new java.io.File [ ] { VAR_1 } ) ) INIT = TYPE_2 . METHOD_1 ( null , null , new java.io.File [ ] { VAR_1 } ) ) VAR VAR (  VAR_3 = VAR_2 )  VAR_3 = VAR_2 (  return options ; )  return options ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) == false ) COND ( VAR_3 ) == false ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 , VAR_2 ) )  METHOD_4 ( VAR_1 , VAR_2 ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . d ( this , STRING_1 , VAR_1 ) )  TYPE_2 . d ( this , STRING_1 , VAR_1 ) (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) (  METHOD_3 ( VAR_4 . METHOD_4 ( ) ) )  METHOD_3 ( VAR_4 . METHOD_4 ( ) ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  METHOD_6 ( VAR_1 ) )  METHOD_6 ( VAR_1 ) (  VAR_5 = null )  VAR_5 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( name ) ) && ( ! ( VAR_2 . METHOD_2 ( name ) ) ) ; )  return ( VAR_1 . METHOD_2 ( name ) ) && ( ! ( VAR_2 . METHOD_2 ( name ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device , VAR_1 ) ; )  return service . METHOD_1 ( device , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) > 0 ) COND ( VAR_3 ) > 0 ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_4 ) )  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg / 1 ; )  return arg / 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == ( VAR_2 ) ) COND ( VAR_1 ) == ( VAR_2 ) ( THEN THEN ( IF IF ( COND TYPE_1 . METHOD_2 ( ) ) COND TYPE_1 . METHOD_2 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) THEN THEN ) IF IF ( IF IF ( COND ! ( TYPE_1 . METHOD_3 ( ) ) ) COND ! ( TYPE_1 . METHOD_3 ( ) ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( INT_1 ) ) )  VAR_1 . METHOD_1 ( 1 , METHOD_2 ( INT_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = null ) INIT = null ) VAR VAR ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  service = VAR_1 . METHOD_1 ( VAR_2 ) )  service = VAR_1 . METHOD_1 ( VAR_2 ) ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF (  return service ; )  return service ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) > 0 ) COND ( VAR_3 ) > 0 ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 , VAR_4 ) )  VAR_2 . METHOD_2 ( VAR_1 , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME output ) NAME output ( INIT = java.lang.String.format ( format , args ) ) INIT = java.lang.String.format ( format , args ) ) VAR VAR (  output = TYPE_1 . METHOD_2 ( output ) )  output = TYPE_1 . METHOD_2 ( output ) (  VAR_1 . METHOD_3 ( STRING_1 , output ) )  VAR_1 . METHOD_3 ( STRING_1 , output ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME d ) NAME d ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) )  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( state . toString ( ) ) ) ) ) THEN THEN ) IF IF (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME and ) NAME and ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( VAR_1 ) )  TYPE_2 . METHOD_1 ( VAR_1 ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = new TYPE_1 ( VAR_1 ) )  VAR_2 = new TYPE_1 ( VAR_1 ) (  VAR_2 . METHOD_2 ( INT_1 ) )  VAR_2 . METHOD_2 ( INT_1 ) (  VAR_2 . METHOD_3 ( true ) )  VAR_2 . METHOD_3 ( true ) (  return VAR_2 . METHOD_4 ( ) ; )  return VAR_2 . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_3 . METHOD_3 ( VAR_2 ) )  VAR_3 . METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , d , VAR_4 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , d , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME invoke ) NAME invoke ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME h ) NAME h ( INIT = VAR_1 . h ) INIT = VAR_1 . h ) VAR VAR (  return h . invoke ( VAR_1 , new TYPE_4 ( method ) , args ) ; )  return h . invoke ( VAR_1 , new TYPE_4 ( method ) , args ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[][] ) RETURN TYPE_1[][] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return java.lang.Class . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; )  return java.lang.Class . METHOD_2 ( VAR_1 ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 (  this . VAR_2 = VAR_2 )  this . VAR_2 = VAR_2 (  this . VAR_3 = VAR_3 )  this . VAR_3 = VAR_3 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.d ( VAR_1 . TAG , ( ( ( STRING_1 + ( device . toString ( ) ) ) + STRING_2 ) + state ) ) )  android.util.Log.d ( VAR_1 . TAG , ( ( ( STRING_1 + ( device . toString ( ) ) ) + STRING_2 ) + state ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) )  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( listener ) )  VAR_1 . METHOD_2 ( listener ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 . METHOD_1 ( x , ( - y ) ) )  VAR_2 . METHOD_1 ( x , ( - y ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) )  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 } ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  fail ( STRING_3 ) )  fail ( STRING_3 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 , listener ) )  METHOD_3 ( VAR_3 ) . METHOD_1 ( VAR_4 , VAR_5 , VAR_1 , listener ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( call , false ) )  METHOD_1 ( call , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_1 ) COND VAR_1 instanceof TYPE_1 ( THEN THEN (  return id . equals ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_1 ( ) ) ; )  return id . equals ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_1 ( ) ) ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME offset ) NAME offset ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND VAR_3 != null ) COND VAR_3 != null ( THEN THEN (  VAR_4 = VAR_5 )  VAR_4 = VAR_5 (  VAR_6 = false )  VAR_6 = false ) THEN THEN ) IF IF (  TYPE_1 . METHOD_1 ( VAR_7 , VAR_1 , VAR_2 , VAR_4 ) )  TYPE_1 . METHOD_1 ( VAR_7 , VAR_1 , VAR_2 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( INT_1 , 5 ) )  METHOD_2 ( INT_1 , 5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( java.lang.Integer ) ( TYPE_1 . METHOD_2 ( fd , VAR_1 ) ) ) ; )  return ( ( java.lang.Integer ) ( TYPE_1 . METHOD_2 ( fd , VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected synchronized ) MODIFIER protected synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( p , 0 ) )  METHOD_2 ( p , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( VAR_1 class ) ; )  return TYPE_3 . METHOD_2 ( VAR_1 class ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , METHOD_2 ( ) . getName ( ) ) )  assertEquals ( STRING_1 , METHOD_2 ( ) . getName ( ) ) (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) (  TYPE_1 . METHOD_4 ( INT_1 ) )  TYPE_1 . METHOD_4 ( INT_1 ) (  assertEquals ( STRING_2 , METHOD_2 ( ) . getName ( ) ) )  assertEquals ( STRING_2 , METHOD_2 ( ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( x , VAR_1 ) )  METHOD_2 ( x , VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME e ) NAME e ( BLOCK BLOCK (  throw METHOD_3 ( x , e ) ; )  throw METHOD_3 ( x , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) (  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) )  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( METHOD_1 ( r ) ) == 0 ; )  return ( METHOD_1 ( r ) ) == 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME ret ) NAME ret ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return msg . METHOD_2 ( VAR_1 . index , s , 0 , VAR_1 . length ) ; )  return msg . METHOD_2 ( VAR_1 . index , s , 0 , VAR_1 . length ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) TYPE java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME result ) NAME result ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ( IF IF ( COND result == null ) COND result == null ( THEN THEN (  VAR_1 = result = METHOD_2 ( ) )  VAR_1 = result = METHOD_2 ( ) ) THEN THEN ) IF IF (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  java.lang.Integer.parseInt ( VAR_1 ) )  java.lang.Integer.parseInt ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 = 0 )  VAR_2 = 0 ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return INT_1 > i ? INT_2 : INT_3 ; )  return INT_1 > i ? INT_2 : INT_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new java.io.File ( VAR_1 , VAR_2 ) ; )  return new java.io.File ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( java.lang.String ) ( VAR_1 . get ( new TYPE_1 ( name ) ) ) ) ; )  return ( ( java.lang.String ) ( VAR_1 . get ( new TYPE_1 ( name ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_3 ( CASE VAR_4 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) CASE VAR_4 ) SWITCH SWITCH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( this ) )  TYPE_1 . METHOD_2 ( this ) (  TYPE_2 . METHOD_3 ( STRING_1 ) )  TYPE_2 . METHOD_3 ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND status != ( VAR_1 ) ) COND status != ( VAR_1 ) ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) ) THEN THEN ) IF IF (  return status ; )  return status ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( ) ; )  return METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ) (  return r ; )  return r ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( length ( ) ) == 0 ; )  return ( length ( ) ) == 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME parent ) NAME parent ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( parent , VAR_2 ) )  VAR_1 = new TYPE_1 ( parent , VAR_2 ) (  VAR_3 = new TYPE_2 ( ) )  VAR_3 = new TYPE_2 ( ) (  VAR_1 . METHOD_2 ( VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( METHOD_2 ( VAR_1 ) , 0 , null ) )  METHOD_1 ( METHOD_2 ( VAR_1 ) , 0 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg ^ 0 ; )  return arg ^ 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME p ) NAME p ( INIT = new TYPE_2 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_2 , VAR_3 , VAR_4 ) ) INIT = new TYPE_2 ( null , VAR_1 , ( - 1 ) , null , null , null , VAR_2 , VAR_3 , VAR_4 ) ) VAR VAR (  METHOD_3 ( p ) )  METHOD_3 ( p ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( VAR_2 ) | ( VAR_3 ) ) INIT = ( VAR_2 ) | ( VAR_3 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ( INIT = ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) INIT = ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) VAR VAR (  assertEquals ( expected , VAR_7 . METHOD_2 ( VAR_1 ) ) )  assertEquals ( expected , VAR_7 . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , null , VAR_1 ) )  METHOD_1 ( VAR_2 < java.lang.String > METHOD_2 ( ) , null , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) , false , METHOD_3 ( ) , METHOD_4 ( ) ) ; )  return TYPE_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( ) , false , METHOD_3 ( ) , METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , new int [ ] { VAR_1 } , null ) ) )  VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , new int [ ] { VAR_1 } , null ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( ( ( TYPE_1 ) ( null ) ) ) )  METHOD_1 ( ( ( TYPE_1 ) ( null ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected final ) MODIFIER protected final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true , true , false , true ) )  METHOD_2 ( true , true , false , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < ( VAR_3 . length ) ) COND i < ( VAR_3 . length ) ( UPDATE UPDATE (  i ++ )  i ++ ) UPDATE UPDATE ( BLOCK BLOCK (  VAR_1 = VAR_1 . METHOD_2 ( VAR_3 [ i ] ) )  VAR_1 = VAR_1 . METHOD_2 ( VAR_3 [ i ] ) ) BLOCK BLOCK ) FOR FOR (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( in ) == null ) COND ( in ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  in . METHOD_1 ( ) )  in . METHOD_1 ( ) (  in = null )  in = null (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME device ) NAME device ( INIT = VAR_2 . METHOD_3 ( ) ) INIT = VAR_2 . METHOD_3 ( ) ) VAR VAR (  TYPE_3 . METHOD_4 ( VAR_1 , STRING_1 ) )  TYPE_3 . METHOD_4 ( VAR_1 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 ) )  a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_3 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( FLOAT_1 ) ) INIT = Main . METHOD_2 ( FLOAT_1 ) ) VAR VAR (  return ( ( double ) ( VAR_1 ) ) ; )  return ( ( double ) ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_1 = size )  VAR_1 = size (  return size ; )  return size ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , ( STRING_2 + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ) , ( STRING_2 + ( ( ( ( STRING_6 + STRING_7 ) + STRING_8 ) + STRING_6 ) + STRING_9 ) ) ) )  METHOD_2 ( STRING_1 , ( STRING_2 + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ) , ( STRING_2 + ( ( ( ( STRING_6 + STRING_7 ) + STRING_8 ) + STRING_6 ) + STRING_9 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) )  METHOD_1 ( VAR_1 , new TYPE_2 ( value ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( STRING_1 , null ) ) INIT = new TYPE_1 ( STRING_1 , null ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  c . METHOD_2 ( STRING_2 ) )  c . METHOD_2 ( STRING_2 ) (  fail ( STRING_3 ) )  fail ( STRING_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME append ) NAME append ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME text ) NAME text ( INIT = java.lang.String.format ( format , args ) ) INIT = java.lang.String.format ( format , args ) ) VAR VAR (  VAR_1 . append ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( text ) ) )  VAR_1 . append ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( text ) ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( this ) ; )  return TYPE_1 . METHOD_1 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( listener ) )  METHOD_2 ( ) . METHOD_3 ( listener ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND line != null ) COND line != null ( THEN THEN (  VAR_1 . METHOD_2 ( STRING_1 , line ) )  VAR_1 . METHOD_2 ( STRING_1 , line ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ) INIT = ( ( TYPE_3 ) ( VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) ) ) VAR VAR (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) (  return VAR_3 ; )  return VAR_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME v ) NAME v ( INIT = new TYPE_1 ( VAR_1 ) ) INIT = new TYPE_1 ( VAR_1 ) ) VAR VAR (  v . METHOD_2 ( VAR_1 ) )  v . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device , VAR_1 ) ; )  return service . METHOD_1 ( device , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME uri ) NAME uri ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_5 ) ++ ) > 0 ) COND ( ( VAR_5 ) ++ ) > 0 ( THEN THEN (  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) )  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  config . METHOD_1 ( type ) )  config . METHOD_1 ( type ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( STRING_1 ) )  VAR_1 = new TYPE_1 ( STRING_1 ) (  VAR_1 . start ( ) )  VAR_1 . start ( ) (  VAR_2 = TYPE_2 . METHOD_2 ( ) )  VAR_2 = TYPE_2 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME f ) NAME f ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = f . getName ( ) )  VAR_1 = f . getName ( ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_1 ( new TYPE_3 ( f ) ) ) INIT = TYPE_2 . METHOD_1 ( new TYPE_3 ( f ) ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( path , name , VAR_1 ) ; )  return VAR_2 . METHOD_1 ( path , name , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( context , VAR_1 , callback , VAR_3 , VAR_4 ) ; )  return METHOD_1 ( context , VAR_1 , callback , VAR_3 , VAR_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_1 ( ) ) INIT = VAR_2 . METHOD_1 ( ) ) VAR VAR (  return VAR_1 == null ? VAR_1 : new TYPE_2 ( VAR_1 , VAR_3 ) ; )  return VAR_1 == null ? VAR_1 : new TYPE_2 ( VAR_1 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME response ) NAME response ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 , response ) )  VAR_2 . METHOD_2 ( VAR_1 , response ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME request ) NAME request ( INIT = VAR_3 . METHOD_3 ( VAR_1 ) ) INIT = VAR_3 . METHOD_3 ( VAR_1 ) ) VAR VAR ( IF IF ( COND request != null ) COND request != null ( THEN THEN (  VAR_4 = response )  VAR_4 = response (  METHOD_4 ( VAR_1 , request ) )  METHOD_4 ( VAR_1 , request ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND line != null ) COND line != null ( THEN THEN ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_1 . error ( null , line ) )  VAR_1 . error ( null , line ) ) THEN THEN ) IF IF ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . toString ( ) . METHOD_2 ( ) ; )  return VAR_1 . toString ( ) . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<java.lang.String> ) TYPE TYPE_3<java.lang.String> ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_2 , METHOD_3 ( VAR_1 ) , VAR_1 ) ; )  return METHOD_2 ( VAR_2 , METHOD_3 ( VAR_1 ) , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_2 . METHOD_2 ( fd , path , true , false , this ) )  VAR_1 = TYPE_2 . METHOD_2 ( fd , path , true , false , this ) (  fd . METHOD_3 ( ) )  fd . METHOD_3 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 = null )  VAR_2 = null (  VAR_3 = null )  VAR_3 = null (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  METHOD_5 ( ) )  METHOD_5 ( ) (  VAR_4 = null )  VAR_4 = null ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<android.bluetooth.BluetoothDevice> ) RETURN java.util.List<android.bluetooth.BluetoothDevice> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; )  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( VAR_1 ) ; )  return service . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2[] ) TYPE TYPE_2[] ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_2 [ ] { new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( ) } ) INIT = new TYPE_2 [ ] { new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( ) } ) VAR VAR (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  log ( ( STRING_1 + VAR_1 ) ) )  log ( ( STRING_1 + VAR_1 ) ) ) THEN THEN ) IF IF (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<?extendsTYPE_2> ) TYPE java.util.List<?extendsTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( VAR_1 , null , VAR_2 , TYPE_4 . METHOD_2 ( VAR_3 ) ) ; )  return TYPE_3 . METHOD_1 ( VAR_1 , null , VAR_2 , TYPE_4 . METHOD_2 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_3 ( VAR_4 ) ) INIT = VAR_3 . METHOD_3 ( VAR_4 ) ) VAR VAR (  METHOD_4 ( VAR_2 ) )  METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = new android.os.Bundle ( ) )  VAR_2 = new android.os.Bundle ( ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME slotId ) NAME slotId ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( - 1 ) ) ) COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( - 1 ) ) ( THEN THEN (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) >= ( VAR_2 ) ) && ( METHOD_2 ( VAR_3 ) ) ; )  return ( ( VAR_1 ) >= ( VAR_2 ) ) && ( METHOD_2 ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( 10 , 5 ) )  METHOD_2 ( 10 , 5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , false , true , true ) )  METHOD_2 ( false , false , true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + netId ) ) ; )  return METHOD_3 ( ( STRING_1 + netId ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME content ) NAME content ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) )  TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_2 ( content ) ) INIT = new TYPE_2 ( content ) ) VAR VAR (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND ! ( METHOD_2 ( STRING_1 ) ) ) COND ! ( METHOD_2 ( STRING_1 ) ) ( THEN THEN (  android.util.Log.e ( VAR_3 . TAG , STRING_2 ) )  android.util.Log.e ( VAR_3 . TAG , STRING_2 ) (  return false ; )  return false ; ) THEN THEN ) IF IF (  return true ; )  return true ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( this . VAR_1 ) == 0 ) COND ( this . VAR_1 ) == 0 ( THEN THEN (  this . VAR_1 = TYPE_1 . METHOD_2 ( ) )  this . VAR_1 = TYPE_1 . METHOD_2 ( ) (  TYPE_2 . METHOD_3 ( ( ( this . VAR_1 ) != 0 ) ) )  TYPE_2 . METHOD_3 ( ( ( this . VAR_1 ) != 0 ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) (  VAR_6 . METHOD_3 ( VAR_3 , VAR_5 ) )  VAR_6 . METHOD_3 ( VAR_3 , VAR_5 ) (  VAR_2 = false )  VAR_2 = false ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME text ) NAME text ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME start ) NAME start ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 , text . METHOD_3 ( ) , start , ( VAR_2 - start ) , VAR_3 , VAR_4 ) )  TYPE_2 . METHOD_2 ( VAR_1 , text . METHOD_3 ( ) , start , ( VAR_2 - start ) , VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( ( VAR_1 + STRING_1 ) + VAR_1 ) + STRING_1 ) + VAR_1 ) INIT = ( ( ( VAR_1 + STRING_1 ) + VAR_1 ) + STRING_1 ) + VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_4 ) ) INIT = METHOD_2 ( VAR_4 ) ) VAR VAR (  assertEquals ( VAR_2 , VAR_3 ) )  assertEquals ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw ( ( TYPE_2 ) ( new TYPE_2 ( ) . METHOD_3 ( e ) ) ) ; )  throw ( ( TYPE_2 ) ( new TYPE_2 ( ) . METHOD_3 ( e ) ) ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return index ; )  return index ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( device ) )  service . METHOD_1 ( device ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) . build ( ) . toString ( ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 ) . build ( ) . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ! ( VAR_1 . METHOD_2 ( ) ) ; )  return ! ( VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE java.util.HashMap<java.lang.String,TYPE_1> ) TYPE java.util.HashMap<java.lang.String,TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( type ) ) INIT = VAR_2 . get ( type ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 . get ( name ) ; )  return VAR_1 . get ( name ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME response ) NAME response ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME content ) NAME content ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR (  METHOD_4 ( a ) )  METHOD_4 ( a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ( INIT = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ) INIT = VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) ) ) VAR VAR (  VAR_3 . METHOD_2 ( p . getName ( ) ) )  VAR_3 . METHOD_2 ( p . getName ( ) ) (  TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = ( VAR_1 ) & ( ~ 8 ) )  VAR_1 = ( VAR_1 ) & ( ~ 8 ) (  VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME uid ) NAME uid ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( uid ) ; )  return TYPE_1 . METHOD_1 ( uid ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( mContext ) ) != null ) COND ( TYPE_1 . METHOD_2 ( mContext ) ) != null ( THEN THEN (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ) THEN THEN ( ELSE ELSE (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ( INIT = new android.content.Intent ( VAR_2 ) ) INIT = new android.content.Intent ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_3 ) ) )  VAR_1 . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( VAR_3 ) ) (  METHOD_4 ( ) . METHOD_5 ( VAR_1 , STRING_2 ) )  METHOD_4 ( ) . METHOD_5 ( VAR_1 , STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  a = - a )  a = - a (  Main.expectEquals ( ( - INT_1 ) , a ) )  Main.expectEquals ( ( - INT_1 ) , a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_9 ) NAME VAR_9 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_10 ) NAME VAR_10 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) ) THEN THEN ) IF IF (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) (  VAR_4 . METHOD_3 ( ) )  VAR_4 . METHOD_3 ( ) (  VAR_5 . METHOD_3 ( ) )  VAR_5 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . toString ( ) ) )  assertEquals ( STRING_1 , TYPE_1 . toString ( ) ) (  assertEquals ( STRING_2 , TYPE_2 . toString ( ) ) )  assertEquals ( STRING_2 , TYPE_2 . toString ( ) ) (  assertEquals ( STRING_3 , TYPE_3 . toString ( ) ) )  assertEquals ( STRING_3 , TYPE_3 . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return super . METHOD_1 ( node ) ; )  return super . METHOD_1 ( node ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 class ) )  TYPE_1 . METHOD_2 ( VAR_1 class ) (  Main . METHOD_3 ( INT_1 ) )  Main . METHOD_3 ( INT_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME a ) NAME a ( INIT = STRING_2 ) INIT = STRING_2 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , length ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , length ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  println ( ( ( ( ( METHOD_2 ( VAR_2 ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( VAR_3 ) ) ) + STRING_2 ) ) )  println ( ( ( ( ( METHOD_2 ( VAR_2 ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( VAR_3 ) ) ) + STRING_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( STRING_1 ) ) INIT = new TYPE_1 ( STRING_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return ( VAR_3 . METHOD_3 ( ) ) / INT_1 ; )  return ( VAR_3 . METHOD_3 ( ) ) / INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) INIT = METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) VAR VAR ( IF IF ( COND STRING_2 . equals ( VAR_1 ) ) COND STRING_2 . equals ( VAR_1 ) ( THEN THEN (  return - 1 ; )  return - 1 ; ) THEN THEN ) IF IF (  return java.lang.Integer.parseInt ( VAR_1 ) ; )  return java.lang.Integer.parseInt ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME result ) NAME result ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ( IF IF ( COND result == null ) COND result == null ( THEN THEN (  VAR_1 = result = TYPE_3 . METHOD_2 ( ) )  VAR_1 = result = TYPE_3 . METHOD_2 ( ) ) THEN THEN ) IF IF (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  TYPE_1 . METHOD_2 ( mContext ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) . METHOD_5 ( ) )  TYPE_1 . METHOD_2 ( mContext ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( in ) )  METHOD_2 ( in ) (  METHOD_3 ( out ) )  METHOD_3 ( out ) (  VAR_2 . METHOD_4 ( ) . run ( ) )  VAR_2 . METHOD_4 ( ) . run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( ( d . METHOD_3 ( ) ) & ( VAR_3 ) ) != 0 ; )  return ( ( d . METHOD_3 ( ) ) & ( VAR_3 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 . METHOD_2 ( index ) )  VAR_2 = VAR_1 . METHOD_2 ( index ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected synchronized ) MODIFIER protected synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . set ( METHOD_1 ( VAR_2 , ( VAR_3 * INT_1 ) , VAR_4 , VAR_5 , VAR_6 ) ) )  VAR_1 . set ( METHOD_1 ( VAR_2 , ( VAR_3 * INT_1 ) , VAR_4 , VAR_5 , VAR_6 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) )  TYPE_1 . METHOD_2 ( ( STRING_1 + VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  device . METHOD_2 ( i , VAR_1 , VAR_2 ) )  device . METHOD_2 ( i , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND value == null ) COND value == null ( THEN THEN (  throw new java.lang.NullPointerException ( ) ; )  throw new java.lang.NullPointerException ( ) ; ) THEN THEN ) IF IF (  VAR_1 |= 8 )  VAR_1 |= 8 (  VAR_2 = value )  VAR_2 = value (  METHOD_2 ( ) )  METHOD_2 ( ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , format , args ) )  METHOD_2 ( STRING_1 , format , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME field ) NAME field ( BLOCK BLOCK (  METHOD_1 ( ) )  METHOD_1 ( ) (  return VAR_1 [ data [ pos ] ] ; )  return VAR_1 [ data [ pos ] ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_3 ) (  VAR_4 . METHOD_2 ( VAR_1 ) )  VAR_4 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . info ( java.lang.String.format ( STRING_1 , VAR_2 , VAR_4 ) ) )  VAR_3 . info ( java.lang.String.format ( STRING_1 , VAR_2 , VAR_4 ) ) ) THEN THEN ) IF IF (  super . METHOD_1 ( VAR_1 , VAR_2 ) )  super . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < VAR_1 ) COND i < VAR_1 ( UPDATE UPDATE (  ++ i )  ++ i ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 ) )  TYPE_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_5 ) NAME VAR_5 ( INIT = new TYPE_4 ( VAR_4 ) ) INIT = new TYPE_4 ( VAR_4 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_5 ) TYPE TYPE_5 ( NAME VAR_6 ) NAME VAR_6 ( INIT = VAR_7 ) INIT = VAR_7 ) VAR VAR (  METHOD_2 ( VAR_6 , VAR_1 , VAR_2 , VAR_8 , VAR_3 , VAR_5 ) )  METHOD_2 ( VAR_6 , VAR_1 , VAR_2 , VAR_8 , VAR_3 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 != VAR_1 ) COND VAR_1 != VAR_1 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( ( VAR_1 - ( VAR_3 ) ) ) ) INIT = TYPE_1 . METHOD_2 ( ( VAR_1 - ( VAR_3 ) ) ) ) VAR VAR ( IF IF ( COND VAR_2 > ( VAR_4 ) ) COND VAR_2 > ( VAR_4 ) ( THEN THEN (  VAR_4 = VAR_2 )  VAR_4 = VAR_2 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . toString ( ) ) ; )  return TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME start ) NAME start ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  METHOD_1 ( ) )  METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 , STRING_2 , 5 , 6 ) )  METHOD_2 ( STRING_1 , STRING_2 , 5 , 6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_1 = null )  VAR_1 = null ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 = null )  VAR_3 = null ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ? TYPE_2 . METHOD_5 ( true ) : TYPE_2 . METHOD_5 ( false ) ) ) )  VAR_2 . METHOD_2 ( ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ? TYPE_2 . METHOD_5 ( true ) : TYPE_2 . METHOD_5 ( false ) ) ) (  return super . METHOD_1 ( VAR_1 ) ; )  return super . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( TYPE_1 . TAG ) )  TYPE_1 . METHOD_2 ( TYPE_1 . TAG ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME in ) NAME in ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<java.lang.String> ) TYPE TYPE_3<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( 0 ) ) INIT = new TYPE_1 ( 0 ) ) VAR VAR (  assertEquals ( 0 , VAR_1 . METHOD_2 ( ) ) )  assertEquals ( 0 , VAR_1 . METHOD_2 ( ) ) (  assertEquals ( 0 , VAR_1 . METHOD_3 ( ) ) )  assertEquals ( 0 , VAR_1 . METHOD_3 ( ) ) (  assertEquals ( STRING_1 , VAR_1 . toString ( ) ) )  assertEquals ( STRING_1 , VAR_1 . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( VAR_1 ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) ; )  return ( ( VAR_1 ) && ( VAR_2 . METHOD_2 ( ) ) ) && ( ( METHOD_3 ( ) ) != ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float[] ) RETURN float[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , null , 0 , false , null ) (  TYPE_2 . fail ( ) )  TYPE_2 . fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , w ) ) )  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , w ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( id != null ) && ( id != ( VAR_1 ) ) ) COND ( id != null ) && ( id != ( VAR_1 ) ) ( THEN THEN (  call . METHOD_2 ( true ) )  call . METHOD_2 ( true ) (  METHOD_3 ( call ) )  METHOD_3 ( call ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  return ( VAR_1 . METHOD_3 ( ) ) - 1 ; )  return ( VAR_1 . METHOD_3 ( ) ) - 1 ; ) THEN THEN ) IF IF ( IF IF ( COND VAR_1 . METHOD_4 ( ) ) COND VAR_1 . METHOD_4 ( ) ( THEN THEN (  return 1 ; )  return 1 ; ) THEN THEN ) IF IF (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = VAR_1 + STRING_2 )  VAR_2 = VAR_1 + STRING_2 ) THEN THEN ) IF IF (  TYPE_1 . fail ( ( VAR_2 + STRING_3 ) ) )  TYPE_1 . fail ( ( VAR_2 + STRING_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final ) MODIFIER private final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.v ( com.android.server.am.ActivityManagerService.TAG , ( STRING_1 + ( VAR_2 ) ) ) )  android.util.Log.v ( com.android.server.am.ActivityManagerService.TAG , ( STRING_1 + ( VAR_2 ) ) ) ) THEN THEN ) IF IF ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_3 . METHOD_2 ( VAR_4 ) )  VAR_3 . METHOD_2 ( VAR_4 ) (  VAR_2 = true )  VAR_2 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?extendsTYPE_1> ) TYPE java.lang.Class<?extendsTYPE_1> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME text ) NAME text ( INIT = java.lang.String.format ( VAR_1 , args ) ) INIT = java.lang.String.format ( VAR_1 , args ) ) VAR VAR (  VAR_2 . METHOD_1 ( text ) )  VAR_2 . METHOD_1 ( text ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( x < < n ) | ( x > > > ( INT_1 - n ) ) ; )  return ( x < < n ) | ( x > > > ( INT_1 - n ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME item ) NAME item ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( item . METHOD_2 ( VAR_2 ) ) == VAR_1 ; )  return ( item . METHOD_2 ( VAR_2 ) ) == VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( 6 ) )  a = Main . METHOD_2 ( 6 ) (  b = Main . METHOD_2 ( 2 ) )  b = Main . METHOD_2 ( 2 ) (  c = a - b )  c = a - b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME subId ) NAME subId ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ) COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_1 ( subId ) ; )  return METHOD_1 ( subId ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_1 , VAR_2 ) ) COND METHOD_2 ( VAR_1 , VAR_2 ) ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 , field , VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_1 , field , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = context . METHOD_2 ( ) )  this . VAR_2 = context . METHOD_2 ( ) (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( index < 0 ) || ( index >= ( count ) ) ) COND ( index < 0 ) || ( index >= ( count ) ) ( THEN THEN (  throw new TYPE_1 ( index ) ; )  throw new TYPE_1 ( index ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_1 ( this , index ) ; )  return TYPE_2 . METHOD_1 ( this , index ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( ) . METHOD_2 ( false ) )  METHOD_1 ( ) . METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) THEN THEN ) IF IF (  state = VAR_1 )  state = VAR_1 (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) )  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) (  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) )  assertEquals ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME obj ) NAME obj ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , obj , name ) )  METHOD_3 ( mContext , obj , name ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME f ) NAME f ( INIT = METHOD_2 ( field ) ) INIT = METHOD_2 ( field ) ) VAR VAR ( IF IF ( COND f == null ) COND f == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  VAR_3 . METHOD_2 ( VAR_1 , method , VAR_2 , VAR_4 ) )  VAR_3 . METHOD_2 ( VAR_1 , method , VAR_2 , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME address ) NAME address ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( getName ( ) ) )  METHOD_2 ( getName ( ) ) ) THEN THEN ) IF IF ( IF IF ( COND ! ( METHOD_3 ( VAR_2 . get ( VAR_3 ) , VAR_4 ) ) ) COND ! ( METHOD_3 ( VAR_2 . get ( VAR_3 ) , VAR_4 ) ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( type ) ; )  return METHOD_2 ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_2 , VAR_1 , path ) )  VAR_3 . METHOD_1 ( VAR_2 , VAR_1 , path ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( config ) ; )  return VAR_1 . METHOD_1 ( config ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_2 ( ) ; )  throw e . METHOD_2 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ) ) )  assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . get ( VAR_1 ) . getName ( ) ; )  return TYPE_1 . get ( VAR_1 ) . getName ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , null ) ; )  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . fail ( TYPE_1 . format ( VAR_1 , expected , VAR_2 ) ) )  TYPE_1 . fail ( TYPE_1 . format ( VAR_1 , expected , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_3 . get ( VAR_2 ) ) INIT = TYPE_3 . get ( VAR_2 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_1 ( ) ) INIT = VAR_1 . METHOD_1 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( session , VAR_3 ) )  METHOD_2 ( session , VAR_3 ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 . METHOD_2 ( ) ) == 0 ) COND ( VAR_2 . METHOD_2 ( ) ) == 0 ( THEN THEN ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  TYPE_2 . d ( VAR_4 . TAG , STRING_1 ) )  TYPE_2 . d ( VAR_4 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( VAR_5 ) )  VAR_2 . METHOD_3 ( VAR_5 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 ) )  METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final native ) MODIFIER private final native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_2 ( VAR_1 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME element ) NAME element ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  context . METHOD_2 ( VAR_1 , element , context . METHOD_3 ( element ) , java.lang.String.format ( STRING_1 , element . METHOD_4 ( ) ) , null ) )  context . METHOD_2 ( VAR_1 , element , context . METHOD_3 ( element ) , java.lang.String.format ( STRING_1 , element . METHOD_4 ( ) ) , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Throwable ) TYPE java.lang.Throwable ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND device == null ) COND device == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( IF IF ( COND TYPE_1 . METHOD_2 ( device . METHOD_3 ( ) ) ) COND TYPE_1 . METHOD_2 ( device . METHOD_3 ( ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = 1 ) INIT = 1 ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN METHOD_2 ( ) ) IN METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 *= VAR_2 . METHOD_3 ( ) . size ( ) )  VAR_1 *= VAR_2 . METHOD_3 ( ) . size ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME src ) NAME src ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_1 . METHOD_2 ( VAR_2 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_2 . METHOD_3 ( VAR_1 , src , VAR_3 . METHOD_4 ( ) ) )  TYPE_2 . METHOD_3 ( VAR_1 , src , VAR_3 . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_3 , VAR_2 ) )  METHOD_2 ( VAR_3 , VAR_2 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return ( VAR_1 . METHOD_1 ( ) ) == ( VAR_2 ) ; )  return ( VAR_1 . METHOD_1 ( ) ) == ( VAR_2 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) )  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e ) (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_2 ( ) ; )  return VAR_1 . METHOD_2 ( ) ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  return VAR_2 . METHOD_3 ( VAR_3 ) ; )  return VAR_2 . METHOD_3 ( VAR_3 ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( ( ( int ) ( VAR_1 ) ) & INT_1 ) ) )  METHOD_2 ( ( ( ( int ) ( VAR_1 ) ) & INT_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( WHILE WHILE ( COND true ) COND true ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_1 ( VAR_1 . METHOD_2 ( ) ) )  METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . status = VAR_2 )  VAR_1 . status = VAR_2 ) THEN THEN ) IF IF (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_3 ) COND VAR_1 instanceof TYPE_3 ( THEN THEN ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( TYPE_3 ) ( VAR_1 ) ) ) INIT = ( ( TYPE_3 ) ( VAR_1 ) ) ) VAR VAR (  return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; )  return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  action . METHOD_2 ( VAR_1 ) )  action . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; )  return VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK ( IF IF ( COND ( VAR_4 ) == VAR_1 ) COND ( VAR_4 ) == VAR_1 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( 1 , VAR_2 ) )  VAR_3 . METHOD_2 ( 1 , VAR_2 ) (  VAR_3 . METHOD_2 ( 2 , VAR_1 ) )  VAR_3 . METHOD_2 ( 2 , VAR_1 ) (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR (  return ( ( METHOD_4 ( VAR_2 ) ) + STRING_1 ) + ( METHOD_5 ( VAR_1 ) ) ; )  return ( ( METHOD_4 ( VAR_2 ) ) + STRING_1 ) + ( METHOD_5 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_2 ( VAR_1 , METHOD_2 ( x , b . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) ) ; )  return new TYPE_2 ( VAR_1 , METHOD_2 ( x , b . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR (  c . METHOD_2 ( STRING_1 , STRING_2 ) )  c . METHOD_2 ( STRING_1 , STRING_2 ) (  c . METHOD_3 ( null ) )  c . METHOD_3 ( null ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( listener ) )  VAR_1 . METHOD_2 ( listener ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<java.lang.String> ) RETURN java.util.List<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . of ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; )  return TYPE_1 . of ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.io.File[] ) RETURN java.io.File[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true , false , true , true ) )  METHOD_2 ( true , false , true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , VAR_1 , VAR_2 ) )  METHOD_3 ( mContext , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , TYPE_2 . METHOD_4 ( VAR_2 ) ) )  VAR_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , TYPE_2 . METHOD_4 ( VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  android.util.Log.e ( VAR_1 . TAG , ( STRING_1 + e ) ) )  android.util.Log.e ( VAR_1 . TAG , ( STRING_1 + e ) ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = super . METHOD_2 ( ) )  VAR_1 = super . METHOD_2 ( ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( this , VAR_1 ) )  VAR_2 . METHOD_2 ( this , VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ! ( TYPE_2 . METHOD_2 ( ) . VAR_2 ) ) ? 2 : 10 ) INIT = ( ! ( TYPE_2 . METHOD_2 ( ) . VAR_2 ) ) ? 2 : 10 ) VAR VAR (  return new TYPE_1 ( null , new TYPE_3 ( VAR_3 , VAR_1 , VAR_3 , VAR_1 ) ) ; )  return new TYPE_1 ( null , new TYPE_3 ( VAR_3 , VAR_1 , VAR_3 , VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device ) ; )  return service . METHOD_1 ( device ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME getName ) NAME getName ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_2 ( ( ( byte ) ( VAR_1 ) ) ) ; )  return VAR_3 . METHOD_2 ( ( ( byte ) ( VAR_1 ) ) ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; )  return METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<java.lang.Object> ) TYPE TYPE_1<java.lang.Object> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_1 ( this . VAR_2 , VAR_1 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_1 ( this . VAR_2 , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_1 , VAR_2 ) ) INIT = METHOD_2 ( VAR_1 , VAR_2 ) ) VAR VAR (  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) )  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) (  METHOD_3 ( VAR_3 ) )  METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN char ) RETURN char ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float[] ) TYPE float[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = true )  VAR_1 = true ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( index ) , VAR_2 [ ( ( offset ) + index ) ] ) ; )  return TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . get ( index ) , VAR_2 [ ( ( offset ) + index ) ] ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ( INIT = TYPE_2 . METHOD_2 ( context . METHOD_3 ( ) , VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( context . METHOD_3 ( ) , VAR_1 ) ) VAR VAR (  return value != null ? value : VAR_2 ; )  return value != null ? value : VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2,java.lang.String> ) RETURN TYPE_1<TYPE_2,java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 . METHOD_2 ( id ) ; )  return VAR_1 . METHOD_2 ( id ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return ( ( TYPE_1 ) ( VAR_1 . values [ VAR_2 ] ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 . values [ VAR_2 ] ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( IF IF ( COND VAR_1 || ( ( VAR_2 . METHOD_1 ( ) ) != ( VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ) ) ) COND VAR_1 || ( ( VAR_2 . METHOD_1 ( ) ) != ( VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ) ) ( THEN THEN (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME name ) NAME name ( BLOCK BLOCK (  return name ; )  return name ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_2 ( name ) ; )  return VAR_2 . METHOD_2 ( name ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + name ) ) ; )  return METHOD_3 ( ( STRING_1 + name ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 3 , 16 , false ) )  t . METHOD_2 ( 3 , 16 , false ) (  args.out = TYPE_3 . log ( args . in , t ) )  args.out = TYPE_3 . log ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  log ( STRING_1 ) )  log ( STRING_1 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME field ) NAME field ( INIT = ( STRING_1 + ( java.lang.Integer . toString ( index ) ) ) + STRING_2 ) INIT = ( STRING_1 + ( java.lang.Integer . toString ( index ) ) ) + STRING_2 ) VAR VAR (  return new TYPE_1 ( null , field , VAR_1 . get ( index ) , true ) ; )  return new TYPE_1 ( null , field , VAR_1 . get ( index ) , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . d ( VAR_2 . TAG , ( ( STRING_1 + config ) + STRING_2 ) ) )  TYPE_1 . d ( VAR_2 . TAG , ( ( STRING_1 + config ) + STRING_2 ) ) ) THEN THEN ) IF IF (  TYPE_2 . set ( VAR_3 , config ) )  TYPE_2 . set ( VAR_3 , config ) (  return METHOD_2 ( config ) ; )  return METHOD_2 ( config ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null , null , TYPE_1 . METHOD_3 ( STRING_1 ) , false , new TYPE_2 ( TYPE_1 . METHOD_4 ( STRING_1 ) , STRING_2 ) , null ) )  TYPE_1 . METHOD_2 ( null , null , TYPE_1 . METHOD_3 ( STRING_1 ) , false , new TYPE_2 ( TYPE_1 . METHOD_4 ( STRING_1 ) , STRING_2 ) , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  args.out = ( ( byte ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) )  args.out = ( ( byte ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  info . METHOD_1 ( ) )  info . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , id , VAR_1 ) )  METHOD_3 ( mContext , id , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( ( arg + 1 ) + 2 ) - 3 ) + 4 ; )  return ( ( ( arg + 1 ) + 2 ) - 3 ) + 4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , flags ) )  VAR_1 . METHOD_2 ( VAR_2 , flags ) (  VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_1 . METHOD_3 ( VAR_3 ) (  VAR_1 . METHOD_3 ( VAR_4 ) )  VAR_1 . METHOD_3 ( VAR_4 ) (  VAR_1 . METHOD_4 ( type . name ( ) ) )  VAR_1 . METHOD_4 ( type . name ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME fd ) NAME fd ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME pw ) NAME pw ) VAR VAR ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  pw.print ( METHOD_2 ( ) ) )  pw.print ( METHOD_2 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) )  VAR_1 = new TYPE_1 ( mRS , VAR_2 , VAR_3 ) (  METHOD_2 ( INT_1 , 2 ) )  METHOD_2 ( INT_1 , 2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , true ) )  METHOD_2 ( VAR_1 , VAR_2 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ( INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ( INIT = type . METHOD_4 ( ) ) INIT = type . METHOD_4 ( ) ) VAR VAR (  METHOD_5 ( size ) )  METHOD_5 ( size ) (  return size + 1 ; )  return size + 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; )  return VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( ) ) != null ; )  return ( TYPE_1 . METHOD_2 ( ) ) != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 class , name ) ; )  return VAR_1 . METHOD_2 ( VAR_2 class , name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return context . METHOD_2 ( VAR_1 , ( ( VAR_2 ) < ( VAR_3 ) ? VAR_4 : ( VAR_4 ) | ( VAR_5 ) ) ) ; )  return context . METHOD_2 ( VAR_1 , ( ( VAR_2 ) < ( VAR_3 ) ? VAR_4 : ( VAR_4 ) | ( VAR_5 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == ( - 1 ) ) COND ( VAR_1 ) == ( - 1 ) ( THEN THEN (  VAR_1 = context . METHOD_2 ( ) . METHOD_1 ( ) )  VAR_1 = context . METHOD_2 ( ) . METHOD_1 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = METHOD_2 ( ) )  VAR_1 = METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , 0 , 0 ) )  TYPE_1 . METHOD_1 ( VAR_1 , 0 , 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object[] ) RETURN java.lang.Object[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME out ) NAME out ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND line != null ) COND line != null ( THEN THEN (  METHOD_1 ( line ) )  METHOD_1 ( line ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Map<java.lang.Integer,java.lang.Integer> ) TYPE java.util.Map<java.lang.Integer,java.lang.Integer> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Integer ) TYPE java.lang.Integer ( NAME index ) NAME index ( INIT = VAR_1 . get ( java.lang.Integer . METHOD_2 ( VAR_4 ) ) ) INIT = VAR_1 . get ( java.lang.Integer . METHOD_2 ( VAR_4 ) ) ) VAR VAR (  VAR_5 = index . METHOD_3 ( ) )  VAR_5 = index . METHOD_3 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; )  return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME f ) NAME f ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME c ) NAME c ( INIT = METHOD_2 ( f , VAR_1 ) ) INIT = METHOD_2 ( f , VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3<java.util.List<?>> ) TYPE TYPE_3<java.util.List<?>> ( NAME VAR_2 ) NAME VAR_2 ( INIT = c . METHOD_3 ( ) ) INIT = c . METHOD_3 ( ) ) VAR VAR (  METHOD_4 ( VAR_2 ) )  METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?superTYPE_2> ) TYPE TYPE_1<?superTYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( IN VAR_4 ) IN VAR_4 ( BLOCK BLOCK (  VAR_3 . METHOD_1 ( VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) )  VAR_1 . METHOD_3 ( VAR_3 , STRING_1 ) (  VAR_1 . METHOD_4 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) )  VAR_1 . METHOD_4 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null ) )  METHOD_2 ( VAR_1 , VAR_2 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( null ) ) INIT = new TYPE_1 ( null ) ) VAR VAR (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == false ) COND ( VAR_1 ) == false ( THEN THEN (  return STRING_1 ; )  return STRING_1 ; ) THEN THEN ) IF IF (  return VAR_2 ? STRING_2 : STRING_3 ; )  return VAR_2 ? STRING_2 : STRING_3 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME node ) NAME node ( INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) INIT = VAR_2 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return node != null ; )  return node != null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 == true ) COND VAR_2 == true ( THEN THEN (  android.util.Log.e ( VAR_3 . TAG , ( STRING_1 + STRING_2 ) ) )  android.util.Log.e ( VAR_3 . TAG , ( STRING_1 + STRING_2 ) ) (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_2 ( callback ) )  METHOD_2 ( callback ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  VAR_1 = true )  VAR_1 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return this . VAR_1 ; )  return this . VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME device ) NAME device ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  return ( device . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ) || ( device . METHOD_3 ( TYPE_2 . text ( STRING_2 ) ) ) ; )  return ( device . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 ) ) ) || ( device . METHOD_3 ( TYPE_2 . text ( STRING_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( METHOD_2 ( ) ) ) COND ! ( METHOD_2 ( ) ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( 0 ) )  METHOD_3 ( 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  mContext . METHOD_2 ( VAR_1 ) )  mContext . METHOD_2 ( VAR_1 ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME input ) NAME input ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME output ) NAME output ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( type instanceof com.android.jack.ir.ast.JDefinedClassOrInterface ) && ( ! ( type . METHOD_2 ( ) ) ) ) && ( ! ( ( ( TYPE_2 ) ( type ) ) . METHOD_3 ( VAR_1 class ) ) ) ; )  return ( ( type instanceof com.android.jack.ir.ast.JDefinedClassOrInterface ) && ( ! ( type . METHOD_2 ( ) ) ) ) && ( ! ( ( ( TYPE_2 ) ( type ) ) . METHOD_3 ( VAR_1 class ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . d ( VAR_1 , ( STRING_1 + msg ) ) )  TYPE_1 . d ( VAR_1 , ( STRING_1 + msg ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) (  METHOD_2 ( false ) )  METHOD_2 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = VAR_1 . METHOD_1 ( ) ) INIT = VAR_1 . METHOD_1 ( ) ) VAR VAR (  result = ( INT_1 * result ) + ( VAR_2 . METHOD_1 ( ) ) )  result = ( INT_1 * result ) + ( VAR_2 . METHOD_1 ( ) ) (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  VAR_2 = null )  VAR_2 = null ( IF IF ( COND ( VAR_3 ) && ( ( VAR_4 ) != null ) ) COND ( VAR_3 ) && ( ( VAR_4 ) != null ) ( THEN THEN (  METHOD_3 ( VAR_5 ) )  METHOD_3 ( VAR_5 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) THEN THEN ) IF IF (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) . METHOD_3 ( STRING_3 , STRING_4 ) ; )  return VAR_1 . METHOD_2 ( STRING_1 , STRING_2 ) . METHOD_3 ( STRING_3 , STRING_4 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; )  return ( ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME j ) NAME j ( INIT = 0 ) INIT = 0 ) VAR VAR ( TRY TRY ( RESOURCES RESOURCES ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_1 ( VAR_3 , null , null , null , null ) ) INIT = VAR_2 . METHOD_1 ( VAR_3 , null , null , null , null ) ) VAR VAR ) RESOURCES RESOURCES ( BLOCK BLOCK ( WHILE WHILE ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( BLOCK BLOCK (  ++ j )  ++ j ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 , null , VAR_2 , false , VAR_3 , ( ( TYPE_2 [ ] ) ( null ) ) ) )  TYPE_1 . METHOD_2 ( VAR_1 , null , VAR_2 , false , VAR_3 , ( ( TYPE_2 [ ] ) ( null ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_4 )  VAR_4 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) )  METHOD_3 ( VAR_5 ) . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_3 = new TYPE_1 ( VAR_2 ) )  VAR_3 = new TYPE_1 ( VAR_2 ) (  VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_1 . METHOD_3 ( VAR_3 ) (  VAR_1 . METHOD_4 ( new TYPE_2 ( VAR_2 . METHOD_5 ( ) ) ) )  VAR_1 . METHOD_4 ( new TYPE_2 ( VAR_2 . METHOD_5 ( ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( TYPE_2 ) ( context . METHOD_2 ( VAR_2 ) ) ) ) INIT = ( ( TYPE_2 ) ( context . METHOD_2 ( VAR_2 ) ) ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_3 ( ) ) INIT = VAR_1 . METHOD_3 ( ) ) VAR VAR (  return TYPE_4 . METHOD_4 ( VAR_3 ) ; )  return TYPE_4 . METHOD_4 ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private synchronized ) MODIFIER private synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . get ( VAR_2 ) ; )  return VAR_1 . get ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 [ 5 ] = 1 )  VAR_1 [ 5 ] = 1 (  VAR_1 [ 4 ] = 1 )  VAR_1 [ 4 ] = 1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_1 , VAR_3 ) ) COND METHOD_2 ( VAR_1 , VAR_3 ) ( THEN THEN (  VAR_3 . METHOD_3 ( VAR_1 , method , VAR_2 , VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_1 , method , VAR_2 , VAR_4 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_2 . METHOD_2 ( ) ) ; )  return ( VAR_1 . METHOD_2 ( ) ) && ( VAR_2 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; )  return new TYPE_1 ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) (  VAR_3 = new TYPE_2 ( VAR_1 , new TYPE_3 ( ) ) )  VAR_3 = new TYPE_2 ( VAR_1 , new TYPE_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return VAR_2 . METHOD_1 ( ) ; )  return VAR_2 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return ( VAR_3 ) != 0 ; )  return ( VAR_3 ) != 0 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_1 ) ) THEN THEN ( ELSE ELSE ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ) THEN THEN ( ELSE ELSE (  METHOD_2 ( STRING_2 ) )  METHOD_2 ( STRING_2 ) ) ELSE ELSE ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ( INIT = VAR_1 . METHOD_2 ( 6 , e . METHOD_3 ( VAR_1 ) ) ) INIT = VAR_1 . METHOD_2 ( 6 , e . METHOD_3 ( VAR_1 ) ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( id , VAR_1 ) ) INIT = new TYPE_1 ( id , VAR_1 ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( ( TYPE_1 . METHOD_2 ( ) ) >= ( VAR_1 ) ) && ( ! ( METHOD_3 ( ) ) ) ) && ( ! ( METHOD_4 ( ) ) ) ; )  return ( ( ( TYPE_1 . METHOD_2 ( ) ) >= ( VAR_1 ) ) && ( ! ( METHOD_3 ( ) ) ) ) && ( ! ( METHOD_4 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1<?extendsTYPE_2> ) RETURN TYPE_1<?extendsTYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_3 . METHOD_3 ( VAR_2 . values ( ) ) ; )  return TYPE_3 . METHOD_3 ( VAR_2 . values ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( null == ( address ) ? 0 : address . METHOD_1 ( ) ) + ( VAR_1 ) ; )  return ( null == ( address ) ? 0 : address . METHOD_1 ( ) ) + ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 ) )  TYPE_1 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK (  VAR_3 . println ( STRING_1 ) )  VAR_3 . println ( STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  return this . METHOD_1 ( VAR_1 , VAR_2 ) ; )  return this . METHOD_1 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , ( ( count ) - 1 ) ) ; )  return METHOD_1 ( VAR_1 , ( ( count ) - 1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; )  return ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_3 ) )  VAR_2 . METHOD_1 ( VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME VAR_4 ) NAME VAR_4 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 ) )  METHOD_2 ( INT_1 , INT_2 , INT_3 , VAR_1 ) (  TYPE_1 . METHOD_3 ( this ) )  TYPE_1 . METHOD_3 ( this ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME pm ) NAME pm ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( this . VAR_1 . METHOD_2 ( VAR_2 , true , VAR_3 ) ) == ( VAR_4 ) ) COND ( this . VAR_1 . METHOD_2 ( VAR_2 , true , VAR_3 ) ) == ( VAR_4 ) ( THEN THEN (  return TYPE_1 . METHOD_3 ( STRING_1 ) ; )  return TYPE_1 . METHOD_3 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return new TYPE_1 ( ) ; )  return new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( s ) )  super . METHOD_1 ( s ) (  throw new java.lang.RuntimeException ( STRING_1 ) ; )  throw new java.lang.RuntimeException ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  TYPE_1 . METHOD_3 ( VAR_5 , VAR_2 , VAR_3 ) )  TYPE_1 . METHOD_3 ( VAR_5 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  return ( VAR_3 ) != null ? VAR_3 . METHOD_3 ( ) : VAR_4 ; )  return ( VAR_3 ) != null ? VAR_3 . METHOD_3 ( ) : VAR_4 ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_3 ( ) ; )  return VAR_1 . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_2 ) ) COND METHOD_2 ( VAR_2 ) ( THEN THEN (  METHOD_3 ( VAR_2 ) )  METHOD_3 ( VAR_2 ) (  METHOD_4 ( VAR_1 , VAR_3 ) )  METHOD_4 ( VAR_1 , VAR_3 ) (  VAR_2 . METHOD_5 ( VAR_1 , VAR_4 , this ) )  VAR_2 . METHOD_5 ( VAR_1 , VAR_4 , this ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_2 ( ) ) ) ; )  return ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_2 ( ) ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_4 ( ) ; )  throw new TYPE_4 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ( INIT = VAR_1 . METHOD_2 ( 2 , 0 ) ) INIT = VAR_1 . METHOD_2 ( 2 , 0 ) ) VAR VAR (  return new TYPE_1 ( id , VAR_1 ) ; )  return new TYPE_1 ( id , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 0 ] ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( ) [ 0 ] ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( action ) )  VAR_1 . METHOD_2 ( action ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( WHILE WHILE ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) WHILE WHILE ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<android.bluetooth.BluetoothDevice> ) RETURN java.util.List<android.bluetooth.BluetoothDevice> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; )  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , METHOD_2 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ) )  assertEquals ( STRING_1 , METHOD_2 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( INT_1 ) )  a = Main . METHOD_2 ( INT_1 ) (  b = Main . METHOD_2 ( INT_2 ) )  b = Main . METHOD_2 ( INT_2 ) (  c = a * b )  c = a * b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) (  VAR_1 . METHOD_2 ( VAR_3 ) )  VAR_1 . METHOD_2 ( VAR_3 ) (  VAR_1 . METHOD_2 ( VAR_4 ) )  VAR_1 . METHOD_2 ( VAR_4 ) (  VAR_1 . METHOD_2 ( VAR_5 ) )  VAR_1 . METHOD_2 ( VAR_5 ) (  VAR_1 . METHOD_2 ( VAR_6 ) )  VAR_1 . METHOD_2 ( VAR_6 ) (  VAR_1 . METHOD_2 ( VAR_7 ) )  VAR_1 . METHOD_2 ( VAR_7 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME obj ) NAME obj ( INIT = VAR_1 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) INIT = VAR_1 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ) VAR VAR (  org.junit.Assert.assertEquals ( STRING_2 , obj . toString ( ) ) )  org.junit.Assert.assertEquals ( STRING_2 , obj . toString ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2<TYPE_3,TYPE_4>> ) RETURN TYPE_1<TYPE_2<TYPE_3,TYPE_4>> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3,TYPE_4> ) TYPE TYPE_2<TYPE_3,TYPE_4> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 ) ) (  assertTrue ( VAR_1 . METHOD_2 ( STRING_2 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_2 ) ) (  assertFalse ( VAR_1 . METHOD_2 ( STRING_3 ) ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 ) )  METHOD_2 ( VAR_1 , VAR_2 ) (  METHOD_2 ( VAR_3 , VAR_4 ) )  METHOD_2 ( VAR_3 , VAR_4 ) (  METHOD_2 ( VAR_5 , VAR_6 ) )  METHOD_2 ( VAR_5 , VAR_6 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1.File ) RETURN TYPE_1.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 . File ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; )  return new TYPE_1 . File ( VAR_1 . METHOD_2 ( ) , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( TRY TRY ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_1 , e , VAR_3 ) ; )  throw new TYPE_1 ( STRING_1 , e , VAR_3 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME count ) NAME count ( INIT = 0 ) INIT = 0 ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  count += VAR_1 . METHOD_2 ( ) )  count += VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return count * INT_1 ; )  return count * INT_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_1 ( ) ) COND VAR_1 . METHOD_1 ( ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_2 ( VAR_2 ) ) INIT = new TYPE_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_1 . METHOD_3 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return node . METHOD_2 ( VAR_1 class ) ; )  return node . METHOD_2 ( VAR_1 class ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( fd ) != null ) COND ( fd ) != null ( THEN THEN (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  VAR_2 = true )  VAR_2 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  throw TYPE_2 . METHOD_3 ( e ) ; )  throw TYPE_2 . METHOD_3 ( e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = x - y ) INIT = x - y ) VAR VAR (  return VAR_2 + y ; )  return VAR_2 + y ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME uri ) NAME uri ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , uri . METHOD_4 ( ) ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , uri . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME w ) NAME w ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = ( ( VAR_3 ) != null ) ? VAR_3 . METHOD_1 ( ) : true ) INIT = ( ( VAR_3 ) != null ) ? VAR_3 . METHOD_1 ( ) : true ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return 1 ; )  return 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME config ) NAME config ( INIT = VAR_4 . METHOD_2 ( VAR_3 ) ) INIT = VAR_4 . METHOD_2 ( VAR_3 ) ) VAR VAR (  config . METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) )  config . METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) )  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_6 ) NAME VAR_6 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME options ) NAME options ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_3 = VAR_2 )  VAR_3 = VAR_2 ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_4 ) NAME VAR_4 ( INIT = new TYPE_3 ( ) ) INIT = new TYPE_3 ( ) ) VAR VAR (  METHOD_1 ( 3 , STRING_1 , VAR_1 , VAR_4 , options ) )  METHOD_1 ( 3 , STRING_1 , VAR_1 , VAR_4 , options ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = null )  VAR_1 = null (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.Class<?>[] ) RETURN java.lang.Class<?>[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME node ) NAME node ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( INIT = TYPE_3 . METHOD_2 ( node ) ) INIT = TYPE_3 . METHOD_2 ( node ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ( INIT = TYPE_3 . METHOD_3 ( node ) ) INIT = TYPE_3 . METHOD_3 ( node ) ) VAR VAR (  return new TYPE_1 ( name , line ) ; )  return new TYPE_1 ( name , line ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME VAR_2 ) NAME VAR_2 ( INIT = new java.lang.StringBuilder ( ( ( s . length ( ) ) + 16 ) ) ) INIT = new java.lang.StringBuilder ( ( ( s . length ( ) ) + 16 ) ) ) VAR VAR (  METHOD_2 ( VAR_2 , s , VAR_1 , false ) )  METHOD_2 ( VAR_2 , s , VAR_1 , false ) (  return VAR_2 . toString ( ) ; )  return VAR_2 . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 [ 2 ] ) INIT = new TYPE_1 [ 2 ] ) VAR VAR (  VAR_1 [ 0 ] = TYPE_2 . METHOD_2 ( VAR_2 ) )  VAR_1 [ 0 ] = TYPE_2 . METHOD_2 ( VAR_2 ) (  VAR_1 [ 1 ] = TYPE_2 . METHOD_2 ( VAR_3 ) )  VAR_1 [ 1 ] = TYPE_2 . METHOD_2 ( VAR_3 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( 0 , new TYPE_2 ( java.lang.String . METHOD_3 ( VAR_2 ) , VAR_2 ) ) )  VAR_1 . METHOD_2 ( 0 , new TYPE_2 ( java.lang.String . METHOD_3 ( VAR_2 ) , VAR_2 ) ) (  VAR_1 . METHOD_4 ( 0 , path . METHOD_5 ( ) ) )  VAR_1 . METHOD_4 ( 0 , path . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = x + y ) INIT = x + y ) VAR VAR (  return VAR_2 - x ; )  return VAR_2 - x ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( false , false , false ) )  METHOD_2 ( false , false , false ) (  METHOD_3 ( 0 , true , false ) )  METHOD_3 ( 0 , true , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_1<java.lang.String> ) TYPE TYPE_1<java.lang.String> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.util.Set<TYPE_2> ) TYPE java.util.Set<TYPE_2> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  METHOD_2 ( VAR_4 , VAR_3 ) )  METHOD_2 ( VAR_4 , VAR_3 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( i , i ) )  TYPE_1 . METHOD_2 ( i , i ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 != null ) && ( ! ( VAR_1 . equals ( VAR_2 ) ) ) ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . equals ( VAR_2 ) ) ) ( THEN THEN (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( int ) ( ( double ) ( value ) ) ) ; )  return ( ( int ) ( ( double ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( netId , true ) ; )  return VAR_2 . METHOD_2 ( netId , true ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + netId ) ) ; )  return METHOD_3 ( ( STRING_1 + netId ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ( INIT = STRING_1 + name ) INIT = STRING_1 + name ) VAR VAR (  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , msg ) )  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , msg ) (  throw new TYPE_3 ( msg ) ; )  throw new TYPE_3 ( msg ) ; ) THEN THEN ) IF IF (  return METHOD_2 ( VAR_1 , name ) ; )  return METHOD_2 ( VAR_1 , name ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF (  VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) )  VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  assertEquals ( INT_1 , VAR_1 . size ( ) ) )  assertEquals ( INT_1 , VAR_1 . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null ) )  METHOD_2 ( VAR_1 , VAR_2 , null ) (  METHOD_3 ( VAR_3 , VAR_4 ) )  METHOD_3 ( VAR_3 , VAR_4 ) (  METHOD_3 ( VAR_5 , VAR_4 ) )  METHOD_3 ( VAR_5 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == 0 ) COND ( VAR_1 ) == 0 ( THEN THEN (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME content ) NAME content ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) )  TYPE_1 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = new TYPE_2 ( content ) ) INIT = new TYPE_2 ( content ) ) VAR VAR (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME action ) NAME action ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND TYPE_2 . equals ( action ) ) COND TYPE_2 . equals ( action ) ( THEN THEN (  METHOD_3 ( context , new TYPE_3 ( METHOD_4 ( ) ) , VAR_2 ) )  METHOD_3 ( context , new TYPE_3 ( METHOD_4 ( ) ) , VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_1 ) ) VAR VAR (  return ( VAR_2 == ( VAR_3 ) ) || ( VAR_2 == ( VAR_4 ) ) ; )  return ( VAR_2 == ( VAR_3 ) ) || ( VAR_2 == ( VAR_4 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( mContext ) != 0 ) COND ( mContext ) != 0 ( THEN THEN (  METHOD_2 ( mContext , id ) )  METHOD_2 ( mContext , id ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_1 ( STRING_1 ) )  VAR_2 . METHOD_1 ( STRING_1 ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_1 ( STRING_2 ) )  VAR_2 . METHOD_1 ( STRING_2 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) )  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME number ) NAME number ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( number , ( number . METHOD_3 ( ) ? number . METHOD_4 ( ) : VAR_1 ) ) ; )  return METHOD_2 ( number , ( number . METHOD_3 ( ) ? number . METHOD_4 ( ) : VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , arg ) ) )  VAR_2 . METHOD_2 ( java.lang.String.format ( VAR_1 , arg ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( event ) )  METHOD_2 ( event ) (  VAR_1 . METHOD_3 ( VAR_2 , event . METHOD_4 ( ) , event . METHOD_5 ( ) ) )  VAR_1 . METHOD_3 ( VAR_2 , event . METHOD_4 ( ) , event . METHOD_5 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( METHOD_4 ( p ) ) )  METHOD_3 ( METHOD_4 ( p ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  res [ 0 ] = VAR_2 . METHOD_1 ( VAR_3 , VAR_4 , new TYPE_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_3 ) ) ) )  res [ 0 ] = VAR_2 . METHOD_1 ( VAR_3 , VAR_4 , new TYPE_2 ( VAR_1 , java.lang.String.format ( STRING_1 , VAR_3 ) ) ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_2 ( VAR_1 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return METHOD_3 ( STRING_1 ) ; )  return METHOD_3 ( STRING_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( STRING_2 ) ; )  return METHOD_3 ( STRING_2 ) ; ) ELSE ELSE ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  VAR_3 . METHOD_2 ( this ) )  VAR_3 . METHOD_2 ( this ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND b . METHOD_2 ( ) ) COND b . METHOD_2 ( ) ( THEN THEN (  return this ; )  return this ; ) THEN THEN ) IF IF (  return METHOD_3 ( b . METHOD_4 ( ) ) ; )  return METHOD_3 ( b . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( c , VAR_1 , VAR_2 ) ) && ( METHOD_3 ( c , VAR_1 , VAR_2 ) ) ) COND ( METHOD_2 ( c , VAR_1 , VAR_2 ) ) && ( METHOD_3 ( c , VAR_1 , VAR_2 ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double[] ) RETURN double[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double[] ) TYPE double[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 < 0 ) COND VAR_2 < 0 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( VAR_1 , 0 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; )  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class<?> ) RETURN java.lang.Class<?> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND TYPE_1 . METHOD_2 ( this ) ) COND TYPE_1 . METHOD_2 ( this ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( this ) ; )  return TYPE_1 . METHOD_3 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME provider ) NAME provider ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  METHOD_1 ( provider ) )  METHOD_1 ( provider ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN java.util.List<?extendsTYPE_1> ) RETURN java.util.List<?extendsTYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( STRING_1 , null ) ) INIT = new TYPE_1 ( STRING_1 , null ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  c . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 . METHOD_4 ( ) ) ) )  c . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_2 . METHOD_4 ( ) ) ) (  fail ( STRING_3 ) )  fail ( STRING_3 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ) )  VAR_2 . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 ) ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_5 ) NAME VAR_5 ( IN VAR_1 . METHOD_3 ( ) ) IN VAR_1 . METHOD_3 ( ) ( BLOCK BLOCK (  METHOD_1 ( VAR_5 ) )  METHOD_1 ( VAR_5 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME from ) NAME from ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME to ) NAME to ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME locale ) NAME locale ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( VAR_1 , locale . toString ( ) ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , locale . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME d ) NAME d ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 . METHOD_3 ( VAR_2 , url ) )  VAR_1 . METHOD_3 ( VAR_2 , url ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME size ) NAME size ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = size )  VAR_1 = size ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , 0 , VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , 0 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) (  TYPE_2 . d ( VAR_1 . TAG , STRING_1 ) )  TYPE_2 . d ( VAR_1 . TAG , STRING_1 ) (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 , VAR_4 . METHOD_3 ( VAR_5 , VAR_2 ) ) )  VAR_3 . METHOD_2 ( VAR_1 , VAR_4 . METHOD_3 ( VAR_5 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( ( ( ( VAR_2 ) + STRING_1 ) + name ) + VAR_3 ) ) )  VAR_1 . METHOD_2 ( ( ( ( ( VAR_2 ) + STRING_1 ) + name ) + VAR_3 ) ) (  VAR_1 . METHOD_3 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) )  VAR_1 . METHOD_3 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . METHOD_1 ( VAR_1 ) ; )  return VAR_2 . METHOD_1 ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , 3 ) )  VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , 3 ) ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null )  VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) != null ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME packageName ) NAME packageName ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( context . METHOD_3 ( ) ) ) INIT = METHOD_2 ( context . METHOD_3 ( ) ) ) VAR VAR (  return ( TYPE_2 . equals ( packageName , VAR_1 ) ) || ( TYPE_2 . equals ( packageName , VAR_2 ) ) ; )  return ( TYPE_2 . equals ( packageName , VAR_1 ) ) || ( TYPE_2 . equals ( packageName , VAR_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( ( ( TYPE_1 ) ( x ) ) ) )  METHOD_1 ( ( ( TYPE_1 ) ( x ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME r ) NAME r ( INIT = new TYPE_2 ( h , VAR_1 , obj ) ) INIT = new TYPE_2 ( h , VAR_1 , obj ) ) VAR VAR (  VAR_3 . METHOD_2 ( r ) )  VAR_3 . METHOD_2 ( r ) (  METHOD_3 ( r ) )  METHOD_3 ( r ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . build ( ) ; )  return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . build ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! VAR_1 ) COND ! VAR_1 ( THEN THEN (  VAR_2 = true )  VAR_2 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 ) ; )  return METHOD_3 ( mContext , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_3 . METHOD_2 ( context ) ) && ( ( VAR_1 ) >= ( VAR_2 ) ) ? VAR_3 : VAR_4 ; )  return ( TYPE_3 . METHOD_2 ( context ) ) && ( ( VAR_1 ) >= ( VAR_2 ) ) ? VAR_3 : VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  s = new TYPE_1 ( STRING_1 ) )  s = new TYPE_1 ( STRING_1 ) ( TRY TRY ( BLOCK BLOCK (  s . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) )  s . METHOD_2 ( ( ( java.lang.String ) ( null ) ) ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static final ) MODIFIER private static final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return ( VAR_2 . type ) == type ; )  return ( VAR_2 . type ) == type ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME t ) NAME t ( INIT = new TYPE_1 ( mRS , VAR_1 , VAR_2 ) ) INIT = new TYPE_1 ( mRS , VAR_1 , VAR_2 ) ) VAR VAR (  assertTrue ( METHOD_2 ( t ) ) )  assertTrue ( METHOD_2 ( t ) ) (  t . METHOD_3 ( ) )  t . METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  assertEquals ( result , VAR_3 ) )  assertEquals ( result , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = type . METHOD_2 ( ) ) INIT = type . METHOD_2 ( ) ) VAR VAR (  return getName ( VAR_1 , type . getName ( ) ) ; )  return getName ( VAR_1 , type . getName ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_3 ( METHOD_4 ( ) , TYPE_1 . METHOD_5 ( device . METHOD_6 ( ) ) , VAR_3 ) ) INIT = TYPE_1 . METHOD_3 ( METHOD_4 ( ) , TYPE_1 . METHOD_5 ( device . METHOD_6 ( ) ) , VAR_3 ) ) VAR VAR (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new java.lang.RuntimeException ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , e ) ; )  throw new java.lang.RuntimeException ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , e ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME error ) NAME error ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_1 ( VAR_2 ) ) INIT = METHOD_1 ( VAR_2 ) ) VAR VAR (  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) )  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) (  METHOD_2 ( VAR_1 , VAR_3 ) )  METHOD_2 ( VAR_1 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ) COND ( VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ( THEN THEN ) THEN THEN ( ELSE ELSE (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( VAR_1 ) ) )  assertEquals ( java.lang.Integer . METHOD_2 ( expected ) , java.lang.Integer . METHOD_2 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.e ( VAR_1 . TAG , msg ) )  android.util.Log.e ( VAR_1 . TAG , msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_3 . METHOD_1 ( VAR_1 , INT_1 , VAR_2 ) ; )  return TYPE_3 . METHOD_1 ( VAR_1 , INT_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; )  return new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { STRING_1 } ) . METHOD_3 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( new java.lang.String [ ] { STRING_1 } ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( type , id , data ) )  VAR_1 . METHOD_1 ( type , id , data ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  status = VAR_1 )  status = VAR_1 (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME d ) NAME d ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND d == null ) COND d == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) )  d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( size ) == 0 ) COND ( size ) == 0 ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; )  return ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME h ) NAME h ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME call ) NAME call ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( call , true ) )  METHOD_2 ( call , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_2 ( a . length , VAR_1 , VAR_2 ) (  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) )  TYPE_2 . METHOD_1 ( a , VAR_1 , ( VAR_2 - 1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  VAR_1 = null )  VAR_1 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof TYPE_2 ) COND VAR_1 instanceof TYPE_2 ( THEN THEN (  return ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ; )  return ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( ) ; )  return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  callback . METHOD_2 ( VAR_1 ) )  callback . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_3 ( uid , VAR_2 ) )  METHOD_3 ( uid , VAR_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 . TAG , msg ) )  android.util.Log.d ( VAR_2 . TAG , msg ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 ) )  METHOD_2 ( VAR_1 , VAR_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_4 ( null ) )  VAR_3 . METHOD_4 ( null ) ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) (  METHOD_3 ( VAR_2 , true ) )  METHOD_3 ( VAR_2 , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = value )  VAR_1 = value (  TYPE_1 . METHOD_2 ( address , value ) )  TYPE_1 . METHOD_2 ( address , value ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( ( ( com.android.jack.ir.ast.JDefinedClassOrInterface ) ( type ) ) , this ) ; )  return new TYPE_1 ( ( ( com.android.jack.ir.ast.JDefinedClassOrInterface ) ( type ) ) , this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) )  TYPE_1 . METHOD_1 ( VAR_3 , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 ) ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  errln ( STRING_1 ) )  errln ( STRING_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( true ) ) . METHOD_4 ( ) ; )  return TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( true ) ) . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME locale ) NAME locale ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) ) == ( VAR_2 ) ) COND ( METHOD_2 ( ) ) == ( VAR_2 ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_3 ( VAR_3 , VAR_1 ) ; )  return METHOD_3 ( VAR_3 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME node ) NAME node ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( CHAR_1 , STRING_1 ) )  TYPE_1 . METHOD_2 ( CHAR_1 , STRING_1 ) (  TYPE_1 . METHOD_2 ( CHAR_2 , STRING_2 ) )  TYPE_1 . METHOD_2 ( CHAR_2 , STRING_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  VAR_4 = VAR_1 )  VAR_4 = VAR_1 (  TYPE_2 . METHOD_2 ( VAR_5 , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_5 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME s ) NAME s ( INIT = super . METHOD_1 ( c ) ) INIT = super . METHOD_1 ( c ) ) VAR VAR (  TYPE_2 . METHOD_2 ( s , false ) )  TYPE_2 . METHOD_2 ( s , false ) (  return s ; )  return s ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME number ) NAME number ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( VAR_1 ) )  METHOD_4 ( VAR_1 ) ( IF IF ( COND ! ( METHOD_5 ( ) ) ) COND ! ( METHOD_5 ( ) ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  METHOD_6 ( VAR_1 , VAR_2 , false ) )  METHOD_6 ( VAR_1 , VAR_2 , false ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( app , VAR_1 , id ) )  TYPE_1 . METHOD_1 ( app , VAR_1 , id ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME e ) NAME e ( BLOCK BLOCK (  e . METHOD_2 ( ) )  e . METHOD_2 ( ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_3 , VAR_4 , VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_3 , VAR_4 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == VAR_1 ) COND ( VAR_2 ) == VAR_1 ( THEN THEN (  VAR_2 = null )  VAR_2 = null ) THEN THEN ( ELSE ELSE ( IF IF ( COND ( VAR_3 ) == VAR_1 ) COND ( VAR_3 ) == VAR_1 ( THEN THEN (  VAR_3 = null )  VAR_3 = null ) THEN THEN ( ELSE ELSE (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) ) ELSE ELSE ) IF IF ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static synchronized ) MODIFIER public static synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  VAR_2 = new TYPE_1 ( VAR_1 ) )  VAR_2 = new TYPE_1 ( VAR_1 ) ) THEN THEN ( ELSE ELSE (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) ELSE ELSE ) IF IF (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = 0 )  VAR_1 = 0 (  VAR_2 = 0 )  VAR_2 = 0 (  args.out = ( ( int ) ( java.lang.Integer . METHOD_2 ( VAR_3 ) ) ) )  args.out = ( ( int ) ( java.lang.Integer . METHOD_2 ( VAR_3 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg | arg ; )  return arg | arg ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME uid ) NAME uid ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( uid ) ) INIT = METHOD_2 ( uid ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) (  VAR_3 . METHOD_1 ( VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  fail ( STRING_1 ) )  fail ( STRING_1 ) (  return 0 ; )  return 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  msg ( VAR_1 , VAR_2 , true , false ) )  msg ( VAR_1 , VAR_2 , true , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN short ) RETURN short ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; )  return VAR_1 . METHOD_2 ( ( offset + ( address ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME path ) NAME path ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_8 ) NAME VAR_8 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_9 ) NAME VAR_9 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_10 ) NAME VAR_10 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_11 ) NAME VAR_11 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 = false )  VAR_2 = false ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_3 . METHOD_3 ( ) )  VAR_3 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME expected ) NAME expected ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertEquals ( TYPE_1 . toString ( expected ) , TYPE_1 . toString ( VAR_1 ) ) )  assertEquals ( TYPE_1 . toString ( expected ) , TYPE_1 . toString ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( METHOD_3 ( i ) ) ; )  return METHOD_2 ( METHOD_3 ( i ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( VAR_2 ) )  TYPE_1 . METHOD_2 ( VAR_2 ) (  VAR_2 = 0 )  VAR_2 = 0 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME INT_1 ) NAME INT_1 ( CASE INT_1 ( BLOCK BLOCK (  VAR_1 . println ( STRING_1 ) )  VAR_1 . println ( STRING_1 ) (  break ; )  break ; ) BLOCK BLOCK ) CASE INT_1 ( DEFAULT DEFAULT ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN ( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_2 ) NAME METHOD_2 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD (  VAR_1 = new TYPE_1 ( VAR_2 ) { protected java.io.File METHOD_2 ( ) { return null ; } } )  VAR_1 = new TYPE_1 ( VAR_2 ) { protected java.io.File METHOD_2 ( ) { return null ; } } ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( TYPE_1 . METHOD_2 ( ) ) && ( ( TYPE_2 . METHOD_3 ( VAR_1 ) ) || ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ) ; )  return ( TYPE_1 . METHOD_2 ( ) ) && ( ( TYPE_2 . METHOD_3 ( VAR_1 ) ) || ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) (  TYPE_2 . get ( mContext ) . METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) )  TYPE_2 . get ( mContext ) . METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) (  VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) )  VAR_2 . METHOD_6 ( ) . METHOD_7 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) ) == false ) COND ( METHOD_2 ( ) ) == false ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = new TYPE_1 ( ) )  VAR_1 = new TYPE_1 ( ) (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE double ) TYPE double ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ) COND ( VAR_2 ) && ( ( VAR_3 ) != null ) ( THEN THEN (  return VAR_3 . METHOD_1 ( VAR_1 ) ; )  return VAR_3 . METHOD_1 ( VAR_1 ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; )  return METHOD_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.util.List<TYPE_2> ) TYPE java.util.List<TYPE_2> ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 . values ( ) ) IN VAR_3 . values ( ) ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_2 ( VAR_2 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 ) ) )  VAR_3 . METHOD_2 ( new TYPE_3 ( VAR_1 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( ( ( TYPE_2 ) ( null ) ) ) ) INIT = new TYPE_1 ( ( ( TYPE_2 ) ( null ) ) ) ) VAR VAR (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) COND ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME y ) NAME y ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 . METHOD_1 ( VAR_5 , VAR_1 , x , y , VAR_2 , VAR_3 ) )  VAR_4 . METHOD_1 ( VAR_5 , VAR_1 , x , y , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( ) ) < ( VAR_1 ) ) COND ( TYPE_1 . METHOD_2 ( ) ) < ( VAR_1 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  log ( TYPE_1 , msg ) )  log ( TYPE_1 , msg ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return arg ^ ( - 1 ) ; )  return arg ^ ( - 1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . METHOD_2 ( ) )  this . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ) )  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( a , a . length , VAR_1 , this . VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) )  METHOD_2 ( ( VAR_1 * ( VAR_2 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg > > > INT_1 ) & INT_2 ; )  return ( arg > > > INT_1 ) & INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char ) TYPE char ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ; )  return ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Exception ) TYPE java.lang.Exception ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME rr ) NAME rr ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , e ) )  METHOD_2 ( VAR_1 , e ) (  rr . METHOD_3 ( VAR_2 , null ) )  rr . METHOD_3 ( VAR_2 , null ) (  METHOD_4 ( rr ) )  METHOD_4 ( rr ) (  rr . METHOD_5 ( ) )  rr . METHOD_5 ( ) (  METHOD_6 ( ) )  METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_3 ( VAR_1 , VAR_2 , ( ( TYPE_4 ) ( VAR_3 . METHOD_2 ( ) ) ) ) ; )  return new TYPE_3 ( VAR_1 , VAR_2 , ( ( TYPE_4 ) ( VAR_3 . METHOD_2 ( ) ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( ) ) INIT = VAR_3 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_2 instanceof TYPE_3 ) COND VAR_2 instanceof TYPE_3 ( THEN THEN (  return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_3 ( VAR_1 ) ; )  return ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_3 ( VAR_1 ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME locale ) NAME locale ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_2 . METHOD_3 ( locale ) )  VAR_2 . METHOD_3 ( locale ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_2 ( this ) ; )  return new TYPE_2 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME scheduler ) NAME scheduler ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ( INIT = scheduler . METHOD_3 ( ) ) INIT = scheduler . METHOD_3 ( ) ) VAR VAR (  request . METHOD_4 ( scheduler . METHOD_5 ( ) ) )  request . METHOD_4 ( scheduler . METHOD_5 ( ) ) (  return request ; )  return request ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK ( IF IF ( COND ( VAR_3 ) != null ) COND ( VAR_3 ) != null ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_1 ) )  VAR_3 . METHOD_1 ( VAR_1 ) ) THEN THEN ( ELSE ELSE (  VAR_4 . METHOD_1 ( VAR_1 ) )  VAR_4 . METHOD_1 ( VAR_1 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ( TRY TRY ( BLOCK BLOCK (  return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_1 ( ) ) ; )  return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_1 ( ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_3 ( ) ; )  throw e . METHOD_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = true )  VAR_1 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) ( IF IF ( COND ( METHOD_3 ( ) ) == ( VAR_1 ) ) COND ( METHOD_3 ( ) ) == ( VAR_1 ) ( THEN THEN (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) (  METHOD_5 ( VAR_3 ) )  METHOD_5 ( VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 . METHOD_1 ( VAR_3 class ) ) INIT = VAR_1 . METHOD_1 ( VAR_3 class ) ) VAR VAR (  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME node ) NAME node ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME sb ) NAME sb ( INIT = new java.lang.StringBuilder ( INT_1 ) ) INIT = new java.lang.StringBuilder ( INT_1 ) ) VAR VAR (  TYPE_2 . append ( sb , node , 0 ) )  TYPE_2 . append ( sb , node , 0 ) (  return sb . toString ( ) ; )  return sb . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_1 = false )  VAR_1 = false (  VAR_2 . METHOD_2 ( this ) )  VAR_2 . METHOD_2 ( this ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME length ) NAME length ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = true ) INIT = true ) VAR VAR ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return ( count ) > > > 1 ; )  return ( count ) > > > 1 ; ) THEN THEN ( ELSE ELSE (  return count ; )  return count ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) )  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , type , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME version ) NAME version ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( version [ 0 ] ) == 4 ; )  return ( version [ 0 ] ) == 4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return value ; )  return value ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( null ) )  TYPE_2 . METHOD_2 ( null ) (  TYPE_2 . METHOD_2 ( VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME x ) NAME x ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME set ) NAME set ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME value ) NAME value ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND value == 0 ) COND value == 0 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_3 ) != value ) COND ( VAR_3 ) != value ( THEN THEN (  VAR_4 = new TYPE_2 ( value ) )  VAR_4 = new TYPE_2 ( value ) ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , null , VAR_3 , VAR_4 ) )  new TYPE_1 ( METHOD_2 ( ) , VAR_1 , VAR_2 , null , VAR_3 , VAR_4 ) (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME VAR_5 ) NAME VAR_5 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1> ) RETURN java.util.Set<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<TYPE_1> ) TYPE java.util.Set<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR (  return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_2 ( ) ) ; )  return VAR_1 != null ? VAR_1 : ( VAR_2 = new TYPE_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null ) )  METHOD_2 ( VAR_1 , VAR_2 , null ) (  METHOD_3 ( VAR_3 , null ) )  METHOD_3 ( VAR_3 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME parent ) NAME parent ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = parent )  this . VAR_1 = parent ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<?> ) TYPE TYPE_1<?> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_1 ) )  TYPE_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( ) ; )  return VAR_2 . METHOD_2 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( STRING_1 ) ; )  return METHOD_3 ( STRING_1 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) )  VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) (  VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) (  VAR_4 = null )  VAR_4 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( true ) )  METHOD_1 ( true ) (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) )  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( null , null , VAR_1 , false ) )  TYPE_1 . METHOD_2 ( null , null , VAR_1 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = VAR_1 )  this . VAR_1 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( 2 ) ) INIT = Main . METHOD_3 ( 2 ) ) VAR VAR (  return VAR_1 < < VAR_2 ; )  return VAR_1 < < VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( TYPE_2 . getName ( ) , TYPE_3 . toString ( ) ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( TYPE_2 . getName ( ) , TYPE_3 . toString ( ) ) . METHOD_3 ( VAR_2 ) . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != 0 ) COND ( VAR_1 ) != 0 ( THEN THEN (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  TYPE_1 . METHOD_2 ( VAR_1 ) )  TYPE_1 . METHOD_2 ( VAR_1 ) (  VAR_1 = 0 )  VAR_1 = 0 ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( ) ) INIT = new TYPE_1 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 != null ) COND VAR_3 != null ( THEN THEN (  VAR_2 . set ( VAR_3 ) )  VAR_2 . set ( VAR_3 ) ) THEN THEN ) IF IF (  return VAR_4 . METHOD_3 ( VAR_2 ) ; )  return VAR_4 . METHOD_3 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_2 . METHOD_1 ( test , VAR_1 , TYPE_2 . METHOD_2 ( test , VAR_1 ) ) )  TYPE_2 . METHOD_1 ( test , VAR_1 , TYPE_2 . METHOD_2 ( test , VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected static ) MODIFIER protected static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 ) )  TYPE_1 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  TYPE_3 . w ( VAR_2 . TAG , STRING_1 ) )  TYPE_3 . w ( VAR_2 . TAG , STRING_1 ) (  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) )  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = METHOD_2 ( VAR_1 ) ) INIT = METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 != null ) COND VAR_2 != null ( THEN THEN (  VAR_3 . METHOD_1 ( VAR_2 ) )  VAR_3 . METHOD_1 ( VAR_2 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) INIT = METHOD_2 ( VAR_2 , VAR_3 ) ) VAR VAR ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_3 ( VAR_6 ) ) INIT = VAR_5 . METHOD_3 ( VAR_6 ) ) VAR VAR (  assertNotNull ( VAR_4 ) )  assertNotNull ( VAR_4 ) (  assertEquals ( 2 , VAR_4 . length ) )  assertEquals ( 2 , VAR_4 . length ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , VAR_2 ) ) )  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( this . VAR_1 , this . VAR_1 , VAR_2 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  callback . error ( VAR_1 , VAR_2 ) )  callback . error ( VAR_1 , VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  METHOD_2 ( uid , VAR_3 ) )  METHOD_2 ( uid , VAR_3 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_1 ) ) )  VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_3 ( VAR_1 ) ) (  TYPE_4 . METHOD_4 ( VAR_3 ) )  TYPE_4 . METHOD_4 ( VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . get ( ) ) INIT = VAR_1 . get ( ) ) VAR VAR (  return r != null ? r . METHOD_2 ( ) : STRING_1 ; )  return r != null ? r . METHOD_2 ( ) : STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<android.content.Intent> ) RETURN java.util.List<android.content.Intent> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<android.content.Intent> ) TYPE java.util.List<android.content.Intent> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR (  VAR_2 = TYPE_1 . METHOD_2 ( ) )  VAR_2 = TYPE_1 . METHOD_2 ( ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( true ) )  VAR_1 . METHOD_2 ( true ) (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) (  VAR_3 = TYPE_1 . METHOD_4 ( ) )  VAR_3 = TYPE_1 . METHOD_4 ( ) (  ( VAR_4 ) ++ )  ( VAR_4 ) ++ (  VAR_5 = false )  VAR_5 = false (  VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME listener ) NAME listener ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( context , listener , VAR_1 ) ) INIT = new TYPE_1 ( context , listener , VAR_1 ) ) VAR VAR (  VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_2 ( ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private native ) MODIFIER private native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME status ) NAME status ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME test ) NAME test ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME e ) NAME e ) VAR VAR ( VAR VAR ( TYPE int[] ) TYPE int[] ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = 0 )  VAR_2 = 0 (  VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_2 ( ) (  VAR_4 . METHOD_3 ( ) )  VAR_4 . METHOD_3 ( ) (  VAR_3 . METHOD_4 ( ) )  VAR_3 . METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE byte ) TYPE byte ( NAME in ) NAME in ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( in ) )  VAR_1 . METHOD_1 ( in ) (  VAR_2 . METHOD_1 ( in ) )  VAR_2 . METHOD_1 ( in ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) (  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( null , null ) ; )  return TYPE_1 . METHOD_1 ( null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  return super . METHOD_1 ( ) ; )  return super . METHOD_1 ( ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( BLOCK BLOCK (  throw new TYPE_2 ( e.toString ( ) ) ; )  throw new TYPE_2 ( e.toString ( ) ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  assertTrue ( TYPE_1 . METHOD_2 ( VAR_1 ) ) )  assertTrue ( TYPE_1 . METHOD_2 ( VAR_1 ) ) (  assertFalse ( TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) )  assertFalse ( TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE short ) TYPE short ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( ( int ) ( ( long ) ( value ) ) ) ; )  return ( ( int ) ( ( long ) ( value ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_2 ( ( STRING_1 + ( this ) ) ) ; )  throw new TYPE_2 ( ( STRING_1 + ( this ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( TYPE_1 . METHOD_2 ( ) ) < ( VAR_3 ) ) COND ( TYPE_1 . METHOD_2 ( ) ) < ( VAR_3 ) ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( TYPE_1 , VAR_1 , VAR_2 , STRING_1 ) )  METHOD_3 ( TYPE_1 , VAR_1 , VAR_2 , STRING_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  new TYPE_1 ( ) . METHOD_2 ( ) )  new TYPE_1 ( ) . METHOD_2 ( ) (  VAR_1 = true )  VAR_1 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final synchronized ) MODIFIER private final synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  VAR_2 . METHOD_2 ( ( ( VAR_3 ) == 1 ) ) )  VAR_2 . METHOD_2 ( ( ( VAR_3 ) == 1 ) ) (  VAR_1 = false )  VAR_1 = false ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME data ) NAME data ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ) VAR VAR (  org.junit.Assert.assertEquals ( VAR_7 , TYPE_4 . METHOD_1 ( VAR_8 , VAR_2 , VAR_9 ) ) )  org.junit.Assert.assertEquals ( VAR_7 , TYPE_4 . METHOD_1 ( VAR_8 , VAR_2 , VAR_9 ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME method ) NAME method ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( VAR_1 , VAR_2 ) ) COND METHOD_2 ( VAR_1 , VAR_2 ) ( THEN THEN (  VAR_2 . METHOD_3 ( VAR_1 , method , VAR_3 ) )  VAR_2 . METHOD_3 ( VAR_1 , method , VAR_3 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME options ) NAME options ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 (  return new TYPE_1 ( options ) ; )  return new TYPE_1 ( options ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  log ( ( STRING_1 + ( this ) ) ) )  log ( ( STRING_1 + ( this ) ) ) ) THEN THEN ) IF IF (  VAR_2 . METHOD_2 ( this ) )  VAR_2 . METHOD_2 ( this ) (  VAR_3 . METHOD_3 ( this ) )  VAR_3 . METHOD_3 ( this ) (  METHOD_4 ( ) )  METHOD_4 ( ) (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME item ) NAME item ( IN METHOD_2 ( true , true ) ) IN METHOD_2 ( true , true ) ( BLOCK BLOCK (  item . METHOD_3 ( false ) )  item . METHOD_3 ( false ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_2 . METHOD_2 ( VAR_2 ) ) INIT = TYPE_2 . METHOD_2 ( VAR_2 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return METHOD_3 ( VAR_1 , VAR_3 . METHOD_4 ( ) ) ; )  return METHOD_3 ( VAR_1 , VAR_3 . METHOD_4 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME args ) NAME args ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME t ) NAME t ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  t . METHOD_2 ( 3 , 3 , false ) )  t . METHOD_2 ( 3 , 3 , false ) (  args.out = TYPE_3 . METHOD_3 ( args . in , t ) )  args.out = TYPE_3 . METHOD_3 ( args . in , t ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 ) INIT = VAR_2 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = null )  VAR_2 = null (  VAR_3 . METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ( FINALLY FINALLY (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME h ) NAME h ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( r , VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ; )  return VAR_1 . METHOD_2 ( r , VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ; (  METHOD_5 ( INT_1 ) )  METHOD_5 ( INT_1 ) ( LABELED LABELED ( NAME VAR_3 ) NAME VAR_3 (  VAR_4 = VAR_5 )  VAR_4 = VAR_5 ) LABELED LABELED ( VAR VAR ( TYPE TYPE_2.tree ) TYPE TYPE_2.tree ( NAME with ) NAME with ) VAR VAR (  VAR_6 = VAR_5 )  VAR_6 = VAR_5 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  VAR_1 . METHOD_3 ( null ) )  VAR_1 . METHOD_3 ( null ) (  TYPE_2 . METHOD_4 ( VAR_1 ) )  TYPE_2 . METHOD_4 ( VAR_1 ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME project ) NAME project ( IN VAR_2 . values ( ) ) IN VAR_2 . values ( ) ( BLOCK BLOCK ( IF IF ( COND project . METHOD_2 ( ) ) COND project . METHOD_2 ( ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.List<TYPE_1> ) TYPE java.util.List<TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( ) ) INIT = TYPE_2 . METHOD_2 ( ) ) VAR VAR (  assertEquals ( INT_1 , VAR_1 . size ( ) ) )  assertEquals ( INT_1 , VAR_1 . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 ) (  VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME field ) NAME field ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND field == ( VAR_2 ) ) COND field == ( VAR_2 ) ( THEN THEN (  return 1 ; )  return 1 ; ) THEN THEN ( ELSE ELSE ( IF IF ( COND field == ( VAR_3 ) ) COND field == ( VAR_3 ) ( THEN THEN (  return 7 ; )  return 7 ; ) THEN THEN ) IF IF ) ELSE ELSE ) IF IF (  return - 1 ; )  return - 1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 ) )  TYPE_1 . METHOD_2 ( STRING_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.IllegalArgumentException ) TYPE java.lang.IllegalArgumentException ( NAME e ) NAME e ( BLOCK BLOCK (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE java.io.File ) TYPE java.io.File ( NAME target ) NAME target ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( target . METHOD_2 ( ) ) == false ) COND ( target . METHOD_2 ( ) ) == false ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 . METHOD_3 ( VAR_6 , VAR_3 ) ) )  VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 . METHOD_3 ( VAR_6 , VAR_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( VAR_1 , true , false ) )  METHOD_3 ( VAR_1 , true , false ) (  status = VAR_2 )  status = VAR_2 (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_2 . METHOD_2 ( VAR_1 ) ) || ( VAR_1 == ( VAR_3 ) ) ; )  return ( VAR_2 . METHOD_2 ( VAR_1 ) ) || ( VAR_1 == ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE float ) TYPE float ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a / b )  c = a / b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return ( ( VAR_1 ) == null ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ; )  return ( ( VAR_1 ) == null ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( this ) )  VAR_1 . METHOD_2 ( this ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME type ) NAME type ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( VAR_4 , 16 ) ) ) + STRING_2 ) ) )  java.lang.System.out.println ( ( ( STRING_1 + ( TYPE_1 . toString ( VAR_4 , 16 ) ) ) + STRING_2 ) ) ) THEN THEN ) IF IF (  this . VAR_5 = true )  this . VAR_5 = true ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ( INIT = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) INIT = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) VAR VAR (  return context . METHOD_1 ( ) ; )  return context . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ) THEN THEN ) IF IF ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  return VAR_3 . METHOD_1 ( ) ; )  return VAR_3 . METHOD_1 ( ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( STRING_2 ) ; )  return METHOD_3 ( STRING_2 ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME text ) NAME text ( INIT = java.lang.String.format ( VAR_1 , args ) ) INIT = java.lang.String.format ( VAR_1 , args ) ) VAR VAR (  VAR_2 . METHOD_1 ( text ) )  VAR_2 . METHOD_1 ( text ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( a . toString ( ) ) + STRING_1 ) + ( b . toString ( ) ) ; )  return ( ( a . toString ( ) ) + STRING_1 ) + ( b . toString ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME to ) NAME to ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = to )  this . VAR_1 = to ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME info ) NAME info ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( info . getName ( ) , new java.io.File ( info . METHOD_2 ( ) ) , info . METHOD_3 ( ) ) ; )  return METHOD_1 ( info . getName ( ) , new java.io.File ( info . METHOD_2 ( ) ) , info . METHOD_3 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return this . METHOD_2 ( ) ; )  return this . METHOD_2 ( ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ) THEN THEN ( ELSE ELSE (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( VAR_1 , count ) ; )  return METHOD_1 ( VAR_1 , count ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( STRING_1 , new java.lang.String [ 0 ] ) )  new TYPE_1 ( STRING_1 , new java.lang.String [ 0 ] ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2<TYPE_3> ) TYPE TYPE_2<TYPE_3> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  METHOD_2 ( VAR_2 , VAR_3 ) )  METHOD_2 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER native ) MODIFIER native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME id ) NAME id ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  new TYPE_1 ( ( ( java.util.List ) ( null ) ) ) )  new TYPE_1 ( ( ( java.util.List ) ( null ) ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE float ) TYPE float ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a * b )  c = a * b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 . METHOD_2 ( ) ) != null ) COND ( VAR_1 . METHOD_2 ( ) ) != null ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ( IF IF ( COND ( VAR_1 . METHOD_3 ( ) ) == false ) COND ( VAR_1 . METHOD_3 ( ) ) == false ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return VAR_4 ; )  return VAR_4 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ( IF IF ( COND ( VAR_1 ) == ( VAR_2 ) ) COND ( VAR_1 ) == ( VAR_2 ) ( THEN THEN (  android.util.Log . i ( VAR_3 . TAG , STRING_2 ) )  android.util.Log . i ( VAR_3 . TAG , STRING_2 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( true ) )  METHOD_4 ( true ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE TYPE_2<?extendsTYPE_3> ) TYPE TYPE_2<?extendsTYPE_3> ( NAME values ) NAME values ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = false ) INIT = false ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME value ) NAME value ( IN values ) IN values ( BLOCK BLOCK (  VAR_1 |= METHOD_2 ( key , value ) )  VAR_1 |= METHOD_2 ( key , value ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  VAR_2 = VAR_3 )  VAR_2 = VAR_3 ) THEN THEN ) IF IF (  TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_4 , VAR_2 ) (  VAR_5 = VAR_1 )  VAR_5 = VAR_1 (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME a ) NAME a ( INIT = null ) INIT = null ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 ( a ) ) INIT = new TYPE_1 ( a ) ) VAR VAR (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  msg ( VAR_1 , VAR_2 , true , true ) )  msg ( VAR_1 , VAR_2 , true , true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long[] ) TYPE long[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , null , VAR_2 , null ) )  METHOD_1 ( VAR_1 , null , VAR_2 , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_4 ) COND VAR_4 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , new TYPE_1 ( ) . getName ( ) ) )  assertEquals ( STRING_1 , new TYPE_1 ( ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = INT_1 ) INIT = INT_1 ) VAR VAR (  Main . assertEquals ( INT_2 , Main . METHOD_2 ( VAR_1 ) ) )  Main . assertEquals ( INT_2 , Main . METHOD_2 ( VAR_1 ) ) (  Main . assertEquals ( INT_3 , Main . METHOD_3 ( VAR_1 ) ) )  Main . assertEquals ( INT_3 , Main . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ) COND ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_2 ( ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  assertNotNull ( VAR_1 ) )  assertNotNull ( VAR_1 ) ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_3 ( null , null , null ) )  VAR_1 . METHOD_3 ( null , null , null ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 = url )  this . VAR_1 = url ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Integer[] ) TYPE java.lang.Integer[] ( NAME a ) NAME a ( INIT = null ) INIT = null ) VAR VAR ( VAR VAR ( TYPE TYPE_1<java.lang.Integer> ) TYPE TYPE_1<java.lang.Integer> ( NAME VAR_1 ) NAME VAR_1 ( INIT = new TYPE_1 < java.lang.Integer > ( a ) ) INIT = new TYPE_1 < java.lang.Integer > ( a ) ) VAR VAR (  METHOD_2 ( ) )  METHOD_2 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_2 ) NAME VAR_2 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  super . METHOD_1 ( ) )  super . METHOD_1 ( ) (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( ) ) INIT = TYPE_1 . METHOD_2 ( ) ) VAR VAR (  assertEquals ( VAR_2 , VAR_1 ) )  assertEquals ( VAR_2 , VAR_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_1 . METHOD_3 ( VAR_1 ) ) INIT = TYPE_1 . METHOD_3 ( VAR_1 ) ) VAR VAR (  METHOD_4 ( VAR_3 , VAR_4 ) )  METHOD_4 ( VAR_3 , VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return STRING_1 ; )  return STRING_1 ; ) THEN THEN ( ELSE ELSE (  return ( ( TYPE_1 ) ( location ) ) . METHOD_1 ( ) ; )  return ( ( TYPE_1 ) ( location ) ) . METHOD_1 ( ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ) COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 ) ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return METHOD_2 ( null , VAR_1 ) . getName ( type ) ; )  return METHOD_2 ( null , VAR_1 ) . getName ( type ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_3 , ( - 2 ) , 0 ) )  VAR_2 . METHOD_2 ( VAR_3 , ( - 2 ) , 0 ) (  VAR_4 = null )  VAR_4 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  super . METHOD_1 ( VAR_1 ) )  super . METHOD_1 ( VAR_1 ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log.d ( VAR_2 , ( STRING_1 + s ) ) )  android.util.Log.d ( VAR_2 , ( STRING_1 + s ) ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  call . METHOD_2 ( true , VAR_1 ) )  call . METHOD_2 ( true , VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final ) MODIFIER private final ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return STRING_1 ; )  return STRING_1 ; ) BLOCK BLOCK ) CASE VAR_2 ( CASE VAR_3 ( BLOCK BLOCK (  return STRING_2 ; )  return STRING_2 ; ) BLOCK BLOCK ) CASE VAR_3 ( CASE VAR_4 ( BLOCK BLOCK (  return STRING_3 ; )  return STRING_3 ; ) BLOCK BLOCK ) CASE VAR_4 ( CASE VAR_5 ( BLOCK BLOCK (  return STRING_4 ; )  return STRING_4 ; ) BLOCK BLOCK ) CASE VAR_5 ( DEFAULT DEFAULT ( BLOCK BLOCK (  return java.lang.String . METHOD_2 ( VAR_1 ) ; )  return java.lang.String . METHOD_2 ( VAR_1 ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) ( FOR-EACH FOR-EACH ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME listener ) NAME listener ( IN VAR_2 ) IN VAR_2 ( BLOCK BLOCK (  listener . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  listener . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN byte[] ) RETURN byte[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 ) ) COND ! ( VAR_2 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return VAR_3 . METHOD_1 ( ) ; )  return VAR_3 . METHOD_1 ( ) ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME source ) NAME source ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_1 . METHOD_1 ( source ) )  this . VAR_1 . METHOD_1 ( source ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME provider ) NAME provider ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( provider ) )  VAR_1 . METHOD_2 ( provider ) (  VAR_2 . METHOD_3 ( provider , action ) )  VAR_2 . METHOD_3 ( provider , action ) (  VAR_3 . METHOD_2 ( 0 ) )  VAR_3 . METHOD_2 ( 0 ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) )  METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( TYPE_4 . METHOD_4 ( ) , new TYPE_5 ( ) ) ) ) )  TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( TYPE_4 . METHOD_4 ( ) , new TYPE_5 ( ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( VAR_1 . METHOD_2 ( action . METHOD_3 ( ) ) ) || ( VAR_2 . METHOD_2 ( action . METHOD_3 ( ) ) ) ; )  return ( VAR_1 . METHOD_2 ( action . METHOD_3 ( ) ) ) || ( VAR_2 . METHOD_2 ( action . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( ) , null , true , VAR_1 ) ; )  return METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( ) , null , true , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( action . equals ( TYPE_1 ) ) || ( action . equals ( TYPE_2 ) ) ; )  return ( action . equals ( TYPE_1 ) ) || ( action . equals ( TYPE_2 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME line ) NAME line ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , line , null , null ) ; )  return TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , line , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( ( ( ( ( VAR_3 ) + STRING_1 ) + name ) + VAR_4 ) ) )  VAR_2 . METHOD_2 ( ( ( ( ( VAR_3 ) + STRING_1 ) + name ) + VAR_4 ) ) (  VAR_2 . METHOD_3 ( VAR_5 , STRING_2 , STRING_3 , STRING_4 ) )  VAR_2 . METHOD_3 ( VAR_5 , STRING_2 , STRING_3 , STRING_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2[] ) TYPE TYPE_2[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME address ) NAME address ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , address ) )  VAR_1 . METHOD_2 ( VAR_2 , address ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK (  throw e . METHOD_3 ( ) ; )  throw e . METHOD_3 ( ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME session ) NAME session ( INIT = VAR_1 . METHOD_2 ( ) ) INIT = VAR_1 . METHOD_2 ( ) ) VAR VAR (  session . METHOD_3 ( VAR_2 ) )  session . METHOD_3 ( VAR_2 ) (  session . start ( ) )  session . start ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( f , f ) )  TYPE_1 . METHOD_2 ( f , f ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( mContext ) )  TYPE_1 . METHOD_2 ( mContext ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != 0 ) && ( ( VAR_2 ) != null ) ) COND ( ( VAR_1 ) != 0 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  VAR_2 . METHOD_2 ( METHOD_3 ( ) ) )  VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ) THEN THEN ) IF IF (  VAR_2 = null )  VAR_2 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ( INIT = x + y ) INIT = x + y ) VAR VAR (  return VAR_2 - x ; )  return VAR_2 - x ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = 0 ) INIT = 0 ) VAR VAR ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < ( VAR_1 . length ) ) COND i < ( VAR_1 . length ) ( UPDATE UPDATE (  ++ i )  ++ i ) UPDATE UPDATE ( BLOCK BLOCK (  result ^= VAR_1 [ i ] . METHOD_1 ( ) )  result ^= VAR_1 [ i ] . METHOD_1 ( ) ) BLOCK BLOCK ) FOR FOR (  return result ; )  return result ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ( INIT = STRING_1 ) INIT = STRING_1 ) VAR VAR (  TYPE_1 . assertEquals ( CHAR_1 , VAR_1 . METHOD_2 ( ( - 1 ) ) ) )  TYPE_1 . assertEquals ( CHAR_1 , VAR_1 . METHOD_2 ( ( - 1 ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( 0 ) )  METHOD_2 ( 0 ) (  METHOD_3 ( 0 ) )  METHOD_3 ( 0 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static native ) MODIFIER public static native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE byte[] ) TYPE byte[] ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK (  VAR_3 = VAR_1 )  VAR_3 = VAR_1 (  METHOD_2 ( VAR_3 ) )  METHOD_2 ( VAR_3 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  VAR_1 = METHOD_2 ( VAR_2 class ) )  VAR_1 = METHOD_2 ( VAR_2 class ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME method ) NAME method ( INIT = VAR_2 class . METHOD_3 ( STRING_1 , VAR_2 class ) ) INIT = VAR_2 class . METHOD_3 ( STRING_1 , VAR_2 class ) ) VAR VAR (  method . METHOD_4 ( true ) )  method . METHOD_4 ( true ) (  method . invoke ( VAR_1 , VAR_1 ) )  method . invoke ( VAR_1 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( 7 ) )  a = Main . METHOD_2 ( 7 ) (  b = Main . METHOD_2 ( 3 ) )  b = Main . METHOD_2 ( 3 ) (  c = a * b )  c = a * b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE char[] ) TYPE char[] ( NAME a ) NAME a ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( a ) )  TYPE_1 . METHOD_1 ( a ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND key . METHOD_2 ( VAR_2 ) ) COND key . METHOD_2 ( VAR_2 ) ( THEN THEN (  return VAR_3 ; )  return VAR_3 ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , true , VAR_3 ) )  VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , true , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 = VAR_1 )  VAR_2 = VAR_1 (  this . METHOD_2 ( VAR_1 ) )  this . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE Main ) TYPE Main ( NAME m ) NAME m ( INIT = new Main ( ) ) INIT = new Main ( ) ) VAR VAR (  VAR_2 = INT_1 )  VAR_2 = INT_1 (  VAR_3 = INT_2 )  VAR_3 = INT_2 ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( m . METHOD_2 ( ) ) ; )  throw new TYPE_1 ( m . METHOD_2 ( ) ) ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = msg )  VAR_1 = msg ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = ( ( TYPE_2 ) ( this ) ) ) INIT = ( ( TYPE_2 ) ( this ) ) ) VAR VAR (  VAR_3 . METHOD_1 ( msg ) )  VAR_3 . METHOD_1 ( msg ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_2 ) COND VAR_2 ( THEN THEN (  TYPE_3 . log ( STRING_1 ) )  TYPE_3 . log ( STRING_1 ) ) THEN THEN ) IF IF (  VAR_3 = TYPE_4 . METHOD_2 ( service ) )  VAR_3 = TYPE_4 . METHOD_2 ( service ) ( IF IF ( COND ( VAR_4 ) != null ) COND ( VAR_4 ) != null ( THEN THEN (  VAR_4 . METHOD_1 ( this ) )  VAR_4 . METHOD_1 ( this ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<java.lang.String> ) RETURN java.util.Set<java.lang.String> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.util.Set<java.lang.String> ) TYPE java.util.Set<java.lang.String> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND VAR_1 != null ) COND VAR_1 != null ( THEN THEN (  return VAR_1 ; )  return VAR_1 ; ) THEN THEN ) IF IF (  return TYPE_1 . METHOD_3 ( ) ; )  return TYPE_1 . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 (  VAR_2 = null )  VAR_2 = null (  VAR_3 = false )  VAR_3 = false ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  VAR_4 . METHOD_2 ( VAR_1 ) )  VAR_4 . METHOD_2 ( VAR_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) (  TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_2 ( ) (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME test ) NAME test ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.Object[] ) TYPE java.lang.Object[] ( NAME VAR_1 ) NAME VAR_1 ( INIT = new java.lang.Object [ 1 ] ) INIT = new java.lang.Object [ 1 ] ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_1 [ 0 ] ) INIT = VAR_1 [ 0 ] ) VAR VAR (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  VAR_1 [ 0 ] = VAR_2 )  VAR_1 [ 0 ] = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( STRING_1 ) ; )  return VAR_1 . METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ( INIT = VAR_1 . get ( ) ) INIT = VAR_1 . get ( ) ) VAR VAR (  return r != null ? VAR_2 : STRING_1 ; )  return r != null ? VAR_2 : STRING_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_1 ( ) ) INIT = VAR_2 . METHOD_1 ( ) ) VAR VAR (  METHOD_2 ( ( STRING_1 + VAR_1 ) ) )  METHOD_2 ( ( STRING_1 + VAR_1 ) ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final ) MODIFIER public static final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_1 ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) ; )  return new TYPE_1 ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 , args ) )  VAR_2 . METHOD_1 ( VAR_1 , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND key == null ) COND key == null ( THEN THEN (  throw new java.lang.NullPointerException ( ) ; )  throw new java.lang.NullPointerException ( ) ; ) THEN THEN ) IF IF (  METHOD_2 ( ) )  METHOD_2 ( ) (  return VAR_1 . get ( key ) ; )  return VAR_1 . get ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  ( ( TYPE_2 ) ( VAR_2 . get ( VAR_3 ) ) ) . METHOD_2 ( VAR_1 ) )  ( ( TYPE_2 ) ( VAR_2 . get ( VAR_3 ) ) ) . METHOD_2 ( VAR_1 ) (  TYPE_3 . METHOD_3 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) )  TYPE_3 . METHOD_3 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( data [ ( index > > 6 ) ] ) & ( INT_1 < < index ) ) != 0 ; )  return ( ( data [ ( index > > 6 ) ] ) & ( INT_1 < < index ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_1 = VAR_2 . METHOD_3 ( ) )  VAR_1 = VAR_2 . METHOD_3 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK ( IF IF ( COND VAR_3 . METHOD_2 ( ) ) COND VAR_3 . METHOD_2 ( ) ( THEN THEN (  METHOD_3 ( VAR_4 ) )  METHOD_3 ( VAR_4 ) (  return true ; )  return true ; ) THEN THEN ) IF IF (  break ; )  break ; ) BLOCK BLOCK ) CASE VAR_2 ) SWITCH SWITCH (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return new TYPE_1 ( context , VAR_1 , VAR_2 ) ; )  return new TYPE_1 ( context , VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private final ) MODIFIER private final ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME r ) NAME r ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( r ) ) INIT = VAR_2 . METHOD_2 ( r ) ) VAR VAR (  VAR_2 . METHOD_3 ( r ) )  VAR_2 . METHOD_3 ( r ) (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return 0 - arg ; )  return 0 - arg ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( VAR_2 ) )  VAR_1 . METHOD_1 ( VAR_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME callback ) NAME callback ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( context , VAR_1 , callback , VAR_4 , VAR_5 , null ) ; )  return METHOD_1 ( context , VAR_1 , callback , VAR_4 , VAR_5 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME source ) NAME source ( INIT = new TYPE_1 ( STRING_1 . METHOD_2 ( ) ) ) INIT = new TYPE_1 ( STRING_1 . METHOD_2 ( ) ) ) VAR VAR (  VAR_1 . METHOD_3 ( STRING_2 , VAR_2 , source ) )  VAR_1 . METHOD_3 ( STRING_2 , VAR_2 , source ) (  TYPE_2 . METHOD_4 ( source ) )  TYPE_2 . METHOD_4 ( source ) (  METHOD_5 ( FLOAT_1 ) )  METHOD_5 ( FLOAT_1 ) ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 ) . getName ( ) ) )  assertEquals ( STRING_1 , new TYPE_1 ( VAR_1 ) . getName ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( key ) )  METHOD_2 ( key ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_1 ( VAR_1 , null , VAR_2 , VAR_3 ) )  METHOD_1 ( VAR_1 , null , VAR_2 , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( STRING_1 , null ) ) INIT = new TYPE_1 ( STRING_1 , null ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  c . METHOD_2 ( null ) )  c . METHOD_2 ( null ) (  fail ( STRING_2 ) )  fail ( STRING_2 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN byte ) RETURN byte ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_1 . METHOD_2 ( VAR_4 , 0 , 1 ) ) INIT = VAR_1 . METHOD_2 ( VAR_4 , 0 , 1 ) ) VAR VAR ( IF IF ( COND VAR_3 != 1 ) COND VAR_3 != 1 ( THEN THEN (  return VAR_5 ; )  return VAR_5 ; ) THEN THEN ) IF IF (  return VAR_4 [ 0 ] ; )  return VAR_4 [ 0 ] ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return 0 + arg ; )  return 0 + arg ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) != null ) ) )  METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 ) != null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( VAR_2 ) ) INIT = TYPE_1 . METHOD_2 ( VAR_2 ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  VAR_3 . METHOD_3 ( VAR_1 , VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_1 , VAR_4 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.io.IOException ) TYPE java.io.IOException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME c ) NAME c ( INIT = new TYPE_1 ( 5 ) ) INIT = new TYPE_1 ( 5 ) ) VAR VAR (  c . METHOD_2 ( null , STRING_1 ) )  c . METHOD_2 ( null , STRING_1 ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String[] ) RETURN java.lang.String[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( ) . METHOD_3 ( ) ; )  return METHOD_2 ( ) . METHOD_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public native ) MODIFIER public native ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( ( VAR_2 ) != null ) ? VAR_2 : VAR_3 ) INIT = ( ( VAR_2 ) != null ) ? VAR_2 : VAR_3 ) VAR VAR (  return ( ( VAR_4 ) >= ( VAR_5 ) ) && VAR_1 ; )  return ( ( VAR_4 ) >= ( VAR_5 ) ) && VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 < 1 ) || ( VAR_1 > INT_1 ) ) COND ( VAR_1 < 1 ) || ( VAR_1 > INT_1 ) ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return new TYPE_1 ( VAR_2 , VAR_1 ) ; )  return new TYPE_1 ( VAR_2 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( key instanceof TYPE_2 ) ) COND ! ( key instanceof TYPE_2 ) ( THEN THEN (  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; ) THEN THEN ( ELSE ELSE (  this . key = ( ( TYPE_2 ) ( key ) ) )  this . key = ( ( TYPE_2 ) ( key ) ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static final ) MODIFIER public static final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SWITCH SWITCH ( NAME VAR_1 ) NAME VAR_1 ( CASE VAR_2 ( BLOCK BLOCK (  return new TYPE_2 ( ) ; )  return new TYPE_2 ( ) ; ) BLOCK BLOCK ) CASE VAR_2 ( DEFAULT DEFAULT ( BLOCK BLOCK (  return TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; )  return TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; ) BLOCK BLOCK ) DEFAULT DEFAULT ) SWITCH SWITCH ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER final ) MODIFIER final ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME offset ) NAME offset ) VAR VAR ( VAR VAR ( TYPE byte ) TYPE byte ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) )  VAR_1 . METHOD_2 ( ( offset + ( address ) ) , value ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME path ) NAME path ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = this ) INIT = this ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ( IN path . METHOD_2 ( ) ) IN path . METHOD_2 ( ) ( BLOCK BLOCK (  VAR_1 = VAR_2 . METHOD_1 ( VAR_1 , name ) )  VAR_1 = VAR_2 . METHOD_1 ( VAR_1 , name ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.renderscript.Allocation ) TYPE android.renderscript.Allocation ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( 0 , null , VAR_1 , null , VAR_2 ) )  METHOD_2 ( 0 , null , VAR_1 , null , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME start ) NAME start ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND i < ( VAR_1 ) ) COND i < ( VAR_1 ) ( UPDATE UPDATE (  i ++ )  i ++ ) UPDATE UPDATE ( BLOCK BLOCK (  VAR_2 [ i ] . start ( ) )  VAR_2 [ i ] . start ( ) ) BLOCK BLOCK ) FOR FOR (  VAR_3 . set ( VAR_4 . TRUE ) )  VAR_3 . set ( VAR_4 . TRUE ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ) RETURN java.util.Set<TYPE_1<TYPE_2,TYPE_3>> ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return new TYPE_4 ( ) ; )  return new TYPE_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( VAR_2 ) != ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; )  return ( VAR_2 ) != ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME get ) NAME get ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME n ) NAME n ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND n >= ( size ) ) COND n >= ( size ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return values [ n ] ; )  return values [ n ] ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME ex ) NAME ex ( BLOCK BLOCK (  throw new TYPE_1 ( STRING_2 ) ; )  throw new TYPE_1 ( STRING_2 ) ; ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) ( TRY TRY ( BLOCK BLOCK (  key . METHOD_3 ( VAR_1 ) )  key . METHOD_3 ( VAR_1 ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final native ) MODIFIER public final native ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME request ) NAME request ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME flags ) NAME flags ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME start ) NAME start ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_3 ) COND VAR_3 ( THEN THEN (  android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) )  android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) ) THEN THEN ) IF IF (  VAR_4 = VAR_1 )  VAR_4 = VAR_1 (  VAR_5 = new TYPE_3 ( mContext , VAR_6 , VAR_2 ) )  VAR_5 = new TYPE_3 ( mContext , VAR_6 , VAR_2 ) (  VAR_5 . start ( ) )  VAR_5 . start ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME netId ) NAME netId ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ) COND ( VAR_1 ) && ( ( VAR_2 ) != null ) ( THEN THEN (  return VAR_2 . METHOD_2 ( netId ) ; )  return VAR_2 . METHOD_2 ( netId ) ; ) THEN THEN ( ELSE ELSE (  return METHOD_3 ( ( STRING_1 + netId ) ) ; )  return METHOD_3 ( ( STRING_1 + netId ) ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) )  VAR_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME key ) NAME key ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_3 . METHOD_2 ( key . toString ( ) ) ) INIT = TYPE_3 . METHOD_2 ( key . toString ( ) ) ) VAR VAR ( IF IF ( COND VAR_2 > ( VAR_3 ) ) COND VAR_2 > ( VAR_3 ) ( THEN THEN (  VAR_3 = VAR_2 )  VAR_3 = VAR_2 ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_1 ) == null ) COND ( VAR_1 ) == null ( THEN THEN (  VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) )  VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ) THEN THEN ) IF IF (  return TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; )  return TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( VAR_2 ) ; )  return VAR_1 . METHOD_2 ( VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME service ) NAME service ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) )  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_1 ( service , VAR_1 ) ) INIT = new TYPE_1 ( service , VAR_1 ) ) VAR VAR (  VAR_2 . start ( ) )  VAR_2 . start ( ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME id ) NAME id ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . equals ( id ) ; )  return VAR_1 . equals ( id ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = method . METHOD_2 ( VAR_2 ) ) INIT = method . METHOD_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_1 ( null ) ; )  return METHOD_1 ( null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND ! ( TYPE_1 . METHOD_2 ( STRING_1 , false ) ) ) COND ! ( TYPE_1 . METHOD_2 ( STRING_1 , false ) ) ( THEN THEN (  return true ; )  return true ; ) THEN THEN ) IF IF (  return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; )  return ( TYPE_2 . METHOD_3 ( mContext . METHOD_4 ( ) , VAR_1 , 0 ) ) != 0 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME out ) NAME out ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_2 ) )  METHOD_2 ( VAR_2 ) (  METHOD_3 ( out ) )  METHOD_3 ( out ) (  VAR_3 . METHOD_4 ( ) . run ( ) )  VAR_3 . METHOD_4 ( ) . run ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME app ) NAME app ( INIT = new TYPE_2 ( mContext ) . METHOD_2 ( ) ) INIT = new TYPE_2 ( mContext ) . METHOD_2 ( ) ) VAR VAR ( IF IF ( COND app == null ) COND app == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( this ) ; )  return VAR_1 . METHOD_2 ( this ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.io.File ) RETURN java.io.File ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME verify ) NAME verify ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return verify ( VAR_1 , null ) ; )  return verify ( VAR_1 , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME field ) NAME field ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_3 ) )  VAR_2 . METHOD_2 ( VAR_1 , field , VAR_3 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2<TYPE_1,TYPE_3> ) TYPE TYPE_2<TYPE_1,TYPE_3> ( NAME result ) NAME result ( INIT = new TYPE_2 < TYPE_1 , TYPE_3 > ( VAR_1 , TYPE_3 . TRUE ) ) INIT = new TYPE_2 < TYPE_1 , TYPE_3 > ( VAR_1 , TYPE_3 . TRUE ) ) VAR VAR (  VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , result , null ) ) )  VAR_2 . METHOD_2 ( new android.os.AsyncResult ( null , result , null ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_1 ( null ) )  METHOD_1 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , null , null , VAR_2 ) )  METHOD_2 ( VAR_1 , null , null , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return METHOD_2 ( STRING_1 ) ; )  return METHOD_2 ( STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return ( ( index == ( this . index ) ) && ( VAR_1 >= ( VAR_2 ) ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; )  return ( ( index == ( this . index ) ) && ( VAR_1 >= ( VAR_2 ) ) ) && ( VAR_1 < ( ( VAR_2 ) + ( length ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1[] ) RETURN TYPE_1[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , STRING_1 ) )  METHOD_2 ( VAR_1 , STRING_1 ) ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_3 ( device ) ) INIT = VAR_3 . METHOD_3 ( device ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_2 . METHOD_4 ( ) ; )  return VAR_2 . METHOD_4 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_2 ) NAME VAR_2 ( INIT = new android.content.Intent ( VAR_3 ) ) INIT = new android.content.Intent ( VAR_3 ) ) VAR VAR (  VAR_2 . METHOD_2 ( VAR_4 , VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_4 , VAR_1 ) (  METHOD_3 ( ) . METHOD_4 ( VAR_2 ) )  METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME value ) NAME value ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( value ) . VAR_1 . append ( value ) )  METHOD_2 ( value ) . VAR_1 . append ( value ) (  return this ; )  return this ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) INIT = VAR_3 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_2 == null ) COND VAR_2 == null ( THEN THEN (  return 0 ; )  return 0 ; ) THEN THEN ) IF IF (  return VAR_4 . METHOD_3 ( x , y ) ; )  return VAR_4 . METHOD_3 ( x , y ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( ) ( THEN THEN (  VAR_2 . METHOD_3 ( false ) )  VAR_2 . METHOD_3 ( false ) ) THEN THEN ) IF IF (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( VAR_4 , VAR_2 ) ) INIT = METHOD_2 ( VAR_4 , VAR_2 ) ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_5 ) NAME VAR_5 ( INIT = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ) INIT = ( ( TYPE_3 ) ( VAR_3 . arg ) ) ) VAR VAR (  TYPE_4 . assertFalse ( VAR_5 . METHOD_3 ( VAR_1 ) ) )  TYPE_4 . assertFalse ( VAR_5 . METHOD_3 ( VAR_1 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME e ) NAME e ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  e . METHOD_2 ( ( ( TYPE_3 ) ( null ) ) ) )  e . METHOD_2 ( ( ( TYPE_3 ) ( null ) ) ) (  METHOD_3 ( ) )  METHOD_3 ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.NullPointerException ) TYPE java.lang.NullPointerException ( NAME VAR_1 ) NAME VAR_1 ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME key ) NAME key ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 . get ( key ) ; )  return VAR_1 . get ( key ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME parent ) NAME parent ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND parent instanceof TYPE_2 ) COND parent instanceof TYPE_2 ( THEN THEN (  return true ; )  return true ; ) THEN THEN ( ELSE ELSE (  return false ; )  return false ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME action ) NAME action ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( new android.content.Intent ( action ) , null ) )  VAR_1 . METHOD_2 ( new android.content.Intent ( action ) , null ) ( SYNCHRONIZED SYNCHRONIZED (  VAR_3 )  VAR_3 ( BLOCK BLOCK (  VAR_3 . METHOD_3 ( VAR_4 ) )  VAR_3 . METHOD_3 ( VAR_4 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public synchronized ) MODIFIER public synchronized ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  VAR_2 . METHOD_1 ( ) )  VAR_2 . METHOD_1 ( ) (  VAR_1 = true )  VAR_1 = true ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_1 . METHOD_2 ( VAR_1 , true , true ) ; )  return TYPE_1 . METHOD_2 ( VAR_1 , true , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) )  TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE java.lang.RuntimeException ) TYPE java.lang.RuntimeException ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) VAR VAR (  assertNotNull ( VAR_1 ) )  assertNotNull ( VAR_1 ) (  assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) )  assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_3 ) NAME VAR_3 ( INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) INIT = VAR_4 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_5 = VAR_2 )  VAR_5 = VAR_2 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = 0 ) INIT = 0 ) VAR VAR ( FOR-EACH FOR-EACH ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( IN VAR_3 ) IN VAR_3 ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_2 . METHOD_2 ( ) ) ) COND ! ( VAR_2 . METHOD_2 ( ) ) ( THEN THEN (  VAR_1 ++ )  VAR_1 ++ ) THEN THEN ) IF IF ) BLOCK BLOCK ) FOR-EACH FOR-EACH (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( ) ; )  return service . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  status = VAR_1 )  status = VAR_1 (  state = VAR_2 )  state = VAR_2 (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( INT_1 , VAR_2 ) ) )  TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( INT_1 , VAR_2 ) ) (  return TYPE_3 . METHOD_5 ( VAR_1 , STRING_1 ) ; )  return TYPE_3 . METHOD_5 ( VAR_1 , STRING_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME type ) NAME type ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) ( VAR VAR ( TYPE java.util.HashMap<java.lang.String,TYPE_2> ) TYPE java.util.HashMap<java.lang.String,TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . get ( type ) ) INIT = VAR_2 . get ( type ) ) VAR VAR (  return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; )  return ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) )  METHOD_2 ( VAR_3 , VAR_1 , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) (  VAR_3 . METHOD_1 ( ) )  VAR_3 . METHOD_1 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME options ) NAME options ( INIT = new TYPE_2 ( ) ) INIT = new TYPE_2 ( ) ) VAR VAR (  VAR_1 = VAR_2 )  VAR_1 = VAR_2 (  return new TYPE_1 ( options ) ; )  return new TYPE_1 ( options ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE android.os.Bundle ) TYPE android.os.Bundle ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME config ) NAME config ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = STRING_1 )  VAR_1 = STRING_1 (  VAR_2 = STRING_1 )  VAR_2 = STRING_1 ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_3 ) NAME VAR_3 ( INIT = TYPE_3 . METHOD_2 ( VAR_4 class ) ) INIT = TYPE_3 . METHOD_2 ( VAR_4 class ) ) VAR VAR (  TYPE_3 . when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( VAR_5 ) )  TYPE_3 . when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER abstract ) MODIFIER abstract ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME item ) NAME item ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( STRING_1 ) )  METHOD_2 ( STRING_1 ) ( IF IF ( COND ( VAR_1 ) != null ) COND ( VAR_1 ) != null ( THEN THEN (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) ) THEN THEN ) IF IF (  VAR_3 = 0 )  VAR_3 = 0 (  VAR_4 . METHOD_4 ( ) . METHOD_5 ( false ) )  VAR_4 . METHOD_4 ( ) . METHOD_5 ( false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME METHOD_1 ) NAME METHOD_1 ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return false ; )  return false ; ) THEN THEN ) IF IF (  return service . METHOD_1 ( device , VAR_1 ) ; )  return service . METHOD_1 ( device , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME event ) NAME event ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( event . METHOD_2 ( ) . size ( ) ) > 0 ) COND ( event . METHOD_2 ( ) . size ( ) ) > 0 ( THEN THEN (  VAR_1 . METHOD_3 ( event ) )  VAR_1 . METHOD_3 ( event ) (  VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_4 ( ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) )  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) ( IF IF ( COND ( VAR_2 ) != null ) COND ( VAR_2 ) != null ( THEN THEN (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_3 ( ) (  VAR_2 = null )  VAR_2 = null (  VAR_3 = VAR_4 )  VAR_3 = VAR_4 ) THEN THEN ) IF IF (  VAR_5 = null )  VAR_5 = null ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME msg ) NAME msg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  android.util.Log . i ( VAR_2 . TAG , msg ) )  android.util.Log . i ( VAR_2 . TAG , msg ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_3 ) NAME VAR_3 ( INIT = new android.content.Intent ( VAR_4 , VAR_1 ) ) INIT = new android.content.Intent ( VAR_4 , VAR_1 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = METHOD_2 ( VAR_3 , true ) ) INIT = METHOD_2 ( VAR_3 , true ) ) VAR VAR (  assertEquals ( VAR_2 , result ) )  assertEquals ( VAR_2 , result ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg > > > INT_1 ) & INT_2 ; )  return ( arg > > > INT_1 ) & INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ( INIT = ( VAR_2 . length ( ) ) - ( VAR_3 . length ( ) ) ) INIT = ( VAR_2 . length ( ) ) - ( VAR_3 . length ( ) ) ) VAR VAR ( IF IF ( COND VAR_1 > 0 ) COND VAR_1 > 0 ( THEN THEN (  VAR_2 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_2 ( VAR_1 ) ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) )  VAR_2 = VAR_1 . METHOD_3 ( VAR_3 ) (  VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) )  VAR_4 = VAR_1 . METHOD_3 ( VAR_5 ) ( IF IF ( COND TYPE_1 . METHOD_4 ( VAR_2 ) ) COND TYPE_1 . METHOD_4 ( VAR_2 ) ( THEN THEN (  VAR_6 = true )  VAR_6 = true ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME pos ) NAME pos ) VAR VAR ( VAR VAR ( TYPE short[] ) TYPE short[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME length ) NAME length ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( METHOD_2 ( ) ) != null ) COND ( METHOD_2 ( ) ) != null ( THEN THEN (  data = data . METHOD_3 ( METHOD_2 ( ) . getName ( ) , STRING_1 ) )  data = data . METHOD_3 ( METHOD_2 ( ) . getName ( ) , STRING_1 ) ) THEN THEN ) IF IF (  return data ; )  return data ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME toString ) NAME toString ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME sb ) NAME sb ( INIT = new java.lang.StringBuilder ( ) ) INIT = new java.lang.StringBuilder ( ) ) VAR VAR (  METHOD_1 ( sb , VAR_1 , VAR_2 ) )  METHOD_1 ( sb , VAR_1 , VAR_2 ) (  METHOD_1 ( sb , VAR_3 , VAR_4 ) )  METHOD_1 ( sb , VAR_3 , VAR_4 ) (  sb.append ( METHOD_2 ( ) ) )  sb.append ( METHOD_2 ( ) ) (  return sb . toString ( ) ; )  return sb . toString ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( false ) )  METHOD_2 ( false ) (  VAR_1 . METHOD_3 ( CHAR_1 ) )  VAR_1 . METHOD_3 ( CHAR_1 ) (  VAR_1 . METHOD_3 ( name ) )  VAR_1 . METHOD_3 ( name ) (  VAR_1 . METHOD_3 ( CHAR_2 ) )  VAR_1 . METHOD_3 ( CHAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) ) COND METHOD_2 ( ) ( THEN THEN (  loge ( STRING_1 ) )  loge ( STRING_1 ) (  return STRING_2 ; )  return STRING_2 ; ) THEN THEN ( ELSE ELSE (  return VAR_1 ; )  return VAR_1 ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ( INIT = false ) INIT = false ) VAR VAR ( TRY TRY ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ( INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) INIT = TYPE_1 . METHOD_2 ( STRING_1 ) ) VAR VAR (  VAR_1 = true )  VAR_1 = true ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK (  java.lang.System.out.println ( e ) )  java.lang.System.out.println ( e ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  assertTrue ( VAR_1 ) )  assertTrue ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.util.ArrayList<java.lang.String> ) TYPE java.util.ArrayList<java.lang.String> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE java.util.ArrayList<TYPE_1> ) TYPE java.util.ArrayList<TYPE_1> ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , false ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return this . VAR_1 ; )  return this . VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.StringBuilder ) RETURN java.lang.StringBuilder ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.StringBuilder ) TYPE java.lang.StringBuilder ( NAME output ) NAME output ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR (  METHOD_3 ( output ) )  METHOD_3 ( output ) (  METHOD_4 ( output ) )  METHOD_4 ( output ) (  METHOD_5 ( output ) )  METHOD_5 ( output ) (  return output ; )  return output ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; )  return VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1<TYPE_2> ) RETURN TYPE_1<TYPE_2> ( NAME values ) NAME values ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR (  return ( VAR_1 = values ) == null ? values = new TYPE_3 ( ) : VAR_1 ; )  return ( VAR_1 = values ) == null ? values = new TYPE_3 ( ) : VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static native ) MODIFIER private static native ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = VAR_2 . METHOD_2 ( ) ) INIT = VAR_2 . METHOD_2 ( ) ) VAR VAR ( TRY TRY ( BLOCK BLOCK (  METHOD_3 ( VAR_1 , this ) )  METHOD_3 ( VAR_1 , this ) ) BLOCK BLOCK ( FINALLY FINALLY (  VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_1 ( ) (  TYPE_2 . METHOD_4 ( VAR_3 ) )  TYPE_2 . METHOD_4 ( VAR_3 ) ) FINALLY FINALLY ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  METHOD_2 ( true ) )  METHOD_2 ( true ) ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = super . METHOD_1 ( ) ) INIT = super . METHOD_1 ( ) ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_2 ) NAME VAR_2 ( INIT = new TYPE_2 ( VAR_1 ) ) INIT = new TYPE_2 ( VAR_1 ) ) VAR VAR (  VAR_3 = METHOD_3 ( ) )  VAR_3 = METHOD_3 ( ) (  return VAR_2 ; )  return VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME i ) NAME i ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ! ( VAR_1 ) ) COND ! ( VAR_1 ) ( THEN THEN (  throw new TYPE_1 ( STRING_1 ) ; )  throw new TYPE_1 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; )  return METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_2 ) ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == null ) COND VAR_1 == null ( THEN THEN (  throw new java.lang.NullPointerException ( STRING_1 ) ; )  throw new java.lang.NullPointerException ( STRING_1 ) ; ) THEN THEN ) IF IF (  return TYPE_2 . METHOD_1 ( VAR_1 , false ) ; )  return TYPE_2 . METHOD_1 ( VAR_1 , false ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_2 . METHOD_2 ( 3 ) ) INIT = TYPE_2 . METHOD_2 ( 3 ) ) VAR VAR (  VAR_1 . METHOD_3 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_2 ) (  assertEquals ( 3 , VAR_1 . size ( ) ) )  assertEquals ( 3 , VAR_1 . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_4 ) NAME VAR_4 ( INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) INIT = VAR_5 . METHOD_2 ( VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_4 == null ) COND VAR_4 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  VAR_6 = VAR_2 )  VAR_6 = VAR_2 (  VAR_7 = VAR_3 )  VAR_7 = VAR_3 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME status ) NAME status ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) ) ) INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) ) ) VAR VAR (  VAR_3 = true )  VAR_3 = true (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int[] ) RETURN int[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE com.android.jack.ir.ast.JMethod ) TYPE com.android.jack.ir.ast.JMethod ( NAME method ) NAME method ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  method )  method ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ( INIT = method . METHOD_2 ( VAR_2 ) ) INIT = method . METHOD_2 ( VAR_2 ) ) VAR VAR (  VAR_1 . METHOD_1 ( true ) )  VAR_1 . METHOD_1 ( true ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class<?>[] ) RETURN java.lang.Class<?>[] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND METHOD_2 ( ) . METHOD_3 ( ) ) COND METHOD_2 ( ) . METHOD_3 ( ) ( THEN THEN (  return METHOD_4 ( ) ; )  return METHOD_4 ( ) ; ) THEN THEN ( ELSE ELSE (  return TYPE_1 . METHOD_5 ( this ) ; )  return TYPE_1 . METHOD_5 ( this ) ; ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 = TYPE_4 . METHOD_2 ( VAR_1 ) )  VAR_1 = TYPE_4 . METHOD_2 ( VAR_1 ) (  return TYPE_5 . METHOD_1 ( VAR_1 , new TYPE_6 ( new TYPE_7 ( VAR_1 ) ) , true ) ; )  return TYPE_5 . METHOD_1 ( VAR_1 , new TYPE_6 ( new TYPE_7 ( VAR_1 ) ) , true ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME arg ) NAME arg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) == 2 ; )  return ( arg ? Main . METHOD_2 ( 0 ) : Main . METHOD_2 ( 1 ) ) == 2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER synchronized ) MODIFIER synchronized ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; )  return METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object ) RETURN java.lang.Object ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 == 0 ) COND VAR_1 == 0 ( THEN THEN (  return VAR_2 ; )  return VAR_2 ; ) THEN THEN ) IF IF ( TRY TRY ( BLOCK BLOCK (  return new TYPE_1 ( METHOD_2 ( VAR_1 ) ) ; )  return new TYPE_1 ( METHOD_2 ( VAR_1 ) ) ; ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( FOR FOR ( INIT INIT ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = 0 ) INIT = 0 ) VAR VAR ) INIT INIT ( COND VAR_2 < VAR_1 ) COND VAR_2 < VAR_1 ( UPDATE UPDATE (  ++ VAR_2 )  ++ VAR_2 ) UPDATE UPDATE ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( f , 5 ) )  TYPE_1 . METHOD_2 ( f , 5 ) ) BLOCK BLOCK ) FOR FOR ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , VAR_4 , status ) )  VAR_1 . METHOD_1 ( this , VAR_2 , VAR_3 , VAR_4 , status ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.util.Map<java.lang.String,TYPE_1> ) TYPE java.util.Map<java.lang.String,TYPE_1> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_2<java.util.Map<java.lang.String,java.lang.String>> ) TYPE TYPE_2<java.util.Map<java.lang.String,java.lang.String>> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; )  return VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK (  tree = VAR_1 . METHOD_2 ( ) )  tree = VAR_1 . METHOD_2 ( ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  METHOD_5 ( ) )  METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Class ) RETURN java.lang.Class ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME name ) NAME name ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.util.List<java.lang.Throwable> ) TYPE java.util.List<java.lang.Throwable> ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . METHOD_2 ( name , VAR_1 , VAR_3 , VAR_2 ) ; )  return TYPE_2 . METHOD_2 ( name , VAR_1 , VAR_3 , VAR_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  TYPE_2 . METHOD_2 ( VAR_2 ) )  TYPE_2 . METHOD_2 ( VAR_2 ) (  assertTrue ( VAR_1 . METHOD_3 ( ) ) )  assertTrue ( VAR_1 . METHOD_3 ( ) ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( BLOCK BLOCK (  fail ( STRING_1 ) )  fail ( STRING_1 ) ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME session ) NAME session ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_2 )  VAR_2 ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME VAR_3 ) NAME VAR_3 ( INIT = METHOD_2 ( session , VAR_1 ) ) INIT = METHOD_2 ( session , VAR_1 ) ) VAR VAR ( IF IF ( COND VAR_3 == null ) COND VAR_3 == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  METHOD_3 ( session , VAR_3 ) )  METHOD_3 ( session , VAR_3 ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN double ) RETURN double ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE double ) TYPE double ( NAME a ) NAME a ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME b ) NAME b ) VAR VAR ( VAR VAR ( TYPE double ) TYPE double ( NAME c ) NAME c ) VAR VAR (  a = Main . METHOD_2 ( FLOAT_1 ) )  a = Main . METHOD_2 ( FLOAT_1 ) (  b = Main . METHOD_2 ( FLOAT_2 ) )  b = Main . METHOD_2 ( FLOAT_2 ) (  c = a / b )  c = a / b (  return c ; )  return c ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME out ) NAME out ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  out . METHOD_2 ( VAR_1 ) )  out . METHOD_2 ( VAR_1 ) (  out . METHOD_2 ( VAR_2 ) )  out . METHOD_2 ( VAR_2 ) (  out . METHOD_2 ( VAR_3 ) )  out . METHOD_2 ( VAR_3 ) (  out . METHOD_2 ( VAR_4 ) )  out . METHOD_2 ( VAR_4 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  this )  this ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  TYPE_1 . METHOD_1 ( mContext , VAR_2 ) )  TYPE_1 . METHOD_1 ( mContext , VAR_2 ) ) THEN THEN ( ELSE ELSE (  TYPE_1 . METHOD_2 ( mContext , VAR_3 , VAR_2 ) )  TYPE_1 . METHOD_2 ( mContext , VAR_3 , VAR_2 ) ) ELSE ELSE ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1[][] ) RETURN TYPE_1[][] ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; )  return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 ) )  METHOD_2 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1[] ) TYPE TYPE_1[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( VAR_1 , VAR_2 , null , null , false ) )  METHOD_2 ( VAR_1 , VAR_2 , null , null , false ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER static ) MODIFIER static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME b ) NAME b ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME address ) NAME address ( INIT = VAR_1 ) INIT = VAR_1 ) VAR VAR ( IF IF ( COND address == 0 ) COND address == 0 ( THEN THEN (  return INT_1 ; )  return INT_1 ; ) THEN THEN ) IF IF (  return address + ( ( VAR_2 ) < < ( VAR_3 ) ) ; )  return address + ( ( VAR_2 ) < < ( VAR_3 ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN long ) RETURN long ( NAME size ) NAME size ( BLOCK BLOCK (  return VAR_1 . METHOD_1 ( ) ; )  return VAR_1 . METHOD_1 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . METHOD_4 ( true ) . METHOD_5 ( ) )  new TYPE_1 ( VAR_1 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . METHOD_4 ( true ) . METHOD_5 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME service ) NAME service ( INIT = METHOD_2 ( ) ) INIT = METHOD_2 ( ) ) VAR VAR ( IF IF ( COND service == null ) COND service == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF (  service . METHOD_1 ( device , VAR_1 , state , VAR_2 ) )  service . METHOD_1 ( device , VAR_1 , state , VAR_2 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME p ) NAME p ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return METHOD_1 ( p . x , p . y ) ; )  return METHOD_1 ( p . x , p . y ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ) )  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE android.content.Intent ) TYPE android.content.Intent ( NAME VAR_1 ) NAME VAR_1 ( INIT = new android.content.Intent ( VAR_2 , null ) ) INIT = new android.content.Intent ( VAR_2 , null ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME result ) NAME result ( INIT = METHOD_2 ( VAR_1 , true ) ) INIT = METHOD_2 ( VAR_1 , true ) ) VAR VAR (  assertEquals ( VAR_3 , result ) )  assertEquals ( VAR_3 , result ) (  METHOD_3 ( ) )  METHOD_3 ( ) (  METHOD_4 ( ) )  METHOD_4 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( ( VAR_1 ) != null ) && ( ! ( VAR_2 ) ) ) COND ( ( VAR_1 ) != null ) && ( ! ( VAR_2 ) ) ( THEN THEN ( FOR-EACH FOR-EACH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME location ) NAME location ( IN VAR_1 ) IN VAR_1 ( BLOCK BLOCK (  context . METHOD_2 ( VAR_3 , location , STRING_1 , null ) )  context . METHOD_2 ( VAR_3 , location , STRING_1 , null ) ) BLOCK BLOCK ) FOR-EACH FOR-EACH ) THEN THEN ) IF IF ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME state ) NAME state ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( TRY TRY ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( VAR_2 , state ) )  VAR_1 . METHOD_2 ( VAR_2 , state ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE android.os.RemoteException ) TYPE android.os.RemoteException ( NAME e ) NAME e ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.util.List<TYPE_1> ) RETURN java.util.List<TYPE_1> ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME pkg ) NAME pkg ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME c ) NAME c ( INIT = METHOD_2 ( pkg ) ) INIT = METHOD_2 ( pkg ) ) VAR VAR ( IF IF ( COND c == null ) COND c == null ( THEN THEN (  return null ; )  return null ; ) THEN THEN ) IF IF (  return VAR_1 ; )  return VAR_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  METHOD_2 ( ) )  METHOD_2 ( ) (  VAR_2 . METHOD_1 ( VAR_1 ) )  VAR_2 . METHOD_1 ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME log ) NAME log ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME format ) NAME format ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_1 ( format , args ) )  VAR_1 . METHOD_1 ( format , args ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return TYPE_2 . METHOD_1 ( null , null , null , null , null ) ; )  return TYPE_2 . METHOD_1 ( null , null , null , null , null ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( this ) )  METHOD_1 ( this ) (  METHOD_2 ( null ) )  METHOD_2 ( null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public abstract ) MODIFIER public abstract ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE android.os.Message ) TYPE android.os.Message ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME state ) NAME state ) VAR VAR ( VAR VAR ( TYPE android.bluetooth.BluetoothDevice ) TYPE android.bluetooth.BluetoothDevice ( NAME device ) NAME device ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return true ; )  return true ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN java.lang.String ) RETURN java.lang.String ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( VAR VAR ( TYPE int ) TYPE int ( NAME index ) NAME index ( INIT = VAR_1 . METHOD_2 ( CHAR_1 ) ) INIT = VAR_1 . METHOD_2 ( CHAR_1 ) ) VAR VAR ( IF IF ( COND index != ( - 1 ) ) COND index != ( - 1 ) ( THEN THEN (  return VAR_1 . METHOD_3 ( 0 , index ) ; )  return VAR_1 . METHOD_3 ( 0 , index ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private static ) MODIFIER private static ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1.File ) TYPE TYPE_1.File ( NAME output ) NAME output ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return TYPE_2 . equals ( output . METHOD_2 ( ) ) ; )  return TYPE_2 . equals ( output . METHOD_2 ( ) ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertEquals ( 0 , VAR_1 . METHOD_2 ( ) . size ( ) ) )  assertEquals ( 0 , VAR_1 . METHOD_2 ( ) . size ( ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER protected ) MODIFIER protected ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  return x ; )  return x ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME context ) NAME context ) VAR VAR ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE TYPE_3 ) TYPE TYPE_3 ( NAME location ) NAME location ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME data ) NAME data ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return VAR_1 != ( VAR_3 ) ; )  return VAR_1 != ( VAR_3 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == null ) COND ( VAR_2 ) == null ( THEN THEN (  return ; )  return ; ) THEN THEN ) IF IF ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED (  this . METHOD_1 ( VAR_3 , VAR_4 , VAR_5 ) )  this . METHOD_1 ( VAR_3 , VAR_4 , VAR_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME s ) NAME s ( INIT = STRING_1 + STRING_2 ) INIT = STRING_1 + STRING_2 ) VAR VAR (  VAR_1 = false )  VAR_1 = false ( TRY TRY ( BLOCK BLOCK (  TYPE_1 . METHOD_2 ( s ) )  TYPE_1 . METHOD_2 ( s ) (  fail ( ) )  fail ( ) ) BLOCK BLOCK ( CATCH CATCH ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME expected ) NAME expected ( BLOCK BLOCK ) BLOCK BLOCK ) CATCH CATCH ) TRY TRY (  assertTrue ( VAR_1 ) )  assertTrue ( VAR_1 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . test ( STRING_1 ) )  Main . test ( STRING_1 ) (  Main . test ( STRING_2 ) )  Main . test ( STRING_2 ) (  Main . test ( STRING_3 ) )  Main . test ( STRING_3 ) (  Main . test ( STRING_4 ) )  Main . test ( STRING_4 ) (  Main . test ( STRING_5 ) )  Main . test ( STRING_5 ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND ( VAR_2 ) == ( METHOD_2 ( ) ) ) COND ( VAR_2 ) == ( METHOD_2 ( ) ) ( THEN THEN (  throw new TYPE_2 ( STRING_1 ) ; )  throw new TYPE_2 ( STRING_1 ) ; ) THEN THEN ) IF IF (  return METHOD_3 ( VAR_3 , VAR_1 ) ; )  return METHOD_3 ( VAR_3 , VAR_1 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.io.File[] ) TYPE java.io.File[] ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.io.File ) TYPE java.io.File ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , null ) )  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null , null ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  METHOD_1 ( ) . METHOD_2 ( ) )  METHOD_1 ( ) . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME run ) NAME run ( BLOCK BLOCK (  TYPE_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_1 ( ) (  VAR_1 = TYPE_1 . METHOD_2 ( ) )  VAR_1 = TYPE_1 . METHOD_2 ( ) (  VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_4 ) ) )  VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( VAR_4 ) ) (  VAR_5 . METHOD_5 ( ) )  VAR_5 . METHOD_5 ( ) (  TYPE_1 . METHOD_6 ( ) )  TYPE_1 . METHOD_6 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME listener ) NAME listener ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_2 ( ) ; )  throw new TYPE_2 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER private ) MODIFIER private ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME target ) NAME target ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND target . METHOD_2 ( STRING_1 ) ) COND target . METHOD_2 ( STRING_1 ) ( THEN THEN (  return java.lang.Integer.parseInt ( target . METHOD_3 ( STRING_1 . length ( ) ) ) ; )  return java.lang.Integer.parseInt ( target . METHOD_3 ( STRING_1 . length ( ) ) ) ; ) THEN THEN ) IF IF (  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  this . VAR_2 = VAR_1 )  this . VAR_2 = VAR_1 ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public final ) MODIFIER public final ( RETURN boolean ) RETURN boolean ( NAME equals ) NAME equals ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME obj ) NAME obj ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return obj instanceof TYPE_1 ; )  return obj instanceof TYPE_1 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN float ) RETURN float ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE float ) TYPE float ( NAME x ) NAME x ) VAR VAR ( VAR VAR ( TYPE float ) TYPE float ( NAME y ) NAME y ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF ( VAR VAR ( TYPE float ) TYPE float ( NAME VAR_2 ) NAME VAR_2 ( INIT = x - y ) INIT = x - y ) VAR VAR (  return y + VAR_2 ; )  return y + VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String[] ) TYPE java.lang.String[] ( NAME args ) NAME args ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  Main . METHOD_2 ( ) )  Main . METHOD_2 ( ) (  Main . METHOD_3 ( ) )  Main . METHOD_3 ( ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME url ) NAME url ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME value ) NAME value ) VAR VAR ( VAR VAR ( TYPE TYPE_1<TYPE_2> ) TYPE TYPE_1<TYPE_2> ( NAME callback ) NAME callback ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  throw new TYPE_3 ( ) ; )  throw new TYPE_3 ( ) ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN java.lang.Object[] ) RETURN java.lang.Object[] ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE java.lang.Object ) TYPE java.lang.Object ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK ( IF IF ( COND VAR_1 instanceof java.util.List < ? > ) COND VAR_1 instanceof java.util.List < ? > ( THEN THEN (  return ( ( java.util.List < ? > ) ( VAR_1 ) ) . METHOD_2 ( ) ; )  return ( ( java.util.List < ? > ) ( VAR_1 ) ) . METHOD_2 ( ) ; ) THEN THEN ) IF IF (  return null ; )  return null ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( SYNCHRONIZED SYNCHRONIZED (  VAR_1 )  VAR_1 ( BLOCK BLOCK (  VAR_2 . METHOD_2 ( call ) )  VAR_2 . METHOD_2 ( call ) ) BLOCK BLOCK ) SYNCHRONIZED SYNCHRONIZED ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK (  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) )  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) ) (  assertTrue ( STRING_2 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_2 ) ) ) ) )  assertTrue ( STRING_2 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_2 ) ) ) ) ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN long ) RETURN long ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( VAR VAR ( TYPE long ) TYPE long ( NAME VAR_1 ) NAME VAR_1 ( INIT = Main . METHOD_2 ( INT_1 ) ) INIT = Main . METHOD_2 ( INT_1 ) ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ( INIT = Main . METHOD_3 ( 3 ) ) INIT = Main . METHOD_3 ( 3 ) ) VAR VAR (  return VAR_1 ^ VAR_2 ; )  return VAR_1 ^ VAR_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER MODIFIER ) MODIFIER MODIFIER ( RETURN TYPE_1 ) RETURN TYPE_1 ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_2 ) TYPE TYPE_2 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE java.lang.String ) TYPE java.lang.String ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE java.lang.Class<?> ) TYPE java.lang.Class<?> ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE TYPE_3<java.lang.String> ) TYPE TYPE_3<java.lang.String> ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ( VAR VAR ( TYPE TYPE_4 ) TYPE TYPE_4 ( NAME VAR_5 ) NAME VAR_5 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_6 ) NAME VAR_6 ) VAR VAR ( VAR VAR ( TYPE boolean ) TYPE boolean ( NAME VAR_7 ) NAME VAR_7 ) VAR VAR ) PARAMS PARAMS ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN boolean ) RETURN boolean ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE int ) TYPE int ( NAME slotId ) NAME slotId ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_2 ) NAME VAR_2 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_3 ) NAME VAR_3 ) VAR VAR ( VAR VAR ( TYPE int ) TYPE int ( NAME VAR_4 ) NAME VAR_4 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  return false ; )  return false ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public static ) MODIFIER public static ( RETURN int ) RETURN int ( NAME METHOD_1 ) NAME METHOD_1 ( BLOCK BLOCK ( IF IF ( COND VAR_1 ) COND VAR_1 ( THEN THEN (  throw new TYPE_1 ( ) ; )  throw new TYPE_1 ( ) ; ) THEN THEN ) IF IF (  return ( VAR_2 ) == ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; )  return ( VAR_2 ) == ( Main . METHOD_2 ( ) ) ? INT_1 : INT_2 ; ) BLOCK BLOCK ) METHOD METHOD
( METHOD METHOD ( MODIFIER public ) MODIFIER public ( RETURN void ) RETURN void ( NAME METHOD_1 ) NAME METHOD_1 ( PARAMS PARAMS ( VAR VAR ( TYPE TYPE_1 ) TYPE TYPE_1 ( NAME VAR_1 ) NAME VAR_1 ) VAR VAR ) PARAMS PARAMS ( BLOCK BLOCK (  VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_2 ( ) ) BLOCK BLOCK ) METHOD METHOD

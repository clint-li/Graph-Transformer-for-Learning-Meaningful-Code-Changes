MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE byte[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_2 , 0 , VAR_2 . length )  org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( ) . get ( STRING_2 ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME options INIT = new TYPE_1 ( ) TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < java.lang.String > ( )  VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) )  options . METHOD_5 ( VAR_2 )  options . METHOD_6 ( ( ( ( TYPE_3 . METHOD_7 ( ) ) + ( VAR_3 ) ) + ( VAR_1 . METHOD_8 ( ) ) ) )  options . METHOD_9 ( VAR_1 . METHOD_10 ( ) )  return options ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_1 . d ( VAR_2 . TAG , ( STRING_1 + VAR_1 ) ) COND VAR_3 . METHOD_2 ( )  VAR_3 . METHOD_3 ( status , VAR_4 )  VAR_3 . METHOD_3 ( status , VAR_5 )  METHOD_4 ( )
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME type COND ( VAR_1 . equals ( STRING_1 ) ) || ( VAR_1 . equals ( STRING_2 ) )  type = STRING_3 COND VAR_1 . METHOD_2 ( STRING_4 )  type = STRING_4  type = VAR_1  return type ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( this )  throw new TYPE_2 ( ) ; TYPE TYPE_3 NAME VAR_3 INIT = this . VAR_3 COND ! ( VAR_3 . METHOD_2 ( ) )  return false ; TYPE boolean NAME VAR_4 INIT = false  VAR_4 = VAR_1 . METHOD_3 ( ) COND ! VAR_4  VAR_3 . METHOD_4 ( )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( null , STRING_1 , VAR_2 . TAG , null , null , null , null , false , ( - 1 ) , false , ( - 1 ) )  verify ( VAR_3 , METHOD_3 ( 0 ) ) . METHOD_4 ( METHOD_5 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_6 ( ) , METHOD_7 ( VAR_4 class ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME config TYPE TYPE_1 NAME VAR_2 TYPE int[] NAME VAR_3 TYPE int NAME VAR_4 INIT = METHOD_2 ( VAR_1 , config , VAR_2 , VAR_3 ) COND VAR_4 == 0  return VAR_5 ;  return new TYPE_4 ( VAR_4 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 MODIFIER protected RETURN void NAME METHOD_2 BLOCK BLOCK INIT = new TYPE_1 ( VAR_2 , new TYPE_2 ( STRING_1 ) , VAR_3 , new TYPE_2 ( STRING_2 ) , VAR_4 ) { protected void METHOD_2 ( ) { } }  VAR_1 . METHOD_3 ( VAR_5 , new TYPE_2 ( STRING_3 ) , STRING_4 )  return VAR_1 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 INIT = ( VAR_1 . METHOD_2 ( ) ) + VAR_2 TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( VAR_3 ) TYPE java.lang.String NAME id INIT = ( ( STRING_1 + VAR_3 ) + STRING_2 ) + ( METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ) TYPE TYPE_1 NAME VAR_6 INIT = METHOD_6 ( id , id , METHOD_7 ( VAR_4 . METHOD_5 ( ) ) , null )  VAR_6 . METHOD_8 ( )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE boolean NAME VAR_4 INIT = ( VAR_3 == ( VAR_5 ) ) || ( ( VAR_2 & ( VAR_6 ) ) != 0 )  VAR_7 . METHOD_2 ( ( VAR_4 ? ( VAR_8 ) | ( VAR_9 ) : ( VAR_8 ) & ( ~ ( VAR_9 ) ) ) ) COND ( VAR_10 ) != null  VAR_10 . METHOD_1 ( ( VAR_2 > 0 ) )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1  return new TYPE_1 ( 1 , 2 , VAR_1 , new TYPE_2 ( ) , VAR_2 , STRING_1 , STRING_2 , VAR_3 , null , new TYPE_3 ( 1 , 2 , 3 , 4 , 5 , 6 ) ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( VAR_2 class ) ) TYPE TYPE_3 NAME VAR_3 INIT = TYPE_1 . METHOD_5 ( new TYPE_4 ( STRING_1 , STRING_2 ) , STRING_3 ) TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_6 ( VAR_3 , STRING_4 ) . METHOD_6 ( VAR_5 ) . build ( )  VAR_6 . METHOD_7 ( VAR_4 ) TYPE TYPE_5 NAME VAR_7 INIT = VAR_6 . METHOD_8 ( VAR_3 )  assertEquals ( VAR_8 , VAR_7 . METHOD_9 ( ) )
MODIFIER synchronized RETURN int NAME METHOD_1 TYPE int[] NAME VAR_1 TYPE int[] NAME src TYPE int[] NAME VAR_2 TYPE int[] NAME VAR_3 TYPE int[] NAME VAR_4  METHOD_2 ( )  return METHOD_3 ( mContext , VAR_1 , src , VAR_2 , VAR_3 , VAR_4 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( VAR_1 , false , STRING_1 ) COND ( VAR_2 . get ( VAR_1 ) ) != null  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;  VAR_2 . METHOD_5 ( VAR_1 , new java.lang.Integer ( VAR_3 ) )  super . METHOD_1 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( 1 , TYPE_1 . METHOD_1 ( 100 , INT_1 , 100 , INT_1 ) )  assertEquals ( 2 , TYPE_1 . METHOD_1 ( INT_2 , INT_3 , INT_4 , INT_5 ) )  assertEquals ( 1 , TYPE_1 . METHOD_1 ( INT_6 , INT_7 , INT_8 , INT_9 ) )  assertEquals ( 4 , TYPE_1 . METHOD_1 ( 100 , INT_10 , INT_11 , INT_12 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME location TYPE java.lang.String NAME VAR_2 TYPE java.lang.Object NAME data COND ( ( VAR_3 ) != null ) && ( VAR_4 . METHOD_2 ( this , VAR_1 , VAR_3 ) )  return ;  super . METHOD_1 ( VAR_1 , location , VAR_2 , data )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE java.lang.Object[] NAME VAR_1  assertFalse ( STRING_1 , ( ( VAR_1 . length ) == 0 ) )  TYPE_2 . METHOD_1 ( test , VAR_1 , TYPE_2 . METHOD_2 ( test , VAR_1 [ 0 ] ) )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( TYPE_1 . METHOD_2 ( VAR_2 ) )  return METHOD_3 ( VAR_1 , VAR_2 ) ;  return TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME project TYPE java.lang.String NAME name TYPE java.lang.String NAME value TYPE java.lang.String NAME text INIT = TYPE_3 . METHOD_2 ( name , value ) TYPE TYPE_4 NAME VAR_1 INIT = TYPE_3 . METHOD_3 ( project , text )  return VAR_1 . METHOD_4 ( ) . get ( 0 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( this )  throw new TYPE_2 ( ) ; TYPE TYPE_3 NAME VAR_3 INIT = this . VAR_3  VAR_3 . METHOD_2 ( ) TYPE boolean NAME VAR_4 INIT = false  VAR_4 = VAR_1 . METHOD_3 ( ) COND ! VAR_4  VAR_3 . METHOD_4 ( )  return VAR_4 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_2 ( ) ) == ( VAR_2 )  throw new TYPE_1 ( STRING_3 ) ;  return METHOD_3 ( VAR_3 , path , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME version TYPE int NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String[] NAME VAR_4  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_5 ) )  TYPE_1 . METHOD_4 ( ( ( this . VAR_4 ) == null ) )  this . VAR_4 = TYPE_3 . METHOD_5 ( VAR_4 )  VAR_6 = name
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_2 = VAR_1  VAR_3 = null COND VAR_1 != null  VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 )  VAR_4 = VAR_3 . METHOD_3 ( locale ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  VAR_5 = null
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 ) COND TYPE_2 . get ( VAR_1 ) . METHOD_3 ( STRING_2 , false ) TYPE TYPE_3 NAME VAR_2 IN VAR_3 . METHOD_4 ( )  VAR_2 . METHOD_1 ( VAR_1 )  TYPE_1 . i ( STRING_1 , STRING_3 )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ( ( VAR_1 < 0 ) || ( VAR_2 > ( count ) ) ) || ( VAR_1 > VAR_2 )  throw new TYPE_1 ( ) ;  return TYPE_2 . METHOD_1 ( this , VAR_1 , VAR_2 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE byte NAME error COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + error ) ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , error ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 . size ( ) ) TYPE java.io.File NAME VAR_3 IN VAR_1  VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_3 , true , true , null ) )  return VAR_2 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME address  METHOD_2 ( VAR_2 , STRING_1 ) TYPE java.lang.Integer NAME VAR_3 INIT = VAR_4 . METHOD_3 ( VAR_1 , address ) COND VAR_3 == null  android.util.Log.d ( VAR_5 . TAG , ( STRING_2 + address ) )  return ; COND VAR_6  android.util.Log.d ( VAR_5 . TAG , ( ( ( STRING_3 + address ) + STRING_4 ) + VAR_3 ) )  METHOD_4 ( VAR_1 , address )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_1 )  TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_2 ) . METHOD_5 ( VAR_3 )  TYPE_4 . METHOD_6 ( VAR_2 )
MODIFIER public static RETURN java.lang.String[] NAME METHOD_1  return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 , STRING_26 , STRING_27 , STRING_28 , STRING_29 , STRING_30 , STRING_31 , STRING_32 , STRING_33 , STRING_34 , VAR_1 } ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_2 NAME d INIT = METHOD_2 ( VAR_1 , name , VAR_2 ) COND d == null  return VAR_4 ;  return ( d . METHOD_3 ( ) ) == VAR_3 ? VAR_5 : VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME msg INIT = TYPE_2 . METHOD_2 ( VAR_1 )  TYPE_3 . d ( TYPE_2 . TAG , msg . toString ( ) )  assertEquals ( STRING_1 , 0 , msg . METHOD_3 ( ) )  assertEquals ( STRING_2 , 0 , msg . METHOD_4 ( ) )  assertEquals ( STRING_3 , INT_1 , msg . METHOD_5 ( ) )  assertEquals ( STRING_4 , VAR_2 , msg . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ; TYPE int NAME pos INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = METHOD_3 ( ) TYPE int NAME VAR_3 INIT = ( pos <= VAR_2 ) ? VAR_2 - pos : 0 TYPE int NAME VAR_4 INIT = pos + ( offset )  return new TYPE_3 ( VAR_5 , ( - 1 ) , 0 , VAR_3 , VAR_3 , VAR_4 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( info , VAR_3 )  METHOD_4 ( VAR_2 ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE int NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE int NAME VAR_3 INIT = ( v == null ) ? ( ( int ) ( m . METHOD_2 ( ) ) ) : ( ( int ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( session , VAR_1 ) COND VAR_4 == null  VAR_2 . METHOD_3 ( )  return ;  VAR_2 . set ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 ) COND ! ( TYPE_2 . METHOD_2 ( VAR_1 ) )  return ; TYPE TYPE_3 NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( VAR_1 )  assertEquals ( CHAR_1 , new TYPE_4 ( VAR_1 ) . METHOD_4 ( ) )  assertEquals ( STRING_2 , VAR_2 . format ( INT_1 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME path COND path . METHOD_2 ( STRING_1 ) TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_3 ( path ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_4 ( VAR_1 ) TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = VAR_4 . get ( VAR_2 ) COND VAR_3 != null TYPE java.lang.String NAME VAR_5 IN VAR_3 COND VAR_1 . METHOD_2 ( VAR_5 )  return true ;  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME METHOD_3 TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_4 ( METHOD_5 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_6 ( VAR_2 , STRING_3 )  VAR_1 . METHOD_7 ( VAR_3 )  VAR_1 . METHOD_7 ( new TYPE_2 ( 0 ) )  VAR_1 . METHOD_7 ( new TYPE_2 ( 1 ) )  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) { public void METHOD_3 ( java.util.List < TYPE_2 > VAR_1 ) { long VAR_2 = METHOD_4 ( METHOD_5 ( ) ) ; TYPE_2 VAR_3 = METHOD_6 ( VAR_2 , STRING_3 ) ; VAR_1 . METHOD_7 ( VAR_3 ) ; VAR_1 . METHOD_7 ( new TYPE_2 ( 0 ) ) ; VAR_1 . METHOD_7 ( new TYPE_2 ( 1 ) ) ; } } )
MODIFIER private RETURN boolean NAME METHOD_1  return ( ( VAR_1 ) != null ) && ( ! ( ( ( ( VAR_1 . state ) == ( VAR_2 ) ) || ( ( VAR_1 . state ) == ( VAR_3 ) ) ) || ( ( VAR_1 . state ) == ( VAR_4 ) ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = new java.io.File ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( new TYPE_2 ( VAR_1 , false ) )  TYPE_3 . METHOD_2 ( VAR_3 , METHOD_3 ( ) )  VAR_3 . METHOD_4 ( )  VAR_3 . METHOD_5 ( ) TYPE java.lang.Exception NAME e  android.util.Log.e ( VAR_4 , ( STRING_1 + ( e.getMessage ( ) ) ) )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 NAME VAR_1  return VAR_5 ;  return VAR_12 ;  return VAR_5 ; COND ( TYPE_1 . METHOD_2 ( ) ) == ( VAR_17 )  return VAR_5 ;  return VAR_12 ;  return VAR_12 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( ( ( ( VAR_1 ) != ( VAR_2 ) ) || ( ( VAR_3 ) != ( VAR_2 ) ) ) || ( ( VAR_4 ) != ( VAR_5 ) ) ) || ( ( VAR_6 ) != ( VAR_5 ) )  throw new TYPE_1 ( VAR_7 ) ;  VAR_2 = null  VAR_5 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( INT_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( INT_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , INT_3 , STRING_1 )  assertEquals ( match , result )
MODIFIER public static final RETURN TYPE_1 NAME start TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME uid TYPE int NAME VAR_3 TYPE int[] NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE java.lang.String NAME VAR_8 TYPE java.lang.String[] NAME VAR_9  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , uid , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) ; TYPE TYPE_3 NAME ex  android.util.Log.e ( VAR_10 , STRING_1 )  throw new java.lang.RuntimeException ( STRING_1 , ex ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME item  TYPE_2 . METHOD_2 ( this , STRING_1 , VAR_1 ) . METHOD_3 ( ) COND ( item . METHOD_4 ( ) ) == ( VAR_2 )  return true ; COND ( item . METHOD_4 ( ) ) == ( VAR_3 )  return true ;  return super . METHOD_1 ( item ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME options INIT = TYPE_1 . METHOD_2 ( args )  TYPE_2 . METHOD_3 ( VAR_1 , options . METHOD_4 ( ) ) COND options == null  return ; TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( options ) TYPE int NAME error INIT = VAR_2 . run ( )  TYPE_3 . METHOD_5 ( error )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME parent TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME path INIT = METHOD_2 ( parent , ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) ) . append ( VAR_1 . getName ( ) )  return new TYPE_1 ( path . toString ( ) , CHAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( ) TYPE TYPE_2 NAME config INIT = TYPE_2 . METHOD_3 ( VAR_2 ) MODIFIER public RETURN void NAME run COND VAR_1 instanceof TYPE_4  config . METHOD_5 ( ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_6 ( ) , true )  config . METHOD_5 ( ( ( TYPE_5 ) ( VAR_1 ) ) , true )  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 , config , new java.lang.Runnable ( ) { public void run ( ) { if ( VAR_1 instanceof TYPE_4 ) { config . METHOD_5 ( ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_6 ( ) , true ) ; } else { config . METHOD_5 ( ( ( TYPE_5 ) ( VAR_1 ) ) , true ) ; } } } )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = VAR_1 . METHOD_1 ( VAR_3 , new TYPE_2 ( ) )  return true ; TYPE TYPE_3 NAME e  TYPE_4 . METHOD_2 ( VAR_4 , ( STRING_1 + ( e . METHOD_3 ( ) ) ) , VAR_5 ) . METHOD_4 ( )  return false ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME i TYPE byte[] NAME VAR_1 TYPE int NAME offset  VAR_1 [ offset ] = ( ( byte ) ( i > > 8 ) )  VAR_1 [ ( offset + 1 ) ] = ( ( byte ) ( i ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE int NAME key TYPE TYPE_1 NAME VAR_1 TYPE int NAME i INIT = TYPE_2 . METHOD_1 ( VAR_2 , 0 , VAR_3 , key ) COND ( ( i < 0 ) || ( ( VAR_4 [ i ] ) == ( VAR_5 ) ) ) || ( ( VAR_4 [ i ] . get ( ) ) == null )  return VAR_1 ;  return ( ( TYPE_1 ) ( VAR_4 [ i ] . get ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME status COND VAR_2  android.util.Log.d ( VAR_3 . TAG , STRING_1 ) COND ( status == ( VAR_4 ) ) && ( ( VAR_5 . METHOD_2 ( VAR_6 ) ) != null )  METHOD_3 ( )  METHOD_4 ( INT_1 )  METHOD_5 ( VAR_7 )
MODIFIER private RETURN boolean NAME METHOD_1 COND ! ( options . METHOD_2 ( ) )  return false ; TYPE TYPE_1 NAME session INIT = TYPE_2 . METHOD_3 ( )  return ( ( ( VAR_1 ) == null ) || ( ! ( VAR_2 . METHOD_4 ( session . METHOD_5 ( ) ) ) ) ) || ( ! ( VAR_2 . METHOD_6 ( session . METHOD_5 ( ) ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg  METHOD_2 ( ( ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( msg.obj ) ) + STRING_3 ) + ( VAR_2 . get ( ) ) ) ) COND ( ( VAR_1 ) == ( VAR_3 ) ) && ( ( ( long ) ( msg.obj ) ) == ( VAR_2 . get ( ) ) )  METHOD_3 ( )  METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  return ;  VAR_1 = false  VAR_2 = false  TYPE_1 . METHOD_2 ( )  VAR_3 . METHOD_3 ( VAR_4 )  VAR_5 . METHOD_4 ( VAR_6 )  VAR_7 . METHOD_5 ( null )  VAR_8 . METHOD_6 ( )  METHOD_7 ( )  VAR_9 . METHOD_6 ( ) COND ( VAR_10 ) != null  VAR_10 . METHOD_8 ( true )  VAR_10 = null  METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ ] { STRING_1 } TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , null , null )  VAR_2 . METHOD_4 ( ) TYPE java.io.IOException NAME e  fail ( STRING_2 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type COND type instanceof TYPE_1 TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( type . METHOD_1 ( ) )  VAR_1 . append ( new TYPE_3 ( ( ( TYPE_1 ) ( type ) ) ) )  VAR_1 . METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 IN TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 . equals ( STRING_1 )  continue ; TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_4 ( VAR_1 )  assertNotNull ( VAR_2 . METHOD_5 ( ) ) COND VAR_2 . METHOD_6 ( ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_2 . METHOD_7 ( )  assertNotNull ( VAR_3 )  assertNotNull ( VAR_3 . METHOD_8 ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 NAME VAR_1 . METHOD_2 ( )  return false ;  return true ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return - 1 ; TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 != null  return VAR_3 . METHOD_4 ( ) ;  return - 1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  VAR_2 TYPE boolean NAME VAR_3 INIT = METHOD_2 ( ) COND ( VAR_2 . METHOD_3 ( ) ) != VAR_1  VAR_2 . METHOD_4 ( VAR_1 ) COND VAR_3 != ( METHOD_2 ( ) ) COND ! VAR_3  METHOD_5 ( )  METHOD_6 ( VAR_4 )  METHOD_7 ( VAR_5 )
MODIFIER public static RETURN java.lang.Class NAME METHOD_1 TYPE Main NAME m TYPE boolean NAME VAR_1 COND ! ( Main . METHOD_2 ( STRING_1 ) )  return VAR_2 class ;  Main . METHOD_3 ( STRING_1 ) COND VAR_1  Main . METHOD_4 ( STRING_1 ) TYPE Main NAME VAR_3 INIT = m . METHOD_5 ( ) COND VAR_1 COND ! ( Main . METHOD_6 ( STRING_1 ) ) BLOCK BLOCK  return VAR_3 == null ? null : VAR_3 . METHOD_7 ( ) ;
MODIFIER private RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_2 , VAR_5 , VAR_6 , VAR_7 , VAR_8 )  VAR_1 . METHOD_2 ( VAR_4 , 0 )  return VAR_2 . METHOD_3 ( ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  return ( ( ( ( ( VAR_1 . METHOD_2 ( ) ) && ( ( ( TYPE_2 . METHOD_3 ( VAR_1 ) ) & ( VAR_2 ) ) != 0 ) ) && ( ! ( VAR_1 . METHOD_4 ( ) ) ) ) && ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) && ( VAR_1 . METHOD_6 ( ) ) ) && ( VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = null  VAR_4 = METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_4 , VAR_3 )  return true ; TYPE java.io.IOException NAME VAR_5 BLOCK BLOCK COND VAR_4 != null  VAR_4 . METHOD_4 ( ) TYPE java.io.IOException NAME e BLOCK BLOCK  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE int NAME action COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( action ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_3 ( ) ) == ( VAR_1 )  throw new TYPE_3 ( STRING_3 ) ;  return METHOD_4 ( VAR_2 , path , action ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_1 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_2 ( STRING_2 )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_4 ( ) TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_5 ( ) TYPE byte[] NAME VAR_4 INIT = new byte [ VAR_3 ]  VAR_2 . METHOD_6 ( VAR_4 )  return new java.lang.String ( VAR_4 , VAR_5 ) ; TYPE java.io.IOException NAME VAR_6  throw new TYPE_3 ( VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) . size ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_3 ( STRING_1 )  TYPE_1 . METHOD_3 ( VAR_2 )  assertEquals ( ( VAR_1 + 1 ) , TYPE_1 . METHOD_2 ( ) . size ( ) )  TYPE_1 . METHOD_4 ( VAR_2 )  assertEquals ( VAR_1 , TYPE_1 . METHOD_2 ( ) . size ( ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE int NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name COND VAR_1 == null TYPE java.lang.String NAME msg INIT = STRING_1 + name  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , msg )  throw new TYPE_3 ( msg ) ;  return METHOD_2 ( VAR_1 , name ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event  TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) COND ( VAR_1 ) != null  VAR_2 = VAR_1  VAR_3 = VAR_4  VAR_5 = VAR_6  VAR_1 = null  VAR_4 = null  VAR_6 = null  METHOD_3 ( event ) COND ( VAR_7 ) != ( VAR_8 )  METHOD_4 ( event )  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 )  VAR_1 . METHOD_2 ( VAR_3 )  TYPE_3 . METHOD_3 ( VAR_3 , VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_2 ( null )  TYPE_3 . METHOD_5 ( VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( ) COND ( ( VAR_3 ) >= INT_1 ) && ( ( VAR_4 ) >= INT_2 )  METHOD_3 ( INT_1 , INT_2 , true , false )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  METHOD_3 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 , STRING_26 , STRING_27 )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( METHOD_4 ( STRING_1 . METHOD_5 ( STRING_2 ) ) ) . METHOD_6 ( STRING_3 ) )  server . METHOD_7 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_8 ( STRING_4 ) . METHOD_9 ( ) ) )  assertEquals ( INT_1 , VAR_1 . METHOD_10 ( ) )  VAR_1 . METHOD_11 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE TYPE_1 NAME VAR_1 MODIFIER public RETURN java.lang.String NAME METHOD_2  return packageName ; MODIFIER protected RETURN void NAME METHOD_3 BLOCK BLOCK INIT = new TYPE_1 ( VAR_2 , new TYPE_2 ( STRING_1 ) , VAR_3 , new TYPE_2 ( STRING_2 ) , VAR_4 ) { public java.lang.String METHOD_2 ( ) { return packageName ; } protected void METHOD_3 ( ) { } }  VAR_1 . METHOD_4 ( VAR_5 , new TYPE_2 ( STRING_3 ) , STRING_4 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_4 INIT = VAR_1 . METHOD_3 ( )  assertEquals ( 3 , VAR_4 . size ( ) )  assertEquals ( STRING_1 , VAR_4 . get ( STRING_2 ) )  assertEquals ( STRING_3 , VAR_4 . get ( STRING_4 ) )  assertEquals ( STRING_5 , VAR_4 . get ( STRING_6 ) )
MODIFIER private static RETURN java.util.Set<java.lang.Integer> NAME METHOD_1 TYPE java.util.List<java.util.List<java.lang.String>> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE java.util.Set<java.lang.Integer> NAME retval INIT = new TYPE_2 < java.lang.Integer > ( ) TYPE java.util.List<java.lang.String> NAME i IN VAR_1 TYPE int NAME VAR_2 INIT = java.lang.Integer . METHOD_3 ( i . get ( 2 ) ) COND VAR_2 != 0  retval . METHOD_4 ( VAR_2 )  return retval ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME v COND TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_1 ( new TYPE_1 ( v . x , v . y , VAR_2 , v . w ) )  return ;  METHOD_1 ( v . x )  METHOD_1 ( v . y )  METHOD_1 ( VAR_2 )  METHOD_1 ( v . w )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_2  TYPE_1 . d ( VAR_3 . TAG , ( ( VAR_1 ? STRING_1 : STRING_2 ) + STRING_3 ) ) COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_1  METHOD_3 ( true )
MODIFIER private RETURN long NAME METHOD_1 TYPE TYPE_1 NAME pm INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_1 INIT = pm . METHOD_4 ( TYPE_2 . METHOD_2 ( ) . METHOD_5 ( ) , 0 )  return ( VAR_2 ) ^ ( ( ( long ) ( VAR_3 ) ) < < INT_1 ) ; TYPE TYPE_1 NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME log TYPE java.lang.String NAME VAR_2 IN VAR_3 TYPE java.io.File NAME f INIT = new java.io.File ( VAR_1 , VAR_2 ) COND ! ( f . METHOD_2 ( ) )  log . METHOD_3 ( null , STRING_1 , VAR_1 . getName ( ) , VAR_2 )  return false ;  return true ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = VAR_2 . toString ( )  VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME e  VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 ) TYPE TYPE_2 NAME VAR_5  VAR_3 = null  return ;  VAR_3 . METHOD_3 ( VAR_6 . METHOD_4 ( ) )
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1  VAR_2 = new java.lang.StringBuilder ( ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_2 ( ) TYPE java.lang.String NAME result INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND ( VAR_4 ) != CHAR_1  result = result . METHOD_4 ( VAR_4 , CHAR_1 ) TYPE java.io.File NAME f IN VAR_1  METHOD_5 ( f )  return result ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_1 NAME source INIT = new TYPE_1 ( VAR_1 , ( ( VAR_3 ) | ( VAR_4 ) ) )  source . METHOD_2 ( new TYPE_4 [ ] { TYPE_5 . METHOD_3 ( ) , TYPE_6 . METHOD_3 ( ) } )  source . METHOD_4 ( VAR_2 )  return source ;
MODIFIER public synchronized RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME v INIT = ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_1 ( ) ) )  VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 )  VAR_4 = 0  return v ; TYPE TYPE_4 NAME e  throw new TYPE_5 ( ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME key  return ( VAR_2 . METHOD_2 ( VAR_1 , key ) ) == ( VAR_3 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_4 . TAG , STRING_1 , e )  return false ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_2 instanceof TYPE_3 TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( VAR_2 ) ) TYPE int NAME VAR_5 INIT = VAR_4 . METHOD_3 ( )  return TYPE_4 . METHOD_4 ( VAR_1 , VAR_5 ) ;  return STRING_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE int NAME offset TYPE int NAME length TYPE int NAME i INIT = 0 COND i < length  i ++  assertEquals ( VAR_1 . get ( i ) , VAR_2 [ ( offset + i ) ] )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE int NAME VAR_3 INIT = VAR_4 TYPE int NAME VAR_5 INIT = ( ( int ) ( TYPE_2 . METHOD_2 ( VAR_6 . METHOD_3 ( ) ) ) ) COND VAR_7 . METHOD_4 ( )  METHOD_5 ( VAR_3 , VAR_2 , VAR_5 )  METHOD_6 ( VAR_4 , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME provider TYPE TYPE_1 NAME key INIT = new TYPE_2 ( VAR_1 , STRING_1 ) TYPE TYPE_3 NAME c INIT = TYPE_3 . METHOD_2 ( STRING_2 , provider ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_5 ( VAR_3 )  c . METHOD_3 ( VAR_4 , key , VAR_2 )  fail ( ( STRING_3 + provider ) ) TYPE TYPE_6 NAME expected BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME version TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME d INIT = TYPE_5 . METHOD_2 ( version , VAR_1 , VAR_2 ) . METHOD_3 ( ) TYPE TYPE_6 NAME r INIT = new TYPE_6 ( d , VAR_3 )  VAR_4 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE long NAME VAR_5 INIT = TYPE_4 . METHOD_2 ( )  VAR_6 TYPE TYPE_5 NAME w INIT = METHOD_3 ( session , VAR_1 ) COND w != null  VAR_7 = false  VAR_8 . set ( VAR_3 )  VAR_9 . set ( VAR_4 )  VAR_10 = VAR_2  VAR_11 = true  METHOD_4 ( )  TYPE_4 . METHOD_5 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( false )  when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( false )  VAR_3 . METHOD_3 ( )  verify ( VAR_1 , METHOD_4 ( ) ) . METHOD_5 ( )  verify ( VAR_2 , METHOD_4 ( ) ) . METHOD_5 ( )  assertTrue ( VAR_3 . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME v INIT = new TYPE_1 < TYPE_2 > ( )  v . METHOD_2 ( new TYPE_2 ( 0 , 3 , VAR_1 ) )  v . METHOD_2 ( new TYPE_2 ( 3 , 4 , VAR_2 ) )  v . METHOD_2 ( new TYPE_2 ( 4 , 6 , VAR_3 ) )  v . METHOD_2 ( new TYPE_2 ( 7 , 9 , VAR_4 ) )  return v ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME format INIT = TYPE_1 . METHOD_2 ( VAR_1 , VAR_1 , VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( ) TYPE java.lang.String NAME VAR_4 INIT = format . format ( VAR_3 ) TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( STRING_1 )  assertTrue ( STRING_2 , VAR_5 . format ( VAR_3 ) . equals ( VAR_4 ) ) TYPE java.lang.Exception NAME e  fail ( ( STRING_3 + ( e.toString ( ) ) ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) && ( ( METHOD_2 ( ) . VAR_2 ) > 0 )  VAR_1 = false TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_3 . METHOD_5 ( )  METHOD_6 ( true , true )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND VAR_1 < 0  throw new TYPE_1 ( this , VAR_1 ) ; COND VAR_2 > ( count )  throw new TYPE_1 ( this , VAR_2 ) ; TYPE int NAME VAR_3 INIT = VAR_2 - VAR_1 COND VAR_3 < 0  throw new TYPE_1 ( VAR_3 ) ;  return ( VAR_1 == 0 ) && ( VAR_2 == ( count ) ) ? this : METHOD_2 ( VAR_1 , VAR_3 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 INIT = METHOD_2 ( VAR_2 , VAR_3 , true ) COND ( VAR_4 & ( VAR_5 ) ) != 0 TYPE long NAME VAR_6 INIT = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) COND VAR_6 == 0  return true ;  return false ;
MODIFIER static RETURN void NAME METHOD_1 TYPE char[][] NAME VAR_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  ++ i  VAR_1 [ i ] = new char [ INT_1 * INT_2 ] TYPE TYPE_1 NAME VAR_2  VAR_3 = true
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . METHOD_2 ( VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_4 COND VAR_5 . METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_3 , VAR_6 )  return ; COND ( VAR_5 . size ( ) ) >= ( METHOD_5 ( ) )  METHOD_4 ( VAR_3 , VAR_7 )  return ; COND ! ( VAR_8 . METHOD_6 ( VAR_1 ) )  METHOD_4 ( VAR_3 , VAR_9 )  return ;  VAR_5 . METHOD_7 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME res INIT = VAR_3 TYPE int NAME VAR_4 INIT = res . METHOD_2 ( ) . VAR_4  METHOD_3 ( res , VAR_4 , VAR_1 , VAR_2 )  TYPE_3 . METHOD_4 ( res , VAR_4 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = null TYPE java.util.List<TYPE_3> NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 ) TYPE TYPE_5 NAME VAR_4 INIT = TYPE_6 . METHOD_3 ( ) TYPE TYPE_3 NAME path IN VAR_3 TYPE TYPE_7 NAME VAR_5 INIT = VAR_4 . METHOD_4 ( ) . METHOD_5 ( path ) COND VAR_5 != null  VAR_2 = VAR_1 . METHOD_6 ( VAR_5 ) COND VAR_2 != null  break ;  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  METHOD_1 ( VAR_1 ) COND ! ( VAR_2 . METHOD_2 ( VAR_4 ) )  METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_1 , VAR_2 )  METHOD_5 ( VAR_1 , VAR_3 )
MODIFIER private static RETURN java.util.List<TYPE_1<?superTYPE_2>> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.util.ArrayList<TYPE_1<?superTYPE_2>> NAME VAR_2 INIT = new java.util.ArrayList ( VAR_1 . length ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  VAR_2 . METHOD_2 ( VAR_1 [ i ] . VAR_3 )  return VAR_2 ;
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE byte[] NAME VAR_2  return VAR_3 . METHOD_2 ( VAR_2 ) ; TYPE java.lang.Exception NAME e  throw new TYPE_2 ( ( STRING_1 + ( e . METHOD_3 ( ) ) ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 COND METHOD_2 ( ) COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 )  return true ;  return VAR_3 . METHOD_1 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_2 , e )  return false ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) )  VAR_1 . METHOD_7 ( TYPE_1 . METHOD_4 ( ) )  METHOD_8 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_9 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_10 ( ) )  METHOD_11 ( TYPE_1 . METHOD_10 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String NAME action INIT = VAR_1 . METHOD_2 ( ) COND action . equals ( VAR_2 )  METHOD_3 ( ) COND ( action . equals ( VAR_3 ) ) || ( action . equals ( VAR_4 ) )  METHOD_4 ( ) COND action . equals ( VAR_5 )  METHOD_5 ( VAR_1 ) COND action . equals ( VAR_6 )  METHOD_6 ( VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  TYPE_3 . start ( VAR_1 , new TYPE_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) , VAR_3 ) . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) ) ) . METHOD_8 ( ( ( ( VAR_2 . METHOD_9 ( ) ) & ( VAR_4 ) ) == ( VAR_4 ) ) ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) TYPE boolean NAME VAR_3 INIT = false COND METHOD_3 ( VAR_2 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_5 . METHOD_4 ( )  VAR_4 = METHOD_5 ( VAR_4 , VAR_6 )  VAR_7 = java.lang.Integer . METHOD_6 ( VAR_4 , VAR_1 )  VAR_3 = true TYPE TYPE_2 NAME e  VAR_8 = false  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 , VAR_1 ) TYPE int NAME result INIT = METHOD_3 ( VAR_2 , true )  assertEquals ( VAR_4 , result )  METHOD_4 ( )  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND ! ( METHOD_2 ( ) )  TYPE_3 . METHOD_3 ( VAR_3 )  return ;  METHOD_4 ( ) . METHOD_1 ( VAR_1 , VAR_2 , mContext . METHOD_5 ( ) , VAR_3 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ( VAR_3 ) == VAR_1  VAR_3 = ( ( TYPE_3 ) ( VAR_2 ) )  return ; TYPE TYPE_4<TYPE_5,TYPE_6> NAME VAR_4 IN VAR_5 . METHOD_2 ( ) COND ( VAR_4 . METHOD_3 ( ) ) == VAR_1  VAR_5 . METHOD_4 ( VAR_4 . METHOD_5 ( ) , ( ( TYPE_6 ) ( VAR_2 ) ) )  return ;  super . METHOD_1 ( VAR_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , INT_1 , VAR_9 , VAR_9 , VAR_9 , VAR_9 , 0 , VAR_8 )
MODIFIER MODIFIER RETURN void NAME test TYPE java.util.List<java.lang.String> NAME result INIT = new java.util.ArrayList ( TYPE_1 . METHOD_1 ( ) . VAR_1 ) COND ( result . size ( ) ) == 0  status = VAR_2  METHOD_2 ( )  status = VAR_3  METHOD_3 ( )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ;  return service . METHOD_1 ( ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME context TYPE TYPE_2 NAME VAR_1 INIT = this . VAR_2 . METHOD_2 ( context , value ) COND VAR_1 != null  return new TYPE_5 < TYPE_2 > ( VAR_1 ) ;  return new TYPE_6 ( value ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . METHOD_2 ( )  TYPE_3 . METHOD_3 ( STRING_1 ) TYPE TYPE_4 NAME VAR_2 INIT = TYPE_5 . METHOD_4 ( VAR_1 )  VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_3 , true ) . METHOD_7 ( ) COND ( VAR_4 ) != null  VAR_4 . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Throwable NAME VAR_1 TYPE java.lang.Throwable NAME VAR_2 COND VAR_2 == VAR_1  throw new java.lang.IllegalArgumentException ( STRING_1 , VAR_2 ) ; COND VAR_2 == null  throw new java.lang.NullPointerException ( STRING_2 ) ;  this TYPE java.util.List<java.lang.Throwable> NAME VAR_3 INIT = VAR_4 . get ( VAR_1 ) COND VAR_3 == null  VAR_3 = new java.util.ArrayList < > ( 1 )  VAR_4 . METHOD_2 ( VAR_1 , VAR_3 )  VAR_3 . METHOD_3 ( VAR_2 )
MODIFIER public RETURN TYPE_1 NAME get TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_1 ( ) TYPE TYPE_3 NAME type INIT = ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_2 . get ( type ) COND result == null  throw new java.lang.IllegalArgumentException ( ( STRING_2 + VAR_1 ) ) ;  return result ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . set ( 0 )  VAR_2 . METHOD_2 ( ) COND ( VAR_3 ) != 0 TYPE int[] NAME VAR_4 INIT = new int [ ] { VAR_3 }  TYPE_1 . METHOD_3 ( 1 , VAR_4 , 0 )  TYPE_1 . METHOD_4 ( ) COND ( VAR_5 ) != null  VAR_5 . METHOD_5 ( )  VAR_5 = null COND ( VAR_6 ) != null  VAR_6 . METHOD_5 ( )  VAR_6 = null
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME expected TYPE java.lang.String[] NAME result INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) )  java.lang.System.out.println ( ( STRING_1 + ( expected . length ) ) ) COND ( expected . length ) == 0  METHOD_4 ( result )  assertNotNull ( VAR_1 , result )  assertEquals ( VAR_1 , TYPE_3 . METHOD_5 ( expected ) , TYPE_3 . METHOD_5 ( result ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( STRING_2 ) )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , true ) ) . METHOD_6 ( )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 , STRING_5 , STRING_3 , STRING_4 , false ) ) . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . size ( )  TYPE_1 . METHOD_2 ( null , new java.lang.Object ( ) )  fail ( STRING_1 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK TYPE int NAME VAR_3 INIT = 0 COND VAR_3 < VAR_1  VAR_3 ++  assertEquals ( STRING_2 , VAR_2 . get ( VAR_3 ) , VAR_2 . get ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_2 . get ( VAR_3 ) ) ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 TYPE java.lang.Class<?> NAME VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_2 . METHOD_2 ( ) TYPE int NAME VAR_4 INIT = VAR_3 . METHOD_3 ( ) COND ( ! ( TYPE_2 . METHOD_4 ( VAR_4 ) ) ) && ( TYPE_2 . METHOD_5 ( VAR_4 ) )  VAR_1 . METHOD_6 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( ( ( int ) ( FLOAT_1 * INT_1 ) ) , STRING_1 )  TYPE_1 . METHOD_3 ( VAR_2 )  VAR_2 = TYPE_1 . METHOD_2 ( ) TYPE TYPE_3 NAME f INIT = new TYPE_3 ( ) COND ! ( f . METHOD_4 ( ) . equals ( VAR_2 ) )  errln ( STRING_2 )  TYPE_1 . METHOD_3 ( VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME p  VAR_2  p = VAR_2 . get ( packageName ) COND p == null  return false ; COND VAR_1  VAR_3 = TYPE_2 . METHOD_2 ( )  VAR_4 . METHOD_3 ( ) COND ! ( VAR_5 )  return false ;  VAR_6  return ( METHOD_4 ( p , false , false , true ) ) == ( VAR_7 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( )  assertTrue ( VAR_1 . METHOD_2 ( VAR_4 ) )  assertEquals ( CHAR_1 , VAR_5 )  assertEquals ( 0 , VAR_4 . number )  assertEquals ( CHAR_2 , VAR_6 [ 0 ] )  assertEquals ( CHAR_1 , VAR_6 [ 1 ] )  assertEquals ( 0 , VAR_6 [ 2 ] )  assertEquals ( 0 , VAR_6 [ 3 ] )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE long NAME VAR_3 INIT = VAR_1 . start TYPE long NAME VAR_4 INIT = VAR_2 . start COND ( VAR_3 - VAR_4 ) > 0  return 1 ; COND ( VAR_3 - VAR_4 ) < 0  return - 1 ;  return 0 ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  log ( ( STRING_1 + ( VAR_2 ? STRING_2 : STRING_3 ) ) )  VAR_3 . METHOD_2 ( VAR_4 )  VAR_3 . METHOD_3 ( VAR_4 )  VAR_3 . METHOD_4 ( VAR_4 )  VAR_5 . METHOD_1 ( )  VAR_6 . METHOD_1 ( VAR_4 )  VAR_7 . METHOD_1 ( )  VAR_8 . METHOD_1 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_3> NAME VAR_2 TYPE boolean NAME VAR_3 INIT = false TYPE boolean NAME VAR_4 INIT = false  VAR_2 . METHOD_2 ( new TYPE_4 ( context , TYPE_5 . METHOD_3 ( context , VAR_1 . METHOD_4 ( ) , TYPE_6 . METHOD_5 ( VAR_1 ) , VAR_3 , VAR_4 ) , VAR_5 , VAR_6 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME data IN VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 )  org.junit.Assert.assertEquals ( VAR_7 , TYPE_4 . METHOD_1 ( VAR_8 , VAR_2 , VAR_9 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Object NAME VAR_2 COND VAR_1 == null  throw new TYPE_2 ( STRING_1 ) ; TYPE java.util.ArrayList<TYPE_3> NAME VAR_3 INIT = METHOD_2 ( VAR_1 , null ) COND VAR_3 == null  throw METHOD_3 ( this . VAR_4 , VAR_1 ) ;  return new TYPE_1 ( VAR_3 . get ( 0 ) . METHOD_4 ( VAR_2 ) , VAR_3 . get ( 0 ) . METHOD_5 ( ) ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 . size ( ) ) TYPE java.io.File NAME VAR_3 IN VAR_1  VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_3 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true )  VAR_1 . METHOD_3 ( null )  VAR_1 . METHOD_4 ( )  VAR_1 . METHOD_5 ( ) . METHOD_6 ( )  fail ( STRING_1 ) TYPE TYPE_1 NAME expected BLOCK BLOCK
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME msg INIT = STRING_1 TYPE TYPE_2 NAME pm INIT = context . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = pm . METHOD_3 ( context . METHOD_4 ( ) , 0 )  msg = STRING_2 COND ( VAR_2 ) > 0  msg = java.lang.Integer . toString ( VAR_2 ) TYPE TYPE_4 NAME e  TYPE_5 . d ( VAR_3 . TAG , msg )  return msg ;
MODIFIER public static RETURN java.lang.String[][] NAME METHOD_1 TYPE java.lang.String[][] NAME VAR_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ COND ( VAR_1 [ i ] ) != null COND VAR_1 [ i ] [ 0 ] . METHOD_2 ( VAR_2 )  VAR_1 [ i ] = null  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE short NAME VAR_1 NAME VAR_1 COND ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ) && ( ( VAR_3 ) != null )  METHOD_4 ( VAR_4 )  break ;  super . METHOD_1 ( VAR_1 )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_3 . get ( VAR_1 ) COND VAR_4 == null  return VAR_2 ; TYPE TYPE_1 NAME VAR_5 INIT = VAR_3 . get ( VAR_2 ) COND VAR_5 != VAR_4  return VAR_2 ; TYPE int NAME VAR_6 INIT = VAR_5 . get ( VAR_1 , ( - 1 ) ) TYPE int NAME VAR_7 INIT = VAR_5 . get ( VAR_2 , ( - 1 ) )  return VAR_6 > VAR_7 ? VAR_1 : VAR_2 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME source TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME path TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE java.lang.String NAME VAR_6 TYPE TYPE_4 NAME VAR_7 TYPE TYPE_5 NAME VAR_8 TYPE java.lang.String NAME VAR_9 TYPE TYPE_6 NAME VAR_10 INIT = new TYPE_6 ( source , VAR_1 , VAR_2 , path , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 )  return VAR_10 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME VAR_1 TYPE int NAME context TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) )  assertTrue ( STRING_2 , ( 0 != ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) ) )  super . METHOD_1 ( session , VAR_1 , context , VAR_2 , fd , callback )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE java.lang.String NAME id INIT = METHOD_2 ( VAR_4 ) COND ( VAR_2 . start ) == VAR_1  VAR_5 . METHOD_3 ( id ) COND ( VAR_6 ) == VAR_1  VAR_5 . METHOD_5 ( id )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( ) TYPE java.util.List<TYPE_5> NAME VAR_5 INIT = METHOD_3 ( VAR_1 ) TYPE TYPE_5 NAME VAR_6 INIT = new TYPE_5 ( VAR_2 , new TYPE_6 ( VAR_4 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) , VAR_1 . METHOD_7 ( ) , VAR_3 )  VAR_5 . METHOD_8 ( VAR_6 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) == 0  throw new java.lang.RuntimeException ( STRING_1 ) ;  VAR_4 = VAR_2 COND VAR_1 != null TYPE int NAME ret INIT = VAR_1 . METHOD_2 ( VAR_5 . METHOD_3 ( ) ) COND ret != ( VAR_6 )  android.util.Log.e ( VAR_7 . TAG , ( STRING_2 + ret ) )  return false ;  VAR_2 . METHOD_4 ( VAR_5 . METHOD_3 ( ) )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 )  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_2 . METHOD_6 ( VAR_6 , 1 ) . METHOD_7 ( STRING_1 ) . METHOD_8 ( )  assertEquals ( VAR_7 , VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 )  METHOD_9 ( )
MODIFIER protected RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( METHOD_3 ( ) . values ( ) , TYPE_4 . METHOD_4 ( ) ) COND ! ( VAR_2 )  throw new TYPE_5 ( STRING_1 , METHOD_5 ( ) , java.lang.String . METHOD_6 ( STRING_2 , METHOD_7 ( ) ) ) ;  return VAR_1 ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME project COND TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) TYPE boolean NAME VAR_2 INIT = TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( project ) , null , true ) COND VAR_2  TYPE_6 . METHOD_6 ( VAR_1 , STRING_1 , ( STRING_2 + ( ( ( STRING_3 + STRING_4 ) + STRING_5 ) + STRING_6 ) ) )  return false ;  return true ;
MODIFIER public static RETURN void NAME assertEquals TYPE java.lang.String NAME VAR_1 TYPE java.lang.Object NAME expected TYPE java.lang.Object NAME VAR_2 COND VAR_2 == null ? expected != null : ! ( VAR_2 . equals ( expected ) )  TYPE_1 . fail ( VAR_1 , ( ( ( STRING_1 + expected ) + STRING_2 ) + VAR_2 ) )
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( VAR_2 ) != null  return VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE TYPE_2 NAME e BLOCK BLOCK  METHOD_2 ( )  VAR_3 TYPE TYPE_3[] NAME VAR_4 INIT = null COND METHOD_3 ( )  VAR_4 = TYPE_4 . METHOD_4 ( VAR_5 , VAR_1 ) COND VAR_4 != null  return VAR_4 ;  return new TYPE_5 [ 0 ] ;
MODIFIER protected RETURN boolean NAME start TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_1 ( VAR_2 )  VAR_1 . METHOD_1 ( VAR_3 )  METHOD_2 ( VAR_4 , VAR_1 ) TYPE java.lang.Exception NAME e  android.util.Log.w ( TYPE_2 . TAG , STRING_1 , e )  VAR_5 = new TYPE_3 ( this )  TYPE_2 . METHOD_3 ( this )  VAR_5 . start ( )  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE int NAME flags TYPE int NAME VAR_1  TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND ( VAR_1 & ( VAR_2 ) ) != ( VAR_3 )  TYPE_3 . METHOD_2 ( ) . METHOD_4 ( )  return os . METHOD_1 ( path , flags , VAR_1 ) ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME s TYPE java.lang.StringBuilder NAME result INIT = new java.lang.StringBuilder ( ) TYPE int NAME i INIT = 0 COND i < ( s . length ( ) )  ++ i COND i != 0  result . append ( CHAR_1 )  result . append ( TYPE_2 . METHOD_1 ( s . METHOD_2 ( i ) ) )  return result . toString ( ) ;
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 INIT = VAR_1 != null TYPE TYPE_2 NAME result INIT = METHOD_2 ( VAR_3 , VAR_2 , null ) COND VAR_3  result . METHOD_3 ( VAR_1 )  return result . METHOD_4 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 COND VAR_1 . METHOD_2 ( )  METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) COND ( ( VAR_2 . METHOD_6 ( VAR_3 ) ) || ( VAR_2 . METHOD_6 ( VAR_4 ) ) ) || ( VAR_2 . METHOD_6 ( VAR_5 ) )  VAR_2 . METHOD_7 ( )  super . METHOD_1 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.lang.Exception[] NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = VAR_2 . METHOD_2 ( VAR_1 , VAR_3 ) COND VAR_5 != null  VAR_5 . METHOD_3 ( INT_1 )  VAR_5 = new TYPE_4 ( VAR_5 ) . METHOD_4 ( VAR_6 )  return VAR_5 ; TYPE java.lang.Exception NAME e COND VAR_4 != null  VAR_4 [ 0 ] = e  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( VAR_3 ) COND VAR_2 == null  METHOD_3 ( null )  return ; TYPE TYPE_4 NAME info INIT = METHOD_4 ( x )  METHOD_3 ( new TYPE_5 ( info , METHOD_5 ( info , VAR_4 ) , VAR_2 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER private static RETURN int[] NAME METHOD_1 TYPE int[] NAME VAR_1 TYPE int NAME offset TYPE int NAME VAR_2 TYPE int NAME value TYPE int NAME VAR_3 TYPE int NAME VAR_4 INIT = VAR_2 COND ( offset + 1 ) == VAR_4  VAR_4 += VAR_3 TYPE int[] NAME VAR_5 INIT = new int [ VAR_4 ]  TYPE_1 . METHOD_2 ( VAR_1 , 0 , VAR_5 , 0 , offset )  VAR_1 = VAR_5  VAR_1 [ offset ] = value  return VAR_1 ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_2 ) == null  VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_1 ( TYPE_3 . METHOD_3 ( VAR_3 ) ) COND ( VAR_2 ) == null  VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_4 , ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) )  throw new TYPE_2 ( ) ;  return VAR_2 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 NAME VAR_1 COND ( VAR_3 ) == null  VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 )  return VAR_3 ; COND ( VAR_5 ) == null  VAR_5 = TYPE_1 . METHOD_2 ( VAR_1 )  return VAR_5 ; BLOCK BLOCK  return TYPE_1 . METHOD_1 ( ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 class )  when ( VAR_1 . METHOD_3 ( ) ) . thenReturn ( 1 )  when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( false )  when ( VAR_1 . METHOD_5 ( ) ) . thenReturn ( false )  when ( VAR_1 . METHOD_6 ( ) ) . thenReturn ( true )  when ( VAR_1 . METHOD_7 ( ) ) . thenReturn ( false )  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args COND METHOD_2 ( VAR_3 ) TYPE java.util.List<TYPE_5> NAME VAR_8 INIT = TYPE_6 . METHOD_3 ( VAR_3 , VAR_2 , args )  return new TYPE_7 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_8 ) ;  return null ;
MODIFIER private RETURN long NAME METHOD_1 TYPE android.os.AsyncResult NAME ar TYPE TYPE_1 NAME response INIT = ( ( TYPE_1 ) ( ar . result ) ) COND ( response . METHOD_2 ( ) ) < 0 COND VAR_1  log ( STRING_1 )  return VAR_2 ; COND ( response . METHOD_2 ( ) ) == ( VAR_3 ) COND VAR_1  log ( STRING_2 )  return VAR_4 ;  return ( ( long ) ( response . METHOD_2 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1  assertFalse ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_3 )  assertFalse ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_4 ( VAR_2 , VAR_4 )  assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE int NAME VAR_1 INIT = server . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( TYPE_3 . METHOD_3 ( ) , VAR_1 , true )  assertEquals ( STRING_1 , VAR_1 , VAR_2 . METHOD_4 ( ) )  VAR_2 = new TYPE_2 ( TYPE_3 . METHOD_3 ( ) , VAR_1 , false )  VAR_2 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  this COND ( ( VAR_3 ) == 0 ) && ( ! ( VAR_4 ) )  METHOD_2 ( VAR_1 , VAR_5 , VAR_2 , INT_1 , VAR_6 )  VAR_7 . METHOD_3 ( android.os.Message . METHOD_4 ( VAR_7 , 1 , this ) , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1  this COND ( VAR_2 ) == null  VAR_2 = VAR_3 . get ( VAR_4 ) COND ( VAR_2 . METHOD_2 ( VAR_1 , null , VAR_5 ) ) < 0  VAR_2 . METHOD_3 ( VAR_4 . METHOD_4 ( ) )  VAR_2 . METHOD_2 ( VAR_1 , null , VAR_5 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE short NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Exception NAME VAR_4 COND ! ( VAR_5 )  this . VAR_5 = true COND VAR_1 == ( VAR_6 )  METHOD_2 ( )  this . VAR_7 = true  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 )  VAR_8 . METHOD_4 ( ) COND VAR_1 != ( VAR_6 )  return ;  throw new java.io.IOException ( VAR_9 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME call INIT = TYPE_2 . METHOD_2 ( VAR_1 class )  TYPE_2 . when ( call . METHOD_3 ( ) ) . thenReturn ( VAR_2 )  TYPE_2 . when ( VAR_3 . METHOD_4 ( ) ) . thenReturn ( call )  TYPE_3 . assertTrue ( VAR_4 . METHOD_5 ( ) )  org.mockito.Mockito.verify ( call ) . METHOD_6 ( false , null )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context  TYPE_2 . METHOD_2 ( TYPE_3 . TAG )  TYPE_2 . METHOD_3 ( context )  TYPE_2 . METHOD_4 ( ) TYPE TYPE_4 NAME p IN VAR_1  TYPE_2 . METHOD_5 ( p )  TYPE_2 . METHOD_6 ( TYPE_3 : : METHOD_7 )  TYPE_2 . METHOD_8 ( TYPE_5 : : METHOD_9 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME target TYPE java.lang.StringBuilder NAME result INIT = new java.lang.StringBuilder ( VAR_1 . getName ( ) ) TYPE TYPE_3 NAME VAR_2 IN VAR_3 COND VAR_2 != null TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . METHOD_2 ( target ) COND ( VAR_4 != null ) && ( ( VAR_4 . length ( ) ) > 0 )  result . append ( VAR_5 )  result . append ( VAR_4 )  return result . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) TYPE java.lang.String NAME expected INIT = STRING_10 + ( STRING_11 + STRING_12 )  assertEquals ( expected , METHOD_2 ( VAR_1 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( VAR_5 )  VAR_4 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_6 , VAR_2 , VAR_3 ) )  VAR_1 . METHOD_4 ( VAR_4 , VAR_7 , VAR_8 , VAR_9 , null , null , VAR_10 , null , null )
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME format TYPE byte[] NAME VAR_2  VAR_3 COND ( VAR_4 ) == null  throw new TYPE_1 ( STRING_1 ) ;  VAR_4 . METHOD_1 ( VAR_1 , format , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_5 , ( STRING_2 + ( e.getMessage ( ) ) ) )  METHOD_2 ( VAR_1 , 0 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( INT_1 ) . METHOD_4 ( STRING_1 ) )  server . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_6 ( STRING_2 ) . METHOD_7 ( ) ) )  assertEquals ( STRING_1 , METHOD_8 ( VAR_1 . METHOD_9 ( ) , VAR_2 ) )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND STRING_1 . METHOD_2 ( VAR_1 )  return STRING_2 ; COND STRING_3 . METHOD_2 ( VAR_1 )  return STRING_4 ; COND STRING_5 . METHOD_2 ( VAR_1 )  return STRING_6 ;  throw new java.lang.IllegalArgumentException ( ( STRING_7 + VAR_1 ) ) ;
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 TYPE int NAME n INIT = 0 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 IN VAR_2 . values ( )  n += VAR_1 . size ( ) TYPE TYPE_1[] NAME VAR_3 INIT = new TYPE_1 [ n ] TYPE int NAME i INIT = 0 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 IN VAR_2 . values ( ) TYPE TYPE_1 NAME source IN VAR_1  VAR_3 [ ( i ++ ) ] = source  return VAR_3 ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 != null TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_4 ( ) COND VAR_2 != null  return VAR_2 . METHOD_5 ( ) ;  return null ;
MODIFIER MODIFIER RETURN TYPE_1<TYPE_2>.VAR_1 NAME METHOD_1 TYPE int NAME id TYPE TYPE_3<TYPE_1<TYPE_2>.VAR_1> NAME i INIT = VAR_2 . METHOD_2 ( ) COND i . METHOD_3 ( ) TYPE TYPE_1<TYPE_2>.VAR_1 NAME entry INIT = i . METHOD_4 ( ) COND ( entry . id ) == id  return entry ;  android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + id ) )  return null ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , STRING_2 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_3 , VAR_2 , 10 , 12 , INT_1 , INT_2 ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_3 ) TYPE TYPE_5 NAME VAR_5 INIT = m . METHOD_2 ( VAR_4 ) TYPE TYPE_5 NAME VAR_6 INIT = m . METHOD_2 ( VAR_4 )  METHOD_3 ( VAR_6 , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE byte[] NAME address TYPE byte NAME VAR_1 TYPE int[] NAME VAR_2 COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_6 INIT = VAR_7  new TYPE_3 ( address , VAR_1 , VAR_2 ) TYPE android.os.Message NAME msg INIT = VAR_8 . METHOD_2 ( VAR_9 )  msg.obj = VAR_6  VAR_8 . METHOD_3 ( msg )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME address TYPE java.lang.String NAME VAR_1 TYPE int NAME flags TYPE int NAME VAR_2 COND VAR_3 . equals ( VAR_1 ) COND VAR_4  log ( ( ( ( ( ( ( ( STRING_1 + address ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + flags ) + STRING_4 ) + VAR_2 ) )  VAR_5 . METHOD_2 ( VAR_6 , new TYPE_1 ( address ) )
MODIFIER private synchronized RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 . size ( ) ) ) ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  i ++  METHOD_3 ( new TYPE_2 < TYPE_3 > ( VAR_4 , null ) )
MODIFIER private static RETURN int NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE int NAME VAR_4 COND VAR_1 && ( VAR_4 == 0 )  return - 1 ; COND VAR_2 != null  VAR_2 . METHOD_2 ( VAR_4 )  VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) )  VAR_2 . METHOD_5 ( VAR_3 . METHOD_6 ( ) )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  log ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) )  log ( STRING_2 )  METHOD_3 ( )  VAR_2 . METHOD_4 ( METHOD_5 ( ) )  VAR_3 . set ( false )  ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_6 ( )
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 )  sb.append ( METHOD_1 ( ) . getName ( ) )  sb.append ( CHAR_1 )  sb.append ( TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) )  sb.append ( CHAR_2 )  sb.append ( method ) COND ( VAR_1 ) != null  sb.append ( CHAR_2 )  sb.append ( VAR_1 )  sb.append ( CHAR_3 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) TYPE TYPE_1 NAME parent INIT = VAR_3 . METHOD_4 ( ) COND ! ( parent instanceof TYPE_3 )  return ; TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_5 ( VAR_3 , VAR_5 class ) COND VAR_4 == null  return ;  METHOD_6 ( ( ( TYPE_3 ) ( parent ) ) , VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_3  java.lang.System.out.println ( java.lang.String.format ( STRING_1 , VAR_1 ) ) TYPE TYPE_4<TYPE_1,TYPE_5> NAME result INIT = TYPE_6 . METHOD_2 ( VAR_1 , VAR_2 , null )  return result . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( new TYPE_3 ( STRING_1 , STRING_2 , STRING_3 ) ) ) ) TYPE java.lang.String NAME text INIT = STRING_4 TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( text )  VAR_2 . METHOD_4 ( 1 )  assertEquals ( 1 , VAR_2 . METHOD_5 ( ) )  VAR_2 . METHOD_6 ( STRING_5 )  VAR_2 . METHOD_4 ( 1 )  assertEquals ( 0 , VAR_2 . METHOD_5 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND STRING_1 . equals ( VAR_1 )  VAR_1 = STRING_2 COND STRING_3 . equals ( VAR_1 )  VAR_1 = STRING_4 TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) COND VAR_2 == 0  return null ;  TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 )  TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_1 )  args . METHOD_2 ( STRING_2 , VAR_2 )  TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_5 ( VAR_1 , VAR_4 , false )  TYPE_4 . METHOD_6 ( VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE double NAME number TYPE TYPE_1 NAME result TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE int NAME VAR_5 COND ( VAR_6 ) == ( VAR_7 )  return METHOD_1 ( VAR_8 . METHOD_2 ( METHOD_3 ( number ) ) , result , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;  return METHOD_1 ( result , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( subId ) COND VAR_2 != null COND ! ( TYPE_2 . METHOD_3 ( mContext , VAR_1 , STRING_1 ) )  return null ;  return VAR_2 . METHOD_4 ( ) ;  loge ( ( STRING_2 + subId ) )  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE char NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME VAR_1 INIT = context . METHOD_2 ( VAR_2 class ) TYPE java.util.List<TYPE_1> NAME VAR_3  VAR_3 = VAR_1 . METHOD_3 ( ) TYPE TYPE_4 NAME e  throw TYPE_5 . METHOD_4 ( ( STRING_1 + e ) ) ; TYPE TYPE_1 NAME VAR_4 IN VAR_3 TYPE TYPE_6 NAME VAR_5 INIT = VAR_1 . METHOD_5 ( VAR_4 ) COND VAR_5 . METHOD_6 ( VAR_6 )  return VAR_4 ;  throw TYPE_5 . METHOD_4 ( STRING_2 ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_1 )  TYPE_1 . METHOD_2 ( VAR_2 , new TYPE_2 ( VAR_2 ) , VAR_3 ) TYPE TYPE_3 NAME e  return false ;  return true ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a TYPE TYPE_1 NAME b COND a != b  assertEquals ( a . METHOD_2 ( ) . METHOD_3 ( ) , b . METHOD_2 ( ) . METHOD_3 ( ) )  assertEquals ( a . METHOD_2 ( ) . METHOD_4 ( ) , b . METHOD_2 ( ) . METHOD_4 ( ) )  assertEquals ( a . METHOD_5 ( ) , b . METHOD_5 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 COND VAR_1  android.util.Log.v ( VAR_2 . TAG , STRING_1 )  METHOD_2 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( ) COND ( VAR_4 ) != null  VAR_4 . METHOD_3 ( ) COND ( VAR_5 ) != null  VAR_5 . METHOD_4 ( null )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ] TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  VAR_2 [ i ] = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) )  METHOD_4 ( ) TYPE TYPE_3 NAME VAR_4 BLOCK BLOCK
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME parent TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME path INIT = TYPE_5 . METHOD_2 ( parent , ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) ) . append ( VAR_1 . getName ( ) )  return new TYPE_1 ( path . toString ( ) , CHAR_1 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME v INIT = new TYPE_2 ( )  TYPE_3 . METHOD_2 ( v , TYPE_4 . METHOD_1 ( ) )  TYPE_3 . METHOD_2 ( v , TYPE_5 . METHOD_1 ( ) )  TYPE_3 . METHOD_2 ( v , TYPE_6 . METHOD_1 ( ) )  TYPE_3 . METHOD_2 ( v , TYPE_7 . METHOD_1 ( ) )  return v . METHOD_3 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  this COND ( ! ( METHOD_2 ( VAR_2 , VAR_1 , TYPE_2 . METHOD_3 ( ) ) ) ) || ( METHOD_4 ( ) )  return null ; TYPE TYPE_3 NAME VAR_3 INIT = METHOD_5 ( )  return ( VAR_4 ) != null ? VAR_4 . METHOD_6 ( ) : null ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME context  TYPE_2 . METHOD_2 ( VAR_1 ) COND TYPE_3 . METHOD_3 ( context )  return VAR_2 . METHOD_4 ( VAR_3 ) ;  return TYPE_3 . METHOD_5 ( context ) . METHOD_4 ( VAR_3 , 0 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME count INIT = VAR_1 . METHOD_2 ( ) . get ( ) COND count == 0 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( getElement ( ) ) COND VAR_2 != null  count = VAR_2 . get ( )  return count ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME number TYPE java.lang.StringBuilder NAME VAR_1 INIT = new java.lang.StringBuilder ( ) COND number . METHOD_2 ( ) TYPE char[] NAME VAR_2 INIT = new char [ number . METHOD_3 ( ) ]  TYPE_2 . METHOD_4 ( VAR_2 , CHAR_1 )  VAR_1 . append ( new java.lang.String ( VAR_2 ) )  VAR_1 . append ( number . METHOD_5 ( ) )  return VAR_1 . toString ( ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE long NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME request TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < > ( ) TYPE java.lang.String NAME VAR_2 INIT = request . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( new TYPE_1 ( VAR_3 , VAR_2 . METHOD_4 ( ) , ( STRING_2 + VAR_2 ) ) ) TYPE java.lang.String NAME time INIT = request . METHOD_2 ( STRING_3 )  VAR_1 . METHOD_3 ( new TYPE_1 ( VAR_4 , ( ( ( STRING_2 + VAR_2 ) + STRING_4 ) + time ) ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_3 )  TYPE_2 . when ( VAR_4 . METHOD_4 ( ) ) . thenReturn ( VAR_5 )  TYPE_2 . when ( VAR_4 . METHOD_5 ( ) ) . thenReturn ( VAR_6 )  VAR_3 . METHOD_6 ( VAR_7 , VAR_8 )  assertEquals ( VAR_9 , VAR_10 . METHOD_7 ( VAR_11 ) . METHOD_8 ( ) )  assertEquals ( VAR_9 , VAR_12 . METHOD_7 ( VAR_11 ) . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( null , STRING_1 , VAR_2 . TAG , null , null , null , null , false )  verify ( VAR_3 , METHOD_3 ( 0 ) ) . METHOD_4 ( METHOD_5 ( ) , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_6 ( ) , METHOD_7 ( VAR_4 class ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , null , VAR_1 , TYPE_1 . METHOD_3 ( ) , VAR_2 ) TYPE TYPE_2 NAME call INIT = VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( )  assertEquals ( VAR_2 , call . METHOD_9 ( ) )  call . METHOD_10 ( VAR_4 . METHOD_11 ( ) )  assertEquals ( VAR_5 , call . METHOD_9 ( ) )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE TYPE_1 NAME d INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND d == null  return false ;  d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) )  return true ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE byte[] NAME content TYPE java.io.File NAME f INIT = java.io.File . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( f )  VAR_1 . METHOD_3 ( content )  VAR_1 . METHOD_4 ( )  return f . METHOD_5 ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2 . METHOD_2 ( )  METHOD_3 ( VAR_3 , false , 0 )  METHOD_4 ( VAR_3 , false )  VAR_4 . METHOD_5 ( VAR_5 , VAR_3 , false ) TYPE android.os.RemoteException NAME e  android.util.Log.d ( VAR_6 . TAG , STRING_1 , e )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME t TYPE float NAME r TYPE float NAME b TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return 0 ; TYPE TYPE_2 NAME VAR_7 INIT = TYPE_2 . METHOD_2 ( VAR_3 ) COND VAR_7 == null  return 0 ;  return VAR_5 . METHOD_3 ( new TYPE_3 ( VAR_2 , t , r , b ) , VAR_7 , VAR_4 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( ) TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_4 ( VAR_5 )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_1 ) )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_2 ) )  assertEquals ( VAR_3 , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE int NAME VAR_3 TYPE byte[] NAME VAR_4 TYPE android.os.Message NAME msg INIT = VAR_5 . METHOD_2 ( VAR_6 )  msg.arg1 = VAR_7  VAR_8 = VAR_1  msg.obj = VAR_3  msg . METHOD_3 ( ) . METHOD_4 ( VAR_9 , VAR_2 )  msg . METHOD_3 ( ) . METHOD_4 ( VAR_10 , VAR_4 )  VAR_5 . METHOD_5 ( msg )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME text TYPE int NAME start TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE float NAME x TYPE float NAME y TYPE int NAME flags TYPE int NAME VAR_5 TYPE int NAME count INIT = VAR_2 - start TYPE char[] NAME VAR_6 INIT = TYPE_1 . METHOD_2 ( count )  TYPE_2 . METHOD_3 ( text , start , VAR_2 , VAR_6 , 0 )  TYPE_3 . METHOD_4 ( VAR_1 , VAR_6 , 0 , count , x , y , flags , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME field TYPE java.lang.String NAME name TYPE java.lang.Object NAME value TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME source TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_3 NAME entry INIT = VAR_4 . get ( field ) COND entry == null  entry = new TYPE_3 ( TYPE_4 . METHOD_2 ( ) , VAR_1 , source , VAR_2 , VAR_3 , true )  VAR_4 . METHOD_3 ( field , entry )  METHOD_4 ( field )  entry . METHOD_5 ( VAR_1 , value )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE short[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , w , h )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , data , ( ( data . length ) * 2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3  METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME config INIT = new TYPE_1 ( )  VAR_4 = VAR_1  assertTrue ( VAR_5 . METHOD_3 ( config , VAR_3 ) )  METHOD_4 ( VAR_2 , VAR_3 , 1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = this . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = this . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = ( VAR_2 <= VAR_3 ) ? VAR_3 - VAR_2 : 0 TYPE int NAME size INIT = VAR_4 > > 1  return ( ( TYPE_1 ) ( new TYPE_3 ( this , ( - 1 ) , 0 , size , size , VAR_2 , METHOD_4 ( ) ) ) ) ;
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 TYPE int[] NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + ( TYPE_1 . toString ( VAR_1 ) ) ) ) TYPE TYPE_2 NAME service INIT = METHOD_2 ( ) COND service == null  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ;  return service . METHOD_1 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( this )  VAR_1 . METHOD_3 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 IN VAR_4 . values ( ) COND VAR_3 == null  throw new java.lang.RuntimeException ( STRING_1 ) ;  VAR_1 . METHOD_3 ( VAR_3 )  VAR_1 . METHOD_4 ( this )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME s INIT = new TYPE_1 ( )  s . METHOD_5 ( method )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 COND ( VAR_1 . size ( ) ) == 0  return null ; TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_2<java.lang.String,TYPE_3> NAME entry IN VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( entry . METHOD_4 ( ) . METHOD_5 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( s , fd , callback , VAR_2 , 0 , VAR_2 . length , 0 )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER private RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = METHOD_2 ( ) . get ( 2 , VAR_2 ) COND ( VAR_1 == null ) || ( ( VAR_1 . length ) == 0 )  fail ( STRING_1 )
MODIFIER public RETURN boolean NAME METHOD_1 COND ( VAR_1 ) == null  return false ; TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ! ( VAR_2 instanceof TYPE_2 )  return false ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_2 ) )  return ( VAR_3 . METHOD_3 ( ) ) && ( VAR_3 . METHOD_1 ( ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2  METHOD_2 ( STRING_1 )  TYPE_2 . METHOD_3 ( ( STRING_1 + STRING_2 ) ) COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_3 ) ; TYPE java.lang.String NAME error INIT = METHOD_4 ( VAR_1 , VAR_2 ) COND error != null  throw new TYPE_3 ( error ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE int NAME VAR_4  VAR_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) TYPE byte[] NAME VAR_5 INIT = VAR_2 . METHOD_5 ( )  METHOD_6 ( VAR_5 , VAR_3 , VAR_4 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME text INIT = VAR_2 . METHOD_2 ( ) COND ! ( VAR_3 . equals ( text ) )  VAR_4 = true TYPE boolean NAME VAR_5 INIT = METHOD_3 ( VAR_1 , text ) COND ! VAR_5  return false ;  VAR_4 = false  VAR_3 = text  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = ( VAR_2 ) + 1  when ( VAR_3 . METHOD_2 ( VAR_1 ) ) . thenReturn ( false )  VAR_4 . METHOD_3 ( VAR_1 )  VAR_5 . verify ( VAR_6 , METHOD_4 ( ) ) . METHOD_5 ( METHOD_6 ( VAR_7 class ) )  VAR_5 . verify ( VAR_6 , METHOD_4 ( ) ) . METHOD_7 ( METHOD_8 ( ) , METHOD_6 ( VAR_8 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( VAR_3 )  METHOD_4 ( new TYPE_5 ( info , VAR_2 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME netId TYPE java.lang.String NAME name TYPE java.util.Map<java.lang.String,java.lang.String> NAME values TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( values ) COND VAR_1 == null  return false ;  return METHOD_3 ( netId , name , ( ( STRING_1 + VAR_1 ) + STRING_1 ) ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1 INIT = new java.lang.StringBuilder ( ) COND ( VAR_2 ) != null  VAR_1 . append ( VAR_2 ) . append ( CHAR_1 )  METHOD_2 ( VAR_1 ) COND ( ( VAR_3 ) != null ) && ( ! ( VAR_3 . METHOD_3 ( ) ) )  VAR_1 . append ( CHAR_2 ) . append ( VAR_3 . METHOD_4 ( ) )  return VAR_1 . toString ( ) ;
MODIFIER public synchronized RETURN void NAME METHOD_1 COND VAR_1  return ;  VAR_1 = true COND ( VAR_2 ) == null  return ;  VAR_3 = new TYPE_1 ( path . METHOD_2 ( ) ) TYPE java.io.IOException NAME VAR_4  TYPE_2 . METHOD_3 ( ( STRING_1 + ( path ) ) , VAR_4 )  VAR_3 = null
MODIFIER synchronized RETURN long NAME METHOD_1 TYPE int[] NAME VAR_1 TYPE int[] NAME src TYPE int[] NAME VAR_2 TYPE int[] NAME VAR_3 TYPE int[] NAME VAR_4  METHOD_2 ( )  return METHOD_3 ( mContext , VAR_1 , src , VAR_2 , VAR_3 , VAR_4 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) . get ( VAR_1 )  assertNotNull ( VAR_2 ) TYPE TYPE_2 NAME p IN VAR_2  assertTrue ( ( ( STRING_2 + p ) + STRING_3 ) , p . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 ) COND ( METHOD_3 ( ) ) != null  ( ( TYPE_2 ) ( METHOD_3 ( ) ) ) . METHOD_4 ( ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_5 ( ) ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener  VAR_1 COND ( VAR_2 . METHOD_2 ( listener ) ) == false  VAR_2 . METHOD_3 ( listener ) COND ( VAR_3 ) != null  listener . METHOD_4 ( VAR_3 ) TYPE java.lang.Exception NAME e  TYPE_2 . e ( VAR_4 , e )
MODIFIER public RETURN byte NAME METHOD_1 TYPE byte NAME in COND METHOD_2 ( )  throw new TYPE_1 ( STRING_1 ) ; COND ( index ) == 0  METHOD_3 ( VAR_1 )  METHOD_4 ( ) TYPE byte NAME out INIT = ( ( byte ) ( ( VAR_1 [ index ] ) ^ in ) )  index = ( ( index ) + 1 ) & INT_1  return out ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME type TYPE java.lang.String NAME VAR_1  mContext . METHOD_2 ( VAR_2 , STRING_1 )  METHOD_3 ( ) COND VAR_3  TYPE_1 . i ( TYPE_2 . TAG , STRING_2 ) TYPE TYPE_3 NAME event INIT = VAR_4 . METHOD_4 ( STRING_3 , STRING_4 , VAR_5 [ type ] , new TYPE_4 ( METHOD_5 ( VAR_1 ) ) )  return java.lang.Integer.parseInt ( event . getMessage ( ) ) ; TYPE TYPE_5 NAME e  return e . METHOD_6 ( ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_3> NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.util.List<TYPE_3> NAME VAR_4 TYPE TYPE_1 NAME parent  VAR_4 = VAR_5 < TYPE_3 > METHOD_2 ( ) . METHOD_3 ( VAR_3 ) . METHOD_4 ( VAR_4 ) . build ( ) COND ! ( VAR_2 . METHOD_5 ( ) )  parent = TYPE_4 . METHOD_6 ( VAR_2 , VAR_1 , parent )  return TYPE_4 . METHOD_6 ( VAR_4 , VAR_1 , parent ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 16 , INT_1 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( args . in )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_7 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  TYPE_2 . log ( ( STRING_1 + VAR_1 ) )  METHOD_2 ( VAR_1 )  METHOD_3 ( VAR_1 , VAR_3 ) COND TYPE_2 . METHOD_4 ( mContext )  TYPE_2 . log ( STRING_2 )  TYPE_2 . log ( STRING_3 )  METHOD_5 ( VAR_1 ) COND VAR_2  TYPE_2 . log ( ( STRING_4 + VAR_1 ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . get ( VAR_2 ) COND ( ( ! ( TYPE_1 . METHOD_2 ( VAR_3 , false ) ) ) || ( VAR_1 == null ) ) || ( VAR_1 . METHOD_3 ( ) )  TYPE_2 . METHOD_4 ( VAR_4 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE byte[] NAME VAR_4  METHOD_2 ( ) COND VAR_4 == null  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener COND ( VAR_1 ) != null  android.util.Log.w ( VAR_2 , STRING_1 )  return ;  VAR_1 = ( listener != null ) ? listener : new TYPE_1 ( )  VAR_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) TYPE java.lang.String NAME VAR_6 INIT = TYPE_2 . METHOD_3 ( VAR_3 , STRING_2 ) TYPE boolean NAME result INIT = VAR_7 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 )  TYPE_3 . assertTrue ( VAR_6 , result )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = ( ( TYPE_4 ) ( VAR_3 ) )  METHOD_3 ( METHOD_4 ( info , VAR_2 , true , VAR_1 ) ) TYPE TYPE_5 NAME e  throw METHOD_5 ( x , e ) ; TYPE java.lang.RuntimeException NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( ) TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_4 ( 100 ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_4 ( 100 )  VAR_3 . METHOD_5 ( VAR_1 , new TYPE_2 [ ] { VAR_2 } )  fail ( STRING_1 ) TYPE TYPE_3 NAME ex BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 )  METHOD_3 ( VAR_1 , true , STRING_3 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 )  METHOD_4 ( VAR_2 , VAR_3 , STRING_4 )  METHOD_4 ( VAR_2 , VAR_4 , STRING_5 )  METHOD_4 ( VAR_2 , VAR_5 , STRING_6 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME data TYPE TYPE_2[] NAME VAR_1 INIT = null TYPE int NAME VAR_2 INIT = 0 COND data == null  return VAR_3 ; NAME VAR_4  VAR_6 . METHOD_2 ( ( ( TYPE_2 ) ( data ) ) )  break ;  VAR_1 = ( ( TYPE_2 [ ] ) ( data ) ) TYPE TYPE_2 NAME VAR_8 IN VAR_1  VAR_6 . METHOD_2 ( VAR_8 )  break ;  return VAR_9 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME path  VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( VAR_2 , path ) COND VAR_3 == 0  throw new android.renderscript.RSRuntimeException ( ( STRING_1 + path ) ) ; TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_3 , VAR_1 , null )  VAR_4 . METHOD_4 ( )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_3 ) - 1 )  ++ i  VAR_2 [ i ] = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) )  METHOD_4 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) NAME VAR_1  VAR_5 . METHOD_3 ( VAR_6 )  break ;  break ;  VAR_5 . METHOD_3 ( VAR_9 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 = false TYPE boolean NAME VAR_2 INIT = true TYPE TYPE_1 NAME VAR_3 IN VAR_4 . METHOD_2 ( )  VAR_2 &= VAR_3 . METHOD_3 ( true ) COND VAR_2  return ; COND ! ( VAR_5 . METHOD_4 ( VAR_6 . METHOD_5 ( ) , VAR_6 . METHOD_6 ( ) , VAR_6 . METHOD_7 ( ) . METHOD_8 ( ) ) )  return ;  VAR_1 = ( VAR_7 . METHOD_9 ( true ) ) == false
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s  VAR_1 = ( ( byte [ ] ) ( s . METHOD_2 ( ) ) )  VAR_2 = ( ( byte [ ] ) ( s . METHOD_2 ( ) ) )  VAR_3 = ( ( java.lang.String ) ( s . METHOD_2 ( ) ) )  VAR_4 = ( ( java.lang.String ) ( s . METHOD_2 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME error COND error == null  METHOD_1 ( null , null ) TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 )  VAR_1 . METHOD_5 ( 0 , 0 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) )  METHOD_1 ( error , VAR_1 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = ( VAR_1 != null ) ? VAR_1 : VAR_2 COND ( VAR_1 != null ) && ( VAR_2 != null )  VAR_3 += STRING_1 + VAR_2  VAR_3 = TYPE_1 . METHOD_2 ( VAR_3 )  return VAR_3 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_2 . METHOD_2 ( ) ) TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( context , VAR_1 ) COND VAR_2 != null  TYPE_4 . i ( TYPE_3 . TAG , ( STRING_1 + ( VAR_2 . METHOD_4 ( ) ) ) )  VAR_2 = new java.io.File ( VAR_3 , VAR_1 )  TYPE_2 . METHOD_5 ( VAR_2 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . addFeature ( VAR_2 ) . addFeature ( VAR_3 ) . build ( ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_2 ( ) . addFeature ( VAR_3 ) . addFeature ( VAR_2 ) . build ( )  TYPE_3 . assertEquals ( VAR_1 , VAR_4 )
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME b INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( METHOD_1 ( ) )  ++ i  b . append ( METHOD_2 ( i ) )  b . append ( CHAR_1 ) TYPE int NAME i INIT = 0 COND i < ( METHOD_3 ( ) )  ++ i  b . append ( METHOD_4 ( i ) . toString ( ) )  return b . toString ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME type COND VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( VAR_3 ) COND VAR_2 . METHOD_2 ( ) TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_4 INIT = TYPE_5 . METHOD_4 ( VAR_2 , null ) COND VAR_4 != null  return new TYPE_1 ( VAR_1 , VAR_4 , type ) ;  return null ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND STRING_1 . equals ( VAR_1 )  VAR_1 = STRING_2 COND STRING_3 . equals ( VAR_1 )  VAR_1 = STRING_4 TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) COND VAR_2 == 0  return null ; TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 )  TYPE_2 . METHOD_3 ( VAR_3 , VAR_4 )  TYPE_2 . METHOD_4 ( VAR_3 , VAR_5 )  return new TYPE_1 ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = VAR_2  VAR_3 = VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = METHOD_2 ( STRING_1 , VAR_6 . METHOD_3 ( ) , VAR_7 )  assertEquals ( VAR_8 , VAR_9 . METHOD_4 ( VAR_10 ) . METHOD_5 ( ) )  VAR_11 . METHOD_6 ( VAR_10 )  org.mockito.Mockito.verify ( VAR_7 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( VAR_12 ) ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_13 ) , org.mockito.Matchers . METHOD_9 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME line TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ 5 ] TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  TYPE_2 . METHOD_2 ( line , CHAR_1 , VAR_1 , VAR_2 )  METHOD_3 ( VAR_1 , line )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) TYPE java.lang.String NAME expected INIT = STRING_8 + ( STRING_9 + STRING_10 )  assertEquals ( expected , METHOD_2 ( VAR_1 ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME call TYPE java.lang.String NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( VAR_2 )  VAR_3 COND VAR_3 . METHOD_2 ( VAR_1 )  return null ;  VAR_3 . METHOD_3 ( VAR_1 ) TYPE TYPE_3.File NAME VAR_4 INIT = TYPE_2 . METHOD_4 ( VAR_5 , VAR_2 ) COND VAR_6  VAR_4 . METHOD_5 ( )  VAR_7 . METHOD_6 ( VAR_2 , VAR_4 , VAR_6 , options , VAR_8 )  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1  this COND ( ! ( METHOD_2 ( VAR_2 , VAR_1 , TYPE_1 . METHOD_3 ( ) ) ) ) || ( METHOD_4 ( ) )  return false ; TYPE TYPE_2 NAME VAR_3 INIT = METHOD_5 ( ) COND ( VAR_4 ) != null TYPE TYPE_3 NAME text INIT = VAR_4 . METHOD_6 ( 0 ) . METHOD_7 ( )  return ( text != null ) && ( ( text . length ( ) ) > 0 ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) , null , TYPE_4 . of ( ) , TYPE_4 . of ( STRING_2 ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , true ) ) . METHOD_6 ( VAR_3 class )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE int NAME VAR_2  VAR_3  VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) COND VAR_2 == 0  throw new java.lang.IllegalArgumentException ( ( STRING_2 + VAR_1 ) ) ;  TYPE_2 . METHOD_3 ( VAR_2 )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 ) ) TYPE TYPE_1[] NAME VAR_4 INIT = VAR_2 . METHOD_4 ( VAR_3 , true ) COND ( VAR_4 . length ) == 1  return VAR_4 [ 0 ] ;  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) == null  VAR_2 = new java.util.HashMap < TYPE_2 , TYPE_1 > ( ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_2 . get ( VAR_1 ) COND VAR_3 == null  VAR_3 = new TYPE_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) )  VAR_3 . METHOD_5 ( )  VAR_2 . METHOD_6 ( VAR_1 , VAR_3 )  return VAR_3 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME call COND ( VAR_1 ) == null  VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , TYPE_3 . METHOD_3 ( ( ( TYPE_4 ) ( VAR_4 ) ) ) , VAR_5 ) COND ( call . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) && ( call . METHOD_6 ( ) . equals ( VAR_1 ) )  return true ;  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_2 . get ( VAR_1 ) COND result == null  result = new TYPE_1 ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_1 , result )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[][] NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( s )  TYPE_5 . METHOD_3 ( TYPE_5 . METHOD_4 ( ) , VAR_2 )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE java.util.ArrayList<java.lang.Integer> NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = TYPE_4 . METHOD_3 ( VAR_2 , VAR_3 )  TYPE_5 . METHOD_4 ( VAR_5 , ret )  VAR_3 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.util.ArrayList<java.lang.Integer> NAME VAR_5 TYPE TYPE_5 NAME listener TYPE TYPE_6 NAME VAR_6  return new TYPE_1 ( VAR_7 . METHOD_2 ( ) , VAR_1 , VAR_4 , VAR_5 , listener , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this . VAR_2 = VAR_1 COND VAR_1 instanceof TYPE_3 TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( VAR_1 ) )  VAR_3 . METHOD_2 ( this )  METHOD_3 ( VAR_4 , VAR_3 . METHOD_4 ( ) )  METHOD_3 ( STRING_1 , STRING_2 ) COND VAR_1 instanceof TYPE_4  METHOD_3 ( VAR_4 , java.lang.String.format ( STRING_3 , METHOD_5 ( ) ) )  METHOD_3 ( VAR_5 , STRING_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[][] NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE java.lang.String[] NAME VAR_2 IN VAR_1 COND ( VAR_2 . length ) < 5  throw new java.lang.IllegalArgumentException ( ( ( TYPE_1 . toString ( VAR_2 ) ) + STRING_2 ) ) ;  this . VAR_1 = TYPE_2 . METHOD_2 ( VAR_1 )  this . VAR_3 = true
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = java.lang.Integer . METHOD_3 ( VAR_1 ) TYPE android.content.Intent NAME VAR_3 INIT = METHOD_4 ( VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = VAR_6 . METHOD_5 ( VAR_2 ) COND VAR_5 != null  VAR_5 . METHOD_6 ( VAR_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 ) TYPE int NAME VAR_1 INIT = VAR_2 . length TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  sb.append ( STRING_1 )  sb.append ( VAR_3 . get ( i ) )  sb.append ( STRING_2 )  sb.append ( VAR_2 [ i ] )  return sb . toString ( ) ;
MODIFIER protected RETURN boolean NAME start  android.util.Log.e ( TYPE_1 . TAG , STRING_1 )  TYPE_1 . METHOD_1 ( this ) COND ( VAR_1 ) == null  VAR_1 = TYPE_2 . METHOD_2 ( this )  VAR_2 = TYPE_3 . METHOD_3 ( )  VAR_3 = false TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( )  VAR_4 . METHOD_4 ( VAR_5 )  VAR_4 . METHOD_4 ( VAR_6 )  METHOD_5 ( VAR_7 , VAR_4 )  METHOD_6 ( )  return ! ( VAR_3 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 , 0 , VAR_4 ) COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_5 )  METHOD_4 ( )  return true ; TYPE TYPE_3 NAME e BLOCK BLOCK  return false ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) COND VAR_4 == 0 ? VAR_3 != ( void . class ) : VAR_3 != ( VAR_2 . METHOD_4 ( 0 ) )  throw TYPE_2 . METHOD_5 ( STRING_1 , VAR_1 , VAR_2 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_4 NAME VAR_3 INIT = null TYPE TYPE_5 NAME field IN VAR_2 . METHOD_3 ( ) COND STRING_2 . equals ( field . name )  VAR_3 = VAR_4 . METHOD_4 ( )  return VAR_3 . METHOD_5 ( name ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME test TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ( ( STRING_1 + test ) + STRING_2 ) ) )  VAR_1 . METHOD_3 ( new TYPE_4 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_3 COND ( ( VAR_4 ) == null ) && ( VAR_1 == ( VAR_5 ) )  TYPE_1 . METHOD_2 ( VAR_2 . equals ( VAR_6 ) , STRING_1 , VAR_2 , VAR_6 )  VAR_4 = TYPE_2 . METHOD_3 ( VAR_2 , name , VAR_3 )  super . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e COND VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = ( ( TYPE_4 ) ( VAR_1 ) )  return TYPE_5 . METHOD_1 ( VAR_1 , e ) ; TYPE int NAME id INIT = VAR_1 . METHOD_2 ( 8 , e . METHOD_3 ( VAR_1 ) ) COND ! ( e . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 ) ) )  throw new TYPE_6 ( STRING_1 ) ;  return new TYPE_1 ( id , VAR_1 , e ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  s . METHOD_3 ( )  VAR_1 . METHOD_4 ( )  METHOD_5 ( )  VAR_1 . METHOD_6 ( )  METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  VAR_2 = VAR_1 COND VAR_1 == false  VAR_3 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( this , VAR_1 ) TYPE java.io.IOException NAME VAR_4  VAR_4 . METHOD_4 ( )  METHOD_5 ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME node TYPE TYPE_4 NAME pos INIT = ( ( TYPE_4 ) ( METHOD_2 ( node , 0 , 0 ) ) ) COND pos != null  return TYPE_1 . METHOD_3 ( VAR_1 , pos , ( ( TYPE_4 ) ( pos . METHOD_4 ( ) ) ) ) ;  return TYPE_1 . METHOD_3 ( VAR_1 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME out TYPE java.lang.String[] NAME args TYPE long NAME VAR_2 COND VAR_1 instanceof TYPE_3  VAR_1 . METHOD_2 ( out , args ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  return ; TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( )  VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) , args )  VAR_3 . METHOD_6 ( out , VAR_2 )  VAR_3 . METHOD_7 ( )
MODIFIER private synchronized RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE TYPE_1 NAME info IN VAR_1 COND VAR_2 . equals ( packageName ) COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( ( STRING_1 + packageName ) + STRING_2 ) )  return true ; COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( ( STRING_1 + packageName ) + STRING_3 ) )  return false ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) TYPE java.io.File NAME VAR_1 INIT = METHOD_4 ( ) . METHOD_5 ( ) TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( METHOD_4 ( ) . METHOD_8 ( ) , VAR_3 ) )  assertTrue ( VAR_2 . METHOD_9 ( ) )  TYPE_1 . METHOD_10 ( VAR_2 )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return true ; TYPE TYPE_2 NAME VAR_6 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND VAR_6 == null  return true ;  return VAR_7 . METHOD_3 ( VAR_6 . METHOD_4 ( ) , VAR_3 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE byte NAME type TYPE byte NAME id TYPE byte[] NAME data COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( ( ( STRING_1 + device ) + STRING_2 ) + type ) + STRING_3 ) + id ) ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , type , id , data ) ;
MODIFIER public final RETURN void NAME METHOD_1  this COND METHOD_2 ( )  throw new TYPE_1 ( STRING_1 ) ; COND ( VAR_1 ) == ( VAR_2 )  return ;  METHOD_3 ( )  METHOD_4 ( ) . METHOD_5 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_6 ( this , 0 )  VAR_3 = null  VAR_1 = VAR_2
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  TYPE_1 . d ( VAR_1 , ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) ) COND ( ! ( VAR_2 ) ) && ( ! ( VAR_4 . METHOD_2 ( VAR_3 ) ) )  TYPE_1 . d ( VAR_1 , STRING_4 )  METHOD_3 ( VAR_5 )  METHOD_4 ( )
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 < 0 ) || ( VAR_1 > ( VAR_3 ) )  throw new java.lang.IllegalArgumentException ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) ) ; TYPE int NAME VAR_4 INIT = VAR_5 [ VAR_1 ]  return ( METHOD_2 ( ( VAR_4 + VAR_2 ) ) ) - ( METHOD_2 ( VAR_4 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( METHOD_2 ( ) ) == false  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  throw new java.io.IOException ( ) ;  return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , ( - 1 ) , new TYPE_3 ( VAR_1 ) ) ;
MODIFIER public static RETURN void NAME run  TYPE_1 . METHOD_1 ( VAR_1 class )  TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( 1 ) TYPE TYPE_4 NAME t MODIFIER public RETURN void NAME run  TYPE_2 . METHOD_3 ( ) TYPE java.lang.Exception NAME e  throw new java.lang.RuntimeException ( e ) ;  VAR_2 . METHOD_4 ( ) INIT = new TYPE_4 ( ) { public void run ( ) { try { TYPE_2 . METHOD_3 ( ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } VAR_2 . METHOD_4 ( ) ; } }  t . start ( )  VAR_2 . METHOD_5 ( )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 class )  TYPE_2 . when ( VAR_2 . getName ( ) ) . thenReturn ( name ) TYPE TYPE_3 NAME VAR_4 INIT = TYPE_4 . METHOD_3 ( VAR_1 )  TYPE_2 . when ( VAR_2 . METHOD_4 ( ) ) . thenReturn ( VAR_4 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ;  METHOD_4 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_5 ( VAR_2 , VAR_3 )  METHOD_6 ( VAR_2 , VAR_5 ) TYPE TYPE_2 NAME VAR_6 INIT = METHOD_5 ( VAR_2 , VAR_5 )  TYPE_3 . METHOD_7 ( VAR_6 , VAR_4 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) COND ( VAR_5 ) == null  return null ;  return TYPE_5 . METHOD_4 ( VAR_2 , VAR_4 , VAR_3 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE int NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME output INIT = METHOD_2 ( )  METHOD_3 ( output )  METHOD_4 ( output )  VAR_1 . METHOD_5 ( VAR_2 , 1 )  VAR_1 . METHOD_6 ( VAR_3 )  VAR_1 . METHOD_7 ( VAR_4 , VAR_3 , VAR_5 )  VAR_1 . METHOD_8 ( VAR_3 , VAR_6 )  VAR_1 . METHOD_9 ( 0 , VAR_6 )  METHOD_10 ( output . toString ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME sb TYPE char[] NAME VAR_1 INIT = sb . METHOD_2 ( ) TYPE int NAME n INIT = count COND n != ( sb . length ( ) )  return false ; TYPE int NAME i INIT = 0 COND i < n  i ++ COND ( METHOD_3 ( i ) ) != ( VAR_1 [ i ] )  return false ;  return true ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 COND ( TYPE_2 . version ) == null TYPE TYPE_3 NAME is INIT = VAR_1 class . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) COND is != null  TYPE_2 . version = new TYPE_1 ( is )  VAR_3 . log ( VAR_4 , ( STRING_1 + ( VAR_2 ) ) )  throw new TYPE_4 ( ) ;  return TYPE_2 . version ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME location TYPE java.lang.String NAME VAR_2 TYPE java.lang.Object NAME data COND ( ( VAR_3 ) != null ) && ( VAR_4 . METHOD_2 ( VAR_1 , VAR_3 ) )  return ;  super . METHOD_1 ( VAR_1 , location , VAR_2 , data )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) )  assertEquals ( STRING_1 , server . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( STRING_2 , VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_5 ( )  s . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) TYPE TYPE_2 NAME m IN METHOD_2 ( )  sb.append ( m . toString ( ) )  sb.append ( CHAR_1 )  VAR_1 . METHOD_3 ( new java.lang.Object [ ] { sb . toString ( ) } , new TYPE_3 [ ] { TYPE_4 . METHOD_4 ( ) } )
MODIFIER private RETURN TYPE_1[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 TYPE TYPE_2 NAME VAR_3 IN VAR_2 COND VAR_3 instanceof TYPE_3 TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( VAR_3 ) ) COND VAR_1 . equals ( VAR_4 . METHOD_2 ( ) )  return VAR_4 . METHOD_3 ( ) ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<TYPE_1,TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME t INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND t . METHOD_4 ( ) TYPE TYPE_4 NAME entry INIT = ( ( TYPE_4 ) ( t . METHOD_5 ( ) ) ) TYPE TYPE_2 NAME s INIT = ( ( TYPE_2 ) ( entry . METHOD_6 ( ) ) ) COND ( s . METHOD_7 ( ) ) == false  t . METHOD_8 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( this , VAR_1 , VAR_2 )  VAR_4 COND ( VAR_5 ) != null  VAR_5 . METHOD_2 ( new TYPE_5 < TYPE_4 > ( VAR_3 ) )  TYPE_6 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  return VAR_3 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE short[] NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE byte[] NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 )  return new TYPE_1 ( VAR_4 , VAR_2 ) ; TYPE java.lang.RuntimeException NAME e  throw new TYPE_5 ( VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( VAR_1 ) > INT_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  VAR_2 . METHOD_2 ( )  VAR_3 = new TYPE_2 ( VAR_2 ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( )  VAR_2 . METHOD_2 ( )  VAR_3 = new TYPE_2 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1  METHOD_2 ( )  break ;  METHOD_3 ( )  break ;  METHOD_4 ( msg.arg1 , ( ( android.os.AsyncResult ) ( msg.obj ) ) )  break ;  METHOD_5 ( ( ( android.os.AsyncResult ) ( msg.obj ) ) )  break ; COND VAR_7  android.util.Log.d ( VAR_8 , STRING_1 )  METHOD_6 ( )  break ; BLOCK BLOCK
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ( VAR_2 . get ( VAR_1 ) ) == null ) TYPE int NAME state INIT = VAR_1 . METHOD_2 ( VAR_3 )  VAR_2 . METHOD_3 ( VAR_1 , state )  return VAR_2 . get ( VAR_1 ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 COND VAR_1 . METHOD_2 ( )  return false ; COND VAR_1 instanceof TYPE_1  return false ; TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( ) TYPE java.lang.String NAME VAR_3 INIT = VAR_4 . getName ( VAR_1 )  return VAR_2 . METHOD_4 ( VAR_3 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( ( VAR_1 ) == null ) || ( ! ( VAR_2 . METHOD_2 ( ) ) )  METHOD_3 ( ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_2 . METHOD_4 ( ) COND VAR_3 == null  throw new TYPE_2 ( STRING_1 , VAR_4 ) ;  VAR_1 = new TYPE_4 ( VAR_3 ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_1 , e , VAR_5 ) ;  return VAR_1 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME expected TYPE java.lang.String NAME VAR_1  assertEquals ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , java.lang.Integer . toString ( expected ) , VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( CHAR_1 ) ) + 1 ) ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( name )  VAR_1 . METHOD_2 ( VAR_2 ) COND ! ( VAR_2 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( CHAR_1 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME callback  VAR_2  callback = VAR_2 . get ( VAR_1 ) COND callback == null  android.util.Log.e ( VAR_3 . TAG , ( ( STRING_1 + name ) + STRING_2 ) )  return callback ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log . i ( TYPE_2 . TAG , ( STRING_1 + VAR_1 ) ) TYPE TYPE_3 NAME w INIT = VAR_3 COND w != null  w . METHOD_2 ( )  METHOD_3 ( )  android.util.Log.w ( TYPE_2 . TAG , STRING_2 )
MODIFIER public RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  return null ; TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE int NAME subId IN VAR_3 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_5 . METHOD_3 ( subId ) COND VAR_1 . METHOD_4 ( VAR_4 )  VAR_2 . METHOD_5 ( VAR_4 )  return VAR_2 . METHOD_6 ( ) ? null : VAR_2 ;
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int NAME VAR_5 TYPE short[] NAME d TYPE int NAME VAR_6  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME state TYPE android.bluetooth.BluetoothDevice NAME device NAME state COND VAR_2 . equals ( device )  METHOD_2 ( VAR_3 , device )  METHOD_3 ( VAR_2 , VAR_4 , VAR_5 )  transitionTo ( VAR_6 )  android.util.Log.e ( VAR_7 . TAG , ( STRING_1 + device ) )  break ;  android.util.Log.e ( VAR_7 . TAG , ( ( ( STRING_2 + device ) + STRING_3 ) + state ) )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( STRING_1 ) TYPE TYPE_2 NAME ar INIT = new TYPE_2 ( p . METHOD_2 ( ) [ 0 ] , null )  assertFalse ( VAR_1 . METHOD_3 ( ar , VAR_2 , false , VAR_3 , VAR_4 ) )  assertTrue ( ( ( VAR_4 . METHOD_4 ( ) . METHOD_5 ( STRING_2 ) ) != ( - 1 ) ) )
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( )  METHOD_2 ( VAR_2 )  METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 BLOCK BLOCK TYPE java.lang.Throwable NAME t  METHOD_4 ( t )  throw new java.lang.RuntimeException ( ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type COND ! ( METHOD_1 ( ) . METHOD_2 ( this . METHOD_3 ( ) , type ) )  return ; TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . get ( VAR_2 )  VAR_1 . METHOD_4 ( type ) TYPE TYPE_3 NAME e  TYPE_4 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_3 , e )  throw new TYPE_5 ( e ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE TYPE_1 NAME VAR_1 MODIFIER public RETURN java.lang.String NAME METHOD_2  return packageName ; INIT = new TYPE_1 ( VAR_2 , new TYPE_2 ( STRING_1 ) , VAR_3 , new TYPE_2 ( STRING_2 ) , VAR_4 ) { public java.lang.String METHOD_2 ( ) { return packageName ; } }  VAR_1 . METHOD_3 ( VAR_5 , new TYPE_2 ( STRING_3 ) , STRING_4 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME VAR_1 TYPE int NAME context TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback COND VAR_3  VAR_4 = TYPE_4 . METHOD_2 ( VAR_1 ) TYPE java.lang.Exception NAME e  VAR_5 = e  super . METHOD_1 ( session , VAR_1 , context , VAR_2 , fd , callback )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ; TYPE TYPE_2 NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return ; TYPE TYPE_3 NAME VAR_6 INIT = VAR_3 . METHOD_3 ( ) . METHOD_4 ( )  VAR_5 . set ( TYPE_2 . METHOD_5 ( VAR_6 ) )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 COND VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = ( ( TYPE_4 ) ( VAR_1 ) )  return TYPE_5 . METHOD_2 ( VAR_4 , VAR_2 ) ; TYPE TYPE_6 NAME VAR_5 INIT = VAR_6 TYPE boolean NAME VAR_7 INIT = false TYPE int NAME VAR_8 INIT = 1 TYPE int NAME id INIT = VAR_1 . METHOD_3 ( VAR_9 , VAR_10 , VAR_7 , VAR_8 )  return new TYPE_1 ( id , VAR_1 , VAR_2 , VAR_5 , VAR_7 , VAR_8 ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) < ( VAR_3 )  return VAR_4 ; COND VAR_1 == null  TYPE_3 . i ( STRING_1 , STRING_2 )  VAR_1 = TYPE_4 . METHOD_2 ( context ) COND VAR_1 == null  TYPE_3 . i ( STRING_1 , STRING_3 )  return VAR_4 ; COND context . METHOD_3 ( VAR_5 class ) . METHOD_4 ( VAR_1 )  return VAR_6 ;  return 0 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t TYPE long NAME VAR_1  t . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME VAR_2  METHOD_3 ( VAR_2 ) COND ( t . METHOD_4 ( ) ) != ( VAR_3 )  t . METHOD_5 ( )  fail ( STRING_1 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 , false ) TYPE TYPE_3 NAME VAR_4 IN VAR_2 COND ( ( VAR_4 . METHOD_3 ( ) ) == 1 ) && ( VAR_4 . METHOD_4 ( 0 ) . getName ( ) . equals ( VAR_5 ) )  return true ;  return false ;
MODIFIER public RETURN java.util.Map<java.lang.String,java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME config INIT = this COND VAR_1 . METHOD_2 ( )  config = METHOD_3 ( )  TYPE_2 . METHOD_4 ( ( config != null ) ) TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_2 INIT = VAR_3 . METHOD_5 ( )  return VAR_2 != null ? VAR_2 : VAR_4 < java.lang.String ,  java.lang.String > of ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Throwable NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , null , false )  METHOD_2 ( VAR_1 )  VAR_1 . METHOD_3 ( new java.lang.Throwable ( ) )  METHOD_2 ( VAR_1 )  VAR_1 . METHOD_3 ( new java.lang.Throwable ( ) )  METHOD_2 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME obj COND ! ( obj instanceof TYPE_2 )  throw new java.lang.IllegalArgumentException ( ) ; TYPE TYPE_2 NAME number INIT = ( ( TYPE_2 ) ( obj ) ) TYPE TYPE_3 NAME VAR_1 INIT = METHOD_2 ( number . METHOD_3 ( ) , null )  return super . METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME VAR_1 TYPE TYPE_1 NAME config TYPE boolean NAME VAR_2  VAR_3 = config  TYPE_2 . d ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) TYPE android.os.Bundle NAME result INIT = new android.os.Bundle ( )  result . METHOD_2 ( STRING_3 , VAR_2 )  VAR_4 . METHOD_3 ( STRING_4 , result )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( VAR_2 ) == VAR_1  return ; COND VAR_1 && ( ! ( VAR_3 . METHOD_2 ( ) ) )  return ; COND ( ! VAR_1 ) && ( ! ( VAR_3 . METHOD_3 ( ) ) )  return ;  VAR_2 = VAR_1  VAR_4 . METHOD_4 ( )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1.List<java.lang.String> NAME VAR_1 TYPE TYPE_1.List<java.lang.String> NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 IN VAR_1 COND VAR_3 . METHOD_2 ( VAR_4 )  VAR_1 . METHOD_3 ( VAR_4 )  return true ; TYPE java.lang.String NAME VAR_5 INIT = TYPE_2 . METHOD_4 ( VAR_3 ) COND VAR_2 . METHOD_5 ( VAR_5 )  VAR_2 . METHOD_3 ( VAR_5 )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME session TYPE java.lang.String NAME VAR_2 TYPE TYPE_4 NAME path INIT = new TYPE_4 ( VAR_2 , VAR_3 ) TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( path , VAR_1 ) TYPE TYPE_5 NAME VAR_5 IN session . METHOD_2 ( ) COND VAR_5 . METHOD_3 ( ) . equals ( path )  throw new TYPE_3 ( VAR_4 . METHOD_4 ( ) , VAR_5 . METHOD_4 ( ) ) ;  session . METHOD_5 ( VAR_4 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) TYPE boolean NAME VAR_3 INIT = false COND METHOD_3 ( VAR_2 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_5 . METHOD_4 ( )  VAR_4 = METHOD_5 ( VAR_4 , VAR_6 )  VAR_7 = new TYPE_2 ( VAR_4 , VAR_1 )  VAR_3 = true TYPE TYPE_3 NAME e  VAR_8 = false  return VAR_3 ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_1 TYPE java.lang.Class<?> NAME VAR_2 TYPE TYPE_1 NAME result INIT = METHOD_2 ( name ) COND result == null TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( name , VAR_1 , VAR_2 ) COND result == null COND METHOD_3 ( VAR_3 )  return VAR_3 ;  result = METHOD_2 ( name )  return result ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( VAR_2 ) TYPE int NAME VAR_5 INIT = VAR_4 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_5 ) TYPE int NAME VAR_7 INIT = 0 COND VAR_7 < VAR_5  VAR_7 ++ TYPE TYPE_5 NAME VAR_8 INIT = METHOD_4 ( VAR_1 , VAR_4 . METHOD_3 ( ) , VAR_3 )  VAR_8 . METHOD_5 ( )  VAR_6 . set ( VAR_7 , VAR_8 )  return VAR_6 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE long NAME VAR_1 COND VAR_1 > 0 TYPE long NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( ) COND VAR_1 > 0  this . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK COND VAR_3  break ;  VAR_1 = ( VAR_1 - ( TYPE_1 . METHOD_2 ( ) ) ) - VAR_2
MODIFIER public static RETURN void NAME METHOD_1 TYPE boolean NAME a TYPE java.lang.Integer NAME b COND a && ( ( b . METHOD_2 ( ) ) == INT_1 )  return ;  Main . fail ( ( ( ( STRING_1 + a ) + STRING_2 ) + b ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 , 1 , VAR_2 , 1 ) TYPE byte[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_3 [ 0 ] = CHAR_1 TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_3 )  assertEquals ( VAR_5 , VAR_6 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) )  METHOD_6 ( )  METHOD_7 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_5 ( ) ) != 0 ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_6 ( mContext ) COND VAR_3 != null  return VAR_3 ;  return METHOD_7 ( VAR_2 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name  return name . METHOD_2 ( STRING_1 ) ? new TYPE_2 ( VAR_1 , name . METHOD_3 ( 0 , ( ( name . METHOD_4 ( CHAR_1 ) ) - 1 ) ) , name . METHOD_3 ( ( ( name . METHOD_4 ( CHAR_1 ) ) + 1 ) ) ) : new TYPE_3 ( name ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = this . VAR_2  VAR_2 . METHOD_2 ( ) TYPE java.lang.Object[] NAME VAR_3 INIT = VAR_4 TYPE int NAME n INIT = size TYPE int NAME i INIT = 0 COND i < n  i ++ COND VAR_1 == ( VAR_3 [ i ] )  METHOD_3 ( i )  break ;  VAR_2 . METHOD_4 ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4  return VAR_5 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE TYPE_1 NAME VAR_6  VAR_5 . fail ( VAR_6 . METHOD_2 ( ) )  throw VAR_6 ; TYPE java.io.IOException NAME e  VAR_5 . fail ( VAR_7 )  throw e ; TYPE java.lang.RuntimeException NAME e  VAR_5 . fail ( VAR_7 )  throw new TYPE_1 ( VAR_7 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME service INIT = METHOD_2 ( )  return service . METHOD_3 ( METHOD_4 ( ) ) ; TYPE android.os.RemoteException NAME ex  ex . METHOD_5 ( ) TYPE java.lang.NullPointerException NAME ex  throw new TYPE_2 ( STRING_1 ) ;  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_2 ( STRING_2 )  VAR_1 . METHOD_2 ( STRING_3 )  VAR_1 . METHOD_2 ( STRING_4 )  VAR_1 . METHOD_2 ( STRING_5 )  METHOD_3 ( TYPE_1 . METHOD_4 ( ) , true )  VAR_1 . METHOD_2 ( CHAR_1 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME number TYPE TYPE_1 NAME result TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE int NAME VAR_5 COND ( VAR_6 ) == ( VAR_7 )  return METHOD_1 ( VAR_8 . METHOD_2 ( METHOD_3 ( number ) ) , result , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;  return METHOD_1 ( result , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER protected RETURN com.android.jack.ir.ast.JMethod NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE com.android.jack.ir.ast.JMethod NAME m IN VAR_1 . METHOD_2 ( ) COND ( ( m . METHOD_3 ( ) ) == VAR_2 ) && ( ( m . METHOD_4 ( ) ) == VAR_3 )  return m ;  return null ;
MODIFIER final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2  this COND ! ( VAR_3 )  throw new java.lang.RuntimeException ( STRING_1 ) ; TYPE int NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_2 ) COND VAR_4 != 0 TYPE TYPE_1 NAME res INIT = new TYPE_1 ( this , VAR_4 )  METHOD_3 ( res . METHOD_4 ( ) )  return res ;  throw new TYPE_2 ( ( STRING_2 + VAR_2 ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME f COND VAR_1 . METHOD_2 ( f )  METHOD_1 ( f . METHOD_3 ( ) )  METHOD_1 ( f . METHOD_4 ( ) )  METHOD_5 ( f )  VAR_1 . METHOD_6 ( f )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME method TYPE TYPE_4 NAME call TYPE java.lang.String NAME VAR_2 INIT = VAR_3 COND ( VAR_2 . equals ( STRING_1 ) ) && ( ( context . METHOD_2 ( ) . METHOD_3 ( ) ) >= 8 ) TYPE java.lang.String NAME VAR_4 INIT = java.lang.String.format ( ( STRING_2 + STRING_3 ) , call . name )  context . METHOD_4 ( VAR_5 , method , context . METHOD_5 ( call ) , VAR_4 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE long NAME time INIT = TYPE_4 . METHOD_2 ( session )  assertTrue ( ( time != 0 ) )  assertTrue ( ( time < ( TYPE_5 . METHOD_3 ( ) ) ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_1 , STRING_2 , 0 , CHAR_1 , 6 , INT_1 )  METHOD_4 ( VAR_1 , STRING_3 , INT_2 , INT_3 , 0 , CHAR_1 , 6 , INT_1 )  METHOD_4 ( VAR_1 , STRING_4 , INT_3 , INT_2 , 0 , CHAR_1 , 6 , INT_1 )  METHOD_4 ( VAR_1 , STRING_2 , 0 , CHAR_1 , 6 , INT_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 5 )  METHOD_2 ( 1 , VAR_1 )  METHOD_2 ( INT_1 , VAR_1 )  METHOD_2 ( INT_2 , VAR_1 )  METHOD_2 ( INT_3 , VAR_1 )  METHOD_2 ( INT_4 , VAR_1 )  TYPE_2 . METHOD_3 ( )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN int NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return 0 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return 0 ;  return service . METHOD_1 ( ) ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME text TYPE int NAME start TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE float[] NAME VAR_4  return TYPE_1 . METHOD_1 ( VAR_1 , text . METHOD_2 ( ) , start , ( VAR_2 - start ) , VAR_3 , VAR_4 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME node TYPE java.lang.String NAME VAR_1 INIT = node . METHOD_2 ( )  TYPE_2 . METHOD_3 ( mContext , VAR_1 , node . METHOD_4 ( ) . METHOD_5 ( ) , 0 , VAR_1 . length ( ) )  return super . METHOD_1 ( node ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = java.lang.Integer . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_4 ( ) COND VAR_3 == null  VAR_4 . println ( STRING_1 )  return ;  VAR_5 . METHOD_5 ( VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( method . METHOD_1 ( ) ) || ( method . METHOD_2 ( ) )  return ; TYPE TYPE_1 NAME session INIT = TYPE_2 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_1 INIT = session . METHOD_4 ( VAR_2 class ) COND VAR_1 == null TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( )  VAR_1 = session . METHOD_5 ( VAR_3 ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_1 )  VAR_4 . METHOD_6 ( method )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7  TYPE_2 . METHOD_2 ( VAR_1 , ( ( int ) ( VAR_8 ) ) , ( ( int ) ( VAR_9 ) ) , ( ( int ) ( VAR_2 . METHOD_3 ( ) ) ) , ( ( int ) ( VAR_2 . METHOD_4 ( ) ) ) , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME value TYPE int NAME VAR_1 COND VAR_2  throw new TYPE_1 ( ) ; TYPE int NAME VAR_3 INIT = INT_1  return ( ( ( ( value < < ( VAR_1 | INT_2 ) ) + ( value > > ( VAR_1 ^ INT_3 ) ) ) + ( value > > > ( VAR_1 + INT_4 ) ) ) + ( value < < ( VAR_1 - VAR_3 ) ) ) + ( value > > ( ( byte ) ( VAR_1 ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null  return new TYPE_2 ( VAR_2 . in ) ;  METHOD_2 ( )  return new TYPE_3 ( VAR_1 ) ; TYPE TYPE_4 NAME e  throw new TYPE_5 ( e ) ;
MODIFIER public static final RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME provider COND ( provider == null ) || ( ( provider . length ( ) ) == 0 )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE TYPE_5 NAME p INIT = TYPE_6 . METHOD_2 ( provider ) COND p == null  throw new TYPE_3 ( ( STRING_2 + provider ) ) ;  return TYPE_1 . METHOD_3 ( VAR_1 , p ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME provider INIT = new TYPE_1 ( STRING_1 )  assertNotNull ( TYPE_2 . METHOD_2 ( provider . getName ( ) ) )  TYPE_2 . METHOD_3 ( provider )  assertNotNull ( TYPE_2 . METHOD_2 ( provider . getName ( ) ) )  TYPE_2 . METHOD_4 ( provider . getName ( ) )  METHOD_5 ( TYPE_2 . METHOD_2 ( provider . getName ( ) ) )
MODIFIER public RETURN void NAME run COND ! VAR_1  server . METHOD_1 ( ( 1 * INT_1 ) )  server . METHOD_2 ( VAR_1 )  server . METHOD_3 ( ) TYPE TYPE_1 NAME e  VAR_2 [ 0 ] = e TYPE TYPE_2 NAME e  VAR_3 [ 0 ] = e TYPE java.lang.RuntimeException NAME e  throw e ; TYPE java.lang.Exception NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER private RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1  METHOD_2 ( ( FLOAT_1 - FLOAT_2 ) ) TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < java.lang.String > ( ) TYPE java.lang.String NAME s IN VAR_3 . METHOD_3 ( VAR_1 ) COND ( s != null ) && ( ! ( s . METHOD_4 ( ) ) )  VAR_2 . METHOD_5 ( s . METHOD_6 ( ) )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String[][] NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE int NAME count INIT = 0 TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_3 ) TYPE java.lang.String[] NAME test IN VAR_1 COND ( test [ 1 ] . METHOD_2 ( STRING_1 ) ) && ( METHOD_3 ( STRING_2 , STRING_3 ) )  continue ;  METHOD_1 ( ( ++ count ) , VAR_4 , test [ 0 ] , test [ 1 ] , VAR_2 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<TYPE_3> NAME VAR_3 INIT = METHOD_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_5 , new TYPE_4 ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) , VAR_1 . METHOD_6 ( ) , VAR_6 )  VAR_3 . METHOD_7 ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 INIT = new android.content.Intent ( VAR_2 ) TYPE byte[] NAME VAR_3 INIT = METHOD_2 ( 0 , 0 , VAR_4 , STRING_1 )  VAR_1 . METHOD_3 ( STRING_2 , TYPE_1 . METHOD_4 ( VAR_3 ) )  METHOD_5 ( ) . METHOD_6 ( VAR_1 , STRING_3 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 INIT = 0 TYPE TYPE_3 NAME context INIT = mContext COND VAR_2 >= 0 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( VAR_1 ) COND VAR_4 != null  context = VAR_4 . context  VAR_3 = VAR_5 . METHOD_3 ( VAR_2 , 0 ) COND VAR_3 != 0  return TYPE_5 . METHOD_1 ( context , VAR_3 ) ;  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE short NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE short NAME VAR_3 INIT = ( v == null ) ? ( ( short ) ( m . METHOD_2 ( ) ) ) : ( ( short ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN int NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 TYPE int NAME flags TYPE int NAME VAR_2 COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) ) COND VAR_1 . METHOD_2 ( VAR_5 , false )  METHOD_3 ( )  return 0 ; TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( )  VAR_6 . METHOD_4 ( VAR_7 )  VAR_6 . METHOD_4 ( VAR_8 )  METHOD_5 ( VAR_9 , VAR_6 )  return VAR_10 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( s , fd , callback , new byte [ 1 ] , 0 , 1 , 0 )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ;  VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) COND ( ( VAR_5 ) != null ) && ( ( VAR_5 . METHOD_3 ( ) ) == false )  TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_6 , VAR_5 . METHOD_6 ( ) , null , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME flags  VAR_1 . METHOD_2 ( this . VAR_2 )  VAR_1 . METHOD_2 ( this . VAR_3 )  VAR_1 . METHOD_2 ( this . VAR_4 )  VAR_1 . METHOD_2 ( this . VAR_5 )  VAR_1 . METHOD_2 ( this . VAR_6 )  VAR_1 . METHOD_2 ( this . VAR_7 )  VAR_1 . METHOD_3 ( this . VAR_8 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME i TYPE int NAME uid TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( i ) COND VAR_1 != null  VAR_1 . METHOD_3 ( ) COND ( VAR_2 . size ( ) ) == 0  VAR_3 . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_5 ( )  VAR_5 . METHOD_6 ( uid ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  TYPE_3 . METHOD_7 ( VAR_4 )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE byte[] NAME s TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( s . length )  ++ i COND i != 0  result . append ( CHAR_1 )  result . append ( TYPE_2 . METHOD_1 ( s [ i ] ) )  return result . toString ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME result INIT = VAR_1 . METHOD_2 ( TYPE_3 . suite ( VAR_2 class , VAR_3 class , VAR_4 class , VAR_5 class , VAR_6 class ) ) COND result . METHOD_3 ( )  TYPE_4 . METHOD_4 ( 0 )  TYPE_4 . METHOD_4 ( 1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME out TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( )  VAR_2 . METHOD_3 ( out ) TYPE java.lang.RuntimeException NAME ex  throw TYPE_4 . METHOD_4 ( ex , ( ( STRING_1 + STRING_2 ) + ( VAR_4 . METHOD_5 ( ) ) ) ) ;
MODIFIER protected RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = super . METHOD_1 ( VAR_1 ) COND VAR_2 != 0  return VAR_2 ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) TYPE TYPE_3 NAME VAR_4 INIT = METHOD_2 ( ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_3 . METHOD_2 ( )  return VAR_4 . METHOD_3 ( VAR_5 ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME item TYPE TYPE_1 NAME VAR_3 INIT = super . METHOD_1 ( VAR_1 , VAR_2 , item ) TYPE TYPE_5 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( VAR_5 )  VAR_4 . METHOD_3 ( TYPE_6 . toString ( VAR_2 . METHOD_4 ( ) ) )  VAR_3 . METHOD_5 ( ) . METHOD_6 ( VAR_4 )  return VAR_3 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME src TYPE java.io.File NAME VAR_1 COND ( src . METHOD_2 ( ) ) != null  TYPE_1 . METHOD_3 ( src , VAR_1 )  TYPE_1 . METHOD_4 ( src ) TYPE java.io.IOException NAME e  TYPE_2 . e ( STRING_1 )  TYPE_2 . e ( e )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( VAR_2 class ) ) ) . thenReturn ( VAR_3 )  TYPE_1 . when ( VAR_1 . METHOD_4 ( VAR_3 ) ) . thenReturn ( METHOD_5 ( VAR_3 ) . build ( ) ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( )  assertEquals ( VAR_3 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME offset TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( )  sb.append ( CHAR_1 ) . append ( VAR_2 ) . append ( CHAR_2 )  sb.append ( VAR_3 ) . append ( CHAR_3 ) . append ( CHAR_4 )  sb.append ( VAR_4 ) . append ( CHAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( offset , sb . toString ( ) )  VAR_1 . addChild ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) )  return ; COND ! ( VAR_1 . METHOD_4 ( ) )  return ; TYPE boolean NAME VAR_2 INIT = VAR_1 . METHOD_5 ( ) TYPE TYPE_2 NAME callback INIT = METHOD_6 ( )  assertFalse ( VAR_1 . METHOD_5 ( ) )  METHOD_7 ( callback , VAR_2 )  assertEquals ( VAR_2 , VAR_1 . METHOD_5 ( ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( VAR_2 , null ) COND VAR_1 . METHOD_3 ( ) TYPE TYPE_1<TYPE_3> NAME VAR_3 INIT = VAR_1 . get ( ) . METHOD_4 ( TYPE_4 . METHOD_5 ( STRING_1 ) ) COND VAR_3 . METHOD_3 ( )  return java.lang.Integer.parseInt ( VAR_3 . get ( ) . METHOD_6 ( ) ) ;  return VAR_4 ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ( ( VAR_2 ) != null ) )  VAR_3 . METHOD_2 ( ( ( VAR_2 ) != null ) ) COND ( VAR_2 ) != null  VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME packageName TYPE int NAME userId TYPE int NAME flags TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE int NAME VAR_4 COND ! ( METHOD_2 ( ) )  return ;  VAR_5 . METHOD_1 ( VAR_1 , packageName , userId , flags , VAR_2 , VAR_3 , VAR_4 ) TYPE java.lang.Exception NAME e  throw TYPE_1 . from ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 , true )  VAR_2 . METHOD_3 ( VAR_3 )  VAR_2 . METHOD_4 ( new TYPE_2 ( VAR_4 , VAR_5 , VAR_6 , mContext ) )  VAR_2 . METHOD_5 ( VAR_7 )  VAR_8 . METHOD_6 ( )  VAR_9 . METHOD_6 ( ) TYPE TYPE_3 NAME VAR_10 IN VAR_11 . values ( )  VAR_10 . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) )  return ;  VAR_3 . append ( new TYPE_2 ( VAR_1 . METHOD_5 ( ) , METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ) ) TYPE TYPE_3 NAME VAR_4 INIT = METHOD_8 ( VAR_1 . METHOD_7 ( ) , VAR_1 )  VAR_3 . append ( new TYPE_4 ( VAR_1 , VAR_4 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1[] NAME VAR_2 INIT = VAR_3 TYPE int NAME VAR_4 INIT = VAR_2 . length COND VAR_4 == ( VAR_5 )  VAR_6 = VAR_7  return ; TYPE TYPE_1[] NAME VAR_8 INIT = new TYPE_1 [ VAR_1 ]  METHOD_2 ( VAR_8 , METHOD_3 ( VAR_1 ) )  VAR_3 = VAR_8  VAR_6 = ( ( int ) ( TYPE_2 . METHOD_4 ( ( VAR_1 * ( VAR_9 ) ) , ( ( VAR_5 ) + 1 ) ) ) )
MODIFIER public static RETURN void NAME run  TYPE_1 . METHOD_1 ( VAR_1 class ) TYPE TYPE_2 NAME t MODIFIER public RETURN void NAME run  TYPE_3 . METHOD_2 ( ) TYPE java.lang.Exception NAME e  throw new java.lang.RuntimeException ( e ) ; INIT = new TYPE_2 ( STRING_1 ) { public void run ( ) { try { TYPE_3 . METHOD_2 ( ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } }  t . start ( )  t . METHOD_3 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 ) TYPE android.renderscript.Allocation NAME VAR_4 INIT = android.renderscript.Allocation . METHOD_5 ( VAR_5 , VAR_1 )  VAR_6 . METHOD_6 ( VAR_4 )  VAR_4 . METHOD_7 ( VAR_1 )  TYPE_2 . METHOD_8 ( VAR_1 , STRING_1 , name , VAR_5 . METHOD_9 ( ) )  VAR_4 . METHOD_10 ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME i COND ( i < 0 ) || ( i > ( ( VAR_1 ) - 1 ) )  return 0 ;  return ( ( value [ ( i > > > 5 ) ] ) & ( VAR_2 [ ( i & INT_1 ) ] ) ) != 0 ? 1 : 0 ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( )  METHOD_3 ( ) COND ( VAR_1 ) == null  return ; COND ( VAR_2 ) != null  VAR_1 . METHOD_4 ( VAR_2 )  VAR_1 . METHOD_5 ( )  VAR_1 . METHOD_6 ( )
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 )  VAR_2 = TYPE_1 . METHOD_2 ( STRING_2 )  VAR_3 = TYPE_1 . METHOD_3 ( STRING_3 ) TYPE java.io.File NAME VAR_4 INIT = TYPE_2 . METHOD_4 ( STRING_4 , STRING_5 ) TYPE TYPE_3 NAME VAR_5 INIT = TYPE_2 . METHOD_5 ( VAR_6 class )  VAR_5 . METHOD_6 ( VAR_7 )  VAR_5 . METHOD_7 ( null , VAR_4 , true , VAR_1 )  VAR_8 = VAR_4
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME VAR_1  METHOD_2 ( VAR_1 , this ) NAME VAR_2  transitionTo ( VAR_4 )  break ;  VAR_16 = VAR_17  METHOD_3 ( VAR_1 )  break ;  return VAR_18 ;  return VAR_19 ;
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName COND VAR_1  android.util.Log.d ( VAR_2 . TAG , ( STRING_1 + packageName ) ) TYPE int NAME VAR_3 INIT = METHOD_2 ( packageName ) COND VAR_3 != ( - 1 )  VAR_4 . METHOD_3 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = 0 TYPE long NAME VAR_2 INIT = VAR_3  VAR_4 = VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , true )  assertTrue ( VAR_4 . METHOD_3 ( ) )  assertTrue ( VAR_4 . METHOD_4 ( ) )  assertEquals ( VAR_1 , VAR_4 . METHOD_5 ( ) )  assertEquals ( VAR_2 , VAR_4 . size ( ) )  METHOD_6 ( VAR_5 , VAR_4 . METHOD_7 ( ) )  METHOD_6 ( VAR_5 , VAR_4 . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( VAR_2 class ) ) ) . thenReturn ( METHOD_4 ( VAR_3 , VAR_4 ) ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_5 ( VAR_6 , false , true , INT_1 , INT_2 , VAR_7 , VAR_3 , VAR_8 , VAR_9 , VAR_10 , TYPE_3 . of ( VAR_4 ) )  VAR_11 . METHOD_6 ( VAR_5 , VAR_12 , VAR_13 ) TYPE TYPE_4 NAME VAR_14 INIT = METHOD_7 ( VAR_4 )  assertEquals ( VAR_14 . METHOD_8 ( VAR_15 ) , VAR_16 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . METHOD_2 ( VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_4 COND VAR_5 . METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_3 , VAR_6 )  return ; COND ! ( VAR_7 . METHOD_5 ( VAR_1 ) )  METHOD_4 ( VAR_3 , VAR_8 )  return ;  VAR_5 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_1 , STRING_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_2 , STRING_2 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_1 , STRING_3 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_5 ( VAR_1 , INT_2 , STRING_1 )  METHOD_6 ( result )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  server = new TYPE_1 ( ) TYPE java.lang.String NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  VAR_2 = new java.io.File ( VAR_1 , ( STRING_2 + ( TYPE_3 . METHOD_3 ( ) ) ) )  VAR_2 . METHOD_4 ( )  TYPE_4 . METHOD_5 ( VAR_2 . METHOD_6 ( ) , INT_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE float NAME VAR_6 TYPE float NAME VAR_7 TYPE TYPE_1 NAME VAR_8 INIT = VAR_9 . METHOD_2 ( VAR_1 ) COND VAR_8 == null  return ;  VAR_8 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 < 0  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND VAR_1 == ( VAR_2 )  return new TYPE_1 ( this ) ;  return new TYPE_1 ( VAR_3 . METHOD_2 ( ( VAR_1 - ( VAR_2 ) ) ) , VAR_1 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE long NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int[] NAME VAR_4 INIT = new int [ 2 ]  VAR_1 . METHOD_2 ( VAR_2 , false , VAR_4 ) TYPE int NAME VAR_5 INIT = VAR_4 [ 0 ] TYPE int NAME VAR_6 INIT = VAR_4 [ 1 ] TYPE TYPE_3 NAME VAR_7 INIT = null COND VAR_3  VAR_7 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  return TYPE_1 . METHOD_5 ( VAR_5 , VAR_6 , VAR_2 , VAR_7 ) ;
MODIFIER public static RETURN TYPE_1<java.lang.Object[]> NAME data TYPE java.util.List<java.lang.Object[]> NAME VAR_1 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( new java.io.File ( VAR_3 ) ) TYPE java.util.List<TYPE_5> NAME VAR_4 INIT = VAR_2 . METHOD_1 ( ) TYPE TYPE_5 NAME VAR_5 IN VAR_4  VAR_1 . METHOD_2 ( new java.lang.Object [ ] { VAR_5 . getName ( ) , VAR_5 } )  return VAR_1 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return false ; TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 != null  return ( VAR_3 . METHOD_4 ( ) ) == ( VAR_4 ) ;  return false ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = VAR_4 . get ( VAR_2 . METHOD_4 ( ) )  return VAR_3 != null ? TYPE_4 . METHOD_5 ( VAR_3 ) : METHOD_6 ( VAR_1 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE long NAME VAR_2 TYPE TYPE_1 NAME VAR_3  assertEquals ( ( VAR_1 * INT_1 ) , VAR_3 . METHOD_2 ( ( VAR_2 * INT_1 ) ) )  assertFalse ( VAR_3 . METHOD_3 ( new TYPE_2 ( ( VAR_2 * INT_1 ) ) ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_2 NAME f TYPE java.lang.String NAME VAR_2 INIT = ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_1 . METHOD_2 ( ) . getName ( ) ) ) + STRING_3 ) + ( f . getName ( ) )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 )  TYPE_3 . METHOD_4 ( VAR_1 , STRING_2 )  assertTrue ( VAR_2 . METHOD_5 ( ) . METHOD_6 ( new TYPE_4 ( ) . METHOD_7 ( VAR_3 ) ) . METHOD_8 ( ) )  TYPE_2 . METHOD_9 ( VAR_1 , STRING_2 , null )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME pm TYPE boolean NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( context , pm , VAR_1 )  VAR_2 . start ( )  VAR_2 COND ( VAR_3 ) == null  VAR_2 . METHOD_2 ( ) TYPE TYPE_5 NAME e BLOCK BLOCK  return VAR_3 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name INIT = VAR_1 . getName ( ) COND name == null  throw new java.lang.NullPointerException ( ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_3 ( ) COND VAR_2 . METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_1 , name , ( name + STRING_1 ) )  return true ;  return false ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . get ( VAR_4 , STRING_1 ) TYPE java.util.List<java.lang.String> NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_6 IN VAR_3 . METHOD_3 ( VAR_7 )  VAR_5 . METHOD_4 ( VAR_6 )  VAR_5 . METHOD_5 ( VAR_2 ) TYPE TYPE_3 NAME VAR_8 INIT = TYPE_3 . on ( VAR_7 )  VAR_1 . METHOD_6 ( VAR_4 , VAR_8 . METHOD_7 ( VAR_5 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( METHOD_2 ( VAR_3 ) ) ) COND ( VAR_2 . METHOD_1 ( VAR_1 ) ) != ( VAR_4 )  VAR_5 . METHOD_3 ( false )  VAR_5 . METHOD_4 ( VAR_6 )  return ;  VAR_5 . METHOD_4 ( STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE int NAME event TYPE int NAME VAR_3 TYPE byte[] NAME data  VAR_4  android.util.Log.d ( VAR_5 . TAG , STRING_1 )  assertTrue ( ( VAR_1 == ( VAR_6 ) ) )  assertTrue ( ( event == 2 ) )  assertTrue ( ( VAR_3 == INT_1 ) )  assertTrue ( ( VAR_2 == null ) )  assertTrue ( ( data == null ) )  VAR_7 = true  VAR_4 . METHOD_2 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = false  this COND ! ( VAR_2 )  VAR_1 = true  VAR_2 = true COND VAR_1 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( )  VAR_3 . METHOD_3 ( ) COND mRS . METHOD_4 ( )  mRS . METHOD_5 ( VAR_5 )  VAR_3 . METHOD_6 ( )  mRS = null  VAR_5 = 0
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( s , fd , callback , new byte [ 1 ] , 0 , 1 , 0 )  fail ( )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = ( VAR_1 ) ? VAR_3 . METHOD_2 ( ) : VAR_3 . METHOD_3 ( ) COND VAR_2  METHOD_4 ( ( VAR_1 ? VAR_4 : VAR_5 ) ) COND VAR_6  android.util.Log.v ( VAR_7 . TAG , ( ( STRING_1 + STRING_2 ) + VAR_1 ) )  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . METHOD_2 ( STRING_1 ) COND TYPE_3 . get ( VAR_1 ) . METHOD_3 ( STRING_2 , false ) TYPE TYPE_4 NAME VAR_2 IN VAR_3 . METHOD_4 ( )  VAR_2 . METHOD_1 ( VAR_1 , this )  TYPE_2 . i ( STRING_1 , STRING_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x )  METHOD_3 ( TYPE_4 . METHOD_4 ( info , VAR_2 . METHOD_5 ( ) ) ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER private static RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_2 NAME project TYPE TYPE_3 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_4 NAME target INIT = VAR_1 . METHOD_3 ( project ) COND target != null TYPE TYPE_5 NAME VAR_2 INIT = VAR_1 . METHOD_4 ( target ) TYPE TYPE_6 NAME VAR_3 INIT = VAR_2 . METHOD_5 ( )  return VAR_3 . METHOD_6 ( ) ;  return TYPE_7 . METHOD_7 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_2 . METHOD_4 ( ) TYPE TYPE_2 NAME entry INIT = ( ( TYPE_2 ) ( VAR_2 . METHOD_5 ( ) ) )  METHOD_6 ( ( ( TYPE_3 ) ( entry . METHOD_7 ( ) ) ) , ( ( TYPE_4 ) ( entry . METHOD_8 ( ) ) ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  METHOD_3 ( s )  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME status TYPE int NAME VAR_1 COND VAR_2  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + status ) )  VAR_4 . METHOD_2 ( VAR_1 , status ) TYPE TYPE_1 NAME app INIT = VAR_5 . METHOD_3 ( VAR_1 ) COND app != null COND status == 0  VAR_6 . METHOD_4 ( VAR_7 , true , null )  VAR_6 . METHOD_4 ( VAR_8 , true , null )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME key TYPE byte[] NAME value  return ( VAR_1 . METHOD_2 ( key , value , ( - 1 ) ) ) == ( VAR_2 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e )  return false ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND TYPE_1 . METHOD_2 ( VAR_1 , TYPE_2 . METHOD_3 ( ) )  return ;  TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) . METHOD_6 ( TYPE_1 . METHOD_8 ( VAR_2 ) ) . METHOD_6 ( TYPE_1 . METHOD_9 ( ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME action TYPE java.util.List<TYPE_2> NAME VAR_1 INIT = TYPE_3 . METHOD_1 ( VAR_2 , true ) COND ! ( VAR_1 . METHOD_2 ( ) )  TYPE_4 . METHOD_3 ( VAR_1 , null , null , false , true )  TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_5 ( ) . METHOD_6 ( ) , STRING_1 , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( s )  TYPE_4 . METHOD_3 ( s , fd , callback , new byte [ ] { INT_1 } , 0 , 1 , 0 )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE float NAME VAR_1 INIT = VAR_2  VAR_1 -= FLOAT_1 * ( VAR_3 )  VAR_4 TYPE int NAME VAR_5 INIT = VAR_4 . size ( ) TYPE int NAME i INIT = 0 COND i < VAR_5  i ++ TYPE TYPE_1 NAME VAR_6 INIT = VAR_4 . get ( i )  VAR_1 -= ( VAR_6 . METHOD_2 ( ) ) + ( FLOAT_1 * ( VAR_3 ) )  VAR_6 . METHOD_3 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  VAR_2  VAR_2 . METHOD_3 ( )  VAR_3 = 0 COND ( VAR_4 ) == null  return ; TYPE java.util.List<TYPE_1> NAME VAR_5 INIT = VAR_4 . METHOD_4 ( ) . METHOD_5 ( ) TYPE java.util.List<TYPE_1> NAME VAR_6 INIT = TYPE_2 . METHOD_6 ( )  METHOD_7 ( VAR_5 , VAR_6 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 COND ! ( VAR_1 ) MODIFIER public RETURN int NAME METHOD_3 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_1 NAME VAR_4  return VAR_3 . getName ( ) . METHOD_4 ( VAR_4 . getName ( ) ) ;  TYPE_2 . METHOD_2 ( VAR_2 , new TYPE_3 < TYPE_1 > ( ) { public int METHOD_3 ( TYPE_1 VAR_3 , TYPE_1 VAR_4 ) { return VAR_3 . getName ( ) . METHOD_4 ( VAR_4 . getName ( ) ) ; } } )  VAR_1 = true  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  assertEquals ( new TYPE_3 ( i ) , ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( 0 , VAR_4 ) ) ) )  METHOD_4 ( VAR_1 . METHOD_3 ( 0 , VAR_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) COND ! ( VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ) BLOCK BLOCK COND ! ( VAR_1 . METHOD_2 ( VAR_3 , VAR_4 ) ) BLOCK BLOCK  METHOD_3 ( VAR_4 , VAR_1 . get ( ) ) COND ! ( VAR_1 . METHOD_2 ( VAR_4 , VAR_5 ) ) BLOCK BLOCK  METHOD_3 ( VAR_5 , VAR_1 . get ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.Exception NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . getMessage ( ) COND VAR_4 == null  VAR_4 = STRING_1 + ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) COND ( VAR_5 ) != null  TYPE_1 . METHOD_5 ( VAR_5 , VAR_6 , VAR_4 , VAR_2 , VAR_7 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , VAR_1 ) COND ! ( METHOD_4 ( VAR_1 , STRING_1 ) )  return null ; TYPE int NAME subId INIT = TYPE_3 . METHOD_5 ( VAR_2 )  return TYPE_4 . METHOD_6 ( VAR_4 . METHOD_7 ( ) , subId ) . METHOD_8 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_5> NAME VAR_3 INIT = new java.util.ArrayList < TYPE_5 > ( ) TYPE TYPE_6 NAME value IN values  VAR_3 . METHOD_2 ( value . METHOD_1 ( VAR_1 ) ) TYPE TYPE_7 NAME VAR_4 INIT = VAR_2 . METHOD_1 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_4 , VAR_3 )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<?> NAME parent TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE long NAME id COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( STRING_1 + ( VAR_5 ) ) ) COND ! ( VAR_5 )  VAR_6 . METHOD_2 ( VAR_2 )  METHOD_3 ( )  METHOD_4 ( )  VAR_5 = false
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE byte[] NAME VAR_3 INIT = ( ( byte [ ] ) ( VAR_2 . METHOD_3 ( byte . class , VAR_1 ) ) ) TYPE int NAME address INIT = ( ( int ) ( VAR_2 . METHOD_4 ( VAR_3 ) ) )  return new TYPE_3 ( VAR_3 , address , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == ( VAR_2 ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( this )  TYPE_1 . e ( this , new java.lang.NullPointerException ( ) , STRING_1 , METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( this , VAR_4 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( device ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ; TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3[] NAME VAR_3 INIT = VAR_4 COND METHOD_2 ( VAR_3 ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_6 COND VAR_5 == null  return true ; TYPE java.lang.String NAME VAR_7 INIT = new java.lang.String ( VAR_6 . METHOD_3 ( ) ) TYPE TYPE_5 NAME item INIT = TYPE_6 . METHOD_4 ( VAR_7 , TYPE_7 . METHOD_5 ( VAR_1 ) )  METHOD_6 ( VAR_7 , item )  METHOD_7 ( VAR_3 , item )  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 . equals ( STRING_1 )  VAR_2 . METHOD_3 ( ) TYPE int NAME VAR_3 INIT = java.lang.Integer . METHOD_4 ( VAR_1 )  VAR_2 . METHOD_5 ( VAR_3 )  VAR_4 . println ( ( ( STRING_2 + ( VAR_2 . METHOD_6 ( ) ? STRING_3 : STRING_4 ) ) + STRING_5 ) ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.util.List<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_3 TYPE TYPE_1 NAME id IN VAR_3 COND id . equals ( name , VAR_1 )  return id ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1  mRS . METHOD_2 ( ) TYPE int NAME id INIT = mRS . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) TYPE TYPE_1 NAME VAR_7 INIT = new TYPE_1 ( id , mRS )  VAR_8 = VAR_9  VAR_10 = VAR_11  VAR_12 = VAR_13  VAR_14 = VAR_15  VAR_16 = VAR_17  VAR_18 = VAR_6  return VAR_7 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME c INIT = TYPE_1 . METHOD_2 ( )  assertTrue ( ( c != ( VAR_1 ) ) ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( )  assertTrue ( ( c != VAR_2 ) )  TYPE_1 . METHOD_3 ( c )  TYPE_1 . METHOD_3 ( VAR_2 )  TYPE_2 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  METHOD_2 ( ) . METHOD_3 ( VAR_1 ) COND ( VAR_2 ) != null  VAR_2 . METHOD_4 ( )  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME id TYPE TYPE_1 NAME status TYPE short NAME VAR_1 COND VAR_2  android.util.Log.v ( TYPE_2 . TAG , ( ( ( ( ( STRING_1 + id ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( status ) ) ) + STRING_3 ) + VAR_1 ) ) COND ( status . status ) == ( VAR_3 )  VAR_4 . METHOD_3 ( id , false , VAR_1 )  VAR_4 . METHOD_4 ( id , false , status . status )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME locale COND ( locale . METHOD_2 ( ) . length ( ) ) == 0  return VAR_1 ; TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . get ( locale ) COND VAR_3 . equals ( VAR_1 )  return VAR_4 ; TYPE java.lang.String NAME VAR_5 INIT = TYPE_3 . METHOD_3 ( locale . toString ( ) , VAR_1 )  return VAR_5 != null ? VAR_5 : VAR_1 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_4 COND ( VAR_2 ) == ( VAR_5 )  VAR_3 = VAR_6 COND ( VAR_2 ) == ( VAR_7 )  VAR_3 = VAR_8  METHOD_3 ( this , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) )  METHOD_4 ( STRING_1 , 0 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_5 ( )  server . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE TYPE_1 NAME status COND VAR_2  android.util.Log.v ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( status ) ) ) )  VAR_3 . METHOD_3 ( VAR_1 , status . status , false )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) )  VAR_2 = ( ( TYPE_2 ) ( VAR_3 . METHOD_1 ( ) ) )  return VAR_1 ; TYPE TYPE_3 NAME e  throw new TYPE_4 ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( METHOD_2 ( ) . METHOD_3 ( ) ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_1 , 10 )  TYPE_5 . assertTrue ( VAR_4 . METHOD_6 ( ) , VAR_4 . METHOD_7 ( ) )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND ( VAR_3 . METHOD_2 ( ) ) == VAR_1  VAR_2 . METHOD_3 ( VAR_3 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME method TYPE TYPE_3 NAME VAR_2 TYPE int NAME offset TYPE TYPE_4 NAME VAR_3 TYPE byte NAME VAR_4 INIT = VAR_5 NAME VAR_4  VAR_20 = true
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  this TYPE int NAME index INIT = METHOD_2 ( VAR_1 , false ) COND index >= 0 TYPE TYPE_3 NAME r INIT = ( ( TYPE_3 ) ( VAR_2 . get ( index ) ) )  return VAR_3 . METHOD_3 ( ) ;  return null ;
MODIFIER synchronized RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME call TYPE TYPE_3 NAME VAR_1 INIT = VAR_1 = VAR_2 . get ( call . METHOD_2 ( ) ) COND VAR_1 != null  VAR_1 . METHOD_3 ( )  METHOD_4 ( )  return VAR_1 ;  android.util.Log.e ( VAR_3 , ( ( STRING_1 + call ) + STRING_2 ) )  return null ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND METHOD_2 ( )  return STRING_1 ; TYPE java.lang.StringBuilder NAME result INIT = new java.lang.StringBuilder ( ) TYPE int NAME index INIT = 0 COND index < ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 [ ( index ++ ) ] COND VAR_2 != null COND ( result . length ( ) ) > 0  result . append ( CHAR_1 )  result . append ( VAR_2 . METHOD_3 ( ) )  return result . toString ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND TYPE_2 . METHOD_2 ( context )  TYPE_2 . METHOD_3 ( context , VAR_1 , true )  TYPE_2 . METHOD_4 ( context ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , true ) . METHOD_7 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_1 . println ( ( ( ( ( ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) + STRING_2 ) + ( VAR_2 . METHOD_3 ( ) ) ) + STRING_3 ) + ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ) + CHAR_1 ) )  VAR_1 . println ( ( ( STRING_4 + ( VAR_2 . METHOD_6 ( ) ) ) + CHAR_1 ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE int NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE int NAME VAR_3 INIT = ( v == null ) ? ( ( int ) ( m . METHOD_2 ( ) ) ) : ( ( int ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE char NAME c COND ! ( TYPE_1 . METHOD_2 ( c ) )  TYPE_2 . e ( VAR_1 , ( ( STRING_1 + c ) + STRING_2 ) ) COND ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 )  VAR_2 . METHOD_1 ( c , null )
MODIFIER public RETURN int NAME METHOD_1 COND ( VAR_1 ) == ( METHOD_2 ( ) )  throw new TYPE_1 ( STRING_1 ) ; TYPE int NAME result INIT = VAR_2 COND null != ( VAR_3 ) TYPE android.os.Message NAME msg INIT = VAR_3 . METHOD_3 ( VAR_4 )  result = ( VAR_3 . METHOD_4 ( msg ) ) ? VAR_5 : result  return result ;
MODIFIER public synchronized RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) ) COND TYPE_1 . METHOD_2 ( VAR_1 ) COND VAR_3  android.util.Log.d ( VAR_4 . TAG , STRING_2 )  return false ; COND VAR_2  VAR_5 = VAR_1  VAR_6 = VAR_1 . METHOD_3 ( ) COND VAR_7  METHOD_4 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 TYPE TYPE_1[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 . length )  i ++ COND ( VAR_2 [ i ] ) == null  throw new java.lang.NullPointerException ( ( ( STRING_1 + i ) + STRING_2 ) ) ;  VAR_3 = VAR_2
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 . METHOD_3 ( ) )  METHOD_2 ( VAR_1 . METHOD_4 ( ) )  METHOD_2 ( VAR_1 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) )  TYPE_2 . METHOD_7 ( VAR_1 . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 , TYPE_1 . METHOD_2 ( VAR_1 ) )  VAR_2 . METHOD_3 ( VAR_4 , true ) TYPE int NAME result INIT = METHOD_4 ( VAR_2 , true )  assertEquals ( VAR_5 , result )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_7 ) , org.mockito.Matchers.eq ( TYPE_1 . METHOD_2 ( VAR_1 ) ) , TYPE_2 . METHOD_6 ( VAR_8 class ) , org.mockito.Matchers.eq ( true ) , org.mockito.Matchers.eq ( VAR_9 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_3 class ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME VAR_5 INIT = METHOD_2 ( VAR_6 class ) TYPE TYPE_4 NAME VAR_7 INIT = METHOD_4 ( ) TYPE TYPE_5 NAME VAR_8 INIT = METHOD_5 ( ) TYPE TYPE_6 NAME VAR_9 INIT = METHOD_6 ( VAR_5 , VAR_10 )  METHOD_7 ( VAR_7 , VAR_4 , VAR_5 , VAR_2 )  METHOD_8 ( VAR_9 , VAR_5 , VAR_8 )  METHOD_9 ( VAR_2 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE long[] NAME values TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_4 INIT = new java.util.ArrayList < > ( ) TYPE long NAME value IN values  VAR_4 . METHOD_3 ( value )  return new TYPE_1 ( TYPE_5 . METHOD_4 ( VAR_5 , STRING_1 ) , STRING_2 , 0 , VAR_2 . METHOD_5 ( ) , VAR_3 , VAR_4 , STRING_3 , STRING_4 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = true TYPE int NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) TYPE java.lang.String NAME type INIT = ( VAR_2 != ( - 1 ) ) ? VAR_4 . get ( VAR_2 ) : null COND type == null  METHOD_3 ( STRING_1 )  VAR_1 = false  METHOD_3 ( null ) TYPE TYPE_1 NAME VAR_5 INIT = ( ( TYPE_1 ) ( METHOD_4 ( ) ) )  VAR_5 . METHOD_5 ( type )  METHOD_6 ( VAR_1 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( VAR_1 , null , STRING_1 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( new java.io.File ( VAR_1 , STRING_1 ) ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 ) TYPE byte[] NAME VAR_4 INIT = new byte [ INT_1 ]  VAR_3 . METHOD_4 ( )  fail ( STRING_2 ) TYPE java.io.IOException NAME VAR_5 BLOCK BLOCK
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1  TYPE_1 . METHOD_2 ( VAR_1 )  assertEquals ( VAR_2 , TYPE_2 . METHOD_3 ( VAR_1 ) ) COND ! ( VAR_3 ) TYPE java.util.List<java.lang.String> NAME VAR_4 INIT = new java.util.ArrayList < java.lang.String > ( ) TYPE java.lang.String NAME VAR_5 IN VAR_1 COND ! ( TYPE_1 . METHOD_4 ( VAR_5 ) )  VAR_4 . METHOD_5 ( VAR_5 )  assertEquals ( VAR_6 , VAR_4 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE java.lang.String NAME packageName COND TYPE_3 . METHOD_2 ( packageName )  return null ; TYPE TYPE_4<TYPE_1> NAME VAR_1 INIT = TYPE_5 . METHOD_3 ( context ) TYPE TYPE_1 NAME app IN VAR_1 COND packageName . equals ( VAR_2 )  return app ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 class )  TYPE_3 . METHOD_3 ( VAR_1 , STRING_1 )  TYPE_2 . METHOD_4 ( VAR_1 ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_1 )  TYPE_5 . METHOD_5 ( VAR_3 . METHOD_6 ( STRING_2 ) . get ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) COND VAR_1 == null  return null ; TYPE TYPE_1 NAME VAR_3 INIT = VAR_2 . METHOD_1 ( ) COND VAR_3 != null  return VAR_3 ; COND ( VAR_4 ) != null  return VAR_1 . METHOD_6 ( VAR_4 . METHOD_7 ( ) ) ;  return null ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME result INIT = false TYPE byte[] NAME VAR_2  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_1 NAME e  return result ;  TYPE_2 . METHOD_3 ( VAR_4 , VAR_2 , VAR_2 . length , TYPE_3 . METHOD_4 ( ) )  result = true TYPE java.lang.Exception NAME e  return false ; COND result == false  TYPE_4 . METHOD_5 ( VAR_5 )  return result ;
MODIFIER public RETURN int[] NAME METHOD_1 TYPE int[] NAME src TYPE int[] NAME VAR_1  return new int [ ] { TYPE_1 . METHOD_2 ( src [ 0 ] , VAR_1 [ 0 ] ) , TYPE_1 . METHOD_2 ( src [ 1 ] , VAR_1 [ 1 ] ) , TYPE_1 . METHOD_2 ( src [ 2 ] , VAR_1 [ 2 ] ) , TYPE_1 . METHOD_3 ( INT_1 , ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4 INIT = VAR_1 == ( VAR_5 )  VAR_6 . METHOD_2 ( VAR_2 , name , VAR_3 , VAR_4 )  VAR_7 . METHOD_1 ( VAR_1 , VAR_2 , name , VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 NAME VAR_1  VAR_4 = VAR_5  METHOD_2 ( VAR_4 , METHOD_3 ( VAR_6 ) )  break ;  android.util.Log.v ( VAR_8 . TAG , STRING_1 )  VAR_9 = VAR_5  METHOD_4 ( )  break ;  VAR_11 = VAR_5  METHOD_5 ( true )  VAR_12 = ( ( long ) ( VAR_2 ) ) * INT_1  break ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( VAR_1 . METHOD_2 ( ) . length , VAR_2 . METHOD_3 ( ) )  assertEquals ( VAR_3 . length , VAR_4 . METHOD_3 ( ) )  assertEquals ( VAR_5 . length , VAR_6 . METHOD_3 ( ) )  assertNotNull ( VAR_7 . METHOD_3 ( ) )  assertNotNull ( VAR_8 . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( ) . METHOD_5 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE float NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_2 ( context , STRING_1 , VAR_2 ) . METHOD_3 ( ) MODIFIER protected RETURN TYPE_4 NAME METHOD_4 TYPE TYPE_4 NAME VAR_3  TYPE_5 . METHOD_5 ( context , VAR_1 , VAR_4 )  return null ;  new TYPE_3 < TYPE_4 , TYPE_4 , TYPE_4 > ( ) { protected TYPE_4 METHOD_4 ( TYPE_4 ... VAR_3 ) { TYPE_5 . METHOD_5 ( context , VAR_1 , VAR_4 ) ; return null ; } } . METHOD_6 ( )
MODIFIER public static RETURN java.lang.String[] NAME METHOD_1  return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 , STRING_26 , STRING_27 , VAR_1 } ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_2  return new TYPE_1 ( name , name , VAR_1 , STRING_1 , STRING_1 , new TYPE_2 [ 0 ] , new TYPE_2 [ 0 ] , new TYPE_3 [ 1 ] , false ) ;  return new TYPE_1 ( name , VAR_1 ) ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return 0 ; TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( VAR_4 . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) , TYPE_3 . METHOD_4 ( VAR_3 ) )  return VAR_6 . METHOD_5 ( VAR_5 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME status INIT = new TYPE_1 ( )  VAR_2 = new java.util.ArrayList < TYPE_5 > ( )  VAR_1 . METHOD_2 ( STRING_1 , 5 )  VAR_3 . METHOD_3 ( )  VAR_4 . METHOD_3 ( ) TYPE java.util.List<TYPE_5> NAME VAR_5 INIT = METHOD_4 ( )  VAR_2 . METHOD_5 ( VAR_5 )  VAR_1 . METHOD_6 ( 1 )  VAR_1 . METHOD_7 ( )  return status ;
MODIFIER synchronized RETURN boolean NAME METHOD_1  log ( STRING_1 ) COND ! ( METHOD_2 ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return false ;  METHOD_3 ( new TYPE_1 ( 0 , 0 , VAR_2 , STRING_3 , 0 ) , true )  METHOD_4 ( false )  log ( STRING_4 )  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE int NAME VAR_1 COND key . METHOD_2 ( STRING_1 ) THEN THEN COND key . METHOD_2 ( STRING_2 ) COND ! ( VAR_2 . METHOD_3 ( VAR_3 ) )  return VAR_4 ;  type = key . toString ( )  return VAR_5 ;  return null ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.ArrayList<TYPE_1> NAME VAR_3 INIT = new java.util.ArrayList < TYPE_1 > ( )  VAR_4 TYPE TYPE_3 NAME VAR_5 INIT = METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) COND VAR_5 != null TYPE TYPE_4<android.os.Bundle,TYPE_5> NAME item IN VAR_6  VAR_3 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 , VAR_7 , VAR_8 ) )  return VAR_3 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 . METHOD_2 ( VAR_4 , new TYPE_2 ( VAR_5 ) ) COND VAR_1 == null  VAR_1 = ! ( METHOD_3 ( ) ) COND VAR_1  VAR_6 . METHOD_4 ( )  METHOD_5 ( )  VAR_6 . METHOD_6 ( )  return VAR_1 ;
MODIFIER private RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE long NAME VAR_5 INIT = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) COND VAR_5 == ( VAR_6 )  return - 1 ; COND VAR_5 == ( - 1 )  VAR_5 = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) COND VAR_5 == ( VAR_6 )  return - 1 ;  return VAR_5 ;
MODIFIER public RETURN android.content.Intent NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == null  return null ; TYPE TYPE_1 NAME VAR_3 INIT = VAR_2 . get ( VAR_1 ) TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( ( ( VAR_5 ) != null ? VAR_5 : VAR_6 ) )  VAR_4 . METHOD_2 ( ( ( VAR_7 ) | ( VAR_8 ) ) ) TYPE TYPE_2 NAME VAR_9 INIT = VAR_10  VAR_4 . METHOD_3 ( new TYPE_3 ( VAR_11 . packageName , VAR_9 . name ) )  return VAR_4 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_1 NAME VAR_4 TYPE long NAME VAR_5 TYPE long NAME VAR_6 COND VAR_3 != null  VAR_3 . METHOD_2 ( )  VAR_5 = VAR_7  VAR_5 = 0 COND VAR_4 != null  VAR_4 . METHOD_2 ( )  VAR_6 = VAR_8  VAR_6 = 0  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_5 , VAR_6 , VAR_9 , VAR_10 ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  s . METHOD_3 ( )  VAR_1 . METHOD_4 ( )  METHOD_5 ( )  VAR_1 . METHOD_6 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND VAR_1 . METHOD_2 ( )  throw new TYPE_1 ( STRING_1 , VAR_1 ) ; COND VAR_1 . METHOD_3 ( ) COND ( VAR_1 . METHOD_4 ( ) ) == false  throw new TYPE_1 ( STRING_2 , VAR_1 ) ;  throw new TYPE_2 ( java.lang.String.format ( STRING_3 , VAR_1 ) ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME context INIT = TYPE_2 . METHOD_2 ( VAR_1 class ) TYPE TYPE_3 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 class )  TYPE_2 . when ( context . METHOD_3 ( ) ) . thenReturn ( VAR_4 )  TYPE_2 . when ( context . METHOD_4 ( VAR_5 ) ) . thenReturn ( VAR_6 )  return context ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE short NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Exception NAME VAR_4  METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) TYPE byte[] NAME error INIT = new byte [ 2 ]  error [ 0 ] = ( ( byte ) ( VAR_1 ) )  error [ 1 ] = ( ( byte ) ( VAR_2 ) )  METHOD_4 ( VAR_5 , error , 0 , 2 )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE int NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . METHOD_3 ( 0 , VAR_3 ) TYPE java.lang.String NAME VAR_5 INIT = null COND VAR_3 < ( VAR_1 . length ( ) )  VAR_5 = VAR_1 . METHOD_3 ( VAR_3 , VAR_1 . length ( ) )  return new TYPE_1 ( VAR_4 , VAR_5 , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) )  TYPE_1 . METHOD_4 ( VAR_1 , STRING_1 )  return ;  METHOD_5 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 )  METHOD_7 ( VAR_2 , VAR_5 ) TYPE TYPE_2 NAME VAR_6 INIT = METHOD_6 ( VAR_2 )  TYPE_3 . METHOD_8 ( VAR_4 , VAR_6 )
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  return ( ( VAR_1 ) == ( VAR_2 ) ? TYPE_2 . METHOD_1 ( b , VAR_1 , false ) : TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_1 ( b , VAR_1 , false ) . append ( CHAR_1 ) , VAR_2 , false ) ) . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1  VAR_1 = METHOD_2 ( ) . get ( 2 , VAR_2 ) TYPE TYPE_1 NAME expected  return ; COND ( VAR_1 != null ) && ( ( VAR_1 . length ) > 0 )  fail ( ( ( ( STRING_1 + ( VAR_1 . length ) ) + STRING_2 ) + ( new java.lang.String ( VAR_1 , STRING_3 ) ) ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE char NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  return false ; TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  i ++ TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 [ i ] TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 [ i ] COND ( ( VAR_3 != null ) && ( VAR_5 != null ) ) && ( ( VAR_3 . METHOD_1 ( VAR_5 ) ) == false )  return false ;  return true ;
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 COND VAR_3  VAR_2 = VAR_1  VAR_2 = METHOD_2 ( VAR_1 ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_4 INIT = new java.util.HashMap < > ( ) TYPE TYPE_1 NAME config IN VAR_2  VAR_4 . METHOD_3 ( config . METHOD_4 ( true ) , config )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME method TYPE java.lang.String NAME VAR_1 INIT = method . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = method . METHOD_3 ( ) . METHOD_4 ( STRING_1 , STRING_2 ) TYPE java.lang.String NAME VAR_3 INIT = ( VAR_2 + STRING_2 ) + VAR_1  TYPE_2 . METHOD_5 ( VAR_3 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = new java.io.File ( STRING_1 )  assertTrue ( VAR_1 . METHOD_2 ( ) )  assertTrue ( VAR_1 . METHOD_3 ( ) )  assertFalse ( VAR_1 . METHOD_4 ( ) )  assertTrue ( VAR_1 . METHOD_5 ( ) )  TYPE_1 . METHOD_6 ( VAR_1 , STRING_2 )  TYPE_1 . METHOD_7 ( VAR_1 , STRING_2 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( )  TYPE_3 . METHOD_2 ( VAR_2 class . METHOD_3 ( ) , new java.lang.Class < ? > [ ] { VAR_3 class , VAR_4 class } , VAR_1 )  VAR_5 . println ( STRING_1 ) TYPE java.lang.IllegalArgumentException NAME VAR_6  java.lang.System.out.println ( STRING_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME address INIT = VAR_2 . METHOD_2 ( VAR_1 ) COND address != null  VAR_2 . METHOD_3 ( ) . METHOD_4 ( address . METHOD_5 ( ) , VAR_3 , VAR_4 )  VAR_2 . METHOD_6 ( address , STRING_1 , null )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_1 ( STRING_1 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_1 , VAR_4 , VAR_5 , VAR_6 )  VAR_1 . METHOD_3 ( new TYPE_4 ( VAR_3 ) )  return VAR_3 ; TYPE java.io.IOException NAME e  throw new TYPE_5 ( e ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3[] NAME VAR_1 INIT = VAR_2 . METHOD_1 ( ) TYPE int NAME count INIT = VAR_1 . length COND count > 0 TYPE java.util.List<TYPE_2> NAME result INIT = TYPE_4 . METHOD_2 ( count ) TYPE TYPE_3 NAME VAR_3 IN VAR_1  result . METHOD_3 ( new TYPE_5 ( VAR_3 ) )  return result ;  return TYPE_6 . METHOD_4 ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( name ) COND VAR_1 == null  VAR_1 = TYPE_3 . METHOD_2 ( name ) COND VAR_1 == null  VAR_1 = TYPE_4 . METHOD_2 ( name ) COND VAR_1 == null  VAR_1 = TYPE_5 . METHOD_2 ( name ) COND VAR_1 == null  VAR_1 = TYPE_6 . METHOD_2 ( name )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = METHOD_2 ( VAR_1 ) TYPE int NAME VAR_5 INIT = METHOD_3 ( VAR_2 , VAR_4 . METHOD_4 ( ) )  assertTrue ( java.lang.String.format ( STRING_1 , VAR_2 ) , ( VAR_5 > 0 ) ) TYPE TYPE_2 NAME call INIT = VAR_4 . METHOD_5 ( VAR_5 ) TYPE java.lang.String NAME VAR_6 INIT = call . format ( new TYPE_3 ( VAR_4 . METHOD_6 ( ) ) )  assertEquals ( VAR_3 , VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME project TYPE java.io.File NAME source TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_5 NAME VAR_3 INIT = project . METHOD_2 ( VAR_1 ) COND ( VAR_3 . METHOD_3 ( ) ) == false TYPE TYPE_6 NAME VAR_4 INIT = new TYPE_6 ( source )  VAR_3 . METHOD_4 ( VAR_4 , false , new TYPE_7 ( VAR_2 , 10 ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME version TYPE byte[] NAME VAR_4 COND ( VAR_5 ) == false  throw new java.lang.RuntimeException ( ( ( VAR_6 . TAG ) + STRING_1 ) ) ;  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , version , VAR_4 ) ;
MODIFIER protected RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( null )  TYPE_2 . METHOD_2 ( null )  TYPE_3 . METHOD_3 ( STRING_1 )  TYPE_3 . METHOD_3 ( STRING_2 )  TYPE_3 . METHOD_3 ( STRING_3 )  TYPE_3 . METHOD_3 ( STRING_4 )  TYPE_3 . METHOD_3 ( STRING_5 )  TYPE_3 . METHOD_3 ( STRING_6 )  server . METHOD_4 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_5 ( ) . METHOD_6 ( )  super . METHOD_1 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . METHOD_3 ( TYPE_3 . getName ( ) , VAR_2 . METHOD_4 ( ) )  VAR_3 . METHOD_3 ( TYPE_4 . getName ( ) , STRING_3 )  VAR_3 . METHOD_3 ( TYPE_5 . getName ( ) , STRING_3 )  VAR_3 . METHOD_3 ( TYPE_6 . getName ( ) , VAR_1 . METHOD_5 ( ) )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) )  throw new java.lang.IllegalArgumentException ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) ) ; COND ( VAR_2 ) == ( METHOD_2 ( ) )  throw new TYPE_1 ( STRING_4 ) ;  METHOD_3 ( VAR_3 , VAR_1 )
MODIFIER private RETURN java.lang.Class<?> NAME METHOD_1 TYPE java.lang.String NAME name COND ( VAR_1 ) == null TYPE TYPE_2[] NAME VAR_2 INIT = METHOD_2 ( )  VAR_1 = new TYPE_3 ( VAR_2 , this )  VAR_3 = true  return VAR_1 . METHOD_3 ( name ) ;  VAR_3 = false
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE long NAME value  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( id )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_6 ( id , VAR_2 ) , value ) TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_7 ( e ) ;  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e  TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) COND TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  e . data = METHOD_5 ( )  return ; COND TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  TYPE_2 . METHOD_2 ( STRING_1 , STRING_3 )  e . data = VAR_2  return ;  VAR_3 = VAR_4  VAR_5 = false
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME address TYPE int NAME VAR_1  TYPE_2 . METHOD_1 ( fd , address , VAR_1 )  this . address = address COND VAR_1 != 0  this . VAR_2 = VAR_1  this . VAR_2 = TYPE_2 . METHOD_2 ( fd )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 COND ! ( VAR_2 . METHOD_2 ( ) )  return null ; TYPE TYPE_4 NAME VAR_5 INIT = TYPE_5 . METHOD_3 ( VAR_2 )  return new TYPE_1 ( VAR_1 , VAR_5 . METHOD_4 ( VAR_3 , VAR_4 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 == null  VAR_2 . METHOD_3 ( ) COND ! ( METHOD_4 ( ) )  VAR_1 . METHOD_5 ( false , 0 )  VAR_2 . METHOD_3 ( ) TYPE long NAME VAR_3 INIT = VAR_4 . METHOD_6 ( ) TYPE long NAME VAR_5 INIT = ( TYPE_2 . METHOD_7 ( ) ) - VAR_3  VAR_1 . METHOD_5 ( true , VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( METHOD_2 ( ) ) == false  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  throw new java.io.IOException ( ) ;  return new TYPE_1 ( VAR_1 , ( - 1 ) , true , true , this , ( - 1 ) , null ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( 1 , STRING_1 )  TYPE_1 . METHOD_2 ( INT_1 , STRING_2 )  TYPE_1 . METHOD_2 ( 1 , STRING_3 )  TYPE_1 . METHOD_2 ( ( ( short ) ( INT_2 ) ) , STRING_4 )  TYPE_1 . METHOD_2 ( ( ( byte ) ( INT_3 ) ) , STRING_5 )  TYPE_1 . METHOD_2 ( FLOAT_1 , STRING_6 )  TYPE_1 . METHOD_2 ( ( - FLOAT_2 ) , STRING_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( VAR_3 ) TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( VAR_5 ) TYPE TYPE_5 NAME VAR_6 INIT = new TYPE_5 ( METHOD_3 ( x ) , VAR_4 , VAR_2 )  METHOD_4 ( VAR_6 ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE int NAME VAR_2 COND TYPE_1 . METHOD_2 ( VAR_1 ) TYPE int NAME VAR_3 INIT = 7 - ( VAR_2 / 8 ) TYPE int NAME VAR_4 INIT = VAR_2 % 8 COND VAR_3 < ( VAR_1 . length )  return ( ( VAR_1 [ VAR_3 ] ) & ( 1 < < VAR_4 ) ) > 0 ;  return false ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value TYPE int NAME VAR_2 TYPE TYPE_3<TYPE_1,TYPE_2> NAME VAR_3 INIT = VAR_4 COND VAR_3 != ( VAR_5 ) TYPE boolean NAME VAR_6  ( size ) ++  VAR_6 = METHOD_2 ( VAR_3 )  ( size ) -- COND VAR_6  METHOD_3 ( VAR_3 . key )  super . METHOD_1 ( VAR_1 , key , value , VAR_2 )
MODIFIER private static RETURN char NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE char NAME VAR_2 TYPE int NAME length INIT = VAR_1 . length ( ) COND length == 1  return VAR_1 . METHOD_2 ( 0 ) ; COND length == 2 TYPE char NAME VAR_3 INIT = VAR_1 . METHOD_2 ( 0 ) COND ( ( VAR_3 == CHAR_1 ) || ( VAR_3 == CHAR_2 ) ) || ( VAR_3 == CHAR_3 ) THEN THEN  return VAR_1 . METHOD_2 ( 1 ) ;  return VAR_2 ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME id TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_3[] NAME VAR_4  return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , id , new android.content.Intent ( VAR_1 , VAR_5 class ) . METHOD_3 ( VAR_6 , id ) . METHOD_3 ( VAR_7 , VAR_2 ) . METHOD_3 ( VAR_8 , VAR_3 ) . METHOD_3 ( VAR_9 , VAR_4 ) , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME expected INIT = METHOD_2 ( ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( null , expected , STRING_1 , STRING_2 , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( )  p . METHOD_3 ( VAR_4 )  assertEquals ( expected , VAR_4 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) == ( VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_5 . get ( STRING_1 , VAR_1 ) COND ! ( VAR_4 . equals ( VAR_1 ) )  return VAR_4 ;  return VAR_5 . get ( STRING_2 , VAR_1 ) ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = false COND ! ( VAR_2 . equals ( VAR_3 ) )  VAR_4 . METHOD_1 ( )  VAR_1 = true TYPE java.lang.NullPointerException NAME ex  loge ( ( ( STRING_1 + ex ) + STRING_2 ) )  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Class<?> NAME VAR_4 TYPE TYPE_3<java.lang.String> NAME VAR_5 TYPE TYPE_4 NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8 COND METHOD_2 ( VAR_4 )  return new TYPE_5 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 != null ) && ( VAR_2 != ( VAR_3 ) )  VAR_4 . METHOD_1 ( VAR_1 , ( VAR_2 + 1 ) )  VAR_4 . METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) TYPE TYPE_5 NAME VAR_4 INIT = ( ( TYPE_5 ) ( METHOD_4 ( ) . get ( VAR_5 ) ) )  METHOD_5 ( new TYPE_6 ( info , VAR_4 , VAR_2 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_6 NAME VAR_4  VAR_4 = VAR_2 . METHOD_2 ( VAR_5 class ) TYPE TYPE_7 NAME e  throw new TYPE_4 ( e ) ;  METHOD_1 ( VAR_1 , key , VAR_4 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Integer[] NAME VAR_1 INIT = new java.lang.Integer [ VAR_2 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_2 ) - 1 )  ++ i  VAR_1 [ i ] = new java.lang.Integer ( i ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_1 ) )  METHOD_3 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( VAR_3 )  return ; COND VAR_1 . METHOD_2 ( this ) TYPE java.lang.Object NAME value IN METHOD_3 ( ) COND value instanceof TYPE_2  ( ( TYPE_2 ) ( value ) ) . METHOD_1 ( VAR_1 )  VAR_1 . METHOD_4 ( this )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = VAR_1 . METHOD_1 ( VAR_3 , new TYPE_2 ( ) , null )  return true ; TYPE TYPE_3 NAME e  TYPE_4 . METHOD_2 ( VAR_4 , ( STRING_1 + ( e . METHOD_3 ( ) ) ) , VAR_5 ) . METHOD_4 ( )  return false ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME a TYPE int NAME b TYPE int[] NAME values INIT = new int [ ] { a , b }  VAR_1 . println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) )  return a > b ? a : b ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME source TYPE TYPE_3 NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE int NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE java.lang.String NAME VAR_6 TYPE java.lang.String NAME VAR_7 TYPE TYPE_4 NAME VAR_8 TYPE TYPE_5 NAME VAR_9 TYPE java.lang.String NAME VAR_10  return new TYPE_6 ( source , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . get ( VAR_4 , STRING_1 ) TYPE TYPE_2<java.lang.String> NAME VAR_5 INIT = new TYPE_3 < java.lang.String > ( ) TYPE java.lang.String NAME VAR_6 IN VAR_3 . METHOD_2 ( VAR_7 )  VAR_5 . METHOD_3 ( VAR_6 )  VAR_5 . METHOD_4 ( VAR_2 ) TYPE TYPE_4 NAME VAR_8 INIT = TYPE_4 . on ( VAR_7 )  VAR_1 . METHOD_5 ( VAR_4 , VAR_8 . METHOD_6 ( VAR_5 ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , false )  VAR_1 . METHOD_3 ( true )  VAR_1 . METHOD_3 ( false )  org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( )  org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_3 ( true )  org.mockito.Mockito.verify ( VAR_3 , TYPE_1 . METHOD_6 ( 2 ) ) . METHOD_2 ( TYPE_1 . METHOD_7 ( ) )  org.junit.Assert.assertEquals ( VAR_4 , VAR_1 . METHOD_4 ( ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME m INIT = c . METHOD_3 ( STRING_2 , ( ( java.lang.Class [ ] ) ( null ) ) ) TYPE java.lang.Integer NAME result INIT = ( ( java.lang.Integer ) ( m . invoke ( null ) ) ) COND result != 5  throw new TYPE_2 ( ( STRING_3 + result ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return ( ( service . METHOD_3 ( ) ) == ( VAR_2 ) ) && ( service . METHOD_4 ( ) . equals ( device ) ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE android.renderscript.Allocation NAME a  android.util.Log.e ( STRING_1 , ( STRING_2 + a ) )  VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( 0 , VAR_1 , a )  VAR_3 = true  VAR_4 = true  VAR_5 = false  VAR_6 = true  VAR_2 . METHOD_3 ( 0 )  return VAR_2 ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.io.File NAME path INIT = METHOD_4 ( VAR_1 . METHOD_5 ( ) )  return new TYPE_4 ( path ) ; TYPE TYPE_5 NAME e  TYPE_6 . METHOD_6 ( path , VAR_1 . METHOD_7 ( ) , VAR_4 )  throw new TYPE_7 ( e ) ;
MODIFIER public static RETURN byte[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) TYPE java.lang.String NAME line IN VAR_1 . METHOD_2 ( STRING_1 )  TYPE_3 . METHOD_3 ( line , VAR_2 )  return VAR_2 . METHOD_4 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME response  VAR_2 . METHOD_2 ( VAR_1 , response ) TYPE TYPE_2 NAME request INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND request != null  VAR_4 = response  METHOD_4 ( VAR_1 , request , null )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( null )  METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 )  METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_3 )  super . METHOD_1 ( )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return null ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return null ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 100 , 100 , VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_3 . METHOD_3 ( new TYPE_3 ( - INT_1 , true ) )  VAR_3 . METHOD_4 ( 0 , 0 , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) )  VAR_3 . METHOD_7 ( ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_4 . METHOD_8 ( VAR_1 , - INT_1 )  METHOD_9 ( VAR_4 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = VAR_6 . get ( VAR_1 ) COND VAR_5 != null  return VAR_5 ; TYPE int NAME id INIT = mRS . METHOD_2 ( METHOD_3 ( mRS ) , VAR_1 , VAR_2 ) COND id == 0  throw new TYPE_3 ( STRING_1 ) ;  VAR_5 = new TYPE_1 ( id , mRS , this , VAR_1 , VAR_2 )  VAR_6 . METHOD_4 ( VAR_1 , VAR_5 )  return VAR_5 ;
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE java.util.ArrayList<TYPE_1> NAME v INIT = ( ( java.util.ArrayList < TYPE_1 > ) ( super . METHOD_1 ( ) ) )  VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , size )  VAR_3 = 0  return v ; TYPE TYPE_3 NAME e  throw new TYPE_4 ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE Main NAME m TYPE boolean NAME VAR_1 COND ! ( Main . METHOD_2 ( STRING_1 ) )  return ;  Main . METHOD_3 ( ) COND VAR_1 COND ! ( Main . METHOD_4 ( STRING_1 ) ) BLOCK BLOCK TYPE int NAME i INIT = 0 COND i < ( VAR_1 ? INT_1 : 1 )  ++ i  m . METHOD_5 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.io.File[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( VAR_3 ) - > TYPE_3 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) TYPE java.io.File NAME source IN VAR_2  METHOD_6 ( source . METHOD_5 ( ) , VAR_4 ) TYPE java.io.File NAME VAR_5 INIT = new java.io.File ( VAR_1 . METHOD_2 ( ) , VAR_6 ) COND VAR_5 . METHOD_7 ( )  METHOD_8 ( VAR_5 . METHOD_5 ( ) )  return this ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File[] NAME VAR_1 TYPE java.io.File[] NAME VAR_2 TYPE java.io.File NAME VAR_3 TYPE boolean NAME VAR_4 TYPE boolean NAME VAR_5 TYPE float NAME VAR_6 TYPE TYPE_1 NAME VAR_7 TYPE TYPE_2[] NAME VAR_8  TYPE_3 . METHOD_1 ( new TYPE_4 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( STRING_1 )  TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , null , true )  TYPE_1 . METHOD_5 ( VAR_1 )  TYPE_2 . METHOD_6 ( )
MODIFIER private RETURN java.io.File NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.io.File NAME VAR_3 INIT = java.io.File . METHOD_2 ( VAR_2 , STRING_1 ) TYPE TYPE_1 NAME VAR_4 INIT = null  VAR_4 = new TYPE_1 ( VAR_3 )  VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  VAR_4 . METHOD_5 ( )  TYPE_2 . METHOD_6 ( VAR_4 )  return VAR_3 ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE byte NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) COND VAR_1 != null TYPE TYPE_2 NAME target INIT = VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) COND target != null  VAR_3 . METHOD_1 ( target )  VAR_4 . METHOD_5 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = context . METHOD_2 ( VAR_3 class ) . METHOD_3 ( VAR_1 ) TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_4 ( context , TYPE_5 . METHOD_5 ( VAR_1 ) , VAR_2 . METHOD_6 ( ) )  TYPE_5 . METHOD_7 ( context , VAR_4 , VAR_1 )  context . METHOD_2 ( VAR_5 class ) . METHOD_8 ( VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Class<?> NAME VAR_4 TYPE TYPE_3<java.lang.String> NAME VAR_5 TYPE TYPE_4 NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8 TYPE TYPE_5 NAME VAR_9 IN VAR_10 TYPE TYPE_1 NAME VAR_11 INIT = VAR_9 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) COND VAR_11 != null  return VAR_11 ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_1 == null  return ; TYPE TYPE_2 NAME key INIT = VAR_1 . METHOD_2 ( ) COND key != null  VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) TYPE TYPE_1 NAME VAR_4 IN VAR_1 . METHOD_5 ( )  METHOD_1 ( VAR_4 , key )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<TYPE_3> NAME VAR_3 TYPE TYPE_4 NAME VAR_4 IN VAR_1 . METHOD_2 ( ) COND VAR_4 . METHOD_3 ( )  METHOD_1 ( ( ( TYPE_1 ) ( VAR_4 ) ) , VAR_2 , VAR_3 ) TYPE TYPE_3 NAME VAR_5 INIT = ( ( TYPE_3 ) ( VAR_4 ) ) COND VAR_2 . METHOD_4 ( VAR_5 )  VAR_3 . METHOD_5 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( STRING_1 , STRING_2 , VAR_3 . TAG , null , null , null , null , false , ( - 1 ) , false , ( - 1 ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( ( ( byte [ ] ) ( org.mockito.Matchers . METHOD_5 ( ) ) ) , TYPE_1 . eq ( 0 ) , TYPE_1 . eq ( 0 ) , org.mockito.Matchers . METHOD_5 ( VAR_5 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 COND ( ( ( VAR_3 ) == null ) || ( VAR_1 == null ) ) || ( ( VAR_4 . METHOD_2 ( ) ) != ( VAR_1 . METHOD_2 ( ) ) )  android.util.Slog.w ( VAR_5 . TAG , ( STRING_1 + VAR_1 ) )  return ;  VAR_6 . METHOD_3 ( VAR_7 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.io.File NAME path INIT = METHOD_4 ( VAR_1 . METHOD_5 ( ) ) COND ( ! ( path . METHOD_1 ( ) ) ) || ( path . METHOD_6 ( ) )  throw new TYPE_2 ( VAR_1 . METHOD_7 ( ) ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME start TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND start == null  throw new java.lang.NullPointerException ( STRING_1 ) ; COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_2 ) ; TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_2 ( start ) . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = VAR_2 . METHOD_4 ( VAR_1 ) . METHOD_3 ( )  return ( VAR_4 - VAR_3 ) <= ( VAR_5 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 , ( ( VAR_3 ) - 1 ) ) TYPE java.lang.String NAME VAR_4 INIT = STRING_1 + ( METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) TYPE TYPE_1 NAME VAR_5 INIT = METHOD_5 ( VAR_4 , VAR_4 , VAR_2 . METHOD_4 ( ) , null )  return VAR_5 ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = mContext . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) TYPE java.lang.String NAME name IN VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = mContext . METHOD_2 ( ) . METHOD_4 ( name , 0 ) COND ( ( VAR_4 . flags ) & ( VAR_5 ) ) != 0  return true ; TYPE TYPE_2 NAME e  return false ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_2 ( ) . length ) > 0 ) ) TYPE TYPE_2 NAME target IN VAR_1 . METHOD_2 ( ) COND ! ( METHOD_1 ( target ) )  continue ; TYPE TYPE_3 NAME status INIT = new TYPE_4 ( target ) . run ( new TYPE_5 ( ) ) COND ( status . METHOD_3 ( ) ) != ( VAR_2 )  fail ( STRING_2 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME pkg COND ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( pkg ) ) == ( VAR_2 ) )  return ( VAR_1 . METHOD_3 ( ) ) == ( pkg . METHOD_3 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME from TYPE java.io.File NAME to TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = new java.lang.String [ ] { VAR_3 , STRING_1 , STRING_2 , from . METHOD_2 ( ) , STRING_3 , to . METHOD_2 ( ) }  VAR_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN java.lang.Object[] NAME METHOD_1 TYPE java.lang.Object[] NAME a INIT = c . METHOD_1 ( ) TYPE int NAME i INIT = 0 COND i < ( a . length )  i ++  a [ i ] = new TYPE_1 < > ( ( ( TYPE_2 < TYPE_3 , TYPE_4 > ) ( a [ i ] ) ) )  return a ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( METHOD_2 ( ) ) == false  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  throw new java.io.IOException ( ) ;  return new TYPE_1 ( VAR_2 , ( - 1 ) , false , false , this , VAR_1 , null ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME i INIT = ( VAR_1 . size ( ) ) - 1 COND i >= 0  i --  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + i ) + STRING_2 ) + ( VAR_1 . get ( i ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME line TYPE int NAME options TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ 5 ] TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  TYPE_2 . METHOD_2 ( line , CHAR_1 , VAR_1 , VAR_2 )  METHOD_3 ( VAR_1 , line , options )
MODIFIER public RETURN void NAME log TYPE java.lang.Throwable NAME VAR_1 TYPE java.lang.String NAME format TYPE java.lang.Object NAME args COND VAR_1 != null  VAR_1 . METHOD_1 ( ) TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) COND format != null  sb.append ( java.lang.String.format ( format , args ) ) COND VAR_1 != null  sb.append ( VAR_1 . toString ( ) )  VAR_2 . println ( sb ) COND VAR_1 != null  fail ( VAR_1 . toString ( ) )
MODIFIER MODIFIER RETURN android.bluetooth.BluetoothDevice[] NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice[] NAME VAR_1 INIT = new android.bluetooth.BluetoothDevice [ 0 ]  VAR_2 COND VAR_3 . METHOD_2 ( )  return new android.bluetooth.BluetoothDevice [ 0 ] ;  VAR_1 = VAR_3 . METHOD_3 ( VAR_1 )  METHOD_4 ( ( STRING_1 + ( VAR_1 . length ) ) )  return VAR_1 ; TYPE TYPE_1 NAME VAR_4  METHOD_5 ( STRING_2 )  return new android.bluetooth.BluetoothDevice [ 0 ] ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 TYPE android.os.Bundle NAME VAR_2 COND ! ( METHOD_2 ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( VAR_4 ) COND VAR_3 != null  TYPE_2 . METHOD_4 ( VAR_3 )  return ;  TYPE_2 . METHOD_5 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER private static RETURN TYPE_1.List<TYPE_2> NAME METHOD_1 TYPE TYPE_1.List<TYPE_3> NAME VAR_1 TYPE TYPE_1.List<TYPE_2> NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_1 . size ( ) ) TYPE TYPE_3 NAME VAR_3 IN VAR_1  VAR_2 . METHOD_3 ( new TYPE_2 ( VAR_3 ) )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME service INIT = METHOD_2 ( )  return service . METHOD_3 ( METHOD_4 ( ) ) ; TYPE android.os.RemoteException NAME ex  ex . METHOD_5 ( ) TYPE java.lang.NullPointerException NAME ex  throw new TYPE_3 ( STRING_1 ) ;  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log . i ( VAR_3 . TAG , STRING_1 ) COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 )  VAR_5 . set ( true )  VAR_6 . set ( true )  return false ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME type COND type == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME item INIT = VAR_1 . get ( type ) COND item == null  throw new java.lang.IllegalArgumentException ( ( STRING_2 + type ) ) ;  return item . METHOD_3 ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE byte[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , w , h )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , data , data . length )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME value COND ( value == INT_1 ) || ( value == INT_2 )  VAR_1 . METHOD_2 ( ( ( VAR_2 ) + ( ( int ) ( value ) ) ) )  VAR_1 . METHOD_3 ( new TYPE_1 ( value ) )
MODIFIER synchronized RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE byte NAME type TYPE byte NAME id TYPE byte[] NAME data COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( ( ( STRING_1 + device ) + STRING_2 ) + type ) + STRING_3 ) + id ) ) COND ! ( METHOD_2 ( device ) )  return false ;  return METHOD_3 ( type , id , data ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) TYPE boolean NAME VAR_3 INIT = false COND METHOD_3 ( VAR_2 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_5 . METHOD_4 ( )  VAR_4 = METHOD_5 ( VAR_4 , VAR_6 )  VAR_7 = TYPE_2 . METHOD_6 ( VAR_4 , VAR_1 )  VAR_3 = true TYPE TYPE_3 NAME e  VAR_8 = false  return VAR_3 ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE com.android.jack.ir.ast.JMethod NAME method IN VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = method . METHOD_3 ( ) COND VAR_3 instanceof TYPE_4  VAR_2 . METHOD_4 ( ( ( TYPE_4 ) ( VAR_3 ) ) . METHOD_5 ( ) )  return VAR_2 . METHOD_6 ( ) ;
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME name COND ( VAR_3 ) < ( TYPE_1 . METHOD_2 ( ) )  return true ; TYPE int NAME VAR_4 INIT = METHOD_3 ( VAR_5 , VAR_1 , VAR_2 , ( - 1 ) ) COND VAR_4 == ( VAR_6 )  return true ;  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , ( ( ( name + STRING_1 ) + VAR_2 ) + STRING_2 ) )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME flags TYPE int NAME userId COND ! ( VAR_3 . METHOD_2 ( userId ) )  return ;  METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_2 , flags , userId )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME method TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = 0 TYPE TYPE_3 NAME VAR_3 IN VAR_1 . METHOD_2 ( )  METHOD_3 ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( method . METHOD_4 ( ) ) ) , VAR_3 ) TYPE TYPE_4 NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) TYPE int NAME action INIT = VAR_3 TYPE TYPE_1 NAME c INIT = METHOD_2 ( VAR_4 , VAR_5 , VAR_6 ) COND c != null COND TYPE_2 . METHOD_3 ( METHOD_4 ( VAR_7 ) , action , 0 )  METHOD_5 ( VAR_8 , action )  METHOD_6 ( VAR_9 , VAR_10 )  android.util.Log.e ( VAR_2 . TAG , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . build ( )  VAR_2 . METHOD_2 ( STRING_1 , VAR_3 , TYPE_3 . METHOD_3 ( null ) )  VAR_2 . METHOD_2 ( STRING_2 , VAR_4 , TYPE_3 . METHOD_3 ( VAR_5 ) )  VAR_2 . METHOD_2 ( STRING_3 , VAR_6 , TYPE_3 . METHOD_3 ( 0 ) )  VAR_2 . METHOD_2 ( STRING_4 , VAR_7 , TYPE_3 . METHOD_3 ( 0 ) )  VAR_2 . METHOD_2 ( STRING_5 , VAR_8 , TYPE_3 . METHOD_3 ( true ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = 100 TYPE long NAME VAR_2 INIT = INT_1  VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , true )  assertTrue ( VAR_3 . METHOD_3 ( ) )  assertTrue ( VAR_3 . METHOD_4 ( ) )  METHOD_5 ( VAR_4 , VAR_3 . METHOD_6 ( ) )  METHOD_5 ( VAR_4 , VAR_3 . METHOD_7 ( ) )  assertEquals ( VAR_1 , VAR_3 . METHOD_8 ( ) )  assertEquals ( VAR_2 , VAR_3 . size ( ) )
MODIFIER public static RETURN int NAME METHOD_1  VAR_1 COND VAR_2  ( VAR_3 ) ++  VAR_4  VAR_4 . METHOD_2 ( )  VAR_5 = null TYPE TYPE_1 NAME p IN VAR_1  TYPE_2 . METHOD_3 ( p )  VAR_2 = false  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) || ( TYPE_1 . METHOD_2 ( VAR_2 ) )  VAR_3 . METHOD_3 ( VAR_4 )  VAR_5 . METHOD_3 ( VAR_4 )  return ;  VAR_3 . METHOD_4 ( context . METHOD_5 ( VAR_6 , VAR_2 ) )  VAR_3 . METHOD_3 ( VAR_7 ) COND VAR_8  VAR_5 . METHOD_3 ( VAR_7 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( )  METHOD_4 ( ) COND VAR_3 . get ( VAR_2 ) . METHOD_5 ( )  METHOD_6 ( VAR_4 )  METHOD_6 ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME type TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 COND ! ( TYPE_3 . METHOD_2 ( VAR_5 ) )  android.util.Log.w ( TYPE_4 . TAG , STRING_1 )  return null ; TYPE TYPE_4 NAME service INIT = METHOD_3 ( ) COND service == null  return null ;  return service . METHOD_1 ( type , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME is INIT = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( is ) COND true TYPE java.lang.String NAME line INIT = VAR_2 . METHOD_2 ( ) COND line != null  VAR_3 . METHOD_3 ( STRING_1 , line )  break ; TYPE java.io.IOException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE java.lang.Object NAME VAR_1 INIT = ( ( TYPE_2 ) ( e . item ) ) . METHOD_2 ( ) COND VAR_1 instanceof TYPE_3  VAR_2 . METHOD_3 ( ( ( TYPE_3 ) ( VAR_1 ) ) , null ) COND VAR_1 instanceof TYPE_4  VAR_2 . METHOD_3 ( ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_4 ( ) , ( ( TYPE_4 ) ( VAR_1 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_2  ( VAR_3 ) -- COND ( VAR_3 ) > 0  return ;  METHOD_2 ( VAR_1 )  TYPE_1 . METHOD_3 ( VAR_4 . METHOD_4 ( ) , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3<java.lang.String,TYPE_4> NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE java.util.List<TYPE_4> NAME values INIT = VAR_2 . get ( STRING_1 )  assertEquals ( 2 , values . size ( ) ) TYPE TYPE_4 NAME VAR_3 INIT = values . get ( 1 )  assertNotNull ( VAR_3 . METHOD_4 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1  METHOD_2 ( )  android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + ( VAR_1 ) ) )  VAR_2 COND METHOD_3 ( )  VAR_1 = TYPE_1 . METHOD_4 ( )  VAR_3 = null COND TYPE_1 . METHOD_5 ( VAR_4 , VAR_1 )  return true ;  return false ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2  this COND ! ( VAR_3 )  throw new java.lang.RuntimeException ( STRING_1 ) ; TYPE int NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_2 ) COND VAR_4 != 0 TYPE TYPE_2 NAME res INIT = new TYPE_2 ( VAR_4 )  METHOD_3 ( res . METHOD_4 ( ) )  return res ;  throw new TYPE_3 ( ( STRING_2 + VAR_1 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2  TYPE_3 . METHOD_2 ( STRING_1 ) TYPE TYPE_4 NAME VAR_3 INIT = TYPE_4 . from ( VAR_1 . METHOD_3 ( ) ) TYPE TYPE_5 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( VAR_5 , VAR_1 , false ) TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_4 , VAR_7 , this )  VAR_8 . METHOD_5 ( VAR_6 )  return VAR_6 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME name COND name . METHOD_3 ( STRING_1 )  return true ;  return ( ( VAR_1 ) != null ) && ( VAR_1 . METHOD_4 ( name ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_1 )  VAR_3 . METHOD_3 ( VAR_2 )  VAR_3 . METHOD_4 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_4 INIT = VAR_3 . METHOD_5 ( ) . get ( STRING_2 )  assertEquals ( 1 , VAR_4 . size ( ) )  assertTrue ( VAR_4 . get ( 0 ) . METHOD_6 ( ) )  METHOD_7 ( VAR_1 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE int NAME format TYPE TYPE_3 NAME VAR_5 TYPE TYPE_3 NAME VAR_6 TYPE boolean NAME VAR_7 TYPE TYPE_4 NAME VAR_8 TYPE TYPE_5 NAME VAR_9 TYPE TYPE_6 NAME VAR_10 TYPE java.lang.String NAME VAR_11 TYPE int NAME VAR_12 TYPE boolean NAME VAR_13 TYPE int NAME VAR_14  TYPE_7 . e ( VAR_15 . TAG , STRING_1 )  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME packageName  TYPE_1 . METHOD_2 ( STRING_1 ) COND ! ( VAR_1 )  return false ; TYPE TYPE_2 NAME p  VAR_2  p = VAR_2 . get ( packageName ) COND ( p == null ) || ( VAR_3 )  return false ;  VAR_4  return ( METHOD_3 ( p , false , false ) ) == ( VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME out COND out . METHOD_2 ( )  out . METHOD_3 ( ( ( ( out . METHOD_3 ( ) ) + ( data [ VAR_1 ] ) ) - ( out . METHOD_4 ( ) ) ) )  out . METHOD_5 ( output , 0 , data [ VAR_1 ] )  output = null
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE int[] NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2[] NAME VAR_3 INIT = new TYPE_2 [ VAR_1 . length ] TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  ++ i  VAR_3 [ i ] = TYPE_3 . METHOD_2 ( VAR_1 [ i ] )  return new TYPE_1 ( 0 , 0 , VAR_2 , VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 TYPE android.os.Bundle NAME VAR_2 COND ! ( METHOD_2 ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( VAR_4 ) COND VAR_3 != null  TYPE_2 . METHOD_4 ( VAR_3 )  return ;  METHOD_5 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( STRING_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( STRING_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , INT_1 , STRING_3 )  assertEquals ( match , result )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME entry  org.junit.Assert.assertEquals ( VAR_1 , VAR_3 )  org.junit.Assert.assertEquals ( VAR_4 , VAR_5 )  org.junit.Assert.assertEquals ( VAR_6 , VAR_7 )  org.junit.Assert.assertEquals ( VAR_8 , entry . set )  org.junit.Assert.assertEquals ( VAR_9 , VAR_10 )  org.junit.Assert.assertEquals ( VAR_11 , entry . uid )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 , ( ( VAR_3 ) - 1 ) ) TYPE java.lang.String NAME VAR_4 INIT = STRING_1 + ( METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) TYPE TYPE_1 NAME VAR_5 INIT = METHOD_5 ( VAR_4 , VAR_4 , VAR_2 . METHOD_4 ( ) , null )  VAR_5 . METHOD_6 ( )  return VAR_5 ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_3 = VAR_1 . METHOD_2 ( )  VAR_4 = VAR_1 . METHOD_3 ( )  VAR_5 = VAR_1 . METHOD_4 ( )  VAR_6 = VAR_1 . METHOD_5 ( )  VAR_7 = VAR_1 . METHOD_6 ( )  VAR_8 = VAR_1 . METHOD_7 ( )  VAR_9 = VAR_1 . METHOD_8 ( )  VAR_10 = VAR_1 . METHOD_9 ( )  return VAR_2 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 ) TYPE java.lang.String NAME line COND ( line = VAR_3 . METHOD_2 ( ) ) != null COND ( line . METHOD_3 ( STRING_1 ) ) || ( line . METHOD_3 ( STRING_2 ) )  return true ;  return false ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME pkg COND ! ( METHOD_2 ( ) )  return false ; COND pkg . equals ( VAR_1 . METHOD_3 ( ) )  return true ; TYPE TYPE_1 NAME project IN VAR_1 . METHOD_4 ( ) COND pkg . equals ( project . METHOD_3 ( ) )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_2 ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_3 ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_4 ) )  assertTrue ( VAR_1 . METHOD_2 ( STRING_5 ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_6 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertFalse ( STRING_1 , VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( )  assertTrue ( STRING_1 , VAR_1 . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( TYPE_3 . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( ) )  VAR_1 = new TYPE_1 ( VAR_2 )  assertFalse ( STRING_2 , VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( )  assertTrue ( STRING_2 , VAR_1 . METHOD_2 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 COND VAR_2  log ( STRING_1 ) COND ( ( VAR_3 ) != null ) && ( ( VAR_4 ) == null )  throw new TYPE_2 ( ( STRING_2 + ( VAR_5 ) ) ) ;  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map NAME VAR_1 TYPE java.lang.Object NAME VAR_2  this . VAR_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( VAR_2 ) )  this . VAR_3 . METHOD_2 ( VAR_1 )  this . VAR_4 . METHOD_2 ( java.lang.Integer . METHOD_5 ( VAR_5 . size ( ) ) )
MODIFIER public static RETURN java.lang.Object NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 )  VAR_3 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_2 . METHOD_4 ( ) ) TYPE TYPE_5 NAME VAR_5 INIT = new TYPE_5 ( VAR_4 ) TYPE java.lang.Object NAME VAR_6 INIT = VAR_5 . METHOD_5 ( )  VAR_7 = VAR_6  VAR_5 . METHOD_3 ( )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = new byte [ INT_1 ] TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  VAR_1 [ i ] = ( ( byte ) ( i ) )  assertEquals ( new TYPE_1 < java.lang.String > ( TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ) , TYPE_3 . METHOD_3 ( VAR_1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) TYPE int NAME count INIT = VAR_1 . METHOD_5 ( )  assertEquals ( 0 , count )  assertTrue ( TYPE_2 . METHOD_3 ( ) . METHOD_6 ( ) )  VAR_1 . METHOD_7 ( )  assertTrue ( TYPE_2 . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 ) . build ( )  assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )  assertTrue ( STRING_1 , VAR_1 . METHOD_4 ( VAR_4 ) )  VAR_1 = VAR_2 . METHOD_2 ( STRING_2 ) . build ( )  assertFalse ( STRING_1 , VAR_1 . METHOD_4 ( VAR_4 ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE boolean NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE boolean NAME VAR_3 INIT = ( v == null ) ? ( ( boolean ) ( m . METHOD_2 ( ) ) ) : ( ( boolean ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME project  VAR_1 = null  VAR_2 = null TYPE TYPE_2 NAME VAR_3 INIT = project . METHOD_2 ( )  VAR_4 = new TYPE_3 < TYPE_4 , java.util.List < TYPE_5 > > ( VAR_5 class )  VAR_6 = VAR_7 . METHOD_3 ( VAR_8 , VAR_3 , VAR_9 , VAR_4 )  METHOD_4 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args COND METHOD_2 ( VAR_3 )  return new TYPE_5 ( VAR_1 , VAR_4 , VAR_5 , VAR_6 , VAR_3 , VAR_2 , args ) ;  return null ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return VAR_3 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return VAR_3 ;  return service . METHOD_1 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( METHOD_2 ( ) )  TYPE_3 . METHOD_3 ( VAR_2 )  return ;  TYPE_3 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  TYPE_1 . when ( VAR_2 . METHOD_2 ( org.mockito.Matchers.eq ( VAR_1 ) ) ) . thenReturn ( true )  METHOD_3 ( )  assertFalse ( VAR_3 . METHOD_4 ( VAR_1 ) )  org.mockito.Mockito.verify ( VAR_2 , TYPE_1 . METHOD_5 ( ) ) . METHOD_2 ( org.mockito.Matchers.eq ( VAR_1 ) )  METHOD_6 ( 4 , false , false )  assertTrue ( VAR_3 . METHOD_4 ( VAR_1 ) )  org.mockito.Mockito.verify ( VAR_2 ) . METHOD_2 ( org.mockito.Matchers.eq ( VAR_1 ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<java.lang.String> NAME VAR_1 TYPE TYPE_3<TYPE_4> NAME VAR_2 TYPE TYPE_5 NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_6 NAME type TYPE TYPE_7<java.lang.String> NAME VAR_5 TYPE TYPE_10 NAME VAR_6 INIT = new TYPE_10 ( ) TYPE TYPE_11 NAME VAR_7 INIT = VAR_6 . METHOD_2 ( VAR_4 )  return VAR_7 != null ? new TYPE_1 ( VAR_6 , VAR_3 , VAR_1 , VAR_2 , VAR_7 . METHOD_3 ( ) , type , VAR_5 ) : null ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 COND ( VAR_1 == null ) || ( VAR_2 == null )  return false ; TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . METHOD_2 ( ) COND VAR_3 . equals ( VAR_4 )  return true ; COND ! ( VAR_3 . METHOD_3 ( STRING_1 ) )  VAR_3 += STRING_1  return VAR_4 . METHOD_4 ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) )  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) )  assertTrue ( STRING_3 , TYPE_1 . METHOD_2 ( CHAR_3 ) )  assertTrue ( STRING_4 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_4 ) ) ) )  assertTrue ( STRING_5 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_5 ) ) ) )  assertTrue ( STRING_6 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_6 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , false )  org.junit.Assert.assertEquals ( null , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( true )  VAR_1 . METHOD_4 ( false )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_2 ( TYPE_1 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = java.io.File . METHOD_2 ( STRING_1 , null )  VAR_2 = new java.io.File ( ( ( TYPE_1 . METHOD_3 ( STRING_2 ) ) + STRING_3 ) ) COND ! ( VAR_2 . METHOD_4 ( ) )  VAR_2 . METHOD_5 ( )  VAR_3 = TYPE_1 . METHOD_3 ( STRING_4 ) . equals ( STRING_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 == null ) || ( VAR_1 . METHOD_2 ( ) )  METHOD_3 ( )  return this ; TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_4 ( VAR_1 , true ) COND VAR_2 == null  throw new TYPE_4 ( ( STRING_1 + VAR_1 ) ) ;  METHOD_5 ( VAR_2 )  return this ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return VAR_2 ;  VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 ) COND ( ( VAR_5 ) != null ) && ( ( VAR_5 . METHOD_3 ( ) ) == false )  TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_6 , VAR_5 . METHOD_6 ( ) , null , null )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE java.lang.Integer NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_1 NAME VAR_4  TYPE_2 . d ( ( STRING_1 + VAR_1 ) ) TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 )  VAR_5 . start ( )  VAR_6 = VAR_5
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME node INIT = ( ( VAR_1 . METHOD_2 ( ) ) != null ) ? VAR_1 . METHOD_2 ( ) : VAR_1  node . METHOD_3 ( VAR_2 )  VAR_1 . METHOD_3 ( VAR_3 )  TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) COND ( VAR_5 ) != null  VAR_5 . METHOD_6 ( )  VAR_5 = null
MODIFIER public final RETURN void NAME METHOD_1  m . METHOD_2 ( ) TYPE TYPE_1 NAME s INIT = m . METHOD_3 ( )  assertFalse ( s . METHOD_4 ( ) )  assertFalse ( s . METHOD_5 ( ) )  assertFalse ( s . METHOD_6 ( ) )  assertTrue ( s . METHOD_7 ( ) )  assertTrue ( s . METHOD_8 ( ) )  assertEquals ( ( - 1 ) , s . METHOD_9 ( ) )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( )  sb.append ( VAR_2 ) . append ( VAR_3 ) . append ( VAR_1 . METHOD_2 ( ) ) . append ( VAR_3 ) . append ( VAR_1 . METHOD_3 ( ) ) . append ( VAR_3 ) . append ( VAR_1 . METHOD_4 ( ) ) . append ( VAR_3 ) . append ( VAR_1 . METHOD_5 ( VAR_4 ) )  return sb . toString ( ) ;
MODIFIER static RETURN java.lang.String NAME format TYPE java.lang.String NAME VAR_1 TYPE java.lang.Object NAME expected TYPE java.lang.Object NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = STRING_1 COND VAR_1 != null  VAR_3 = VAR_1 + STRING_2  return ( ( ( ( VAR_3 + STRING_3 ) + expected ) + STRING_4 ) + VAR_2 ) + STRING_5 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE byte NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  VAR_4 . METHOD_3 ( VAR_5 , VAR_2 ) TYPE byte[] NAME VAR_6 INIT = VAR_4 . METHOD_4 ( VAR_7 ) TYPE TYPE_2 NAME VAR_8 INIT = TYPE_2 . METHOD_2 ( STRING_2 )  VAR_8 . METHOD_3 ( VAR_9 , VAR_3 ) TYPE byte[] NAME VAR_10 INIT = VAR_8 . METHOD_4 ( VAR_6 )  METHOD_5 ( VAR_1 , VAR_7 , VAR_10 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 ) COND ! ( METHOD_3 ( s ) )  result = - 1  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Integer NAME VAR_2  TYPE_1 . d ( ( STRING_1 + VAR_1 ) ) TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_1 , VAR_2 . METHOD_2 ( ) )  VAR_4 . start ( )  VAR_5 = VAR_4
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )  s . METHOD_3 ( 0 , 0 )  VAR_1 . METHOD_4 ( )  METHOD_5 ( )  VAR_1 . METHOD_6 ( )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = VAR_4 TYPE boolean NAME VAR_5 INIT = false TYPE int NAME VAR_6 INIT = 1 TYPE int NAME id INIT = VAR_1 . METHOD_2 ( VAR_7 , VAR_8 , VAR_5 , VAR_6 )  return new TYPE_1 ( id , VAR_1 , VAR_2 , VAR_3 , VAR_5 , VAR_6 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 )  VAR_1 . start ( )  VAR_2 . start ( )  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_2 ( ) TYPE TYPE_3 NAME e  VAR_3 . println ( STRING_1 )
MODIFIER MODIFIER RETURN void NAME test TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( METHOD_2 ( ) , VAR_2 ) COND ( VAR_1 == null ) || ( ! ( VAR_1 . METHOD_3 ( VAR_3 ) ) )  status = VAR_4  status = VAR_5  METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME node TYPE java.lang.String NAME VAR_2 INIT = node . METHOD_2 ( ) TYPE boolean NAME VAR_3 INIT = ( VAR_2 . METHOD_3 ( CHAR_1 ) ) != ( - 1 ) COND VAR_3 && ( ! ( METHOD_4 ( ) ) )  VAR_4 . append ( VAR_5 )  VAR_4 . append ( STRING_1 )  VAR_4 . append ( VAR_2 )  VAR_4 . append ( STRING_2 ) COND VAR_3  VAR_4 . append ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Runnable NAME r TYPE TYPE_1<java.lang.String> NAME VAR_1  VAR_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_1 )  VAR_1 . METHOD_2 ( STRING_2 )  Main . METHOD_4 ( r )  VAR_1 . METHOD_2 ( STRING_3 )  METHOD_5 ( VAR_1 )  VAR_1 . METHOD_2 ( STRING_4 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE TYPE_1 NAME d INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND d == null  return ;  VAR_5 [ 0 ] = VAR_2  VAR_5 [ 1 ] = 0  VAR_5 [ 2 ] = 0  VAR_5 [ 3 ] = 0  VAR_5 [ 4 ] = VAR_3  VAR_5 [ 5 ] = 0  VAR_5 [ 6 ] = 0  VAR_5 [ 7 ] = 0  VAR_5 [ 8 ] = 1
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE TYPE_1 NAME VAR_6 TYPE TYPE_1 NAME VAR_7 TYPE java.lang.String NAME VAR_8 TYPE TYPE_2 NAME VAR_9 INIT = new TYPE_2 ( VAR_8 , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 )  VAR_9 . METHOD_2 ( ) TYPE java.io.IOException NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_1 , VAR_8 , VAR_9 )  org.junit.Assert.assertEquals ( VAR_10 , VAR_2 . METHOD_2 ( ) )  org.junit.Assert.assertEquals ( INT_1 , VAR_2 . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( VAR_7 , VAR_2 . METHOD_4 ( ) )  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( ( ( VAR_7 ) + VAR_1 ) , VAR_2 . METHOD_6 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . getName ( ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( ) . METHOD_4 ( VAR_2 ) COND VAR_3 != null TYPE TYPE_3 NAME VAR_4 INIT = METHOD_5 ( VAR_3 ) COND VAR_4 != null TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . METHOD_6 ( VAR_1 . getName ( ) ) COND VAR_5 != null  return VAR_5 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element COND element . METHOD_2 ( VAR_1 , VAR_2 )  return ; COND ( context . METHOD_3 ( ) . METHOD_4 ( ) ) < 11  return ; COND TYPE_3 . equals ( element . METHOD_5 ( VAR_1 , VAR_3 ) )  return ; TYPE java.lang.String NAME VAR_4 INIT = STRING_1  context . METHOD_6 ( VAR_5 , element , context . METHOD_7 ( element ) , VAR_4 , null )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device  METHOD_2 ( VAR_1 , STRING_1 ) TYPE int NAME VAR_2 INIT = VAR_3 . METHOD_3 ( device ) COND ( VAR_2 != ( VAR_4 ) ) && ( VAR_2 != ( VAR_5 ) )  return false ;  VAR_3 . METHOD_4 ( VAR_6 )  return true ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME is INIT = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( is ) TYPE TYPE_3 NAME project INIT = METHOD_2 ( ) COND true TYPE java.lang.String NAME line INIT = VAR_2 . METHOD_3 ( ) COND line != null  TYPE_4 . METHOD_4 ( VAR_3 , project , line )  break ; TYPE java.io.IOException NAME e BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE int NAME VAR_2  VAR_3 . METHOD_2 ( VAR_4 , VAR_5 )  VAR_6 . METHOD_3 ( VAR_7 )  VAR_6 . METHOD_4 ( VAR_8 )  VAR_6 . METHOD_5 ( ) COND VAR_2 == 0  VAR_6 . METHOD_6 ( )  METHOD_7 ( VAR_1 , VAR_2 )  VAR_3 . METHOD_8 ( VAR_4 , ( ( VAR_5 ) + 1 ) )  VAR_6 . METHOD_9 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME flags TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 COND ( VAR_5 ) != null  return VAR_5 . METHOD_1 ( VAR_1 , flags , VAR_2 , VAR_3 , VAR_4 ) ; TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_2 ( )  VAR_6 COND METHOD_3 ( )  return TYPE_2 . METHOD_4 ( VAR_7 , VAR_1 , flags , VAR_2 , VAR_3 , VAR_4 ) ;  return false ;
MODIFIER final RETURN void NAME METHOD_1 COND ( ( ( pos ) != ( VAR_1 ) ) || ( ( METHOD_2 ( ) ) != ( - 1 ) ) ) && ( ( VAR_2 [ pos ] ) == CHAR_1 )  ( pos ) ++
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony == null  TYPE_2 . e ( VAR_1 . TAG , STRING_1 )  throw new java.lang.RuntimeException ( STRING_1 ) ;  telephony . METHOD_3 ( VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME ex  TYPE_2 . e ( VAR_1 . TAG , STRING_2 , ex )  ex . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE java.util.Map<TYPE_2,TYPE_3> NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( project ) TYPE TYPE_2 NAME VAR_2 IN new java.util.ArrayList < TYPE_2 > ( VAR_1 . METHOD_3 ( ) ) COND METHOD_4 ( VAR_2 )  VAR_1 . METHOD_5 ( VAR_2 )  TYPE_5 . METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) TYPE android.content.Intent NAME VAR_3 INIT = new android.content.Intent ( VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_1 . METHOD_2 ( this , 0 , VAR_3 , 0 ) TYPE TYPE_2 NAME VAR_6 INIT = ( ( TYPE_2 ) ( this . METHOD_3 ( VAR_7 ) ) )  VAR_5 . METHOD_4 ( )  VAR_6 . METHOD_4 ( VAR_5 )  VAR_8 = false
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Bundle NAME VAR_1  super . METHOD_1 ( VAR_1 )  METHOD_2 ( VAR_2 )  METHOD_3 ( )  METHOD_4 ( VAR_3 , VAR_4 , ( - 1 ) )  METHOD_5 ( ) . METHOD_6 ( false )  VAR_5 = new TYPE_1 ( this , METHOD_7 ( ) ) TYPE TYPE_2 NAME VAR_6 INIT = ( ( TYPE_2 ) ( METHOD_8 ( VAR_7 ) ) )  VAR_6 . METHOD_9 ( VAR_5 )  VAR_8 = 0  VAR_9 = new TYPE_3 ( )
MODIFIER public RETURN void NAME run  TYPE_1 . METHOD_1 ( project , VAR_1 , VAR_2 , callback , false , true , false ) TYPE java.lang.IllegalArgumentException NAME e  VAR_3 . set ( new TYPE_2 ( e.getMessage ( ) , TYPE_3 . METHOD_2 ( STRING_1 , VAR_4 ) ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( TYPE_2 . TAG , STRING_1 )  return ;  assertTrue ( TYPE_2 . METHOD_4 ( VAR_1 ) )  METHOD_5 ( VAR_2 , INT_1 , INT_2 , 1 ) TYPE boolean NAME VAR_3 INIT = TYPE_2 . METHOD_6 ( VAR_1 ) COND ! VAR_3  TYPE_1 . METHOD_3 ( TYPE_2 . TAG , STRING_2 )  return ;  METHOD_5 ( VAR_2 , INT_1 , INT_2 , 4 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME in INIT = null  in = new TYPE_1 ( new TYPE_2 ( VAR_1 ) )  return in . METHOD_2 ( ) . METHOD_3 ( ) ; COND in != null  in . METHOD_4 ( )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 )  VAR_3 . METHOD_5 ( method )  VAR_2 . METHOD_7 ( )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME method COND ( method . METHOD_2 ( ) . METHOD_3 ( ) ) > 0  return false ; TYPE TYPE_2 NAME VAR_1 INIT = method . METHOD_4 ( ) COND ! ( VAR_1 . METHOD_5 ( VAR_2 ) )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1  android.util.Log.v ( TAG , STRING_1 ) TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME device INIT = TYPE_2 . METHOD_3 ( VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = device . METHOD_4 ( ( STRING_2 + ( VAR_4 ) ) ) TYPE java.lang.String[] NAME VAR_5 INIT = VAR_3 . METHOD_5 ( STRING_3 ) TYPE java.lang.String NAME VAR_6 IN VAR_5 COND VAR_6 . METHOD_6 ( STRING_4 )  device . METHOD_4 ( java.lang.String.format ( STRING_5 , VAR_4 , VAR_6 ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new java.io.File ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) , STRING_1 ) COND VAR_1 . METHOD_4 ( )  TYPE_2 . METHOD_5 ( VAR_1 )  VAR_2 = new TYPE_3 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . println ( STRING_1 )  VAR_2 . METHOD_2 ( VAR_3 ) COND ! ( METHOD_3 ( ) )  VAR_2 . METHOD_4 ( VAR_4 )  return ; TYPE java.lang.String NAME VAR_5 INIT = STRING_2 TYPE TYPE_1 NAME VAR_6 INIT = METHOD_5 ( VAR_5 , true , false )  METHOD_6 ( VAR_6 )  VAR_1 . println ( STRING_3 )
MODIFIER public RETURN boolean NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  assertEquals ( new TYPE_2 ( i ) , ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) )  VAR_1 . METHOD_3 ( )  METHOD_4 ( ) TYPE TYPE_3 NAME VAR_4 BLOCK BLOCK
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 IN VAR_2 COND ( ( VAR_4 . METHOD_3 ( ) ) == 1 ) && ( VAR_4 . METHOD_4 ( 0 ) . getName ( ) . equals ( VAR_5 ) )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2  this . VAR_1 = VAR_1 COND VAR_2 != null  this . VAR_2 = VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_4 . get ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ) COND VAR_3 != null  METHOD_1 ( VAR_3 , VAR_2 ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( STRING_1 ) ;  throw new TYPE_5 ( STRING_2 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 MODIFIER public RETURN java.lang.String NAME METHOD_2  return VAR_1 ; MODIFIER protected RETURN void NAME METHOD_3 BLOCK BLOCK INIT = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } }  VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_3 ) , STRING_4 )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config TYPE int NAME status COND VAR_1  log ( ( ( ( STRING_1 + config ) + STRING_2 ) + status ) ) TYPE TYPE_2 NAME callback INIT = VAR_2 . get ( config ) . VAR_3 COND callback == null  android.util.Log.e ( VAR_4 . TAG , STRING_3 )  callback . METHOD_2 ( config , status ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_4 . TAG , ( STRING_4 + e ) )
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME provider TYPE int NAME VAR_1 TYPE int NAME size INIT = VAR_2 . size ( ) COND ( VAR_1 < 1 ) || ( VAR_1 > size )  VAR_1 = size + 1  VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) , provider )  VAR_3 . METHOD_3 ( provider . getName ( ) , provider )  TYPE_2 . METHOD_4 ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( true ) )  VAR_1 = VAR_2  transitionTo ( VAR_3 )  return ;  VAR_4 . METHOD_3 ( VAR_5 ) TYPE java.lang.Exception NAME e  android.util.Log.e ( VAR_6 . TAG , ( STRING_1 + ( e.toString ( ) ) ) )  VAR_1 = VAR_7  transitionTo ( VAR_3 )  return ; COND ! ( VAR_8 . start ( ) )  android.util.Log.e ( VAR_6 . TAG , STRING_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME request TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  return new TYPE_5 ( VAR_2 , new TYPE_6 ( VAR_2 , VAR_1 , new TYPE_7 ( VAR_2 ) ) , METHOD_3 ( VAR_2 , request ) , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME provider INIT = TYPE_1 . provider ( ) TYPE TYPE_2 NAME VAR_1 INIT = provider . METHOD_2 ( 2 , TYPE_3 . METHOD_3 ( ) ) TYPE TYPE_4 NAME VAR_2 INIT = TYPE_4 . METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_2 . METHOD_6 ( ) )  VAR_2 . METHOD_7 ( new TYPE_5 ( 0 ) )  assertNotNull ( VAR_2 . METHOD_6 ( ) )  VAR_2 . METHOD_8 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE int[] NAME VAR_1  android.util.Log.d ( VAR_2 , ( STRING_1 + ( ( VAR_1 [ 0 ] ) != 0 ? STRING_2 : STRING_3 ) ) )  this . VAR_3 . METHOD_2 ( ( ( VAR_1 [ 0 ] ) != 0 ) )
MODIFIER protected static final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME obj TYPE TYPE_1[] NAME VAR_1 INIT = VAR_2  VAR_1 TYPE TYPE_1 NAME p TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  i ++  p = VAR_1 [ i ] COND p != null  VAR_1 [ i ] = null COND VAR_4  VAR_5 = new java.lang.RuntimeException ( )  p . METHOD_2 ( obj )  return p ;  return new TYPE_1 ( obj ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE short NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE short NAME VAR_3 INIT = ( v == null ) ? ( ( short ) ( m . METHOD_2 ( ) ) ) : ( ( short ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( ) COND ( ( VAR_3 ) >= INT_1 ) && ( ( VAR_4 ) >= INT_2 )  METHOD_3 ( INT_1 , INT_2 , false , false )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )
MODIFIER private static final RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  return VAR_1 . time ; TYPE TYPE_1 NAME VAR_3 INIT = ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( ) ) )  VAR_3 . METHOD_3 ( true )  return VAR_3 . METHOD_4 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME location TYPE java.lang.String NAME VAR_3 TYPE java.lang.Object NAME data COND VAR_1 == ( VAR_4 )  assertNotNull ( VAR_3 , TYPE_5 . METHOD_2 ( VAR_1 , VAR_3 , VAR_5 ) )  assertNotNull ( VAR_3 , TYPE_5 . METHOD_3 ( VAR_1 , VAR_3 , VAR_5 ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND VAR_1 == ( VAR_3 )  VAR_2 = VAR_4  VAR_2 = VAR_5 COND VAR_1 == ( VAR_6 )  VAR_2 -= VAR_7 COND VAR_1 != ( VAR_8 )  VAR_2 -= VAR_9  return VAR_2 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME pos INIT = METHOD_2 ( true ) COND pos >= 0  VAR_2 = VAR_3 COND VAR_4  android.util.Log.v ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + pos ) )  VAR_5 . METHOD_3 ( pos , VAR_1 )  METHOD_4 ( ( pos + 1 ) )  return ;  VAR_2 = null  METHOD_5 ( VAR_1 , true )  METHOD_4 ( pos )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME info INIT = new TYPE_2 ( VAR_1 , VAR_2 )  VAR_3 = VAR_4  VAR_5 = VAR_6  VAR_7 = VAR_8  VAR_9 = VAR_10 TYPE int NAME VAR_11 INIT = VAR_12  VAR_13 = VAR_14 . METHOD_2 ( ) . METHOD_3 ( VAR_11 )  VAR_15 = TYPE_3 . METHOD_4 ( VAR_13 , VAR_14 . METHOD_2 ( ) . METHOD_3 ( VAR_16 ) )  VAR_17 = TYPE_3 . METHOD_4 ( VAR_13 , VAR_14 . METHOD_2 ( ) . METHOD_3 ( VAR_18 ) )  METHOD_5 ( VAR_19 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) TYPE TYPE_3 NAME p MODIFIER MODIFIER RETURN void NAME METHOD_5 TYPE TYPE_5 NAME VAR_2 TYPE TYPE_5 NAME server  server . METHOD_6 ( true ) INIT = TYPE_3 . METHOD_2 ( VAR_1 , new TYPE_4 ( ) { void METHOD_5 ( TYPE_5 VAR_2 , TYPE_5 server ) { server . METHOD_6 ( true ) ; } } )  METHOD_7 ( p )  VAR_1 . METHOD_8 ( )
MODIFIER MODIFIER RETURN void NAME test  METHOD_1 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) TYPE java.util.List<java.lang.String> NAME result INIT = new java.util.ArrayList ( TYPE_1 . METHOD_2 ( ) . VAR_2 ) COND ( ( result . size ( ) ) > 0 ) && ( result . METHOD_3 ( VAR_3 ) )  status = VAR_4  METHOD_4 ( )  status = VAR_5
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_4 TYPE java.lang.String NAME VAR_5 INIT = VAR_3 . METHOD_2 ( ) TYPE boolean NAME VAR_6 INIT = VAR_1 . equals ( VAR_5 ) COND VAR_6  TYPE_2 . log ( ( VAR_1 + STRING_1 ) ) COND ( VAR_5 == null ) || VAR_6 COND VAR_2  VAR_3 . METHOD_3 ( )  VAR_3 . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = device . METHOD_2 ( new TYPE_3 ( ) . METHOD_3 ( STRING_1 ) )  VAR_3 . METHOD_4 ( VAR_1 ) TYPE TYPE_2 NAME VAR_4 INIT = device . METHOD_2 ( new TYPE_3 ( ) . METHOD_5 ( VAR_2 ) )  VAR_4 . METHOD_6 ( INT_1 )  TYPE_4 . assertTrue ( VAR_4 . METHOD_7 ( ) )  METHOD_8 ( device , VAR_1 . length ( ) )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 = false TYPE boolean NAME VAR_2 INIT = true TYPE TYPE_1 NAME VAR_3 IN VAR_4 . METHOD_2 ( )  VAR_2 &= VAR_3 . METHOD_3 ( true ) COND VAR_2  return ; COND ! ( VAR_5 . METHOD_4 ( VAR_6 . METHOD_5 ( ) , VAR_6 . METHOD_6 ( ) , VAR_6 . METHOD_7 ( ) . METHOD_8 ( ) ) )  return ;  VAR_1 = ! ( VAR_7 . METHOD_9 ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Object[] NAME options INIT = new java.lang.Object [ ] { VAR_3 }  TYPE_1 . METHOD_2 ( null , VAR_1 , VAR_2 , VAR_4 , VAR_5 , null , options , options [ 0 ] )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . METHOD_2 ( INT_1 ) . build ( ) TYPE java.lang.String NAME VAR_2 INIT = STRING_1  VAR_3 . METHOD_3 ( VAR_4 , VAR_2 , VAR_5 , VAR_1 )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_3 ( org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers.eq ( VAR_2 ) , org.mockito.Matchers.eq ( VAR_5 ) , org.mockito.Matchers.eq ( VAR_1 ) )
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , STRING_2 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_3 , VAR_2 , 10 , 12 , INT_1 , INT_2 ) TYPE TYPE_4 NAME VAR_4 INIT = TYPE_4 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_5 INIT = m . METHOD_2 ( VAR_4 ) TYPE TYPE_5 NAME VAR_6 INIT = m . METHOD_2 ( VAR_4 )  METHOD_4 ( VAR_6 , VAR_5 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.io.File NAME VAR_4 INIT = new java.io.File ( VAR_5 , VAR_6 )  VAR_4 = new java.io.File ( VAR_4 , VAR_1 ) COND VAR_2 != null  VAR_4 = new java.io.File ( VAR_4 , VAR_2 )  VAR_4 = new java.io.File ( VAR_4 , VAR_3 )  METHOD_2 ( VAR_4 , VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME i COND ( i < 0 ) || ( i > ( ( VAR_1 ) - 1 ) )  throw new java.lang.RuntimeException ( ) ; COND i > ( ( VAR_1 ) - 1 )  return ;  value [ ( i > > > 5 ) ] ^= VAR_2 [ ( i & INT_1 ) ]
MODIFIER private RETURN void NAME METHOD_1  TYPE_1 . i ( STRING_1 , STRING_2 , VAR_1 . size ( ) , VAR_2 ) COND ! ( VAR_1 . METHOD_2 ( ) ) TYPE java.lang.String NAME VAR_3 INIT = STRING_3 TYPE int NAME id IN VAR_1 . METHOD_3 ( )  VAR_3 = ( VAR_3 + id ) + STRING_4  TYPE_1 . i ( STRING_1 , ( STRING_5 + VAR_3 ) )
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE java.util.List NAME VAR_1 COND ( VAR_1 . size ( ) ) > INT_1  return false ; TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < 10  ++ i  result . append ( ( ( char ) ( VAR_2 . METHOD_2 ( INT_2 ) ) ) )  VAR_1 . METHOD_3 ( result . toString ( ) )  return true ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME w TYPE int NAME h TYPE int NAME d TYPE byte[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , w , h , d )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , data , data . length )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 COND ! ( VAR_1 )  METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) )  VAR_2 = VAR_3 . METHOD_1 ( )  result . METHOD_3 ( )  return result ; TYPE TYPE_2 NAME e  throw new TYPE_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 COND context . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_1 )  VAR_3 = true  return ; COND ( VAR_4 ) == null  VAR_4 = new java.util.ArrayList < TYPE_2 > ( )  VAR_4 . METHOD_4 ( VAR_1 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_1 ( VAR_3 , 0 , VAR_4 ) COND VAR_1 < 0  return null ;  return new java.lang.String ( VAR_3 , 0 , VAR_1 ) ; TYPE java.io.IOException NAME e  TYPE_1 . w ( this , STRING_1 , e )  return null ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = true  METHOD_2 ( true )  METHOD_3 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_3 , VAR_4 , VAR_5 , null , VAR_6 . METHOD_4 ( ) )  METHOD_5 ( VAR_2 )  METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE java.lang.Object NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME callback TYPE TYPE_3 NAME event INIT = METHOD_2 ( VAR_1 , callback ) TYPE int NAME id COND e instanceof TYPE_4  id = TYPE_5 . METHOD_3 ( VAR_3 , ( ( TYPE_4 ) ( e ) ) , VAR_2 )  id = TYPE_5 . METHOD_4 ( VAR_3 , ( ( TYPE_6 ) ( e ) ) )  VAR_4 . METHOD_5 ( id , event )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( this ) COND VAR_1 . METHOD_3 ( )  VAR_2 . METHOD_4 ( this )  VAR_2 . METHOD_5 ( this )  VAR_2 . METHOD_6 ( this )  VAR_1 . METHOD_7 ( VAR_3 )  VAR_1 . METHOD_7 ( VAR_4 )  VAR_5 . METHOD_1 ( VAR_1 )  VAR_1 . METHOD_8 ( this )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  return null ; TYPE TYPE_3 NAME VAR_2 INIT = context . METHOD_2 ( VAR_3 class ) TYPE TYPE_1 NAME VAR_4 IN VAR_2 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_2 . METHOD_4 ( VAR_4 ) COND ( VAR_5 . METHOD_5 ( VAR_6 ) ) && ( ! ( VAR_4 . equals ( VAR_1 ) ) )  return VAR_4 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  new TYPE_1 ( STRING_1 )  fail ( ( STRING_2 + STRING_3 ) ) TYPE TYPE_2 NAME e  assertEquals ( STRING_4 , e . METHOD_2 ( ) . getName ( ) )  assertEquals ( 0 , e . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( VAR_3 ) )  assertEquals ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 , VAR_4 ) )  assertEquals ( null , VAR_2 . METHOD_3 ( VAR_3 , VAR_5 ) )  assertNotNull ( VAR_2 . METHOD_3 ( VAR_6 , VAR_4 ) )  assertNotNull ( VAR_2 . METHOD_3 ( VAR_6 , VAR_5 ) )  METHOD_4 ( VAR_2 . METHOD_3 ( VAR_7 , VAR_5 ) )  assertEquals ( null , VAR_2 . METHOD_2 ( VAR_8 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME w TYPE int NAME h TYPE int NAME d TYPE float[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , w , h , d )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , data , ( ( data . length ) * 4 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME call TYPE TYPE_2 NAME service INIT = METHOD_2 ( ) COND service == null  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ;  return service . METHOD_1 ( device , call . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME method TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME location TYPE java.lang.String NAME VAR_3 TYPE java.lang.Object NAME data COND ( method != null ) && ( VAR_4 . METHOD_2 ( VAR_1 , VAR_5 , method , VAR_2 ) )  return ;  METHOD_1 ( VAR_1 , location , VAR_3 , data )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME type  type = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.NullPointerException NAME ex  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_4 ( ) COND ( VAR_2 . get ( type ) ) != null  throw new java.lang.IllegalArgumentException ( ( STRING_2 + type ) ) ;  VAR_2 . METHOD_5 ( type , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this  VAR_1 = VAR_2  VAR_2 = null COND VAR_1 == null  throw new TYPE_2 ( STRING_1 ) ;  VAR_1 . METHOD_2 ( ) COND true  VAR_1 . METHOD_3 ( )  return ; TYPE TYPE_3 NAME VAR_3 BLOCK BLOCK
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_4 . METHOD_4 ( VAR_1 ) TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( new TYPE_6 ( VAR_3 ) ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_2 , new TYPE_6 ( VAR_1 . METHOD_5 ( ) ) , VAR_4 )  return VAR_5 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) TYPE java.io.File NAME f INIT = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) COND f . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_6 ( VAR_1 ) COND VAR_3 == null  VAR_3 = new TYPE_2 ( VAR_1 )  METHOD_7 ( VAR_3 )  METHOD_8 ( VAR_3 , f )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( STRING_1 ) TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , VAR_3 )  return VAR_4 . METHOD_7 ( ) ; TYPE java.io.IOException NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , VAR_1 , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME id TYPE int NAME VAR_1  VAR_2 . get ( id ) . state = VAR_3  VAR_2 . get ( id ) . VAR_1 = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME a IN VAR_4  a . METHOD_2 ( id , VAR_2 . get ( id ) . VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.util.Set<TYPE_1> NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = null TYPE TYPE_1 NAME project IN VAR_2 TYPE java.io.File NAME VAR_4 INIT = project . METHOD_2 ( ) COND TYPE_2 . METHOD_3 ( VAR_4 , VAR_1 )  VAR_3 = project  break ;  return VAR_3 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = ( VAR_1 . METHOD_3 ( new TYPE_2 ( time ) ) ) ? VAR_1 . METHOD_4 ( ) : 0 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_5 ( )  VAR_4 [ VAR_5 ] = VAR_2  VAR_4 [ VAR_6 ] = VAR_3  METHOD_6 ( VAR_3 ) TYPE int NAME i INIT = 0 COND i < ( VAR_7 )  i ++  VAR_8 [ i ] = true
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = METHOD_2 ( STRING_1 , VAR_4 . METHOD_3 ( ) , VAR_5 )  assertEquals ( VAR_6 , VAR_7 . METHOD_4 ( VAR_8 ) . METHOD_5 ( ) )  VAR_9 . METHOD_6 ( VAR_8 )  TYPE_2 . METHOD_7 ( VAR_10 )  org.mockito.Mockito.verify ( VAR_5 . METHOD_8 ( ) , TYPE_3 . METHOD_9 ( ) ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_11 ) , org.mockito.Matchers . METHOD_10 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE int NAME VAR_2 INIT = INT_1 TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( 10 ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( 10 ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_3 ( VAR_1 , VAR_2 ) TYPE TYPE_3 NAME result INIT = VAR_5 . METHOD_4 ( VAR_3 , VAR_4 ) TYPE TYPE_4 NAME expected BLOCK BLOCK
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE java.lang.String NAME name COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , name ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE java.lang.String NAME id INIT = METHOD_2 ( VAR_4 ) COND ( VAR_2 . start ) == VAR_1  VAR_5 . METHOD_4 ( id ) COND ( VAR_6 ) == VAR_1  VAR_5 . METHOD_5 ( id )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.Object[] NAME VAR_1 INIT = METHOD_2 ( ) COND ( ( VAR_1 . length ) == 1 ) && ( ( VAR_1 [ 0 ] ) instanceof TYPE_1 ) TYPE TYPE_1 NAME item INIT = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) )  VAR_2 = TYPE_2 . METHOD_3 ( VAR_3 , item , ( ( VAR_4 ) && ( VAR_5 . METHOD_4 ( ) ) ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device  android.util.Log.v ( VAR_1 . TAG , ( STRING_1 + device ) ) TYPE TYPE_1 NAME service INIT = VAR_2 COND service != null  return service . METHOD_1 ( device ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return VAR_3 ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME i INIT = 0 TYPE int NAME n INIT = VAR_2 . length COND i < n  i ++ COND VAR_2 [ i ] . equals ( VAR_1 )  return VAR_3 [ i ] ;  return null ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ! ( TYPE_2 . METHOD_2 ( context ) )  TYPE_3 . i ( STRING_1 , STRING_2 )  return false ; COND ! ( TYPE_4 . METHOD_3 ( ) )  return false ;  return ( TYPE_5 . METHOD_4 ( VAR_1 ) ) || ( TYPE_6 . METHOD_5 ( VAR_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( subId ) COND VAR_3 != null COND ! ( TYPE_3 . METHOD_3 ( mContext , VAR_1 , STRING_1 ) )  return ;  VAR_3 . METHOD_1 ( VAR_2 )  loge ( ( STRING_2 + subId ) )  return ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME n TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = n . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_2 , VAR_1 ) COND ( VAR_3 . equals ( VAR_4 ) ) || ( ( VAR_3 . METHOD_3 ( n ) ) >= 0 )  VAR_3 = new TYPE_1 ( VAR_2 , VAR_1 )  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( 0 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 , VAR_4 ) . METHOD_4 ( true ) . build ( )  VAR_5 . METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_6 ) TYPE boolean NAME VAR_7  VAR_7 = VAR_1 . METHOD_7 ( ) TYPE TYPE_3 NAME e  VAR_7 = false  VAR_8 = VAR_7  METHOD_8 ( new TYPE_4 ( VAR_3 , VAR_7 ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME entry INIT = VAR_2 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 ) ) COND entry == null  throw new TYPE_5 ( VAR_1 . toString ( ) ) ;  return new TYPE_6 ( VAR_1 , VAR_2 , entry ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME pkg  this COND ( ! ( METHOD_2 ( VAR_1 , pkg , TYPE_2 . METHOD_3 ( ) ) ) ) || ( METHOD_4 ( ) )  return null ;  METHOD_5 ( TYPE_2 . METHOD_3 ( ) , pkg )  return METHOD_6 ( ) . VAR_2 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) COND VAR_2 != null TYPE TYPE_5 NAME VAR_6 INIT = TYPE_4 . METHOD_3 ( VAR_7 , VAR_8 , VAR_9 , VAR_10 ) COND VAR_6 == null TYPE java.lang.String NAME VAR_11 INIT = java.lang.String.format ( STRING_1 , VAR_1 . name )  context . METHOD_4 ( VAR_12 , VAR_2 , null , context . METHOD_5 ( VAR_2 , VAR_1 ) , VAR_11 , null )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( STRING_2 ) )  server . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_1 INIT = server . METHOD_6 ( STRING_3 ) . METHOD_7 ( )  VAR_1 . METHOD_8 ( STRING_4 , STRING_5 )  assertEquals ( STRING_1 , METHOD_9 ( VAR_1 . METHOD_10 ( ) , VAR_2 ) ) TYPE TYPE_3 NAME request INIT = server . METHOD_11 ( )  METHOD_12 ( request . METHOD_13 ( ) , STRING_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND ! ( METHOD_2 ( ) ) COND ( event . METHOD_3 ( ) ) == ( VAR_1 )  VAR_2 . METHOD_4 ( event . METHOD_5 ( ) , event )  VAR_2 . METHOD_6 ( event . METHOD_5 ( ) , event )
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == 1  return VAR_1 ; TYPE int NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) COND ( VAR_5 ) == ( VAR_6 )  return VAR_3 + VAR_1 ; TYPE int NAME VAR_7 INIT = ( VAR_1 + VAR_3 ) + ( VAR_2 )  return VAR_7 - ( VAR_7 % ( VAR_2 ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = new TYPE_2 ( this , VAR_1 , VAR_3 )  VAR_2 . METHOD_2 ( ) COND VAR_4  android.util.Log.d ( VAR_5 . TAG , ( ( ( STRING_1 + ( VAR_2 . toString ( ) ) ) + STRING_2 ) + ( VAR_1 . toString ( ) ) ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  return ; TYPE TYPE_1[] NAME VAR_2 INIT = new TYPE_1 [ ] { VAR_3 , VAR_4 } TYPE byte[] NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME result INIT = VAR_6 . METHOD_3 ( VAR_2 , null , VAR_5 )  assertEquals ( 1 , result . METHOD_4 ( ) . size ( ) )  assertEquals ( 0 , result . METHOD_5 ( ) . size ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_2 != null  return VAR_2 ; TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 [ VAR_1 . METHOD_3 ( ) ] COND VAR_4 != null  VAR_2 = VAR_3 . get ( VAR_4 ) COND VAR_2 != null  return VAR_2 ;  throw new TYPE_4 ( ( STRING_1 + VAR_1 ) , null , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_3 ( VAR_2 )  VAR_3 . METHOD_4 ( VAR_5 , ( STRING_1 + ( VAR_4 . toString ( ) ) ) )  VAR_3 . METHOD_5 ( VAR_4 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE TYPE_1 NAME info INIT = new TYPE_1 ( id , STRING_1 , VAR_1 , STRING_1 , STRING_1 , 0 , 0 , STRING_1 , 0 , null , 0 , 0 , STRING_1 , VAR_2 )  VAR_3 . METHOD_2 ( id , new TYPE_2 ( mContext , VAR_4 , VAR_5 , VAR_6 , VAR_7 , this , info , VAR_8 , VAR_9 . METHOD_3 ( ) ) )  return info ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_1 , STRING_2 , CHAR_1 , 0 , INT_1 , 6 )  METHOD_4 ( VAR_1 , STRING_3 , INT_2 , INT_3 , CHAR_1 , 0 , INT_1 , 6 )  METHOD_4 ( VAR_1 , STRING_4 , INT_3 , INT_2 , CHAR_1 , 0 , INT_1 , 6 )  METHOD_4 ( VAR_1 , STRING_2 , CHAR_1 , 0 , INT_1 , 6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ( VAR_2 != null ) && ( VAR_2 . equals ( VAR_3 ) ) TYPE java.lang.String NAME VAR_4 INIT = STRING_1  context . METHOD_3 ( VAR_5 , VAR_1 , context . METHOD_4 ( VAR_1 ) , VAR_4 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME r COND ! ( VAR_3 . get ( ) )  return ; TYPE int NAME y INIT = r . y TYPE int NAME VAR_4 INIT = ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME VAR_5 INIT = VAR_6 . METHOD_4 ( )  TYPE_5 . METHOD_5 ( VAR_2 , 0 , VAR_4 , 0 , y , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) TYPE TYPE_2 NAME status INIT = VAR_1 . METHOD_3 ( ) COND status . METHOD_4 ( )  VAR_3 . METHOD_5 ( STRING_1 )  METHOD_6 ( VAR_4 ) . METHOD_7 ( true )  VAR_3 . METHOD_5 ( status . METHOD_8 ( ) )  VAR_3 . METHOD_9 ( )  METHOD_6 ( VAR_4 ) . METHOD_7 ( false )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE TYPE_1 NAME d INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND d == null  return false ; TYPE double NAME VAR_4 INIT = TYPE_2 . METHOD_3 ( VAR_2 ) TYPE float NAME VAR_5 INIT = ( ( float ) ( TYPE_2 . METHOD_4 ( VAR_4 ) ) ) TYPE float NAME VAR_6 INIT = ( ( float ) ( TYPE_2 . METHOD_5 ( VAR_4 ) ) )  d . METHOD_6 ( TYPE_1 . METHOD_7 ( VAR_5 , VAR_6 ) )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) ) TYPE boolean NAME VAR_2 INIT = ! ( VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( VAR_2 )  assertTrue ( ( STRING_1 + ( VAR_1 . METHOD_4 ( ) ) ) , ( ( VAR_1 . METHOD_4 ( ) ) == VAR_2 ) )  VAR_1 . METHOD_6 ( )  server . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ( VAR_1 + ( name ) ) , VAR_3 , VAR_4 )  VAR_5 . METHOD_2 ( VAR_6 . METHOD_3 ( ) )  VAR_7 . METHOD_2 ( VAR_8 . METHOD_3 ( ) )  VAR_9 . METHOD_2 ( VAR_10 . METHOD_3 ( ) )  VAR_11 . METHOD_2 ( VAR_12 . METHOD_3 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ;  METHOD_4 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_5 ( VAR_2 , VAR_3 )  METHOD_6 ( VAR_2 , VAR_5 ) TYPE TYPE_2 NAME VAR_6 INIT = METHOD_5 ( VAR_2 , VAR_5 )  TYPE_3 . METHOD_7 ( VAR_4 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_3 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) ) ) . thenReturn ( null )  VAR_2 . METHOD_5 ( false )  VAR_2 . METHOD_6 ( VAR_3 )  VAR_4 . METHOD_7 ( VAR_5 )  VAR_6 . METHOD_8 ( )  verify ( VAR_7 ) . METHOD_9 ( )  verify ( VAR_7 , METHOD_10 ( ) ) . METHOD_11 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE int NAME x TYPE int NAME y TYPE int NAME VAR_4  VAR_1 . METHOD_2 ( ( VAR_3 != null ? VAR_3 : METHOD_3 ( ) ) )  VAR_1 . METHOD_4 ( VAR_5 . METHOD_5 ( ) )  VAR_1 . METHOD_6 ( VAR_5 . METHOD_5 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  return null ; TYPE TYPE_3 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) COND VAR_2 == null  return null ;  return new TYPE_1 ( VAR_2 , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME call TYPE boolean NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( VAR_1 && ( ( call . METHOD_2 ( ) ) != null ) ) && ( ! ( call . METHOD_3 ( VAR_3 ) ) ) TYPE int NAME subId INIT = VAR_4 . METHOD_4 ( ) . METHOD_5 ( call . METHOD_6 ( ) )  METHOD_7 ( call . METHOD_8 ( ) , call . METHOD_2 ( ) . METHOD_9 ( ) , VAR_2 , subId )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME context TYPE int NAME s INIT = TYPE_2 . METHOD_2 ( context )  TYPE_2 . METHOD_3 ( s , new java.lang.String [ ] { STRING_1 } ) COND ( VAR_1 ) != null  TYPE_2 . METHOD_4 ( s , VAR_1 )  return s ;
MODIFIER public static RETURN void NAME set TYPE java.lang.String NAME key TYPE java.lang.String NAME VAR_1 COND ( key . length ( ) ) > ( VAR_2 )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( VAR_2 ) ) ) ; COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > ( VAR_3 ) )  throw new java.lang.IllegalArgumentException ( ( STRING_2 + ( VAR_3 ) ) ) ; COND VAR_4  TYPE_1 . METHOD_1 ( key )  TYPE_1 . METHOD_2 ( key , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME fd TYPE TYPE_2 NAME pw TYPE java.lang.String[] NAME args  super . METHOD_1 ( fd , pw , args )  pw.println ( ( STRING_1 + ( VAR_1 ) ) )  pw.println ( ( STRING_2 + ( VAR_2 ) ) )  pw.println ( ( STRING_3 + ( VAR_3 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ]  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) )  METHOD_4 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME config IN METHOD_3 ( ) COND TYPE_2 . METHOD_4 ( config ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_5 ( VAR_3 , VAR_4 . METHOD_6 ( ) )  VAR_4 . METHOD_7 ( VAR_2 )  VAR_4 . METHOD_8 ( STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME value INIT = ( ( TYPE_2 ) ( VAR_1 ) ) COND ( value . value ) != null  this . value = value . value
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_5 IN VAR_1 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_6 INIT = VAR_4 . METHOD_4 ( VAR_5 . METHOD_5 ( ) )  VAR_6 . METHOD_6 ( VAR_5 . METHOD_7 ( ) )  VAR_3 . append ( new TYPE_3 ( VAR_5 , VAR_6 ) )
MODIFIER public RETURN void NAME run COND ! ( VAR_1 . METHOD_1 ( ) )  TYPE_1 . METHOD_2 ( VAR_2 ) TYPE TYPE_2 NAME e  return ;  VAR_1 . METHOD_3 ( VAR_3 , VAR_4 , 0 ) TYPE java.lang.Exception NAME e  TYPE_3 . e ( STRING_1 , e )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ;  METHOD_4 ( VAR_2 )  METHOD_5 ( )  VAR_3 . METHOD_6 ( VAR_4 , new java.lang.String [ ] { VAR_5 , VAR_6 } )  VAR_3 . METHOD_7 ( STRING_2 , VAR_7 )  VAR_3 . METHOD_7 ( STRING_3 , VAR_8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE char[] NAME VAR_1 INIT = new char [ 10 ]  STRING_1 . METHOD_2 ( 0 , 10 , VAR_1 , 0 )  pw = new TYPE_1 ( )  VAR_2 = new TYPE_2 ( ( VAR_3 = new TYPE_3 ( pw ) ) , STRING_2 )  VAR_2 . start ( )  pw . METHOD_3 ( VAR_1 )  pw . METHOD_4 ( )  VAR_2 . METHOD_5 ( INT_1 )  assertEquals ( STRING_3 , STRING_1 , new java.lang.String ( VAR_4 ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME text TYPE int NAME start TYPE int NAME VAR_2 TYPE float NAME x TYPE float NAME y TYPE int NAME flags TYPE int NAME VAR_3 TYPE int NAME count INIT = VAR_2 - start TYPE char[] NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( count )  TYPE_2 . METHOD_3 ( text , start , VAR_2 , VAR_4 , 0 )  TYPE_3 . METHOD_1 ( VAR_1 , VAR_4 , 0 , count , x , y , flags , VAR_3 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME size INIT = ( INT_1 * INT_2 ) * INT_2 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  VAR_1 [ i ] = new char [ size ]  i ++ TYPE TYPE_1 NAME VAR_2  size = size / 2 COND size == 0  break ;  VAR_1 [ 0 ] = new char [ INT_3 ]
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . get ( ) COND VAR_3 == null  android.util.Log.e ( VAR_5 . TAG , STRING_1 )  return STRING_2 ; COND VAR_6  android.util.Log.e ( VAR_5 . TAG , STRING_3 )  return STRING_2 ;  return VAR_3 . METHOD_2 ( VAR_7 , VAR_1 , VAR_2 , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_4 )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers.eq ( false ) , TYPE_2 . METHOD_5 ( VAR_6 . String class ) )  assertEquals ( VAR_2 , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = 100 TYPE long NAME VAR_2 INIT = INT_1  VAR_3 = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , false )  assertTrue ( VAR_3 . METHOD_3 ( ) )  assertFalse ( VAR_3 . METHOD_4 ( ) )  METHOD_5 ( VAR_4 , VAR_3 . METHOD_6 ( ) )  METHOD_5 ( VAR_4 , VAR_3 . METHOD_7 ( ) )  assertEquals ( VAR_1 , VAR_3 . METHOD_8 ( ) )  assertEquals ( VAR_2 , VAR_3 . size ( ) )
MODIFIER private final RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME count INIT = VAR_2 . size ( ) TYPE TYPE_2 NAME r INIT = null TYPE int NAME index INIT = - 1 TYPE int NAME i INIT = count - 1 COND i >= 0  i -- TYPE java.lang.Object NAME VAR_3 INIT = VAR_2 . get ( i ) COND VAR_3 == VAR_1  r = ( ( TYPE_2 ) ( VAR_3 ) )  index = i  break ;  return index ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( false )  VAR_1 . METHOD_3 ( null ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_4 ( )  VAR_2 . METHOD_5 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME expected BLOCK BLOCK  VAR_1 . METHOD_6 ( )  VAR_2 . METHOD_5 ( )  fail ( STRING_2 ) TYPE TYPE_3 NAME expected BLOCK BLOCK
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE boolean NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE boolean NAME VAR_3 INIT = ( v == null ) ? ( ( boolean ) ( m . METHOD_2 ( ) ) ) : ( ( boolean ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return VAR_3 ; TYPE TYPE_2 NAME VAR_4 INIT = METHOD_3 ( subId ) COND VAR_4 != null  return VAR_4 . METHOD_4 ( ) . METHOD_5 ( ) ;  return VAR_3 ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME get TYPE int NAME index TYPE int NAME VAR_1 INIT = size ( )  TYPE_2 . METHOD_1 ( index , VAR_1 ) TYPE int NAME start INIT = index * ( size ) TYPE int NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ( start + ( size ) ) , VAR_3 . size ( ) )  return VAR_3 . METHOD_3 ( start , VAR_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE java.lang.String NAME VAR_1  assertEquals ( x , VAR_2 . METHOD_2 ( VAR_1 ) )  assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) , VAR_2 . METHOD_5 ( VAR_1 ) . METHOD_6 ( ) )  assertTrue ( VAR_2 . METHOD_7 ( VAR_1 ) )  assertEquals ( x , VAR_2 . METHOD_8 ( x ) )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 TYPE int NAME userId INIT = TYPE_1 . METHOD_2 ( ) COND ( VAR_2 ) != userId TYPE int NAME VAR_3 INIT = VAR_2  VAR_2 = userId TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . get ( VAR_3 ) COND VAR_4 != null  VAR_4 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_6 INIT = METHOD_4 ( userId )  VAR_6 . METHOD_5 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , VAR_3 )  VAR_1 . METHOD_2 ( VAR_4 )  VAR_1 . METHOD_3 ( false )  VAR_1 . METHOD_4 ( false )  VAR_1 . METHOD_5 ( false )  VAR_1 . METHOD_6 ( FLOAT_1 )  return VAR_1 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4 TYPE TYPE_2 NAME VAR_5 TYPE int NAME VAR_6 COND ( VAR_3 == null ) || ( VAR_2 == null )  return null ; TYPE TYPE_3 NAME VAR_7 INIT = new TYPE_3 ( )  VAR_8 = VAR_3  VAR_9 = VAR_5  return TYPE_4 . METHOD_2 ( VAR_2 , VAR_4 , VAR_7 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE double[] NAME VAR_1 INIT = ( ( double [ ] ) ( VAR_2 . METHOD_2 ( ) ) ) TYPE double[] NAME VAR_3 INIT = VAR_4 . METHOD_3 ( )  assertTrue ( STRING_1 , VAR_3 . equals ( VAR_2 ) )  VAR_3 [ 0 ] = FLOAT_1  assertTrue ( STRING_2 , ( ! ( VAR_3 . equals ( VAR_1 ) ) ) )
MODIFIER static RETURN int NAME METHOD_1 TYPE java.lang.StringBuilder NAME b INIT = new java.lang.StringBuilder ( ) TYPE int NAME i INIT = 0 COND i < 10  i ++ TYPE int NAME d INIT = b . toString ( ) . METHOD_2 ( STRING_1 , 1 )  return b . length ( ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  super . METHOD_1 ( VAR_1 ) TYPE boolean NAME VAR_2 INIT = false COND ( ( VAR_3 ) == ( VAR_4 ) ) && ( VAR_5 )  VAR_2 = true  VAR_1 . METHOD_2 ( VAR_6 ) . METHOD_3 ( VAR_2 )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME from TYPE java.io.File NAME to TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( STRING_1 , STRING_2 , from . METHOD_4 ( ) , STRING_3 , to . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_4 NAME result INIT = VAR_3 . METHOD_6 ( VAR_1 , VAR_4 )  result . METHOD_7 ( ) . METHOD_8 ( ) TYPE TYPE_5 NAME e  throw new TYPE_1 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  return ;  METHOD_3 ( STRING_1 )  METHOD_4 ( )  METHOD_3 ( STRING_2 )  VAR_1 . METHOD_5 ( VAR_2 )  VAR_1 . METHOD_6 ( VAR_2 , null )  assertEquals ( STRING_3 , VAR_3 , VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 )  assertTrue ( METHOD_4 ( VAR_1 , STRING_1 ) )  TYPE_2 . METHOD_5 ( VAR_1 , STRING_1 )  assertFalse ( METHOD_4 ( VAR_1 , STRING_1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Allocation NAME in TYPE TYPE_1.Allocation NAME out TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = METHOD_2 ( VAR_4 ) COND ( VAR_3 != null ) && ( VAR_5 ) TYPE TYPE_1.Allocation NAME VAR_6 INIT = in COND VAR_1  VAR_6 = TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( ) , in . METHOD_5 ( ) )  VAR_6 . METHOD_6 ( out )  VAR_2 . METHOD_7 ( VAR_3 , VAR_6 , out )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 COND ( fd ) != null COND ! ( VAR_2 )  TYPE_1 . METHOD_2 ( ) COND VAR_3  return ;  VAR_3 = true  METHOD_3 ( )  fd = null  return ;
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1  android.util.Slog.v ( VAR_2 . TAG , ( STRING_1 + ( VAR_3 ) ) ) COND ( VAR_3 ) == null  return ;  METHOD_2 ( )  VAR_4 . METHOD_3 ( VAR_3 , METHOD_4 ( ) )
MODIFIER public RETURN java.util.ArrayList<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME VAR_1 INIT = null TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( ) COND VAR_2 != null  VAR_1 = VAR_2 . METHOD_3 ( METHOD_4 ( ) , TYPE_5 . METHOD_5 ( ) ) TYPE android.os.RemoteException NAME ex BLOCK BLOCK  return METHOD_6 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  < java.lang.String > c = java.lang.String : :  org.junit.Assert.assertEquals ( 2 , c . METHOD_3 ( ) . METHOD_4 ( ) . length ) TYPE TYPE_2 NAME m INIT = c . METHOD_3 ( ) . METHOD_5 ( STRING_1 , VAR_1 . Object class )  org.junit.Assert.assertEquals ( boolean . class , m . METHOD_6 ( ) )  TYPE_3 . assertFalse ( m . METHOD_7 ( ) )  TYPE_3 . assertFalse ( m . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( STRING_1 , STRING_2 ) TYPE java.lang.String NAME packageName INIT = STRING_3 TYPE java.lang.String NAME VAR_2 INIT = ( packageName . METHOD_4 ( CHAR_1 , CHAR_2 ) ) + STRING_4 TYPE java.util.Map<java.lang.String,TYPE_1> NAME input INIT = TYPE_2 . METHOD_5 ( )  input . METHOD_3 ( STRING_5 , new TYPE_1 ( true ) . METHOD_6 ( STRING_6 , true ) )  METHOD_7 ( packageName , input )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getName ( ) ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) . METHOD_10 ( VAR_1 . METHOD_11 ( ) ) . METHOD_12 ( VAR_1 . METHOD_13 ( ) ) . METHOD_14 ( VAR_1 . METHOD_15 ( ) ) . METHOD_16 ( VAR_1 . METHOD_17 ( ) ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ; TYPE TYPE_2 NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return ; TYPE TYPE_3 NAME VAR_6 INIT = VAR_3 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_7 INIT = VAR_6 . METHOD_4 ( ) TYPE TYPE_4 NAME VAR_8 INIT = VAR_5 . METHOD_5 ( )  VAR_7 . METHOD_6 ( VAR_8 )  VAR_6 . METHOD_7 ( VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2[] NAME VAR_1 INIT = TYPE_3 . METHOD_3 ( c , null )  METHOD_4 ( VAR_1 [ 0 ] , VAR_1 [ 1 ] )  c . METHOD_5 ( )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) )  return ( ( ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 . equals ( VAR_5 ) ) ) && ( VAR_6 . equals ( VAR_7 ) ) ) && ( VAR_8 . equals ( VAR_9 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) )  return ;  METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_2 )  VAR_3 . METHOD_6 ( STRING_1 , VAR_4 )  VAR_3 . METHOD_6 ( STRING_2 , VAR_5 )  METHOD_7 ( )  METHOD_8 ( )  METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != null  METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( VAR_3 ) )  VAR_4 . METHOD_5 ( )  VAR_5 = null  VAR_6 = false  VAR_7 = false  VAR_8 . METHOD_6 ( false )  VAR_9 . METHOD_7 ( false )  METHOD_8 ( )
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( TYPE_4 . METHOD_5 ( new TYPE_5 ( ) ) )  VAR_1 . METHOD_4 ( TYPE_4 . METHOD_5 ( new TYPE_6 ( VAR_2 , VAR_3 ) ) )  VAR_1 . METHOD_4 ( TYPE_4 . METHOD_5 ( new TYPE_7 ( ) ) )  return VAR_1 ;
MODIFIER public static synchronized RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND ( ( VAR_2 ) != null ) && ( ! ( VAR_1 . equals ( VAR_3 ) ) )  throw new TYPE_2 ( STRING_1 ) ;  return VAR_2 = new TYPE_3 ( VAR_1 ) ;
MODIFIER protected static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_1 NAME b  VAR_4  VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_4 . get ( VAR_4 ) COND VAR_5 != null  return VAR_5 ;  TYPE_4 . METHOD_3 ( ( ( TYPE_5 ) ( VAR_4 . METHOD_4 ( ) ) ) , b )  return b ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( ( VAR_1 . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_2 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . METHOD_5 ( method )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1  return ( ( ( ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) == false ) && ( ( VAR_1 . METHOD_2 ( STRING_2 ) ) == false ) ) && ( ( VAR_1 . METHOD_2 ( STRING_3 ) ) == false ) ) && ( ( VAR_1 . METHOD_2 ( STRING_4 ) ) == false ) ) && ( ( VAR_1 . METHOD_3 ( STRING_5 ) ) == false ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME index TYPE int NAME i INIT = index - 1 COND ( i < 0 ) || ( i >= ( count ) )  throw new TYPE_1 ( index ) ;  return TYPE_2 . METHOD_1 ( this , index ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME info  return new TYPE_1 ( info , new TYPE_3 ( info , null , VAR_1 , VAR_3 , TYPE_4 . METHOD_2 ( ) , false ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME status TYPE TYPE_2 NAME test TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND status == ( VAR_3 )  VAR_2 = VAR_4  VAR_2 = VAR_5 TYPE TYPE_3 NAME VAR_6 INIT = new TYPE_3 ( new TYPE_4 ( test ) , VAR_2 , VAR_1 , null )  VAR_7 . METHOD_2 ( ) . METHOD_3 ( VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<?extendsTYPE_2> NAME VAR_3  super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 )  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( INT_1 ) )  VAR_1 . METHOD_2 ( METHOD_4 ( VAR_2 , VAR_3 ) ) COND ( VAR_3 . size ( ) ) > 0  VAR_1 . METHOD_2 ( METHOD_5 ( VAR_3 , VAR_4 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ( VAR_2 . length ) < VAR_1 ) TYPE byte[] NAME VAR_3 INIT = new byte [ VAR_1 ]  TYPE_1 . METHOD_2 ( VAR_2 , 0 , VAR_3 , 0 , size )  VAR_2 = VAR_3  return this ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME id TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME f INIT = new java.io.File ( VAR_2 , VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = f . METHOD_2 ( ) COND ( f . METHOD_3 ( ) ) && ( ( VAR_3 . METHOD_4 ( ( ( VAR_3 . length ( ) ) - 1 ) ) ) != ( VAR_4 ) )  VAR_3 += VAR_4  VAR_5 . METHOD_5 ( id , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE float NAME x TYPE float NAME y TYPE float NAME VAR_2 TYPE float NAME VAR_3  VAR_4 TYPE long NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( )  METHOD_3 ( METHOD_4 ( this , VAR_1 ) , x , y , VAR_2 , VAR_3 )  TYPE_2 . METHOD_5 ( VAR_5 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE TYPE_1 NAME d INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND d == null  return ;  VAR_7 = TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND VAR_1  android.util.Log.v ( TYPE_2 . TAG , STRING_1 ) COND ( VAR_2 ) != null  android.util.Log.w ( TYPE_2 . TAG , STRING_2 )  VAR_2 = new TYPE_2 ( context )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE long NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE java.lang.Object NAME d TYPE int NAME VAR_6 TYPE TYPE_1 NAME VAR_7  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , d , VAR_6 , VAR_8 )
MODIFIER private static RETURN int NAME METHOD_1 TYPE int[] NAME x TYPE int NAME r INIT = 0 TYPE int NAME i INIT = 0 COND i < 4  i ++  r += x [ i ] TYPE int NAME i INIT = r COND i < 16  i ++  r += i  return r ;
MODIFIER public static RETURN void NAME e TYPE java.lang.String NAME msg TYPE java.lang.Exception NAME e  TYPE_1 . log ( ( ( VAR_1 ) + msg ) ) COND ! ( VAR_2 )  TYPE_2 . println ( ( ( VAR_1 ) + msg ) ) COND e != null  TYPE_2 . println ( e.getMessage ( ) )  return ;  VAR_3 . println ( ( ( VAR_1 ) + msg ) ) COND e != null  e . METHOD_1 ( )
MODIFIER protected final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME h TYPE long NAME VAR_1 TYPE TYPE_2 NAME TYPE_3 INIT = new TYPE_2 ( 1 )  h . METHOD_2 ( TYPE_3 : : METHOD_3 ) COND ( TYPE_3 . METHOD_4 ( ) ) > 0  TYPE_3 . METHOD_5 ( VAR_1 , VAR_2 ) TYPE TYPE_4 NAME e BLOCK BLOCK
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME node COND ! ( VAR_1 )  return new TYPE_1 ( ) ; TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) TYPE TYPE_3 NAME parent INIT = METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 COND parent != null  VAR_3 = parent . METHOD_2 ( ) COND ! ( VAR_2 . METHOD_4 ( VAR_3 ) )  return new TYPE_1 ( ) ;  parent = parent . METHOD_3 ( )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ! ( VAR_2 . equals ( STRING_1 ) ) COND VAR_1 . equals ( VAR_2 )  return true ;  VAR_2 = METHOD_2 ( VAR_2 ) COND VAR_2 == null  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false , false , false )  METHOD_3 ( false )  TYPE_1 . when ( VAR_1 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( VAR_2 class ) ) ) . thenReturn ( false )  assertFalse ( VAR_3 . METHOD_6 ( new TYPE_2 ( ) , false ) )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( method . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( ! ( VAR_2 . METHOD_4 ( this . METHOD_5 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_3 , VAR_1 . METHOD_6 ( ) )  VAR_4 . METHOD_4 ( method )  VAR_3 . METHOD_7 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE long NAME VAR_1  VAR_2 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( id )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_6 ( id , VAR_3 ) , VAR_1 ) TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_7 ( e ) ;  VAR_2 . METHOD_8 ( )
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME format TYPE byte[] NAME VAR_2  VAR_3 COND ( VAR_4 ) == null  throw new TYPE_1 ( STRING_1 ) ;  VAR_4 . METHOD_1 ( VAR_1 , format , VAR_2 )  METHOD_2 ( VAR_1 , 0 , VAR_5 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_6 , ( STRING_2 + ( e.getMessage ( ) ) ) )  METHOD_2 ( VAR_1 , 0 , VAR_7 )
MODIFIER public RETURN java.lang.String NAME getName TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 INIT = METHOD_1 ( device ) COND VAR_1 != null  return VAR_1 . getName ( ) ; TYPE java.lang.String NAME name INIT = device . METHOD_2 ( ) COND name != null  return name ;  return device . METHOD_3 ( ) ;
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_2 > ( ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type IN VAR_3 COND ( VAR_1 . METHOD_2 ( type ) ) || ( type . METHOD_2 ( VAR_1 ) ) TYPE TYPE_3 NAME field IN type . METHOD_3 ( )  VAR_2 . METHOD_4 ( field . METHOD_5 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 class )  TYPE_3 . METHOD_3 ( VAR_1 , VAR_3 )  TYPE_2 . METHOD_4 ( VAR_1 ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_1 )  TYPE_5 . METHOD_5 ( VAR_4 . METHOD_6 ( STRING_1 ) . get ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME url TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( ) COND VAR_2 && ( ( VAR_5 ) != null )  VAR_5 . METHOD_3 ( false )  VAR_5 = null COND ( VAR_5 ) == null  VAR_5 = new TYPE_3 ( this , VAR_3 , VAR_1 )  VAR_5 . METHOD_4 ( url )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 TYPE long NAME time INIT = TYPE_4 . METHOD_3 ( )  VAR_3 = TYPE_5 . METHOD_4 ( VAR_4 ) . METHOD_5 ( )  TYPE_6 . METHOD_6 ( STRING_1 , ( ( TYPE_4 . METHOD_3 ( ) ) - time ) , VAR_5 )  TYPE_3 . METHOD_7 ( VAR_2 )  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE java.util.ArrayList<TYPE_4> NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = TYPE_5 . METHOD_3 ( VAR_2 )  TYPE_6 . METHOD_4 ( VAR_5 , ret )  VAR_3 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ; TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return ;  VAR_3 . set ( VAR_5 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE TYPE_2 NAME VAR_1 COND ! ( VAR_2 )  VAR_3 = test . METHOD_2 ( )  VAR_3 . run ( VAR_4 , test , VAR_1 ) TYPE TYPE_4 NAME e  METHOD_3 ( )  throw e ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME expected TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE java.util.Set<TYPE_2> NAME VAR_2 INIT = new TYPE_3 ( expected ) TYPE java.util.Set<TYPE_2> NAME VAR_3 INIT = new TYPE_3 ( VAR_1 )  assertEquals ( VAR_1 . size ( ) , VAR_3 . size ( ) )  assertEquals ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( s ) TYPE TYPE_2 NAME e INIT = TYPE_3 . METHOD_3 ( VAR_1 ) TYPE int NAME count INIT = 0 COND e . METHOD_4 ( )  assertTrue ( STRING_1 , ( ( e . METHOD_5 ( ) ) == ( VAR_2 [ ( count ++ ) ] ) ) )  assertTrue ( ( STRING_2 + count ) , ( count == ( VAR_2 . length ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) . METHOD_3 ( )  assertFalse ( TYPE_1 . METHOD_4 ( VAR_1 ) )  assertFalse ( TYPE_1 . METHOD_5 ( VAR_1 ) )  assertFalse ( TYPE_1 . METHOD_6 ( VAR_1 ) )  assertFalse ( TYPE_1 . METHOD_7 ( VAR_1 ) )  assertTrue ( TYPE_1 . METHOD_8 ( VAR_1 ) )  assertFalse ( TYPE_1 . METHOD_9 ( VAR_1 ) )  assertFalse ( TYPE_1 . METHOD_10 ( VAR_1 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 TYPE int NAME state TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_2 ( VAR_4 , VAR_1 )  VAR_2 . METHOD_2 ( VAR_5 , state )  VAR_2 . METHOD_2 ( VAR_6 , device )  mContext . METHOD_3 ( VAR_2 , VAR_7 )  log ( ( ( ( ( ( STRING_1 + device ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + state ) )  VAR_8 . METHOD_4 ( device , VAR_9 , state , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  METHOD_3 ( )  VAR_2 . METHOD_4 ( VAR_3 ) TYPE java.lang.Exception NAME VAR_4  VAR_5 = VAR_6  android.util.Log.e ( VAR_7 . TAG , ( STRING_1 + ( VAR_4 . toString ( ) ) ) )  METHOD_5 ( false )
MODIFIER public RETURN TYPE_1<TYPE_2,TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2  VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) COND ( VAR_4 == null ) || ( ( VAR_5 ) < 0 )  return null ;  return TYPE_1 . METHOD_3 ( VAR_5 , VAR_6 ) ;
MODIFIER public final synchronized RETURN TYPE_1 NAME get TYPE TYPE_2 NAME key COND key == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_1 NAME result INIT = VAR_1 . get ( key ) COND result != null  return result ;  result = METHOD_1 ( key ) COND result != null  VAR_1 . METHOD_2 ( key , result )  METHOD_3 ( VAR_2 )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Bundle NAME VAR_1  super . METHOD_1 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 )  VAR_1 . METHOD_2 ( VAR_4 , VAR_5 )  VAR_1 . METHOD_3 ( VAR_6 , VAR_7 )  VAR_1 . METHOD_4 ( VAR_8 , VAR_9 )  VAR_1 . METHOD_4 ( VAR_10 , VAR_11 )  VAR_1 . METHOD_4 ( VAR_12 , VAR_13 )  VAR_1 . METHOD_4 ( VAR_14 , VAR_15 )  VAR_16 . METHOD_1 ( VAR_1 )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME uid TYPE int NAME VAR_1 TYPE int[] NAME VAR_2 TYPE int NAME VAR_3 TYPE int[][] NAME VAR_4 TYPE long NAME VAR_5 TYPE long NAME VAR_6  VAR_3 |= VAR_7  TYPE_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( ) TYPE int NAME VAR_8 INIT = TYPE_2 . METHOD_4 ( uid , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) COND VAR_8 == 0  TYPE_3 . METHOD_5 ( true , VAR_3 )  TYPE_1 . METHOD_6 ( )  return VAR_8 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME key TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME value INIT = VAR_2 . get ( key ) COND ( TYPE_1 . METHOD_2 ( value ) ) || ( TYPE_2 . equals ( value ) )  return STRING_1 ;  value = METHOD_3 ( value ) COND value . METHOD_4 ( VAR_1 )  return value . METHOD_5 ( VAR_1 . length ( ) ) ;  return value ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) )  return ;  assertEquals ( VAR_1 , TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 ) )  METHOD_5 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 )  TYPE_3 . d ( VAR_3 , ( STRING_1 + VAR_2 ) ) TYPE TYPE_4 NAME VAR_4 INIT = ( ( TYPE_4 ) ( context . METHOD_3 ( VAR_5 ) ) )  VAR_4 . METHOD_4 ( VAR_2 , true )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME input TYPE TYPE_3<TYPE_1> NAME VAR_1 INIT = VAR_2 < TYPE_1 > METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 IN TYPE_4 . METHOD_3 ( input )  VAR_1 . METHOD_4 ( VAR_4 . METHOD_1 ( input ) )  return VAR_1 . build ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE float NAME VAR_1 TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 ) COND ( ( VAR_2 == INT_1 ) || ( VAR_2 == INT_2 ) ) || ( VAR_2 == INT_3 )  VAR_3 . METHOD_3 ( ( ( VAR_4 ) + ( ( int ) ( VAR_1 ) ) ) )  VAR_3 . METHOD_4 ( new TYPE_2 . Float ( VAR_1 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME expected TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2  VAR_1 . METHOD_2 ( )  assertEquals ( expected , METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_2 ) )  ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) )  METHOD_6 ( )  METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_4 NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( VAR_1 ) TYPE TYPE_4 NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( VAR_1 ) COND VAR_2 != null  result = TYPE_1 . METHOD_5 ( result , VAR_2 ) COND VAR_3 != null  result = TYPE_1 . METHOD_5 ( result , VAR_3 )  return result ;
MODIFIER public RETURN java.util.List<java.io.File> NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE java.io.File NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) COND ( VAR_4 != null ) && ( VAR_4 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( VAR_4 )  return VAR_1 ;
MODIFIER public RETURN void NAME format TYPE double NAME number TYPE TYPE_1 NAME VAR_1 TYPE int NAME pos TYPE int NAME VAR_2 COND VAR_2 >= ( VAR_3 )  throw new TYPE_2 ( ( STRING_1 + ( name ) ) ) ; TYPE TYPE_3 NAME VAR_4 INIT = METHOD_1 ( number )  VAR_4 . METHOD_2 ( number , VAR_1 , pos , ( ++ VAR_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME n INIT = VAR_1 . size ( ) TYPE int NAME i INIT = 0 COND i < n  ++ i  VAR_1 . METHOD_2 ( i ) . METHOD_3 ( )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . get ( new TYPE_2 ( STRING_1 , STRING_2 ) )  assertEquals ( STRING_3 , VAR_2 [ 0 ] )  assertEquals ( STRING_4 , VAR_3 [ 0 ] )  assertEquals ( STRING_5 , VAR_4 [ 0 ] )  assertEquals ( STRING_6 , VAR_5 [ 0 ] )  assertEquals ( STRING_4 , VAR_6 [ 0 ] )  assertEquals ( STRING_7 , VAR_7 [ 0 ] )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME call COND ( VAR_1 ) == null  VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , TYPE_3 . METHOD_3 ( ( ( TYPE_4 ) ( VAR_4 ) ) ) , VAR_5 ) COND ( call . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) && ( call . METHOD_6 ( ) . equals ( VAR_1 ) )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( VAR_4 class ) TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( )  VAR_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_6 . METHOD_5 ( ) , VAR_3 )  VAR_7 . METHOD_6 ( )  org.junit.Assert.assertEquals ( STRING_1 , VAR_8 , VAR_1 . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME length INIT = METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( os ) TYPE int NAME i INIT = 0 COND i < length  i ++  VAR_2 . METHOD_3 ( VAR_3 [ i ] ) TYPE java.lang.String NAME result INIT = new java.lang.String ( os . METHOD_4 ( ) )  assertEquals ( VAR_1 , result )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.io.File[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) COND VAR_3 != null TYPE java.io.File NAME VAR_4 IN VAR_3 COND ( VAR_4 . METHOD_3 ( ) ) && ( TYPE_3 . METHOD_4 ( VAR_4 . getName ( ) ) ) TYPE TYPE_4 NAME VAR_5 INIT = TYPE_5 . METHOD_5 ( VAR_4 ) COND ( VAR_6 ) != null  METHOD_6 ( VAR_1 , VAR_4 , VAR_5 , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE java.lang.String NAME VAR_1  super . METHOD_1 ( context , VAR_1 ) COND VAR_1 . equals ( VAR_2 )  return new TYPE_1 ( ) ;  return new TYPE_1 ( VAR_1 , VAR_3 ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( e.getMessage ( ) , e ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 MODIFIER public RETURN TYPE_2 NAME METHOD_4 TYPE TYPE_2 NAME VAR_2  return new TYPE_6 ( VAR_2 ) ;  return TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 . METHOD_1 ( ) , new TYPE_5 < TYPE_2 , TYPE_2 > ( ) { public TYPE_2 METHOD_4 ( TYPE_2 VAR_2 ) { return new TYPE_6 ( VAR_2 ) ; } } ) ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 COND VAR_1  log ( STRING_1 ) TYPE TYPE_2 NAME context INIT = VAR_2 . METHOD_2 ( )  context . METHOD_3 ( STRING_2 , STRING_3 )  VAR_3 TYPE android.os.Message NAME response INIT = VAR_4 . METHOD_4 ( VAR_5 )  ( ( TYPE_3 ) ( VAR_2 . METHOD_5 ( ) ) ) . METHOD_6 ( VAR_6 , response )  VAR_3 . METHOD_7 ( ) TYPE TYPE_4 NAME e  log ( STRING_4 )  return VAR_7 ;
MODIFIER public RETURN void NAME METHOD_1  org.junit.Assert.assertEquals ( VAR_1 , TYPE_1 . METHOD_2 ( new java.io.File ( METHOD_3 ( ) , STRING_1 ) ) )  org.junit.Assert.assertEquals ( VAR_2 , TYPE_1 . METHOD_2 ( new java.io.File ( METHOD_3 ( ) , STRING_2 ) ) )  org.junit.Assert.assertEquals ( VAR_3 , TYPE_1 . METHOD_4 ( new java.io.File ( METHOD_3 ( ) , STRING_3 ) ) )  org.junit.Assert.assertEquals ( VAR_4 , TYPE_1 . METHOD_2 ( new java.io.File ( METHOD_3 ( ) , STRING_3 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_3 , new TYPE_4 ( ) , VAR_1 )  org.junit.Assert.assertEquals ( STRING_1 , 1 , VAR_4 . size ( ) ) TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . get ( STRING_2 ) COND VAR_2  TYPE_3 . METHOD_4 ( VAR_5 )  return VAR_5 ;  VAR_3 . METHOD_5 ( )
MODIFIER protected RETURN java.lang.Class<?> NAME METHOD_1 TYPE java.lang.String NAME name TYPE boolean NAME VAR_1 COND ( name . equals ( STRING_1 ) ) || ( name . equals ( STRING_2 ) )  return super . METHOD_1 ( name , VAR_1 ) ; COND name . equals ( STRING_3 )  java.lang.System.out.println ( STRING_4 )  return VAR_2 . METHOD_1 ( STRING_2 , VAR_1 ) ;  return super . METHOD_1 ( name , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE java.util.List<TYPE_4> NAME VAR_2 INIT = METHOD_3 ( info , VAR_3 , VAR_4 )  METHOD_4 ( info , x , null , VAR_2 , VAR_1 ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE double NAME value TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( value ) COND ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 )  VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) )  VAR_2 . METHOD_4 ( new TYPE_1 ( value ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 INIT = context . METHOD_2 ( ) COND ( TYPE_3 . equals ( VAR_1 . METHOD_3 ( ) ) ) && ( TYPE_4 . equals ( VAR_1 . METHOD_4 ( ) ) ) COND ( TYPE_5 . METHOD_5 ( ) ) instanceof TYPE_6  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( STRING_1 , STRING_2 , VAR_3 . TAG , null , null , null , null , false )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( ( ( byte [ ] ) ( org.mockito.Matchers . METHOD_5 ( ) ) ) , TYPE_1 . eq ( 0 ) , TYPE_1 . eq ( 0 ) , org.mockito.Matchers . METHOD_5 ( VAR_5 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) == false ) && ( ( VAR_3 . METHOD_3 ( ) ) == false ) TYPE android.os.Message NAME m INIT = VAR_1 . METHOD_4 ( VAR_2 )  m . obj = device  VAR_1 . METHOD_5 ( m , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME format TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4 TYPE byte[] NAME VAR_5  METHOD_2 ( VAR_1 , VAR_2 , VAR_6 , VAR_7 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_8 , ( STRING_1 + ( e.getMessage ( ) ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_2 != null  return VAR_2 ; TYPE TYPE_1 NAME result INIT = new TYPE_1 ( VAR_1 )  VAR_3 . METHOD_3 ( VAR_1 , result )  return result ;
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( this ) TYPE int NAME VAR_2 INIT = METHOD_2 ( packageName , uid , flags ) COND VAR_3 != null  VAR_3 . METHOD_3 ( packageName , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log . i ( com.android.server.pm.PackageManagerService.TAG , STRING_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE TYPE_2<java.util.Map<java.lang.String,java.lang.String>> NAME VAR_2 COND ! ( VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) )  android.util.Log . METHOD_3 ( VAR_4 . TAG , STRING_1 )  return ; COND VAR_1 . METHOD_4 ( )  android.util.Log.w ( VAR_4 . TAG , STRING_2 )  return ; COND ! ( VAR_5 )  METHOD_5 ( VAR_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return ;  VAR_7 . append ( new TYPE_3 . Float ( VAR_8 , VAR_9 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , ( - VAR_3 ) , ( - VAR_4 ) , VAR_10 ) , false )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) COND VAR_1 > 0 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 != null  TYPE_2 . METHOD_3 ( VAR_5 , 0 , VAR_6 , 0 , VAR_7 )  return VAR_4 . METHOD_4 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_3 ( VAR_2 class ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_4 ( false ) TYPE TYPE_3 NAME VAR_4 INIT = METHOD_5 ( ) TYPE TYPE_4 NAME VAR_5 INIT = METHOD_6 ( VAR_1 , VAR_6 )  METHOD_7 ( null , VAR_3 , null , VAR_1 )  METHOD_8 ( VAR_5 , VAR_3 , VAR_1 , VAR_4 )  METHOD_9 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int[] NAME data INIT = VAR_2 . get ( VAR_1 ) COND data == null TYPE TYPE_2 NAME VAR_3 INIT = TYPE_2 . get ( VAR_1 )  data = new int [ 2 ]  data [ 0 ] = VAR_4 . METHOD_2 ( )  data [ 1 ] = VAR_5 . METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_1 , data )  VAR_6 = data [ 0 ]  VAR_7 = data [ 1 ]
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME result INIT = device . METHOD_2 ( ( STRING_1 + VAR_1 ) )  android.util.Log.d ( TAG , ( STRING_2 + result ) ) TYPE boolean NAME VAR_2 INIT = ( ( VAR_3 . METHOD_3 ( ) ) >= INT_1 ) ? ( result . METHOD_4 ( STRING_3 ) ) && ( result . METHOD_4 ( STRING_4 ) ) : ( result . METHOD_4 ( STRING_5 ) ) && ( result . METHOD_4 ( STRING_6 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE java.lang.Integer NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Integer NAME VAR_4 TYPE java.lang.Integer NAME VAR_5 TYPE TYPE_1 NAME session  VAR_6  session = VAR_7 . get ( VAR_1 ) COND session == null  throw new TYPE_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; TYPE byte[] NAME VAR_8 INIT = VAR_3 . METHOD_2 ( )  session . METHOD_3 ( VAR_2 , VAR_8 , VAR_4 , VAR_5 )
MODIFIER MODIFIER RETURN TYPE_1<TYPE_2>.VAR_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4<TYPE_1<TYPE_2>.VAR_1> NAME i INIT = VAR_3 . METHOD_2 ( ) COND i . METHOD_3 ( ) TYPE TYPE_1<TYPE_2>.VAR_1 NAME entry INIT = i . METHOD_4 ( ) COND VAR_4 . equals ( VAR_2 )  return entry ;  android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + VAR_2 ) )  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND ( VAR_2 ) == null  VAR_2 = TYPE_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_2 . get ( VAR_1 ) COND VAR_3 != null  return VAR_3 ; TYPE TYPE_1 NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_1 , VAR_3 )  return VAR_3 ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context  TYPE_2 . METHOD_2 ( VAR_1 ) COND TYPE_3 . METHOD_3 ( context )  return VAR_2 . METHOD_4 ( VAR_3 , false ) ;  return TYPE_3 . METHOD_5 ( context ) . METHOD_4 ( VAR_3 , false ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE TYPE_2 NAME VAR_5 TYPE TYPE_4 NAME callback TYPE TYPE_5 NAME service INIT = METHOD_2 ( ) COND service == null  return ;  service . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , callback )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 TYPE TYPE_1<TYPE_2<TYPE_3>> NAME VAR_2 INIT = METHOD_2 ( ) TYPE TYPE_2<TYPE_3> NAME VAR_3 IN VAR_2  VAR_3 . METHOD_3 ( VAR_4 , null )  VAR_3 . METHOD_3 ( VAR_5 , null )  TYPE_4 . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = ( VAR_2 ) > ( VAR_3 ) TYPE int NAME VAR_4 INIT = ( VAR_1 ) ? VAR_5 : VAR_6  android.util.Log.w ( VAR_7 . TAG , ( ( ( ( ( STRING_1 + VAR_4 ) + STRING_2 ) + STRING_3 ) + ( VAR_2 ) ) + STRING_4 ) )  METHOD_2 ( VAR_8 , VAR_4 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( new TYPE_5 ( ) . METHOD_3 ( VAR_3 ) )  VAR_2 . METHOD_4 ( ) TYPE TYPE_6 NAME item INIT = VAR_2 . METHOD_5 ( new TYPE_5 ( ) . METHOD_6 ( STRING_2 ) , STRING_3 )  item . METHOD_7 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME msg INIT = METHOD_2 ( VAR_1 ) COND ( VAR_2 ) == null TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( mContext )  VAR_3 . METHOD_3 ( msg )  VAR_3 . METHOD_4 ( false )  VAR_3 . METHOD_5 ( VAR_4 , null )  VAR_2 = VAR_3 . METHOD_6 ( )  VAR_2 . METHOD_7 ( ) . METHOD_8 ( VAR_5 )  VAR_2 . METHOD_3 ( msg )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 )  super . METHOD_1 ( ) TYPE TYPE_2 NAME VAR_1 INIT = null COND TYPE_2 . METHOD_3 ( METHOD_4 ( ) )  VAR_1 = TYPE_2 . METHOD_5 ( )  VAR_2 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ! ( VAR_1 instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) ) COND ( VAR_3 ) != ( VAR_4 )  return false ; COND ! ( VAR_5 . equals ( VAR_6 ) )  return false ;  return TYPE_2 . equals ( VAR_7 , VAR_8 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE long[] NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME m TYPE int[] NAME VAR_4  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE int NAME VAR_5 INIT = VAR_3 - m TYPE int NAME j INIT = VAR_4 . length COND ( -- j ) >= 0  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , ( ( VAR_4 [ j ] ) + VAR_5 ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_5 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args  Main . METHOD_2 ( )  Main . METHOD_3 ( )  Main . METHOD_4 ( )  Main . METHOD_5 ( )  Main . METHOD_6 ( )  Main . METHOD_7 ( )  Main . METHOD_8 ( )  Main . METHOD_9 ( )  Main . METHOD_10 ( )  Main . METHOD_11 ( )  Main . METHOD_12 ( )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE short[] NAME d TYPE int NAME VAR_5  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1  TYPE_1 . d ( VAR_3 , ( STRING_1 + ( VAR_4 ) ) )  VAR_5 = false COND ( VAR_4 ) == ( VAR_6 )  VAR_7 . METHOD_2 ( VAR_8 ) . METHOD_3 ( VAR_9 )  METHOD_4 ( VAR_10 )  break ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 ) COND ! ( METHOD_3 ( s ) )  METHOD_4 ( )  s . METHOD_5 ( 0 , 0 )  VAR_1 . METHOD_6 ( )  METHOD_7 ( )  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( ( VAR_2 ) != null ) && ( ( VAR_3 ) != null ) ) && ( VAR_4 )  VAR_4 = false  VAR_5 . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 )
MODIFIER public static RETURN TYPE_1<TYPE_2,TYPE_3> NAME METHOD_1 TYPE TYPE_4 NAME project TYPE TYPE_2 NAME VAR_1 TYPE TYPE_5 NAME VAR_2 TYPE TYPE_6 NAME type INIT = TYPE_7 . METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME VAR_3 INIT = type . METHOD_3 ( ) TYPE java.lang.String NAME VAR_4 INIT = type . METHOD_4 ( ) COND VAR_4 == null  VAR_4 = type . METHOD_5 ( ) . toString ( ) TYPE java.lang.String NAME VAR_5 INIT = type . METHOD_6 ( project )  return TYPE_8 . METHOD_1 ( VAR_1 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( VAR_2 )  TYPE_2 . assertEquals ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_1 ) )  TYPE_2 . assertEquals ( STRING_2 , VAR_1 . METHOD_4 ( ) )  TYPE_2 . assertEquals ( STRING_2 , TYPE_2 . METHOD_3 ( VAR_1 ) )
MODIFIER public static RETURN java.lang.String[] NAME METHOD_1  return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 , STRING_26 , STRING_27 , STRING_28 , STRING_29 , STRING_30 , STRING_31 , STRING_32 , STRING_33 , STRING_34 , STRING_35 , VAR_1 } ;
MODIFIER public RETURN boolean NAME METHOD_1 COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) COND ! ( METHOD_2 ( ) ) COND VAR_1  android.util.Log.d ( VAR_2 . TAG , ( STRING_2 + STRING_3 ) )  return true ; COND VAR_3  android.util.Log.d ( VAR_2 . TAG , STRING_4 )  METHOD_3 ( VAR_4 , VAR_5 ) COND ( VAR_6 ) != null  METHOD_4 ( )  VAR_7 = false  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_3 ( )  VAR_1 . METHOD_3 ( res ) TYPE java.io.File NAME VAR_2 INIT = TYPE_4 . METHOD_4 ( STRING_1 , STRING_2 ) TYPE java.io.File NAME VAR_3 INIT = new java.io.File ( VAR_2 , STRING_3 ) TYPE TYPE_5<TYPE_1> NAME VAR_4 INIT = VAR_1 . METHOD_5 ( VAR_3 )  assertEquals ( VAR_5 , VAR_4 . status )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) , null , TYPE_4 . of ( ) , TYPE_4 . of ( STRING_2 ) , TYPE_4 . of ( ) )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , true ) ) . METHOD_6 ( VAR_3 class )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( ) TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_4 ( )  VAR_2 = null  VAR_3 = null  VAR_4 = null
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 ) COND ! ( METHOD_3 ( s ) )  result = - 1  s . METHOD_4 ( 0 , 0 )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER private RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 )  TYPE_2 . v ( this , STRING_2 )  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( )  TYPE_4 . METHOD_3 ( ) . METHOD_1 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_1 ( )  VAR_1 = null  TYPE_1 . METHOD_5 ( )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE TYPE_1 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return true ;  VAR_8 = new TYPE_2 ( new TYPE_3 . Float ( VAR_2 , VAR_3 , ( VAR_4 - VAR_2 ) , ( VAR_5 - VAR_3 ) ) )  return ( VAR_8 . METHOD_3 ( ) . METHOD_4 ( ) ) == false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_1 )  TYPE_2 . METHOD_4 ( VAR_3 )  VAR_2 . METHOD_5 ( VAR_4 )  VAR_2 . METHOD_6 ( METHOD_7 ( ) , ( ( VAR_5 ) + 1 ) , 0 )  TYPE_2 . METHOD_4 ( VAR_3 )  METHOD_8 ( VAR_1 . length ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String NAME action INIT = VAR_1 . METHOD_2 ( ) COND TYPE_2 . equals ( action )  TYPE_3 . METHOD_3 ( false ) TYPE android.content.Intent NAME VAR_2 INIT = context . METHOD_4 ( null , new TYPE_4 ( VAR_3 ) ) COND VAR_2 != null  METHOD_5 ( context , VAR_2 ) COND TYPE_5 . equals ( action )  METHOD_5 ( context , VAR_1 )
MODIFIER public static final RETURN int NAME METHOD_1 TYPE TYPE_1 NAME input TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = 1 TYPE int NAME VAR_3 INIT = input . METHOD_2 ( )  input . METHOD_3 ( VAR_1 ) COND ( input . METHOD_4 ( ) ) > 0 TYPE int NAME VAR_4 INIT = input . METHOD_5 ( ) COND VAR_4 != VAR_1  break ;  input . METHOD_3 ( VAR_1 )  VAR_2 ++  input . METHOD_6 ( VAR_3 )  return VAR_2 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME in INIT = new TYPE_1 ( new TYPE_2 ( VAR_1 . in ) ) TYPE java.lang.String NAME line INIT = null TYPE java.lang.StringBuilder NAME VAR_2 INIT = new java.lang.StringBuilder ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( ) COND ( line = in . METHOD_2 ( ) ) != null  TYPE_4 . METHOD_3 ( line , VAR_3 )  VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_4 )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers.eq ( ( ( char ) ( VAR_4 ) ) ) )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_1 ) )  assertEquals ( VAR_2 , true )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.Class<?extendsTYPE_1> NAME target COND target == ( VAR_1 class )  return true ; TYPE java.lang.Class<?extendsTYPE_1> NAME VAR_2 IN VAR_3 COND VAR_2 . METHOD_2 ( target )  return true ;  return false ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE long NAME time TYPE int NAME type TYPE int NAME id TYPE float NAME values TYPE float NAME VAR_2 INIT = FLOAT_1 TYPE float NAME value IN values  VAR_2 += value  VAR_3 = TYPE_1 . METHOD_2 ( VAR_3 , VAR_2 )  VAR_4 . METHOD_1 ( new TYPE_2 ( ( ( time - ( VAR_5 ) ) / FLOAT_2 ) , type , id , values ) )
MODIFIER public synchronized RETURN void NAME start COND ( VAR_1 ) != 0  throw new TYPE_1 ( ) ;  VAR_2 . METHOD_1 ( this )  VAR_3 = false  TYPE_2 . METHOD_2 ( this , VAR_4 , VAR_5 )  VAR_3 = true COND ! ( VAR_3 )  VAR_2 . METHOD_3 ( this ) TYPE java.lang.Throwable NAME VAR_6 BLOCK BLOCK
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME TYPE_2 INIT = new TYPE_1 ( ) COND ! ( TYPE_2 . METHOD_2 ( args ) )  TYPE_2 . METHOD_3 ( )  return ; TYPE boolean NAME VAR_1 INIT = TYPE_2 . run ( )  TYPE_3 . METHOD_4 ( ( VAR_1 ? 0 : 1 ) )
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( )  this TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_3 ( VAR_1 ) COND VAR_3 != null  TYPE_4 . METHOD_4 ( VAR_1 )  TYPE_2 . METHOD_5 ( VAR_2 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME path TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( path ) COND VAR_2 == 0  throw new android.renderscript.RSRuntimeException ( ( STRING_1 + path ) ) ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_2 , VAR_1 , null )  VAR_3 . METHOD_3 ( )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME VAR_1 INIT = METHOD_2 ( )  android.util.Log . i ( TYPE_1 . TAG , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_1 == null ? STRING_3 : TYPE_1 . METHOD_3 ( VAR_3 ) ) ) )  VAR_4 = VAR_5  METHOD_4 ( VAR_6 )  METHOD_5 ( VAR_7 )  METHOD_6 ( VAR_4 , VAR_8 )  METHOD_7 ( VAR_9 , VAR_10 )
MODIFIER MODIFIER RETURN java.util.Map<TYPE_1,java.util.Map<TYPE_2,TYPE_3>> NAME METHOD_1 TYPE TYPE_4<java.util.Map<TYPE_2,TYPE_5>,java.util.Map<TYPE_2,TYPE_3>> NAME VAR_1 MODIFIER public RETURN java.util.Map<TYPE_2,TYPE_3> NAME METHOD_2 TYPE java.util.Map<TYPE_2,TYPE_5> NAME VAR_2  return TYPE_6 . METHOD_3 ( VAR_2 , VAR_3 ) ; INIT = new TYPE_4 < java.util.Map < TYPE_2 , TYPE_5 > , java.util.Map < TYPE_2 , TYPE_3 > > ( ) { public java.util.Map < TYPE_2 , TYPE_3 > METHOD_2 ( java.util.Map < TYPE_2 , TYPE_5 > VAR_2 ) { return TYPE_6 . METHOD_3 ( VAR_2 , VAR_3 ) ; } }  return TYPE_6 . METHOD_3 ( VAR_4 . METHOD_4 ( ) , VAR_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME key TYPE int NAME uid  return ( VAR_1 . METHOD_1 ( key , uid ) ) == ( VAR_2 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME info TYPE java.io.File NAME VAR_1 COND TYPE_2 . METHOD_2 ( )  return ; TYPE int NAME uid INIT = TYPE_2 . METHOD_3 ( ) TYPE java.lang.String[] NAME VAR_2 INIT = TYPE_3 . METHOD_4 ( ) . METHOD_5 ( uid ) COND ( VAR_2 != null ) && ( ( VAR_2 . length ) == 1 )  TYPE_4 . METHOD_6 ( VAR_1 )  TYPE_5 . METHOD_6 ( VAR_1 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  assertEquals ( STRING_1 , ( ( java.lang.String ) ( VAR_1 . get ( VAR_2 ) ) ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  METHOD_3 ( VAR_1 . get ( STRING_2 ) )
MODIFIER protected RETURN boolean NAME METHOD_1 COND VAR_1  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) COND VAR_2  METHOD_2 ( )  VAR_2 = false COND ( VAR_3 ) != null TYPE android.bluetooth.BluetoothDevice NAME device IN VAR_3 . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = METHOD_4 ( device ) COND VAR_4 != ( VAR_5 )  METHOD_5 ( device , VAR_6 )  VAR_3 . METHOD_6 ( )  TYPE_1 . METHOD_7 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME v TYPE byte[] NAME VAR_1 INIT = v . METHOD_2 ( STRING_1 )  METHOD_3 ( ( ( short ) ( VAR_1 . length ) ) ) TYPE byte NAME b IN VAR_1  METHOD_4 ( b ) TYPE TYPE_1 NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME f TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( f , VAR_2 ) TYPE byte[] NAME VAR_3 INIT = METHOD_3 ( VAR_2 )  assertEquals ( TYPE_3 . toString ( VAR_1 . METHOD_1 ( ) ) , TYPE_3 . toString ( VAR_3 ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( context , VAR_1 )  VAR_2 . METHOD_2 ( TYPE_4 . METHOD_3 ( context , VAR_1 ) , VAR_3 )  TYPE_5 . METHOD_4 ( context , VAR_1 )  TYPE_6 . start ( context , VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args COND ! ( TYPE_1 . METHOD_2 ( args ) )  TYPE_1 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( ( - 1 ) ) TYPE long NAME start INIT = TYPE_2 . METHOD_5 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_6 ( ) TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_5 ( )  java.lang.System.out.println ( ( STRING_1 + ( ( VAR_2 - start ) / INT_1 ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2  TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , STRING_1 , VAR_1 ) TYPE int NAME i INIT = 0 TYPE int NAME size INIT = VAR_3 . size ( ) COND i < size  ++ i TYPE TYPE_1 NAME type INIT = VAR_3 . get ( i ) COND type . equals ( VAR_1 )  VAR_3 . set ( i , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener  VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_1 COND ( VAR_3 ) == listener  VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) )  listener . METHOD_4 ( ) . METHOD_5 ( VAR_2 , 0 )  return ;
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME name COND ( VAR_3 ) < ( TYPE_1 . METHOD_2 ( ) )  return true ; TYPE int NAME VAR_4 INIT = METHOD_3 ( VAR_5 , VAR_1 , VAR_2 , ( - 1 ) ) COND VAR_4 == ( VAR_6 )  return true ;  android.util.Slog.w ( com.android.server.am.ActivityManagerService.TAG , ( ( ( name + STRING_1 ) + VAR_2 ) + STRING_2 ) )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_2 ) TYPE TYPE_2<TYPE_3<TYPE_4,TYPE_5>> NAME VAR_3 INIT = METHOD_4 ( ) . METHOD_5 ( ) COND VAR_3 . METHOD_6 ( ) TYPE TYPE_3<TYPE_4,TYPE_5> NAME entry INIT = VAR_3 . METHOD_7 ( )  VAR_1 . METHOD_1 ( entry . METHOD_8 ( ) )  VAR_1 . METHOD_1 ( entry . METHOD_9 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( VAR_1 . METHOD_3 ( VAR_3 ) )  return VAR_4 . METHOD_4 ( ) ;  return ( ( TYPE_1 ) ( scheduler . METHOD_5 ( ) . METHOD_6 ( VAR_5 class ) ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = null TYPE TYPE_3 NAME service INIT = METHOD_2 ( ) COND service != null  VAR_2 = service . METHOD_1 ( VAR_1 ) COND VAR_2 == null  METHOD_3 ( STRING_1 )  return VAR_2 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE android.content.Intent NAME VAR_3 INIT = new android.content.Intent ( VAR_4 )  VAR_3 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_5 , VAR_2 , 0 ) )  VAR_1 . METHOD_4 ( VAR_3 , VAR_6 , VAR_7 , VAR_8 , null , null , VAR_9 , null , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_2 )  args . METHOD_2 ( STRING_2 , 0 )  args . METHOD_2 ( STRING_3 , VAR_3 )  TYPE_2 . METHOD_3 ( VAR_1 , TYPE_3 . METHOD_4 ( args ) . toString ( ) )  TYPE_4 . METHOD_5 ( VAR_4 )
MODIFIER protected final RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  TYPE_1 . METHOD_2 ( VAR_1 )  VAR_2  transitionTo ( VAR_3 )  super . METHOD_1 ( )
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1 NAME in INIT = new TYPE_2 ( new TYPE_3 ( VAR_1 ) ) TYPE TYPE_4 NAME out INIT = new TYPE_4 ( ) TYPE byte[] NAME VAR_2 INIT = new byte [ INT_1 ] TYPE int NAME count COND ( count = in . METHOD_2 ( VAR_2 ) ) != ( - 1 )  out . METHOD_3 ( VAR_2 , 0 , count )  return out . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  METHOD_5 ( METHOD_6 ( METHOD_7 ( x ) ) ) TYPE java.lang.Throwable NAME e  throw METHOD_8 ( x , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 COND ( VAR_1 . METHOD_2 ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) TYPE long NAME VAR_2 INIT = TYPE_1 . METHOD_5 ( )  METHOD_6 ( )  return true ;  TYPE_1 . METHOD_7 ( VAR_2 )  throw new TYPE_2 ( STRING_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class<?> NAME target INIT = VAR_1 class TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( target , null , VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_4 ( VAR_5 , VAR_6 , VAR_7 , 0 , VAR_2 )  VAR_4 . run ( null )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_3 ( VAR_8 class , ( ( target . getName ( ) ) + STRING_1 ) )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( VAR_9 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME v INIT = new TYPE_2 ( )  v . METHOD_2 ( new TYPE_3 ( VAR_1 ) ) COND ( VAR_2 ) != 16  v . METHOD_2 ( new TYPE_4 ( VAR_2 ) )  return new TYPE_5 ( v ) ;
MODIFIER private RETURN byte[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) TYPE int NAME key INIT = VAR_2 . size ( )  VAR_2 . METHOD_3 ( key , VAR_1 )  return METHOD_4 ( key ) ; TYPE int NAME key IN VAR_2 . METHOD_5 ( ) COND VAR_2 . get ( key ) . equals ( VAR_1 )  return METHOD_4 ( key ) ;  return null ;
MODIFIER public RETURN java.util.Map<TYPE_1,java.util.Map<java.lang.String,TYPE_2>> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.util.Map<TYPE_1,java.util.Map<java.lang.String,TYPE_2>> NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_3 class )  VAR_4 TYPE TYPE_1 NAME key IN TYPE_1 . values ( )  VAR_2 . METHOD_3 ( key , METHOD_4 ( key , VAR_1 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 100 , 100 , VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_3 . METHOD_3 ( new TYPE_3 ( 0 , true ) )  VAR_3 . METHOD_4 ( 0 , 0 , VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) )  VAR_3 . METHOD_7 ( ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_4 . METHOD_8 ( VAR_1 )  METHOD_9 ( VAR_4 )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME in TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE int NAME i INIT = in . METHOD_2 ( 0 ) COND i >= 0  i = in . METHOD_2 ( ( i + 1 ) )  VAR_2 . METHOD_4 ( VAR_1 . get ( i ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_1 )  VAR_3 . METHOD_3 ( VAR_2 )  VAR_3 . METHOD_4 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_4 INIT = VAR_3 . METHOD_5 ( ) . get ( STRING_2 )  assertEquals ( 1 , VAR_4 . size ( ) )  assertFalse ( VAR_4 . get ( 0 ) . METHOD_6 ( ) )  METHOD_7 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_1 . METHOD_4 ( VAR_4 class )  VAR_3 . METHOD_5 ( VAR_1 , VAR_2 , false )  METHOD_6 ( VAR_2 , VAR_5 , STRING_1 , false )  METHOD_6 ( VAR_2 , VAR_6 , STRING_2 , false )  METHOD_6 ( VAR_2 , VAR_7 , STRING_3 , false )  METHOD_6 ( VAR_2 , VAR_8 , STRING_4 , false )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = null COND VAR_1 TYPE java.util.Map<java.lang.String,TYPE_2> NAME VAR_3 INIT = VAR_4 . get ( VAR_5 )  VAR_2 = VAR_3 . get ( name ) TYPE java.util.Map<java.lang.String,TYPE_2> NAME VAR_6 INIT = VAR_7 . get ( VAR_5 )  VAR_2 = VAR_6 . get ( name ) COND VAR_2 instanceof TYPE_1  return ( ( TYPE_1 ) ( VAR_2 ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  assertFalse ( METHOD_2 ( STRING_1 , new TYPE_1 ( STRING_2 ) ) )  assertFalse ( METHOD_2 ( STRING_1 , new TYPE_1 ( STRING_2 ) . METHOD_3 ( VAR_1 , STRING_3 ) . METHOD_3 ( VAR_2 , STRING_3 ) ) )  assertFalse ( METHOD_2 ( STRING_4 , new TYPE_1 ( STRING_5 ) ) )  assertFalse ( METHOD_2 ( STRING_4 , new TYPE_1 ( STRING_5 ) . METHOD_3 ( VAR_1 , STRING_6 ) . METHOD_3 ( VAR_2 , STRING_6 ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME request TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( VAR_4 ) TYPE TYPE_5 NAME VAR_6 INIT = VAR_7  METHOD_2 ( VAR_6 , VAR_1 , VAR_2 , VAR_8 , VAR_3 , VAR_5 )
MODIFIER public static synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) )  VAR_1 . METHOD_3 ( true )  VAR_1 = new TYPE_2 ( context )  VAR_1 . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( )  VAR_2 = ( ( TYPE_3 < ? extends TYPE_4 < TYPE_5 > > ) ( VAR_1 . METHOD_1 ( ) ) ) TYPE java.util.Map<TYPE_6,TYPE_4<TYPE_5>> NAME VAR_3 INIT = ( ( java.util.Map < TYPE_6 , TYPE_4 < TYPE_5 > > ) ( VAR_1 . METHOD_1 ( ) ) )  TYPE_7 . METHOD_3 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_3 )  assertEquals ( VAR_4 , VAR_5 . METHOD_4 ( VAR_6 ) . METHOD_5 ( ) )  VAR_3 . METHOD_6 ( VAR_7 , VAR_8 , null )  org.mockito.Mockito.verify ( VAR_5 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( VAR_9 ) ) . METHOD_9 ( VAR_6 , VAR_8 , null )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return null ; TYPE java.lang.String NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 != null TYPE java.lang.String NAME VAR_4 INIT = ( VAR_5 ) + VAR_3  return VAR_6 . METHOD_4 ( VAR_4 , null ) ;  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE int NAME VAR_6 TYPE TYPE_1 NAME VAR_7 INIT = VAR_8 . METHOD_2 ( VAR_1 ) COND VAR_7 == null  return ;  VAR_7 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME pos INIT = ( ( TYPE_2 ) ( METHOD_2 ( VAR_1 ) ) ) COND pos != null  return TYPE_1 . METHOD_3 ( VAR_2 , pos , ( ( TYPE_2 ) ( pos . METHOD_4 ( ) ) ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME element INIT = VAR_1 . METHOD_2 ( ) COND element . METHOD_3 ( VAR_2 , VAR_3 )  context . METHOD_4 ( VAR_4 , element , context . METHOD_5 ( VAR_1 ) , ( STRING_1 + STRING_2 ) , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 2 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 , true , INT_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 )  TYPE_4 . METHOD_2 ( VAR_3 )  VAR_3 . start ( )  VAR_2 . METHOD_3 ( 0 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE android.os.Bundle NAME VAR_3 COND VAR_3 != null  VAR_3 . METHOD_2 ( false )  return TYPE_2 . METHOD_3 ( ) . METHOD_1 ( VAR_1 , VAR_2 , 0 , VAR_3 , null , null , METHOD_4 ( ) ) ; TYPE android.os.RemoteException NAME e BLOCK BLOCK  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = new TYPE_4 ( VAR_5 , VAR_6 , VAR_7 )  TYPE_5 . METHOD_3 ( VAR_8 , ret )  VAR_3 . METHOD_4 ( rr , VAR_1 , ret )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 MODIFIER protected RETURN void NAME METHOD_2 BLOCK BLOCK INIT = new TYPE_1 ( VAR_2 , new TYPE_2 ( STRING_1 ) , VAR_3 , new TYPE_2 ( STRING_2 ) , VAR_4 , STRING_3 ) { protected void METHOD_2 ( ) { } }  VAR_1 . METHOD_3 ( VAR_5 , new TYPE_2 ( STRING_4 ) )  return VAR_1 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = ( ( VAR_2 . METHOD_1 ( ) ) != null ) ? VAR_2 . METHOD_1 ( ) : 1 COND ( VAR_1 == ( - 1 ) ) && ( ( VAR_3 ) != ( VAR_4 ) )  VAR_1 = METHOD_2 ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE int NAME VAR_2 INIT = INT_1 TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( 10 ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( 100 ) . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_4 ( VAR_1 , VAR_2 )  VAR_5 . METHOD_5 ( true )  VAR_5 . METHOD_6 ( VAR_3 , VAR_4 )  fail ( STRING_2 ) TYPE TYPE_3 NAME VAR_6 BLOCK BLOCK TYPE java.lang.Exception NAME e  fail ( ( e + STRING_3 ) )
MODIFIER private RETURN void NAME println TYPE java.lang.String NAME format TYPE java.lang.Object NAME args COND ( VAR_1 ) != ( VAR_2 ) COND ! ( format . METHOD_1 ( STRING_1 ) )  format += STRING_1  VAR_3 . METHOD_2 ( format , args )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1<?superTYPE_2> NAME c TYPE int NAME VAR_1 COND c == null  throw new java.lang.NullPointerException ( ) ; COND c == ( this )  throw new java.lang.IllegalArgumentException ( ) ; TYPE int NAME n INIT = 0 TYPE TYPE_2 NAME e COND ( n < VAR_1 ) && ( ( e = METHOD_2 ( ) ) != null )  c . METHOD_3 ( e )  ++ n  return n ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME VAR_4  VAR_5 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) )  VAR_5 . METHOD_4 ( STRING_1 )  assertEquals ( ( STRING_2 + VAR_1 ) , VAR_2 , VAR_5 . format ( VAR_4 ) )  VAR_5 . METHOD_4 ( STRING_3 )  assertEquals ( ( STRING_4 + VAR_1 ) , VAR_3 , VAR_5 . format ( VAR_4 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE TYPE_5 NAME VAR_8 IN VAR_9 TYPE TYPE_1 NAME VAR_10 INIT = VAR_8 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) COND VAR_10 != null  return VAR_10 ;  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME name TYPE int NAME result COND METHOD_2 ( )  return false ; TYPE long NAME VAR_1 INIT = this . key . METHOD_3 ( )  this . VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_1 , this . VAR_2 . size ( ) , name , result ) )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String NAME action INIT = VAR_1 . METHOD_2 ( ) COND action . equals ( VAR_2 )  METHOD_3 ( VAR_3 , 1 ) COND action . equals ( VAR_4 )  METHOD_3 ( VAR_3 , 0 ) COND action . equals ( VAR_5 )  METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 )  METHOD_3 ( )  METHOD_4 ( VAR_3 , VAR_4 , STRING_1 )  METHOD_5 ( )  VAR_5 . METHOD_6 ( VAR_6 , VAR_1 , VAR_7 )  VAR_5 . METHOD_7 ( VAR_6 , VAR_1 , VAR_8 )  VAR_5 . METHOD_8 ( STRING_2 , VAR_1 )  VAR_5 . METHOD_9 ( STRING_3 , VAR_7 )  VAR_5 . METHOD_10 ( STRING_4 , VAR_7 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_2 != null  return VAR_2 ; COND ( VAR_4 ) == null  return null ; TYPE TYPE_2 NAME VAR_5 INIT = VAR_4 . METHOD_3 ( VAR_1 ) COND VAR_5 != null  return VAR_3 . index ( VAR_5 ) ;  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = VAR_3 TYPE long NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) TYPE java.io.File NAME VAR_5 INIT = new java.io.File ( VAR_6 , STRING_1 )  TYPE_3 . METHOD_3 ( VAR_5 ) TYPE java.io.File NAME VAR_7 INIT = new java.io.File ( VAR_6 , STRING_2 )  TYPE_3 . METHOD_3 ( VAR_7 )  return new TYPE_1 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_4 ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( VAR_5 ) . METHOD_8 ( VAR_7 ) ;
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( this ) TYPE int NAME VAR_2 INIT = METHOD_2 ( packageName , true , true , flags ) COND VAR_3 != null  VAR_3 . METHOD_3 ( packageName , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log . i ( com.android.server.pm.PackageManagerService.TAG , STRING_1 )
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 IN VAR_1 . METHOD_4 ( )  VAR_2 . METHOD_5 ( TYPE_4 . METHOD_1 ( VAR_3 ) )  return VAR_2 ;
MODIFIER private static RETURN TYPE_1[] NAME METHOD_1 TYPE byte[][] NAME VAR_1 COND VAR_1 == null  return null ; TYPE TYPE_1[] NAME VAR_2 INIT = new TYPE_1 [ VAR_1 . length ] TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  VAR_2 [ i ] = new TYPE_2 ( VAR_1 [ i ] ) TYPE java.io.IOException NAME e  return null ;  return VAR_2 ;
MODIFIER static RETURN float NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME text TYPE int NAME start TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME flags TYPE float[] NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME count INIT = VAR_2 - start TYPE char[] NAME VAR_7 INIT = TYPE_1 . METHOD_2 ( count )  TYPE_2 . METHOD_3 ( text , start , VAR_2 , VAR_7 , 0 )  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_7 , 0 , count , VAR_3 , ( VAR_4 - VAR_3 ) , flags , VAR_5 , VAR_6 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1  return new TYPE_1 ( VAR_1 ) ; TYPE TYPE_3 NAME e  throw new TYPE_2 ( METHOD_2 ( ) , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_4 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  METHOD_3 ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_2 . METHOD_4 ( VAR_4 , VAR_5 )  VAR_3 . verify ( VAR_5 ) . METHOD_5 ( VAR_6 )  VAR_3 . verify ( VAR_4 ) . METHOD_6 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 )  TYPE_2 . METHOD_7 ( VAR_5 , VAR_10 , VAR_4 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 instanceof TYPE_3  return METHOD_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ) ; TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_2 != null  return TYPE_4 . METHOD_3 ( VAR_2 ) ;  return METHOD_4 ( VAR_1 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME name  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( id )  TYPE_1 . METHOD_4 ( id , VAR_2 , TYPE_1 . METHOD_5 ( ) . METHOD_6 ( name ) ) TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_7 ( e ) ;  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )  s . METHOD_3 ( STRING_1 )  s . METHOD_4 ( 0 , 0 )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME count TYPE float[] NAME d  TYPE_1 . METHOD_2 ( VAR_2 , STRING_1 ) TYPE int NAME VAR_3 INIT = ( VAR_4 . METHOD_3 ( ) ) * count  METHOD_4 ( VAR_1 , count , ( ( d . length ) * 4 ) , VAR_3 )  mRS . METHOD_5 ( METHOD_6 ( ) , VAR_1 , VAR_5 , count , d , VAR_3 )  TYPE_1 . METHOD_7 ( VAR_2 )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) COND ( VAR_2 ) != null  VAR_3 = new TYPE_2 < java.lang.Object > ( VAR_2 )  VAR_4 = new TYPE_2 < TYPE_3 > ( VAR_5 )  return VAR_1 ; TYPE TYPE_4 NAME e  throw new TYPE_5 ( e.toString ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME source INIT = new TYPE_1 ( )  source . METHOD_2 ( VAR_1 )  source . METHOD_2 ( VAR_1 )  source . METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME target INIT = new TYPE_1 ( )  target . METHOD_2 ( VAR_1 )  target . METHOD_2 ( VAR_2 )  target . METHOD_2 ( VAR_2 )  METHOD_3 ( source , target ) TYPE java.lang.Exception NAME e  fail ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertFalse ( STRING_1 , ( 0 == ( VAR_1 . METHOD_2 ( ) ) ) )  assertFalse ( STRING_2 , ( 0 > ( VAR_1 . METHOD_2 ( ) ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME c TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = null TYPE int NAME VAR_4 INIT = 0  VAR_4 = c . METHOD_2 ( VAR_5 ) COND VAR_6  android.util.Log.d ( TYPE_5 . TAG , ( STRING_1 + VAR_3 ) )  e . METHOD_3 ( ( VAR_4 == 1 ? true : false ) , ( ( ( VAR_2 . METHOD_4 ( ) ) & ( VAR_7 ) ) != 0 ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE TYPE_1 NAME d INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND d == null  return ;  VAR_6 = TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 )
MODIFIER public static RETURN long NAME METHOD_1 TYPE long NAME arg1 TYPE long NAME VAR_1 COND VAR_2  throw new TYPE_1 ( ) ; TYPE long NAME res INIT = 0 TYPE long NAME VAR_3 INIT = - arg1 TYPE long NAME VAR_4 INIT = - VAR_1 TYPE long NAME i INIT = 0 COND i < 1  i ++  res += ( VAR_3 + VAR_4 ) + i  return res ;
MODIFIER public static RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME test TYPE boolean NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = ( ( java.util.List < TYPE_1 > ) ( TYPE_2 . METHOD_2 ( test , VAR_1 ) ) ) TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_4 IN VAR_2  VAR_3 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) )  return VAR_3 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.Class<?> NAME c TYPE boolean NAME VAR_1 INIT = Main . METHOD_2 ( c ) TYPE boolean NAME VAR_2 INIT = Main . METHOD_3 ( c ) TYPE boolean NAME VAR_3 INIT = Main . METHOD_4 ( c )  java.lang.System.out.println ( ( ( ( ( ( ( ( c . getName ( ) ) + STRING_1 ) + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_3 ) + VAR_3 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1  VAR_1  ( VAR_2 ) -- COND ( VAR_2 ) == ( - 1 ) COND ( fd ) != null  METHOD_2 ( ) TYPE java.io.IOException NAME e BLOCK BLOCK  fd = null
MODIFIER public RETURN long NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return - 1 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return - 1 ;  return service . METHOD_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME obj COND TYPE_2 . METHOD_2 ( ) COND obj != null  VAR_1 . METHOD_1 ( obj . METHOD_3 ( ) )  VAR_1 . METHOD_1 ( null )  return ; COND obj != null  METHOD_4 ( obj . METHOD_5 ( null ) )  METHOD_4 ( 0 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 TYPE com.android.jack.ir.ast.JMethod NAME method INIT = VAR_1 . METHOD_1 ( )  VAR_2 . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_1 . METHOD_4 ( true ) . size ( ) , ( ( ( ( VAR_4 . getName ( method ) ) + STRING_1 ) + ( VAR_4 . getName ( method . METHOD_5 ( ) ) ) ) + STRING_2 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE byte NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME from TYPE int NAME VAR_1 INIT = 6 COND from != null  METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( from . METHOD_4 ( ) , VAR_1 ) )  this . VAR_2 = new TYPE_1 [ ] { from }  this . VAR_2 = null
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE int NAME VAR_1 INIT = 6  METHOD_3 ( VAR_1 , false , false )  assertNotNull ( VAR_2 )  VAR_2 . METHOD_4 ( VAR_3 , TYPE_1 . METHOD_5 ( VAR_4 ) , VAR_5 , TYPE_1 . METHOD_6 ( VAR_6 ) )  org.mockito.Mockito.verify ( VAR_7 ) . METHOD_7 ( org.mockito.Matchers.eq ( VAR_8 ) , org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers . METHOD_8 ( VAR_9 class ) , org.mockito.Matchers.eq ( VAR_4 ) , org.mockito.Matchers.eq ( VAR_10 ) )
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) )  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) )  assertTrue ( STRING_3 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_3 ) ) ) )  assertTrue ( STRING_4 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_4 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 2 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 , false , INT_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 )  TYPE_4 . METHOD_2 ( VAR_3 )  VAR_3 . start ( )  VAR_2 . METHOD_3 ( 0 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1[] NAME VAR_1 INIT = new TYPE_1 [ VAR_2 ]  Main . METHOD_2 ( ) TYPE int NAME t INIT = 0 COND t < ( VAR_1 . length )  t ++  VAR_1 [ t ] = new TYPE_1 ( new Main ( ) )  VAR_1 [ t ] . start ( ) TYPE TYPE_1 NAME t IN VAR_1  t . METHOD_3 ( )  java.lang.System.out.println ( STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Object NAME data TYPE java.lang.String NAME VAR_3 INIT = METHOD_2 ( VAR_2 )  TYPE_1 . log ( VAR_4 , STRING_1 , VAR_5 , VAR_3 ) COND TYPE_2 . equals ( VAR_1 ) COND ( VAR_3 . equals ( STRING_2 ) ) || ( VAR_3 . equals ( STRING_3 ) )  VAR_1 = VAR_6  METHOD_3 ( VAR_1 , VAR_3 )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ! ( obj instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) )  return ( TYPE_2 . METHOD_1 ( VAR_2 , VAR_3 ) ) && ( TYPE_2 . METHOD_1 ( VAR_4 , VAR_5 ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 0 , 1 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( args . in )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_7 ( ) ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME x TYPE int NAME y TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) COND VAR_1 . METHOD_3 ( ) TYPE TYPE_2 NAME c INIT = VAR_1 . METHOD_4 ( )  METHOD_5 ( c , VAR_3 ) COND VAR_3 . METHOD_6 ( x , y )  return METHOD_7 ( c ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( ) TYPE TYPE_1 NAME options INIT = TYPE_2 . METHOD_4 ( VAR_1 )  options . METHOD_5 ( METHOD_6 ( ) )  TYPE_3 . METHOD_7 ( options , VAR_2 , TYPE_2 . METHOD_8 ( TYPE_2 . METHOD_9 ( ) ) , VAR_3 )  TYPE_4 . METHOD_10 ( INT_1 )  TYPE_5 . METHOD_11 ( new TYPE_6 ( new TYPE_7 ( VAR_4 . out ) ) )  TYPE_5 . METHOD_12 ( new TYPE_6 ( new TYPE_7 ( VAR_5 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND ( ( VAR_3 . METHOD_2 ( ) ) == VAR_1 ) && ( ( VAR_3 . METHOD_3 ( ) ) == VAR_2 )  return VAR_3 ;  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE long NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE long NAME VAR_3 INIT = ( v == null ) ? ( ( long ) ( m . METHOD_2 ( ) ) ) : ( ( long ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ! ( VAR_3 . METHOD_2 ( ) ) )  METHOD_3 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_3 . METHOD_1 ( VAR_1 ) COND VAR_4 == null  throw new TYPE_2 ( STRING_1 , VAR_5 ) ;  VAR_2 = new TYPE_1 ( VAR_4 ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_1 , e , VAR_6 ) ;  return VAR_2 ;
MODIFIER public RETURN java.util.ArrayList<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME VAR_1 INIT = null TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( ) COND VAR_2 != null  VAR_1 = VAR_2 . METHOD_3 ( METHOD_4 ( ) , TYPE_5 . METHOD_5 ( ) ) TYPE android.os.RemoteException NAME ex BLOCK BLOCK  return TYPE_4 . METHOD_6 ( VAR_1 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE double NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE double NAME VAR_3 INIT = ( v == null ) ? ( ( double ) ( m . METHOD_2 ( ) ) ) : ( ( double ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME data TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  VAR_2 . METHOD_2 ( data )  VAR_2 . METHOD_3 ( ) TYPE java.io.IOException NAME e  android.util.Log.e ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) )
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME x TYPE int NAME y  x -= METHOD_2 ( )  y -= METHOD_3 ( )  x += METHOD_4 ( )  y += METHOD_5 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_6 ( ) COND VAR_1 == null  return - 1 ; TYPE int NAME line INIT = VAR_1 . METHOD_7 ( y ) TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_8 ( line , x )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_1 ( )  VAR_2 . METHOD_2 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) TYPE TYPE_1 NAME e  METHOD_3 ( e.getMessage ( ) ) TYPE java.io.IOException NAME e  METHOD_3 ( e.getMessage ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 )  METHOD_2 ( VAR_1 . getName ( ) )  VAR_1 = new TYPE_1 ( STRING_2 )  METHOD_2 ( VAR_1 . getName ( ) )  new TYPE_1 ( STRING_3 )  fail ( ) TYPE java.lang.IllegalArgumentException NAME expected BLOCK BLOCK
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name INIT = VAR_1 . getName ( ) COND name == null  throw new java.lang.NullPointerException ( ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_3 ( ) COND VAR_2 . METHOD_4 ( VAR_1 , this )  METHOD_5 ( VAR_1 , name , ( name + STRING_1 ) )  return true ;  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_3 NAME options INIT = TYPE_4 . METHOD_2 ( args )  options . METHOD_3 ( VAR_1 )  options . METHOD_4 ( VAR_2 )  return new TYPE_5 ( options ) ; TYPE TYPE_6 NAME e  throw new TYPE_2 ( e.getMessage ( ) , e ) ; TYPE java.io.IOException|TYPE_7 NAME e  throw new TYPE_2 ( e.getMessage ( ) , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 COND ! ( TYPE_2 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_3 . TAG , STRING_1 )  return false ; TYPE TYPE_3 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , VAR_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME config TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME callback COND VAR_4  android.util.Log.v ( VAR_5 . TAG , STRING_1 ) TYPE TYPE_5 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( config , VAR_1 , VAR_2 , VAR_3 , callback ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 COND x . METHOD_2 ( )  METHOD_3 ( ) TYPE java.util.List<TYPE_3> NAME VAR_2 INIT = METHOD_4 ( VAR_3 )  VAR_4 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) COND ( ( VAR_5 ) & ( VAR_6 ) ) != 0  METHOD_7 ( )  METHOD_8 ( ) TYPE java.lang.Throwable NAME e  throw METHOD_9 ( x , e ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME x TYPE int NAME y TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ;  VAR_3 . METHOD_3 ( ) . METHOD_4 ( x , y , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  assertFalse ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_3 )  assertFalse ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_4 ( VAR_2 , VAR_4 )  assertTrue ( TYPE_1 . equals ( VAR_4 , VAR_1 . get ( VAR_2 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) )  METHOD_5 ( VAR_1 . get ( VAR_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = TYPE_5 . METHOD_3 ( VAR_2 )  TYPE_6 . METHOD_4 ( VAR_5 , ret )  VAR_3 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_3 ( )  TYPE_4 . METHOD_2 ( options , VAR_1 ) TYPE TYPE_5.sched NAME e  throw new TYPE_2 ( e.getMessage ( ) , e ) ; TYPE TYPE_6 NAME e  throw new TYPE_2 ( e.getMessage ( ) , e ) ;  return new TYPE_7 ( options ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME method TYPE TYPE_4 NAME call TYPE java.lang.String NAME VAR_2 INIT = VAR_3 COND ( VAR_2 . equals ( STRING_1 ) ) && ( ( context . METHOD_2 ( ) . METHOD_3 ( ) ) >= 8 ) TYPE java.lang.String NAME VAR_4 INIT = java.lang.String.format ( ( STRING_2 + STRING_3 ) , call . name )  context . METHOD_4 ( VAR_5 , method , call , context . METHOD_5 ( call ) , VAR_4 , null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( METHOD_2 ( ) ) == false  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  throw new java.io.IOException ( ) ;  return new TYPE_1 ( VAR_2 , ( - 1 ) , false , false , this , ( - 1 ) , new TYPE_3 ( VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 INIT = null  VAR_3 = new TYPE_1 ( VAR_2 )  assertTrue ( VAR_3 . METHOD_4 ( ) ) TYPE java.io.IOException NAME e  fail ( ( STRING_1 + e ) ) COND VAR_3 != null  VAR_3 . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE java.util.List<TYPE_2> NAME data INIT = VAR_1 . METHOD_2 ( ) COND ( data . size ( ) ) == 0  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ( STRING_1 + STRING_2 ) )  return ; COND ( data . size ( ) ) == 1  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ( STRING_3 + STRING_4 ) )  return ;  new TYPE_4 ( this ) . start ( )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_1 ( )  return ; TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_2 ( )  VAR_2 COND METHOD_3 ( ) COND ( VAR_3 ) != 0  TYPE_2 . METHOD_4 ( VAR_4 , VAR_3 )  VAR_5 = null  VAR_6 = null  VAR_3 = 0
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME service INIT = METHOD_2 ( ) COND service != null  return service . METHOD_1 ( VAR_1 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e ) TYPE java.lang.NullPointerException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_2 , e )  return new java.util.ArrayList < TYPE_1 > ( 0 ) ;
MODIFIER MODIFIER RETURN boolean NAME start COND ( ( VAR_1 ) != null ) && ( ( ( VAR_2 ) == false ) || ( ( METHOD_1 ( ) ) == false ) )  return false ;  VAR_3 = true  VAR_4 = new TYPE_1 ( this )  VAR_4 . start ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_2 . TAG , null , null , null , null , false , ( - 1 ) , false , ( - 1 ) )  verify ( VAR_3 ) . METHOD_3 ( METHOD_4 ( byte [ ] . class ) , METHOD_4 ( VAR_4 class ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true )  VAR_1 . METHOD_2 ( false )  VAR_1 . METHOD_3 ( VAR_2 , false )  org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_2 ( true )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_5 ( 2 ) ) . METHOD_3 ( TYPE_1 . METHOD_6 ( ) )  org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME version TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME d INIT = TYPE_4 . METHOD_2 ( version , VAR_1 ) . METHOD_3 ( ) TYPE TYPE_5 NAME r INIT = new TYPE_5 ( d , VAR_2 )  VAR_3 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) COND ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( )  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true )  org.junit.Assert.assertEquals ( VAR_2 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( VAR_3 , false )  VAR_1 . METHOD_2 ( false )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_5 ( 2 ) ) . METHOD_4 ( TYPE_1 . METHOD_6 ( ) )  org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return VAR_3 ; TYPE TYPE_2 NAME VAR_4 INIT = METHOD_3 ( subId ) COND VAR_4 != null  return VAR_4 . METHOD_1 ( ) ;  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( new java.lang.Object ( ) )  VAR_1 . METHOD_3 ( new java.lang.Object ( ) )  VAR_1 . METHOD_3 ( new java.lang.Object ( ) )  METHOD_4 ( ) TYPE TYPE_3 NAME VAR_2 BLOCK BLOCK
MODIFIER protected final RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( INT_1 )  sb.append ( STRING_1 )  sb.append ( VAR_2 )  sb.append ( CHAR_1 )  sb.append ( VAR_3 ) COND VAR_1 != null  sb.append ( CHAR_1 )  sb.append ( VAR_1 )  sb.append ( STRING_2 ) COND ( result ) != null  sb.append ( result )  sb.append ( STRING_3 )  sb.append ( VAR_4 )  sb.append ( CHAR_2 )  return sb . toString ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( )  VAR_2 = true TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_6 . METHOD_4 ( ) . get ( VAR_3 ) COND VAR_7  android.util.Log.d ( VAR_8 . TAG , ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) + VAR_5 ) ) COND VAR_5 != null  METHOD_5 ( VAR_5 )  VAR_9 . METHOD_6 ( this )  METHOD_7 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME call  VAR_1 . METHOD_2 ( call ) MODIFIER public RETURN void NAME METHOD_4  VAR_3 COND VAR_1 . METHOD_5 ( call )  TYPE_2 . i ( this , STRING_2 , call )  call . METHOD_6 ( )  VAR_2 . METHOD_3 ( new java.lang.Runnable ( STRING_1 ) { public void METHOD_4 ( ) { synchronized ( VAR_3 ) { if ( VAR_1 . METHOD_5 ( call ) ) { TYPE_2 . i ( this , STRING_2 , call ) ; call . METHOD_6 ( ) ; } } } } . METHOD_7 ( ) , TYPE_3 . METHOD_8 ( mContext . METHOD_9 ( ) ) )  return true ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  throw new TYPE_1 ( STRING_1 ) ; TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) COND ( VAR_3 ) != null  METHOD_3 ( VAR_2 , STRING_2 , VAR_3 , VAR_4 ) COND ( VAR_5 ) != null  METHOD_3 ( VAR_2 , STRING_3 , VAR_5 , VAR_6 )
MODIFIER private RETURN TYPE_1<TYPE_2<TYPE_3,TYPE_4>> NAME METHOD_1 TYPE TYPE_3 NAME m TYPE TYPE_4 NAME c TYPE TYPE_5 NAME VAR_1 INIT = METHOD_2 ( m ) TYPE TYPE_1<TYPE_2<TYPE_3,TYPE_4>> NAME result INIT = new TYPE_6 < TYPE_2 < TYPE_3 , TYPE_4 > > ( )  METHOD_3 ( c , VAR_1 , result , null )  METHOD_4 ( m , c , VAR_1 , result )  return result ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_3 = VAR_2  java.lang.System.out.println ( STRING_1 )  VAR_3 . run ( )  VAR_4 . println ( STRING_2 ) TYPE TYPE_3 NAME VAR_5  java.lang.System.out.println ( STRING_3 ) TYPE TYPE_4 NAME VAR_6 INIT = ( ( TYPE_4 ) ( VAR_3 ) )  VAR_6 . METHOD_2 ( VAR_6 )  java.lang.System.out.println ( STRING_4 )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.util.HashMap<?,?> NAME VAR_1 TYPE java.util.HashMap<?,?> NAME VAR_2 TYPE java.lang.Object NAME VAR_3 INIT = VAR_1 . get ( VAR_4 ) TYPE java.lang.Object NAME VAR_5 INIT = VAR_2 . get ( VAR_4 ) COND ! ( METHOD_2 ( VAR_3 ) )  return METHOD_2 ( VAR_5 ) ? 1 : 0 ; COND ! ( METHOD_2 ( VAR_5 ) )  return - 1 ;  return ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_3 ( VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = null TYPE TYPE_1 NAME match INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND match . METHOD_3 ( )  VAR_2 = match . METHOD_4 ( 1 )  android.util.Log.d ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) )  VAR_5 . METHOD_5 ( VAR_6 , VAR_7 , 0 , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_2 ( VAR_3 , VAR_4 )  VAR_5 . METHOD_3 ( VAR_6 )  VAR_5 . METHOD_4 ( )  VAR_5 . METHOD_5 ( VAR_1 . name )  VAR_5 . METHOD_5 ( VAR_7 )  VAR_5 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_8 ) . METHOD_7 ( ) )  VAR_5 . METHOD_8 ( VAR_9 )  VAR_5 . METHOD_9 ( )  VAR_2 . METHOD_10 ( VAR_3 , ( ( VAR_4 ) + 1 ) )  VAR_5 . METHOD_11 ( )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME res INIT = this COND res != null  res = res . METHOD_2 ( ) TYPE TYPE_1 NAME obj INIT = res . METHOD_3 ( VAR_1 , null , this ) COND obj != null  ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) )  return obj ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME device INIT = null COND server != null TYPE TYPE_4 NAME VAR_2 INIT = server . METHOD_2 ( )  device = new TYPE_3 ( VAR_2 , server , VAR_3 , VAR_4 , VAR_1 )  METHOD_3 ( device , VAR_5 , VAR_6 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_7 . TAG , STRING_1 )  METHOD_3 ( device , VAR_5 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_2  android.util.Log.d ( VAR_3 . TAG , ( ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) + VAR_1 ) ) COND ( VAR_4 ) != VAR_1 COND VAR_2  android.util.Log.d ( VAR_3 . TAG , ( STRING_3 + VAR_1 ) )  VAR_4 = VAR_1  METHOD_2 ( )
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 )  sb.append ( METHOD_1 ( ) . getName ( ) )  sb.append ( CHAR_1 )  sb.append ( TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) )  sb.append ( CHAR_2 )  sb.append ( field )  sb.append ( CHAR_3 )  return sb . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  return ; TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) TYPE TYPE_2[] NAME VAR_3 INIT = VAR_2 . METHOD_3 ( VAR_4 ) TYPE TYPE_2 NAME item IN VAR_3 COND VAR_1 . equals ( item . getName ( ) )  METHOD_4 ( new java.lang.Object [ ] { item } )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Throwable NAME VAR_2  android.util.Log . i ( VAR_3 , ( STRING_1 + VAR_1 ) )  android.util.Log . i ( VAR_3 , STRING_2 )  android.util.Log . i ( VAR_3 , STRING_3 , VAR_2 )  android.util.Log . i ( VAR_3 , STRING_4 )
MODIFIER protected RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  METHOD_2 ( ) . METHOD_3 ( VAR_1 ) COND ( VAR_2 ) != null  VAR_2 . METHOD_4 ( )  super . METHOD_1 ( )
MODIFIER private final RETURN void NAME METHOD_1 COND ( ( ( ( VAR_1 ) == 0 ) && ( ! ( METHOD_2 ( ) ) ) ) || ( ( VAR_2 ) == ( VAR_3 ) ) ) && ( TYPE_1 . METHOD_3 ( ) ) TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( VAR_5 )  VAR_4 . METHOD_4 ( VAR_6 , false )  VAR_4 . METHOD_5 ( VAR_7 )  mContext . METHOD_6 ( VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Integer NAME error TYPE android.bluetooth.BluetoothDevice NAME device INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 )  return VAR_2 . METHOD_4 ( device , ( ( byte ) ( ( int ) ( error ) ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE long NAME VAR_1 INIT = VAR_2 . METHOD_3 ( )  VAR_3 . METHOD_4 ( )  VAR_4 . METHOD_4 ( ) TYPE long NAME VAR_5 INIT = ( VAR_2 . METHOD_3 ( ) ) - VAR_1  android.util.Log.d ( VAR_6 . TAG , ( ( STRING_1 + VAR_5 ) + STRING_2 ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ; COND ! ( METHOD_4 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_2 )  return ;  METHOD_5 ( 0 )  METHOD_6 ( VAR_2 )  METHOD_7 ( false , false , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_8 ( VAR_3 , VAR_5 )  METHOD_9 ( VAR_4 , VAR_5 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int[] NAME VAR_1  VAR_1 [ 1 ] = 1  VAR_1 [ 2 ] = 1  VAR_1 [ 3 ] = 1  VAR_1 [ 4 ] = 1  VAR_1 [ ( - 1 ) ] = 1 COND ( VAR_1 [ 1 ] ) == 1  throw new TYPE_1 ( STRING_1 ) ;
MODIFIER private RETURN void NAME METHOD_1 COND ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_2 COND ( VAR_4 ) || ( VAR_5 )  VAR_1 = VAR_1 . METHOD_2 ( ) COND VAR_4  VAR_1 . METHOD_3 ( VAR_6 ) COND VAR_5  VAR_1 . METHOD_4 ( VAR_7 ) COND VAR_1 . METHOD_5 ( )  VAR_1 . METHOD_6 ( METHOD_7 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE long NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public static RETURN java.lang.String[] NAME METHOD_1  return new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , VAR_1 } ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME config TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME callback COND VAR_4  android.util.Log.d ( VAR_5 . TAG , STRING_1 ) TYPE TYPE_5 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( config , VAR_1 , VAR_2 , VAR_3 , callback ) ;
MODIFIER public RETURN void NAME log TYPE java.lang.String NAME log COND METHOD_1 ( log , false ) MODIFIER public RETURN void NAME run  METHOD_3 ( VAR_2 , log )  METHOD_2 ( VAR_1 , new java.lang.Runnable ( ) { public void run ( ) { METHOD_3 ( VAR_2 , log ) ; } } ) COND ( VAR_3 ) != null  VAR_3 . METHOD_4 ( STRING_1 , log )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 )  VAR_1 . METHOD_2 ( 0 )  assertEquals ( 0 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( ( - 1 ) )  assertEquals ( ( - 1 ) , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( VAR_1 . METHOD_4 ( ) )  assertEquals ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME location TYPE java.lang.String NAME VAR_3 TYPE java.lang.Object NAME data COND ( VAR_2 != null ) && ( VAR_4 . METHOD_2 ( VAR_1 , VAR_2 ) )  return ;  super . METHOD_1 ( VAR_1 , location , VAR_3 , data )
MODIFIER public static RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE long NAME VAR_4 TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( VAR_3 . value )  return VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_5 , VAR_4 ) ;  VAR_3 . value = VAR_5 . value
MODIFIER private static RETURN java.io.File NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 )  TYPE_1 . METHOD_3 ( new TYPE_2 ( ) , TYPE_1 . METHOD_4 ( STRING_3 ) , TYPE_1 . METHOD_5 ( ) , VAR_1 , false )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e COND ( VAR_1 ) != null  VAR_1 . METHOD_1 ( e ) COND ( VAR_2 ) == ( VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( VAR_5 , VAR_6 , VAR_7 )  METHOD_3 ( VAR_4 , true )  return ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 INIT = new TYPE_1 [ VAR_2 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_2 ) - 1 )  ++ i  VAR_1 [ i ] = new TYPE_1 ( i ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_1 ) )  METHOD_3 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER public RETURN void NAME run  this  ( VAR_1 ) ++ COND VAR_2  ( VAR_3 ) ++ COND ( ( VAR_4 ) == ( VAR_3 ) ) && ( ( VAR_5 ) != null )  VAR_5 . METHOD_1 ( ) COND VAR_6  TYPE_1 . METHOD_2 ( INT_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK  VAR_7  VAR_7 . METHOD_3 ( )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 > 0 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 )  return VAR_4 . METHOD_3 ( VAR_3 ) ; TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( )  return VAR_4 . METHOD_3 ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_2 )  return ;  TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE java.lang.String NAME VAR_6 TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony != null  return telephony . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; TYPE android.os.RemoteException NAME ex BLOCK BLOCK TYPE java.lang.NullPointerException NAME ex BLOCK BLOCK  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  throw new TYPE_2 ( STRING_1 ) ;  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 . METHOD_3 ( ) ) TYPE TYPE_3 NAME e  android.util.Log.w ( VAR_5 , STRING_2 )  VAR_1 = null  throw new TYPE_1 ( VAR_6 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_5 , ( STRING_3 + e ) )  throw new TYPE_1 ( VAR_7 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  assertEquals ( VAR_3 . TRUE , VAR_1 . METHOD_3 ( ) )  assertEquals ( VAR_3 . TRUE , VAR_1 . METHOD_4 ( ) )  assertEquals ( VAR_3 . TRUE , VAR_1 . METHOD_5 ( ) )  assertEquals ( VAR_3 . TRUE , VAR_1 . METHOD_6 ( ) )  assertEquals ( VAR_3 . TRUE , VAR_1 . METHOD_7 ( ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME out COND ( ( state ) != ( VAR_1 ) ) && ( ( state ) != ( VAR_2 ) )  throw METHOD_2 ( ) ; TYPE TYPE_1 NAME result INIT = METHOD_3 ( out ) COND result == ( VAR_3 )  state = VAR_1  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE java.lang.String NAME v INIT = TYPE_4 . METHOD_2 ( session )  assertTrue ( TYPE_5 . METHOD_3 ( v ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME field TYPE TYPE_3 NAME location TYPE java.lang.String NAME VAR_2 TYPE java.lang.Object NAME data COND ( field != null ) && ( VAR_3 . METHOD_2 ( VAR_1 , field ) )  return ;  METHOD_1 ( VAR_1 , location , VAR_2 , data )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( VAR_3 , VAR_4 )  VAR_5 . METHOD_3 ( VAR_6 )  VAR_5 . METHOD_4 ( VAR_7 )  VAR_5 . METHOD_5 ( ) TYPE java.lang.String NAME id INIT = java.lang.Integer . toString ( VAR_1 )  VAR_5 . METHOD_6 ( id )  VAR_5 . METHOD_7 ( id )  METHOD_8 ( )  VAR_2 . METHOD_9 ( VAR_3 , ( ( VAR_4 ) + 1 ) )  VAR_5 . METHOD_10 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) )  return ; TYPE java.io.File[] NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE java.io.File NAME VAR_3 IN VAR_2 COND VAR_3 . METHOD_2 ( )  TYPE_1 . METHOD_1 ( VAR_3 )  assertTrue ( VAR_3 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( new TYPE_2 ( ) )  server . METHOD_3 ( new TYPE_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( INT_1 ) )  server . METHOD_6 ( ) TYPE TYPE_4 NAME VAR_2 INIT = ( ( TYPE_4 ) ( server . METHOD_7 ( STRING_2 ) . METHOD_8 ( ) ) )  assertEquals ( INT_1 , VAR_2 . METHOD_9 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME path TYPE TYPE_4 NAME VAR_1 INIT = this TYPE TYPE_5<java.lang.String> NAME VAR_2 INIT = path . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME name COND VAR_2 . METHOD_4 ( )  name = VAR_2 . METHOD_5 ( ) COND VAR_2 . METHOD_4 ( )  VAR_1 = VAR_3 . METHOD_6 ( VAR_1 , name )  return VAR_3 . METHOD_1 ( VAR_1 , name ) ;  throw new TYPE_6 ( ) ;
MODIFIER public RETURN char NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_1 ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = ( VAR_3 ) + ( VAR_4 ) COND VAR_2 > ( METHOD_2 ( ) )  throw new TYPE_2 ( ) ; TYPE char NAME x INIT = ( ( char ) ( TYPE_3 . METHOD_3 ( METHOD_4 ( VAR_3 ) , ( ! ( VAR_5 ) ) ) ) )  VAR_3 = VAR_2  return x ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 IN VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = null TYPE TYPE_3 NAME VAR_4 COND ( VAR_1 . type ) == null  VAR_4 = TYPE_3 . METHOD_2 ( VAR_5 . Object class )  VAR_4 = TYPE_3 . METHOD_2 ( VAR_5 . Throwable class ) TYPE java.lang.String NAME id INIT = STRING_1 + ( ( VAR_6 ) ++ )  VAR_3 = new TYPE_2 ( id , id , VAR_4 , null )  VAR_7 . METHOD_3 ( VAR_1 , VAR_3 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_3 . get ( new TYPE_3 ( VAR_1 ) ) ) ) COND ! ( METHOD_2 ( VAR_2 ) )  return VAR_2 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertNotNull ( VAR_1 )  assertNotNull ( VAR_1 . METHOD_2 ( ) )  assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) )  METHOD_4 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_4 )  assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) )  METHOD_4 ( VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME key TYPE byte[] NAME value  return ( VAR_1 . METHOD_2 ( key , value ) ) == ( VAR_2 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args INIT = new java.lang.String [ ] { STRING_1 , STRING_2 } TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( args )  assertEquals ( 1 , VAR_2 . METHOD_3 ( ) . size ( ) )  assertEquals ( VAR_3 , VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) . error ( ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE long NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result COND METHOD_2 ( )  return ; COND result == null  TYPE_2 . METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_2 , null ) TYPE int NAME VAR_3 INIT = VAR_4 TYPE int NAME VAR_5 INIT = result . METHOD_5 ( ) NAME VAR_5  VAR_3 = VAR_7  break ;  VAR_3 = VAR_9  break ;  VAR_3 = VAR_11  break ;  METHOD_4 ( VAR_3 , result )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 TYPE java.util.List<android.bluetooth.BluetoothDevice> NAME VAR_1 INIT = new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( )  this COND ( ( VAR_2 ) == ( VAR_3 ) ) && ( ( VAR_4 ) != null )  VAR_1 . METHOD_2 ( VAR_4 )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE double NAME s INIT = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 > 0  s = s * 2  s = s / 2  VAR_2 . METHOD_2 ( ) . METHOD_4 ( s )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( VAR_4 , VAR_2 . METHOD_2 ( ) , false )  VAR_3 . METHOD_4 ( VAR_5 )  VAR_3 . METHOD_5 ( )  verify ( VAR_4 ) . METHOD_6 ( METHOD_7 ( ) )  TYPE_3 . METHOD_8 ( VAR_3 . METHOD_9 ( ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( this ) COND ( VAR_2 ) != null  VAR_2 . METHOD_3 ( this ) COND ( VAR_3 ) != null  VAR_3 . METHOD_4 ( this ) COND ( VAR_4 ) != null  VAR_4 . METHOD_5 ( this )  VAR_4 . METHOD_6 ( this )  VAR_4 . METHOD_7 ( this )  VAR_4 . METHOD_8 ( this )  VAR_4 . METHOD_9 ( this )
MODIFIER static RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND STRING_1 . METHOD_2 ( VAR_1 )  return VAR_2 ; COND STRING_2 . METHOD_2 ( VAR_1 )  return VAR_3 ; COND STRING_3 . METHOD_2 ( VAR_1 )  return VAR_4 ;  throw new java.lang.IllegalArgumentException ( ( STRING_4 + VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( VAR_1 ) != null TYPE java.util.List<TYPE_2<java.lang.String,TYPE_3>> NAME VAR_2 IN VAR_1 . values ( ) TYPE TYPE_2<java.lang.String,TYPE_3> NAME VAR_3 IN VAR_2 TYPE java.lang.String NAME VAR_4 INIT = VAR_3 . METHOD_2 ( ) TYPE TYPE_3 NAME location INIT = VAR_3 . METHOD_3 ( )  context . METHOD_4 ( VAR_5 , location , VAR_4 , null )  super . METHOD_1 ( context )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME options INIT = new TYPE_1 ( )  options . METHOD_2 ( TYPE_2 . getName ( ) , TYPE_3 . toString ( ) )  TYPE_4 . METHOD_3 ( options , null , null , null , null , VAR_1 , false , false , FLOAT_1 , ( ( TYPE_5 ) ( null ) ) , ( ( TYPE_6 [ ] ) ( null ) ) )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE byte NAME type TYPE byte NAME id TYPE short NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( ( ( ( ( STRING_1 + type ) + STRING_2 ) + id ) + STRING_3 ) + VAR_1 ) ) TYPE android.os.Message NAME msg INIT = VAR_4 . METHOD_2 ( VAR_5 )  msg.obj = ( VAR_1 > 0 ) ? new java.lang.Integer ( VAR_1 ) : null  msg.arg1 = type  VAR_6 = id  VAR_4 . METHOD_3 ( msg )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME uri TYPE int NAME VAR_1 TYPE int NAME uid TYPE int NAME VAR_2  METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( ) COND VAR_3 != null  uid = VAR_3 . uid  VAR_1 = VAR_5  uid = TYPE_3 . METHOD_3 ( uid ) COND VAR_1 == ( VAR_6 )  return VAR_7 ;  this  return METHOD_4 ( uri , uid , VAR_2 ) ? VAR_7 : VAR_8 ;
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 )  METHOD_2 ( VAR_3 , VAR_4 )  METHOD_2 ( VAR_3 , VAR_5 )  METHOD_2 ( VAR_3 , VAR_6 )  METHOD_2 ( VAR_7 , VAR_8 )  METHOD_2 ( VAR_7 , VAR_9 )  METHOD_2 ( VAR_10 , VAR_11 )  METHOD_2 ( VAR_12 , VAR_13 )  METHOD_3 ( STRING_1 , STRING_2 )  METHOD_3 ( STRING_3 , STRING_4 )  METHOD_3 ( STRING_5 , STRING_6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1  return new TYPE_3 ( VAR_1 . METHOD_2 ( ) , VAR_2 ) . METHOD_3 ( ) ; TYPE TYPE_4 NAME e  throw new TYPE_5 ( ) ; TYPE TYPE_6 NAME e  throw new TYPE_5 ( ) ; TYPE TYPE_7 NAME e  throw new TYPE_5 ( ) ; TYPE TYPE_8 NAME e  throw new TYPE_9 ( e ) ; TYPE TYPE_10 NAME e  throw new TYPE_9 ( e ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 IN TYPE_1 . values ( ) TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( null ) COND ( METHOD_3 ( VAR_2 ) ) && ( TYPE_2 . METHOD_4 ( METHOD_5 ( VAR_2 ) ) )  VAR_3 . METHOD_6 ( VAR_1 ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( VAR_2 class ) )  VAR_3 . METHOD_5 ( METHOD_6 ( STRING_1 , 1 ) . METHOD_7 ( VAR_4 ) . build ( ) )  assertEquals ( 0 , VAR_3 . METHOD_8 ( VAR_5 , false , TYPE_3 . METHOD_9 ( ) ) . size ( ) )  assertEquals ( 1 , VAR_3 . METHOD_8 ( VAR_5 , true , TYPE_3 . METHOD_9 ( ) ) . size ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.File NAME VAR_1 TYPE TYPE_1.File NAME VAR_2 COND VAR_1 . getName ( ) . METHOD_2 ( VAR_2 . getName ( ) ) TYPE java.lang.String NAME VAR_3 IN VAR_4 COND VAR_1 . getName ( ) . METHOD_3 ( VAR_3 )  return true ;  return false ;
MODIFIER protected RETURN boolean NAME METHOD_1  METHOD_2 ( VAR_1 )  METHOD_3 ( )  METHOD_4 ( )  METHOD_5 ( )  METHOD_6 ( ) COND VAR_2 . METHOD_7 ( )  return false ;  VAR_2 . METHOD_8 ( ) COND VAR_3  VAR_2 . METHOD_9 ( null , false )  return true ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) != null TYPE TYPE_3 NAME VAR_3 IN VAR_4  METHOD_2 ( VAR_3 )  return true ; TYPE java.lang.Throwable NAME e  throw METHOD_3 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME c INIT = TYPE_1 . METHOD_2 ( )  assertTrue ( ( c != ( VAR_1 ) ) ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( )  assertTrue ( ( c != VAR_2 ) )  TYPE_1 . METHOD_3 ( c )  TYPE_1 . METHOD_3 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ] TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  VAR_2 [ i ] = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) )  METHOD_4 ( ) TYPE TYPE_3 NAME VAR_4 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE java.lang.Object NAME VAR_3  TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 )  METHOD_3 ( VAR_1 , VAR_2 , w , h , VAR_3 , METHOD_4 ( VAR_3 , true ) , TYPE_2 . METHOD_5 ( VAR_3 ) )  TYPE_1 . METHOD_6 ( VAR_4 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( 0 , INT_1 ) ) TYPE int NAME VAR_3 INIT = TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( INT_1 ) , 10 )  assertEquals ( ( STRING_1 + VAR_1 ) , VAR_2 , VAR_3 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  assertFalse ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( INT_1 ) TYPE TYPE_2 NAME VAR_2  VAR_2 . METHOD_5 ( ) COND VAR_1 . METHOD_6 ( )  fail ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) )
MODIFIER private RETURN int NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ COND VAR_2 . METHOD_2 ( VAR_1 [ i ] )  return i ;  return VAR_3 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE float[] NAME data  TYPE_1 . METHOD_2 ( VAR_3 , STRING_1 )  mRS . METHOD_3 ( )  METHOD_4 ( VAR_1 , VAR_2 , w , h )  mRS . METHOD_5 ( METHOD_6 ( ) , VAR_1 , VAR_2 , VAR_4 , VAR_5 , w , h , data , ( ( data . length ) * 4 ) )  TYPE_1 . METHOD_7 ( VAR_3 )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1<?superTYPE_2> NAME c COND c == null  throw new java.lang.NullPointerException ( ) ; COND c == ( this )  throw new java.lang.IllegalArgumentException ( ) ; TYPE int NAME n INIT = 0 TYPE TYPE_2 NAME e COND ( e = METHOD_2 ( ) ) != null  c . METHOD_3 ( e )  ++ n  return n ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  return ; COND VAR_2 COND ( VAR_4 . METHOD_2 ( ) ) != null  VAR_4 . METHOD_2 ( ) . METHOD_3 ( false )  VAR_4 . METHOD_4 ( VAR_1 )  VAR_4 . METHOD_5 ( METHOD_6 ( ) )  METHOD_7 ( VAR_4 . METHOD_8 ( ) )  VAR_5 . METHOD_9 ( VAR_2 )
MODIFIER public RETURN void NAME run  VAR_1 = new TYPE_1 ( mContext )  VAR_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 )  VAR_7 = VAR_1 . METHOD_2 ( )  VAR_8 = ( ( TYPE_2 ) ( VAR_7 . METHOD_3 ( ) . METHOD_4 ( VAR_9 ) ) )  VAR_10 = VAR_8 . METHOD_5 ( 0 )
MODIFIER public RETURN void NAME METHOD_1  log ( ( ( ( STRING_1 + ( METHOD_2 ( ) . VAR_1 ) ) + STRING_2 ) + ( VAR_2 . size ( ) ) ) )  VAR_3 . METHOD_3 ( )  VAR_4 . METHOD_4 ( false )  VAR_5 = false  VAR_6 = false  VAR_7 = false
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_3<java.lang.String> NAME VAR_2  return VAR_1 . METHOD_2 ( name , VAR_3 < TYPE_4 > METHOD_3 ( ) , VAR_4 ) ; TYPE java.lang.Throwable NAME e  TYPE_5 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_5 , new TYPE_6 ( VAR_2 , e ) )  TYPE_5 . METHOD_4 ( ) . METHOD_7 ( )  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,java.util.List<TYPE_1>> NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE android.content.Intent NAME VAR_5 TYPE java.util.List<TYPE_1> NAME VAR_6 COND VAR_1 . METHOD_2 ( VAR_2 )  VAR_6 = VAR_1 . get ( VAR_2 )  VAR_6 = new java.util.ArrayList < TYPE_1 > ( )  VAR_1 . METHOD_3 ( VAR_2 , VAR_6 )  VAR_6 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_3 , VAR_4 , VAR_5 ) )
MODIFIER MODIFIER RETURN java.lang.Object NAME METHOD_1 COND ( VAR_1 ) != null  return VAR_1 . METHOD_1 ( ) ; TYPE TYPE_4 NAME ex  throw new TYPE_5 ( ) ;  throw new TYPE_2 ( ) ;
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 INIT = VAR_1 != null TYPE TYPE_2 NAME result INIT = METHOD_2 ( VAR_3 , VAR_2 ) COND VAR_3  result . METHOD_3 ( VAR_1 )  return result . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = 0 NAME VAR_1  VAR_2 = VAR_4  break ;  VAR_2 = VAR_6  break ;  VAR_2 = VAR_8  break ;  VAR_2 = VAR_10  break ;  VAR_2 = VAR_12  break ; COND VAR_2 != 0  METHOD_2 ( )  METHOD_3 ( ) . METHOD_1 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) )  assertFalse ( VAR_1 . METHOD_4 ( ) )  VAR_4 . METHOD_5 ( true )  assertTrue ( VAR_1 . METHOD_4 ( ) )
MODIFIER private RETURN java.lang.Object NAME METHOD_1 COND true TYPE java.lang.Object NAME VAR_1 INIT = VAR_2 COND VAR_1 != null  return VAR_1 ;  this  METHOD_2 ( ) TYPE TYPE_1 NAME e  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE TYPE_1 NAME VAR_3  METHOD_2 ( ) . VAR_1 = VAR_1 TYPE int NAME VAR_4 INIT = - 1  VAR_5 . METHOD_3 ( VAR_2 , VAR_3 ) COND ( VAR_2 . length ) == ( VAR_6 )  VAR_4 = VAR_7  VAR_8 . METHOD_3 ( VAR_1 , VAR_4 )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) )  return ;  VAR_1 . METHOD_4 ( ( ( VAR_2 ) + ( VAR_3 ) ) )  VAR_1 . METHOD_4 ( ( ( VAR_2 ) + ( VAR_4 ) ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ; TYPE java.lang.String NAME VAR_2 INIT = METHOD_4 ( )  METHOD_5 ( VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_3 , VAR_2 )  assertEquals ( STRING_2 , 1 , VAR_5 )  VAR_2 = METHOD_4 ( )  METHOD_7 ( VAR_6 , VAR_7 )  assertEquals ( STRING_3 , 0 , VAR_8 . METHOD_8 ( ) . METHOD_9 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_1 < 0 ) || ( VAR_1 > INT_1 )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND METHOD_2 ( )  throw new TYPE_1 ( STRING_2 ) ;  METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_1 ) TYPE TYPE_1 NAME VAR_3 COND ! ( METHOD_5 ( ) )  throw VAR_3 ;
MODIFIER public RETURN java.lang.Object[] NAME METHOD_1 TYPE int NAME length INIT = c . size ( ) TYPE java.lang.Object[] NAME result INIT = new java.lang.Object [ length ] TYPE TYPE_1<?> NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME i INIT = length COND ( -- i ) >= 0  result [ i ] = VAR_1 . METHOD_3 ( )  return result ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_2 == null  return null ; COND ( VAR_3 . METHOD_2 ( ) ) == 0  return new TYPE_1 ( 1 ) ; COND VAR_1 == null  return null ;  VAR_2 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) COND ! ( VAR_4 . equals ( VAR_5 ) )  return null ;  return VAR_1 . METHOD_1 ( VAR_3 ) ;
MODIFIER public RETURN java.lang.Object NAME METHOD_1 COND ( VAR_1 ) instanceof TYPE_2 TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( VAR_1 . METHOD_1 ( ) ) )  return new TYPE_4 ( VAR_2 , METHOD_2 ( ) , METHOD_3 ( ) ) ;  throw new TYPE_1 ( ) ;
MODIFIER private static RETURN java.util.List<?extendsTYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_2 > ( ) TYPE java.lang.String NAME config IN VAR_1  VAR_2 . METHOD_2 ( new TYPE_2 ( config ) )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE boolean NAME VAR_4 TYPE int NAME VAR_5 TYPE boolean NAME VAR_6 TYPE TYPE_3 NAME options INIT = new TYPE_3 ( )  VAR_7 = VAR_2  VAR_8 = VAR_4  VAR_9 = VAR_3  VAR_10 = VAR_5  VAR_11 = VAR_6 TYPE TYPE_4 NAME VAR_12 INIT = new TYPE_4 ( )  METHOD_1 ( ( 4 + ( VAR_6 ? 1 : 0 ) ) , STRING_1 , VAR_1 , VAR_12 , options )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( INT_1 , INT_2 ) TYPE byte[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 )  assertEquals ( VAR_1 . start , TYPE_2 . METHOD_3 ( VAR_2 ) )  assertEquals ( VAR_3 , TYPE_2 . METHOD_4 ( VAR_2 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME x TYPE int NAME i INIT = 0 COND i < ( x . METHOD_2 ( ) . size ( ) )  ++ i TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type INIT = x . METHOD_2 ( ) . get ( i ) COND ! ( type . METHOD_3 ( ) )  METHOD_4 ( type )  METHOD_5 ( )  METHOD_5 ( )  return false ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  device . METHOD_1 ( VAR_1 ) TYPE TYPE_1 NAME e  TYPE_2 . log ( VAR_2 , STRING_1 , e ) TYPE TYPE_3 NAME e  TYPE_2 . log ( VAR_2 , STRING_1 , e ) TYPE java.io.IOException NAME e  TYPE_2 . log ( VAR_2 , STRING_1 , e )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  assertTrue ( STRING_1 , METHOD_3 ( ) )  java.lang.System.out.println ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) )  assertEquals ( STRING_2 , VAR_2 , VAR_3 . METHOD_6 ( ) )  assertEquals ( STRING_2 , VAR_2 , VAR_4 . METHOD_6 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE long NAME VAR_2 COND TYPE_1 . METHOD_2 ( VAR_1 )  return false ; TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) COND VAR_3 == null  return false ;  return VAR_3 . METHOD_5 ( VAR_2 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_1 != null COND TYPE_1 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 , VAR_5 ) COND VAR_2 MODIFIER public RETURN void NAME run  TYPE_1 . METHOD_5 ( ) . METHOD_6 ( )  TYPE_3 . METHOD_7 ( VAR_5 , false )  new TYPE_2 ( ) { public void run ( ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_5 , false ) ; } } . start ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME id  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( id ) TYPE java.lang.Throwable NAME e  throw TYPE_1 . METHOD_5 ( e ) ;  VAR_1 . METHOD_6 ( )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE TYPE_2 NAME info IN VAR_2 . values ( ) COND ( info . METHOD_2 ( ) ) != null  VAR_1 . METHOD_3 ( info . METHOD_2 ( ) . METHOD_4 ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME item  METHOD_2 ( ) COND ( item . METHOD_3 ( ) ) > ( METHOD_3 ( ) )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE java.lang.NullPointerException NAME ex  throw new java.lang.NullPointerException ( STRING_2 ) ;  VAR_1 . METHOD_1 ( item )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 , ( TYPE_2 . METHOD_1 ( ) ? STRING_2 : STRING_3 ) ) COND STRING_2 . METHOD_3 ( VAR_1 )  return true ; COND STRING_3 . METHOD_3 ( VAR_1 )  return false ;  throw new java.lang.RuntimeException ( STRING_4 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) != null  METHOD_2 ( VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) )  VAR_2 = new TYPE_3 ( VAR_4 ) TYPE TYPE_4 NAME VAR_5 INIT = METHOD_5 ( 1 )  VAR_2 . METHOD_6 ( true )  TYPE_5 . METHOD_7 ( VAR_5 )  METHOD_8 ( VAR_6 )  VAR_2 . METHOD_9 ( VAR_1 )  VAR_7 . METHOD_10 ( )  return VAR_2 . METHOD_4 ( ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) != ( VAR_3 )  return null ; COND ( VAR_4 . length ) < 1  return null ; TYPE TYPE_1 NAME result INIT = new TYPE_1 ( )  result . type = ( VAR_4 [ 0 ] ) & INT_1  return result ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME id TYPE TYPE_2 NAME session TYPE TYPE_3 NAME pkg TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , TYPE_4 . METHOD_2 ( ( ( VAR_3 ) + id ) ) , ( ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) , pkg , VAR_7 )  VAR_1 . METHOD_3 ( VAR_8 )  session . METHOD_4 ( VAR_1 )  VAR_9 . METHOD_5 ( VAR_10 ) . METHOD_6 ( )  return VAR_1 ;
MODIFIER private static final RETURN TYPE_1 NAME METHOD_1 TYPE java.util.ArrayList<java.lang.String> NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND VAR_2 == ( VAR_1 . size ( ) )  return null ; TYPE TYPE_1 NAME m INIT = VAR_3 . METHOD_2 ( VAR_1 . get ( VAR_2 ) ) COND m . METHOD_3 ( )  return m ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  TYPE_2 . METHOD_3 ( false ) . when ( VAR_2 ) . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( VAR_3 class ) , org.mockito.Matchers.eq ( VAR_1 . METHOD_6 ( ) ) ) TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( VAR_5 , VAR_1 ) TYPE int NAME result INIT = METHOD_7 ( VAR_4 , true )  assertEquals ( VAR_6 , result )  METHOD_8 ( )  METHOD_9 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( event , VAR_2 )  VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , VAR_4 , VAR_5 , new TYPE_3 ( VAR_6 . x , VAR_6 . y ) , VAR_1 )  VAR_2 . METHOD_4 ( ) COND ( VAR_7 ) == ( VAR_8 )  TYPE_4 . METHOD_5 ( ) . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_5 NAME VAR_1 IN VAR_2 TYPE TYPE_6 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_4 . log ( VAR_5 , STRING_1 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) TYPE TYPE_7 NAME VAR_6 IN VAR_3 . METHOD_5 ( )  METHOD_6 ( VAR_6 , session , STRING_2 )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_2 ( VAR_3 )  VAR_1 . METHOD_2 ( VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )  VAR_1 . METHOD_2 ( VAR_6 )  VAR_1 . METHOD_2 ( VAR_7 )  VAR_1 . METHOD_2 ( VAR_8 )  VAR_1 . METHOD_2 ( VAR_9 )
MODIFIER static RETURN void NAME METHOD_1 TYPE java.lang.Class<?extendsTYPE_1> NAME VAR_1 TYPE java.lang.StringBuilder NAME VAR_2 TYPE TYPE_2 NAME data INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_3 INIT = new java.util.ArrayList ( data . METHOD_3 ( VAR_1 ) )  VAR_3 . METHOD_4 ( VAR_4 ) TYPE TYPE_4 NAME VAR_5 IN VAR_3  TYPE_5 . METHOD_1 ( VAR_5 , VAR_2 , VAR_6 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME offset COND offset < 0  throw new java.io.IOException ( ( STRING_1 + offset ) ) ;  VAR_1 . METHOD_2 ( fd , offset , VAR_2 )  VAR_3 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_4  throw VAR_4 . METHOD_4 ( ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return VAR_1 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return VAR_1 ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( TYPE_1 . METHOD_2 ( INT_1 ) , 3 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_2 ) , 2 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_3 ) , 3 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_4 ) , 2 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_5 ) , 2 )  assertEquals ( TYPE_1 . METHOD_2 ( 0 ) , 2 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_6 ) , 2 )
MODIFIER public RETURN int[] NAME METHOD_1 TYPE int[] NAME src TYPE int[] NAME VAR_1  return new int [ ] { TYPE_1 . METHOD_2 ( src [ 0 ] , VAR_1 [ 0 ] ) , TYPE_1 . METHOD_2 ( src [ 1 ] , VAR_1 [ 1 ] ) , TYPE_1 . METHOD_2 ( src [ 2 ] , VAR_1 [ 2 ] ) , TYPE_1 . METHOD_2 ( INT_1 , ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) COND ( ( VAR_4 ) != null ) && ( VAR_3 != 0 )  throw new TYPE_3 ( ( STRING_1 + STRING_2 ) ) ; COND ( VAR_4 ) != null TYPE boolean NAME VAR_5 INIT = TYPE_4 . METHOD_3 ( VAR_2 , VAR_2 , STRING_3 , STRING_4 ) COND ! VAR_5  throw new TYPE_3 ( ( STRING_1 + STRING_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME status TYPE TYPE_2 NAME test TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , test . METHOD_3 ( ) , test . METHOD_4 ( ) , VAR_3 ) )  VAR_2 . METHOD_2 ( METHOD_5 ( VAR_1 ) )  VAR_4 . METHOD_6 ( test )  super . METHOD_1 ( VAR_5 , test , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 )  return ;  METHOD_4 ( ) . METHOD_1 ( VAR_1 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_5 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_3 . METHOD_2 ( VAR_4 ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_2 . METHOD_3 ( )  METHOD_4 ( VAR_5 )  METHOD_5 ( VAR_1 , VAR_5 )  METHOD_6 ( VAR_1 , VAR_5 ) TYPE TYPE_4<TYPE_5> NAME VAR_6 INIT = METHOD_7 ( VAR_1 , VAR_5 )  TYPE_6 . METHOD_8 ( VAR_6 , VAR_1 , VAR_5 )  METHOD_9 ( VAR_1 , VAR_2 )  VAR_3 . METHOD_10 ( null )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1  METHOD_2 ( TYPE_2 )  METHOD_2 ( VAR_2 ) INIT = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( TYPE_2 ) ; METHOD_2 ( VAR_2 ) ; } }  TYPE_3 . when ( VAR_3 . METHOD_3 ( org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_5 ( VAR_4 class ) ) ) . thenReturn ( VAR_1 )  METHOD_6 ( TYPE_2 , VAR_2 )  assertEquals ( VAR_1 , VAR_5 . METHOD_3 ( TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) )
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) COND ( VAR_2 ) != null  TYPE_1 . METHOD_3 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( )  VAR_4 . METHOD_1 ( )  VAR_5 . METHOD_1 ( ) COND ( VAR_6 ) != null  VAR_6 . METHOD_1 ( )  VAR_2 . METHOD_1 ( )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_1 ( )  this COND ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_1 ( )  VAR_2 = null  TYPE_1 . METHOD_3 ( fd )
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( new TYPE_2 ( STRING_1 ) )  assertNotNull ( s )  s . METHOD_2 ( )  s = new TYPE_1 ( ( ( TYPE_3 ) ( null ) ) )  fail ( STRING_2 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_3 . of ( ) )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( STRING_3 )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_4 ) ) . METHOD_4 ( STRING_4 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME uri TYPE java.lang.String NAME action TYPE java.lang.String NAME data TYPE java.lang.String NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME VAR_2 TYPE java.util.Map<java.lang.String,java.lang.Object> NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE int NAME flags TYPE java.util.List<java.lang.String> NAME VAR_5 INIT = METHOD_2 ( uri , action , data , VAR_1 , VAR_2 , VAR_3 , VAR_4 , flags )  METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_1 , STRING_2 , VAR_5 . METHOD_5 ( VAR_6 ) ) . METHOD_5 ( VAR_6 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME request TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  TYPE_4 . METHOD_2 ( VAR_1 ) TYPE int NAME VAR_4 INIT = METHOD_3 ( VAR_5 ) TYPE TYPE_5 NAME VAR_6 INIT = new TYPE_5 ( VAR_3 )  METHOD_1 ( request , VAR_2 , VAR_1 , VAR_4 , VAR_6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) != null  return VAR_1 . METHOD_1 ( ) ; TYPE TYPE_2 NAME e BLOCK BLOCK  METHOD_2 ( )  android.util.Log.d ( TYPE_3 . TAG , ( STRING_1 + ( VAR_2 ) ) )  VAR_3 COND METHOD_3 ( )  return TYPE_3 . METHOD_4 ( VAR_2 ) ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( new TYPE_2 ( VAR_1 ) ) COND ( VAR_2 . METHOD_4 ( ) ) != ( VAR_3 ) BLOCK BLOCK  fail ( ) TYPE TYPE_3 NAME expected BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( STRING_2 ) )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , true ) ) . METHOD_6 ( VAR_3 class )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME is TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( is ) TYPE long NAME VAR_2 INIT = TYPE_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) COND VAR_2 == 0  return null ;  return new TYPE_1 ( VAR_2 ) ; TYPE java.lang.Exception NAME e  throw new TYPE_3 ( e ) ;  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME key  return ( VAR_1 . METHOD_1 ( key , ( - 1 ) ) ) == ( VAR_2 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e )  return false ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) TYPE TYPE_5 NAME VAR_3 INIT = ( ( TYPE_6 ) ( VAR_2 ) ) . METHOD_3 ( )  METHOD_4 ( VAR_3 ) COND ( VAR_4 ) != null  VAR_2 = new TYPE_7 ( VAR_2 , VAR_4 )  VAR_5 . METHOD_5 ( )  VAR_6 . METHOD_6 ( true , VAR_2 )
MODIFIER public RETURN java.lang.Integer NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 TYPE TYPE_3 NAME session INIT = VAR_4 . get ( VAR_1 ) COND session == null  throw new TYPE_4 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; TYPE int NAME VAR_5 INIT = METHOD_2 ( )  session . METHOD_3 ( null , TYPE_5 . METHOD_4 ( VAR_2 ) , new TYPE_6 ( VAR_5 ) )  return VAR_5 ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE short NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME key TYPE int NAME uid  return ( VAR_2 . METHOD_2 ( VAR_1 , key , uid ) ) == ( VAR_3 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_4 . TAG , STRING_1 , e )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME field TYPE java.lang.Object NAME value TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME source TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_3 NAME entry INIT = VAR_4 . get ( field ) COND entry == null  entry = new TYPE_3 ( field . getName ( ) , TYPE_4 . METHOD_2 ( ) , VAR_1 , source , VAR_2 , VAR_3 , true )  VAR_4 . METHOD_3 ( field , entry )  METHOD_4 ( field )  entry . METHOD_5 ( VAR_1 , value )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 )  VAR_4 . METHOD_3 ( VAR_2 , METHOD_4 ( VAR_1 ) ) TYPE TYPE_2 NAME e  TYPE_3 . e ( ( ( STRING_1 + ( e.getMessage ( ) ) ) + STRING_2 ) , e ) TYPE java.lang.Exception NAME e  TYPE_3 . e ( STRING_3 , e )
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_3 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) ) ) . thenReturn ( null )  VAR_2 . METHOD_5 ( false ) TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_6 ( )  VAR_2 . METHOD_7 ( VAR_4 ) TYPE int NAME VAR_5 INIT = VAR_2 . METHOD_6 ( )  assertEquals ( ( VAR_3 * 2 ) , VAR_5 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME address TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4  METHOD_2 ( VAR_5 , STRING_1 ) TYPE java.lang.Integer NAME VAR_6 INIT = VAR_7 . METHOD_3 ( VAR_1 , address ) COND VAR_6 == null  android.util.Log.d ( VAR_8 . TAG , ( STRING_2 + address ) )  return ; COND VAR_9  android.util.Log.d ( VAR_8 . TAG , ( ( ( STRING_3 + address ) + STRING_4 ) + VAR_6 ) )  METHOD_4 ( VAR_1 , VAR_6 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == 0  return - 1 ;  return TYPE_1 . METHOD_3 ( VAR_2 , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME call INIT = TYPE_2 . METHOD_2 ( VAR_1 class )  TYPE_2 . when ( call . METHOD_3 ( ) ) . thenReturn ( VAR_2 )  TYPE_2 . when ( VAR_3 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( ) ) ) . thenReturn ( call )  TYPE_3 . assertTrue ( VAR_4 . METHOD_6 ( ) )  org.mockito.Mockito.verify ( call ) . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) )  org.mockito.Mockito.verify ( VAR_3 , TYPE_1 . METHOD_4 ( 1 ) ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_7 ( ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 1 ) ) . METHOD_8 ( 1 )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 1 ) ) . METHOD_9 ( FLOAT_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME text TYPE TYPE_1 NAME VAR_4 TYPE TYPE_1 NAME VAR_5 TYPE boolean NAME VAR_6  VAR_7 . METHOD_2 ( ) . METHOD_3 ( VAR_8 , STRING_1 )  METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , text , VAR_4 , VAR_5 , VAR_6 , VAR_9 , false , VAR_10 )
MODIFIER synchronized RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME call TYPE TYPE_3 NAME number INIT = TYPE_3 . METHOD_2 ( VAR_1 , call . METHOD_3 ( ) , null ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_2 = VAR_3 . get ( call . METHOD_4 ( ) ) COND VAR_2 != null  VAR_2 . METHOD_5 ( )  METHOD_6 ( )  return VAR_2 ;  android.util.Log.e ( VAR_4 , ( ( STRING_1 + call ) + STRING_2 ) )  return null ;
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) TYPE char[] NAME VAR_2 INIT = new char [ VAR_3 . length ]  TYPE_2 . METHOD_2 ( VAR_3 , 0 , VAR_2 , 0 , VAR_3 . length )  VAR_4 = VAR_2  VAR_5 = null  return VAR_1 ; TYPE TYPE_3 NAME e  throw new TYPE_4 ( ) ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  return ( ( ( VAR_1 . METHOD_2 ( ) ) || ( ( ( VAR_1 . METHOD_3 ( ) ) != null ) && ( VAR_1 . METHOD_3 ( ) . METHOD_2 ( ) ) ) ) || ( VAR_2 . METHOD_2 ( ) ) ) || ( ( VAR_3 ) == null ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = TYPE_1 . METHOD_3 ( VAR_1 ) COND VAR_3 > 0  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_3 )  return VAR_3 ; TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_6 ( e ) ;  VAR_2 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . assertTrue ( ( ( TYPE_2 . METHOD_2 ( STRING_1 ) ) != ( VAR_1 ) ) )  TYPE_2 . METHOD_2 ( null )  TYPE_1 . fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK  TYPE_2 . METHOD_2 ( STRING_2 )  TYPE_2 . METHOD_2 ( STRING_3 )  TYPE_1 . fail ( ) TYPE java.lang.RuntimeException NAME expected BLOCK BLOCK
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_4 , VAR_2 , ( ( ( VAR_5 ) | ( VAR_6 ) ) | ( VAR_7 ) ) , VAR_1 , VAR_8 )  VAR_3 . METHOD_2 ( session . METHOD_3 ( ) . METHOD_4 ( VAR_9 ) )  VAR_3 . METHOD_5 ( false )  session . METHOD_6 ( VAR_3 )  return VAR_3 ;
MODIFIER public RETURN boolean NAME METHOD_1  return ( ( ( ( METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_2 ( ) ) ) || ( METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_2 ( ) ) ) ) || ( METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_2 ( ) ) ) ) || ( METHOD_2 ( ) . METHOD_3 ( TYPE_4 . METHOD_2 ( ) ) ) ) || ( METHOD_2 ( ) . METHOD_3 ( TYPE_5 . METHOD_2 ( ) ) ) ;
MODIFIER private static RETURN void NAME METHOD_1  VAR_1 . log ( VAR_2 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_3 , new TYPE_2 ( VAR_3 ) , ( ( VAR_4 ) | ( VAR_5 ) ) , VAR_6 ) TYPE TYPE_3 NAME e  VAR_1 . log ( VAR_7 , e.getMessage ( ) , e )  TYPE_4 . METHOD_3 ( )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.Class<?> NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . getName ( ) COND VAR_2 . METHOD_2 ( VAR_3 )  return VAR_2 ; COND VAR_2 . METHOD_3 ( VAR_4 )  return null ; TYPE java.lang.Class<?> NAME VAR_5 INIT = VAR_1 . METHOD_4 ( ) COND VAR_5 != null  return TYPE_1 . METHOD_1 ( VAR_5 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t INIT = null  t = new TYPE_1 ( STRING_1 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( )  t . METHOD_2 ( VAR_1 , INT_1 )  METHOD_3 ( VAR_1 )  t . METHOD_4 ( ) COND t != null  t . METHOD_4 ( )  new TYPE_1 ( null )  fail ( STRING_2 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME type COND VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 COND VAR_4 != null TYPE TYPE_5 NAME value INIT = TYPE_6 . METHOD_1 ( ( ( TYPE_7 ) ( VAR_4 ) ) ) COND ( value != null ) && ( value . METHOD_2 ( ) )  return value ;  return super . METHOD_1 ( VAR_1 , VAR_2 , type ) ;
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_3 ( ) COND VAR_1 == null  return ;  METHOD_4 ( VAR_2 class )  TYPE_2 . METHOD_5 ( )  METHOD_4 ( VAR_3 class ) COND ( ! ( METHOD_6 ( VAR_4 class ) ) ) && ( METHOD_7 ( ) )  METHOD_8 ( new TYPE_3 ( this , VAR_1 . METHOD_9 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_3 )  assertEquals ( VAR_4 , VAR_5 . METHOD_4 ( VAR_6 ) . METHOD_5 ( ) )  VAR_7 . METHOD_6 ( VAR_6 , VAR_8 , null )  org.mockito.Mockito.verify ( VAR_3 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( VAR_9 ) ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_10 ) , org.mockito.Matchers.eq ( VAR_8 ) , org.mockito.Matchers . METHOD_9 ( VAR_11 . Bundle class ) , org.mockito.Matchers . METHOD_10 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id TYPE java.lang.String NAME VAR_1 COND id == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_3 , id ) COND VAR_2 == 0  return null ; TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_2 , this , id )  return VAR_4 . METHOD_3 ( VAR_1 ) ; TYPE TYPE_5 NAME e  throw new TYPE_2 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( )  assertEquals ( VAR_1 . METHOD_3 ( ) . toString ( ) , STRING_1 )  VAR_1 . METHOD_4 ( true )  VAR_1 . METHOD_5 ( )  assertEquals ( VAR_1 . METHOD_3 ( ) . toString ( ) , STRING_2 ) TYPE java.lang.Exception NAME ex  fail ( ( STRING_3 + ex ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  android.util.Log.v ( VAR_2 . TAG , STRING_1 )  VAR_3 = new TYPE_2 ( VAR_4 , VAR_1 , VAR_5 ) COND VAR_6  android.util.Log.d ( VAR_2 . TAG , ( ( STRING_2 + ( VAR_3 . METHOD_2 ( ) ) ) + STRING_3 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE com.android.jack.ir.ast.JMethod NAME VAR_2 COND x . METHOD_2 ( )  VAR_2 = VAR_3 . METHOD_3 ( VAR_4 , TYPE_3 . METHOD_4 ( ) )  VAR_2 = VAR_3 . METHOD_3 ( VAR_5 , TYPE_3 . METHOD_4 ( ) )  METHOD_5 ( new TYPE_4 ( VAR_2 , ( ( TYPE_5 ) ( VAR_2 . METHOD_6 ( ) ) ) , VAR_1 ) )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == ( VAR_2 )  return false ; COND ( ( VAR_2 ) != null ) && ( ! ( VAR_2 . METHOD_2 ( ) ) )  VAR_2 . METHOD_3 ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . METHOD_4 ( ) ) > 0 )  VAR_2 = VAR_1  VAR_2 = null  return true ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == ( VAR_2 )  android.util.Log.w ( VAR_3 . TAG , ( ( STRING_1 + ( VAR_4 . METHOD_2 ( ) ) ) + STRING_2 ) )  return ;  android.util.Log.w ( VAR_3 . TAG , STRING_3 )  VAR_4 . METHOD_3 ( )  VAR_5 . METHOD_4 ( )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME input TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME m INIT = c . METHOD_3 ( STRING_2 , new java.lang.Class [ ] { int . class } )  return ( ( java.lang.Integer ) ( m . invoke ( null , input ) ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  METHOD_2 ( VAR_1 , VAR_2 ) COND ( VAR_3 ) != null COND ! ( VAR_3 . METHOD_3 ( ) )  android.util.Slog.w ( com.android.server.pm.PackageManagerService.TAG , ( STRING_1 + ( VAR_3 . METHOD_4 ( ) ) ) )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) ) COND ( VAR_2 ) != null  VAR_3 = new TYPE_2 ( VAR_2 . get ( ) , VAR_4 , VAR_1 )  VAR_5 = null  return VAR_1 ; TYPE TYPE_3 NAME e  throw new TYPE_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  android.util.Slog.v ( com.android.server.am.ActivityManagerService.TAG , ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_2 . METHOD_2 ( ) ) ) )  METHOD_3 ( VAR_3 )  this  METHOD_4 ( VAR_3 , VAR_4 , VAR_2 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int NAME VAR_4  METHOD_2 ( VAR_5 , VAR_1 , VAR_4 ) COND VAR_2  METHOD_2 ( VAR_6 , VAR_1 , VAR_4 ) COND VAR_3  METHOD_3 ( VAR_7 , VAR_1 )  METHOD_4 ( VAR_7 , VAR_1 )  METHOD_2 ( VAR_8 , VAR_1 , VAR_4 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_1 ) COND ( ! VAR_2 ) || ( ! ( TYPE_3 . METHOD_2 ( VAR_1 . getName ( ) ) ) )  return VAR_3 ;  return new TYPE_4 ( VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id COND id == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE int NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( VAR_2 , id ) COND VAR_1 == 0  return null ; TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_1 , this , id )  return VAR_3 . METHOD_3 ( ) ; TYPE TYPE_5 NAME e  throw new TYPE_2 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME w TYPE int NAME h TYPE int NAME d TYPE java.lang.Object NAME VAR_4  TYPE_1 . METHOD_2 ( VAR_5 , STRING_1 )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , w , h , d , VAR_4 , METHOD_4 ( VAR_4 , true ) , TYPE_2 . METHOD_5 ( VAR_4 ) )  TYPE_1 . METHOD_6 ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME method COND method == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_1 . get ( method ) COND result == null  result = new TYPE_1 ( method )  VAR_1 . METHOD_3 ( method , result )  return result ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 COND ( ( ( ( VAR_2 [ ( VAR_1 - 1 ) ] ) == CHAR_1 ) && ( ( VAR_2 [ ( VAR_1 - 2 ) ] ) == CHAR_2 ) ) && ( ( VAR_2 [ ( VAR_1 - 3 ) ] ) == CHAR_3 ) ) && ( ( VAR_2 [ ( VAR_1 - 4 ) ] ) == CHAR_4 )  return true ;  return false ;
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  METHOD_3 ( )  VAR_2 = false COND ( VAR_3 ) != null  VAR_3 . METHOD_4 ( this , VAR_4 )  VAR_5 . METHOD_5 ( )  METHOD_6 ( VAR_6 )  VAR_7 . METHOD_7 ( ) COND VAR_8  VAR_9 . METHOD_8 ( this )  VAR_9 = null
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( VAR_3 , VAR_1 ) COND VAR_2 . equals ( TYPE_3 )  return VAR_4 ; COND VAR_2 . equals ( TYPE_4 )  return VAR_5 ; COND VAR_2 . equals ( TYPE_5 )  return VAR_6 ;  return null ;
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME n TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 >= VAR_2 ) || ( n < 0 )  return 0 ; COND ( VAR_1 + n ) > VAR_2  return VAR_2 - VAR_1 ;  return n ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND VAR_1 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 IN VAR_1 . METHOD_3 ( ) COND VAR_2 . METHOD_4 ( )  METHOD_1 ( VAR_2 )  VAR_2 . METHOD_5 ( )  VAR_1 . METHOD_5 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME b TYPE java.lang.Object NAME VAR_2  METHOD_2 ( VAR_1 , b , VAR_2 ) TYPE TYPE_1 NAME VAR_3 COND ( ( VAR_4 ) == null ) || ( ! ( VAR_4 . METHOD_3 ( ) ) )  throw VAR_3 ;
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 COND ( VAR_1 . METHOD_1 ( ) ) == ( VAR_2 )  return ;  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_1 ( ) . METHOD_5 ( ) , VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME field COND field == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_1 . get ( field ) COND result == null  result = new TYPE_1 ( field )  VAR_1 . METHOD_3 ( field , result )  return result ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE float[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , w , h )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , data , ( ( data . length ) * 4 ) )
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( eq ( 0 ) , METHOD_3 ( ) ) ) . thenReturn ( true )  METHOD_4 ( )  VAR_2 . METHOD_5 ( VAR_3 , 0 , VAR_4 )  VAR_5 . METHOD_6 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE char NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN TYPE_1<?extendsTYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( ) COND VAR_2 == null  return TYPE_5 . METHOD_4 ( ) ;  return new TYPE_6 ( METHOD_5 ( ) , VAR_1 , VAR_2 ) . METHOD_1 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.Object NAME VAR_4 TYPE TYPE_2 NAME v TYPE java.lang.String NAME VAR_5 TYPE java.lang.String[] NAME VAR_6 INIT = Main . METHOD_2 ( VAR_7 , VAR_8 , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) COND ( ( VAR_7 ) == 0 ) && ( ( VAR_8 ) == null )  v . METHOD_3 ( VAR_6 , VAR_5 )  TYPE_3 . METHOD_4 ( VAR_6 ) TYPE java.lang.String NAME VAR_9 IN VAR_6  java.lang.System.out.println ( VAR_9 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 ) COND ! ( METHOD_3 ( s ) )  METHOD_4 ( )  s . METHOD_5 ( )  VAR_1 . METHOD_6 ( )  METHOD_7 ( )  VAR_1 . METHOD_8 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 class . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_2 class . METHOD_2 ( STRING_2 )  VAR_1 . invoke ( t )  t . METHOD_3 ( )  VAR_3 . invoke ( t ) TYPE java.lang.Exception NAME e  java.lang.System.out.println ( ( STRING_3 + ( e.toString ( ) ) ) )  e . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 NAME VAR_2 TYPE TYPE_2 NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( this )  VAR_4 . METHOD_3 ( )  VAR_5 = true  TYPE_3 . METHOD_4 ( this , METHOD_5 ( VAR_6 ) , VAR_7 ) . METHOD_6 ( ) TYPE android.content.Intent NAME in INIT = new android.content.Intent ( this , VAR_8 class )  in . METHOD_7 ( VAR_9 )  this . METHOD_8 ( in )  METHOD_9 ( )  break ;  METHOD_9 ( )  break ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE double NAME VAR_3 INIT = ( METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) * FLOAT_1  VAR_4 . METHOD_5 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) COND VAR_1 < 1  VAR_4 . METHOD_6 ( VAR_5 )  VAR_4 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME id TYPE TYPE_1 NAME p INIT = VAR_1 NAME id  VAR_3 = VAR_4  VAR_5 = METHOD_2 ( VAR_6 )  VAR_7 = METHOD_3 ( VAR_2 )  VAR_8 = METHOD_2 ( VAR_9 )  VAR_10 = this  VAR_11 = METHOD_2 ( VAR_12 )  VAR_13 = this  METHOD_4 ( )  VAR_14 = VAR_15 . METHOD_5 ( VAR_16 )  VAR_14 . METHOD_6 ( false )  break ;  break ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( STRING_1 , STRING_2 , VAR_3 . TAG , null , null , null , null , false )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( TYPE_1 . eq ( STRING_3 ) , TYPE_1 . eq ( STRING_4 ) , TYPE_1 . eq ( 0 ) , TYPE_1 . eq ( 0 ) , org.mockito.Matchers . METHOD_5 ( VAR_5 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME response INIT = new TYPE_2 ( )  VAR_4 = VAR_2 . type  VAR_5 = VAR_6  VAR_7 = VAR_8 COND RIL . RILJ_LOGD  VAR_3 . METHOD_3 ( VAR_9 , response ) COND ( VAR_10 ) != null  VAR_10 . METHOD_4 ( new android.os.AsyncResult ( null , response , null ) )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = ( ( VAR_4 ) >= ( VAR_5 ) ) ? VAR_6 : VAR_7  return VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_8 , java.lang.String . METHOD_5 ( VAR_2 ) ) . METHOD_4 ( VAR_9 , STRING_1 ) . METHOD_4 ( VAR_10 , VAR_11 ) . build ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1  METHOD_2 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) )  VAR_2 . METHOD_3 ( VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = VAR_2 . METHOD_4 ( )  VAR_4 = new TYPE_1 ( ( ( VAR_5 ) | ( VAR_6 ) ) , VAR_7 , VAR_8 )  VAR_2 . METHOD_5 ( VAR_4 )  METHOD_6 ( )  METHOD_7 ( VAR_9 , false , false )  status = VAR_10
MODIFIER public RETURN int NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return VAR_3 ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_4 , VAR_5 . METHOD_4 ( ) , VAR_6 , VAR_7 , VAR_8 ) TYPE TYPE_3 NAME VAR_9 INIT = METHOD_5 ( VAR_2 . METHOD_6 ( ) , ( - ( VAR_1 . METHOD_7 ( ) ) ) )  VAR_2 . METHOD_8 ( VAR_9 )  VAR_5 . METHOD_9 ( VAR_2 )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 )  return ;  METHOD_2 ( null , VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( ) TYPE java.util.Set<java.lang.String> NAME VAR_3 INIT = METHOD_4 ( VAR_1 ) TYPE java.lang.String NAME VAR_4 IN VAR_3  METHOD_5 ( VAR_2 , VAR_4 )  METHOD_6 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME fd TYPE java.lang.String NAME VAR_1  METHOD_2 ( fd , VAR_1 )  fail ( STRING_1 ) TYPE TYPE_2 NAME expected  assertEquals ( VAR_2 , VAR_3 )  TYPE_3 . METHOD_3 ( fd )
MODIFIER public RETURN boolean NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + s ) ) COND s != null  s . METHOD_2 ( ) TYPE java.io.IOException NAME e COND VAR_1  android.util.Log.e ( VAR_2 . TAG , STRING_2 )  VAR_3 . METHOD_3 ( VAR_4 ) . METHOD_4 ( )  return ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_3 ( STRING_1 , VAR_3 )  TYPE_3 . when ( VAR_4 . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_5 class ) ) ) . thenReturn ( VAR_2 ) TYPE java.lang.String NAME VAR_6 INIT = VAR_7 . METHOD_6 ( )  assertEquals ( VAR_6 , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( mContext ) TYPE TYPE_3 NAME state  assertFalse ( VAR_1 . METHOD_2 ( ) )  assertFalse ( VAR_1 . METHOD_3 ( ) )  state = VAR_1 . METHOD_4 ( )  assertNotNull ( state )  assertTrue ( VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_5 ( true )  VAR_1 . METHOD_6 ( state )  assertFalse ( VAR_1 . METHOD_2 ( ) )  assertTrue ( VAR_1 . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( this , VAR_3 ) COND VAR_2 == null  return ;  VAR_4 . METHOD_3 ( )  VAR_4 = VAR_2  VAR_4 . METHOD_4 ( VAR_5 )  METHOD_5 ( )  METHOD_6 ( false )  VAR_4 . METHOD_7 ( VAR_6 , false ) COND VAR_4 . METHOD_8 ( )  METHOD_9 ( true )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 == ( VAR_2 ) COND VAR_3  android.util.Log.v ( TYPE_1 . TAG , ( STRING_1 + VAR_1 ) )  return ; TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 COND VAR_4 == null COND VAR_3  android.util.Log.d ( TYPE_1 . TAG , STRING_2 )  return ;  VAR_4 . METHOD_2 ( VAR_6 ) TYPE android.os.Message NAME msg INIT = VAR_4 . METHOD_3 ( VAR_7 , VAR_1 , 0 )  VAR_4 . METHOD_4 ( msg )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.util.Map<TYPE_1,TYPE_2> NAME VAR_1 TYPE TYPE_3<TYPE_1,TYPE_2> NAME entry IN VAR_1 . METHOD_2 ( ) COND ( VAR_2 . METHOD_3 ( entry . METHOD_4 ( ) ) ) && ( VAR_3 . METHOD_3 ( entry . METHOD_5 ( ) ) )  return true ;  return false ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE char NAME VAR_1 TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE java.lang.String NAME VAR_2 INIT = java.lang.Integer . toString ( VAR_1 , 16 ) . METHOD_2 ( ) TYPE int NAME i INIT = VAR_2 . length ( ) COND i < 4  ++ i  result . append ( CHAR_1 )  return result + VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( )  android.util.Log.w ( VAR_1 . TAG , ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) )  METHOD_3 ( VAR_3 , VAR_4 , true , false )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME result INIT = METHOD_2 ( x , VAR_1 ) COND result == null  METHOD_3 ( null )  return ; COND ( VAR_2 ) != null TYPE TYPE_4 NAME VAR_3 INIT = METHOD_4 ( ) . get ( VAR_2 )  result = METHOD_5 ( VAR_3 , result )  METHOD_3 ( result ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + VAR_1 ) )  VAR_4 = false  VAR_5 = false  VAR_6 = VAR_1  VAR_6 . METHOD_2 ( VAR_7 )  VAR_6 . METHOD_3 ( VAR_8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 INIT = METHOD_2 ( VAR_2 class )  assertNotNull ( VAR_1 ) TYPE TYPE_2<java.lang.Class<?>,java.lang.Class<?>> NAME VAR_3 INIT = METHOD_3 ( )  assertNotNull ( VAR_3 )  VAR_3 . METHOD_4 ( ) TYPE TYPE_1[] NAME VAR_4 INIT = METHOD_2 ( VAR_2 class )  assertNotNull ( VAR_4 )  assertTrue ( TYPE_3 . equals ( VAR_1 , VAR_4 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 COND ( VAR_4 ) || ( TYPE_4 . METHOD_2 ( VAR_3 ) )  VAR_4 = true  return ;  TYPE_5 . METHOD_3 ( VAR_2 , VAR_1 , VAR_5 , VAR_3 , new TYPE_6 ( new java.io.File ( new java.lang.String ( VAR_6 ) ) ) ) COND ( VAR_7 ) != null TYPE TYPE_3 NAME VAR_8 IN VAR_7  METHOD_1 ( VAR_1 , VAR_2 , VAR_8 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME callback  METHOD_2 ( VAR_2 , STRING_1 ) COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( STRING_2 + VAR_1 ) )  VAR_5 . METHOD_3 ( VAR_1 , callback )  METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME path TYPE java.lang.String NAME name TYPE TYPE_3 NAME d INIT = TYPE_4 . METHOD_2 ( VAR_2 , path , name , null , VAR_1 ) . METHOD_3 ( ) TYPE TYPE_5 NAME r INIT = new TYPE_5 ( d , VAR_3 )  VAR_4 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1  assertEquals ( 9 , VAR_1 . length )  TYPE_1 . METHOD_2 ( VAR_1 [ 4 ] )  TYPE_1 . METHOD_2 ( VAR_1 [ 5 ] )  TYPE_1 . METHOD_2 ( VAR_1 [ 6 ] )  TYPE_1 . METHOD_2 ( VAR_1 [ 7 ] )  TYPE_1 . METHOD_2 ( VAR_1 [ 8 ] )
MODIFIER private static RETURN long NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 . getName ( ) ) COND ! ( VAR_2 . METHOD_3 ( ) )  throw new TYPE_1 ( ) ;  return TYPE_4 . METHOD_4 ( VAR_2 . METHOD_5 ( 1 ) ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_2 , new TYPE_4 ( TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) )  TYPE_5 . METHOD_4 ( VAR_2 . METHOD_3 ( ) , VAR_4 . METHOD_3 ( ) , VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) , VAR_3 . METHOD_7 ( ) . METHOD_6 ( ) )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( ) COND ( ( VAR_3 ) >= INT_1 ) && ( ( VAR_4 ) >= INT_2 )  METHOD_3 ( INT_1 , INT_2 , true , true )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 COND ( VAR_3 ) == null  return ; TYPE boolean NAME VAR_4 INIT = METHOD_2 ( ) COND VAR_5 . METHOD_3 ( )  return ;  VAR_5 . METHOD_4 ( METHOD_5 ( ( VAR_4 ? VAR_6 : VAR_7 ) ) )  VAR_8 . METHOD_6 ( VAR_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = java.io.File . METHOD_2 ( STRING_1 , STRING_2 )  VAR_1 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_3 )  VAR_2 . METHOD_5 ( )  VAR_2 . METHOD_6 ( ) TYPE TYPE_1 NAME f INIT = new TYPE_1 ( VAR_1 , true )  assertEquals ( 10 , f . METHOD_7 ( ) . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( ) COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_2 NAME name INIT = VAR_1 . getName ( ) COND ( VAR_2 . get ( name ) ) != null  throw new java.lang.IllegalArgumentException ( ( STRING_2 + name ) ) ;  VAR_2 . METHOD_3 ( name , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( ) . equals ( VAR_3 ) )  context . METHOD_4 ( VAR_4 , context . METHOD_5 ( VAR_2 ) , STRING_1 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME count  METHOD_2 ( STRING_1 )  arg ( STRING_2 , VAR_1 )  arg ( STRING_3 , VAR_2 )  arg ( STRING_4 , count )  METHOD_3 ( ) TYPE int NAME i INIT = 0 COND i < count  i ++  METHOD_4 ( VAR_3 , i , ( VAR_2 + count ) )  METHOD_5 ( )  METHOD_6 ( )  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , count )  METHOD_7 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . name = name  VAR_2 = METHOD_2 ( VAR_3 )  VAR_4 = METHOD_2 ( VAR_5 )  VAR_6 = METHOD_2 ( VAR_7 )  VAR_8 = METHOD_2 ( VAR_9 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 2 TYPE int NAME VAR_2 INIT = 8 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( 0 )  VAR_3 . METHOD_2 ( INT_1 )  fail ( STRING_1 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  VAR_3 . METHOD_2 ( ( - 1 ) )  fail ( STRING_2 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  VAR_3 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_2 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME url TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = mContext . METHOD_2 ( ) COND VAR_2 && ( ( VAR_4 ) != null )  VAR_4 . METHOD_3 ( false )  VAR_4 = null COND ( VAR_4 ) == null  VAR_4 = new TYPE_3 ( this , mContext , VAR_3 , VAR_1 )  VAR_4 . METHOD_4 ( url )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE android.content.Intent NAME VAR_3 INIT = new android.content.Intent ( this , METHOD_2 ( ) )  VAR_3 . METHOD_3 ( VAR_4 , VAR_2 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 , null ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  return null ;  ( VAR_4 ) ++ COND ! ( VAR_5 )  METHOD_3 ( ( ( VAR_2 . getName ( ) ) + STRING_1 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME uri TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  VAR_2 . METHOD_2 ( ) COND ( VAR_1 . METHOD_3 ( ) ) != 0  METHOD_4 ( VAR_3 , METHOD_5 ( uri ) , VAR_1 )  VAR_2 . METHOD_6 ( )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1  return new TYPE_1 ( null , null , false , null , null , null , VAR_1 , false , false , false , false , false , false , null , null , true , ( - 1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ! ( METHOD_2 ( VAR_3 , STRING_1 ) )  throw new TYPE_2 ( STRING_2 ) ;  VAR_4 TYPE TYPE_3 NAME VAR_5 INIT = METHOD_3 ( VAR_1 . METHOD_4 ( ) ) COND VAR_5 == null  android.util.Log.w ( TYPE_4 . TAG , ( STRING_3 + VAR_1 ) )  return ;  VAR_6 = VAR_2
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME time TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) != ( this )  throw new TYPE_3 ( ) ; TYPE TYPE_4 NAME VAR_4 INIT = this . VAR_4 COND ! ( METHOD_2 ( time , VAR_2 ) )  return false ; TYPE boolean NAME VAR_5 INIT = false  VAR_5 = VAR_1 . METHOD_3 ( ) COND ! VAR_5  VAR_4 . METHOD_4 ( )  return VAR_5 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( VAR_3 ) TYPE boolean NAME VAR_4 INIT = true TYPE int NAME i INIT = 0 TYPE int NAME s INIT = VAR_5 . size ( ) COND i < s  i ++ COND ( VAR_5 . get ( i ) . METHOD_2 ( ) ) != ( VAR_3 )  VAR_4 = false  break ; COND VAR_4  VAR_2 = VAR_3
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  VAR_1 = true  VAR_2 = null  VAR_3 = null  VAR_4 = null  VAR_5 = null  VAR_6 . METHOD_2 ( ) COND ( VAR_5 ) != null  VAR_5 . METHOD_1 ( ) TYPE TYPE_1 NAME VAR_7 BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1  METHOD_2 ( STRING_1 ) COND ! ( VAR_1 . METHOD_3 ( ) )  TYPE_2 . METHOD_4 ( VAR_2 ) COND ! ( VAR_3 . METHOD_3 ( ) )  TYPE_2 . METHOD_5 ( VAR_2 ) COND ! ( VAR_4 . METHOD_3 ( ) )  TYPE_2 . METHOD_6 ( VAR_2 )  return new TYPE_1 ( VAR_5 ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ;  VAR_2 . METHOD_5 ( method )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( false ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( )  VAR_2 . METHOD_4 ( null )  VAR_2 . METHOD_5 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK  VAR_1 . METHOD_6 ( )  VAR_2 . METHOD_5 ( )  fail ( STRING_2 ) TYPE TYPE_3 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE double NAME x TYPE int NAME VAR_2 TYPE java.lang.String NAME expected  VAR_1 . METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME out INIT = VAR_1 . format ( x )  logln ( ( ( ( ( x + STRING_1 ) + VAR_2 ) + STRING_2 ) + out ) ) COND ! ( out . equals ( expected ) )  errln ( ( STRING_3 + expected ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE java.lang.String NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME text TYPE java.lang.String NAME s INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME start INIT = ( s == null ) ? 0 : s . length ( )  VAR_1 . append ( text ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_3 ( )  VAR_2 . start = start  VAR_2 . length = text . length ( )  VAR_3 = VAR_4  VAR_1 . METHOD_3 ( VAR_2 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_1 TYPE java.util.List<java.lang.String> NAME args TYPE TYPE_1<java.lang.String,java.lang.String> NAME entry IN VAR_1 . METHOD_2 ( )  args . METHOD_3 ( STRING_1 )  args . METHOD_3 ( ( ( ( entry . METHOD_4 ( ) ) + STRING_2 ) + ( entry . METHOD_5 ( ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_1 NAME VAR_5  VAR_4 . fail ( VAR_5 . METHOD_2 ( ) )  throw VAR_5 ; TYPE java.io.IOException NAME e  VAR_4 . fail ( VAR_6 )  throw e ; TYPE java.lang.RuntimeException NAME e  VAR_4 . fail ( VAR_6 )  throw new TYPE_1 ( VAR_6 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = new java.util.ArrayList < java.lang.String > ( ) TYPE java.lang.String NAME VAR_4 IN VAR_2 . METHOD_2 ( VAR_1 ) COND ! ( VAR_3 . METHOD_3 ( VAR_4 ) )  VAR_3 . METHOD_4 ( VAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( VAR_4 , CHAR_1 )  METHOD_5 ( VAR_6 , VAR_5 )  METHOD_5 ( VAR_7 , VAR_5 )
MODIFIER public RETURN int NAME METHOD_1 COND ( VAR_1 ) == ( - 1 )  VAR_1 = INT_1 + ( VAR_2 . METHOD_1 ( ) ) COND ( VAR_3 ) != null  VAR_1 = ( INT_1 * ( VAR_1 ) ) + ( VAR_3 . METHOD_1 ( ) )  return VAR_1 ;
MODIFIER public static RETURN long NAME METHOD_1 TYPE java.lang.String NAME name TYPE long NAME arg COND VAR_1  throw new TYPE_1 ( ) ; TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME m INIT = c . METHOD_3 ( name , long . class )  return ( ( TYPE_3 ) ( m . invoke ( null , arg ) ) ) ; TYPE java.lang.Exception NAME ex  throw new TYPE_1 ( ex ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE TYPE_2 NAME status COND ! ( device . METHOD_2 ( VAR_1 ) )  return ; TYPE TYPE_3 NAME listener IN VAR_2  listener . METHOD_3 ( status ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( TYPE_4 . TAG , STRING_1 , e )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  s . METHOD_3 ( 0 , 0 )  VAR_1 . METHOD_4 ( )  METHOD_5 ( )  VAR_1 . METHOD_6 ( )
MODIFIER private final synchronized RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_2 ( VAR_4 )  VAR_2 . METHOD_3 ( STRING_1 , VAR_5 )  VAR_2 . METHOD_3 ( STRING_2 , VAR_6 )  TYPE_1 . METHOD_4 ( VAR_2 , null ) COND VAR_1  VAR_2 = new android.content.Intent ( VAR_7 )  mContext . METHOD_5 ( VAR_2 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_2 && ( ! ( VAR_1 . METHOD_1 ( true ) ) )  VAR_3 . error ( STRING_1 )  throw new java.io.IOException ( ( STRING_2 + VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME options INIT = new TYPE_1 ( )  options . METHOD_2 ( TYPE_2 . getName ( ) , TYPE_3 . toString ( ) )  TYPE_4 . METHOD_3 ( options , null , null , VAR_1 , false , false , FLOAT_1 , ( ( TYPE_5 ) ( null ) ) , ( ( TYPE_6 [ ] ) ( null ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME index TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( index ) COND VAR_1 != null  VAR_3 = VAR_1  VAR_4 . METHOD_2 ( true ) COND ! ( VAR_5 )  VAR_5 = true  VAR_6 . METHOD_3 ( index )  VAR_5 = false COND VAR_1 instanceof TYPE_2  ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_4 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME flags  this  METHOD_2 ( VAR_2 , STRING_1 ) TYPE long NAME VAR_3 INIT = TYPE_1 . METHOD_3 ( )  return METHOD_4 ( VAR_1 , flags ) ;  TYPE_1 . METHOD_5 ( VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE android.os.Message NAME VAR_2  VAR_3 COND VAR_4  log ( ( STRING_1 + VAR_1 ) ) TYPE boolean NAME VAR_5 INIT = true  VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_1  log ( STRING_2 )  METHOD_3 ( VAR_6 )  VAR_5 = false  log ( STRING_3 )  METHOD_4 ( VAR_7 , VAR_2 ) COND VAR_5 COND VAR_2 != null  VAR_2 . METHOD_5 ( )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE int NAME index INIT = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) COND index != ( - 1 )  return index == ( ( VAR_1 . length ( ) ) - ( VAR_2 . length ( ) ) ) ;  return false ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME address  android.util.Log . i ( VAR_1 . TAG , ( STRING_1 + address ) ) TYPE android.bluetooth.BluetoothDevice NAME d INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( address . METHOD_4 ( ) ) COND d == null  android.util.Log . METHOD_5 ( VAR_1 . TAG , ( STRING_2 + address ) )  TYPE_2 . METHOD_6 ( ) . METHOD_1 ( d )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 )  android.util.Log . i ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) ) COND VAR_1 > 0  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( )  VAR_5 . METHOD_5 ( )  TYPE_2 . set ( STRING_2 , STRING_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  METHOD_3 ( false )  METHOD_4 ( true )  METHOD_5 ( VAR_1 , false )  METHOD_6 ( false )  assertEquals ( VAR_2 , TYPE_1 . METHOD_7 ( mContext , VAR_3 , VAR_4 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  METHOD_3 ( VAR_1 . METHOD_4 ( null ) , java.lang.String . METHOD_5 ( true ) )  METHOD_6 ( VAR_1 )  return METHOD_7 ( VAR_1 ) . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( METHOD_11 ( VAR_1 , VAR_2 ) ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this TYPE int NAME index INIT = METHOD_2 ( VAR_1 , false ) COND index >= 0 TYPE TYPE_2 NAME r INIT = ( ( TYPE_2 ) ( VAR_2 . get ( index ) ) )  return r . packageName ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME size INIT = ( this . METHOD_2 ( ) ) > > 3 TYPE int NAME VAR_1 INIT = METHOD_3 ( )  return ( ( TYPE_1 ) ( new TYPE_2 ( this , ( - 1 ) , 0 , size , size , VAR_1 , METHOD_4 ( ) ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME VAR_1 TYPE long NAME context TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) )  super . METHOD_1 ( session , VAR_1 , context , VAR_2 , fd , callback )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.util.ArrayList<java.io.File> NAME VAR_3 COND VAR_1 == null  return ; TYPE java.lang.String NAME path IN VAR_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME sb INIT = VAR_4 . METHOD_3 ( path ) COND ( ! VAR_2 ) || ( METHOD_4 ( VAR_5 ) )  VAR_3 . METHOD_5 ( new java.io.File ( path ) ) TYPE TYPE_2 NAME VAR_6 BLOCK BLOCK
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String[] NAME VAR_3 INIT = VAR_4 TYPE java.lang.String NAME s INIT = VAR_3 [ VAR_2 ] COND s == null  s = VAR_1 . METHOD_2 ( ) . get ( VAR_2 ) . METHOD_3 ( )  VAR_3 [ VAR_2 ] = s  return s ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( this ) == obj  return true ; COND ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) ) COND ( VAR_2 ) != ( VAR_3 )  return false ;  return true ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = false TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( STRING_1 ) ) COND VAR_2 != null  VAR_1 = ( VAR_2 . METHOD_4 ( ) ) == ( VAR_3 ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_4 . TAG , STRING_2 , e )  return VAR_1 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) COND VAR_1 == null  return null ; TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_1 ( VAR_4 ) COND VAR_3 == null  METHOD_3 ( STRING_1 )  return null ;  return VAR_3 ;
MODIFIER public final RETURN void NAME METHOD_1  assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , ( - INT_1 ) ) )  assertEquals ( VAR_3 , VAR_2 . METHOD_2 ( STRING_1 , STRING_2 , 1 ) )  assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( STRING_3 , STRING_4 , ( - INT_2 ) ) )  assertEquals ( VAR_3 , VAR_2 . METHOD_2 ( STRING_3 , STRING_4 , 2 ) )  assertEquals ( VAR_4 , VAR_2 . METHOD_2 ( STRING_5 , STRING_6 , 3 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3  VAR_3 . METHOD_2 ( VAR_2 , VAR_1 ) COND android.util.Log . METHOD_3 ( VAR_4 , VAR_5 )  android.util.Log . i ( VAR_4 , ( STRING_1 + ( METHOD_4 ( ) ) ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int[] NAME VAR_2 TYPE int NAME offset TYPE int NAME VAR_3 TYPE int NAME x TYPE int NAME y TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE TYPE_1 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return ;  VAR_6 . METHOD_3 ( ) . METHOD_4 ( x , y , VAR_4 , VAR_5 , VAR_2 , offset , VAR_3 )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME callback MODIFIER public RETURN void NAME error TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3  callback . error ( VAR_2 , VAR_3 ) MODIFIER public RETURN void NAME METHOD_2 TYPE java.util.List<TYPE_3> NAME VAR_4  callback . METHOD_2 ( VAR_4 ) MODIFIER public RETURN void NAME METHOD_3  callback . METHOD_3 ( )  return METHOD_1 ( VAR_1 , new TYPE_2 ( ) { public void error ( int VAR_2 , java.lang.String VAR_3 ) throws android.os.RemoteException { callback . error ( VAR_2 , VAR_3 ) ; } public void METHOD_2 ( java.util.List < TYPE_3 > VAR_4 ) throws android.os.RemoteException { callback . METHOD_2 ( VAR_4 ) ; } public void METHOD_3 ( ) throws android.os.RemoteException { callback . METHOD_3 ( ) ; } } ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_1 instanceof TYPE_3  VAR_2 = VAR_3 . METHOD_1 ( ( ( TYPE_3 ) ( VAR_1 ) ) )  VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  METHOD_4 ( VAR_2 , ( ( TYPE_4 ) ( VAR_1 ) ) )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  assertTrue ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) )  verify ( VAR_5 , METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( VAR_6 class ) )  METHOD_6 ( VAR_1 )  VAR_7 . verify ( VAR_8 , METHOD_3 ( ) ) . METHOD_7 ( METHOD_8 ( ) , METHOD_5 ( VAR_9 class ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  s . METHOD_3 ( STRING_1 )  s . METHOD_4 ( 0 , 0 )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 class ) , TYPE_2 . METHOD_4 ( 100 ) , TYPE_2 . METHOD_4 ( 5 ) , TYPE_2 . METHOD_5 ( INT_1 ) ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_3 . METHOD_6 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 )  TYPE_3 . METHOD_7 ( VAR_3 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context  VAR_1 = TYPE_2 . get ( context . METHOD_2 ( ) ) COND ( ( VAR_1 ) == null ) && ( ! ( VAR_2 ) )  VAR_2 = true  context . METHOD_3 ( VAR_3 , TYPE_3 . METHOD_4 ( VAR_4 ) , STRING_1 , null )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME node TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( ) TYPE int NAME start INIT = VAR_3 . METHOD_3 ( this , node ) COND start != ( - 1 )  return METHOD_4 ( start , VAR_1 ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event  METHOD_2 ( ) TYPE float[] NAME values INIT = event . values TYPE TYPE_2 NAME VAR_1 INIT = METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_2 )  VAR_1 . METHOD_5 ( VAR_3 , values [ 0 ] , values [ 1 ] , values [ 2 ] , TYPE_3 . METHOD_6 ( values ) )  VAR_1 . METHOD_4 ( VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_4 NAME VAR_5 INIT = ( ( TYPE_4 ) ( VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) )  METHOD_2 ( VAR_5 )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( - 1 ) , TYPE_1 . METHOD_2 ( new java.util.ArrayList < java.lang.Integer > ( ) , 9 ) ) MODIFIER public RETURN int NAME METHOD_3 TYPE java.lang.Integer NAME VAR_1 TYPE java.lang.Integer NAME VAR_2  return VAR_1 . METHOD_4 ( VAR_2 ) ;  assertEquals ( ( - 1 ) , TYPE_1 . METHOD_2 ( new java.util.ArrayList < java.lang.Integer > ( ) , 9 , new TYPE_2 < java.lang.Integer > ( ) { public int METHOD_3 ( java.lang.Integer VAR_1 , java.lang.Integer VAR_2 ) { return VAR_1 . METHOD_4 ( VAR_2 ) ; } } ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME item  VAR_1 TYPE java.util.Map<TYPE_2,TYPE_3<java.lang.String,TYPE_1>> NAME VAR_2 INIT = METHOD_2 ( ) TYPE TYPE_3<java.lang.String,TYPE_1> NAME VAR_3 INIT = METHOD_2 ( item . METHOD_3 ( ) ) COND ! ( VAR_3 . METHOD_4 ( item ) )  VAR_3 . METHOD_5 ( item . getName ( ) , item )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME source TYPE TYPE_2[] NAME VAR_1 COND ( VAR_1 . length ) > 0  VAR_2 . METHOD_2 ( source ) COND source == null  return METHOD_3 ( this , VAR_1 ) ;  return METHOD_4 ( this , source , VAR_1 ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE byte[] NAME VAR_4 COND VAR_2 instanceof TYPE_6 TYPE TYPE_6 NAME VAR_5 INIT = ( ( TYPE_6 ) ( VAR_2 ) )  VAR_4 = VAR_5 . METHOD_2 ( )  VAR_4 = null  METHOD_3 ( VAR_1 , key , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_3 )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) TYPE int NAME VAR_4 INIT = VAR_3 . size ( ) TYPE int NAME VAR_5 INIT = 0 COND VAR_5 < VAR_4  VAR_5 ++  assertEquals ( STRING_1 , VAR_2 . get ( ( ( VAR_4 - VAR_5 ) - 1 ) ) , VAR_3 . get ( VAR_5 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME target COND target == ( this )  return true ; COND ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( ) )  return VAR_2 . METHOD_1 ( target ) ; COND ( ! ( VAR_3 . equals ( target . METHOD_3 ( ) ) ) ) || ( ! ( VAR_4 . equals ( target . getName ( ) ) ) )  return false ;  return VAR_2 . METHOD_1 ( target ) ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) < ( VAR_4 )  TYPE_3 . fail ( STRING_1 )  return ( ( boolean ) ( VAR_5 class . METHOD_2 ( STRING_2 , VAR_6 class ) . invoke ( VAR_1 , VAR_2 ) ) ) ; TYPE TYPE_4|TYPE_5|TYPE_6 NAME e  TYPE_7 . e ( STRING_3 , STRING_4 , e )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE java.lang.String NAME VAR_1  TYPE_1 . d ( ( STRING_1 + device ) )  VAR_2 . METHOD_2 ( device )  VAR_3 . METHOD_3 ( device )  VAR_4 . METHOD_4 ( device )  VAR_5 . METHOD_5 ( device )  VAR_6 . METHOD_6 ( device )  VAR_7 . METHOD_7 ( device )  VAR_8 . METHOD_8 ( device )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME target INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) COND target != null TYPE TYPE_4 NAME data INIT = TYPE_3 . METHOD_2 ( ) . METHOD_5 ( target ) COND data != null TYPE TYPE_1 NAME VAR_2 INIT = data . METHOD_1 ( )  return VAR_2 ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_1 NAME VAR_4  VAR_4 = VAR_5 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) COND VAR_2 . equals ( STRING_1 )  VAR_6 . METHOD_2 ( new java.lang.Integer ( VAR_1 ) )  return VAR_4 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . d ( this , STRING_1 , VAR_1 ) COND ( ( VAR_2 ) == null ) || ( VAR_2 . equals ( VAR_3 . METHOD_2 ( ) ) )  METHOD_3 ( VAR_3 . METHOD_2 ( ) )  METHOD_4 ( )  METHOD_5 ( VAR_1 )  VAR_2 . METHOD_6 ( )  VAR_4 = VAR_1 TYPE android.os.Message NAME msg INIT = VAR_5 . METHOD_7 ( VAR_6 )  msg.obj = VAR_1  VAR_5 . METHOD_8 ( msg , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME length INIT = METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( os )  VAR_2 . METHOD_3 ( VAR_3 , 0 , length ) TYPE java.lang.String NAME result INIT = new java.lang.String ( os . METHOD_4 ( ) )  assertEquals ( VAR_1 , result )
MODIFIER public static RETURN int NAME METHOD_1 TYPE float NAME VAR_1  TYPE_1 . assertTrue ( ( VAR_1 > 0 ) ) TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( 1 , ( ( int ) ( TYPE_3 . METHOD_3 ( ( 1 / VAR_1 ) ) ) ) )  return VAR_2 <= 8 ? TYPE_1 . METHOD_4 ( VAR_2 ) : ( ( VAR_2 + 7 ) / 8 ) * 8 ;
MODIFIER public static RETURN long NAME METHOD_1 TYPE long NAME arg1 TYPE long NAME VAR_1 COND VAR_2  throw new TYPE_1 ( ) ; TYPE long NAME res INIT = 0 TYPE long NAME VAR_3 INIT = - arg1 TYPE long NAME i INIT = 0 COND i < 1  i ++  res += ( VAR_3 - VAR_1 ) - i  return res ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( ( ( VAR_2 ) & ( VAR_3 ) ) != 0 ) != VAR_1  VAR_2 = ( ( VAR_2 ) & ( ~ ( VAR_3 ) ) ) | ( VAR_1 ? VAR_3 : 0 ) COND ! VAR_1  METHOD_2 ( )  METHOD_3 ( true )  METHOD_4 ( )  METHOD_5 ( VAR_1 ) COND VAR_1  METHOD_6 ( VAR_4 )  METHOD_7 ( VAR_5 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context COND ( VAR_1 ) >= ( VAR_2 ) TYPE TYPE_3 NAME VAR_3 INIT = context . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) COND ! ( VAR_3 . METHOD_5 ( ) )  return VAR_3 . get ( 0 ) ;  return TYPE_1 . METHOD_6 ( ) ;  return context . METHOD_2 ( ) . METHOD_3 ( ) . locale ;
MODIFIER private RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME size INIT = VAR_2 . size ( ) COND size == 0  return null ; TYPE java.lang.Object NAME value INIT = VAR_1 . METHOD_1 ( VAR_2 . get ( 0 ) ) TYPE int NAME i INIT = 1 COND i < size  i ++ COND ! ( TYPE_2 . METHOD_2 ( value , VAR_1 . METHOD_1 ( VAR_2 . get ( i ) ) ) )  return null ;  return value ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME output COND VAR_1 . METHOD_2 ( ) COND output . METHOD_3 ( )  output . METHOD_4 ( ) COND METHOD_5 ( output )  METHOD_6 ( )  TYPE_1 . METHOD_7 ( ( STRING_1 + output ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e TYPE int NAME id INIT = VAR_1 . METHOD_2 ( 8 , e . METHOD_3 ( VAR_1 ) ) COND ! ( e . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 ) ) )  throw new TYPE_4 ( STRING_1 ) ;  return new TYPE_1 ( id , VAR_1 , e ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND VAR_1 != null TYPE TYPE_1 NAME path INIT = TYPE_3 . get ( VAR_1 ) . METHOD_3 ( )  TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( path ) , STRING_1 , path )  return path ; TYPE TYPE_1 NAME VAR_3 INIT = TYPE_5 . METHOD_6 ( STRING_2 )  TYPE_2 . METHOD_7 ( VAR_2 , VAR_3 . toString ( ) )  TYPE_6 . METHOD_8 ( VAR_3 )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME listener  METHOD_2 ( ) COND listener == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_3 NAME p INIT = METHOD_3 ( VAR_2 , listener )  VAR_3 . METHOD_4 ( p )  VAR_4 . METHOD_1 ( VAR_1 , p ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_2 , e , VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( true , METHOD_4 ( ) )  assertFalse ( VAR_3 . METHOD_5 ( VAR_4 ) )  assertTrue ( VAR_5 . METHOD_6 ( ) )  assertTrue ( VAR_2 . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  VAR_1 . run ( )  METHOD_3 ( ) . METHOD_4 ( VAR_3 class ) . METHOD_5 ( STRING_1 ) . METHOD_5 ( STRING_2 ) . METHOD_5 ( STRING_3 ) . METHOD_4 ( VAR_4 class ) . METHOD_5 ( STRING_4 ) . METHOD_6 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME node TYPE java.lang.String NAME text TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = java.lang.String.format ( STRING_1 , text . METHOD_2 ( VAR_2 , VAR_3 ) ) TYPE TYPE_3 NAME location INIT = context . METHOD_3 ( node , VAR_1 , VAR_3 )  context . METHOD_4 ( VAR_5 , node , location , VAR_4 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 )  TYPE_1 . when ( VAR_4 . METHOD_2 ( VAR_1 ) ) . thenReturn ( STRING_3 )  TYPE_2 . assertTrue ( VAR_5 . METHOD_3 ( VAR_6 , VAR_3 ) )  TYPE_1 . when ( VAR_4 . METHOD_2 ( VAR_1 ) ) . thenReturn ( STRING_4 )  TYPE_2 . assertFalse ( VAR_5 . METHOD_3 ( VAR_6 , VAR_3 ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( ) TYPE TYPE_1 NAME result INIT = new TYPE_1 ( null , VAR_1 , TYPE_3 . METHOD_4 ( ) )  VAR_3 = true TYPE TYPE_1 NAME VAR_4 INIT = VAR_2 . METHOD_5 ( STRING_1 )  result . METHOD_6 ( VAR_4 )  return result ;
MODIFIER public RETURN java.lang.String NAME toString TYPE java.lang.String[] NAME values INIT = new java.lang.String [ this . METHOD_1 ( ) ] TYPE int NAME i INIT = 0 COND i < ( values . length )  i ++  values [ i ] = java.lang.String.format ( STRING_1 , i )  return METHOD_2 ( new java.lang.StringBuilder ( ) , null , values ) . toString ( ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  VAR_1 = STRING_1 COND VAR_2  VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 )  VAR_1 = TYPE_1 . METHOD_3 ( VAR_1 , VAR_3 )  return VAR_1 ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE java.lang.String NAME name TYPE int NAME arg COND VAR_1  throw new TYPE_1 ( ) ; TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME m INIT = c . METHOD_3 ( name , int . class )  return ( ( java.lang.Integer ) ( m . invoke ( null , arg ) ) ) ; TYPE java.lang.Exception NAME ex  throw new TYPE_1 ( ex ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME count TYPE TYPE_3 NAME sb INIT = new TYPE_3 ( 100 )  sb.append ( CHAR_1 ) TYPE int NAME i INIT = 0 COND i < count  i ++  sb.append ( CHAR_2 )  sb.append ( CHAR_3 )  sb.append ( VAR_1 . METHOD_2 ( ) )  return TYPE_1 . METHOD_3 ( sb . toString ( ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3  return ( ( ( VAR_4 . get ( VAR_5 ) ) != VAR_1 ) || ( ( VAR_4 . get ( VAR_6 ) ) != VAR_3 ) ) || ( ( VAR_4 . get ( VAR_7 ) ) != VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = ( ( java.lang.String [ ] ) ( VAR_2 . METHOD_2 ( ) ) ) TYPE java.lang.String[] NAME f INIT = ( ( java.lang.String [ ] ) ( VAR_3 . METHOD_3 ( ) ) )  assertTrue ( STRING_1 , f . equals ( VAR_2 ) )  f [ 0 ] = STRING_2  assertTrue ( STRING_3 , ( ! ( f . equals ( VAR_1 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_3 )  return ;  TYPE_2 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_5 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE java.lang.String NAME VAR_1 TYPE TYPE_4 NAME service INIT = VAR_2 . METHOD_1 ( context , STRING_1 )  return new TYPE_5 ( VAR_3 . METHOD_1 ( context , VAR_1 ) , 2 , 2 , new TYPE_6 ( service ) , false ) ; TYPE TYPE_7 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME result TYPE TYPE_2 NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE boolean NAME VAR_5 TYPE int NAME VAR_6 COND ( VAR_7 ) == ( VAR_8 ) TYPE java.lang.String NAME VAR_9 INIT = VAR_10 . METHOD_2 ( VAR_1 ) COND ( VAR_11 . equals ( VAR_9 ) ) == false  METHOD_3 ( VAR_9 , false )  METHOD_4 ( VAR_1 )  return METHOD_1 ( result , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  assertEquals ( 0 , TYPE_1 . METHOD_3 ( VAR_1 ) ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( STRING_2 )  assertEquals ( 16 , TYPE_1 . METHOD_3 ( VAR_2 ) )  TYPE_2 . METHOD_4 ( )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e COND VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = ( ( TYPE_4 ) ( VAR_1 ) )  return TYPE_5 . METHOD_1 ( VAR_1 , e ) ; COND ! ( e . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) )  throw new TYPE_6 ( STRING_1 ) ; TYPE int NAME id INIT = VAR_1 . METHOD_4 ( 2 , e . METHOD_5 ( VAR_1 ) )  return new TYPE_1 ( id , VAR_1 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_4 . METHOD_3 ( VAR_1 ) COND VAR_1 != null  VAR_4 . METHOD_4 ( METHOD_5 ( VAR_1 , true ) )  VAR_4 . METHOD_4 ( STRING_1 )  METHOD_6 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME t TYPE int NAME VAR_2 TYPE int NAME VAR_3 COND TYPE_1 . METHOD_2 ( mContext ) . METHOD_3 ( )  METHOD_4 ( )  VAR_4 = true TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 COND VAR_5 != null  VAR_7 = true COND ( ( VAR_8 ) != null ) && ( ( VAR_9 ) != null )  VAR_9 . METHOD_5 ( this , VAR_1 , t , VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  VAR_2 . METHOD_5 ( method )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE boolean NAME VAR_5 TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return ;  VAR_6 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 class . METHOD_2 ( ) TYPE java.lang.Class<?> NAME VAR_3  VAR_3 = VAR_1 . METHOD_3 ( STRING_1 ) TYPE TYPE_3 NAME VAR_4  return null ; TYPE TYPE_1 NAME VAR_5  VAR_5 = VAR_3 . METHOD_4 ( STRING_2 , VAR_6 . String class ) TYPE TYPE_4 NAME VAR_7  VAR_8 . println ( STRING_3 )  return null ;  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME out TYPE boolean NAME VAR_2 TYPE java.io.File NAME VAR_3  METHOD_2 ( VAR_1 , VAR_3 ) COND VAR_2  VAR_4 . METHOD_3 ( out )  VAR_4 . METHOD_4 ( out )  TYPE_1 . METHOD_5 ( VAR_5 )  TYPE_1 . METHOD_6 ( VAR_6 )  TYPE_2 . run ( VAR_4 )  TYPE_1 . METHOD_5 ( VAR_7 )  TYPE_1 . METHOD_6 ( VAR_8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE byte[] NAME VAR_3 TYPE int NAME VAR_4 COND VAR_5  android.util.Log.w ( VAR_6 . TAG , STRING_1 )  return ; TYPE TYPE_2 NAME VAR_7 INIT = VAR_8 . get ( ) COND VAR_7 == null  android.util.Log.w ( VAR_6 . TAG , STRING_2 )  return ;  VAR_7 . METHOD_1 ( VAR_9 , VAR_10 , VAR_1 , VAR_3 , VAR_2 , VAR_4 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME config  METHOD_2 ( )  VAR_1 . METHOD_3 ( STRING_1 ) . c ( TYPE_2 . METHOD_4 ( ) ) . METHOD_5 ( ) COND ! ( mContext . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) )  throw new TYPE_3 ( STRING_2 ) ;  return VAR_3 . METHOD_8 ( VAR_4 , config ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE boolean NAME VAR_4  assertTrue ( STRING_1 , VAR_2 . METHOD_2 ( ) )  assertTrue ( STRING_2 , VAR_5 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) COND VAR_4  assertEquals ( STRING_3 , VAR_1 . METHOD_4 ( ) , VAR_2 . METHOD_4 ( ) )  assertEquals ( VAR_3 , VAR_2 . METHOD_5 ( ) )
MODIFIER private final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 ) COND VAR_2  METHOD_4 ( )  TYPE_2 . METHOD_5 ( VAR_1 , VAR_3 )  TYPE_2 . METHOD_6 ( VAR_1 , VAR_3 )  this . VAR_4 = VAR_1
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 class ) . METHOD_3 ( ) . METHOD_4 ( )  fail ( ) TYPE TYPE_2 NAME expected  assertTrue ( ( ( expected . METHOD_5 ( ) ) instanceof TYPE_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 )  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_2 . METHOD_6 ( VAR_6 , 1 ) . METHOD_7 ( ) . METHOD_8 ( )  assertEquals ( VAR_7 , VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 )  METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME res INIT = METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME VAR_1 INIT = res . METHOD_4 ( ) . VAR_1  METHOD_5 ( res , VAR_1 )  TYPE_3 . METHOD_6 ( res , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) TYPE java.lang.String[] NAME VAR_2 INIT = VAR_1 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 )  METHOD_5 ( VAR_2 , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( VAR_3 )  VAR_1 . METHOD_6 ( VAR_4 )  VAR_1 . METHOD_7 ( VAR_3 )  VAR_1 . METHOD_8 ( TYPE_3 . METHOD_9 ( ) ) TYPE TYPE_4 NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER private static RETURN java.lang.Class NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Class NAME VAR_2 INIT = null COND VAR_1 != null  VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME ex  VAR_2 = TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME VAR_3  VAR_2 = null  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 NAME TYPE_3 . METHOD_2 ( VAR_1 )  return new TYPE_4 ( this ) ;  return new TYPE_5 ( this ) ;  return new TYPE_6 ( this ) ;  return new TYPE_7 ( this ) ;  throw new TYPE_2 ( STRING_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( VAR_2 class ) ) ) . thenReturn ( METHOD_4 ( VAR_3 , VAR_4 ) ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_5 ( VAR_6 , false , true , INT_1 , INT_2 , VAR_7 , VAR_3 , VAR_8 , VAR_9 , VAR_10 , null )  VAR_11 . METHOD_6 ( VAR_5 , VAR_12 , VAR_13 ) TYPE TYPE_3 NAME VAR_14 INIT = METHOD_7 ( VAR_4 )  assertEquals ( VAR_14 . METHOD_8 ( VAR_15 ) , java.lang.Integer . METHOD_9 ( VAR_16 ) )
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( STRING_1 )  s . METHOD_2 ( ( ( java.lang.String ) ( null ) ) )  fail ( STRING_2 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK  s = new TYPE_1 ( STRING_1 )  s . METHOD_2 ( STRING_3 )  assertEquals ( STRING_3 , s . METHOD_3 ( ) . toString ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_2 ) TYPE TYPE_4 NAME VAR_4 COND ( VAR_4 = VAR_3 . METHOD_3 ( ) ) != null COND VAR_1 . equals ( VAR_4 . getName ( ) )  return true ;  return false ;  VAR_3 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) , TYPE_3 . METHOD_2 ( ) , 0 )  METHOD_4 ( STRING_1 , 0 , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  assertTrue ( ( VAR_1 != ( VAR_2 ) ) )  TYPE_1 . METHOD_3 ( VAR_1 )  TYPE_1 . METHOD_2 ( STRING_2 )  fail ( ) TYPE java.lang.RuntimeException NAME expected BLOCK BLOCK  TYPE_2 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new TYPE_1 ( 20 , 0 , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , INT_1 , VAR_2 , VAR_2 , VAR_2 , VAR_2 , VAR_2 , true ) COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( new android.os.AsyncResult ( null , VAR_1 , null ) )
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME METHOD_3 TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_4 ( METHOD_5 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_6 ( VAR_2 , STRING_3 )  VAR_1 . METHOD_7 ( VAR_3 )  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) { public void METHOD_3 ( java.util.List < TYPE_2 > VAR_1 ) { long VAR_2 = METHOD_4 ( METHOD_5 ( ) ) ; TYPE_2 VAR_3 = METHOD_6 ( VAR_2 , STRING_3 ) ; VAR_1 . METHOD_7 ( VAR_3 ) ; } } )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = r . METHOD_3 ( ) COND ( ( VAR_2 ) == null ) || ( ! ( VAR_2 . equals ( VAR_1 ) ) )  VAR_2 = VAR_1  VAR_3 = TYPE_3 . METHOD_4 ( VAR_4 )  VAR_5 = r . METHOD_5 ( VAR_6 )  VAR_7 = r . METHOD_5 ( VAR_8 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in TYPE boolean NAME VAR_1 INIT = ( in . METHOD_2 ( ) ) != 0 TYPE int NAME VAR_2 INIT = in . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = in . METHOD_2 ( ) TYPE int NAME VAR_4 INIT = in . METHOD_2 ( ) TYPE boolean NAME VAR_5 INIT = ( in . METHOD_2 ( ) ) != 0  return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1<java.lang.String> NAME VAR_3 TYPE java.lang.Object[] NAME VAR_4 INIT = VAR_3 . METHOD_2 ( ) TYPE java.lang.Object NAME VAR_5 INIT = TYPE_2 . METHOD_3 ( null , VAR_1 , VAR_2 , VAR_6 , null , VAR_4 , VAR_4 [ 0 ] ) TYPE int NAME x INIT = 0 COND x < ( VAR_4 . length )  x ++ COND VAR_4 [ x ] . equals ( VAR_5 )  return x ;  return - 1 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME type NAME VAR_1  return TYPE_4 . METHOD_2 ( type ) ;  return TYPE_4 . METHOD_3 ( type ) ;  throw new TYPE_5 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ;
MODIFIER private static RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = context . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3  VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) TYPE java.io.IOException NAME e  android.util.Log.e ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) )  return null ; TYPE byte[] NAME VAR_5 INIT = TYPE_4 . METHOD_4 ( VAR_3 )  return VAR_5 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE boolean NAME VAR_3 COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 )  VAR_2 . METHOD_2 ( )  return ; TYPE TYPE_2 NAME state INIT = new TYPE_2 ( VAR_1 ) TYPE TYPE_3 NAME result INIT = new TYPE_3 ( )  TYPE_4 . METHOD_3 ( state , result )  result . METHOD_4 ( VAR_2 , VAR_3 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = ( VAR_3 == null ) ? null : TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 ) ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) , VAR_1 , VAR_3 , VAR_4 )  METHOD_6 ( VAR_5 )  return VAR_5 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.util.Map<TYPE_2,java.util.Map<java.lang.String,TYPE_3>> NAME VAR_1 TYPE java.util.Map<TYPE_2,java.util.Map<java.lang.String,TYPE_3>> NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_1 , VAR_2 )  VAR_5 . METHOD_2 ( VAR_3 , VAR_4 )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  this COND ( tree ) != null  VAR_3 . METHOD_2 ( )  this . VAR_1 = VAR_1  tree = new TYPE_3 ( VAR_2 )  tree . METHOD_3 ( )  tree . METHOD_4 ( )  VAR_4 = null  VAR_5 = 1  VAR_6 = null  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 = new TYPE_1 ( mContext , VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) , new byte [ ] [ ] { VAR_3 } , 0 , null , VAR_4 , METHOD_2 ( ) . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( )  android.util.Log.w ( VAR_1 . TAG , ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) )  METHOD_3 ( VAR_3 , VAR_4 , false , false )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 TYPE TYPE_5 NAME project TYPE TYPE_6 NAME VAR_3 TYPE TYPE_7 NAME VAR_4 COND ( project == null ) || ( ! ( TYPE_8 . METHOD_2 ( ) . METHOD_3 ( ) ) )  return TYPE_9 . METHOD_4 ( ) ;  return VAR_5 < TYPE_2 > METHOD_5 ( new TYPE_10 ( project , VAR_1 , VAR_2 , VAR_3 ) ) ;
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( method . METHOD_1 ( ) )  VAR_2 . METHOD_5 ( method )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 10 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( null )  VAR_2 . METHOD_4 ( false ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_2 . METHOD_5 ( )  VAR_3 . METHOD_6 ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_2 . METHOD_7 ( )  METHOD_8 ( VAR_4 ) TYPE int NAME VAR_5 INIT = VAR_3 . METHOD_9 ( )  assertEquals ( VAR_1 , VAR_5 )  VAR_2 . METHOD_10 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_4  android.util.Log.d ( VAR_5 . TAG , ( ( ( STRING_1 + ( VAR_1 . netId ) ) + STRING_2 ) + VAR_2 ) ) COND VAR_2 . METHOD_3 ( VAR_6 )  METHOD_4 ( VAR_1 . netId )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND VAR_4  android.util.Log.v ( VAR_5 . TAG , STRING_1 ) COND VAR_3 == null  android.util.Log.e ( VAR_5 . TAG , STRING_2 )  VAR_6 . METHOD_2 ( VAR_1 , VAR_7 , null )  return ; TYPE java.util.List<TYPE_3> NAME VAR_8 INIT = METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_1 , VAR_2 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( STRING_1 , INT_1 )  assertEquals ( INT_1 , VAR_1 . length ( ) )  VAR_1 = new TYPE_1 ( STRING_1 , INT_2 )  assertEquals ( INT_2 , VAR_1 . length ( ) )  VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 )  assertEquals ( VAR_2 , VAR_1 . length ( ) )  VAR_1 = new TYPE_1 ( STRING_1 , VAR_3 )  assertEquals ( VAR_3 , VAR_1 . length ( ) )
MODIFIER public RETURN android.bluetooth.BluetoothDevice NAME METHOD_1 COND VAR_1  android.util.Log.d ( TYPE_1 . TAG , ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) TYPE TYPE_1 NAME service INIT = METHOD_3 ( VAR_3 ) COND service == null  return null ;  return service . METHOD_2 ( ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME device TYPE TYPE_2 NAME VAR_1  VAR_2 = false TYPE TYPE_5<TYPE_6> NAME VAR_3 INIT = METHOD_1 ( ) . METHOD_2 ( ) COND ( VAR_3 . METHOD_3 ( ) ) && ( ! ( VAR_2 ) )  VAR_4 = VAR_3 . METHOD_4 ( ) COND VAR_4 . METHOD_5 ( ) . METHOD_6 ( )  VAR_4 . run ( device , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( ) TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_4 ( VAR_5 )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_1 ) )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_2 ) , org.mockito.Matchers . METHOD_7 ( int . class ) )  assertEquals ( VAR_3 , true )
MODIFIER public RETURN boolean NAME METHOD_1 COND ( METHOD_2 ( ) ) != null COND ( ( METHOD_2 ( ) . METHOD_3 ( VAR_1 , false ) ) && ( ( METHOD_4 ( ) ) != null ) ) && ( ( VAR_2 ) <= ( VAR_3 ) )  return true ; COND ( METHOD_5 ( VAR_4 ) ) && ( TYPE_1 . METHOD_6 ( ) )  return true ;  return false ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.Set<TYPE_3> NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) TYPE int NAME VAR_6 INIT = VAR_7 . METHOD_3 ( ) TYPE int NAME VAR_8 INIT = VAR_7 . METHOD_4 ( ) TYPE boolean NAME VAR_9 INIT = VAR_2 . METHOD_5 ( VAR_10 ) TYPE boolean NAME VAR_11 INIT = VAR_2 . METHOD_5 ( VAR_12 )  return new TYPE_1 ( VAR_4 , null , VAR_6 , VAR_8 , VAR_3 , VAR_9 , VAR_11 , null , null ) ;
MODIFIER private RETURN int[] NAME METHOD_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 TYPE int NAME count INIT = VAR_1 . size ( ) TYPE int[] NAME VAR_2 INIT = new int [ count * 2 ] TYPE int NAME index INIT = 0 COND index < count  index ++ TYPE TYPE_1 NAME c INIT = VAR_1 . get ( index )  VAR_2 [ ( 2 * index ) ] = c . x  VAR_2 [ ( ( 2 * index ) + 1 ) ] = c . y  return VAR_2 ;
MODIFIER public RETURN java.lang.String[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( STRING_1 ) COND ( VAR_2 ) != null  return VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE android.os.RemoteException NAME e  throw e . METHOD_3 ( ) ;  return null ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME res TYPE TYPE_2 NAME VAR_2 COND VAR_2 != null  return VAR_2 . toString ( ) ; COND res != 0 TYPE TYPE_3 NAME r INIT = METHOD_2 ( VAR_1 ) COND r != null  return r . METHOD_3 ( res ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( true )  assertTrue ( STRING_1 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( false )  assertFalse ( STRING_2 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( false )  assertFalse ( STRING_2 , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE byte[] NAME VAR_2 COND ( null == VAR_2 ) || ( 0 >= ( VAR_2 . length ) )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND ( VAR_3 ) == ( METHOD_2 ( ) )  throw new TYPE_2 ( STRING_2 ) ;  return METHOD_3 ( VAR_4 , VAR_1 , VAR_2 ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == 0  return null ;  return TYPE_1 . METHOD_3 ( VAR_2 , VAR_1 ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 != null COND ( VAR_1 . METHOD_3 ( ) ) == 2 TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 . METHOD_4 ( ) ) ) TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( VAR_1 . METHOD_5 ( ) ) )  VAR_4 = TYPE_4 . METHOD_6 ( VAR_2 , VAR_3 , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME service INIT = VAR_1 COND ( service == null ) || ( ( METHOD_2 ( ) ) == false )  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  return false ;  return service . METHOD_3 ( this ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_2 , e )  return false ;
MODIFIER public RETURN java.lang.Object NAME METHOD_1 COND VAR_1 TYPE java.util.List NAME result INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( value ) ) TYPE TYPE_3 NAME VAR_3 IN TYPE_3 . values ( ) COND VAR_2 . METHOD_3 ( VAR_3 )  result . METHOD_4 ( VAR_2 . get ( VAR_3 ) )  return result ;  return value ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = null TYPE java.lang.String NAME VAR_3 INIT = null COND VAR_1 == null  VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 ) COND VAR_1 instanceof TYPE_3 TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( VAR_1 ) )  VAR_2 = VAR_4 . METHOD_3 ( )  VAR_3 = VAR_4 . METHOD_4 ( )  this  return TYPE_4 . METHOD_5 ( name , VAR_1 , VAR_2 , VAR_3 ) ;
MODIFIER public RETURN java.lang.Object NAME get TYPE int NAME index TYPE java.lang.Object NAME value INIT = values . get ( index ) COND value == null  throw new TYPE_1 ( ( ( STRING_1 + index ) + STRING_2 ) ) ;  return value ; TYPE TYPE_2 NAME e  throw new TYPE_1 ( ( ( ( ( STRING_3 + index ) + STRING_4 ) + ( values . size ( ) ) ) + STRING_5 ) ) ;
MODIFIER protected RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == 1  return VAR_1 ; TYPE int NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( VAR_4 ) COND ( METHOD_3 ( ) ) == ( VAR_5 )  return VAR_3 + VAR_1 ; TYPE int NAME VAR_6 INIT = ( METHOD_4 ( ) ) ? VAR_2 : 0 TYPE int NAME VAR_7 INIT = ( VAR_1 + VAR_3 ) + VAR_6  return VAR_7 - ( VAR_7 % ( VAR_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE java.util.List<java.io.File> NAME VAR_3 INIT = VAR_4 . get ( VAR_1 ) COND VAR_3 == null  VAR_3 = TYPE_1 . METHOD_2 ( )  VAR_4 . METHOD_3 ( VAR_1 , VAR_3 )  VAR_3 . METHOD_4 ( VAR_2 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME key INIT = new TYPE_3 ( VAR_2 , STRING_1 ) TYPE TYPE_1 NAME c INIT = TYPE_1 . METHOD_2 ( STRING_2 )  c . METHOD_3 ( VAR_1 , key )  return c ; TYPE java.lang.Exception NAME e  fail ( ( STRING_3 + ( e.getMessage ( ) ) ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.Object,java.lang.Object> NAME VAR_1  VAR_2 = new TYPE_1 < byte [ ] > ( VAR_1 . size ( ) ) TYPE java.lang.Object NAME key IN VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME value INIT = ( ( TYPE_2 ) ( VAR_1 . get ( key ) ) ) COND ! ( METHOD_3 ( value ) )  VAR_2 . METHOD_4 ( ( ( TYPE_3 ) ( key ) ) . METHOD_5 ( ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( VAR_2 ) ; COND ( VAR_3 ) == 0  return VAR_4 ; TYPE int NAME VAR_5 INIT = TYPE_3 . METHOD_1 ( this . VAR_6 , this . VAR_3 )  return new TYPE_4 ( VAR_7 , VAR_5 , VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME h TYPE int NAME VAR_1 TYPE java.lang.Object NAME obj COND VAR_2  return ; TYPE TYPE_2 NAME r INIT = new TYPE_2 ( h , VAR_1 , obj )  VAR_3 . METHOD_2 ( r ) COND ( ( VAR_4 ) == 0 ) && ( ( VAR_5 ) == true )  r . METHOD_3 ( new android.os.AsyncResult ( null , null , null ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  METHOD_3 ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_2 . METHOD_4 ( VAR_4 , VAR_5 )  VAR_3 . verify ( VAR_5 ) . METHOD_5 ( VAR_6 )  VAR_3 . verify ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 )  VAR_3 . verify ( VAR_5 ) . METHOD_7 ( VAR_6 )  VAR_3 . verify ( VAR_4 ) . METHOD_8 ( VAR_6 , VAR_8 , VAR_9 , VAR_10 )  TYPE_2 . METHOD_9 ( VAR_5 , VAR_11 , VAR_4 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2  return ( ( TYPE_1 . METHOD_2 ( VAR_1 , ( ( VAR_3 ) | ( VAR_4 ) ) ) ) && ( TYPE_2 . equals ( name ) ) ) && ( TYPE_3 . equals ( VAR_2 ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND ! ( VAR_1 . METHOD_2 ( ) )  throw new TYPE_2 ( location ) ; COND ! ( VAR_1 . METHOD_3 ( ) )  throw new TYPE_3 ( location ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME request TYPE TYPE_2 NAME VAR_1 INIT = request . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_3 NAME uri INIT = TYPE_3 . METHOD_4 ( VAR_2 ) TYPE java.lang.String NAME path INIT = uri . METHOD_5 ( )  return path . equals ( VAR_3 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE float NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE float NAME VAR_3 INIT = ( v == null ) ? ( ( float ) ( m . METHOD_2 ( ) ) ) : ( ( float ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public static final RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = ( ( ( 8 * ( VAR_3 ) ) + ( VAR_4 ) ) + ( VAR_5 ) ) + ( 20 * ( VAR_4 ) ) COND VAR_1 >= ( VAR_6 )  VAR_2 += 2 * ( VAR_4 )  return VAR_2 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME m INIT = c . METHOD_3 ( STRING_2 , ( ( java.lang.Class [ ] ) ( null ) ) )  m . invoke ( null , ( ( java.lang.Object [ ] ) ( null ) ) ) TYPE TYPE_2 NAME e  return ;  throw new TYPE_3 ( STRING_3 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE TYPE_1 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return ;  VAR_6 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_4 ) + STRING_6 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( VAR_2 , true )  assertEquals ( VAR_1 , VAR_3 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE int NAME index TYPE double NAME value COND VAR_1 instanceof double [ ]  ( ( double [ ] ) ( VAR_1 ) ) [ index ] = value  throw TYPE_2 . METHOD_2 ( VAR_1 ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME context TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = on . METHOD_1 ( VAR_1 , context ) COND ! ( VAR_2 . METHOD_2 ( ) )  context . METHOD_3 ( new TYPE_5 ( VAR_3 , VAR_2 ) )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME node TYPE TYPE_4 NAME pos INIT = ( ( TYPE_4 ) ( METHOD_2 ( node ) ) ) COND pos != null  return TYPE_1 . METHOD_3 ( VAR_1 , pos , ( ( TYPE_4 ) ( pos . METHOD_4 ( ) ) ) ) ;  return TYPE_1 . METHOD_3 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( true )  VAR_1 . METHOD_4 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK  VAR_2 . METHOD_5 ( )  VAR_1 . METHOD_4 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME subId  VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , VAR_1 ) COND ! ( TYPE_2 . METHOD_4 ( VAR_3 , VAR_1 , STRING_1 ) )  return null ;  return TYPE_3 . METHOD_5 ( VAR_4 . METHOD_6 ( ) , subId ) . METHOD_7 ( ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME item IN VAR_1 . METHOD_3 ( ) TYPE TYPE_3 NAME node INIT = item . METHOD_4 ( ) . METHOD_5 ( ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_4 . METHOD_6 ( node . METHOD_7 ( ) ) COND VAR_3 != null  return VAR_3 ;  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME source TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 IN VAR_2 . values ( ) TYPE TYPE_1 NAME s IN VAR_1 COND s . equals ( source )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . start ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  assertEquals ( VAR_3 , VAR_2 . type ( ) ) TYPE TYPE_3 NAME address INIT = VAR_2 . address ( ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( )  VAR_4 . METHOD_3 ( address , 10 )  VAR_4 . METHOD_4 ( ) TYPE int NAME VAR_5 INIT = VAR_1 . METHOD_5 ( )  assertEquals ( 1 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME res INIT = METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME VAR_1 INIT = res . METHOD_4 ( ) . VAR_1  METHOD_5 ( res )  TYPE_3 . METHOD_6 ( res , VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE double NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( STRING_2 ) , TYPE_4 . of ( ) )  TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , true ) ) . METHOD_6 ( VAR_3 class )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME name COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( name ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_1 NAME VAR_4 COND TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  VAR_4 = TYPE_1 . METHOD_5 ( VAR_5 , VAR_2 ) TYPE long NAME VAR_6 INIT = VAR_1 . METHOD_6 ( VAR_7 )  VAR_4 = TYPE_4 . METHOD_7 ( VAR_6 , VAR_2 )  return VAR_4 . METHOD_8 ( ) . METHOD_9 ( VAR_8 , java.lang.String . METHOD_10 ( VAR_1 . METHOD_4 ( ) ) ) . build ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( ) COND VAR_1 == null  return null ; TYPE TYPE_5 NAME VAR_2 INIT = TYPE_5 . METHOD_3 ( VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = VAR_2 . METHOD_4 ( new TYPE_6 ( VAR_1 ) )  return VAR_4 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME path TYPE int NAME action COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_1 . METHOD_2 ( action ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_3 ( ) ) == ( VAR_1 )  throw new TYPE_2 ( STRING_3 ) ;  return METHOD_4 ( VAR_2 , path , action ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_4 INIT = METHOD_3 ( VAR_3 , new TYPE_3 ( ) , VAR_1 )  org.junit.Assert.assertEquals ( STRING_1 , 1 , VAR_4 . size ( ) ) TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . get ( STRING_2 ) COND VAR_2  TYPE_4 . METHOD_4 ( VAR_5 )  return VAR_5 ;  VAR_3 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 COND ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 )  VAR_2 . METHOD_2 ( ( ( VAR_3 ) + ( ( int ) ( VAR_1 ) ) ) )  VAR_2 . METHOD_3 ( new TYPE_1 ( VAR_1 ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_4 INIT = ( ( TYPE_2 ) ( VAR_1 . event ) ) COND VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) )  android.util.Log.w ( VAR_6 . TAG , ( ( ( STRING_1 + ( VAR_4 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_4 . METHOD_4 ( ) ) ) )  return VAR_7 ;  return VAR_8 ;  return VAR_9 ;
MODIFIER public RETURN void NAME append TYPE TYPE_1 NAME VAR_1  VAR_3 . METHOD_2 ( new TYPE_2 ( VAR_1 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME c INIT = new TYPE_1 ( )  Main . METHOD_2 ( )  Main . METHOD_3 ( c )  Main . METHOD_4 ( c )  Main . METHOD_5 ( new Main ( ) )  Main . METHOD_6 ( )  Main . METHOD_7 ( c )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = ( ( VAR_3 ) != null ) ? VAR_3 . METHOD_2 ( ) : STRING_1 TYPE TYPE_2 NAME VAR_4 INIT = ( METHOD_3 ( ) ) != null  VAR_5 . METHOD_1 ( VAR_2 , listener . callback , VAR_1 , VAR_4 ) TYPE android.os.RemoteException NAME ex BLOCK BLOCK TYPE java.lang.NullPointerException NAME ex BLOCK BLOCK
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) TYPE int NAME VAR_4 INIT = ( ( java.lang.Integer ) ( VAR_1 . METHOD_2 ( VAR_5 ) ) )  VAR_6 = new TYPE_2 ( VAR_4 , VAR_2 ) COND ( METHOD_3 ( ) ) != null  METHOD_3 ( ) . METHOD_1 ( this )  return true ;
MODIFIER private RETURN boolean NAME METHOD_1 COND ( ( address ) != null ) && ( ( address ) instanceof TYPE_1 ) TYPE byte[] NAME VAR_1 INIT = address . METHOD_2 ( )  return ( ( VAR_1 [ 0 ] ) & ( ( byte ) ( INT_1 ) ) ) == ( ( byte ) ( INT_2 ) ) ;  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args COND ( ( VAR_8 ) != null ) && ( VAR_8 . METHOD_2 ( VAR_3 ) )  return new TYPE_5 ( VAR_1 , VAR_7 , VAR_3 , args ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 class . getName ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( )  VAR_1 . METHOD_2 ( new TYPE_3 ( VAR_3 , null ) , 0 )  TYPE_4 . METHOD_3 ( VAR_3 . version ) . METHOD_4 ( VAR_4 )  TYPE_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( 2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  METHOD_2 ( ) COND VAR_3  android.util.Log.d ( VAR_4 , ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + VAR_2 ) )  VAR_5 . METHOD_4 ( VAR_1 . METHOD_3 ( ) ) COND VAR_6 COND VAR_2  METHOD_5 ( VAR_7 )  METHOD_5 ( VAR_8 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return new TYPE_1 ( ( ( android.bluetooth.BluetoothDevice ) ( in . METHOD_2 ( null ) ) ) , in . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( in . METHOD_5 ( ) ) , in . METHOD_3 ( ) , in . METHOD_5 ( ) , ( ( in . METHOD_3 ( ) ) == 1 ) , ( ( in . METHOD_3 ( ) ) == 1 ) ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME v INIT = null  v = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK TYPE java.lang.NullPointerException NAME e BLOCK BLOCK COND v != null  return TYPE_1 . METHOD_3 ( v ) ; TYPE TYPE_3 NAME e BLOCK BLOCK  return VAR_2 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME offset TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( )  sb.append ( CHAR_1 ) . append ( VAR_2 ) . append ( CHAR_2 )  sb.append ( VAR_3 ) . append ( CHAR_3 ) . append ( CHAR_4 )  sb.append ( VAR_4 ) . append ( CHAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( offset , sb . toString ( ) )  VAR_1 . addChild ( VAR_5 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.Object NAME expected TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME source INIT = ( ( ( ( ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) + VAR_1 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) + STRING_11  TYPE_1 . METHOD_2 ( expected , source , VAR_2 )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND ( ! ( METHOD_2 ( ) ) ) && ( ! ( METHOD_3 ( VAR_1 ) ) )  return ;  METHOD_4 ( VAR_1 , VAR_2 ) COND ( METHOD_5 ( ) ) != VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . METHOD_6 ( VAR_4 , METHOD_7 ( VAR_1 ) , VAR_2 )  throw new TYPE_3 ( VAR_3 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME w TYPE int NAME h TYPE int NAME d TYPE int[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , w , h , d )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , data , ( ( data . length ) * 4 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) != null  METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( VAR_4 ) )  VAR_5 = VAR_1 TYPE TYPE_3 NAME VAR_6 INIT = VAR_1 . METHOD_5 ( )  VAR_6 . METHOD_6 ( VAR_7 , VAR_2 )  VAR_8 . METHOD_7 ( true )  VAR_9 . METHOD_8 ( true )  return true ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  METHOD_3 ( VAR_1 , s )  METHOD_4 ( VAR_1 , s )  METHOD_5 ( VAR_1 , s )  s . METHOD_6 ( true )  VAR_1 . METHOD_7 ( )  METHOD_8 ( )  VAR_1 . METHOD_9 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE long NAME i TYPE byte[] NAME VAR_1 TYPE int NAME offset  VAR_1 [ offset ] = ( ( byte ) ( i > > INT_1 ) )  VAR_1 [ ( offset + 1 ) ] = ( ( byte ) ( i > > 16 ) )  VAR_1 [ ( offset + 2 ) ] = ( ( byte ) ( i > > 8 ) )  VAR_1 [ ( offset + 3 ) ] = ( ( byte ) ( i ) )
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 COND ! ( TYPE_2 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_3 . TAG , STRING_1 )  return new TYPE_1 [ 0 ] ; TYPE TYPE_3 NAME service INIT = METHOD_3 ( ) COND service == null  return new TYPE_1 [ 0 ] ;  return service . METHOD_1 ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 16 , INT_1 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( args . in )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( args . in ) , TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE short NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_2 . TAG , null , null , null , null , false )  verify ( VAR_3 ) . METHOD_3 ( METHOD_4 ( byte [ ] . class ) , METHOD_4 ( VAR_4 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . METHOD_2 ( STRING_1 ) COND TYPE_3 . get ( VAR_1 ) . METHOD_3 ( STRING_2 , false ) TYPE TYPE_4 NAME VAR_2 IN VAR_3 . METHOD_4 ( )  VAR_2 . METHOD_1 ( VAR_1 )  TYPE_2 . i ( STRING_1 , STRING_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME userId  VAR_1 . METHOD_1 ( userId )  VAR_2 . METHOD_2 ( VAR_3 )  VAR_4  VAR_5 . METHOD_3 ( )  VAR_6 . METHOD_3 ( ) TYPE TYPE_1 NAME p IN VAR_7  METHOD_4 ( p . getName ( ) , false , VAR_8 )  VAR_8 = userId  METHOD_5 ( )
MODIFIER private static RETURN int NAME METHOD_1 TYPE java.lang.Class<?> NAME type COND ! ( type . METHOD_2 ( ) )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + type ) ) ; COND TYPE_1 . METHOD_3 ( type )  return 8 ;  return 4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( msg.obj ) ) NAME VAR_2  METHOD_2 ( VAR_1 )  break ;  METHOD_3 ( VAR_1 )  break ;  METHOD_4 ( VAR_1 )  break ;  VAR_7 . METHOD_5 ( )  break ;  android.util.Log.e ( VAR_8 . TAG , ( STRING_1 + ( VAR_2 ) ) )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE long NAME VAR_1 TYPE long NAME VAR_2 TYPE long NAME VAR_3 TYPE long NAME VAR_4 TYPE long NAME VAR_5 TYPE long NAME VAR_6 TYPE TYPE_1.Allocation NAME VAR_7  return new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) . METHOD_1 ( ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 COND VAR_4  android.util.Log.d ( TYPE_1 . TAG , ( STRING_1 + device ) ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( device , VAR_1 , VAR_2 , VAR_3 )  VAR_5 . start ( )  return VAR_5 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = 0 TYPE TYPE_2 NAME context INIT = mContext COND VAR_1 >= 0 TYPE TYPE_3 NAME VAR_3 INIT = METHOD_2 ( packageName , VAR_1 ) COND VAR_3 != null  context = VAR_3 . context  VAR_2 = VAR_1 COND VAR_2 != 0  return TYPE_4 . METHOD_1 ( context , VAR_2 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE char NAME c COND ! ( ( TYPE_1 . METHOD_2 ( c ) ) || ( ( c >= CHAR_1 ) && ( c <= CHAR_2 ) ) )  TYPE_2 . e ( VAR_1 , ( ( STRING_1 + c ) + STRING_2 ) )  VAR_2 . METHOD_1 ( c )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element COND ( ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) ) ) && ( ! ( TYPE_3 . METHOD_4 ( element ) ) )  context . METHOD_5 ( VAR_1 , element , context . METHOD_6 ( element ) , STRING_1 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME project INIT = TYPE_3 . METHOD_2 ( e . METHOD_3 ( ) ) COND project == null  project = TYPE_4 . METHOD_4 ( ) . METHOD_5 ( ) COND TYPE_5 . METHOD_6 ( project )  TYPE_5 . METHOD_7 ( )  TYPE_6 . METHOD_4 ( ) . METHOD_8 ( project , VAR_1 , TYPE_7 . METHOD_4 ( project ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( )  TYPE_3 . METHOD_2 ( VAR_2 class . METHOD_3 ( ) , new java.lang.Class < ? > [ ] { VAR_3 class , VAR_4 class , VAR_5 class , VAR_6 class , VAR_7 class } , VAR_1 )  VAR_8 . println ( STRING_1 ) TYPE java.lang.IllegalArgumentException NAME VAR_9  java.lang.System.out.println ( STRING_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME d INIT = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) . METHOD_3 ( ) TYPE TYPE_4 NAME r INIT = new TYPE_4 ( d , VAR_3 )  VAR_4 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER public RETURN int NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return 0 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return 0 ;  return service . METHOD_1 ( device ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME result TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE TYPE_4 NAME VAR_3 INIT = result . METHOD_2 ( ) TYPE TYPE_5 NAME VAR_4 INIT = TYPE_6 . METHOD_3 ( VAR_3 , ( ( TYPE_3 ) ( result ) ) . METHOD_4 ( ) , VAR_5 , METHOD_5 ( ) )  VAR_2 . METHOD_6 ( VAR_4 )  VAR_2 . METHOD_6 ( VAR_1 )  return new TYPE_7 ( VAR_3 , VAR_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 == null  TYPE_4 . METHOD_4 ( context )  TYPE_5 . e ( STRING_1 , STRING_2 ) TYPE TYPE_6 NAME call INIT = VAR_1 . METHOD_5 ( ) COND call != null  call . METHOD_6 ( false , null )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 TYPE int NAME i INIT = ( VAR_1 . size ( ) ) - 1 COND i >= 0  i --  VAR_1 . get ( i ) . run ( ) TYPE TYPE_1 NAME VAR_2 INIT = this . VAR_3 COND VAR_2 != null  VAR_2 . METHOD_1 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME value INIT = TYPE_2 . METHOD_1 ( VAR_1 )  callback . METHOD_2 ( value ) TYPE TYPE_3 NAME e  callback . METHOD_3 ( e . METHOD_4 ( ) ) TYPE java.lang.RuntimeException NAME e  callback . METHOD_3 ( e ) TYPE TYPE_4 NAME e  callback . METHOD_3 ( e )
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == 1  return VAR_1 ; TYPE int NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) COND ( ! ( VAR_5 ) ) || ( ( VAR_6 ) == ( VAR_7 ) )  return VAR_3 + VAR_1 ; TYPE int NAME VAR_8 INIT = ( VAR_1 + VAR_3 ) + ( VAR_2 )  return VAR_8 - ( VAR_8 % ( VAR_2 ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( ( ( short ) ( VAR_6 ) ) , VAR_7 . METHOD_3 ( ) )  TYPE_1 . METHOD_4 ( VAR_1 , VAR_5 )  TYPE_3 . METHOD_5 ( VAR_1 ) TYPE TYPE_4|TYPE_5 NAME e  android.util.Log.e ( VAR_8 . TAG , STRING_1 , e )  return false ;  return true ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME info TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( info ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_2 )  TYPE_5 . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 , VAR_4 , ( ( ( VAR_5 ) | ( VAR_6 ) ) | ( VAR_7 ) ) , 0 , false )
MODIFIER public RETURN boolean[] NAME METHOD_1 TYPE boolean[] NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( mContext ) COND ( VAR_1 . length ) >= 9  return VAR_1 ; TYPE boolean[] NAME VAR_2 INIT = new boolean [ 9 ]  TYPE_2 . METHOD_3 ( VAR_1 , 0 , VAR_2 , 0 , VAR_1 . length )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class<?extendsTYPE_1> NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( )  VAR_3 . METHOD_2 ( STRING_1 , VAR_2 ) COND VAR_1 != null  VAR_3 . METHOD_2 ( STRING_2 , VAR_1 . getName ( ) )  VAR_4 . print ( ( ( ( VAR_5 ) + ( VAR_6 . METHOD_3 ( VAR_3 ) ) ) + STRING_3 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 IN VAR_1  METHOD_2 ( VAR_2 )  METHOD_3 ( false ) TYPE java.lang.String NAME VAR_3 INIT = METHOD_4 ( VAR_4 )  assertEquals ( STRING_1 , STRING_2 , VAR_3 )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) COND VAR_1 . equals ( STRING_1 )  VAR_2 = STRING_2 COND VAR_1 . equals ( STRING_3 )  VAR_2 = STRING_4 COND VAR_1 . equals ( STRING_5 )  VAR_2 = STRING_6  return VAR_2 ;
MODIFIER private static RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( STRING_1 , STRING_2 )  VAR_1 . METHOD_2 ( STRING_3 , STRING_4 )  VAR_1 . METHOD_2 ( STRING_5 , STRING_6 )  VAR_1 . METHOD_2 ( STRING_7 , STRING_8 )  VAR_1 . METHOD_2 ( STRING_9 , STRING_10 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  return null ; TYPE byte[] NAME VAR_2  VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , false ) TYPE java.lang.IllegalArgumentException NAME e  return null ;  return new java.lang.String ( VAR_2 , VAR_3 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME pos INIT = new TYPE_2 ( 0 ) TYPE TYPE_3 NAME VAR_2  VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , pos )  METHOD_3 ( VAR_2 )  assertEquals ( STRING_2 , 5 , pos . METHOD_4 ( ) )  METHOD_5 ( 8 ) TYPE TYPE_4 NAME VAR_3
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2  < TYPE_2 > VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 class )  org.mockito.Mockito.verify ( VAR_1 ) . METHOD_3 ( VAR_3 . METHOD_4 ( ) , org.mockito.Matchers . METHOD_5 ( VAR_5 class ) )  assertEquals ( VAR_6 , VAR_2 )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME state  VAR_1  android.util.Log . i ( VAR_2 , ( STRING_1 + state ) )  VAR_3 = state COND ! state COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( )  METHOD_3 ( ) TYPE java.lang.Exception NAME e BLOCK BLOCK  VAR_1  VAR_5 = true
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE short NAME value COND VAR_1  throw new TYPE_1 ( ) ; TYPE char NAME c INIT = ( ( char ) ( value ) ) TYPE byte NAME b INIT = ( ( byte ) ( c ) )  return ( ( STRING_1 + ( ( int ) ( c ) ) ) + STRING_2 ) + ( ( int ) ( b ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) == null  TYPE_1 . METHOD_2 ( false ) COND ( ( VAR_2 ) == null ) || ( ! ( VAR_2 . METHOD_3 ( ) ) )  VAR_2 = TYPE_1 . METHOD_4 ( VAR_1 , true )
MODIFIER protected RETURN boolean NAME METHOD_1 COND VAR_1  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) COND ( VAR_2 ) != null  METHOD_2 ( VAR_2 )  VAR_2 = null COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( )  VAR_3 = null COND ( VAR_4 ) != null  VAR_4 . METHOD_1 ( )  VAR_4 = null  TYPE_1 . METHOD_3 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  assertEquals ( INT_1 , VAR_1 . size ( ) )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 , INT_2 , VAR_3 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 , INT_2 , VAR_4 , INT_3 , INT_8 , INT_9 , INT_10 , INT_9 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME n TYPE byte[] NAME VAR_1 TYPE int NAME VAR_2 INIT = n . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = ( VAR_1 . length ) * 8 TYPE TYPE_1 NAME e INIT = new TYPE_1 ( 1 , VAR_1 ) COND VAR_2 < VAR_3  e = e . METHOD_3 ( ( VAR_3 - VAR_2 ) )  return e ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3<java.lang.String,TYPE_4> NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE java.util.List<TYPE_4> NAME values INIT = VAR_2 . get ( STRING_1 )  assertEquals ( 2 , values . size ( ) ) TYPE TYPE_4 NAME VAR_3 INIT = values . get ( 1 ) TYPE TYPE_5 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( )  assertTrue ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( METHOD_8 ( STRING_2 ) ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME VAR_1 TYPE android.content.Intent NAME VAR_2 COND TYPE_4 . METHOD_2 ( context )  VAR_2 = TYPE_4 . METHOD_3 ( context )  VAR_2 = TYPE_5 . METHOD_4 ( context , VAR_3 ) COND VAR_1 != null  VAR_2 . METHOD_5 ( VAR_4 )  VAR_2 . METHOD_6 ( VAR_5 , true )  return TYPE_1 . METHOD_7 ( context , 0 , VAR_2 , VAR_6 ) ;
MODIFIER static RETURN TYPE_1<java.lang.Integer> NAME METHOD_1 TYPE int NAME n TYPE TYPE_1<java.lang.Integer> NAME a INIT = new TYPE_1 < java.lang.Integer > ( )  assertTrue ( a . METHOD_2 ( ) ) TYPE int NAME i INIT = 0 COND i < n  i ++  a . METHOD_3 ( i )  assertFalse ( a . METHOD_2 ( ) )  assertEquals ( n , a . size ( ) )  return a ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) != ( VAR_3 )  return null ; COND ( VAR_4 . length ) < 2  return null ; TYPE TYPE_1 NAME result INIT = new TYPE_1 ( )  result . level = ( VAR_4 [ 0 ] ) & INT_1  VAR_5 = ( VAR_4 [ 1 ] ) & INT_1  return result ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE int NAME VAR_5 TYPE TYPE_3 NAME VAR_6 TYPE TYPE_4 NAME VAR_7  return new TYPE_1 ( id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = null  VAR_4 = METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_4 , VAR_3 )  return true ; TYPE java.io.IOException NAME VAR_5 BLOCK BLOCK  TYPE_3 . METHOD_4 ( VAR_4 )  return false ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 3 , 3 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = t . METHOD_3 ( ( ( float ) ( ( VAR_3 ) / FLOAT_1 ) ) )  args.out = t . METHOD_4 ( in , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 )  VAR_3 = ( ( TYPE_1 ) ( METHOD_5 ( VAR_4 ) ) )  VAR_5 = METHOD_5 ( VAR_6 )  VAR_7 = ( ( TYPE_2 ) ( METHOD_5 ( VAR_8 ) ) ) COND VAR_1  this . METHOD_6 ( VAR_7 )  this . METHOD_6 ( VAR_5 )  VAR_9 = new TYPE_3 ( METHOD_2 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e TYPE int NAME VAR_2 COND VAR_2 < 1  throw new TYPE_4 ( STRING_1 ) ; TYPE int NAME id INIT = VAR_1 . METHOD_2 ( e . METHOD_3 ( VAR_1 ) , VAR_2 , 0 , 0 , false , false , 0 ) TYPE TYPE_1 NAME t INIT = new TYPE_1 ( id , VAR_1 )  VAR_3 = e  VAR_4 = VAR_2  t . METHOD_4 ( )  return t ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 COND ! ( METHOD_2 ( ) )  return STRING_1 ; TYPE java.lang.String NAME VAR_1 INIT = context . METHOD_3 ( VAR_2 )  return METHOD_4 ( ) ? context . METHOD_3 ( VAR_3 , VAR_1 ) : context . METHOD_3 ( VAR_4 , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 . METHOD_2 ( VAR_2 ) ) ^ ( VAR_4 )  METHOD_3 ( )  VAR_5 . print ( STRING_1 )  VAR_5 . print ( STRING_2 )  VAR_2 . METHOD_4 ( VAR_1 , this )  VAR_5 . println ( TYPE_3 . METHOD_5 ( VAR_1 . getName ( ) , VAR_2 . METHOD_6 ( ) , VAR_2 . getName ( VAR_1 ) , VAR_2 . METHOD_7 ( VAR_1 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME VAR_5 INIT = VAR_3 . METHOD_4 ( ) TYPE TYPE_3 NAME VAR_6 INIT = VAR_3 . METHOD_5 ( ) . METHOD_6 ( )  return TYPE_4 . METHOD_1 ( VAR_1 , VAR_6 , VAR_5 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( METHOD_2 ( ) )  TYPE_3 . METHOD_3 ( VAR_2 )  return ;  METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME id TYPE byte[] NAME data  android.util.Log.v ( VAR_1 . TAG , ( STRING_1 + id ) ) TYPE boolean NAME result INIT = false COND ( VAR_2 ) != null  result = VAR_2 . METHOD_1 ( id , data ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return result ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME config TYPE TYPE_3[] NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = config . METHOD_2 ( VAR_4 , ( ( TYPE_4 ) ( null ) ) ) TYPE TYPE_5 NAME VAR_5 INIT = new TYPE_5 ( VAR_3 , VAR_2 ) TYPE TYPE_6 NAME VAR_6 INIT = METHOD_3 ( VAR_1 , config , VAR_5 ) TYPE TYPE_3 NAME VAR_7 IN VAR_2  VAR_6 . METHOD_4 ( new TYPE_7 ( new TYPE_8 ( VAR_7 ) , VAR_6 ) )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME count TYPE java.lang.Object NAME d TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , count , d , VAR_3 , VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE int NAME VAR_1 COND key . METHOD_2 ( STRING_1 )  VAR_2 = 0 COND key . METHOD_2 ( STRING_2 )  VAR_2 = 1  return null ; COND ( VAR_3 ) == null  return null ;  return VAR_4 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_1  VAR_2 . METHOD_2 ( ) COND ! ( VAR_3 . METHOD_3 ( ) )  loge ( STRING_1 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  VAR_4 . METHOD_4 ( )  METHOD_5 ( false )  METHOD_6 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , 2 )  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( VAR_6 , 1 )  assertEquals ( VAR_7 , VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 )  METHOD_6 ( )
MODIFIER public RETURN void NAME run TYPE java.io.File NAME output INIT = java.io.File . METHOD_1 ( STRING_1 , STRING_2 )  output . METHOD_2 ( )  VAR_1 [ VAR_2 ] = output  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( input , output , VAR_3 , VAR_4 , false , VAR_5 ) TYPE java.lang.Exception NAME VAR_6 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE int[] NAME VAR_1 INIT = new int [ ] { VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 } TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  new TYPE_1 ( ) . METHOD_2 ( VAR_1 [ i ] , STRING_1 )  fail ( ( STRING_2 + ( VAR_1 [ i ] ) ) ) TYPE java.io.IOException NAME e BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.Object NAME pos TYPE TYPE_1 NAME VAR_1 TYPE int NAME i INIT = VAR_2 . METHOD_2 ( pos ) COND ( VAR_3 ) || ( VAR_4 )  android.util.Log.v ( TYPE_2 . TAG , ( ( ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( i + 1 ) ) + STRING_3 ) + ( VAR_2 . size ( ) ) ) + STRING_4 ) + pos ) + STRING_5 ) )  VAR_2 . METHOD_3 ( ( i + 1 ) , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_2 NAME parent TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME state INIT = ( ( TYPE_4 ) ( VAR_4 ) ) MODIFIER public RETURN void NAME METHOD_3 TYPE TYPE_2 NAME n  state . METHOD_4 ( )  state . METHOD_5 ( n )  VAR_2 . METHOD_2 ( STRING_1 , new TYPE_5 ( ) { public void METHOD_3 ( TYPE_2 n ) { state . METHOD_4 ( ) ; state . METHOD_5 ( n ) ; } } )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME uid TYPE boolean NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE int NAME VAR_5 TYPE boolean NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String NAME VAR_8 COND ! ( TYPE_1 . METHOD_2 ( VAR_4 ) )  TYPE_2 . e ( TYPE_1 . TAG , ( STRING_1 + VAR_4 ) )  return - 1 ;  return VAR_9 . METHOD_1 ( VAR_1 , uid , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ;
MODIFIER public static RETURN void NAME METHOD_1  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( ( - FLOAT_1 ) ) , - INT_1 )  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( FLOAT_2 ) , 0 )  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( FLOAT_1 ) , INT_2 )  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( VAR_1 ) , INT_3 )  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( VAR_2 ) , INT_4 )  TYPE_1 . assertEquals ( java.lang.Float.floatToRawIntBits ( VAR_3 ) , - INT_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME source TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_2 == null  VAR_2 = new java.util.ArrayList < TYPE_2 > ( )  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 )  VAR_2 . METHOD_1 ( source )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_1 NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 COND VAR_3 != null  VAR_3 . METHOD_2 ( )  VAR_5 = VAR_7  VAR_5 = 0 COND VAR_4 != null  VAR_4 . METHOD_2 ( )  VAR_6 = VAR_8  VAR_6 = 0  TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_5 , VAR_6 , VAR_9 , VAR_10 ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  return ; COND METHOD_3 ( )  android.util.Log.d ( VAR_1 . TAG , STRING_1 )  return ; TYPE java.lang.String[] NAME VAR_2 INIT = new java.lang.String [ ] { STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 }  METHOD_4 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  TYPE_1 . d ( VAR_1 , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) )  METHOD_2 ( )  VAR_4 . METHOD_3 ( VAR_3 ) . METHOD_4 ( null ) COND VAR_2  METHOD_5 ( )  METHOD_6 ( )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME project TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( project ) TYPE TYPE_3 NAME VAR_2 IN VAR_1 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_2 ) TYPE TYPE_5 NAME VAR_4 IN VAR_3 . METHOD_4 ( ) COND STRING_1 . equals ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) )  return true ;  return false ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.util.HashMap<java.lang.String,java.lang.Integer> NAME VAR_1 TYPE TYPE_1 NAME request INIT = new TYPE_1 ( path , VAR_2 , 0 , VAR_3 , 0 , 0 )  request . METHOD_2 ( VAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( VAR_6 . METHOD_3 ( ) , path , VAR_1 )  VAR_5 . METHOD_4 ( request . METHOD_5 ( ) )  VAR_5 . METHOD_6 ( ) TYPE java.io.IOException NAME e  android.util.Log.w ( VAR_7 . TAG , STRING_1 )
MODIFIER private RETURN byte NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  android.util.Log.w ( VAR_2 . TAG , STRING_1 )  return VAR_3 ; NAME VAR_1 . METHOD_2 ( )  return VAR_6 ;  return VAR_3 ;  return VAR_11 ;  return VAR_15 ;  return VAR_18 ;  return VAR_20 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1  this TYPE long NAME VAR_1 INIT = ( TYPE_1 . METHOD_2 ( ) ) + INT_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) COND ( ( VAR_4 ) == 0 ) || ( VAR_1 < ( VAR_4 ) )  VAR_4 = VAR_1  METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 class . getName ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( )  VAR_1 . METHOD_2 ( new TYPE_3 ( VAR_3 , null ) , 0 )  TYPE_4 . METHOD_3 ( VAR_3 . version ) . METHOD_4 ( VAR_4 )  TYPE_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( 0 )  TYPE_4 . METHOD_3 ( VAR_6 ) . METHOD_4 ( 1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( VAR_2 , true )  assertEquals ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_9 ) + STRING_8 ) ) , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_8 ( ) , TYPE_1 . METHOD_8 ( ) )  org.mockito.Mockito.verify ( VAR_5 , TYPE_1 . METHOD_5 ( 2 ) ) . METHOD_9 ( 1 )  org.mockito.Mockito.verify ( VAR_5 , TYPE_1 . METHOD_5 ( 2 ) ) . METHOD_10 ( FLOAT_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_3 COND ( VAR_4 ) != null  android.util.Log.w ( VAR_5 . TAG , STRING_1 )  return false ;  VAR_6 = VAR_2  VAR_4 = VAR_1 COND ! ( METHOD_2 ( VAR_7 ) )  return false ;  METHOD_3 ( )  return true ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE java.lang.String NAME result INIT = device . METHOD_2 ( packageName ) COND result != null  TYPE_1 . log ( VAR_1 , ( ( ( STRING_1 + packageName ) + STRING_2 ) + result ) )  return false ;  return true ; TYPE TYPE_2 NAME e  TYPE_1 . log ( VAR_1 , ( STRING_3 + packageName ) , e )  return false ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( VAR_2 class , method ) ) )  return ; TYPE TYPE_1 NAME request INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( request )  VAR_3 . METHOD_5 ( method )  request . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3  METHOD_2 ( ) COND ( VAR_4 . METHOD_3 ( ) . length ( ) ) != 0 TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( null , VAR_4 . METHOD_4 ( ) )  return VAR_5 ;  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE short NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME packageName INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME info INIT = new TYPE_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , VAR_2 , VAR_3 , METHOD_4 ( VAR_1 . METHOD_5 ( ) ) , METHOD_6 ( packageName ) , VAR_1 . METHOD_2 ( ) , METHOD_7 ( packageName ) )  METHOD_8 ( info )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( ) COND ( ( null != ( VAR_2 ) ) && ( ( VAR_2 . METHOD_3 ( ) ) > 0 ) ) && ( ( VAR_3 ) == ( VAR_4 ) )  VAR_1 . METHOD_4 ( 0 , VAR_5 , 0 , VAR_6 ) . METHOD_5 ( VAR_7 )  return true ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME id COND id . METHOD_2 ( TYPE_1 )  id = id . METHOD_3 ( TYPE_1 . length ( ) ) COND id . METHOD_2 ( TYPE_2 )  id = id . METHOD_3 ( TYPE_2 . length ( ) )  return id ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 )  super . METHOD_1 ( ) COND ( METHOD_3 ( ) ) != null  VAR_1 . METHOD_4 ( METHOD_3 ( ) )  TYPE_2 . get ( METHOD_3 ( ) ) . METHOD_5 ( VAR_2 )  METHOD_3 ( ) . METHOD_6 ( VAR_3 )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME version TYPE int NAME VAR_4 COND ( VAR_5 ) == false  throw new java.lang.RuntimeException ( ( ( VAR_6 . TAG ) + STRING_1 ) ) ;  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , version , VAR_4 ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND obj == ( this )  return true ; COND obj instanceof TYPE_1 TYPE TYPE_1<?> NAME VAR_1 INIT = ( ( TYPE_1 < ? > ) ( obj ) ) TYPE TYPE_2<java.lang.Object> NAME VAR_2 INIT = ( ( TYPE_2 < java.lang.Object > ) ( this . VAR_2 ) )  return ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_2 . METHOD_1 ( this . VAR_4 , VAR_5 ) ) ;  return false ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<?extendsTYPE_2> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , TYPE_4 . METHOD_2 ( VAR_4 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return null ; TYPE TYPE_3 NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 == null  return null ;  return VAR_3 . METHOD_4 ( ) ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME netId TYPE int NAME error TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME uid  TYPE_1 . METHOD_2 ( STRING_1 , netId , error , VAR_1 ) TYPE long NAME VAR_4 INIT = TYPE_2 . METHOD_3 ( )  METHOD_4 ( VAR_4 , netId ) . METHOD_5 ( error , VAR_1 , VAR_2 ) COND ( VAR_5 ) != null  VAR_5 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , uid )
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( )  TYPE_1 . METHOD_4 ( ) TYPE java.lang.Throwable NAME e  throw TYPE_1 . METHOD_5 ( e ) ;  VAR_2 = true  VAR_1 . METHOD_6 ( )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( new TYPE_4 ( new TYPE_5 ( STRING_1 , 16 ) , new TYPE_5 ( STRING_2 , 16 ) , new TYPE_5 ( STRING_3 , 16 ) ) )  return new TYPE_1 ( VAR_1 , VAR_1 . METHOD_3 ( TYPE_6 . METHOD_4 ( STRING_4 ) ) , new TYPE_5 ( STRING_5 , 16 ) , new TYPE_5 ( STRING_6 , 16 ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME msg COND ( super . METHOD_1 ( msg ) ) == ( VAR_1 )  return VAR_1 ; NAME VAR_2  METHOD_2 ( VAR_4 )  return VAR_1 ;  return VAR_1 ;  METHOD_2 ( VAR_7 , VAR_8 )  VAR_9 = false  return VAR_1 ;  METHOD_3 ( )  return VAR_1 ;  return VAR_1 ;  return VAR_1 ;  return VAR_13 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 , 1 , VAR_2 , 1 ) TYPE byte[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_3 [ ( ( VAR_3 . length ) - 6 ) ] = CHAR_1 TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_3 )  assertEquals ( VAR_5 , VAR_6 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) )  METHOD_6 ( )  METHOD_7 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  return new TYPE_2 ( METHOD_3 ( ) , METHOD_4 ( ) , VAR_1 , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) , a , b , c ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME callback COND callback == null  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( callback ) COND VAR_1 == null  return ; TYPE TYPE_3 NAME VAR_3  VAR_3 = VAR_4 . METHOD_3 ( )  VAR_3 . METHOD_1 ( VAR_1 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_5 . TAG , STRING_2 , e )  throw new TYPE_4 ( STRING_3 ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME address TYPE TYPE_1 NAME VAR_2 INIT = mContext . METHOD_2 ( VAR_3 , VAR_4 ) COND ! ( VAR_2 . METHOD_3 ( address ) )  return VAR_1 ; COND VAR_2 . METHOD_4 ( address , false )  VAR_1 &= ~ ( VAR_5 )  return VAR_1 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context  return new TYPE_1 ( new TYPE_3 ( context ) , new TYPE_4 ( context ) , new TYPE_5 ( context ) , new TYPE_3 ( context ) , new TYPE_4 ( context ) , new TYPE_3 ( context ) , new TYPE_3 ( context ) , new TYPE_3 ( context ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( device ) COND VAR_1 == null  return ; TYPE TYPE_4[] NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( device )  TYPE_5 . METHOD_4 ( ) . METHOD_5 ( device , VAR_2 ) COND ( VAR_3 ) >= 3  TYPE_6 . METHOD_6 ( this , device )  METHOD_7 ( device )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME uri TYPE java.lang.String[] NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String[] NAME VAR_3 TYPE java.lang.String NAME VAR_4 COND ( VAR_5 . size ( ) ) > 0  return METHOD_2 ( VAR_5 . get ( 0 ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) TYPE java.lang.String[] NAME VAR_3 INIT = VAR_2 . METHOD_4 ( )  TYPE_3 . METHOD_5 ( VAR_4 , VAR_3 )  METHOD_6 ( VAR_3 , VAR_2 . METHOD_4 ( ) )
MODIFIER public RETURN java.lang.String NAME toString  return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 ) ) + STRING_3 ) + ( VAR_3 ) ) + STRING_4 ) + ( VAR_4 ) ) + STRING_5 ) + ( VAR_5 ) ) + STRING_6 ) + ( VAR_6 . toString ( ) ) ) + STRING_7 ) + ( VAR_7 ) ) + STRING_8 ) + ( TYPE_1 . toString ( VAR_8 ) ) ) + STRING_9 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int[] NAME VAR_1 COND VAR_2  TYPE_1 . log ( ( STRING_1 + ( ( VAR_1 [ 0 ] ) != 0 ? STRING_2 : STRING_3 ) ) )  this . VAR_3 . METHOD_2 ( ( ( VAR_1 [ 0 ] ) != 0 ) ) TYPE TYPE_2 NAME context INIT = this COND ( VAR_1 [ 0 ] ) == 1  TYPE_1 . METHOD_3 ( context , true )  TYPE_1 . METHOD_3 ( context , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony != null  return telephony . METHOD_1 ( VAR_1 ) ; TYPE android.os.RemoteException NAME ex  TYPE_2 . e ( VAR_2 . TAG , STRING_1 , ex ) TYPE java.lang.NullPointerException NAME ex  TYPE_2 . e ( VAR_2 . TAG , STRING_2 , ex )  return false ;
MODIFIER synchronized RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE byte NAME error COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + error ) ) COND ! ( METHOD_2 ( device ) )  return false ;  return METHOD_3 ( error ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME c TYPE TYPE_1 NAME VAR_1 COND c instanceof TYPE_3  VAR_2 -= 5  return super . METHOD_1 ( c , VAR_1 ) ; COND c instanceof TYPE_4  VAR_1 . x -= 1  VAR_3 += 1 COND ! ( METHOD_2 ( ) )  VAR_1 . y -= 1  VAR_2 += 1  return super . METHOD_1 ( c , VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_1 NAME item INIT = VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) COND ( item == null ) && ( ( VAR_4 ) != null ) TYPE TYPE_2 NAME VAR_5 INIT = VAR_4 . get ( VAR_1 ) COND VAR_5 != null  return METHOD_1 ( VAR_5 , VAR_2 , VAR_3 ) ;  return item ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME event COND VAR_1 == ( VAR_2 ) COND VAR_3  android.util.Log.d ( VAR_4 . TAG , STRING_1 )  VAR_5 = new TYPE_2 ( )  VAR_5 . METHOD_2 ( VAR_6 , VAR_7 )  this . METHOD_3 ( ) . METHOD_4 ( VAR_8 , VAR_5 , null , null )  TYPE_3 . METHOD_5 ( this , METHOD_6 ( VAR_9 ) , VAR_10 ) . METHOD_7 ( )  METHOD_8 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME flags  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_2 ( VAR_3 )  VAR_1 . METHOD_3 ( VAR_4 )  VAR_1 . METHOD_3 ( VAR_5 )  VAR_1 . METHOD_4 ( ( ( TYPE_2 ) ( VAR_6 ) ) , flags )  VAR_1 . METHOD_3 ( VAR_7 )  VAR_1 . METHOD_5 ( new TYPE_3 ( VAR_8 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE boolean NAME VAR_1 COND TYPE_2 . METHOD_2 ( context )  TYPE_2 . METHOD_3 ( context , VAR_2 , VAR_1 )  TYPE_2 . METHOD_4 ( context ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 , VAR_1 ) . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( INT_1 , INT_2 )  VAR_1 . METHOD_2 ( null , p , 1 , 2 ) TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( VAR_4 ) )  assertEquals ( 1 , VAR_3 . index )  assertEquals ( 2 , VAR_3 . count )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = null COND VAR_1 instanceof TYPE_2  VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( )  VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) COND VAR_2 == null  return null ;  return TYPE_3 . METHOD_5 ( VAR_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 COND ( ( METHOD_2 ( ) ) != null ) && ( TYPE_1 . equals ( METHOD_2 ( ) . METHOD_3 ( ) ) )  VAR_1 = true COND ! ( TYPE_2 . METHOD_4 ( context , VAR_2 ) )  VAR_1 = false  VAR_1 = TYPE_3 . METHOD_5 ( context , METHOD_6 ( ) , METHOD_7 ( ) )
MODIFIER public static RETURN java.io.File NAME METHOD_1 TYPE TYPE_1 NAME path TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_4 NAME res INIT = VAR_1 . METHOD_4 ( path ) COND res != null  return res . METHOD_5 ( ) . METHOD_6 ( ) ;  return path . METHOD_6 ( ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND METHOD_1 ( ) . equals ( obj . METHOD_1 ( ) )  return TYPE_1 . equals ( VAR_1 , ( ( TYPE_2 ) ( obj ) ) . VAR_1 ) ;  return super . equals ( obj ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME src TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( VAR_2 ) COND VAR_3 == null  return ;  TYPE_2 . METHOD_3 ( VAR_1 , src , VAR_3 . METHOD_4 ( ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE boolean NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME address COND ( this . VAR_1 ) == null  this . VAR_1 = new java.util.ArrayList < TYPE_1 > ( 1 )  this . VAR_1 . METHOD_2 ( new TYPE_1 ( name , address , null ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME config TYPE TYPE_5 NAME VAR_1 INIT = METHOD_2 ( config ) TYPE int NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND VAR_2 < 0  TYPE_6 . e ( STRING_1 )  return false ;  VAR_3 . METHOD_4 ( )  VAR_3 . METHOD_5 ( VAR_2 , true )  return VAR_3 . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 ) COND VAR_3  VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_6 )  VAR_4 . METHOD_5 ( )  VAR_1 . METHOD_6 ( VAR_7 )  VAR_5 . METHOD_6 ( VAR_7 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_1 == null  TYPE_1 . i ( STRING_1 , STRING_2 )  return ;  VAR_1 . METHOD_5 ( true ) TYPE TYPE_4 NAME VAR_2 INIT = ( ( TYPE_4 ) ( VAR_3 . METHOD_6 ( ) . METHOD_7 ( ) ) )  VAR_2 . METHOD_8 ( )
MODIFIER private RETURN void NAME METHOD_1 COND ! ( VAR_1 . get ( VAR_2 . METHOD_2 ( ) ) )  VAR_1 . set ( VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_3 ( VAR_3 ) TYPE java.util.ArrayList<TYPE_1> NAME VAR_4  VAR_4 = VAR_2 . METHOD_4 ( )  VAR_5 = ( VAR_4 . size ( ) ) - 1  VAR_6 = VAR_7
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME info INIT = METHOD_2 ( x ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type INIT = ( ( com.android.jack.ir.ast.JDefinedClassOrInterface ) ( METHOD_3 ( ) . get ( VAR_1 ) ) )  VAR_2 . METHOD_4 ( type ) COND ( VAR_3 ) != null TYPE TYPE_1 NAME VAR_4 IN VAR_3  METHOD_1 ( VAR_4 ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e , info ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_3 . METHOD_2 ( ) COND VAR_2 instanceof TYPE_3 TYPE TYPE_4 NAME action INIT = ( ( TYPE_3 ) ( VAR_2 ) ) . METHOD_3 ( ) COND action instanceof TYPE_5  ( ( TYPE_5 ) ( action ) ) . METHOD_4 ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( new TYPE_1 ( ) ) TYPE TYPE_3 NAME info INIT = new TYPE_3 ( VAR_2 , 0 )  VAR_3 . METHOD_3 ( info )  VAR_4 . METHOD_4 ( VAR_1 )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_3 ( TYPE_4 . eq ( info ) )  org.mockito.Mockito.verify ( VAR_1 ) . METHOD_3 ( TYPE_4 . eq ( info ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( VAR_1 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args  VAR_1 = 4  VAR_2 = 4 TYPE double NAME x INIT = ( ( double ) ( args . in ) )  args.out = ( ( float ) ( TYPE_2 . METHOD_2 ( ( ( x - FLOAT_1 ) / FLOAT_2 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME VAR_2 INIT = VAR_3 . METHOD_4 ( ) COND VAR_1 . METHOD_5 ( VAR_4 )  assertTrue ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( VAR_5 ) ) , TYPE_2 . METHOD_6 ( VAR_5 , VAR_2 ) )  assertEquals ( STRING_3 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 )  return ;  TYPE_2 . METHOD_4 ( ) . METHOD_1 ( mContext . METHOD_5 ( ) , VAR_1 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 NAME METHOD_2 ( ) . METHOD_3 ( )  VAR_1 = STRING_1  break ;  VAR_1 = STRING_2  break ;  throw new TYPE_1 ( STRING_3 ) ; COND METHOD_2 ( ) . METHOD_4 ( )  return java.lang.String.format ( STRING_4 , VAR_1 , METHOD_5 ( ) , METHOD_6 ( ) ) ;  return java.lang.String.format ( STRING_5 , VAR_1 , METHOD_6 ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) COND VAR_3 == null  VAR_2 . METHOD_4 ( VAR_4 . METHOD_5 ( ) , new TYPE_3 ( ) , VAR_5 )  VAR_2 . METHOD_6 ( VAR_3 )  VAR_2 . METHOD_7 ( )  VAR_1 . METHOD_8 ( )  TYPE_4 . get ( VAR_4 ) . METHOD_9 ( VAR_6 , VAR_4 )  METHOD_10 ( true )
MODIFIER public RETURN void NAME run  VAR_1  VAR_1 . METHOD_1 ( VAR_2 ) COND VAR_3  return ; TYPE TYPE_1 NAME e  android.util.Log.w ( VAR_4 . TAG , STRING_1 )  METHOD_2 ( )  android.util.Log.e ( VAR_4 . TAG , STRING_2 )  VAR_5 . METHOD_3 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( ) TYPE byte[] NAME VAR_2 INIT = new byte [ INT_1 ] TYPE int NAME count COND ( count = in . METHOD_2 ( VAR_2 ) ) != ( - 1 )  VAR_1 . METHOD_3 ( VAR_2 , 0 , count )  in . METHOD_4 ( )  this . data = VAR_1 . METHOD_5 ( )  this . length = data . length  this . VAR_3 . METHOD_6 ( this )
MODIFIER public RETURN void NAME run  VAR_1 . println ( STRING_1 )  VAR_1 . println ( STRING_2 )  VAR_2 . METHOD_1 ( VAR_3 )  VAR_1 . println ( STRING_3 )  VAR_2 . METHOD_2 ( VAR_4 )  VAR_1 . println ( STRING_4 )  VAR_1 . println ( ( STRING_5 + STRING_6 ) )  TYPE_1 . METHOD_3 ( )  VAR_1 . println ( ( STRING_5 + STRING_7 ) )  VAR_1 . println ( STRING_8 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME listener TYPE TYPE_1 NAME VAR_2 INIT = super . METHOD_1 ( VAR_1 , listener )  VAR_2 . METHOD_2 ( new java.lang.String [ ] { STRING_1 } )  assertEquals ( STRING_2 , 0 , VAR_2 . METHOD_3 ( ) . length )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 )  fail ( STRING_2 ) TYPE java.io.IOException NAME e BLOCK BLOCK  TYPE_2 . METHOD_2 ( VAR_2 , null , VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = new java.io.File ( VAR_2 , VAR_3 ) . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_4 )  assertEquals ( VAR_4 , VAR_1 . getName ( ) )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ; COND ( ! ( METHOD_4 ( ) ) ) || ( ! ( METHOD_5 ( ) ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_2 )  return ;  METHOD_6 ( 0 )  METHOD_7 ( VAR_2 )  METHOD_8 ( false , false , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_9 ( VAR_3 )  METHOD_10 ( VAR_4 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int NAME VAR_5 TYPE java.lang.Object NAME d TYPE int NAME VAR_6 TYPE TYPE_1 NAME VAR_7  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 , VAR_8 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.Object NAME pos TYPE TYPE_1 NAME VAR_1 TYPE int NAME i INIT = VAR_2 . METHOD_2 ( pos ) COND ( VAR_3 ) || ( VAR_4 )  android.util.Log.v ( TYPE_2 . TAG , ( ( ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + i ) + STRING_3 ) + ( VAR_2 . size ( ) ) ) + STRING_4 ) + pos ) + STRING_5 ) )  VAR_2 . METHOD_3 ( i , VAR_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE java.lang.String NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE java.lang.String NAME VAR_3 INIT = ( v == null ) ? ( ( java.lang.String ) ( m . METHOD_2 ( ) ) ) : ( ( java.lang.String ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( VAR_3 . equals ( value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = new TYPE_2 ( )  TYPE_3 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( true )  VAR_2 . METHOD_4 ( VAR_1 )  TYPE_2 . METHOD_5 ( VAR_3 < TYPE_4 > of ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = VAR_1  VAR_3 . METHOD_2 ( VAR_2 ) COND ( VAR_4 ) == null  VAR_4 = new TYPE_2 ( )  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_4 ) COND ( VAR_5 ) == null  VAR_5 = new TYPE_4 ( VAR_2 . METHOD_5 ( ) ) COND ( VAR_6 ) != null  VAR_6 . METHOD_6 ( ) . METHOD_7 ( VAR_5 )
MODIFIER private RETURN int NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME method TYPE int NAME VAR_1 INIT = 0 COND ! ( method . METHOD_2 ( ) )  VAR_1 += 1 TYPE TYPE_1 NAME VAR_2 IN method . METHOD_3 ( ) COND ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_4 ( ) ) ) || ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( TYPE_3 . METHOD_4 ( ) ) )  VAR_1 += 2  VAR_1 += 1  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2  VAR_3 = false  VAR_4 = null  VAR_5 = 0  VAR_6 = VAR_1  VAR_7 = VAR_2  VAR_8 = ( VAR_2 != null ) ? METHOD_2 ( VAR_2 ) : null  VAR_9 = null  VAR_10 = null  VAR_11 = VAR_12 = ( ( VAR_7 ) != null ) ? 0 : TYPE_2 . METHOD_3 ( )  VAR_13 = 0  VAR_14 = null  VAR_15 . METHOD_4 ( VAR_16 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME parent TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.String NAME name INIT = VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( CHAR_1 ) ) + 1 ) ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( name , VAR_1 , VAR_2 ) COND parent == null  parent = new TYPE_1 ( TYPE_3 . METHOD_4 ( STRING_1 , STRING_1 , true ) )  return ( ( TYPE_1 ) ( parent . METHOD_5 ( VAR_3 ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_3 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 , new TYPE_4 ( VAR_4 ) ) TYPE TYPE_5 NAME VAR_5 IN VAR_6 TYPE TYPE_6 NAME VAR_7 INIT = VAR_5 . METHOD_1 ( VAR_1 )  VAR_4 . METHOD_5 ( VAR_7 )  return VAR_4 ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME append TYPE java.io.File NAME path INIT = METHOD_4 ( VAR_1 . METHOD_5 ( ) )  return new TYPE_4 ( path , append ) ; TYPE TYPE_5 NAME e  TYPE_6 . METHOD_6 ( path , VAR_1 . METHOD_7 ( ) , VAR_4 )  throw new TYPE_7 ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( device ) TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_3 ( VAR_4 , device )  VAR_2 . METHOD_3 ( VAR_5 , ( VAR_1 == null ? null : VAR_6 ) )  VAR_7 . METHOD_4 ( device , ( VAR_1 == null ? null : VAR_6 ) )  VAR_7 . METHOD_5 ( VAR_2 , VAR_8 )  VAR_9 . METHOD_6 ( device )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 != null COND ( VAR_2 ) != null  VAR_1 . METHOD_3 ( VAR_2 )  VAR_1 . METHOD_4 ( )  TYPE_2 . METHOD_5 ( ) . METHOD_6 ( this ) COND ( VAR_3 ) != null  TYPE_3 . METHOD_7 ( ) . METHOD_8 ( VAR_3 )  VAR_3 = null  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( )  org.mockito.Mockito.verify ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) . METHOD_3 ( org.mockito.Matchers . METHOD_5 ( VAR_4 class ) , org.mockito.Matchers . METHOD_5 ( int . class ) )  assertEquals ( VAR_2 , false )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 class ) , TYPE_2 . METHOD_4 ( STRING_1 ) , TYPE_2 . METHOD_5 ( VAR_3 ) ) TYPE java.lang.String NAME VAR_4 INIT = TYPE_3 . METHOD_6 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 )  TYPE_3 . METHOD_7 ( VAR_4 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1 TYPE int NAME flags INIT = msg.arg1  VAR_3 . METHOD_2 ( flags )  return true ;  VAR_3 . METHOD_3 ( null )  return true ;  VAR_3 . METHOD_4 ( )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE byte[] NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , VAR_6 , true ) TYPE int NAME VAR_7 INIT = METHOD_3 ( ) TYPE TYPE_2 NAME VAR_8 INIT = TYPE_3 . METHOD_4 ( VAR_9 class )  VAR_10 . METHOD_5 ( VAR_7 , VAR_4 , VAR_8 )  org.mockito.Mockito.verify ( VAR_11 ) . METHOD_5 ( VAR_7 , VAR_4 , VAR_8 )
MODIFIER MODIFIER RETURN void NAME METHOD_1  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) COND VAR_2 != null  VAR_2 . METHOD_3 ( VAR_4 ) TYPE android.os.RemoteException NAME e  e . METHOD_4 ( )  VAR_5  METHOD_5 ( )  VAR_6 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 COND VAR_5  android.util.Log.w ( VAR_6 . TAG , STRING_1 )  return ; TYPE TYPE_1 NAME VAR_7 INIT = VAR_8 . get ( ) COND VAR_7 == null  android.util.Log.w ( VAR_6 . TAG , STRING_2 )  return ;  VAR_7 . METHOD_1 ( VAR_9 , VAR_10 , VAR_1 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE java.util.Map<java.lang.String,java.util.Set<java.lang.String>> NAME VAR_2 TYPE java.util.Set<java.lang.String> NAME VAR_3 TYPE java.lang.String NAME VAR_4 IN VAR_3 COND ! ( VAR_1 . METHOD_2 ( VAR_4 ) )  VAR_1 . METHOD_3 ( VAR_4 ) TYPE java.lang.String NAME VAR_5 IN METHOD_4 ( VAR_2 , VAR_4 ) COND ! ( VAR_1 . METHOD_2 ( VAR_5 ) )  VAR_1 . METHOD_3 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  assertEquals ( new TYPE_2 ( i ) , ( ( TYPE_2 ) ( VAR_1 . element ( ) ) ) )  VAR_1 . METHOD_3 ( )  VAR_1 . element ( )  METHOD_4 ( ) TYPE TYPE_3 NAME VAR_4 BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( VAR_5 )  VAR_4 . METHOD_2 ( VAR_6 ) COND VAR_1  VAR_4 . METHOD_3 ( VAR_7 , VAR_8 )  VAR_4 . METHOD_3 ( VAR_7 , VAR_9 )  mContext . METHOD_4 ( VAR_4 , VAR_10 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME request TYPE TYPE_1 NAME id INIT = VAR_1 . METHOD_2 ( VAR_2 , TYPE_3 . METHOD_3 ( ) , VAR_3 ) TYPE TYPE_4 NAME field INIT = id . METHOD_4 ( ) COND field . METHOD_5 ( ) . METHOD_6 ( VAR_1 )  return id ; TYPE TYPE_5 NAME e BLOCK BLOCK  return METHOD_7 ( VAR_1 , request ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE int NAME index TYPE float NAME value COND VAR_1 instanceof float [ ]  ( ( float [ ] ) ( VAR_1 ) ) [ index ] = value COND VAR_1 instanceof double [ ]  ( ( double [ ] ) ( VAR_1 ) ) [ index ] = value  throw TYPE_2 . METHOD_2 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_1 ) ) )  return ; TYPE TYPE_3 NAME VAR_1 INIT = TYPE_3 . METHOD_3 ( new TYPE_2 ( STRING_1 ) )  assertEquals ( STRING_2 , ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_4 ( ) ) TYPE TYPE_3 NAME VAR_2 INIT = TYPE_3 . METHOD_5 ( new TYPE_2 ( STRING_1 ) )  assertEquals ( STRING_3 , ( ( TYPE_4 ) ( VAR_2 ) ) . METHOD_4 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = ( ( TYPE_1 ) ( METHOD_2 ( VAR_1 ) ) ) COND b != null COND VAR_2 . METHOD_3 ( )  b . METHOD_4 ( VAR_3 )  b . METHOD_4 ( VAR_4 )  VAR_5 . METHOD_5 ( null )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_1 . METHOD_2 ( new TYPE_5 ( VAR_2 . METHOD_3 ( ) ) ) TYPE java.io.IOException NAME e  throw new TYPE_3 ( new TYPE_6 ( VAR_2 . METHOD_4 ( ) , e ) ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ! ( VAR_1 ) ) && ( ! ( method . METHOD_1 ( ) ) ) ) && ( ! ( method . METHOD_2 ( ) ) ) COND TYPE_1 . METHOD_3 ( method )  new TYPE_2 ( method ) . METHOD_4 ( )  METHOD_5 ( method )
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) )  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) )  assertTrue ( STRING_3 , TYPE_1 . METHOD_2 ( CHAR_3 ) )  assertTrue ( STRING_4 , TYPE_1 . METHOD_2 ( CHAR_4 ) )  assertTrue ( STRING_5 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_5 ) ) ) )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ! ( VAR_1 instanceof TYPE_1 ) COND VAR_1 instanceof TYPE_2 TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 ) )  return equals ( VAR_3 , VAR_2 . type , VAR_4 ) ;  return false ; TYPE TYPE_1 NAME VAR_5 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return equals ( VAR_6 , VAR_5 . type , VAR_7 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME netId TYPE int NAME VAR_1 COND VAR_2  android.util.Log.d ( VAR_3 . TAG , ( ( ( ( ( STRING_1 + ( java.lang.Integer . toString ( netId ) ) ) + STRING_2 ) + ( java.lang.Integer . toString ( VAR_1 ) ) ) + STRING_3 ) + ( VAR_4 ) ) ) COND VAR_4  VAR_5 . METHOD_2 ( )  VAR_4 = false  VAR_5 . METHOD_3 ( netId , VAR_1 )
MODIFIER public static final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME msg TYPE byte[] NAME data TYPE int NAME offset TYPE int NAME length TYPE TYPE_2 NAME output INIT = TYPE_2 . METHOD_2 ( data , offset , length )  msg . METHOD_3 ( output )  output . METHOD_4 ( ) TYPE java.io.IOException NAME e  throw new java.lang.RuntimeException ( ( STRING_1 + STRING_2 ) ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ;  method . METHOD_7 ( VAR_2 class ) TYPE TYPE_1 NAME v INIT = new TYPE_1 ( )  v . METHOD_5 ( method )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( true )  METHOD_3 ( false )  METHOD_4 ( false )  METHOD_5 ( VAR_1 , false )  METHOD_6 ( false )  assertEquals ( VAR_2 , TYPE_1 . METHOD_7 ( mContext , VAR_3 , VAR_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( s , fd , callback , new byte [ 1 ] , 0 , 1 , 1 )  fail ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( VAR_2 ) == ( METHOD_2 ( ) )  throw new TYPE_1 ( STRING_3 ) ;  return METHOD_3 ( VAR_3 , path , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  this COND ! ( VAR_1 )  VAR_1 = true COND ( VAR_2 ) != null  VAR_2 . METHOD_1 ( )  out . METHOD_1 ( ) TYPE java.io.IOException NAME x  VAR_3 = true  VAR_2 = null  VAR_4 = null  out = null
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 0 , 0 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( args . in )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( args . in ) , TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME options TYPE TYPE_3 NAME VAR_2 INIT = options . METHOD_2 ( )  TYPE_4 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 class )  VAR_1 . println ( )  VAR_1 . println ( STRING_1 )  VAR_1 . println ( )  TYPE_4 . METHOD_3 ( VAR_1 , VAR_2 , VAR_4 class )
MODIFIER final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_2 . get ( VAR_1 ) COND ( r == null ) || ( ( VAR_3 ) == null )  return ; COND VAR_4  android.util.Slog.v ( TYPE_3 . TAG , ( STRING_1 + ( VAR_5 . name ) ) )  TYPE_3 . METHOD_2 ( VAR_3 , VAR_6 )  METHOD_3 ( VAR_7 . METHOD_4 ( VAR_6 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND VAR_3 != null  VAR_4 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) , TYPE_1 . METHOD_3 ( VAR_3 ) )  VAR_4 . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE float NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE float NAME VAR_3 INIT = ( v == null ) ? ( ( float ) ( m . METHOD_2 ( ) ) ) : ( ( float ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_2 NAME VAR_5 INIT = METHOD_2 ( ) TYPE java.lang.String NAME name INIT = null TYPE TYPE_3 NAME VAR_6 INIT = METHOD_3 ( VAR_5 , VAR_1 , VAR_2 , VAR_3 ) COND VAR_6 != null  name = VAR_6 . METHOD_4 ( ) COND ( name != null ) && ( VAR_4 != null ) TYPE TYPE_1 NAME VAR_7 INIT = METHOD_1 ( VAR_6 , VAR_4 )  return VAR_7 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_3<?> NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) TYPE java.lang.String NAME VAR_4 INIT = null COND VAR_3 . METHOD_4 ( )  VAR_4 = ( ( java.lang.String ) ( VAR_3 . METHOD_5 ( ) ) )  assertEquals ( STRING_1 , VAR_1 . get ( VAR_4 ) , VAR_2 . METHOD_6 ( VAR_4 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == ( VAR_2 )  throw new TYPE_2 ( ) ;  VAR_1 = ( ( VAR_1 ) - 1 ) & ( ( VAR_3 . length ) - 1 ) TYPE TYPE_1 NAME result INIT = VAR_3 [ VAR_1 ] COND ( ( VAR_4 ) != ( VAR_2 ) ) || ( result == null )  throw new TYPE_3 ( ) ;  VAR_5 = VAR_1  return result ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 IN VAR_2 . values ( )  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_4 ( )  VAR_3 = null
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME id TYPE boolean NAME VAR_1 TYPE int NAME index INIT = VAR_2 . METHOD_2 ( id ) COND index >= 0 TYPE TYPE_1 NAME e INIT = VAR_2 . METHOD_3 ( index )  VAR_2 . METHOD_4 ( index )  VAR_3 . METHOD_5 ( VAR_4 , VAR_1 )  METHOD_6 ( e )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ! ( VAR_3 )  TYPE_4 . d ( STRING_1 )  METHOD_2 ( VAR_1 , VAR_2 ) TYPE TYPE_3 NAME e  METHOD_3 ( )  throw e ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.renderscript.Allocation NAME a  TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 )  mRS . METHOD_3 ( ) COND ! ( VAR_2 . equals ( a . METHOD_4 ( ) ) )  throw new TYPE_2 ( STRING_2 ) ;  METHOD_5 ( 0 , 0 , VAR_3 , VAR_4 , a , 0 , 0 )  TYPE_1 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_2 = VAR_1  VAR_3 = null COND VAR_1 != null  VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 )  VAR_4 = VAR_3 . METHOD_3 ( ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  VAR_5 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res COND VAR_1 COND relaxed  VAR_2 = new TYPE_2 ( mRS , res , VAR_3 )  VAR_4 = new TYPE_3 ( mRS , res , VAR_5 ) COND relaxed  VAR_6 = new TYPE_4 ( mRS )  VAR_7 = new TYPE_5 ( mRS )  METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME fd COND fd . METHOD_2 ( ) COND TYPE_3 . METHOD_3 ( fd )  TYPE_4 . METHOD_4 ( ) . METHOD_5 ( ) COND TYPE_3 . METHOD_6 ( fd )  METHOD_7 ( fd ) TYPE TYPE_2 NAME VAR_1 BLOCK BLOCK  os . METHOD_1 ( fd )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME res TYPE java.lang.String NAME path TYPE float NAME VAR_2  VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_3 INIT = res . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = res . METHOD_4 ( ) . VAR_5 TYPE int NAME VAR_6 INIT = VAR_1 . METHOD_5 ( VAR_3 , path , VAR_2 , VAR_4 ) COND VAR_6 == 0  throw new android.renderscript.RSRuntimeException ( ( STRING_1 + path ) ) ; TYPE TYPE_1 NAME VAR_7 INIT = new TYPE_1 ( VAR_6 , VAR_1 )  return VAR_7 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . get ( ) COND r == null  return ;  r . METHOD_2 ( this , VAR_2 , null )  r . METHOD_3 ( this , VAR_3 , null )  r . METHOD_4 ( this , VAR_4 , null )  r . METHOD_5 ( this , VAR_5 , null )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE byte[] NAME VAR_2 COND ( VAR_1 . length ) != ( VAR_2 . length )  return false ; TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ COND ( VAR_1 [ i ] ) != ( VAR_2 [ i ] )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_3 . METHOD_3 ( ) , VAR_3 , false , false ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( )  assertTrue ( VAR_4 . METHOD_5 ( VAR_2 , true ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 instanceof TYPE_2 )  return null ;  this TYPE TYPE_2 NAME res INIT = ( ( TYPE_2 ) ( VAR_1 ) )  return VAR_2 . packageName ; TYPE TYPE_3 NAME e BLOCK BLOCK  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) TYPE TYPE_2 NAME VAR_5 INIT = TYPE_3 . METHOD_3 ( VAR_3 ) TYPE long NAME VAR_6 INIT = 0 COND VAR_5 != null  VAR_6 = ( ( VAR_5 . METHOD_4 ( ) ) - ( VAR_7 ) ) / INT_1 COND VAR_6 < 0  VAR_6 = 0  VAR_1 . METHOD_5 ( VAR_6 )
MODIFIER public static RETURN java.lang.String NAME toString TYPE TYPE_1 NAME VAR_1 TYPE java.lang.StringBuilder NAME VAR_2 INIT = new java.lang.StringBuilder ( )  VAR_2 . append ( STRING_1 ) TYPE int NAME i INIT = 0 COND i < 5  ++ i COND i > 0  VAR_2 . append ( STRING_2 )  VAR_2 . append ( TYPE_2 . toString ( VAR_1 . s [ i ] ) )  VAR_2 . append ( STRING_3 )  return VAR_2 . toString ( ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_3 ( new TYPE_4 ( STRING_1 ) , new TYPE_4 ( STRING_2 , 16 ) , new TYPE_4 ( STRING_3 , 16 ) )  return new TYPE_1 ( VAR_1 , VAR_1 . METHOD_2 ( TYPE_5 . METHOD_3 ( STRING_4 ) ) , new TYPE_4 ( STRING_5 , 16 ) , TYPE_4 . METHOD_4 ( 1 ) , TYPE_5 . METHOD_3 ( STRING_6 ) ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) COND ( ( VAR_2 ) & ( VAR_3 ) ) == 0  throw new TYPE_2 ( STRING_2 ) ;  mRS . METHOD_3 ( )  mRS . METHOD_4 ( METHOD_5 ( mRS ) )  TYPE_1 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ;  return new TYPE_3 ( VAR_2 , this . METHOD_2 ( ) , this . METHOD_3 ( ) , this . METHOD_4 ( ) , this . METHOD_5 ( ) , offset , VAR_3 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) >= ( VAR_3 )  VAR_4 . METHOD_2 ( VAR_5 ) TYPE TYPE_2 NAME ex  android.util.Log.e ( TYPE_3 . TAG , STRING_1 )  return true ;  ( VAR_2 ) ++  return false ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  return ;  VAR_1 = true  VAR_2 = VAR_3 . METHOD_2 ( ) TYPE TYPE_1|TYPE_2 NAME e  VAR_2 = null  METHOD_3 ( ) TYPE java.io.IOException NAME VAR_4 BLOCK BLOCK  out . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE int NAME VAR_2 INIT = 100  VAR_1 . METHOD_2 ( VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( )  assertTrue ( STRING_1 , ( ( TYPE_2 . METHOD_4 ( ( VAR_3 - VAR_2 ) ) ) <= 10 ) )
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( VAR_1 . METHOD_2 ( STRING_1 , VAR_2 ) )  assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( METHOD_4 ( STRING_1 , VAR_2 ) , VAR_2 ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_1 , VAR_4 ) )  assertEquals ( VAR_5 , VAR_1 . METHOD_3 ( METHOD_4 ( STRING_1 , VAR_4 ) , VAR_4 ) )  assertFalse ( VAR_1 . METHOD_2 ( STRING_1 , VAR_6 ) )  assertEquals ( VAR_5 , VAR_1 . METHOD_3 ( METHOD_4 ( STRING_1 , VAR_6 ) , VAR_6 ) )
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( VAR_2 )  TYPE_1 . d ( VAR_3 . TAG , ( ( ( ( ( ( ( STRING_1 + ( VAR_2 [ 0 ] ) ) + STRING_2 ) + ( VAR_2 [ 1 ] ) ) + STRING_3 ) + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_4 ) + ( METHOD_3 ( ) ) ) )  VAR_1 . METHOD_4 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File[] NAME VAR_1 TYPE java.io.File[] NAME VAR_2 TYPE java.io.File NAME VAR_3 TYPE boolean NAME VAR_4 TYPE TYPE_1[] NAME VAR_5  TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , false , FLOAT_1 , ( ( TYPE_3 ) ( null ) ) , VAR_5 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME version COND TYPE_2 . METHOD_2 ( context )  TYPE_2 . METHOD_3 ( context , VAR_1 , version )  TYPE_2 . METHOD_4 ( context ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , version ) . METHOD_7 ( )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME value TYPE TYPE_2 NAME m INIT = TYPE_3 . METHOD_2 ( value ) COND m . METHOD_3 ( )  return new TYPE_1 ( m . METHOD_4 ( 2 ) , m . METHOD_4 ( 1 ) , m . METHOD_4 ( 3 ) ) ;  return null ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_2<TYPE_3> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE TYPE_1 NAME VAR_6  VAR_5 = TYPE_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_2<TYPE_3> NAME VAR_7 INIT = VAR_4 . METHOD_3 ( )  VAR_7 . METHOD_4 ( VAR_8 )  TYPE_6 . METHOD_5 ( VAR_5 , VAR_7 )  VAR_6 = TYPE_7 . METHOD_6 ( VAR_5 , true )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME url COND ! ( VAR_2 )  return ; COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( url , ( ( TYPE_3 . METHOD_4 ( ) ) - ( VAR_3 ) ) )  METHOD_5 ( VAR_1 , url )  VAR_4 . METHOD_1 ( this )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME start COND ( start < 0 ) || ( start > ( input . length ( ) ) )  throw new TYPE_1 ( ( ( ( STRING_1 + start ) + STRING_2 ) + ( input . length ( ) ) ) ) ;  this  VAR_1 = TYPE_2 . METHOD_2 ( address , start , VAR_2 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( new TYPE_3 ( STRING_1 , STRING_2 , STRING_3 ) ) ) ) TYPE java.lang.String NAME text INIT = STRING_4 TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( text )  VAR_2 . METHOD_4 ( 1 )  assertEquals ( 1 , VAR_2 . METHOD_5 ( ) )  VAR_2 . METHOD_6 ( new TYPE_5 ( STRING_5 ) )  VAR_2 . METHOD_4 ( 1 )  assertEquals ( 0 , VAR_2 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 )  VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_4 , VAR_5 )  METHOD_3 ( VAR_1 , s )  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE double NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME start TYPE long NAME VAR_2 TYPE long NAME VAR_3 TYPE long NAME VAR_4 TYPE long NAME VAR_5 TYPE long NAME VAR_6 TYPE int NAME VAR_7 TYPE TYPE_2 NAME entry INIT = VAR_1 . METHOD_2 ( start , VAR_2 , null )  assertEquals ( STRING_1 , VAR_3 , VAR_8 )  assertEquals ( STRING_2 , VAR_4 , VAR_9 )  assertEquals ( STRING_3 , VAR_5 , VAR_10 )  assertEquals ( STRING_4 , VAR_6 , VAR_11 )  assertEquals ( STRING_5 , VAR_7 , VAR_12 )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = ( VAR_3 ) - ( VAR_4 ) TYPE int NAME VAR_5 INIT = ( VAR_6 ) - ( VAR_7 ) TYPE int NAME VAR_8 INIT = ( VAR_5 * ( VAR_1 - ( VAR_4 ) ) ) / VAR_2 TYPE int NAME VAR_9 INIT = ( VAR_7 ) + VAR_8  android.util.Log.d ( VAR_10 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_9 ) )  return VAR_9 ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME test TYPE java.lang.String NAME VAR_1 TYPE java.lang.StringBuilder NAME path INIT = new java.lang.StringBuilder ( STRING_1 )  path . append ( VAR_2 )  path . append ( test . METHOD_2 ( ) . getName ( ) . METHOD_3 ( CHAR_1 , VAR_2 ) )  path . append ( VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = path . toString ( ) TYPE TYPE_3 NAME in INIT = VAR_4 class . METHOD_4 ( VAR_3 )  assertNotNull ( ( STRING_2 + path ) , in )  return TYPE_4 . METHOD_5 ( in ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME provider  provider . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) )  provider . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) )  provider . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) )  provider . METHOD_2 ( STRING_7 , STRING_8 )  provider . METHOD_2 ( STRING_9 , ( ( VAR_1 ) + STRING_10 ) )  provider . METHOD_2 ( STRING_11 , STRING_8 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE double NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME n INIT = VAR_1 . length COND n == 0  return true ; TYPE int NAME i INIT = 0 COND i < n  i ++ COND ( VAR_1 [ i ] . VAR_2 . length ) != 0  return false ;  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME uri TYPE int NAME userId COND ( VAR_2 ) == null  VAR_3 COND ( VAR_4 ) == null  return ;  METHOD_2 ( VAR_1 , uri , userId )  VAR_2 . METHOD_3 ( new TYPE_2 ( VAR_1 , uri , userId ) )
MODIFIER public RETURN boolean NAME METHOD_1  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) TYPE boolean NAME result INIT = false TYPE TYPE_1 NAME service INIT = VAR_2 COND service != null  result = service . METHOD_1 ( ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return result ;
MODIFIER public RETURN void NAME run COND true TYPE java.lang.Runnable NAME r INIT = null  VAR_1 COND ( VAR_1 . size ( ) ) == 0  VAR_1 . METHOD_1 ( ) TYPE TYPE_1 NAME ex BLOCK BLOCK COND ( VAR_1 . size ( ) ) > 0  r = VAR_1 . METHOD_2 ( 0 ) COND r != null  r . run ( )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return false ; TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return false ;  return VAR_6 . equals ( VAR_7 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE java.io.File NAME VAR_2 INIT = METHOD_3 ( ) COND VAR_2 . METHOD_4 ( )  VAR_1 = TYPE_2 . METHOD_5 ( VAR_2 )  VAR_3 . METHOD_6 ( this , VAR_4 , ( STRING_1 + ( VAR_4 . METHOD_7 ( ) ) ) )  return null ;  return VAR_1 ;
MODIFIER public RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.util.Set<java.lang.String> NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME VAR_2 INIT = new TYPE_1 < java.lang.String > ( ) COND METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_3 )  VAR_2 . METHOD_4 ( super . METHOD_1 ( VAR_1 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  fail ( STRING_1 ) TYPE TYPE_1 NAME e BLOCK BLOCK  VAR_1 = new TYPE_2 ( VAR_2 )  VAR_1 . METHOD_3 ( new TYPE_3 ( STRING_2 ) )  VAR_1 . METHOD_4 ( )  VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( new TYPE_4 ( ) )  VAR_1 . METHOD_3 ( new TYPE_3 ( STRING_3 ) )  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_2 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE boolean NAME result INIT = false COND VAR_1  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) COND ( ( TYPE_1 . METHOD_2 ( ) ) != null ) && ( TYPE_1 . METHOD_2 ( ) . equals ( device ) ) NAME VAR_2  METHOD_3 ( ( - 1 ) )  result = true  break ;  break ;  return result ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME t INIT = VAR_1 TYPE int NAME i INIT = 0 COND i < ( ( VAR_1 . METHOD_2 ( ) ) - 1 )  i ++  t = t . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  return t . METHOD_5 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( 0 , VAR_1 )  assertEquals ( TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) , VAR_2 . METHOD_5 ( ) ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( 0 )  assertTrue ( ( STRING_1 + ( s . METHOD_6 ( ) ) ) , ( ( s . METHOD_5 ( ) ) instanceof TYPE_3 ) )  s . METHOD_7 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in INIT = VAR_1 TYPE int NAME VAR_2 INIT = in . METHOD_2 ( ) TYPE long NAME id INIT = METHOD_3 ( ) TYPE int NAME VAR_3 INIT = in . METHOD_2 ( ) TYPE java.lang.String NAME name INIT = VAR_4 . get ( METHOD_3 ( ) )  VAR_5 . METHOD_4 ( id , name )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE boolean NAME result INIT = false TYPE TYPE_1 NAME VAR_1  this  VAR_2 = false  VAR_1 = VAR_3 COND VAR_1 != null  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ) TYPE TYPE_2 NAME e BLOCK BLOCK  this  VAR_3 = null  result = true  result = METHOD_4 ( )  VAR_4 = - 1  VAR_5 = - 1  return result ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE double NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_1 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( new TYPE_3 ( STRING_2 , VAR_3 ) , new TYPE_3 ( STRING_3 ) ) TYPE java.lang.Object[] NAME VAR_4 INIT = VAR_2 . METHOD_4 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_4 . length )  i ++  VAR_1 . METHOD_5 ( TYPE_4 . text ( STRING_4 , i ) , TYPE_5 . METHOD_6 ( VAR_4 [ i ] ) )  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )  s . METHOD_3 ( )  VAR_1 . METHOD_4 ( )  METHOD_5 ( )  VAR_1 . METHOD_6 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE TYPE_1 NAME d INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND d == null  return ;  VAR_5 [ 0 ] = 1  VAR_5 [ 1 ] = VAR_2  VAR_5 [ 2 ] = - 0  VAR_5 [ 3 ] = VAR_3  VAR_5 [ 4 ] = 1  VAR_5 [ 5 ] = 0  VAR_5 [ 6 ] = 0  VAR_5 [ 7 ] = 0  VAR_5 [ 8 ] = 1
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND VAR_1 . METHOD_2 ( )  throw new TYPE_3 ( location ) ; COND VAR_1 . METHOD_3 ( )  VAR_2 . log ( VAR_3 , STRING_1 , new java.lang.Object [ ] { location . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) } ) COND ! ( VAR_1 . METHOD_2 ( ) )  throw new TYPE_2 ( location ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME expected INIT = METHOD_2 ( ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( null , expected , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( )  p . METHOD_3 ( VAR_4 )  assertEquals ( expected , VAR_4 )
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_2 . METHOD_2 ( VAR_1 )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 . METHOD_2 ( VAR_2 ) )  return ; TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_3 ( )  assertTrue ( VAR_4 . METHOD_4 ( true ) )  METHOD_5 ( VAR_2 ) COND ! VAR_3  VAR_4 . METHOD_4 ( false )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME node TYPE java.lang.String NAME VAR_1 TYPE TYPE_3 NAME type INIT = TYPE_4 . METHOD_2 ( node , null ) TYPE java.lang.String NAME name INIT = TYPE_4 . getName ( node ) COND name != null COND type != null  return new TYPE_1 ( name , type , VAR_1 , node ) ;  return null ;
MODIFIER public RETURN TYPE_1.File NAME call TYPE TYPE_2 NAME info INIT = VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME path INIT = ( info == null ) ? null : info . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) COND path != null TYPE TYPE_1.File NAME VAR_3 INIT = new TYPE_1 . File ( path )  return VAR_3 . METHOD_6 ( ) ? VAR_3 : null ;  return null ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME server TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = STRING_1 TYPE TYPE_3 NAME VAR_5 INIT = TYPE_1 . METHOD_2 ( VAR_4 , VAR_2 , VAR_6 , VAR_7 ) TYPE TYPE_3 NAME VAR_8 INIT = TYPE_1 . METHOD_2 ( VAR_4 , VAR_3 , VAR_9 , VAR_10 )  return TYPE_1 . METHOD_1 ( VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_6 [ 0 ] , VAR_9 [ 0 ] , VAR_7 [ 0 ] , VAR_10 [ 0 ] , VAR_5 , VAR_8 ) ;
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 = VAR_1  VAR_4 = VAR_2 COND VAR_5  android.util.Log.v ( VAR_6 . TAG , ( ( ( ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + ( VAR_4 ) ) + STRING_2 ) + VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_4 ( c )  assertTrue ( ( ( TYPE_1 . METHOD_2 ( s ) ) != 0 ) )  TYPE_1 . METHOD_5 ( s )  TYPE_1 . METHOD_6 ( c )  TYPE_2 . METHOD_7 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE java.lang.String NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE java.lang.String NAME VAR_3 INIT = ( v == null ) ? ( ( java.lang.String ) ( m . METHOD_2 ( ) ) ) : ( ( java.lang.String ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( VAR_3 . equals ( value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int NAME VAR_5 TYPE float[] NAME d TYPE int NAME VAR_6  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( null , null ) TYPE TYPE_3 NAME VAR_3  VAR_3 = VAR_1 . METHOD_3 ( VAR_2 ) TYPE java.lang.NullPointerException NAME e  return ; TYPE TYPE_4 NAME e  return ; TYPE TYPE_5 NAME VAR_4 INIT = TYPE_5 . METHOD_2 ( STRING_2 )  VAR_4 . METHOD_4 ( VAR_3 )  fail ( STRING_3 ) TYPE TYPE_6 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . METHOD_2 ( VAR_2 ) . build ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( ) TYPE int NAME VAR_4 INIT = INT_1  VAR_5 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 )  VAR_6 = new TYPE_4 ( VAR_7 )  VAR_6 . METHOD_4 ( false )  VAR_3 . METHOD_5 ( VAR_6 , false , VAR_4 )  VAR_3 . METHOD_6 ( )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 INIT = VAR_3 COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( VAR_5 )  VAR_3 = VAR_5 . equals ( VAR_1 ) COND ( VAR_6 . equals ( VAR_1 ) ) && ( VAR_2 == ( VAR_3 ) )  return false ;  VAR_7 . METHOD_1 ( VAR_1 )  VAR_8 . METHOD_1 ( VAR_1 )  VAR_6 . set ( VAR_1 )  return true ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME context INIT = TYPE_3 . METHOD_2 ( )  return new TYPE_1 ( TYPE_4 . METHOD_3 ( VAR_1 ) , TYPE_4 . METHOD_4 ( context , VAR_1 ) , TYPE_4 . METHOD_5 ( context , VAR_1 ) , TYPE_4 . METHOD_6 ( VAR_1 , VAR_2 ) , TYPE_4 . METHOD_7 ( VAR_1 ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 COND VAR_1 COND VAR_2  assertTrue ( STRING_1 , METHOD_2 ( ( ( ( VAR_3 ) + STRING_2 ) + ( VAR_4 ) ) , VAR_5 ) )  assertTrue ( STRING_3 , METHOD_3 ( STRING_4 , VAR_5 ) )  METHOD_4 ( )  super . METHOD_1 ( )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME name  METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 IN VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( name )  VAR_1 . METHOD_4 ( VAR_3 ) TYPE TYPE_4 NAME e BLOCK BLOCK TYPE TYPE_5 NAME e BLOCK BLOCK
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Exception NAME e  android.util.Log.e ( VAR_2 . TAG , ( ( STRING_1 + ( this . METHOD_2 ( ) . METHOD_3 ( ) ) ) + ( VAR_1 == null ? STRING_2 : STRING_3 + VAR_1 ) ) , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  assertEquals ( 0 , TYPE_1 . METHOD_3 ( VAR_1 ) ) TYPE long NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( STRING_2 )  assertEquals ( 16 , TYPE_1 . METHOD_3 ( VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , null , VAR_1 , TYPE_1 . METHOD_3 ( ) , VAR_2 ) TYPE TYPE_2 NAME call INIT = VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( )  assertEquals ( VAR_2 , call . METHOD_9 ( ) )  call . METHOD_10 ( VAR_4 . METHOD_11 ( ) )  assertEquals ( VAR_2 , call . METHOD_9 ( ) )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1  VAR_1 COND ( VAR_2 ) == null  return VAR_3 ; TYPE TYPE_2 NAME VAR_4 IN VAR_2 . values ( ) BLOCK BLOCK  return VAR_2 . values ( ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE byte[] NAME input TYPE char[] NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( input ) TYPE TYPE_3 NAME VAR_3  VAR_4 . METHOD_3 ( VAR_5 )  VAR_3 = VAR_4 . METHOD_1 ( VAR_2 )  VAR_3 . METHOD_4 ( )  TYPE_4 . METHOD_5 ( STRING_1 , VAR_1 , VAR_3 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE byte[] NAME d TYPE int NAME VAR_5  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME address TYPE TYPE_1 NAME VAR_1 COND ( ! ( VAR_1 instanceof TYPE_2 ) ) || ( ( address . METHOD_2 ( CHAR_1 ) ) != ( - 1 ) )  return VAR_1 ;  return VAR_2 . METHOD_3 ( VAR_3 , address ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 0 , 0 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( VAR_1 )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) , TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  ++ i TYPE java.lang.Integer NAME VAR_3 INIT = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( VAR_3 )  assertTrue ( VAR_1 . METHOD_3 ( VAR_3 ) )  assertEquals ( VAR_4 , VAR_1 . size ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) COND VAR_3  java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_4 . METHOD_3 ( ) ) ) + STRING_2 ) + VAR_1 ) )  VAR_5 . METHOD_4 ( VAR_2 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND ( VAR_3 ) == null  return ;  VAR_4 COND ( VAR_4 . METHOD_2 ( VAR_1 ) ) == false  return ;  VAR_1 . METHOD_3 ( VAR_2 )  METHOD_4 ( VAR_5 , VAR_1 )  METHOD_5 ( )
MODIFIER protected RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = super . METHOD_1 ( )  VAR_1 |= VAR_2 COND ! ( METHOD_2 ( ) )  VAR_1 |= VAR_3 COND ( ( METHOD_3 ( ) ) == ( VAR_4 ) ) || ( ( METHOD_3 ( ) ) == ( VAR_5 ) )  VAR_1 |= VAR_6 COND ( ( METHOD_4 ( ) ) & ( VAR_7 ) ) != 0  VAR_1 |= VAR_8  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME run TYPE java.lang.Class[] NAME VAR_1 INIT = new java.lang.Class [ 2 ]  VAR_1 [ 0 ] = VAR_2 class  VAR_1 [ 1 ] = VAR_3 TYPE java.lang.Class NAME VAR_4 INIT = VAR_5 . METHOD_1 ( ) COND true  VAR_4 . METHOD_2 ( STRING_1 , VAR_1 )  return TYPE_1 . FALSE ; TYPE TYPE_2 NAME e  VAR_4 = VAR_4 . METHOD_3 ( ) COND VAR_4 . equals ( VAR_6 class )  return TYPE_1 . TRUE ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME expected TYPE TYPE_1 NAME VAR_1 COND ! ( expected . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( expected ) )  return new TYPE_4 ( VAR_1 . METHOD_4 ( ) , VAR_2 , VAR_1 ) ;  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND VAR_1 . METHOD_2 ( )  VAR_2 . log ( VAR_3 , STRING_1 , new java.lang.Object [ ] { location . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) } )  return ; TYPE java.io.IOException NAME e  throw new TYPE_2 ( location ) ;  throw new TYPE_3 ( location ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( path ) COND VAR_1 == null TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( path ) COND VAR_3 != null  return VAR_3 . METHOD_3 ( ) ;  VAR_2 . METHOD_4 ( path , VAR_1 )  return VAR_1 ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE float NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( ) TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_4 ( 100 ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_4 ( INT_1 )  VAR_3 . METHOD_5 ( new TYPE_2 [ ] { VAR_1 } , VAR_2 )  VAR_4 . METHOD_5 ( new TYPE_2 [ ] { VAR_1 } , VAR_2 ) TYPE TYPE_3 NAME ex BLOCK BLOCK
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME size INIT = VAR_1 . size ( ) COND size == 0  return STRING_1 ; TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( 100 ) TYPE int NAME i INIT = 0 COND i < size  i ++ COND i != 0  sb.append ( STRING_2 )  sb.append ( VAR_1 . METHOD_2 ( i ) . METHOD_1 ( ) )  return sb . toString ( ) ;
MODIFIER public RETURN java.io.File NAME call TYPE TYPE_1 NAME info INIT = VAR_1 . METHOD_1 ( ) TYPE java.lang.String NAME path INIT = ( info == null ? null : info . METHOD_2 ( ) ) . METHOD_3 ( VAR_2 ) COND path != null  return new java.io.File ( path ) ;  return null ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE int NAME userId COND VAR_1  TYPE_1 . d ( VAR_2 . TAG , ( ( ( STRING_1 + packageName ) + STRING_2 ) + userId ) ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( packageName , userId ) COND METHOD_3 ( packageName , userId , VAR_3 )  VAR_5 . METHOD_4 ( packageName , userId )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_5 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_6 ( TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_7 ( TYPE_1 . METHOD_3 ( ) )  METHOD_5 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_6 ( TYPE_1 . METHOD_4 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( ) ) + 2 ) , ( ( VAR_2 . METHOD_4 ( ) ) + 2 ) ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_5 ( )  VAR_3 . METHOD_6 ( VAR_2 , 1 , 1 , null )  VAR_3 . METHOD_7 ( )  VAR_2 = VAR_1  VAR_4 . METHOD_8 ( VAR_2 )  name = ( name . METHOD_9 ( 0 , name . METHOD_10 ( CHAR_1 ) ) ) + STRING_1
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE float NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 )  assertEquals ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_2 . METHOD_6 ( VAR_6 , 1 ) . METHOD_7 ( null ) . METHOD_8 ( )  assertEquals ( VAR_7 , VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) )  METHOD_5 ( VAR_1 )  METHOD_9 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 )  ++ i COND ! ( VAR_2 [ i ] )  VAR_3 . println ( ( ( STRING_1 + i ) + STRING_2 ) )
MODIFIER public RETURN void NAME METHOD_1 COND false TYPE java.io.File NAME f INIT = TYPE_1 . METHOD_2 ( INT_1 , ( ( 3 * INT_1 ) * INT_1 ) ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( f ) TYPE int NAME VAR_2 INIT = 0 TYPE TYPE_3<?extendsTYPE_4> NAME e INIT = VAR_1 . METHOD_3 ( ) COND e . METHOD_4 ( ) TYPE TYPE_4 NAME VAR_3 INIT = e . METHOD_5 ( )  ++ VAR_2  assertEquals ( INT_1 , VAR_2 )  VAR_1 . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( INT_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( INT_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , 1 , STRING_1 )  assertEquals ( match , result )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE char NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7  TYPE_2 . METHOD_2 ( VAR_1 , VAR_8 , VAR_9 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) != null  return VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_2 ( )  android.util.Log.d ( TYPE_2 . TAG , ( STRING_1 + VAR_1 ) )  VAR_3 COND METHOD_3 ( )  return TYPE_2 . METHOD_4 ( VAR_4 , VAR_1 ) ;  return - 1 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE char[] NAME text TYPE int NAME start TYPE int NAME count TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE float NAME x TYPE float NAME y TYPE int NAME flags TYPE int NAME VAR_4  TYPE_1 . METHOD_2 ( VAR_1 , text , start , count , x , y , flags , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE java.io.File NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ( VAR_2 . length ) != 1  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ) ;  VAR_3 = new java.io.File ( VAR_1 , VAR_2 [ 0 ] ) . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_1 , VAR_3 , true )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME e TYPE TYPE_1 NAME f INIT = VAR_2 . get ( VAR_1 ) COND f != null  return f ; TYPE int NAME id INIT = mRS . METHOD_2 ( METHOD_3 ( mRS ) , VAR_1 ) COND id == 0  throw new TYPE_3 ( STRING_1 ) ;  f = new TYPE_1 ( id , mRS , this , VAR_1 )  VAR_2 . METHOD_4 ( VAR_1 , f )  return f ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( event ) COND TYPE_3 . equals ( event . METHOD_4 ( ) )  TYPE_4 . METHOD_5 ( TYPE_5 . METHOD_6 ( ) , true )  TYPE_6 . METHOD_5 ( TYPE_5 . METHOD_6 ( ) , true ) COND METHOD_7 ( )  METHOD_8 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.util.Set<java.lang.String> NAME expected TYPE java.lang.String[] NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( expected , VAR_1 )  assertEquals ( STRING_1 , VAR_3 , VAR_2 )  assertEquals ( expected . size ( ) , VAR_1 . length )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.util.List<TYPE_2> NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE java.util.List NAME VAR_5 TYPE java.lang.String NAME VAR_6 TYPE TYPE_4 NAME service INIT = METHOD_2 ( ) COND service == null  return ;  service . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME locale TYPE TYPE_2 NAME VAR_1 TYPE int[] NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( locale ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( ) TYPE int NAME i  i = 0 COND i < ( VAR_2 . length )  i ++  VAR_3 . METHOD_3 ( VAR_4 , VAR_2 [ i ] )  VAR_1 . METHOD_4 ( VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE int NAME subId TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( context ) TYPE java.lang.String NAME packageName COND VAR_1 == null  packageName = VAR_2  packageName = VAR_1 . METHOD_3 ( )  return TYPE_5 . METHOD_4 ( context , packageName , subId ) ;
MODIFIER static RETURN short NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME index INIT = 0 COND VAR_1 == null  return 0 ; COND ( TYPE_1 [ index ] . VAR_1 ) != null COND ( TYPE_1 [ index ] . VAR_1 ) == VAR_1  return TYPE_1 [ index ] . VAR_2 ; COND ( TYPE_1 [ index ] . VAR_1 . METHOD_2 ( VAR_1 ) ) > 0  break ;  index ++  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<?> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( ) COND ( VAR_1 = VAR_6 . METHOD_4 ( ) ) != null  VAR_1 . METHOD_3 ( ) COND VAR_1 == ( VAR_3 )  throw new TYPE_2 ( ) ;  VAR_2 . invoke ( VAR_1 ) TYPE java.lang.Throwable NAME t  VAR_4 . log ( VAR_5 , STRING_1 , t )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( true )  VAR_1 . METHOD_3 ( VAR_2 )  VAR_1 . METHOD_4 ( ( - 1 ) , 0 , null , null )  VAR_3 . METHOD_5 ( )  METHOD_6 ( VAR_4 , ( ( VAR_5 ) | ( VAR_6 ) ) , VAR_7 . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( STRING_3 ) )  server . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_6 ( STRING_4 ) . METHOD_7 ( ) ) )  VAR_1 . METHOD_8 ( )  assertEquals ( INT_1 , VAR_1 . METHOD_9 ( ) )  assertEquals ( INT_1 , VAR_1 . METHOD_10 ( STRING_1 , ( - 1 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME out TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 INIT = VAR_2 != null TYPE TYPE_4 NAME result INIT = METHOD_2 ( VAR_4 , VAR_3 , VAR_1 ) COND out != null  out . METHOD_3 ( result . METHOD_4 ( ) ) COND VAR_4  result . METHOD_5 ( VAR_2 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME value COND value instanceof java.lang.Integer  return new TYPE_2 ( ( ( java.lang.Integer ) ( value ) ) , null ) ; COND value instanceof java.lang.String  return new TYPE_2 ( 1 , ( ( java.lang.String ) ( value ) ) ) ;  return null ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = INT_1 COND ( ( VAR_3 ) >= INT_2 ) && ( ( VAR_3 ) <= INT_3 ) TYPE int NAME VAR_4 INIT = - ( VAR_3 )  VAR_2 = VAR_4 + INT_3  return new TYPE_1 ( VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 , VAR_16 , VAR_2 ) ;
MODIFIER public static final RETURN TYPE_1 NAME METHOD_1 TYPE short NAME VAR_1 NAME VAR_1  return new TYPE_2 ( ) ;  return new TYPE_3 ( ) ;  return new TYPE_4 ( ) ;  return new TYPE_5 ( ) ;  return new TYPE_6 ( ) ;  return new TYPE_7 ( ) ;  throw new java.lang.IllegalArgumentException ( STRING_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false ) COND ( VAR_1 ) != null  VAR_1 . METHOD_3 ( )  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_3 ( )  VAR_2 = null COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( )  VAR_3 = null  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( false )  METHOD_3 ( false ) COND ( VAR_1 ) == ( VAR_2 )  METHOD_4 ( true ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_4 , VAR_5 , VAR_6 )  METHOD_5 ( VAR_3 )  METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1  target . METHOD_2 ( )  assertTrue ( target . METHOD_3 ( ) )  assertFalse ( target . METHOD_4 ( ) )  VAR_1 . METHOD_2 ( )  assertFalse ( VAR_1 . METHOD_3 ( ) )  target . METHOD_5 ( )  target . METHOD_6 ( )  fail ( STRING_1 ) TYPE TYPE_1 NAME e BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME state TYPE android.bluetooth.BluetoothDevice NAME device NAME state COND VAR_2 . equals ( device )  METHOD_2 ( VAR_3 , device )  METHOD_3 ( VAR_2 , VAR_4 , VAR_5 )  VAR_2 = null  transitionTo ( VAR_6 )  android.util.Log.e ( VAR_7 . TAG , ( STRING_1 + device ) )  break ;  android.util.Log.e ( VAR_7 . TAG , ( ( ( STRING_2 + device ) + STRING_3 ) + state ) )  break ;
MODIFIER public RETURN TYPE_1<TYPE_2,TYPE_3> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_4[] NAME VAR_2 TYPE TYPE_5 NAME VAR_3 COND VAR_4  java.lang.System.out.println ( java.lang.String.format ( STRING_1 , VAR_1 ) )  return TYPE_7 . METHOD_2 ( VAR_1 , false , VAR_3 , VAR_2 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.Class<?> NAME VAR_1 TYPE java.lang.Class<?> NAME VAR_2  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) COND VAR_1 == VAR_2  return 0 ; COND VAR_1 . METHOD_4 ( VAR_2 )  return 1 ; COND VAR_2 . METHOD_4 ( VAR_1 )  return - 1 ;  return VAR_1 . getName ( ) . METHOD_5 ( VAR_2 . getName ( ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_3 TYPE TYPE_2[] NAME VAR_4 INIT = METHOD_2 ( VAR_5 , VAR_1 ) TYPE TYPE_3 NAME VAR_6 INIT = new TYPE_3 ( VAR_2 , VAR_2 , VAR_3 , STRING_1 , null , null , VAR_4 , null , false )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME call INIT = TYPE_2 . METHOD_2 ( VAR_1 class )  TYPE_2 . when ( call . METHOD_3 ( ) ) . thenReturn ( VAR_2 )  TYPE_2 . when ( VAR_3 . METHOD_4 ( ) ) . thenReturn ( call )  TYPE_3 . assertTrue ( VAR_4 . METHOD_5 ( ) )  org.mockito.Mockito.verify ( call ) . METHOD_6 ( )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME w TYPE int NAME h TYPE int[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , w , h )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , data , ( ( data . length ) * 4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value COND key . METHOD_2 ( STRING_1 ) THEN THEN COND key . METHOD_2 ( STRING_2 )  METHOD_3 ( VAR_1 , value , 0 )  METHOD_3 ( TYPE_3 . METHOD_4 ( key ) , value , 0 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ! ( VAR_1 instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return ( ( ( ( VAR_3 ) == ( VAR_4 ) ) && ( ( VAR_5 ) == ( VAR_6 ) ) ) && ( ( VAR_7 ) == ( VAR_8 ) ) ) && ( ( VAR_9 ) == ( VAR_10 ) ) ;
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( VAR_2 ) COND METHOD_2 ( VAR_2 , true )  METHOD_3 ( VAR_3 , VAR_2 ) COND ( VAR_4 ) != null  VAR_4 . METHOD_4 ( STRING_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2  METHOD_2 ( ) TYPE int[] NAME subId INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND ( subId == null ) || ( ( subId . length ) == 0 )  return ; TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( subId [ 0 ] ) COND VAR_4 != null  VAR_4 . METHOD_5 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( server . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) ) )  VAR_1 . METHOD_5 ( STRING_2 , STRING_3 )  VAR_1 . METHOD_5 ( STRING_2 , STRING_4 )  assertEquals ( STRING_4 , VAR_1 . METHOD_6 ( STRING_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  METHOD_4 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_4 )  assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) )  METHOD_4 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( null , STRING_1 , VAR_3 . TAG , null , null , null , null , false )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 0 ) ) . METHOD_5 ( org.mockito.Matchers . METHOD_6 ( ) , org.mockito.Matchers . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_7 ( ) , org.mockito.Matchers . METHOD_8 ( VAR_5 class ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME id TYPE TYPE_1[] NAME t INIT = TYPE_2 . values ( ) TYPE int[] NAME VAR_1 INIT = new int [ 1 ]  VAR_1 [ 0 ] = id TYPE android.content.Intent NAME VAR_2 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( STRING_1 , VAR_1 )  VAR_2 . METHOD_3 ( STRING_2 , true )  METHOD_4 ( VAR_2 , 0 )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) )  return ; COND ! ( VAR_1 . METHOD_4 ( ) )  return ; TYPE boolean NAME VAR_2 INIT = VAR_1 . METHOD_5 ( ) TYPE TYPE_2 NAME callback INIT = METHOD_6 ( )  assertFalse ( VAR_1 . METHOD_5 ( ) )  assertFalse ( VAR_1 . METHOD_7 ( true ) )  METHOD_8 ( callback , VAR_2 )  assertEquals ( VAR_2 , VAR_1 . METHOD_5 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME path  VAR_2 . METHOD_2 ( 0 , new TYPE_2 ( java.lang.String . METHOD_3 ( VAR_3 ) , VAR_3 ) )  VAR_2 . METHOD_4 ( 0 , path . METHOD_5 ( ) )  return this ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == ( VAR_2 )  METHOD_2 ( VAR_3 , VAR_4 ) COND VAR_1 == ( VAR_5 )  METHOD_2 ( VAR_6 , VAR_7 )  VAR_8 . METHOD_3 ( ) COND VAR_1 == ( VAR_9 )  METHOD_4 ( VAR_10 . METHOD_5 ( ) )  METHOD_2 ( VAR_11 , VAR_12 )  VAR_13 . METHOD_3 ( )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME status TYPE int NAME options TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( status . value )  return VAR_3 . METHOD_1 ( VAR_1 , VAR_2 , options ) ;  status . value = VAR_2 . value
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME node TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = node . METHOD_2 ( VAR_3 class ) COND VAR_2 == null  node . METHOD_3 ( new TYPE_3 ( VAR_1 ) ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_2 . METHOD_4 ( ) COND VAR_4 != VAR_1  VAR_2 . METHOD_5 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_3 ( )  VAR_1 . METHOD_3 ( null )  fail ( ) TYPE java.lang.IllegalArgumentException NAME expected BLOCK BLOCK  VAR_1 . METHOD_3 ( VAR_2 ) TYPE java.lang.IllegalArgumentException NAME expected BLOCK BLOCK  VAR_1 . METHOD_4 ( VAR_2 )  VAR_1 . METHOD_3 ( VAR_2 )  VAR_1 . METHOD_5 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 )  assertEquals ( VAR_3 , TYPE_2 . METHOD_3 ( VAR_1 ) ) COND ! ( VAR_4 ) TYPE java.util.List<java.lang.String> NAME VAR_5 INIT = new java.util.ArrayList < java.lang.String > ( ) TYPE java.lang.String NAME VAR_6 IN VAR_1 COND ! ( TYPE_1 . METHOD_4 ( VAR_6 ) )  VAR_5 . METHOD_5 ( VAR_6 )  assertEquals ( VAR_7 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , null ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_3 )  VAR_2 . METHOD_4 ( VAR_4 )  assertEquals ( VAR_1 , VAR_5 . METHOD_5 ( ) )  assertEquals ( VAR_3 , VAR_5 . METHOD_6 ( ) )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE java.lang.String NAME VAR_2 INIT = java.lang.Integer . toString ( VAR_1 , 16 ) . METHOD_2 ( ) TYPE int NAME i INIT = VAR_2 . length ( ) COND i < 4  ++ i  result . append ( CHAR_1 )  return result + VAR_2 ;
MODIFIER public RETURN TYPE_1<TYPE_2,TYPE_3> NAME METHOD_1 TYPE TYPE_4<?> NAME VAR_1 TYPE java.util.Map<TYPE_2,TYPE_3> NAME result INIT = TYPE_5 . METHOD_2 ( ) TYPE java.lang.Object NAME key IN VAR_1 COND ! ( result . METHOD_3 ( key ) ) TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( key ) )  result . METHOD_4 ( VAR_2 , METHOD_5 ( key ) )  return TYPE_1 . METHOD_6 ( result ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( new TYPE_2 [ ] { VAR_3 , VAR_4 } , VAR_5 )  VAR_6 = VAR_7  VAR_8 = true  VAR_9 = TYPE_3 . METHOD_2 ( STRING_1 )  VAR_2 . METHOD_3 ( )  assertTrue ( VAR_10 )  assertTrue ( VAR_11 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device  android.util.Log.v ( VAR_1 . TAG , ( STRING_1 + device ) ) TYPE boolean NAME result INIT = false TYPE TYPE_1 NAME service INIT = VAR_2 COND service != null  result = service . METHOD_1 ( device ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME result COND ( VAR_1 ) == null  VAR_1 = new TYPE_1 ( 20 , 0 , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , ( - 1 ) , INT_1 , VAR_2 , VAR_2 , VAR_2 , VAR_2 , VAR_2 , true )  METHOD_2 ( result , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( true )  TYPE_1 . METHOD_4 ( new java.lang.IllegalArgumentException ( STRING_1 ) ) . when ( VAR_1 ) . METHOD_5 ( org.mockito.Matchers . METHOD_6 ( VAR_2 class ) )  assertFalse ( VAR_3 . METHOD_7 ( new TYPE_2 ( ) , false ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_8 ( 2 ) ) . METHOD_9 ( org.mockito.Matchers . METHOD_10 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME action INIT = METHOD_3 ( x . action ) TYPE TYPE_5 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) COND action == null  action = new TYPE_6 ( info )  METHOD_4 ( new TYPE_7 ( info , VAR_2 , action ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_1 == null  return true ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) TYPE TYPE_2 NAME VAR_4 INIT = ( ( TYPE_2 ) ( VAR_2 ) ) COND ( ( VAR_5 ) == ( VAR_6 ) ) && ( ( VAR_7 ) != ( VAR_6 ) )  return true ;  return ( VAR_5 . METHOD_2 ( ) ) > ( VAR_7 . METHOD_2 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( new java.util.HashMap < > ( ) ) . METHOD_3 ( 1 , FLOAT_1 )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK TYPE java.util.HashMap<java.lang.Integer,TYPE_3> NAME m INIT = new java.util.HashMap < > ( )  m . METHOD_4 ( 1 , FLOAT_1 )  TYPE_1 . METHOD_2 ( m ) . METHOD_3 ( 1 , FLOAT_1 )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 ) TYPE int NAME VAR_1 INIT = values . size ( ) TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  sb.append ( STRING_1 )  sb.append ( i )  sb.append ( STRING_2 )  sb.append ( values . get ( i ) . METHOD_2 ( ) )  return sb . toString ( ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( VAR_1 ) COND ( VAR_3 != null ) && ( ( VAR_5 ) != null )  return VAR_2 . get ( VAR_5 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 100 TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  METHOD_2 ( ( ( ( STRING_1 + ( i + 1 ) ) + STRING_2 ) + VAR_1 ) , INT_1 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  METHOD_3 ( false )  METHOD_4 ( false )  METHOD_5 ( VAR_1 , true )  METHOD_6 ( false )  assertEquals ( VAR_2 , TYPE_1 . METHOD_7 ( mContext , VAR_3 , VAR_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 )  VAR_1 . METHOD_2 ( new java.lang.Object ( ) )  VAR_1 . METHOD_2 ( new java.lang.Object ( ) )  VAR_1 . METHOD_2 ( new java.lang.Object ( ) )  METHOD_3 ( ) TYPE TYPE_2 NAME VAR_2 BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 COND VAR_8 class . METHOD_2 ( VAR_3 )  return new TYPE_5 ( VAR_1 , VAR_7 , VAR_3 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE java.util.List<TYPE_4> NAME VAR_2 INIT = METHOD_3 ( info , VAR_3 , VAR_4 )  METHOD_4 ( info , x , x . METHOD_5 ( ) , VAR_2 , VAR_1 ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( TYPE_1 . TAG , ( ( ( STRING_1 + ( VAR_1 ) ) + STRING_2 ) + ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . VAR_2 ) ) ) )  VAR_3 = VAR_4  METHOD_4 ( VAR_5 )  METHOD_5 ( VAR_3 , VAR_6 )  METHOD_6 ( VAR_7 , VAR_8 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE boolean NAME result INIT = false COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 ) COND METHOD_2 ( ) . equals ( device ) NAME VAR_3  METHOD_3 ( ( - 1 ) )  result = true  break ;  break ;  return result ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) COND VAR_2 . METHOD_4 ( )  VAR_2 = VAR_3 . METHOD_5 ( VAR_2 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_4 ( VAR_5 , TYPE_5 . METHOD_6 ( VAR_1 ) , TYPE_6 . METHOD_7 ( VAR_2 ) , METHOD_8 ( ) )  METHOD_9 ( VAR_4 )  return false ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE byte NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , STRING_1 )  VAR_1 . METHOD_2 ( 0 )  assertEquals ( 0 , VAR_2 . length ( ) ) TYPE long NAME VAR_3 INIT = ( ( long ) ( VAR_4 ) ) + INT_1  VAR_1 . METHOD_2 ( VAR_3 )  assertEquals ( VAR_3 , VAR_2 . length ( ) )
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.d ( TAG , STRING_1 )  METHOD_2 ( ) COND ( VAR_2 ) != null  VAR_3 = new TYPE_1 ( VAR_2 )  VAR_3 . start ( ) COND ( VAR_4 ) != null  VAR_5 = new TYPE_1 ( VAR_4 )  VAR_5 . start ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  ++ i  assertTrue ( VAR_1 . METHOD_2 ( new java.lang.Integer ( i ) ) )  assertEquals ( 0 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( new java.lang.Integer ( VAR_2 ) )  METHOD_4 ( ) TYPE TYPE_2 NAME VAR_3 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . addFeature ( VAR_2 ) . addFeature ( VAR_3 ) . build ( ) TYPE TYPE_3 NAME p INIT = TYPE_3 . METHOD_2 ( )  VAR_1 . METHOD_3 ( p , 0 )  p . METHOD_4 ( 0 ) TYPE TYPE_1 NAME result INIT = TYPE_4 . METHOD_5 ( p )  p . METHOD_6 ( )  TYPE_5 . assertEquals ( VAR_1 , result )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 ) . get ( VAR_1 )  assertNotNull ( VAR_2 ) TYPE TYPE_2 NAME p IN VAR_2  assertTrue ( ( ( STRING_2 + p ) + STRING_3 ) , p . METHOD_3 ( ) )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 TYPE TYPE_5 NAME project TYPE TYPE_6 NAME VAR_3 TYPE TYPE_7 NAME VAR_4 COND ! ( TYPE_8 . METHOD_2 ( ) . METHOD_3 ( ) )  return TYPE_9 . METHOD_4 ( ) ;  return VAR_5 < TYPE_2 > METHOD_5 ( new TYPE_10 ( project , VAR_1 , VAR_2 , VAR_3 ) ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 COND METHOD_2 ( )  TYPE_1 . METHOD_3 ( )  VAR_2 . METHOD_4 ( VAR_3 )  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_2 NAME e  android.util.Log.e ( TYPE_1 . TAG , STRING_2 )  VAR_2 = null  VAR_4 = 0  VAR_5 = null  VAR_6 = - 1 COND ( VAR_7 ) != null  VAR_7 . METHOD_5 ( )  VAR_7 = null
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME address TYPE TYPE_2 NAME context TYPE TYPE_3 NAME listener INIT = new TYPE_3 ( address , VAR_1 , VAR_2 , context ) COND ( VAR_1 ) != null  listener . METHOD_2 ( )  VAR_3 . METHOD_3 ( listener )  return listener . METHOD_4 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1  METHOD_2 ( VAR_2 , STRING_1 )  this TYPE int NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_5 INIT = VAR_4 . METHOD_1 ( VAR_3 , VAR_1 ) COND VAR_5 == null  return null ;  return VAR_6 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_1 . d ( this , STRING_1 , VAR_1 ) COND VAR_2 . METHOD_2 ( VAR_1 )  METHOD_3 ( VAR_1 , STRING_2 ) . METHOD_4 ( )  METHOD_3 ( VAR_1 , STRING_2 ) . METHOD_5 ( ) COND VAR_3 . METHOD_2 ( VAR_1 )  TYPE_1 . w ( this , STRING_3 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE boolean NAME a TYPE java.lang.Integer NAME b COND a && ( ( b . METHOD_2 ( ) ) == INT_1 )  return ;  java.lang.System.out.println ( ( ( ( STRING_1 + a ) + STRING_2 ) + b ) )
MODIFIER public synchronized RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1  METHOD_2 ( VAR_2 , STRING_1 ) COND VAR_3 . METHOD_3 ( VAR_4 , VAR_5 )  METHOD_4 ( STRING_2 )  return false ;  METHOD_4 ( ( STRING_3 + ( VAR_6 ) ) )  VAR_6 = VAR_1 TYPE android.os.Message NAME m INIT = VAR_7 . METHOD_5 ( VAR_8 )  VAR_7 . METHOD_6 ( m )  VAR_9 = TYPE_1 . METHOD_7 ( )  return true ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE boolean NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , VAR_1 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE int NAME VAR_5 TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return ;  VAR_8 . append ( new TYPE_3 . Float ( VAR_9 , VAR_10 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) , ( VAR_3 * 2 ) , ( VAR_4 * 2 ) ) , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE TYPE_1 NAME VAR_3 INIT = this . VAR_3  VAR_3 . METHOD_2 ( ) TYPE int NAME i INIT = METHOD_3 ( VAR_1 ) COND i != ( - 1 )  METHOD_4 ( i )  VAR_2 = true  VAR_3 . METHOD_5 ( )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res COND VAR_1 COND relaxed  VAR_2 = new TYPE_2 ( mRS , res , VAR_3 )  VAR_4 = new TYPE_3 ( mRS , res , VAR_5 ) COND relaxed  VAR_6 = new TYPE_4 ( mRS , res , VAR_7 )  VAR_8 = new TYPE_5 ( mRS , res , VAR_9 )  METHOD_2 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = java.lang.Integer . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_4 ( ) COND VAR_3 == null  VAR_4 . println ( STRING_1 )  return ;  VAR_5 . METHOD_5 ( VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME path TYPE java.util.List<java.io.File> NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 , path ) TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( ) TYPE TYPE_3<java.io.File> NAME VAR_3 INIT = VAR_2 . METHOD_3 ( ) COND VAR_3 . METHOD_4 ( )  sb.append ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) ) COND VAR_3 . METHOD_4 ( )  sb.append ( VAR_4 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( method . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( ! ( VAR_2 . METHOD_4 ( this . METHOD_5 ( ) , method ) ) )  return ;  session = VAR_1 . METHOD_6 ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( method )  VAR_3 . METHOD_4 ( method )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  METHOD_3 ( STRING_1 , VAR_1 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_5  VAR_4 . METHOD_4 ( VAR_6 )  METHOD_5 ( new TYPE_3 ( TYPE_4 . METHOD_6 ( ) ) , VAR_7 )  METHOD_7 ( STRING_1 , VAR_8 . METHOD_2 ( ) , VAR_3 )  assertEquals ( VAR_9 , VAR_10 . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME callback  TYPE_2 . METHOD_2 ( mContext ) TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . METHOD_3 ( TYPE_4 . METHOD_4 ( ) ) COND ( ! ( VAR_1 . METHOD_5 ( ) ) ) && ( ! ( VAR_2 . METHOD_6 ( VAR_3 , VAR_1 . METHOD_7 ( ) ) ) )  VAR_4 . METHOD_8 ( callback , TYPE_5 . METHOD_9 ( ) ) COND VAR_5  android.util.Log.d ( VAR_6 . TAG , STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 , STRING_26 , STRING_27 )
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME TYPE_2 INIT = this . METHOD_2 ( ) COND TYPE_2 . METHOD_3 ( )  return false ; TYPE TYPE_1 NAME TYPE_3 INIT = this . METHOD_4 ( ) NAME this . METHOD_5 ( )  return TYPE_3 . METHOD_6 ( TYPE_2 ) . METHOD_7 ( ) ;  return TYPE_3 . METHOD_8 ( TYPE_2 ) . METHOD_7 ( ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME VAR_1  TYPE_4 . METHOD_2 ( VAR_1 )  TYPE_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) TYPE TYPE_5 NAME VAR_2 INIT = TYPE_1 . METHOD_5 ( ) COND VAR_1 . METHOD_8 ( )  VAR_2 . METHOD_6 ( TYPE_6 . METHOD_7 ( context , VAR_1 ) )  return VAR_2 . build ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE java.lang.Object[] NAME VAR_1 TYPE TYPE_2 NAME VAR_2  assertFalse ( STRING_1 , ( ( VAR_1 . length ) == 0 ) ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( test , ( ( STRING_2 + i ) + STRING_3 ) )  VAR_2 . METHOD_3 ( ( ( TYPE_3 ) ( VAR_1 [ i ] ) ) , VAR_3 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE java.lang.String NAME data TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony != null  return telephony . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , data ) ; TYPE android.os.RemoteException NAME ex BLOCK BLOCK TYPE java.lang.NullPointerException NAME ex BLOCK BLOCK  return STRING_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.util.Map<java.lang.String,java.lang.Object> NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) TYPE java.lang.String NAME key IN TYPE_1 . METHOD_3 ( VAR_3 ) TYPE java.lang.Object NAME value INIT = VAR_3 . get ( key )  android.util.Log.v ( VAR_1 , java.lang.String.format ( STRING_1 , key , TYPE_1 . METHOD_4 ( value ) ) )
MODIFIER private final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME f TYPE java.lang.String NAME name TYPE TYPE_3 NAME is INIT = TYPE_4 . METHOD_2 ( name )  assertNotNull ( ( STRING_1 + name ) , is )  return ( ( TYPE_1 ) ( f . METHOD_3 ( is ) ) ) ;  is . METHOD_4 ( ) TYPE java.io.IOException NAME VAR_1 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME s INIT = STRING_1 + ( STRING_2 + STRING_3 )  VAR_1 = false  TYPE_1 . METHOD_2 ( s )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK  assertFalse ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 IN VAR_4  new TYPE_3 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_3 ( )  VAR_2 . METHOD_4 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ( VAR_2 != null ) && ( ! ( VAR_2 instanceof TYPE_3 ) )  METHOD_3 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_1 . METHOD_4 ( ) COND ( VAR_3 != null ) && ( ! ( VAR_3 instanceof TYPE_3 ) )  METHOD_3 ( VAR_3 )  return super . METHOD_1 ( VAR_1 ) ;
MODIFIER private RETURN void NAME start TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 )  VAR_1 . start ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_1 ( )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( )  VAR_5 . METHOD_2 ( VAR_4 , null , VAR_3 )  METHOD_3 ( VAR_5 . METHOD_4 ( null ) )  VAR_6 = new TYPE_5 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.List<TYPE_2<TYPE_1,TYPE_3>> NAME VAR_2 COND VAR_1 != null TYPE java.util.List<java.lang.Throwable> NAME VAR_3 INIT = null TYPE TYPE_1 NAME session IN VAR_1  VAR_3 = TYPE_4 . METHOD_2 ( session , VAR_2 , VAR_3 ) COND VAR_3 != null  throw new TYPE_5 ( VAR_3 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE float NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 COND ( ( VAR_1 ) == null ) || ( ( METHOD_2 ( ) ) == false )  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  return null ;  return VAR_1 . METHOD_3 ( this ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_2 , e )  return null ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND ! ( METHOD_1 ( VAR_4 , VAR_1 , ( ( TYPE_4 ) ( VAR_2 ) ) , VAR_3 ) ) COND ! ( METHOD_1 ( VAR_5 , VAR_1 , ( ( com.android.jack.ir.ast.JMethod ) ( VAR_2 ) ) , VAR_3 ) )  super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME id TYPE byte[] NAME data COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + id ) ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , id , data ) ;
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( new byte [ ] { - 2 , - 1 } ) )  server . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_1 INIT = server . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) TYPE TYPE_3 NAME in INIT = VAR_1 . METHOD_7 ( )  assertEquals ( INT_1 , in . METHOD_8 ( ) )  assertEquals ( INT_2 , in . METHOD_8 ( ) )  assertEquals ( ( - 1 ) , in . METHOD_8 ( ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 instanceof TYPE_3  return VAR_2 ; TYPE TYPE_4 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . get ( VAR_3 )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . set ( 5 , false )  assertTrue ( STRING_1 , ( ! ( VAR_1 . get ( 5 ) ) ) )  VAR_1 . set ( 5 , true )  assertTrue ( STRING_2 , VAR_1 . get ( 5 ) )  VAR_1 . set ( ( - 5 ) , false )  fail ( ) TYPE TYPE_1 NAME expected BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . println ( STRING_1 )  VAR_2 . METHOD_2 ( VAR_3 ) COND ! ( METHOD_3 ( ) )  VAR_2 . METHOD_4 ( VAR_4 )  return ; TYPE byte NAME VAR_5 INIT = VAR_6 TYPE TYPE_1 NAME VAR_7 INIT = new TYPE_1 ( VAR_8 , VAR_9 , 0 ) TYPE TYPE_2 NAME VAR_10 INIT = METHOD_5 ( VAR_5 , VAR_7 )  METHOD_6 ( VAR_10 )  VAR_1 . println ( STRING_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 )  i ++ COND ( ( VAR_2 [ i ] ) != null ) && ( ( VAR_2 [ i ] . METHOD_2 ( ) ) == false )  return VAR_2 [ i ] ;  return null ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE java.lang.Integer NAME VAR_2 TYPE java.lang.Integer NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_1 NAME session  VAR_5  session = VAR_6 . get ( VAR_2 ) COND session == null  throw new TYPE_2 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ; TYPE byte[] NAME VAR_7 INIT = VAR_4 . METHOD_2 ( )  return session . METHOD_3 ( VAR_1 , new TYPE_3 ( VAR_3 ) , VAR_7 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Integer[] NAME VAR_1 INIT = new java.lang.Integer [ VAR_2 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_2 ) - 1 )  ++ i  VAR_1 [ i ] = i TYPE TYPE_1<java.lang.Integer> NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_1 )  new TYPE_3 ( VAR_2 , false , TYPE_2 . METHOD_2 ( VAR_1 ) )  METHOD_3 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  return ;  METHOD_3 ( true )  METHOD_4 ( false )  METHOD_5 ( )  METHOD_4 ( true )  METHOD_6 ( )  METHOD_4 ( false )  METHOD_3 ( false )  METHOD_4 ( true )  METHOD_7 ( true )  METHOD_4 ( false )  METHOD_5 ( )  METHOD_4 ( true )  METHOD_6 ( )  METHOD_4 ( true )
MODIFIER synchronized RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME id TYPE byte[] NAME data COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + id ) ) COND ! ( METHOD_2 ( device ) )  return false ;  return METHOD_3 ( id , data ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) COND VAR_1 == null  TYPE_2 . e ( STRING_1 , STRING_2 )  return ; TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( VAR_4 ) COND VAR_3 != null TYPE TYPE_4 NAME VAR_5 INIT = VAR_1 . METHOD_4 ( )  VAR_5 . METHOD_5 ( VAR_3 )  VAR_5 . METHOD_6 ( )  VAR_1 . METHOD_7 ( )  METHOD_8 ( false )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME c INIT = context . METHOD_2 ( ) . METHOD_3 ( VAR_1 , new java.lang.String [ ] { VAR_2 } , null , null , null ) TYPE java.lang.String NAME VAR_3 INIT = null COND ( c != null ) && ( c . METHOD_4 ( ) )  VAR_3 = c . METHOD_5 ( 0 ) COND c != null  c . METHOD_6 ( )  c = null  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 == null  TYPE_4 . METHOD_4 ( context )  TYPE_5 . e ( STRING_1 , STRING_2 ) TYPE TYPE_6 NAME call INIT = VAR_1 . METHOD_5 ( ) COND call != null  call . METHOD_6 ( ) . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ! ( VAR_2 )  throw new TYPE_1 ( ) ; TYPE java.lang.Class<?extendsTYPE_2> NAME VAR_3 INIT = ( ( VAR_4 ) == null ) ? TYPE_3 . METHOD_2 ( VAR_5 class , VAR_1 ) : VAR_4 . METHOD_2 ( VAR_1 )  METHOD_1 ( VAR_3 ) TYPE TYPE_4 NAME e  throw new java.lang.IllegalArgumentException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , 3 ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  assertEquals ( 0 , VAR_1 . size ( ) )  assertEquals ( 0 , VAR_3 . size ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.Object NAME VAR_2 COND VAR_1 == ( VAR_3 ) TYPE boolean NAME VAR_4 INIT = ( ( TYPE_2 ) ( VAR_2 ) )  METHOD_2 ( ( STRING_1 + ( java.lang.String . METHOD_3 ( VAR_4 ) ) ) )  METHOD_4 ( VAR_4 )  TYPE_3 . action ( METHOD_5 ( ) , VAR_5 , VAR_4 )  return true ;  return false ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type NAME type . METHOD_2 ( )  return VAR_2 ;  return VAR_4 ;  return VAR_6 ;  return VAR_8 ;  return VAR_11 ;  return VAR_13 ;  return VAR_15 ;  return VAR_17 ;  return VAR_19 ;  return TYPE_3 . METHOD_3 ( type ) ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME c TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = c . METHOD_2 ( ) COND VAR_2 . METHOD_3 ( )  VAR_1 . append ( ( ( VAR_2 . METHOD_4 ( ) ) + STRING_1 ) )  return VAR_1 . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME p INIT = TYPE_3 . METHOD_2 ( this , e ) . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . METHOD_4 ( p ) COND ( VAR_1 == null ) || ( VAR_1 . METHOD_5 ( ) )  return ; TYPE TYPE_5 NAME VAR_3 INIT = VAR_1 . METHOD_6 ( ) COND VAR_3 != null TYPE boolean NAME VAR_4 INIT = VAR_5 . METHOD_7 ( VAR_3 ) COND ! VAR_4  METHOD_8 ( ) . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_5 ( STRING_1 ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( STRING_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , INT_1 , STRING_1 )  assertEquals ( match , result )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 COND ( VAR_2 . METHOD_2 ( ) ) && ( VAR_3 . METHOD_2 ( ) ) COND android.util.Log . METHOD_3 ( VAR_4 , VAR_5 )  android.util.Log.v ( VAR_6 . TAG , STRING_1 ) COND android.util.Log . METHOD_3 ( VAR_4 , VAR_5 )  android.util.Log.v ( VAR_6 . TAG , STRING_2 )  TYPE_1 . METHOD_4 ( METHOD_5 ( ) )  METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_2 ( METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_4 ( VAR_2 , STRING_1 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( VAR_2 , STRING_2 )  VAR_1 . METHOD_5 ( VAR_3 )  VAR_1 . METHOD_5 ( new TYPE_1 ( 0 ) )  VAR_1 . METHOD_5 ( new TYPE_1 ( 1 ) )  VAR_1 . METHOD_5 ( VAR_4 )
MODIFIER public RETURN char[] NAME METHOD_1 TYPE int NAME length TYPE TYPE_1 NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( METHOD_3 ( length ) ) . METHOD_4 ( VAR_4 ) . METHOD_5 ( ) TYPE char[] NAME result INIT = new char [ VAR_3 . length ( ) ]  VAR_3 . get ( result )  return result ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getName ( ) ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) . METHOD_10 ( VAR_1 . METHOD_11 ( ) ) . METHOD_12 ( VAR_1 . METHOD_13 ( ) ) . METHOD_14 ( VAR_1 . METHOD_15 ( ) ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( VAR_4 , ( - 1 ) )  VAR_5 = ( VAR_3 != ( VAR_6 ) ) && ( VAR_3 != ( VAR_7 ) )  TYPE_1 . METHOD_3 ( )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) >= ( VAR_2 . length )  VAR_3 . METHOD_2 ( )  return ; TYPE java.lang.String NAME VAR_4 INIT = ( ( VAR_5 ) != null ) ? VAR_5 [ VAR_1 ] : null  VAR_3 . METHOD_3 ( VAR_2 [ VAR_1 ] , VAR_4 )  ( VAR_1 ) ++
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) COND VAR_2 . METHOD_4 ( VAR_4 , true ) TYPE TYPE_2<?> NAME item IN VAR_5  item . METHOD_5 ( VAR_2 )  item . METHOD_6 ( VAR_6 , VAR_7 )  VAR_1 . METHOD_7 ( item )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE byte NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type COND ( type . METHOD_1 ( ) ) || ( type instanceof TYPE_1 )  return ; TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( type ) TYPE TYPE_3 NAME VAR_2 INIT = type . METHOD_2 ( VAR_3 class ) COND VAR_2 != null TYPE TYPE_4 NAME f IN VAR_2 . METHOD_3 ( )  VAR_1 . append ( new TYPE_5 ( f , VAR_4 ) )  type . METHOD_4 ( VAR_3 class )  VAR_1 . METHOD_5 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME status TYPE TYPE_1 NAME response INIT = new TYPE_2 ( VAR_1 , status , null ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( status ) COND VAR_2 != null TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( STRING_1 )  VAR_3 . append ( VAR_2 )  VAR_3 . append ( STRING_2 )  VAR_3 . append ( VAR_2 )  VAR_3 . append ( STRING_3 )  response . METHOD_3 ( METHOD_4 ( VAR_3 . toString ( ) ) )  return response ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND ( ( VAR_2 ) != null ) && ( VAR_1 . equals ( VAR_2 . METHOD_2 ( ) ) )  return VAR_2 . METHOD_3 ( ) ;  return TYPE_1 . METHOD_4 ( VAR_1 ) ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( this ) TYPE java.lang.Object NAME value IN METHOD_3 ( ) . values ( ) COND value instanceof TYPE_2 COND ! ( VAR_2 )  ( ( TYPE_2 ) ( value ) ) . METHOD_4 ( this )  VAR_1 . METHOD_5 ( ( ( TYPE_2 ) ( value ) ) )  VAR_2 = true
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_1 TYPE java.lang.Class<?> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = TYPE_1 . METHOD_3 ( name , VAR_1 , VAR_2 ) COND ( VAR_3 ) == null  result . METHOD_4 ( VAR_1 , VAR_2 ) COND ! ( VAR_3 . equals ( VAR_1 ) )  throw new java.lang.IllegalArgumentException ( ( ( ( VAR_3 ) + STRING_1 ) + VAR_1 ) ) ;  return result ;
MODIFIER public RETURN void NAME run TYPE java.io.File NAME output INIT = java.io.File . METHOD_1 ( STRING_1 , STRING_2 )  output . METHOD_2 ( )  VAR_1 [ VAR_2 ] = output  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( input , output , VAR_3 , VAR_4 , false , ( VAR_2 == 0 ? VAR_5 : VAR_6 ) ) TYPE java.lang.Exception NAME VAR_7 BLOCK BLOCK  VAR_8 . METHOD_5 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME session TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . get ( VAR_2 )  VAR_1 . METHOD_1 ( VAR_3 ) TYPE TYPE_5 NAME e  session . METHOD_2 ( ) . METHOD_3 ( VAR_4 , e )  throw new TYPE_2 ( e ) ; COND TYPE_4 . get ( VAR_5 ) . booleanValue ( ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type IN session . METHOD_4 ( )  type . METHOD_5 ( VAR_6 class )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_2 ( )  VAR_3 . METHOD_2 ( ) COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.lang.String NAME packageName TYPE java.lang.String NAME VAR_2 COND packageName != null  VAR_3 . info ( STRING_1 , VAR_2 , packageName )  device . METHOD_2 ( packageName , VAR_4 )  VAR_3 . info ( STRING_2 , VAR_2 , VAR_1 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE long NAME VAR_1 COND VAR_1 == ( VAR_2 )  return true ; COND VAR_1 < ( VAR_3 )  return false ; COND VAR_1 == ( VAR_3 )  return true ;  VAR_4 . METHOD_2 ( ( VAR_1 - ( VAR_3 ) ) )  VAR_3 = VAR_1  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_3 ) - 1 )  ++ i  VAR_2 [ i ] = new java.lang.Integer ( ( i + ( VAR_3 ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) )  METHOD_5 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.util.Set<java.lang.String> NAME VAR_4 INIT = new TYPE_2 < java.lang.String > ( TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) TYPE java.util.Set<java.lang.String> NAME VAR_5 INIT = new TYPE_2 < java.lang.String > ( TYPE_3 . METHOD_2 ( VAR_3 ) )  assertEquals ( VAR_4 , VAR_5 )  assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 )  return null ; TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) . getName ( VAR_3 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE java.lang.String NAME a INIT = TYPE_4 . METHOD_2 ( session )  assertTrue ( TYPE_5 . METHOD_3 ( a ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME type INIT = METHOD_3 ( ) . get ( VAR_2 ) TYPE TYPE_5 NAME VAR_3 INIT = METHOD_4 ( VAR_4 )  METHOD_5 ( new TYPE_6 ( info , type , VAR_3 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER public RETURN int[] NAME METHOD_1 TYPE int[] NAME src TYPE int[] NAME VAR_1  return new int [ ] { VAR_1 [ 0 ] , src [ 1 ] , VAR_1 [ 2 ] , TYPE_1 . METHOD_2 ( INT_1 , ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME type TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 COND ! ( TYPE_3 . METHOD_2 ( VAR_4 ) )  android.util.Log.w ( TYPE_4 . TAG , STRING_1 )  return null ; TYPE TYPE_4 NAME service INIT = METHOD_3 ( ) COND service == null  return null ;  return service . METHOD_1 ( device , type , VAR_1 , VAR_2 , VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_2 NAME VAR_1 TYPE long NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( )  VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_3 ( session , VAR_1 ) COND ( VAR_4 != null ) && ( VAR_4 . METHOD_4 ( ) ) COND ( ( VAR_5 . flags ) & ( VAR_6 ) ) != 0  METHOD_5 ( )  VAR_7 = true  METHOD_6 ( )  TYPE_3 . METHOD_7 ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE TYPE_1 NAME value COND key == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  VAR_1 . METHOD_2 ( key ) TYPE int NAME VAR_2 INIT = key . METHOD_3 ( ) COND ! ( VAR_3 [ VAR_2 ] )  VAR_3 [ VAR_2 ] = true  ( VAR_4 ) ++ TYPE TYPE_1 NAME VAR_5 INIT = ( ( TYPE_1 ) ( values [ VAR_2 ] ) )  values [ VAR_2 ] = value  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  assertTrue ( VAR_1 . METHOD_3 ( ) )  TYPE_1 . METHOD_4 ( new java.io.File ( VAR_1 , STRING_1 ) , new byte [ ] { CHAR_1 } ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_1 . METHOD_5 ( VAR_4 , 1 )  assertEquals ( VAR_5 , VAR_2 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) )  METHOD_8 ( VAR_3 )  METHOD_9 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 , VAR_4 ) . METHOD_2 ( VAR_1 ) . build ( )  VAR_5 . METHOD_3 ( )  VAR_5 . METHOD_4 ( 0 )  VAR_6 . METHOD_5 ( VAR_3 )  METHOD_6 ( VAR_7 ) TYPE boolean NAME VAR_8  VAR_8 = VAR_5 . METHOD_7 ( ) TYPE TYPE_3 NAME e  VAR_8 = false  METHOD_8 ( new TYPE_4 ( VAR_2 , VAR_8 ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE TYPE_2 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_1 ( ) TYPE TYPE_3 NAME type INIT = ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_2 . get ( type ) COND result == null  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;  return result ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE int NAME userId COND VAR_1  TYPE_1 . d ( VAR_2 . TAG , ( ( ( STRING_1 + packageName ) + STRING_2 ) + userId ) ) COND METHOD_2 ( packageName , userId , null )  VAR_3 . METHOD_3 ( packageName , userId )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME subId TYPE int NAME slotId TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( ( ( ( STRING_1 + subId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) ) NAME VAR_1  TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( VAR_5 )  VAR_6 . METHOD_5 ( true , TYPE_2 . METHOD_6 ( ) )  break ;  METHOD_7 ( )
MODIFIER final RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == ( VAR_3 )  return true ; COND VAR_1 == 0  return false ; TYPE int NAME VAR_4 INIT = 0 COND ( VAR_5 ) && ( ( VAR_2 ) == ( VAR_6 ) )  VAR_4 |= VAR_7 COND ( VAR_8 ) && ( ( VAR_2 ) == ( VAR_6 ) )  VAR_4 |= VAR_9  return ( VAR_1 & VAR_4 ) != 0 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_3 ) TYPE java.lang.Exception NAME VAR_4  VAR_5 = VAR_6  android.util.Log.e ( VAR_7 . TAG , ( STRING_1 + ( VAR_4 . toString ( ) ) ) )  METHOD_4 ( false )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_2 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_1 . TAG , STRING_1 )  return null ; COND ( ( VAR_2 ) != null ) && ( VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( VAR_1 , ( ( STRING_2 + VAR_1 ) + STRING_3 ) )  return VAR_2 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME project INIT = TYPE_3 . METHOD_2 ( e . METHOD_3 ( ) ) COND project == null  project = TYPE_4 . METHOD_4 ( ) . METHOD_5 ( ) COND TYPE_5 . METHOD_6 ( project )  TYPE_5 . METHOD_7 ( )  return ;  TYPE_6 . METHOD_4 ( ) . METHOD_8 ( project , VAR_1 , TYPE_7 . METHOD_4 ( project ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME event COND ( event . METHOD_2 ( ) ) == ( VAR_2 ) COND VAR_3  android.util.Log.v ( VAR_4 . TAG , STRING_1 )  VAR_5 . METHOD_3 ( )  return false ;  return super . METHOD_1 ( VAR_1 , event ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE short NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER private static synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_1 != null ) && ( ! ( VAR_2 ) ) COND VAR_3  android.util.Log.d ( TYPE_1 . TAG , ( STRING_1 + ( VAR_4 ) ) )  VAR_4 = VAR_1 COND VAR_3 COND ( VAR_4 ) == null  android.util.Log.d ( TYPE_1 . TAG , STRING_2 ) COND VAR_5  android.util.Log.d ( TYPE_1 . TAG , STRING_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 [ i ] ) TYPE TYPE_2 NAME p INIT = VAR_2 . METHOD_3 ( )  assertNotNull ( ( STRING_1 + ( VAR_1 [ i ] ) ) , p ) TYPE TYPE_3 NAME e  fail ( ( STRING_2 + ( VAR_1 [ i ] ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_2  VAR_2 = TYPE_2 . METHOD_2 ( STRING_2 ) TYPE TYPE_3 NAME e  TYPE_4 . METHOD_3 ( STRING_3 )  return ;  assertFalse ( VAR_1 . METHOD_4 ( VAR_2 , INT_1 , INT_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = TYPE_2 . METHOD_2 ( ( ( VAR_3 ) == ( VAR_4 ) ? VAR_5 : VAR_6 ) ) COND VAR_7  android.util.Log.v ( TYPE_2 . TAG , ( ( ( ( ( STRING_1 + ( VAR_2 . METHOD_3 ( ) ) ) + STRING_2 ) + ( VAR_2 . METHOD_4 ( ) ) ) + STRING_3 ) + ( VAR_2 . METHOD_5 ( ) ) ) )
MODIFIER protected static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME value TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( 100 )  sb.append ( CHAR_1 ) COND value instanceof TYPE_3  sb.append ( STRING_1 )  sb.append ( value . METHOD_2 ( ) )  sb.append ( CHAR_2 )  sb.append ( value . METHOD_3 ( ) )  return sb . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) )  assertNotNull ( VAR_4 ) TYPE java.util.List<?extendsTYPE_3> NAME VAR_5 INIT = METHOD_4 ( VAR_3 ) TYPE TYPE_3 NAME match INIT = VAR_4 . METHOD_5 ( VAR_5 )  assertEquals ( VAR_2 , VAR_5 . METHOD_6 ( match ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( ( TYPE_1 . METHOD_2 ( ) ) != null ) && ( VAR_1 . METHOD_3 ( ) ) TYPE TYPE_2 NAME state INIT = TYPE_1 . METHOD_4 ( VAR_1 ) TYPE TYPE_3 NAME target INIT = state . METHOD_5 ( ) COND target != null  VAR_2 . METHOD_6 ( target )  VAR_3 . METHOD_6 ( state . METHOD_7 ( ) )  VAR_4 . METHOD_8 ( state )  VAR_4 . METHOD_9 ( ( ! ( state . METHOD_7 ( ) ) ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = new byte [ VAR_2 ]  VAR_3 TYPE byte[] NAME VAR_4 INIT = METHOD_2 ( VAR_1 ) COND ( VAR_4 == null ) || ( ! ( TYPE_1 . equals ( VAR_1 , VAR_4 ) ) )  TYPE_2 . i ( VAR_5 . TAG , STRING_1 )  METHOD_3 ( )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( new TYPE_3 ( TYPE_4 . METHOD_4 ( ) ) ) ) ) TYPE byte[] NAME VAR_3 INIT = VAR_2 . METHOD_5 ( STRING_2 )  assertTrue ( TYPE_5 . equals ( new byte [ ] { 4 , 2 , INT_1 , 0 } , VAR_3 ) )  assertNotNull ( VAR_2 . toString ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE TYPE_2 NAME test TYPE TYPE_3 NAME VAR_1 COND test == null  return ;  VAR_2 = false  VAR_3 = false  println ( VAR_4 )  println ( ( STRING_1 + ( METHOD_2 ( ) ) ) )  METHOD_3 ( device )  METHOD_4 ( test , VAR_1 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . toString ( VAR_1 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_2 , true )  METHOD_1 ( VAR_4 ) TYPE java.io.IOException NAME e  VAR_5 . log ( e , STRING_1 , VAR_1 )
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.util.List<TYPE_4> NAME VAR_2 TYPE TYPE_5<TYPE_2> NAME VAR_3 INIT = new TYPE_5 < > ( ) TYPE TYPE_4 NAME path IN VAR_2  VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( TYPE_6 . METHOD_4 ( path ) ) )  return VAR_3 . build ( ) ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 != null  VAR_2 . set ( VAR_3 )  return VAR_4 . METHOD_3 ( VAR_2 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1 TYPE int NAME flags INIT = msg.arg1  VAR_3 . METHOD_2 ( flags )  return true ;  VAR_3 . METHOD_3 ( )  return true ;  VAR_3 . METHOD_4 ( )  return true ;  return false ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME uri TYPE java.lang.String NAME VAR_1 COND uri == null  throw new java.lang.NullPointerException ( STRING_1 ) ; COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_2 ) ; TYPE int NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == 0  return null ;  return TYPE_1 . METHOD_1 ( VAR_2 , uri , VAR_1 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME text TYPE TYPE_2 NAME VAR_1 INIT = ( ( VAR_2 ) != null ) ? VAR_2 . METHOD_2 ( text , this ) : text  return new TYPE_3 ( VAR_1 , VAR_3 , ( ( int ) ( TYPE_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 , VAR_3 ) ) ) ) , VAR_4 , FLOAT_1 , 0 , true ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_4<TYPE_5> NAME VAR_3 INIT = METHOD_2 ( ) . METHOD_3 ( ) COND ( VAR_3 . METHOD_4 ( ) ) && ( ! ( VAR_4 ) )  VAR_5 = VAR_3 . METHOD_5 ( )  VAR_5 . run ( VAR_6 , VAR_1 , VAR_2 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.util.Set<java.lang.String> NAME expected TYPE java.lang.String[] NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( expected , VAR_1 )  assertEquals ( STRING_1 , VAR_3 , VAR_2 )  assertEquals ( expected . size ( ) , VAR_1 . length )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false  VAR_3 = VAR_1 COND ! ( VAR_4 )  METHOD_2 ( ) COND VAR_5  TYPE_2 . d ( VAR_6 , ( STRING_1 + VAR_1 ) )  VAR_7 . METHOD_3 ( this ) COND ( VAR_8 ) != null  VAR_2 = VAR_8 . METHOD_4 ( this )  METHOD_5 ( )  return VAR_2 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2  TYPE_3 . METHOD_2 ( TYPE_4 . get ( context ) . METHOD_3 ( ) . METHOD_4 ( context ) )  new TYPE_5 ( context , VAR_1 ) . METHOD_5 ( ) . METHOD_6 ( VAR_3 , VAR_2 ) . METHOD_7 ( )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_5 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_6 . METHOD_2 ( VAR_1 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , ( STRING_2 + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ) , ( STRING_2 + ( ( ( ( STRING_6 + STRING_7 ) + STRING_8 ) + STRING_6 ) + STRING_9 ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 INIT = context . METHOD_2 ( )  VAR_2 = new TYPE_3 < TYPE_2 > ( VAR_1 )  VAR_3 = new TYPE_4 ( )  VAR_1 . METHOD_3 ( VAR_4 , true , VAR_3 )  METHOD_4 ( VAR_1 )  VAR_5 = true
MODIFIER protected RETURN void NAME METHOD_1 COND ( ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ) ) && ( ! ( TYPE_1 . METHOD_4 ( METHOD_3 ( ) ) ) )  super . METHOD_1 ( )  return ;  mContext . METHOD_5 ( VAR_1 ) COND VAR_2 . METHOD_6 ( )  assertTrue ( VAR_2 . METHOD_7 ( false ) )  TYPE_2 . METHOD_8 ( VAR_3 )  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 1  VAR_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_2 ( VAR_4 . METHOD_4 ( ) , org.mockito.Matchers.eq ( ( ( java.lang.Integer ) ( TYPE_1 . METHOD_5 ( VAR_5 , STRING_1 , new java.lang.Class < ? > [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_1 } ) ) ) ) )  TYPE_1 . METHOD_6 ( VAR_2 , VAR_4 . METHOD_7 ( ) , VAR_7 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( 3 , VAR_2 ) TYPE android.os.Bundle NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) . METHOD_4 ( )  assertEquals ( 1 , VAR_3 . size ( ) )  assertFalse ( VAR_3 . METHOD_5 ( VAR_5 ) )  assertTrue ( VAR_3 . METHOD_5 ( VAR_6 ) )  assertEquals ( VAR_7 , VAR_3 . METHOD_6 ( VAR_6 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 COND TYPE_2 . METHOD_2 ( context )  TYPE_2 . METHOD_3 ( context , VAR_2 , VAR_1 )  TYPE_2 . METHOD_4 ( context ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 , VAR_1 ) . METHOD_7 ( )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = null  VAR_1 = ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_1 ( ) ) ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( ) ;  VAR_1 . m = new TYPE_5 < > ( m )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = in . METHOD_2 ( ) . VAR_3 COND VAR_2 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = in . METHOD_4 ( VAR_5 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 . size )  i ++  METHOD_5 ( in , VAR_4 , VAR_1 )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME data TYPE TYPE_2 NAME input TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = input . METHOD_2 ( ) TYPE boolean NAME VAR_3 INIT = input . METHOD_3 ( VAR_1 ) TYPE int NAME VAR_4 INIT = input . METHOD_2 ( ) TYPE byte[] NAME VAR_5 INIT = input . METHOD_4 ( VAR_2 , ( VAR_4 - VAR_2 ) )  data . METHOD_5 ( new TYPE_1 ( VAR_1 , VAR_5 ) )  return VAR_3 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME server TYPE java.lang.String NAME VAR_2 INIT = STRING_1 TYPE TYPE_3 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_4 , VAR_5 ) TYPE TYPE_3 NAME VAR_6 INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_7 , VAR_8 )  return TYPE_1 . METHOD_1 ( VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_4 [ 0 ] , VAR_7 [ 0 ] , VAR_5 [ 0 ] , VAR_8 [ 0 ] , VAR_3 , VAR_6 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.Object NAME VAR_2 TYPE TYPE_2 NAME VAR_3  TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_4 NAME VAR_4 INIT = ( ( TYPE_4 ) ( VAR_1 . METHOD_3 ( ) ) )  VAR_4 . print ( ( VAR_2 + STRING_1 ) , VAR_3 )  VAR_4 . METHOD_4 ( )
MODIFIER public RETURN java.lang.String NAME toString  return ( ( ( STRING_1 + ( TYPE_1 . getName ( VAR_1 [ ( ( VAR_2 ) - 1 ) ] . METHOD_1 ( ) . METHOD_2 ( ) ) ) ) + STRING_2 ) + ( data ) ) + STRING_3 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE TYPE_2<java.util.Map<java.lang.String,java.lang.String>> NAME VAR_2 TYPE TYPE_3<java.lang.String,TYPE_1> NAME entry IN METHOD_2 ( VAR_3 ) . METHOD_3 ( )  VAR_1 . METHOD_4 ( entry . METHOD_5 ( ) , entry . METHOD_6 ( ) )  return 0 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( INT_1 , STRING_1 )  TYPE_1 . METHOD_3 ( VAR_2 )  assertEquals ( STRING_2 , VAR_2 , TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( null )  assertEquals ( STRING_3 , VAR_1 , TYPE_1 . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 class ) , TYPE_2 . METHOD_4 ( STRING_1 ) , TYPE_2 . METHOD_5 ( VAR_3 ) , TYPE_2 . METHOD_6 ( INT_1 ) ) TYPE java.lang.String NAME VAR_4 INIT = TYPE_3 . METHOD_7 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 )  TYPE_3 . METHOD_8 ( VAR_4 , VAR_1 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND ( VAR_3 ) == ( VAR_4 ) TYPE java.lang.String NAME VAR_5 INIT = VAR_6 . get ( STRING_1 , VAR_1 ) COND ! ( VAR_5 . equals ( VAR_1 ) )  return VAR_2 ? VAR_5 : METHOD_2 ( VAR_7 , VAR_5 ) ; TYPE java.lang.String NAME VAR_5 INIT = VAR_6 . get ( STRING_2 , VAR_1 )  return VAR_2 ? VAR_5 : METHOD_2 ( VAR_7 , VAR_5 ) ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE byte[] NAME VAR_1 COND ( key ) == null  throw new TYPE_1 ( STRING_1 ) ; TYPE int NAME result INIT = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) )  return result == 1 ; TYPE java.lang.Exception NAME ex  throw new TYPE_1 ( ex ) ;  METHOD_4 ( )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME service TYPE TYPE_4 NAME VAR_2 TYPE TYPE_5 NAME VAR_3  android.util.Log . i ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_1 , service , VAR_2 , VAR_3 )  VAR_4 . start ( )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) )  server . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) )  VAR_1 . METHOD_7 ( )  METHOD_8 ( STRING_1 , VAR_1 )  assertEquals ( INT_1 , VAR_1 . METHOD_9 ( ) )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( false ) TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_3 ( ) COND VAR_1 != ( - 1 ) TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . METHOD_4 ( VAR_1 ) COND VAR_3 . equals ( VAR_4 )  VAR_2 . METHOD_5 ( 0 ) COND ( VAR_5 ) != null  VAR_5 . METHOD_1 ( )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 INIT = 0  VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_2 . values ( ) NAME VAR_3 . METHOD_2 ( ) COND TYPE_2 . equals ( device , VAR_3 . METHOD_3 ( ) )  return true ;  VAR_1 ++  break ;  break ;  return VAR_1 < ( VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = ( ( TYPE_4 ) ( VAR_3 ) )  METHOD_3 ( METHOD_4 ( info , VAR_2 , true , VAR_1 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ( ( TYPE_1 ) ( null ) ) )  METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_2 )  assertEquals ( VAR_2 , VAR_3 )  VAR_3 . METHOD_4 ( )  assertEquals ( VAR_1 , VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_3 > 0 TYPE int NAME VAR_4 INIT = VAR_3 * ( VAR_1 . METHOD_5 ( ) )  VAR_2 = TYPE_3 . METHOD_6 ( VAR_2 , VAR_4 ) TYPE long NAME VAR_5 INIT = TYPE_4 . METHOD_7 ( VAR_2 )  return new TYPE_1 ( VAR_6 , VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 NAME VAR_3  VAR_2 = VAR_5  break ;  VAR_2 = VAR_7  break ;  throw new TYPE_5 ( STRING_1 ) ; TYPE TYPE_6 NAME VAR_8 INIT = METHOD_3 ( VAR_9 )  METHOD_4 ( TYPE_7 . METHOD_5 ( info , VAR_2 , VAR_8 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME subId INIT = INT_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  METHOD_2 ( VAR_2 )  TYPE_1 . when ( VAR_3 . METHOD_3 ( VAR_2 ) ) . thenReturn ( subId ) TYPE TYPE_2 NAME VAR_4 INIT = ( ( TYPE_2 ) ( mContext . METHOD_4 ( VAR_5 ) ) )  TYPE_1 . when ( VAR_4 . METHOD_5 ( subId ) ) . thenReturn ( VAR_1 )  assertEquals ( VAR_1 , VAR_6 . METHOD_5 ( VAR_2 , VAR_7 ) )
MODIFIER public RETURN void NAME format TYPE long NAME number TYPE TYPE_1 NAME VAR_1 TYPE int NAME pos TYPE int NAME VAR_2 COND VAR_2 >= ( VAR_3 )  throw new TYPE_2 ( ( STRING_1 + ( name ) ) ) ; TYPE TYPE_3 NAME VAR_4 INIT = METHOD_1 ( number )  VAR_4 . METHOD_2 ( number , VAR_1 , pos , ( ++ VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( null )  fail ( STRING_1 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK  assertEquals ( new TYPE_1 ( VAR_1 ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) TYPE TYPE_2 NAME locale INIT = new TYPE_2 ( STRING_2 , STRING_3 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( locale )  assertNotNull ( VAR_2 )  assertEquals ( TYPE_1 . METHOD_2 ( ) , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 0 , TYPE_2 . METHOD_2 ( ) )  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_3 ( ) ) != 0 ) )  assertEquals ( STRING_2 , TYPE_2 . METHOD_2 ( ) , VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.renderscript.Allocation NAME VAR_1 INIT = android.renderscript.Allocation.createSized ( mRS , TYPE_1 . METHOD_2 ( mRS ) , android.renderscript.cts.INPUTSIZE )  n = new int [ INPUTSIZE ]  TYPE_2 . METHOD_3 ( INT_1 , INT_2 , 1 , n )  VAR_1 . METHOD_4 ( n )  VAR_2 . METHOD_5 ( VAR_1 )  METHOD_6 ( INT_3 , 16 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE byte NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i ) ) , x )  return this ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_5 ( new TYPE_6 ( VAR_1 ) ) TYPE TYPE_7 NAME VAR_3 INIT = new TYPE_7 ( ) TYPE TYPE_8 NAME VAR_4 INIT = VAR_3 . METHOD_2 ( VAR_2 )  return VAR_4 != null ? new TYPE_1 ( VAR_3 , new TYPE_9 ( VAR_1 ) , VAR_4 . METHOD_3 ( ) ) : null ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE java.util.List<?extendsTYPE_1> NAME VAR_1  return TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . get ( 0 ) . METHOD_1 ( ) ) ; TYPE TYPE_3 NAME ex  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE java.lang.NullPointerException NAME ex  throw new java.lang.NullPointerException ( STRING_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i <= INT_1  ++ i  s . METHOD_2 ( i )  assertEquals ( i , s . METHOD_3 ( ) )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME x INIT = 0 TYPE int NAME y INIT = 1 COND ( y ++ ) < 10 COND y > 1  x = INT_1  continue ;  x = INT_2  continue ;  return x ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_2 TYPE TYPE_3 NAME field INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND field == null  throw new java.lang.IllegalArgumentException ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; TYPE TYPE_4 NAME VAR_4 INIT = field . METHOD_3 ( VAR_5 class )  VAR_6 . METHOD_4 ( field ) TYPE TYPE_1 NAME VAR_7 INIT = VAR_8 . METHOD_5 ( field ) COND VAR_7 != null  VAR_2 . METHOD_6 ( VAR_4 . name ( ) , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME i COND ( i < 0 ) || ( i > ( ( VAR_1 ) - 1 ) )  throw new java.lang.RuntimeException ( ) ; COND i > ( ( VAR_1 ) - 1 )  return ;  value [ ( i > > > 5 ) ] &= ~ ( VAR_2 [ ( i & INT_1 ) ] )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME info INIT = VAR_3 . get ( VAR_2 )  this COND VAR_4  android.util.Log.d ( TYPE_3 . TAG , ( STRING_1 + ( VAR_5 ) ) ) COND ! ( VAR_6 )  VAR_6 = true  new TYPE_4 ( this , info , VAR_7 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( false )  VAR_1 . METHOD_4 ( ) . METHOD_5 ( null )  METHOD_6 ( VAR_1 . METHOD_7 ( TYPE_2 . METHOD_8 ( INT_1 ) ) )  VAR_1 . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( )  VAR_2 . METHOD_4 ( null )  VAR_1 . METHOD_5 ( )  VAR_2 . METHOD_6 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 ) , new TYPE_3 ( new TYPE_4 ( ) , null ) { } ) TYPE TYPE_5 NAME VAR_5 INIT = VAR_1 . METHOD_4 ( ) TYPE TYPE_6 NAME key INIT = ( ( TYPE_6 ) ( VAR_5 . METHOD_5 ( ) ) )  assertNotNull ( STRING_2 , key . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( ( VAR_1 ) && ( ( VAR_2 ) == null ) ) && ( METHOD_2 ( context ) ) TYPE java.util.List<java.io.File> NAME VAR_3 INIT = context . METHOD_3 ( ) . METHOD_4 ( ) COND ! ( VAR_3 . METHOD_5 ( ) ) TYPE TYPE_2 NAME location INIT = TYPE_2 . METHOD_6 ( VAR_3 . get ( 0 ) )  context . METHOD_7 ( VAR_4 , location , ( STRING_1 + STRING_2 ) , null )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( )  VAR_3 . METHOD_3 ( false ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( )  VAR_4 . METHOD_5 ( VAR_1 )  TYPE_4 . METHOD_6 ( VAR_4 , VAR_5 )  return VAR_4 . METHOD_7 ( null , VAR_6 ) ; TYPE TYPE_5 NAME e  return null ; TYPE java.io.IOException NAME e  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME VAR_1  METHOD_2 ( VAR_1 , this ) NAME VAR_2  transitionTo ( VAR_4 )  break ;  VAR_21 = VAR_22  METHOD_3 ( VAR_1 )  break ;  return VAR_23 ;  return VAR_24 ;
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME METHOD_3 TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_4 ( METHOD_5 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_6 ( VAR_2 , STRING_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 , STRING_4 )  VAR_1 . METHOD_7 ( VAR_3 )  VAR_1 . METHOD_7 ( VAR_4 )  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) { public void METHOD_3 ( java.util.List < TYPE_2 > VAR_1 ) { long VAR_2 = METHOD_4 ( METHOD_5 ( ) ) ; TYPE_2 VAR_3 = METHOD_6 ( VAR_2 , STRING_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( VAR_2 , STRING_4 ) ; VAR_1 . METHOD_7 ( VAR_3 ) ; VAR_1 . METHOD_7 ( VAR_4 ) ; } } )
MODIFIER public RETURN java.lang.String NAME toString TYPE int NAME VAR_1 INIT = METHOD_1 ( )  return ( ( ( ( ( VAR_1 == 0 ? STRING_1 : ( TYPE_1 . toString ( VAR_1 ) ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ) ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( METHOD_4 ( ) ) ) ) + STRING_3 ) + ( getName ( ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE byte NAME error  android.util.Log.v ( VAR_1 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + error ) ) TYPE boolean NAME result INIT = false TYPE TYPE_1 NAME service INIT = VAR_2 COND service != null  result = service . METHOD_1 ( device , error ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_3 )  return result ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME config TYPE java.util.List<TYPE_3> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( VAR_1 , config ) COND VAR_2 == null  return null ; TYPE int NAME VAR_3 INIT = VAR_2 . level TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_5 , VAR_6 ) TYPE TYPE_5 NAME VAR_7 INIT = VAR_8 . METHOD_3 ( new TYPE_6 ( VAR_4 ) ) COND VAR_7 != null  return METHOD_4 ( VAR_7 . METHOD_5 ( VAR_3 ) , VAR_3 ) ;  return null ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE int NAME VAR_2 COND VAR_3  android.util.Log.v ( TYPE_1 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) COND VAR_2 == ( VAR_4 )  TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 )  TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_1 , TYPE_1 . METHOD_5 ( VAR_2 ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE char NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_4 ( c ) )  TYPE_1 . METHOD_5 ( c )  TYPE_2 . METHOD_6 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE byte[] NAME address TYPE byte NAME VAR_1 TYPE byte[] NAME VAR_2 COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( STRING_1 + VAR_1 ) ) TYPE android.os.Bundle NAME data INIT = new android.os.Bundle ( ) TYPE android.os.Message NAME msg INIT = VAR_5 . METHOD_2 ( VAR_6 )  data . METHOD_3 ( STRING_2 , address )  data . METHOD_3 ( STRING_3 , VAR_2 )  data . METHOD_4 ( STRING_4 , VAR_1 )  msg . METHOD_5 ( data )  VAR_5 . METHOD_6 ( msg )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME item TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_3 IN VAR_1 TYPE TYPE_2 NAME i IN VAR_3 . METHOD_4 ( ) COND i == item  return VAR_3 ;  return null ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME value INIT = TYPE_1 . METHOD_2 ( mContext . METHOD_3 ( ) , VAR_1 ) COND value == null TYPE TYPE_2 NAME d INIT = TYPE_2 . get ( mContext . METHOD_4 ( ) . METHOD_5 ( ) . locale )  value = VAR_2  return ( value . METHOD_6 ( CHAR_1 ) ) > ( value . METHOD_6 ( CHAR_2 ) ) ;
MODIFIER private synchronized RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE int NAME VAR_2 INIT = METHOD_2 ( packageName ) COND VAR_2 != ( - 1 )  VAR_1 = VAR_3 . get ( VAR_2 ) . VAR_4 COND VAR_5  android.util.Log.d ( VAR_6 . TAG , ( ( ( STRING_2 + packageName ) + STRING_3 ) + VAR_1 ) )  return VAR_1 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE java.lang.Class<?extendsTYPE_1> NAME VAR_1 TYPE java.lang.StringBuilder NAME VAR_2 TYPE TYPE_2 NAME data INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_3 INIT = new java.util.ArrayList ( data . METHOD_3 ( VAR_1 ) )  TYPE_5 . METHOD_4 ( VAR_3 , VAR_4 ) TYPE TYPE_4 NAME VAR_5 IN VAR_3  TYPE_6 . METHOD_1 ( VAR_5 , VAR_2 , VAR_6 , null )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , VAR_3 ) COND VAR_1 != null TYPE android.os.Bundle NAME VAR_4 INIT = new android.os.Bundle ( )  VAR_4 . METHOD_2 ( VAR_5 , STRING_1 )  VAR_4 . METHOD_2 ( STRING_2 , VAR_3 )  VAR_1 . METHOD_3 ( VAR_2 , ( - 1 ) , VAR_4 ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , e )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) != null TYPE TYPE_1 NAME VAR_3 IN VAR_2 TYPE TYPE_2 NAME VAR_4 IN VAR_3 . METHOD_2 ( ) COND VAR_1 . equals ( VAR_4 . METHOD_3 ( ) )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony != null  telephony . METHOD_1 ( VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_3 . TAG , STRING_1 , e ) TYPE TYPE_2 NAME e  android.util.Log.e ( VAR_3 . TAG , STRING_2 , e )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ( - 5 ) , ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) , STRING_5 )  TYPE_1 . METHOD_2 ( ( - 4 ) , ( STRING_1 + ( STRING_6 + STRING_7 ) ) , STRING_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME t INIT = ( ( VAR_1 ) - 1 ) & ( ( VAR_2 . length ) - 1 ) TYPE TYPE_1 NAME result INIT = VAR_2 [ t ] COND result == null  return null ;  VAR_2 [ t ] = null  VAR_1 = t  return result ;
MODIFIER public RETURN void NAME error TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Throwable NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = METHOD_1 ( VAR_1 , VAR_2 )  TYPE_1 . log ( VAR_3 , STRING_1 , VAR_5 , VAR_4 ) COND VAR_3 != null  VAR_6 = true  METHOD_2 ( VAR_4 )
MODIFIER private static RETURN int NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE int NAME VAR_4 COND VAR_1 && ( VAR_4 == 0 )  return - 1 ; COND VAR_2 != null  VAR_2 . METHOD_2 ( VAR_4 )  VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) COND ! ( VAR_3 . METHOD_5 ( ) . equals ( VAR_2 . METHOD_5 ( ) ) )  VAR_2 . METHOD_6 ( VAR_3 . METHOD_5 ( ) )  return VAR_4 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 INIT = - 1 COND VAR_1 != null  VAR_2 = java.lang.Integer.parseInt ( VAR_1 ) TYPE TYPE_3 NAME e  throw new TYPE_2 ( ) ;  return new TYPE_1 ( VAR_2 , ( - 1 ) , ( - 1 ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = new TYPE_2 < java.lang.String > ( VAR_2 . METHOD_2 ( ) )  VAR_2 . METHOD_3 ( ) COND ! ( METHOD_4 ( context ) )  context . METHOD_5 ( )  return ; TYPE java.util.Set<java.lang.String> NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) COND ( VAR_1 . equals ( VAR_3 ) ) == false  METHOD_6 ( context )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE TYPE_2 NAME VAR_4  METHOD_2 ( VAR_1 ) TYPE int NAME VAR_5 INIT = ( VAR_4 != null ) ? METHOD_3 ( VAR_1 , VAR_4 ) : VAR_6 TYPE int NAME VAR_7 INIT = ( VAR_4 == null ) ? 0 : VAR_8  TYPE_3 . METHOD_4 ( VAR_9 , VAR_10 , VAR_11 , VAR_2 , VAR_3 , VAR_7 ) COND VAR_5 != ( VAR_6 )  TYPE_3 . METHOD_5 ( VAR_9 , VAR_5 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_4 . METHOD_4 ( VAR_1 ) TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( new TYPE_6 ( VAR_1 . METHOD_5 ( ) ) , new TYPE_6 ( VAR_3 ) ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_2 , VAR_4 )  return VAR_5 ;
MODIFIER private RETURN int NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME method TYPE int NAME VAR_1 INIT = ( method . METHOD_2 ( ) ) ? 0 : TYPE_1 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_2 IN method . METHOD_4 ( ) COND ( VAR_2 . METHOD_5 ( VAR_3 class ) ) != null  continue ;  VAR_1 += TYPE_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) , ( ( VAR_2 . METHOD_5 ( VAR_4 class ) ) != null ) ) . METHOD_3 ( )  return VAR_1 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME id TYPE TYPE_2 NAME VAR_1 INIT = id . getName ( ) COND VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( VAR_1 ) ) COND VAR_2 . getName ( ) . METHOD_3 ( ) . equals ( VAR_3 )  this . VAR_4 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_5 , null )  return true ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME request TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < > ( ) TYPE java.lang.String NAME VAR_2 INIT = request . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( new TYPE_1 ( VAR_3 , VAR_2 . METHOD_4 ( ) , ( STRING_2 + VAR_2 ) ) )  return VAR_1 ;
MODIFIER public final RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return ( VAR_3 . equals ( VAR_4 ) ) && ( VAR_5 . equals ( VAR_6 ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME start COND ( start < 0 ) || ( start > ( input . length ( ) ) )  throw new TYPE_1 ( ( ( ( STRING_1 + start ) + STRING_2 ) + ( input . length ( ) ) ) ) ;  this  VAR_1 = TYPE_2 . METHOD_2 ( address , input , start , VAR_2 )  return VAR_1 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME number TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = METHOD_2 ( number . METHOD_3 ( ) ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_4 ( number ) TYPE java.lang.String NAME VAR_3 IN VAR_1 TYPE TYPE_3 NAME VAR_4 INIT = TYPE_4 . METHOD_5 ( VAR_3 ) COND VAR_5 . METHOD_6 ( VAR_2 , VAR_4 . METHOD_7 ( ) )  return true ;  return false ;
MODIFIER public RETURN int NAME METHOD_1 COND ( in ) == null  return - 1 ; TYPE int NAME c INIT = in . METHOD_1 ( ) COND c == ( - 1 )  METHOD_2 ( )  return METHOD_1 ( ) ;  return c ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . size ( )  TYPE_1 . METHOD_2 ( null , new java.lang.Object ( ) )  fail ( STRING_1 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK TYPE int NAME VAR_3 INIT = 0 COND VAR_3 < VAR_1  VAR_3 ++  assertTrue ( STRING_2 , ( ( VAR_2 . get ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_2 . get ( VAR_3 ) ) ) ) == ( VAR_2 . get ( VAR_3 ) ) ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) COND VAR_1 instanceof TYPE_4  METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( VAR_3 ) , VAR_4 , VAR_5 ) COND VAR_1 instanceof TYPE_5  METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( VAR_6 ) , VAR_7 , VAR_8 ) COND VAR_1 instanceof TYPE_6  METHOD_3 ( VAR_1 , VAR_2 . METHOD_4 ( VAR_9 ) , VAR_7 , VAR_8 )  return super . METHOD_1 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( true )  TYPE_1 . when ( VAR_1 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( VAR_2 class ) ) ) . thenReturn ( false )  assertFalse ( VAR_3 . METHOD_6 ( new TYPE_2 ( ) , false ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_7 ( 2 ) ) . METHOD_8 ( org.mockito.Matchers . METHOD_9 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND ( ! ( TYPE_1 . METHOD_2 ( VAR_1 . getName ( ) ) ) ) && ( TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , status , true ) )  return ( ( ! ( status . METHOD_5 ( ) ) ) && ( ! ( status . METHOD_6 ( ) ) ) ) && ( status . METHOD_7 ( ) ) ;  android.util.Log.w ( VAR_2 . TAG , ( STRING_1 + VAR_1 ) )  return false ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == false  VAR_1 = true  VAR_2 . METHOD_2 ( ) TYPE java.io.IOException NAME e COND VAR_3  android.util.Log.d ( TAG , STRING_1 , e ) COND ! ( TYPE_1 . METHOD_3 ( ) . equals ( this ) ) COND VAR_3  android.util.Log.d ( TAG , STRING_2 )  METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_3  log ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) COND ( VAR_1 . METHOD_3 ( ) ) && ( ! ( VAR_2 . METHOD_2 ( ) . equals ( VAR_4 ) ) )  VAR_5 . METHOD_4 ( VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_2 ( ) )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE byte[] NAME input  VAR_1 COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( input ) TYPE byte[] NAME result INIT = VAR_2 . METHOD_4 ( )  return TYPE_1 . METHOD_5 ( result ) ;  return STRING_1 ;
MODIFIER private RETURN int NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE int NAME index COND index >= ( VAR_1 . length )  TYPE_1 . loge ( STRING_1 )  return - 1 ;  VAR_2 = VAR_1 [ index ]  VAR_3 = new byte [ ( VAR_2 ) & ( VAR_4 ) ] COND VAR_5  TYPE_1 . log ( ( STRING_2 + ( VAR_3 . length ) ) )  return index + 1 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) == ( VAR_2 ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( this )  TYPE_1 . e ( this , new java.lang.NullPointerException ( ) , STRING_1 , METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( this , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( INT_1 , INT_2 )  VAR_1 . METHOD_2 ( null , p , 1 , 2 ) TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( VAR_4 ) )  org.junit.Assert.assertEquals ( 1 , VAR_3 . index )  org.junit.Assert.assertEquals ( 2 , VAR_3 . count )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME c INIT = TYPE_1 . METHOD_2 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_3 ( c )  TYPE_1 . METHOD_4 ( s , TYPE_2 . METHOD_5 ( ) )  TYPE_1 . METHOD_6 ( s )  fail ( ) TYPE TYPE_3 NAME expected BLOCK BLOCK  TYPE_1 . METHOD_7 ( s , TYPE_2 . METHOD_8 ( ) )  TYPE_1 . METHOD_6 ( s )  TYPE_1 . METHOD_9 ( s )  TYPE_1 . METHOD_10 ( c )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_2 = VAR_3 . METHOD_1 ( VAR_1 )  return ( VAR_2 ) == ( VAR_4 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_5 . TAG , STRING_1 , e )  return false ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME size INIT = VAR_1 . size ( ) TYPE TYPE_1.List NAME VAR_2 INIT = new TYPE_1 . List ( size ) TYPE int NAME i INIT = 0 COND i < size  i ++  VAR_2 . set ( i , TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( i ) ) )  VAR_2 . METHOD_4 ( )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_1  return VAR_2 ; COND ( VAR_3 ) == null TYPE TYPE_2 NAME VAR_4 INIT = METHOD_2 ( ) . METHOD_3 ( )  VAR_3 = VAR_2 . METHOD_4 ( VAR_4 )  return VAR_3 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( VAR_2 ) TYPE int NAME size INIT = VAR_4 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( ) TYPE int NAME j INIT = 0 COND j < size  j ++  VAR_5 . METHOD_4 ( METHOD_5 ( VAR_1 , VAR_4 . METHOD_3 ( ) , VAR_3 ) )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME i INIT = 0 COND i < VAR_1  i ++ TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , 0 )  TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 . METHOD_4 ( ) , VAR_4 , new java.lang.String [ 0 ] , INT_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME count TYPE int[] NAME d TYPE int NAME VAR_2 INIT = ( VAR_3 . METHOD_2 ( ) ) * count  METHOD_3 ( VAR_1 , count , ( ( d . length ) * 4 ) , VAR_2 )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_4 , count , d , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME VAR_1 TYPE long NAME c TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) )  super . METHOD_1 ( session , VAR_1 , c , VAR_2 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( ( VAR_1 ) != null ) && ( ! ( VAR_2 ) ) TYPE java.lang.String NAME VAR_3 INIT = ( ( STRING_1 + STRING_2 ) + ( VAR_4 ) ) + STRING_3  context . METHOD_2 ( VAR_5 , VAR_1 , VAR_3 , null )
MODIFIER public synchronized RETURN void NAME METHOD_1  VAR_1 COND ( METHOD_2 ( ) ) && ( METHOD_3 ( ) )  android.util.Log . i ( VAR_2 , STRING_1 )  VAR_3 . METHOD_4 ( )  VAR_3 . METHOD_5 ( this )  VAR_4 = true COND ( VAR_5 ) != null  VAR_5 . METHOD_6 ( this , 0 ) COND ( VAR_6 ) != null  VAR_6 . METHOD_7 ( this )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 TYPE int[] NAME VAR_1 TYPE int NAME VAR_2 INIT = - 1 TYPE android.bluetooth.BluetoothDevice NAME VAR_3 INIT = null  VAR_4  VAR_2 = METHOD_2 ( )  VAR_3 = METHOD_3 ( ) TYPE java.util.List<android.bluetooth.BluetoothDevice> NAME VAR_5 INIT = new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( ) TYPE int NAME state IN VAR_1 COND VAR_2 == state COND VAR_3 != null  VAR_5 . METHOD_4 ( VAR_3 )  return VAR_5 ;
MODIFIER private RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME in TYPE java.util.Set<TYPE_1> NAME VAR_2 INIT = new TYPE_3 < TYPE_1 > ( ) TYPE int NAME i INIT = in . METHOD_2 ( 0 ) COND i >= 0  i = in . METHOD_2 ( ( i + 1 ) )  VAR_2 . METHOD_3 ( VAR_1 . get ( i ) )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1  METHOD_2 ( 0 )  return ( ( VAR_1 . get ( 0 ) . METHOD_3 ( ) . METHOD_4 ( request . METHOD_5 ( ) ) ) && ( VAR_1 . get ( 0 ) . METHOD_6 ( ) . METHOD_7 ( request . METHOD_5 ( ) ) ) ) && ( VAR_2 . METHOD_8 ( ) ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME node TYPE java.lang.Throwable NAME e TYPE TYPE_1 NAME VAR_1 INIT = METHOD_1 ( e ) COND node != null  VAR_1 . METHOD_2 ( node . METHOD_3 ( ) . getName ( ) , node . toString ( ) , METHOD_4 ( node ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( VAR_2 )  assertEquals ( STRING_1 , VAR_1 . format ( INT_1 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_3 )  assertEquals ( STRING_2 , VAR_1 . format ( INT_1 ) )  VAR_1 = TYPE_1 . METHOD_2 ( VAR_4 )  assertEquals ( STRING_3 , VAR_1 . format ( INT_1 ) )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE int NAME VAR_8 TYPE int NAME VAR_9 TYPE int NAME VAR_10 TYPE int NAME VAR_11 TYPE int NAME VAR_12 TYPE int NAME VAR_13  METHOD_2 ( )  METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . i ( STRING_1 , STRING_2 , VAR_2 . toString ( ) ) TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_4 class ) ) )  VAR_3 . METHOD_4 ( VAR_5 ) COND VAR_3 . METHOD_5 ( )  TYPE_2 . i ( STRING_3 , STRING_4 )  VAR_3 . METHOD_6 ( false )  TYPE_2 . i ( STRING_3 , STRING_5 )  VAR_3 . METHOD_6 ( true )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND VAR_1 . METHOD_2 ( )  throw new TYPE_1 ( STRING_1 , VAR_1 ) ; COND VAR_1 . METHOD_3 ( ) COND ( VAR_1 . METHOD_4 ( ) ) == false  throw new TYPE_1 ( STRING_2 , VAR_1 ) ;  throw new TYPE_2 ( java.lang.String.format ( STRING_3 , VAR_1 ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE boolean NAME VAR_1 INIT = false  new TYPE_1 ( ) . run ( args )  VAR_1 = true TYPE java.lang.Exception NAME e COND e instanceof java.lang.IllegalArgumentException  TYPE_1 . METHOD_2 ( )  android.util.Log.e ( TYPE_1 . TAG , STRING_1 , e )  VAR_2 . println ( ( STRING_2 + e ) )  TYPE_2 . METHOD_3 ( ( VAR_1 ? 0 : 1 ) )
MODIFIER public static RETURN void NAME METHOD_1 MODIFIER public RETURN TYPE_2 NAME METHOD_2 TYPE TYPE_2 NAME args TYPE TYPE_3 NAME VAR_1  VAR_1 = TYPE_3 . METHOD_3 ( STRING_1 ) TYPE TYPE_4 NAME e  VAR_1 = null  VAR_2  VAR_3 = VAR_1  return null ;  new TYPE_1 < TYPE_2 , TYPE_2 , TYPE_2 > ( ) { public TYPE_2 METHOD_2 ( TYPE_2 ... args ) { TYPE_3 VAR_1 ; try { VAR_1 = TYPE_3 . METHOD_3 ( STRING_1 ) ; } catch ( TYPE_4 e ) { VAR_1 = null ; } synchronized ( VAR_2 ) { VAR_3 = VAR_1 ; } return null ; } } . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) )  METHOD_4 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_4 )  assertEquals ( VAR_2 , VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) . getName ( ) )  METHOD_4 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME parent TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND parent == ( VAR_3 . METHOD_2 ( ) ) TYPE int NAME i INIT = 0 TYPE int NAME n INIT = VAR_4 . size ( ) COND i < n  i ++ TYPE int NAME VAR_5 INIT = VAR_4 . get ( i ) COND VAR_5 >= VAR_2  VAR_4 . set ( i , ( VAR_5 - 1 ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return VAR_2 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return VAR_2 ;  return service . METHOD_1 ( device ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME parent COND id == parent  TYPE_1 . error ( STRING_1 )  return ;  VAR_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( id )  TYPE_2 . METHOD_4 ( id , VAR_2 , parent ) TYPE java.lang.Throwable NAME e  throw TYPE_3 . METHOD_5 ( e ) ;  VAR_1 . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME f INIT = new java.io.File ( VAR_1 ) COND f . METHOD_2 ( )  VAR_2 = true  is = METHOD_3 ( f )  is = new TYPE_1 ( new TYPE_2 ( f ) ) TYPE long NAME VAR_3 INIT = f . length ( )  length = ( VAR_3 <= ( VAR_4 ) ) ? ( ( int ) ( VAR_3 ) ) : VAR_4  VAR_5 = true
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2  mRS . METHOD_2 ( ) COND ( VAR_2 < 0 ) || ( VAR_2 >= ( VAR_3 ) )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE int NAME id INIT = ( VAR_1 != null ) ? VAR_1 . METHOD_3 ( mRS ) : 0  mRS . METHOD_4 ( METHOD_3 ( mRS ) , VAR_2 , id )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_2 . println ( STRING_1 ) TYPE TYPE_2 NAME VAR_3  java.lang.System.out.println ( STRING_2 ) COND VAR_4  java.lang.System.out.println ( ( STRING_3 + VAR_3 ) ) TYPE java.lang.Exception NAME ex  VAR_2 . println ( STRING_4 )
MODIFIER private RETURN void NAME METHOD_1  mRS = TYPE_1 . METHOD_2 ( this )  VAR_1 = android.renderscript.Allocation . METHOD_3 ( mRS , VAR_2 , VAR_3 , VAR_4 )  VAR_5 = android.renderscript.Allocation . METHOD_3 ( mRS , VAR_6 , VAR_3 , VAR_4 )  VAR_7 = new TYPE_2 ( mRS , METHOD_4 ( ) , VAR_8 )  VAR_7 . METHOD_5 ( VAR_1 , VAR_5 )  VAR_5 . METHOD_6 ( VAR_6 )
MODIFIER MODIFIER RETURN double NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_1 NAME VAR_5 TYPE TYPE_1 NAME VAR_6 TYPE java.lang.String NAME VAR_7 TYPE java.lang.String NAME VAR_8 TYPE double NAME VAR_9 INIT = 0 COND ! ( VAR_4 . equals ( VAR_8 ) )  VAR_9 = METHOD_2 ( VAR_2 , VAR_6 ) COND ! ( VAR_3 . equals ( VAR_7 ) )  VAR_9 += FLOAT_1 ELSE ELSE  return VAR_9 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) , null ) TYPE java.lang.String NAME VAR_5 IN VAR_4 . METHOD_3 ( ) COND ! ( VAR_3 . METHOD_4 ( VAR_5 ) )  VAR_3 . METHOD_5 ( VAR_5 , ( ( VAR_2 + CHAR_1 ) + VAR_5 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME field COND ( ( ( field == ( VAR_1 ) ) || ( field == ( VAR_2 ) ) ) || ( field == ( VAR_3 ) ) ) || ( field == ( VAR_4 ) )  return false ;  return VAR_5 super . METHOD_1 ( field ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ! ( VAR_3 . METHOD_2 ( ) ) TYPE TYPE_2 NAME session INIT = TYPE_3 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_2 . METHOD_3 ( ) , VAR_5 ) TYPE TYPE_5 NAME VAR_6 IN VAR_3 TYPE TYPE_6 NAME VAR_7 INIT = VAR_6 . METHOD_4 ( VAR_4 )  VAR_1 . METHOD_5 ( VAR_7 )  VAR_7 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME key TYPE char[] NAME VAR_2 TYPE TYPE_2[] NAME VAR_3 COND ( VAR_2 != null ) && ( ( VAR_2 . length ) > 0 )  throw new TYPE_3 ( STRING_1 ) ; COND key instanceof TYPE_4  METHOD_2 ( VAR_1 , ( ( TYPE_4 ) ( key ) ) , VAR_3 )  throw new TYPE_3 ( STRING_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE short NAME type TYPE byte[] NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE byte[] NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE byte[] NAME VAR_8 INIT = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) TYPE byte[] NAME VAR_9 INIT = VAR_10 . METHOD_3 ( VAR_1 , type , VAR_5 , VAR_6 , VAR_7 ) COND ! ( TYPE_1 . METHOD_4 ( VAR_8 , VAR_9 ) )  throw new TYPE_2 ( VAR_11 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . d ( this , STRING_1 , VAR_1 )  VAR_1 . METHOD_2 ( VAR_2 )  VAR_3  VAR_4 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  VAR_5 . METHOD_5 ( VAR_1 )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE TYPE_1 NAME d INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND d == null  return false ;  d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) )  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 != null TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) COND ( ( VAR_4 ) != null ) && ( ! ( VAR_2 . METHOD_4 ( VAR_5 ) ) )  METHOD_5 ( null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME pkg INIT = super . METHOD_1 ( ) COND pkg == null  pkg = TYPE_2 . METHOD_2 ( null , METHOD_3 ( ) , 0 , null , 0 , null , null , null , TYPE_3 . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( ) , METHOD_6 ( ) . METHOD_7 ( ) )  METHOD_8 ( pkg ) TYPE java.lang.Exception NAME e  METHOD_9 ( STRING_1 , e.toString ( ) )  return pkg ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this COND VAR_2  return ; TYPE TYPE_2 NAME node  node = METHOD_2 ( )  node . METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( METHOD_4 ( VAR_1 ) , e ) ;  VAR_2 = true  VAR_1 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , STRING_2 ) COND ( VAR_1 ) != null  METHOD_2 ( STRING_3 , VAR_1 ) COND ! ( VAR_2 . METHOD_3 ( ) )  METHOD_2 ( STRING_4 , VAR_2 . toString ( ) ) COND ! ( VAR_3 . METHOD_3 ( ) )  METHOD_2 ( STRING_5 , VAR_3 . toString ( ) )  METHOD_4 ( FLOAT_1 ) TYPE TYPE_1.f NAME VAR_4 TYPE TYPE_2 NAME VAR_5
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1 NAME device IN VAR_2 TYPE java.lang.String NAME name INIT = device . METHOD_4 ( ) COND name == null  name = device . METHOD_5 ( ) COND name . equals ( VAR_1 )  return device ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_3 INIT = ( VAR_4 ) + 1 COND VAR_3 <= VAR_1  VAR_3 ++  ( ( TYPE_1 < ? > . VAR_5 ) ( VAR_2 . get ( VAR_3 ) ) ) . METHOD_2 ( VAR_2 . get ( ( VAR_3 - 1 ) ) . METHOD_3 ( ) )  VAR_4 = VAR_1
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args  TYPE_1 . METHOD_2 ( args [ 1 ] )  java.lang.System.out.println ( STRING_1 ) COND Main . METHOD_3 ( )  java.lang.System.out.println ( STRING_2 )  Main . set ( 0 )  Main . set ( 1 )  Main . set ( 2 )  Main . set ( 4 )  Main . set ( 8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , VAR_3 )  VAR_1 . METHOD_2 ( false )  VAR_1 . METHOD_3 ( true )  VAR_1 . METHOD_4 ( false )  VAR_1 . METHOD_5 ( true )  VAR_1 . METHOD_6 ( 0 ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_2 , VAR_3 ) TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( VAR_2 , VAR_3 )  METHOD_7 ( new TYPE_4 ( VAR_1 , VAR_4 , VAR_5 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE long NAME VAR_2  VAR_1 = TYPE_1 . METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( ) COND VAR_3  VAR_2 = VAR_1  VAR_1 = TYPE_1 . METHOD_2 ( )  android.util.Log . i ( VAR_4 . TAG , ( ( STRING_1 + ( VAR_1 - VAR_2 ) ) + STRING_2 ) ) COND ( VAR_5 ) || ( ( VAR_6 ) == null )  return ;  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( mRS )  VAR_1 . METHOD_3 ( VAR_2 )  VAR_1 . METHOD_4 ( VAR_3 )  VAR_1 . METHOD_5 ( VAR_3 , VAR_4 )  VAR_4 . METHOD_6 ( output ) TYPE int NAME x INIT = 0 COND x < ( VAR_5 )  x ++ TYPE int NAME y INIT = 0 COND y < ( VAR_5 )  y ++  METHOD_7 ( x , y )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 MODIFIER public RETURN TYPE_2 NAME METHOD_4 TYPE TYPE_6 NAME VAR_2  return new TYPE_7 ( VAR_2 ) ;  return TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 . METHOD_1 ( ) , new TYPE_5 < TYPE_6 , TYPE_2 > ( ) { public TYPE_2 METHOD_4 ( TYPE_6 VAR_2 ) { return new TYPE_7 ( VAR_2 ) ; } } ) ) ;
MODIFIER public RETURN void NAME run COND ! ( VAR_1 . METHOD_1 ( ) )  VAR_1 . METHOD_2 ( true ) TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) COND ( ( ( VAR_2 != null ) && ( ( VAR_2 . length ( ) ) > 0 ) ) && ( ! ( VAR_2 . METHOD_4 ( STRING_1 ) ) ) ) && ( ! ( result . METHOD_5 ( STRING_1 ) ) )  VAR_1 . append ( STRING_1 )  VAR_1 . append ( result )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return ( ( VAR_3 ) == ( VAR_4 ) ) && ( VAR_5 . equals ( VAR_6 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ! ( METHOD_2 ( VAR_3 , STRING_1 ) )  throw new TYPE_2 ( STRING_2 ) ;  VAR_4 TYPE TYPE_3 NAME VAR_5 INIT = METHOD_3 ( VAR_1 ) COND VAR_5 == null  android.util.Log.w ( TYPE_4 . TAG , ( STRING_3 + VAR_1 ) )  return ;  VAR_6 = VAR_2
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + device ) ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) ) COND ! ( VAR_3 . equals ( VAR_4 ) )  return false ;  return true ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE int NAME VAR_2 INIT = name . METHOD_3 ( CHAR_1 ) COND ( VAR_2 > 0 ) && ( ! ( name . METHOD_4 ( STRING_1 ) ) )  return ( name . METHOD_5 ( 0 , VAR_2 ) ) + ( name . METHOD_5 ( ( VAR_2 + 1 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  METHOD_3 ( VAR_2 , VAR_1 , VAR_3 )  METHOD_3 ( VAR_4 , VAR_2 . METHOD_4 ( ) , VAR_3 )  VAR_5 . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_3 ) TYPE TYPE_1 NAME VAR_6 INIT = METHOD_7 ( VAR_2 )  TYPE_2 . assertNotNull ( VAR_6 )  TYPE_2 . assertTrue ( VAR_6 . METHOD_8 ( ) )  TYPE_2 . assertTrue ( VAR_6 . METHOD_9 ( ) . METHOD_10 ( ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( )  org.mockito.Mockito.verify ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) . METHOD_5 ( org.mockito.Matchers . METHOD_6 ( VAR_4 class ) )  assertEquals ( VAR_2 , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND ( VAR_4 ) == null  VAR_4 = new TYPE_3 ( VAR_5 . METHOD_2 ( ) ) TYPE boolean NAME result INIT = VAR_4 . METHOD_1 ( ( ( TYPE_4 ) ( VAR_1 ) ) , VAR_3 . METHOD_3 ( ) ) COND result && VAR_2 TYPE java.lang.Runnable NAME r MODIFIER public RETURN void NAME run BLOCK BLOCK INIT = new java.lang.Runnable ( ) { public void run ( ) { } }  result = VAR_3 . METHOD_4 ( r )  return result ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE java.lang.String NAME name TYPE TYPE_3 NAME action TYPE java.io.File NAME VAR_3 TYPE java.io.File NAME VAR_4 TYPE TYPE_1 NAME VAR_5 COND ( VAR_6 ) == ( VAR_7 )  VAR_5 = new TYPE_4 ( run , VAR_1 , VAR_8 , name , VAR_2 , action , VAR_3 )  VAR_5 = new TYPE_5 ( VAR_6 . METHOD_2 ( ) , VAR_9 , VAR_1 , VAR_8 , name , VAR_2 , action , VAR_3 , VAR_4 , VAR_10 )  return VAR_5 ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( device ) TYPE TYPE_3[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( device )  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( device , VAR_2 ) COND ( VAR_3 ) >= 3  TYPE_5 . METHOD_5 ( this , device )  METHOD_6 ( device )
MODIFIER MODIFIER RETURN java.lang.String NAME getName TYPE TYPE_1 NAME type COND ( VAR_1 ) == null  return null ; TYPE java.lang.String NAME name INIT = null NAME type  name = VAR_1 [ 0 ]  break ;  name = VAR_1 [ 1 ]  break ;  return name ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( TYPE_2 . METHOD_2 ( context ) )  TYPE_3 . i ( STRING_1 , STRING_2 )  return null ; TYPE TYPE_1 NAME VAR_1 INIT = TYPE_4 . get ( context ) . METHOD_3 ( )  VAR_1 . METHOD_4 ( METHOD_5 ( ) )  VAR_1 . METHOD_6 ( )  return VAR_1 ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( this ) COND ( VAR_2 ) == ( VAR_3 ) TYPE java.lang.Object NAME value IN METHOD_3 ( ) COND value instanceof TYPE_2 COND ! ( VAR_4 )  ( ( TYPE_2 ) ( value ) ) . METHOD_4 ( this )  VAR_1 . METHOD_5 ( this , ( ( TYPE_2 ) ( value ) ) )  VAR_4 = true
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME i COND ( i < 0 ) || ( i > ( ( VAR_1 ) - 1 ) )  throw new java.lang.RuntimeException ( ) ; COND i > ( ( VAR_1 ) - 1 )  return ;  value [ ( i > > > 5 ) ] |= VAR_2 [ ( i & INT_1 ) ]  return ;
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( VAR_2 )  VAR_4 = VAR_1  VAR_5 . METHOD_2 ( VAR_6 )  VAR_5 . METHOD_3 ( VAR_6 , 0 )  return true ;  return false ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME v COND ( VAR_1 . size ( ) ) > 0 TYPE boolean NAME result INIT = false COND ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_2 ( v )  VAR_3 . METHOD_3 ( )  result = true  METHOD_4 ( v , VAR_1 )  return result ;  return false ;
MODIFIER private static RETURN java.lang.String NAME getName TYPE java.lang.String NAME s TYPE int NAME i INIT = TYPE_1 . METHOD_1 ( s , true ) TYPE java.lang.String NAME name INIT = VAR_1 [ VAR_2 [ i ] [ 1 ] ] TYPE int NAME VAR_3 INIT = VAR_2 [ i ] [ 2 ] TYPE boolean NAME VAR_4 INIT = VAR_3 < 0 COND VAR_4  VAR_3 = - VAR_3 COND VAR_3 < 0  name += STRING_1  name += STRING_2  return name ;
MODIFIER static synchronized RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return 0 ; TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_6 , VAR_2 ) COND ( VAR_7 ) != null  VAR_5 . METHOD_3 ( )  VAR_8 . METHOD_4 ( VAR_5 )  return VAR_4 . METHOD_5 ( VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( this , VAR_2 , null )  VAR_1 . METHOD_3 ( this , VAR_3 , null )  VAR_1 . METHOD_4 ( this , VAR_4 , null )  VAR_1 . METHOD_5 ( this , VAR_5 , null )  VAR_1 . METHOD_6 ( this , VAR_6 , null )  VAR_1 . METHOD_7 ( this , VAR_7 , null )  VAR_1 . METHOD_8 ( this , VAR_8 , null )  VAR_1 . METHOD_9 ( this , VAR_9 , null )
MODIFIER private RETURN void NAME METHOD_1 TYPE byte[] NAME address TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME event INIT = new TYPE_1 ( VAR_3 ) TYPE int NAME VAR_4 INIT = ( VAR_2 == 1 ) ? VAR_5 : VAR_6  VAR_7 = new TYPE_2 ( VAR_1 , VAR_4 , VAR_8 )  event . device = METHOD_2 ( address )  METHOD_3 ( VAR_9 , event )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( VAR_3 ) COND VAR_2 != null  VAR_4 . METHOD_3 ( ) . METHOD_4 ( VAR_2 )  METHOD_5 ( ) TYPE java.lang.Throwable NAME e  throw METHOD_6 ( x , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( this )  throw new TYPE_3 ( ) ; TYPE TYPE_4 NAME VAR_3 INIT = this . VAR_3  VAR_3 . METHOD_2 ( ) TYPE boolean NAME VAR_4 INIT = false  VAR_4 = VAR_1 . METHOD_3 ( ) COND ! VAR_4  VAR_3 . METHOD_4 ( )  return VAR_4 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE android.content.Intent NAME i INIT = new android.content.Intent ( this , VAR_3 class )  i . METHOD_2 ( VAR_4 , VAR_2 )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 . name , TYPE_4 . METHOD_5 ( VAR_5 ) , i ) )
MODIFIER protected static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_1 ) COND VAR_2 != null  return VAR_2 ;  return new TYPE_1 ( TYPE_5 . METHOD_3 ( VAR_1 , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2,TYPE_3> NAME node TYPE TYPE_1<TYPE_2,TYPE_3> NAME VAR_1 TYPE TYPE_1<TYPE_2,TYPE_3> NAME parent INIT = node . parent  node . parent = null COND VAR_1 != null  VAR_1 . parent = parent COND parent != null COND ( VAR_2 ) == node  VAR_2 = VAR_1  VAR_3 = VAR_1  VAR_4 = VAR_1
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME r TYPE long NAME VAR_2 INIT = ( ( VAR_3 ) & ( VAR_4 ) ) | ( ( VAR_5 ) & ( r . METHOD_2 ( ) ) )  VAR_2 = VAR_2 | ( VAR_6 )  VAR_2 = VAR_2 & ( ~ ( VAR_7 ) )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  METHOD_2 ( VAR_1 ) TYPE int NAME VAR_4 INIT = ( VAR_3 != null ) ? METHOD_3 ( VAR_1 , VAR_3 ) : VAR_5 TYPE int NAME VAR_6 INIT = ( VAR_3 == null ) ? 0 : VAR_7  TYPE_4 . METHOD_4 ( VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_6 ) COND VAR_4 != ( VAR_5 )  TYPE_4 . METHOD_5 ( VAR_8 , VAR_4 )
MODIFIER protected RETURN boolean NAME METHOD_1 COND VAR_1  METHOD_2 ( )  VAR_1 = false COND ( VAR_2 ) != null TYPE java.util.List<android.bluetooth.BluetoothDevice> NAME VAR_3 INIT = METHOD_3 ( ) TYPE android.bluetooth.BluetoothDevice NAME VAR_4 IN VAR_3  METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 )  VAR_2 . METHOD_5 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( 5 ) , 1 ) TYPE TYPE_3 NAME VAR_2 INIT = TYPE_3 . METHOD_4 ( VAR_1 )  VAR_1 . METHOD_5 ( )  assertTrue ( VAR_1 . METHOD_6 ( ) )  assertFalse ( VAR_2 . METHOD_7 ( ) )  TYPE_3 . METHOD_4 ( VAR_1 ) TYPE TYPE_4 NAME expected BLOCK BLOCK  VAR_1 . METHOD_5 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE TYPE_1 NAME VAR_1 MODIFIER public RETURN java.lang.String NAME METHOD_2  return packageName ; MODIFIER protected RETURN void NAME METHOD_3 BLOCK BLOCK INIT = new TYPE_1 ( VAR_2 , new TYPE_2 ( STRING_1 ) , VAR_3 , new TYPE_2 ( STRING_2 ) , VAR_4 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return packageName ; } protected void METHOD_3 ( ) { } }  VAR_1 . METHOD_4 ( VAR_5 , new TYPE_2 ( STRING_4 ) )  return VAR_1 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME key INIT = VAR_2 TYPE java.io.File NAME element IN VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 INIT = element . getName ( ) COND ( ! ( VAR_3 . METHOD_3 ( STRING_1 ) ) ) && ( ! ( VAR_3 . METHOD_3 ( STRING_2 ) ) )  return null ;  key += STRING_3 + ( TYPE_2 . METHOD_4 ( element ) )  return key ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_3 NAME VAR_2 COND ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) && ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) )  VAR_2 . METHOD_5 ( )  return false ; MODIFIER public RETURN TYPE_1 NAME METHOD_6  return VAR_1 ;  new TYPE_2 ( false ) { public boolean METHOD_1 ( TYPE_3 VAR_2 ) { if ( ( ( VAR_2 . METHOD_2 ( ) ) == 1 ) && ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { VAR_2 . METHOD_5 ( ) ; } return false ; } public TYPE_1 METHOD_6 ( ) { return VAR_1 ; } } . METHOD_7 ( )
MODIFIER public static RETURN java.lang.String NAME toString TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE java.lang.StringBuilder NAME VAR_2 INIT = new java.lang.StringBuilder ( )  VAR_2 . append ( STRING_1 ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . size ( ) )  ++ i COND i > 0  VAR_2 . append ( STRING_2 )  VAR_2 . append ( TYPE_3 . toString ( VAR_1 . METHOD_1 ( i ) ) )  VAR_2 . append ( STRING_3 )  return VAR_2 . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 class )  TYPE_3 . METHOD_3 ( VAR_1 , STRING_1 )  TYPE_3 . METHOD_3 ( VAR_1 , STRING_2 )  TYPE_2 . METHOD_4 ( VAR_1 ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_1 )  org.junit.Assert.assertEquals ( STRING_3 , VAR_3 . METHOD_5 ( STRING_4 ) . get ( ) )  org.junit.Assert.assertEquals ( STRING_5 , VAR_3 . METHOD_5 ( STRING_4 ) . get ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME c INIT = TYPE_1 . METHOD_2 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_3 ( c )  TYPE_1 . METHOD_4 ( s )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK  TYPE_1 . METHOD_5 ( s )  TYPE_1 . METHOD_6 ( c )  TYPE_3 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_4 ( ) ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_5 ( VAR_1 , INT_1 , STRING_1 )  assertEquals ( match , result )
MODIFIER public static RETURN void NAME METHOD_1 TYPE long[] NAME expected TYPE long[] NAME VAR_1  assertEquals ( expected . length , VAR_1 . length ) TYPE int NAME i INIT = 0 COND i < ( expected . length )  i ++  TYPE_1 . METHOD_2 ( expected [ i ] , VAR_1 [ i ] )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME source TYPE java.io.File NAME VAR_1 COND source . equals ( VAR_1 )  TYPE_1 . METHOD_2 ( ) . info ( java.lang.String.format ( STRING_1 , source , source . length ( ) , source . METHOD_3 ( ) ) )
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.v ( VAR_2 . TAG , STRING_1 )  TYPE_1 . METHOD_2 ( this , VAR_3 , VAR_4 , VAR_5 . get ( ) , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) COND ( VAR_10 ) != null  VAR_10 . METHOD_3 ( )  VAR_10 = null  METHOD_4 ( ) COND ( VAR_11 ) != null  VAR_11 . METHOD_5 ( null )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) == null TYPE TYPE_3 NAME VAR_4 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_4 NAME project INIT = METHOD_3 ( ) TYPE TYPE_5 NAME VAR_5 INIT = VAR_4 . METHOD_4 ( project )  VAR_3 = new TYPE_1 ( VAR_2 , VAR_5 , project , VAR_6 ) COND VAR_1  VAR_3 . METHOD_5 ( ) . METHOD_6 ( )  VAR_3 . METHOD_7 ( ) . METHOD_6 ( )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME VAR_1 TYPE long NAME c TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) COND ! ( VAR_4 )  assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_5 ) ) )  super . METHOD_1 ( session , VAR_1 , c , VAR_2 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_1 , STRING_2 , INT_1 , INT_2 , CHAR_1 , 0 , INT_3 , 6 )  METHOD_4 ( VAR_1 , STRING_2 , INT_1 , INT_2 , CHAR_1 , 0 , INT_3 , 6 )  METHOD_4 ( VAR_1 , STRING_3 , INT_2 , INT_1 , CHAR_1 , 0 , INT_3 , 6 )  METHOD_4 ( VAR_1 , STRING_2 , CHAR_1 , 0 , INT_3 , 6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.util.Set<TYPE_3> NAME VAR_4 TYPE boolean NAME VAR_5 COND ! ( METHOD_2 ( ) )  return null ; COND ! ( METHOD_3 ( VAR_1 ) )  return null ; TYPE TYPE_4 NAME VAR_6 INIT = METHOD_4 ( ) TYPE TYPE_5 NAME VAR_7 INIT = VAR_8 . METHOD_5 ( )  return METHOD_6 ( VAR_7 , VAR_1 , VAR_6 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  assertTrue ( ( VAR_1 != ( VAR_2 ) ) )  TYPE_1 . METHOD_3 ( VAR_1 )  TYPE_1 . METHOD_2 ( STRING_2 )  fail ( ) TYPE java.lang.RuntimeException NAME expected BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  ++ i TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( i )  VAR_1 . METHOD_2 ( VAR_3 )  assertTrue ( VAR_1 . METHOD_3 ( VAR_3 ) )  assertEquals ( VAR_4 , VAR_1 . size ( ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME pkg INIT = VAR_3 . METHOD_2 ( ) COND ( VAR_3 . METHOD_3 ( ) ) == null  VAR_1 . print ( TYPE_5 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ) COND pkg != null  VAR_1 . println ( ( ( STRING_1 + ( pkg . name ( ) ) ) + STRING_2 ) )  TYPE_5 . METHOD_6 ( VAR_1 , VAR_2 , VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME method TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME options INIT = new TYPE_3 ( )  VAR_2 = VAR_3  VAR_4 = VAR_5 TYPE int NAME VAR_6 INIT = METHOD_2 ( method ) TYPE int NAME VAR_7 TYPE TYPE_4 NAME VAR_8 COND VAR_9  VAR_8 = TYPE_5 . METHOD_3 ( VAR_1 )  VAR_8 = null COND VAR_10  VAR_7 = VAR_11  VAR_7 = VAR_12  return TYPE_6 . METHOD_4 ( VAR_1 , VAR_7 , VAR_8 , VAR_6 , options ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 NAME VAR_1  return TYPE_5 . METHOD_2 ( VAR_2 ) ;  return new TYPE_6 ( VAR_1 , VAR_2 ) ;  return new TYPE_7 ( VAR_1 , VAR_2 ) ;  return new TYPE_8 ( VAR_1 , VAR_2 ) ;  throw new TYPE_4 ( ( STRING_1 + VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_1 )  args . METHOD_2 ( STRING_2 , VAR_2 )  TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_5 ( VAR_1 , VAR_4 )  TYPE_4 . METHOD_6 ( VAR_3 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 INIT = count TYPE int NAME VAR_2 INIT = 0 COND ( VAR_2 < VAR_1 ) && ( ( METHOD_2 ( VAR_2 ) ) <= CHAR_1 )  VAR_2 ++ COND ( VAR_2 < VAR_1 ) && ( ( METHOD_2 ( ( VAR_1 - 1 ) ) ) <= CHAR_1 )  VAR_1 --  return ( VAR_2 > 0 ) || ( VAR_1 < ( count ) ) ? METHOD_3 ( VAR_2 , VAR_1 ) : this ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE long NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME config COND config == null  return null ; TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) . append ( STRING_1 ) . append ( VAR_1 ) . append ( STRING_2 ) . append ( VAR_2 ) . append ( STRING_3 ) . append ( VAR_3 ) . append ( STRING_4 ) . append ( VAR_4 ) . append ( STRING_5 ) . append ( VAR_5 )  return sb . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 IN VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = null TYPE TYPE_3 NAME VAR_4 COND ( VAR_1 . type ) == null  VAR_4 = TYPE_3 . METHOD_2 ( VAR_5 . Object class )  VAR_4 = TYPE_3 . METHOD_3 ( VAR_1 . type ) TYPE java.lang.String NAME id INIT = STRING_1 + ( ( VAR_6 ) ++ )  VAR_3 = new TYPE_2 ( id , id , VAR_4 , null )  VAR_7 . METHOD_4 ( VAR_1 , VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME source TYPE java.util.ArrayList<TYPE_2> NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_2 != null TYPE TYPE_2 NAME s IN VAR_2 COND s . equals ( source )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 )  TYPE_3 . METHOD_4 ( new java.io.File ( VAR_5 , STRING_1 ) , new java.io.File ( VAR_5 , STRING_2 ) ) TYPE TYPE_4 NAME VAR_6 INIT = TYPE_2 . METHOD_5 ( VAR_3 , VAR_5 , VAR_4 )  assertEquals ( 1 , VAR_7 . size ( ) )  assertEquals ( new TYPE_5 ( VAR_8 , STRING_3 , VAR_9 , VAR_10 , VAR_11 ) , VAR_7 . get ( 0 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) TYPE TYPE_2 NAME p INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( p , 0 )  p . METHOD_4 ( 0 ) TYPE TYPE_1 NAME VAR_10 INIT = TYPE_3 . METHOD_5 ( p )  org.junit.Assert.assertEquals ( VAR_1 , VAR_10 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME location TYPE java.lang.String NAME VAR_3 TYPE java.lang.Object NAME data COND ( VAR_2 != null ) && ( VAR_4 . METHOD_2 ( this , VAR_1 , VAR_2 ) )  return ;  super . METHOD_1 ( VAR_1 , location , VAR_3 , data )
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = new byte [ ] { INT_1 , - INT_2 , INT_3 , 100 , INT_4 , INT_5 , 3 , 0 , 0 , INT_6 , 0 , INT_7 , 0 } TYPE TYPE_1 NAME in INIT = new TYPE_2 ( new TYPE_3 ( VAR_1 ) )  assertEquals ( 1 , in . METHOD_2 ( ) )  assertEquals ( 4 , in . METHOD_3 ( 4 ) )  assertEquals ( 0 , in . METHOD_2 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE android.os.Bundle NAME VAR_3 COND VAR_1 == null  throw new java.lang.IllegalArgumentException ( STRING_1 ) ;  return VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE android.os.RemoteException NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device  METHOD_2 ( VAR_1 , STRING_1 ) COND VAR_2  android.util.Log.d ( VAR_3 . TAG , ( ( STRING_2 + device ) + STRING_3 ) ) COND device == null  device = VAR_4 COND device == null  return null ;  VAR_5 TYPE TYPE_2 NAME VAR_6 INIT = VAR_5 . get ( device ) COND VAR_6 != null  return VAR_6 . METHOD_1 ( ) ;  return null ;
MODIFIER public static RETURN byte[] NAME METHOD_1 TYPE long NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = new byte [ VAR_3 ] TYPE int NAME index INIT = VAR_3 COND ( index -- ) > 0  VAR_2 [ index ] = ( ( byte ) ( VAR_1 ) )  VAR_1 = VAR_1 > > 8  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , INT_1 , VAR_9 , VAR_9 , VAR_9 , VAR_9 , VAR_8 )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = ( VAR_1 == null ) ? null : VAR_1 . METHOD_2 ( )  return ( VAR_3 != null ) && ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME slotId TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME service INIT = METHOD_2 ( ) COND service != null  return service . METHOD_1 ( slotId , VAR_1 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e )  return - 1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_3 )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_1 ) TYPE int NAME VAR_4 INIT = VAR_3 . size ( ) TYPE int NAME VAR_5 INIT = 0 COND VAR_5 < VAR_4  VAR_5 ++  assertTrue ( STRING_1 , ( ( VAR_3 . get ( VAR_5 ) ) == ( VAR_2 . get ( ( ( VAR_4 - VAR_5 ) - 1 ) ) ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME size INIT = ( this . METHOD_2 ( ) ) > > 1 TYPE int NAME VAR_1 INIT = METHOD_3 ( )  return ( ( TYPE_1 ) ( new TYPE_2 ( this , ( - 1 ) , 0 , size , size , VAR_1 , METHOD_4 ( ) ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME server TYPE int NAME VAR_1 COND ( VAR_2 ) != null  METHOD_2 ( )  VAR_2 = METHOD_3 ( server , VAR_1 )  VAR_3 = new TYPE_2 ( new TYPE_3 ( VAR_2 . METHOD_4 ( ) ) , true , VAR_4 ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( ( ( VAR_4 ) + STRING_1 ) ) ;  VAR_5 = new TYPE_6 ( VAR_2 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  METHOD_3 ( s )  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 , VAR_6 )  VAR_1 . METHOD_2 ( VAR_7 , VAR_8 )  VAR_1 . METHOD_2 ( VAR_9 , VAR_10 ) TYPE TYPE_3 NAME VAR_11 INIT = TYPE_4 . METHOD_4 ( ) . METHOD_5 ( ) TYPE java.lang.String NAME VAR_12 INIT = VAR_11 . METHOD_6 ( VAR_13 )  VAR_1 . METHOD_2 ( VAR_14 , VAR_12 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_4 NAME location COND VAR_2 != null  location = context . METHOD_2 ( VAR_2 ) TYPE TYPE_4 NAME VAR_4 INIT = context . METHOD_2 ( VAR_1 )  VAR_4 . METHOD_3 ( STRING_1 )  location . METHOD_4 ( VAR_4 )  location = context . METHOD_2 ( VAR_1 )  context . METHOD_5 ( VAR_5 , VAR_1 . METHOD_6 ( ) , location , VAR_3 , null )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE byte[] NAME request INIT = TYPE_2 . METHOD_2 ( STRING_1 )  TYPE_2 . METHOD_3 ( VAR_1 , request ) TYPE TYPE_3 NAME VAR_2 INIT = TYPE_2 . METHOD_4 ( VAR_1 , false ) COND ( VAR_3 ) == false  TYPE_4 . e ( STRING_2 , ( STRING_3 + ( VAR_4 ) ) )  return VAR_3 ; TYPE java.io.IOException NAME e  TYPE_4 . e ( STRING_2 , STRING_4 )  VAR_1 . METHOD_5 ( )  throw e ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME d COND d != null  d . METHOD_2 ( this ) TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_3 ( ) COND ( VAR_3 ) < VAR_1  VAR_3 = VAR_1  METHOD_4 ( )  VAR_4 = d COND ! ( VAR_5 )  VAR_6 = d  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_3  android.util.Log.d ( TYPE_2 . TAG , STRING_1 ) COND VAR_4  TYPE_2 . METHOD_2 ( VAR_1 )  METHOD_3 ( )  VAR_5 = VAR_6 COND ( VAR_7 ) != null TYPE android.os.Message NAME msg INIT = android.os.Message . METHOD_4 ( VAR_7 )  VAR_8 = VAR_9  msg . METHOD_5 ( ) COND VAR_4  android.util.Log.v ( TYPE_2 . TAG , STRING_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = null TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( VAR_3 ) COND VAR_2 != null  VAR_1 = VAR_2 . METHOD_1 ( VAR_4 ) COND VAR_1 == null  METHOD_3 ( STRING_1 )  return VAR_1 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 COND ( VAR_2 . METHOD_2 ( ) ) != null TYPE TYPE_2 NAME VAR_4 INIT = VAR_2 . METHOD_2 ( ) COND VAR_4 != null TYPE TYPE_3 NAME VAR_5 INIT = VAR_4 . METHOD_3 ( ) COND VAR_5 != null TYPE TYPE_2 NAME VAR_6 INIT = VAR_5 . METHOD_4 ( VAR_7 , VAR_1 ) COND VAR_6 != null  return VAR_6 . METHOD_5 ( ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( TYPE_2 . TAG , STRING_1 )  return ;  assertTrue ( TYPE_2 . METHOD_4 ( VAR_1 ) ) TYPE boolean NAME VAR_2 INIT = TYPE_2 . METHOD_5 ( VAR_1 ) COND ! VAR_2  TYPE_1 . METHOD_3 ( TYPE_2 . TAG , STRING_2 )  return ;  METHOD_6 ( VAR_3 , INT_1 , INT_2 , 4 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.util.List<java.io.File> NAME VAR_3 COND VAR_1 == null  return ; TYPE java.lang.String NAME path IN VAR_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME sb INIT = VAR_4 . METHOD_3 ( path ) COND ( ! VAR_2 ) || ( TYPE_2 . METHOD_4 ( VAR_5 ) )  VAR_3 . METHOD_5 ( new java.io.File ( path ) ) TYPE TYPE_3 NAME VAR_6 BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE TYPE_2 NAME VAR_5 TYPE TYPE_4 NAME callback  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , 0 , callback , new TYPE_5 ( TYPE_6 . METHOD_2 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( STRING_1 )  s . METHOD_2 ( null )  fail ( STRING_2 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK  s . METHOD_2 ( new TYPE_2 ( STRING_1 , STRING_1 ) )  assertEquals ( new TYPE_2 ( STRING_1 , STRING_1 ) , s . locale ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME node TYPE TYPE_4 NAME pos INIT = ( ( TYPE_4 ) ( METHOD_2 ( node ) ) ) COND pos != null  return TYPE_1 . METHOD_3 ( VAR_1 , pos , ( ( TYPE_4 ) ( pos . METHOD_4 ( ) ) ) ) ;  return null ;
MODIFIER public static final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 NAME VAR_1  return new TYPE_2 ( ( ( TYPE_2 ) ( VAR_2 ) ) ) ;  return TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND VAR_3 != null  VAR_4 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , TYPE_2 . METHOD_4 ( VAR_2 ) , TYPE_2 . METHOD_4 ( VAR_3 ) )  VAR_4 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) , TYPE_2 . METHOD_4 ( VAR_2 ) )
MODIFIER private static RETURN int NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE int NAME VAR_5 COND VAR_1 && ( VAR_5 == 0 )  return - 1 ; COND VAR_2 != null  VAR_2 . METHOD_2 ( VAR_5 ) COND ! VAR_3  VAR_2 . METHOD_3 ( VAR_4 . METHOD_4 ( ) )  VAR_2 . METHOD_5 ( VAR_4 . METHOD_6 ( ) )  return VAR_5 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE int NAME VAR_5  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ( VAR_2 - VAR_4 ) , ( VAR_3 - VAR_4 ) , ( VAR_2 + VAR_4 ) , ( VAR_3 + VAR_4 ) ) , VAR_5 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  assertEquals ( VAR_3 , VAR_4 )  assertFalse ( STRING_1 , ( ( VAR_5 ) == 0 ) ) TYPE TYPE_2 NAME VAR_6 INIT = VAR_1 . METHOD_2 ( )  assertEquals ( VAR_3 , VAR_7 )  assertEquals ( STRING_1 , 0 , VAR_8 )  METHOD_3 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) == false  android.util.Log.e ( TYPE_2 . TAG , STRING_1 )  return ;  VAR_3 COND VAR_4 . METHOD_2 ( device , VAR_1 )  return ; TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( 0 , device , VAR_1 )  VAR_4 . METHOD_3 ( VAR_5 )  METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) COND ! ( VAR_1 . METHOD_5 ( ) ) TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_6 ( ) . METHOD_7 ( )  assertTrue ( STRING_1 , ( ( VAR_2 >= 0 ) && ( VAR_2 <= INT_1 ) ) ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_6 ( ) . METHOD_8 ( )  assertTrue ( STRING_2 , ( ( VAR_3 >= 0 ) && ( VAR_3 <= INT_1 ) ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg COND ( VAR_1 ) != null TYPE android.os.Message NAME VAR_2 INIT = android.os.Message . METHOD_2 ( )  VAR_3 = VAR_4  VAR_5 = VAR_6  VAR_1 . METHOD_3 ( VAR_2 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK ELSE ELSE
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME path TYPE TYPE_6 NAME VAR_1 INIT = this TYPE TYPE_7<java.lang.String> NAME VAR_2 INIT = path . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME name COND VAR_2 . METHOD_4 ( )  name = VAR_2 . METHOD_5 ( ) COND VAR_2 . METHOD_4 ( )  VAR_1 = VAR_3 . METHOD_6 ( VAR_1 , name )  return VAR_3 . METHOD_1 ( VAR_1 , name ) ;  throw new TYPE_8 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg  METHOD_2 ( ( STRING_1 + ( VAR_1 ) ) ) NAME VAR_1  METHOD_2 ( STRING_2 )  METHOD_3 ( ( ( TYPE_1 ) ( msg.obj ) ) , msg.arg1 )  break ;  METHOD_2 ( STRING_3 )  METHOD_4 ( ( ( TYPE_1 ) ( msg.obj ) ) )  break ;  METHOD_2 ( STRING_4 )  METHOD_5 ( ( ( TYPE_1 ) ( msg.obj ) ) )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_3 . METHOD_3 ( VAR_2 , true )  assertEquals ( VAR_1 , VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) COND ! ( TYPE_2 . METHOD_4 ( VAR_2 , VAR_1 ) )  throw new TYPE_3 ( ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_2 . METHOD_5 ( ) ) ) + STRING_3 ) + ( VAR_1 . METHOD_5 ( ) ) ) ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME number TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND TYPE_1 . METHOD_2 ( number )  return STRING_1 ; COND TYPE_2 . METHOD_3 ( number )  return number ; COND TYPE_1 . METHOD_2 ( VAR_2 )  VAR_2 = VAR_3  return TYPE_3 . METHOD_4 ( number , VAR_1 , VAR_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = ( STRING_1 + STRING_2 ) + ( VAR_2 ) COND VAR_3  TYPE_1 . d ( VAR_4 , VAR_1 )  VAR_5 . log ( VAR_1 ) COND ( VAR_2 ) != null  METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME VAR_6 INIT = VAR_7 . METHOD_3 ( ) COND ! ( TYPE_2 . METHOD_4 ( VAR_6 ) )  METHOD_5 ( VAR_6 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 )  VAR_1 . METHOD_3 ( VAR_5 , VAR_3 , 0 , 0 , 0 )  org.mockito.Mockito.verify ( VAR_6 , TYPE_1 . METHOD_4 ( ) ) . METHOD_3 ( org.mockito.Matchers . METHOD_5 ( ) , org.mockito.Matchers . METHOD_5 ( ) , org.mockito.Matchers . METHOD_5 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  TYPE_3 . METHOD_2 ( VAR_1 ) TYPE java.lang.IllegalArgumentException NAME e  throw new TYPE_2 ( ( STRING_2 + VAR_1 ) ) ;  VAR_2 = VAR_1  return this ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME action COND VAR_2 . METHOD_2 ( VAR_1 )  return VAR_2 . get ( VAR_1 ) ;  TYPE_2 . w ( this , STRING_1 , action , VAR_1 )  return TYPE_3 . METHOD_3 ( ) ;
MODIFIER public RETURN int[] NAME METHOD_1 TYPE int[] NAME src TYPE int[] NAME VAR_1  return new int [ ] { VAR_1 [ 0 ] , VAR_1 [ 1 ] , src [ 2 ] , TYPE_1 . METHOD_2 ( INT_1 , ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 class ) , TYPE_2 . METHOD_4 ( 100 ) , TYPE_2 . METHOD_4 ( 5 ) , TYPE_2 . METHOD_5 ( INT_1 ) ) TYPE java.lang.String NAME VAR_3 INIT = java.lang.String . METHOD_6 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 )  TYPE_3 . METHOD_7 ( VAR_3 , VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME a TYPE float NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) TYPE float NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_4 )  VAR_5 = ( ( VAR_1 * ( VAR_6 ) ) + ( VAR_3 * ( VAR_5 ) ) ) / ( VAR_3 * ( VAR_3 - ( VAR_6 ) ) )  VAR_2 /= VAR_4  return this ;
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_2 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_3 . TAG , STRING_1 )  return new TYPE_1 [ 0 ] ; TYPE TYPE_3 NAME service INIT = METHOD_3 ( ) COND service == null  return new TYPE_1 [ 0 ] ;  return service . METHOD_1 ( device ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( 4 ) . METHOD_2 ( 1 , 3 , 2 ) . METHOD_2 ( 3 , 2 ) . METHOD_3 ( 1 ) . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  assertEquals ( 6 , VAR_1 . METHOD_6 ( 1 ) . METHOD_7 ( 1 ) )  assertEquals ( 2 , VAR_1 . METHOD_6 ( 2 ) . METHOD_7 ( 1 ) )  assertEquals ( 3 , VAR_1 . METHOD_6 ( 3 ) . METHOD_7 ( 1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME info COND ! ( TYPE_3 . equals ( VAR_1 , VAR_2 ) )  TYPE_4 . w ( this , ( STRING_1 + STRING_2 ) )  return ; COND ( VAR_3 ) == null TYPE TYPE_5 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( info , null , VAR_2 , VAR_6 )  METHOD_3 ( VAR_4 , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  return ; TYPE TYPE_1[] NAME VAR_2 INIT = new TYPE_1 [ ] { VAR_3 , VAR_4 } TYPE byte[] NAME VAR_5 INIT = new byte [ ] { 1 , 2 , 3 , 4 } TYPE TYPE_2 NAME result INIT = VAR_6 . METHOD_2 ( VAR_2 , null , VAR_5 )  assertEquals ( 0 , result . METHOD_3 ( ) . size ( ) )  assertEquals ( 0 , result . METHOD_4 ( ) . size ( ) )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( )  METHOD_3 ( VAR_4 < java.lang.String > METHOD_4 ( ) , VAR_3 , VAR_2 )  return TYPE_3 . METHOD_5 ( VAR_3 , new TYPE_4 ( ) , VAR_1 ) ;  VAR_3 . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String[] NAME VAR_4 COND ( ! ( VAR_5 ) ) && ( ! ( VAR_6 . METHOD_2 ( ) ) )  METHOD_3 ( VAR_1 , name , VAR_2 )  return super . METHOD_1 ( VAR_1 , name , VAR_2 , VAR_3 , VAR_4 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) == null TYPE TYPE_3 NAME b INIT = new TYPE_3 ( VAR_1 )  b . METHOD_2 ( VAR_3 )  b . METHOD_3 ( VAR_3 )  b . METHOD_4 ( VAR_4 )  b . METHOD_5 ( VAR_4 )  VAR_2 = b . METHOD_6 ( )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_5 NAME VAR_5 INIT = VAR_3 . METHOD_1 ( VAR_1 ) TYPE TYPE_6 NAME type INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_5 , VAR_2 , type ) TYPE TYPE_7 NAME VAR_7 IN VAR_8  VAR_6 . METHOD_4 ( VAR_7 . METHOD_1 ( VAR_1 ) )  return VAR_6 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_5 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_6 . METHOD_2 ( VAR_1 ) COND VAR_2 == null  VAR_2 = TYPE_7 . METHOD_2 ( VAR_1 )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 == null  TYPE_4 . METHOD_4 ( context )  TYPE_5 . e ( STRING_1 , STRING_2 ) TYPE TYPE_6 NAME call INIT = VAR_1 . METHOD_5 ( ) COND call != null  call . METHOD_6 ( ) . METHOD_7 ( context )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  return ( ( ( ( VAR_2 . get ( 0 ) . METHOD_3 ( ) ) + STRING_1 ) + ( VAR_2 . get ( 1 ) . METHOD_3 ( ) ) ) + STRING_1 ) + ( METHOD_4 ( VAR_1 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  return METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( METHOD_5 ( VAR_1 , VAR_2 ) ) ; TYPE TYPE_5 NAME e  throw new TYPE_4 ( METHOD_6 ( ) , VAR_2 , VAR_1 ) ; TYPE TYPE_6 NAME e  throw new TYPE_4 ( METHOD_6 ( ) , VAR_2 , VAR_1 ) ; TYPE TYPE_7 NAME e  throw new TYPE_4 ( METHOD_6 ( ) , VAR_2 , VAR_1 ) ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE short NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) COND ( ! ( VAR_2 . METHOD_4 ( ) ) ) && ( VAR_1 . METHOD_4 ( ) )  throw new TYPE_2 ( ( STRING_1 + ( this ) ) , ( STRING_2 + ( this ) ) , STRING_3 ) ;  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2  android.util.Log . i ( VAR_1 , ( ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( ) ) ) + STRING_2 ) + VAR_2 ) ) TYPE TYPE_2 NAME log INIT = new TYPE_2 ( STRING_3 , STRING_4 )  log . METHOD_3 ( STRING_5 , VAR_2 , VAR_3 , VAR_4 )  log . METHOD_3 ( STRING_6 , TYPE_1 . METHOD_4 ( ) , VAR_3 , VAR_4 )  log . METHOD_5 ( null ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) COND ( ( VAR_2 != null ) && ( ! ( VAR_2 instanceof TYPE_3 ) ) ) || ( ( VAR_3 != null ) && ( ! ( VAR_3 instanceof TYPE_3 ) ) )  throw new TYPE_4 ( STRING_1 ) ;  return super . METHOD_1 ( VAR_1 ) ;
MODIFIER public static final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME locale TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( locale , VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) COND TYPE_5 . equals ( VAR_3 )  return TYPE_5 ; COND TYPE_6 . equals ( VAR_3 )  return TYPE_6 ; COND TYPE_7 . equals ( VAR_3 )  return TYPE_7 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) COND VAR_1 == 0  return ; TYPE int NAME VAR_3 INIT = 6 TYPE java.lang.String NAME VAR_4 INIT = STRING_1  TYPE_1 . METHOD_4 ( METHOD_3 ( ) , VAR_5 , VAR_1 , VAR_2 , VAR_3 , VAR_6 , VAR_4 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME type COND VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 COND VAR_4 != null TYPE TYPE_1 NAME value INIT = TYPE_5 . METHOD_1 ( ( ( TYPE_6 ) ( VAR_4 ) ) ) COND ( value != null ) && ( value . METHOD_2 ( ) )  return value ;  return super . METHOD_1 ( VAR_1 , VAR_2 , type ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME p TYPE float NAME VAR_2 TYPE android.renderscript.Allocation NAME VAR_3 TYPE int NAME id INIT = VAR_1 . METHOD_2 ( VAR_4 , false , VAR_3 . METHOD_3 ( VAR_1 ) , 0 , VAR_2 ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( id , VAR_1 , p , null , null , VAR_2 )  return VAR_5 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.util.Map<?,?> NAME VAR_1 TYPE java.util.Map<?,?> NAME VAR_2 TYPE java.lang.Object NAME VAR_3 INIT = VAR_1 . get ( VAR_4 ) TYPE java.lang.Object NAME VAR_5 INIT = VAR_2 . get ( VAR_4 ) COND ! ( METHOD_2 ( VAR_3 ) )  return METHOD_2 ( VAR_5 ) ? 1 : 0 ; COND ! ( METHOD_2 ( VAR_5 ) )  return - 1 ;  return ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_3 ( VAR_5 ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME a TYPE int NAME b TYPE int NAME c  a = Main . METHOD_2 ( 1 )  b = Main . METHOD_2 ( 2 )  a += b  b = Main . METHOD_2 ( 5 )  c = Main . METHOD_2 ( 6 )  b += c  c = a + b  return c ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_2 instanceof TYPE_3 ) && ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) )  VAR_3 . append ( new TYPE_4 ( VAR_1 , new TYPE_5 ( VAR_1 . METHOD_4 ( ) , VAR_2 , VAR_1 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME index TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_1 NAME VAR_4 COND VAR_5  TYPE_2 . d ( VAR_6 . TAG , ( ( ( ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + index ) + STRING_3 ) + VAR_2 ) + STRING_4 ) + VAR_3 ) + STRING_5 ) + VAR_4 ) ) TYPE TYPE_3 NAME VAR_7 INIT = ( ( TYPE_3 ) ( VAR_8 . METHOD_2 ( VAR_2 ) ) )  VAR_7 . set ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_3 ) + STRING_7 ) TYPE java.lang.String NAME expected INIT = STRING_8 + ( STRING_9 + STRING_10 )  assertEquals ( expected , METHOD_2 ( VAR_1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME entry TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . get ( ) COND VAR_2 == null  return ; COND ( VAR_4 ) != null  VAR_2 . METHOD_2 ( VAR_4 ) TYPE TYPE_3 NAME VAR_5 INIT = TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  VAR_2 . METHOD_5 ( VAR_2 . METHOD_6 ( VAR_5 , entry ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  TYPE_1 . v ( this , STRING_1 , VAR_1 ) COND VAR_2 . METHOD_2 ( )  VAR_1 = false  TYPE_1 . v ( this , STRING_2 )  VAR_3 . METHOD_3 ( ( VAR_1 ? VAR_4 : VAR_5 ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK  TYPE_1 . METHOD_2 ( VAR_1 ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE byte[] NAME VAR_2 INIT = new byte [ 20 ] TYPE long NAME VAR_3 INIT = TYPE_1 . METHOD_3 ( STRING_1 ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( TYPE_1 . METHOD_4 ( VAR_3 ) )  TYPE_1 . METHOD_2 ( VAR_4 )  fail ( ) TYPE java.lang.RuntimeException NAME expected BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_3 )  VAR_2 . METHOD_4 ( new TYPE_2 ( ) )  VAR_2 . METHOD_5 ( VAR_4 ) TYPE TYPE_3 NAME VAR_5 INIT = METHOD_2 ( VAR_6 )  VAR_5 . METHOD_6 ( VAR_7 )  METHOD_7 ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i TYPE double NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( i , VAR_3 ) ) , x )  return this ;
MODIFIER private RETURN void NAME METHOD_1 TYPE char NAME expected TYPE int NAME c INIT = METHOD_2 ( ) COND c != expected  METHOD_3 ( ( ( ( ( STRING_1 + expected ) + STRING_2 ) + ( ( char ) ( c ) ) ) + STRING_3 ) )  ( VAR_1 ) ++
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.String NAME VAR_3  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE java.lang.NullPointerException NAME VAR_4  throw VAR_4 ; TYPE java.lang.RuntimeException NAME re  throw new java.lang.IllegalArgumentException ( ( ( ( STRING_1 + ( re . getMessage ( ) ) ) + STRING_2 ) + VAR_3 ) ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME number COND ( number != null ) && ( number . METHOD_2 ( VAR_1 ) ) TYPE TYPE_2 NAME VAR_2 INIT = context . METHOD_3 ( VAR_3 class ) TYPE boolean NAME VAR_4 INIT = ( ( VAR_5 ) >= ( VAR_6 ) ) && ( ( VAR_2 . METHOD_4 ( ) ) == ( VAR_7 ) ) TYPE boolean NAME VAR_8 INIT = ( VAR_2 . METHOD_5 ( ) ) == ( VAR_9 )  return VAR_4 && VAR_8 ;  return false ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME address COND TYPE_1 . METHOD_2 ( address )  return address ; TYPE java.lang.String NAME VAR_1 INIT = TYPE_2 . METHOD_3 ( address ) COND VAR_1 != null  return VAR_1 ; COND TYPE_2 . METHOD_4 ( address )  return address ;  return null ;
MODIFIER private RETURN TYPE_1[] NAME METHOD_1 TYPE TYPE_2 NAME target COND target != null TYPE TYPE_1[] NAME VAR_1 INIT = target . METHOD_1 ( ) COND ( ( VAR_1 == null ) || ( ( VAR_1 . length ) == 0 ) ) && ( ! ( target . METHOD_2 ( ) ) )  VAR_1 = target . METHOD_3 ( ) . METHOD_1 ( ) COND VAR_1 != null  return VAR_1 ;  return new TYPE_1 [ 0 ] ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = ( ( VAR_5 ) + ( VAR_6 ) ) + ( VAR_7 ) TYPE java.lang.String NAME VAR_8 INIT = ( VAR_4 + ( VAR_6 ) ) + VAR_1  METHOD_2 ( VAR_8 , VAR_2 , VAR_3 )
MODIFIER public static RETURN java.lang.String NAME METHOD_1  VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) COND VAR_2 == null  VAR_3 . METHOD_3 ( ) TYPE java.io.IOException NAME VAR_4 BLOCK BLOCK  VAR_5 . in = new TYPE_1 ( new TYPE_2 ( VAR_6 ) )  VAR_2 = VAR_3 . METHOD_2 ( )  return VAR_2 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 COND TYPE_1 . METHOD_2 ( VAR_1 )  return false ; TYPE java.util.List NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 ) COND VAR_2 . METHOD_4 ( VAR_3 )  android.util.Log.d ( VAR_4 . TAG , STRING_1 )  return true ; TYPE java.lang.String NAME VAR_5 IN VAR_6 COND ! ( VAR_2 . METHOD_4 ( VAR_5 ) )  return false ;  android.util.Log.d ( VAR_4 . TAG , STRING_2 )  return true ;
MODIFIER public RETURN void NAME run  VAR_1 = STRING_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_1 ( ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_2 . METHOD_2 ( VAR_3 ) COND VAR_4 != null  VAR_2 . METHOD_3 ( VAR_3 , VAR_4 )  VAR_4 . METHOD_4 ( )  TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_3 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME number TYPE TYPE_1 NAME VAR_1 COND TYPE_2 . get ( this ) . METHOD_2 ( ) . METHOD_3 ( ) MODIFIER public RETURN void NAME METHOD_6  METHOD_7 ( number , VAR_1 )  TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( number ) , new TYPE_5 ( ) { public void METHOD_6 ( ) { METHOD_7 ( number , VAR_1 ) ; } } , VAR_2 ) . METHOD_8 ( METHOD_9 ( ) , VAR_3 )  METHOD_7 ( number , VAR_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float[] NAME VAR_2 TYPE int NAME VAR_3 TYPE float[] NAME src TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE boolean NAME VAR_6 TYPE TYPE_1 NAME d INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND d == null  return ; COND VAR_6  d . METHOD_3 ( VAR_2 , VAR_3 , src , VAR_4 , VAR_5 )  d . METHOD_4 ( VAR_2 , VAR_3 , src , VAR_4 , VAR_5 )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . getName ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) COND ! ( VAR_4 . METHOD_5 ( ) )  VAR_3 = ( VAR_3 + ( VAR_5 ) ) + VAR_4  return VAR_3 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME slotId TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4  VAR_5 TYPE TYPE_1 NAME VAR_6 INIT = METHOD_2 ( slotId , VAR_1 ) COND VAR_6 != null  return VAR_6 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_5 ( VAR_1 , INT_1 , STRING_3 )  METHOD_6 ( result )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) )  assertNotNull ( VAR_4 ) TYPE java.util.List<?extendsTYPE_3> NAME VAR_5 INIT = TYPE_2 . METHOD_4 ( VAR_3 ) TYPE TYPE_3 NAME match INIT = VAR_4 . METHOD_5 ( VAR_5 )  assertEquals ( VAR_2 , VAR_5 . METHOD_6 ( match ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Set<java.lang.String> NAME VAR_1 TYPE java.util.Map<java.lang.String,java.util.Set<java.lang.String>> NAME VAR_2 TYPE java.util.Set<java.lang.String> NAME VAR_3 TYPE java.lang.String NAME VAR_4 IN VAR_3 COND VAR_1 . METHOD_2 ( VAR_4 ) TYPE java.lang.String NAME VAR_5 IN METHOD_3 ( VAR_2 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME log  VAR_2 TYPE TYPE_1 NAME VAR_3 COND ( VAR_3 = VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ) != null  return VAR_3 ;  VAR_3 = new TYPE_1 ( VAR_1 , log )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) , VAR_3 )  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = new TYPE_4 ( )  VAR_5 = VAR_6  VAR_7 = VAR_8  TYPE_5 . METHOD_3 ( VAR_9 , ret )  VAR_3 . METHOD_4 ( rr , VAR_1 , ret )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_2 ( METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_4 ( VAR_2 , STRING_1 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( VAR_2 , STRING_2 )  VAR_1 . METHOD_5 ( VAR_3 )  VAR_1 . METHOD_5 ( VAR_4 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) TYPE boolean NAME VAR_2 INIT = true TYPE TYPE_2 NAME VAR_3 IN VAR_4 COND ! ( VAR_3 . METHOD_2 ( VAR_1 ) ) COND VAR_2  VAR_2 = false  TYPE_2 . METHOD_3 ( sb , VAR_5 )  sb.append ( VAR_3 . METHOD_1 ( VAR_1 ) )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME type INIT = 0 COND type <= 8  type ++  new TYPE_1 ( ) . METHOD_2 ( type , ( ( java.lang.String ) ( null ) ) )  fail ( STRING_1 ) TYPE java.io.IOException NAME VAR_1 BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type COND type == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = type . METHOD_3 ( ) TYPE TYPE_1 NAME result INIT = VAR_2 . get ( VAR_1 ) COND result == null  result = new TYPE_1 ( type )  VAR_2 . METHOD_4 ( VAR_1 , result )  return result ;
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  VAR_2 . METHOD_3 ( VAR_1 [ i ] . toString ( ) , STRING_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 . METHOD_4 ( )  return new TYPE_1 ( ) ;  return TYPE_1 . METHOD_5 ( TYPE_2 . on ( CHAR_1 ) . METHOD_6 ( VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  METHOD_2 ( TYPE_4 . METHOD_3 ( s ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1  VAR_1  VAR_1 . METHOD_1 ( )  VAR_2  VAR_2 . METHOD_1 ( )  VAR_3  VAR_3 . METHOD_1 ( )  VAR_4  VAR_4 . METHOD_1 ( )  VAR_5  VAR_5 . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  METHOD_2 ( ( ( ( STRING_1 + ( i + 1 ) ) + STRING_2 ) + VAR_1 ) , INT_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( new TYPE_3 ( STRING_1 , STRING_2 , STRING_3 ) ) ) ) TYPE java.lang.String NAME text INIT = STRING_4 TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( text )  VAR_2 . METHOD_4 ( 1 )  assertEquals ( 0 , VAR_2 . METHOD_5 ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME size INIT = ( ( int ) ( VAR_1 / INT_1 ) ) TYPE int NAME VAR_2 INIT = INT_2 TYPE long NAME VAR_3 INIT = 0 TYPE int NAME i INIT = 0 COND i < VAR_2  ++ i  VAR_4 . METHOD_4 ( size )  VAR_3 += size COND VAR_3 > 0  VAR_4 . METHOD_5 ( size )  VAR_3 -= size
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE int NAME status COND status == ( VAR_1 )  return STRING_1 ; COND status == ( VAR_2 )  return STRING_2 ; COND status == ( VAR_3 )  return STRING_3 ; COND status == ( VAR_4 )  return STRING_4 ;  return STRING_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME request TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 COND VAR_1 <= 0  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE int NAME VAR_4 INIT = METHOD_2 ( VAR_5 ) TYPE TYPE_4 NAME VAR_6 INIT = new TYPE_4 ( VAR_3 )  METHOD_1 ( request , VAR_2 , VAR_1 , VAR_4 , VAR_6 )
MODIFIER private RETURN boolean NAME METHOD_1  VAR_1 COND ( VAR_2 ) == null  VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 class . METHOD_3 ( VAR_4 ) )  return true ; TYPE TYPE_2 NAME e  VAR_5 . error ( e , null )  VAR_2 = new java.util.ArrayList < TYPE_3 > ( ) TYPE java.lang.Exception NAME e  VAR_5 . error ( null , STRING_1 )  VAR_2 = new java.util.ArrayList < TYPE_3 > ( )  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME content TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( content )  VAR_1 . METHOD_2 ( STRING_1 )  return VAR_1 ; TYPE TYPE_2 NAME e  android.util.Log.w ( VAR_2 . TAG , e )  return null ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this TYPE int NAME index INIT = METHOD_2 ( VAR_1 , false ) COND index < 0  return VAR_2 ; TYPE TYPE_2 NAME r INIT = ( ( TYPE_2 ) ( VAR_3 . get ( index ) ) )  return VAR_4 . METHOD_3 ( r ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME number TYPE byte[] NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( 4 ) . METHOD_3 ( number ) . METHOD_4 ( )  VAR_1 = TYPE_2 . METHOD_5 ( VAR_1 , 2 , 4 )  return TYPE_3 . METHOD_6 ( VAR_1 , ( ( VAR_2 ) | ( VAR_3 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2  METHOD_2 ( ) TYPE int NAME subId INIT = METHOD_3 ( ) COND ! ( TYPE_2 . METHOD_4 ( subId ) )  return ; TYPE TYPE_3<java.lang.String,TYPE_1> NAME VAR_3 INIT = new TYPE_3 ( VAR_1 , VAR_2 )  METHOD_5 ( VAR_4 , VAR_3 , subId )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE int NAME id TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( id , null ) COND VAR_1 == null  android.util.Log.w ( VAR_3 . TAG , ( ( STRING_1 + id ) + STRING_2 ) )  return STRING_3 ; TYPE java.lang.String NAME packageName INIT = VAR_1 . METHOD_1 ( ) COND VAR_4  android.util.Log.v ( VAR_3 . TAG , ( ( ( STRING_4 + id ) + STRING_5 ) + packageName ) )  return packageName ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t IN VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = t . METHOD_2 ( ) COND VAR_2 != null  VAR_2 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_3 INIT = t . METHOD_4 ( ) COND VAR_3 != null  VAR_2 . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME pw TYPE java.lang.String NAME VAR_1  pw.println ( ( ( ( ( ( ( ( ( ( ( VAR_1 + STRING_1 ) + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_5 ) + ( VAR_6 ) ) )
MODIFIER public RETURN TYPE_1<TYPE_2,java.lang.Integer> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_3 NAME VAR_2 COND VAR_3  java.lang.System.out.println ( java.lang.String.format ( STRING_1 , VAR_1 ) ) TYPE TYPE_1<TYPE_2,TYPE_5> NAME result INIT = TYPE_6 . METHOD_2 ( VAR_1 , false , VAR_2 , null )  return TYPE_1 . of ( result . METHOD_3 ( ) , result . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( ) TYPE java.io.File NAME VAR_3 INIT = METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( STRING_1 )  VAR_4 . METHOD_4 ( VAR_3 )  VAR_4 . METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_1 , VAR_4 , false )  METHOD_7 ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( )  METHOD_5 ( )  METHOD_6 ( )  METHOD_7 ( )  METHOD_8 ( )  METHOD_9 ( )  METHOD_10 ( )  VAR_1 = 0  VAR_2 . size = 1  VAR_3 = VAR_4 . METHOD_11 ( )  VAR_5 . METHOD_12 ( )  VAR_5 . METHOD_13 ( VAR_6 )  VAR_5 . METHOD_14 ( VAR_7 )  new TYPE_2 ( ) . METHOD_15 ( VAR_4 )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  METHOD_3 ( VAR_1 , STRING_1 ) TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_1 , VAR_3 ) TYPE java.io.File NAME VAR_4 INIT = new java.io.File ( VAR_1 , VAR_5 ) TYPE java.io.File NAME VAR_6 INIT = new java.io.File ( VAR_1 , VAR_7 )  TYPE_2 . assertTrue ( VAR_2 . METHOD_4 ( ) )  TYPE_2 . assertTrue ( VAR_4 . METHOD_4 ( ) )  TYPE_2 . assertTrue ( VAR_6 . METHOD_4 ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME app COND ( ( ( ( ( app . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( app . METHOD_2 ( ) ) != ( VAR_2 ) ) ) && ( ( app . METHOD_2 ( ) ) != ( VAR_3 ) ) ) && ( ( app . METHOD_2 ( ) ) != ( VAR_4 ) ) ) && ( ( app . METHOD_2 ( ) ) != ( VAR_5 ) )  return false ;  return true ;
MODIFIER public synchronized RETURN void NAME METHOD_1 COND ( VAR_1 ) != null COND VAR_2  android.util.Log.d ( VAR_3 . TAG , STRING_1 )  VAR_1 = null  VAR_4 . METHOD_2 ( VAR_5 )  VAR_6 . METHOD_3 ( false )  VAR_6 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( ( ( VAR_2 ) & ( VAR_3 ) ) != 0 ) != VAR_1  VAR_2 = ( ( VAR_2 ) & ( ~ ( VAR_3 ) ) ) | ( VAR_1 ? VAR_3 : 0 ) COND ! VAR_1  METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( )  METHOD_5 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME content INIT = STRING_1 TYPE java.io.File NAME input INIT = TYPE_3 . METHOD_2 ( content ) TYPE java.io.File NAME output INIT = java.io.File . METHOD_3 ( STRING_2 , STRING_3 )  output . METHOD_4 ( )  TYPE_4 . METHOD_5 ( ) . METHOD_6 ( input , output , new TYPE_5 ( ) , VAR_1 , false , new TYPE_6 ( new TYPE_7 ( VAR_2 ) ) )  TYPE_3 . METHOD_7 ( content , output )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 class . METHOD_2 ( ( STRING_1 + name ) ) COND VAR_1 != null  return TYPE_3 . METHOD_3 ( VAR_1 ) ; TYPE java.io.IOException NAME e  TYPE_4 . log ( e , STRING_2 , name )  VAR_1 . METHOD_4 ( ) TYPE java.io.IOException NAME e BLOCK BLOCK  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 ) . get ( VAR_1 ) TYPE TYPE_2 NAME p IN VAR_2  assertTrue ( ( ( STRING_2 + p ) + STRING_3 ) , p . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME version TYPE int NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String[] NAME VAR_4  VAR_5 = name  VAR_6 = TYPE_1 . METHOD_2 ( VAR_1 , VAR_7 )  super . METHOD_1 ( TYPE_2 . METHOD_3 ( version , VAR_8 ) , VAR_1 , name , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 TYPE int[] NAME VAR_1 COND VAR_2  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( 0 ) ;  return service . METHOD_1 ( VAR_1 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE android.os.Message NAME VAR_3 INIT = android.os.Message . METHOD_2 ( )  VAR_4 = VAR_1  VAR_3 . arg1 = VAR_2  VAR_5 . METHOD_3 ( VAR_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.Object NAME VAR_4 TYPE TYPE_2 NAME v TYPE java.lang.String NAME VAR_5  Main . METHOD_2 ( ) TYPE java.lang.String[] NAME VAR_6 INIT = Main . METHOD_3 ( 0 , null , VAR_1 , VAR_2 , VAR_3 , VAR_4 )  v . METHOD_4 ( VAR_6 , VAR_5 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE TYPE_1 NAME VAR_4 IN VAR_2 . METHOD_2 ( )  android.util.Log.w ( VAR_5 . TAG , ( ( ( STRING_1 + ( VAR_4 . METHOD_3 ( ) ) ) + STRING_2 ) + VAR_1 ) ) COND ( VAR_4 . METHOD_3 ( ) ) == VAR_1  return VAR_4 ;  return null ;
MODIFIER static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < 10  i ++ TYPE int NAME d INIT = b . toString ( ) . METHOD_2 ( STRING_1 , 1 )  return b . length ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ) ) TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . toString ( )  VAR_2 . METHOD_4 ( VAR_4 ) COND VAR_4 . equals ( STRING_1 )  VAR_2 . METHOD_5 ( false )  VAR_2 . METHOD_5 ( true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<?superTYPE_2> NAME VAR_1  VAR_1 . METHOD_2 ( this )  VAR_2 . METHOD_1 ( VAR_1 ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( VAR_1 ) COND ( VAR_4 ) != null  VAR_4 . METHOD_1 ( VAR_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME a TYPE int NAME r TYPE int NAME VAR_2 TYPE int NAME b  TYPE_1 . METHOD_2 ( VAR_1 , ( ( ( ( a < < INT_1 ) | ( ( r & INT_2 ) < < 16 ) ) | ( ( VAR_2 & INT_2 ) < < 8 ) ) | ( b & INT_2 ) ) , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c INIT = TYPE_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( ) . METHOD_4 ( )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK  METHOD_5 ( TYPE_3 . METHOD_2 ( null ) )  c . METHOD_6 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE TYPE_1 NAME d INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND d == null  return ;  TYPE_1 . METHOD_3 ( VAR_7 , ( - VAR_4 ) , ( - VAR_5 ) )  d . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_2 , VAR_3 ) )  d . METHOD_4 ( TYPE_1 . METHOD_6 ( VAR_4 , VAR_5 ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) COND VAR_4 == null  return null ;  return TYPE_5 . METHOD_4 ( VAR_2 , VAR_4 , VAR_3 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  i ++ TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 [ i ] TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 [ i ] COND ( ( VAR_3 != null ) && ( VAR_5 != null ) ) && ( ( VAR_3 . METHOD_1 ( VAR_5 ) ) == false )  return false ;  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . type = in . METHOD_2 ( )  VAR_2 = in . METHOD_2 ( )  VAR_3 = in . METHOD_2 ( )  VAR_4 = in . METHOD_2 ( )  VAR_5 = in . METHOD_2 ( )  VAR_6 = in . METHOD_3 ( )  VAR_7 = in . METHOD_3 ( )  VAR_8 = in . METHOD_4 ( )  return VAR_1 ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ! ( TYPE_1 . METHOD_2 ( ) )  return false ; TYPE boolean NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( VAR_1 ) TYPE boolean NAME VAR_4 INIT = VAR_2 == ( VAR_5 ) TYPE boolean NAME VAR_6 INIT = ( TYPE_3 . METHOD_4 ( VAR_2 ) ) || ( VAR_2 == ( VAR_7 ) )  return ( ( ! VAR_3 ) && ( VAR_4 || VAR_6 ) ) && ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME type TYPE TYPE_1 NAME VAR_1  android.util.Log.d ( VAR_2 . TAG , ( ( ( STRING_1 + type ) + STRING_2 ) + VAR_1 ) ) TYPE long NAME VAR_3 INIT = METHOD_2 ( VAR_1 ) TYPE byte[] NAME VAR_4 INIT = TYPE_2 . METHOD_3 ( VAR_5 ) . METHOD_4 ( VAR_3 ) . METHOD_5 ( ) COND type == ( VAR_6 )  METHOD_6 ( )  VAR_7 . METHOD_7 ( type , VAR_4 )  VAR_8 = VAR_3
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE int NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) MODIFIER public RETURN boolean NAME METHOD_2 TYPE TYPE_1 NAME VAR_3  VAR_2 . METHOD_3 ( VAR_3 )  return true ; MODIFIER public RETURN TYPE_3 NAME METHOD_4  return VAR_4 this ;  new TYPE_2 ( ) { public boolean METHOD_2 ( TYPE_1 VAR_3 ) { VAR_2 . METHOD_3 ( VAR_3 ) ; return true ; } public TYPE_3 METHOD_4 ( ) { return VAR_4 this ; } } . METHOD_5 ( VAR_1 )  return VAR_2 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = ++ ( VAR_3 )  VAR_4 . METHOD_2 ( VAR_2 , VAR_1 )  VAR_5 . METHOD_4 ( VAR_1 ) COND VAR_6  java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_7 . METHOD_5 ( ) ) ) + STRING_2 ) + VAR_2 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  super . METHOD_1 ( VAR_1 ) COND ( VAR_2 ) != null  METHOD_2 ( VAR_2 , TYPE_2 . METHOD_3 ( VAR_3 ) )  TYPE_3 . METHOD_4 ( ) . METHOD_5 ( this )  TYPE_3 . METHOD_4 ( ) . METHOD_6 ( this )  TYPE_3 . METHOD_4 ( ) . METHOD_7 ( this )  TYPE_3 . METHOD_4 ( ) . METHOD_8 ( this )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME res TYPE java.lang.String NAME path TYPE float NAME VAR_2  VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = res . METHOD_3 ( ) . VAR_4 TYPE int NAME VAR_5 INIT = VAR_1 . METHOD_4 ( path , VAR_2 , VAR_3 ) COND VAR_5 == 0  throw new android.renderscript.RSRuntimeException ( ( STRING_1 + path ) ) ; TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_5 , VAR_1 )  return VAR_6 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return VAR_3 ; TYPE TYPE_2 NAME VAR_4 INIT = METHOD_3 ( subId ) COND VAR_4 == null  return VAR_3 ;  return VAR_4 . METHOD_4 ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME flags  METHOD_2 ( )  return ( ( ( ( ( VAR_1 ) != null ) && ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_2 ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_3 ) ) ) && ( VAR_1 . METHOD_4 ( ) ) ) && ( ( flags & ( VAR_4 ) ) != 0 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( STRING_1 )  TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , null , true )  TYPE_1 . METHOD_5 ( VAR_1 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( method )  VAR_2 . METHOD_5 ( method )
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME expected TYPE java.lang.String NAME msg COND VAR_1 != expected  java.lang.System.out.println ( ( ( ( ( msg + STRING_1 ) + VAR_1 ) + STRING_2 ) + expected ) )  TYPE_1 . METHOD_2 ( ( - 1 ) )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME value TYPE TYPE_2 NAME m INIT = TYPE_3 . METHOD_2 ( value ) COND m . METHOD_3 ( )  return new TYPE_1 ( m . METHOD_4 ( 2 ) , m . METHOD_4 ( 1 ) , m . METHOD_4 ( 3 ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ( ! ( VAR_1 ) ) || ( ! ( METHOD_2 ( 1 ) ) )  return ; TYPE int NAME VAR_2 INIT = METHOD_3 ( ) TYPE int NAME VAR_3 INIT = METHOD_4 ( VAR_4 , VAR_5 , VAR_6 )  METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_2 )  METHOD_7 ( VAR_5 , VAR_7 , VAR_3 )  METHOD_5 ( VAR_3 )  METHOD_6 ( VAR_3 )  METHOD_6 ( VAR_2 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) COND VAR_4 == null  return null ;  return TYPE_5 . METHOD_4 ( VAR_2 , VAR_4 , VAR_3 ) ;
MODIFIER public static RETURN java.lang.Class NAME METHOD_1 TYPE Main NAME m TYPE boolean NAME VAR_1 COND ! ( Main . METHOD_2 ( STRING_1 ) )  return VAR_2 class ;  Main . METHOD_3 ( ) COND VAR_1  Main . METHOD_4 ( STRING_1 ) TYPE Main NAME VAR_3 INIT = m . METHOD_5 ( ) COND VAR_1 COND ! ( Main . METHOD_6 ( STRING_1 ) ) BLOCK BLOCK  return VAR_3 . METHOD_7 ( ) ;
MODIFIER static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.util.List<TYPE_4> NAME VAR_2 TYPE TYPE_5<TYPE_2> NAME VAR_3 INIT = new TYPE_5 < > ( ) TYPE TYPE_4 NAME path IN VAR_2  VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( TYPE_6 . METHOD_4 ( path ) ) )  return VAR_3 . build ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND VAR_2 == null  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; TYPE java.io.File NAME VAR_3 IN VAR_2 COND VAR_3 . METHOD_3 ( )  TYPE_1 . METHOD_1 ( VAR_3 ) COND ! ( VAR_3 . METHOD_4 ( ) )  throw new java.io.IOException ( ( STRING_2 + VAR_3 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 COND ( ( ( VAR_4 ) != VAR_1 ) || ( ( VAR_5 ) != VAR_2 ) ) || ( ( VAR_6 ) != VAR_3 )  VAR_4 = ( ( VAR_7 ) && ( VAR_1 == ( VAR_8 ) ) ) ? METHOD_2 ( ) : VAR_1  VAR_5 = VAR_2  VAR_6 = VAR_3  METHOD_3 ( )  METHOD_4 ( new TYPE_1 ( ) . METHOD_5 ( ) )  METHOD_6 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) COND VAR_2 != null TYPE TYPE_3 NAME data INIT = VAR_2 . METHOD_3 ( VAR_1 ) COND data != null TYPE TYPE_4 NAME VAR_3 INIT = data . METHOD_4 ( ) TYPE TYPE_5 NAME VAR_4 INIT = VAR_3 . METHOD_5 ( ) COND VAR_4 != null  VAR_4 . METHOD_6 ( VAR_5 . METHOD_7 ( ) )
MODIFIER private RETURN int[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int[] NAME VAR_2 INIT = new int [ 4 ]  VAR_2 [ 0 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 1 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 2 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 3 ] = METHOD_2 ( VAR_1 )  return VAR_2 ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return false ; TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( VAR_6 ) COND VAR_5 . METHOD_3 ( ) COND VAR_2 != null  VAR_3 . METHOD_4 ( VAR_2 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( ) , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 < java.lang.String > METHOD_2 ( ) ) TYPE TYPE_3 NAME VAR_8 INIT = new TYPE_4 ( VAR_9 ) . METHOD_3 ( VAR_1 ) . build ( )  assertTrue ( VAR_8 . METHOD_4 ( ) . METHOD_5 ( ) )  assertEquals ( VAR_1 , VAR_8 . METHOD_4 ( ) . get ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( true )  assertTrue ( STRING_1 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( false )  assertFalse ( STRING_2 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( )  VAR_1 . METHOD_3 ( )  fail ( STRING_3 ) TYPE TYPE_2 NAME VAR_2 BLOCK BLOCK
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_3 , VAR_4 )  VAR_2 . METHOD_2 ( VAR_5 )  VAR_2 . METHOD_2 ( VAR_1 . length ) TYPE byte NAME b IN VAR_1  VAR_2 . METHOD_3 ( b )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.Object NAME element COND element instanceof TYPE_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 INIT = ( ( TYPE_1 ) ( element ) ) . METHOD_2 ( ) COND VAR_1 != null  return ( VAR_1 . size ( ) ) > 0 ;  return false ;
MODIFIER public RETURN int NAME match TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_3 . METHOD_1 ( )  return VAR_4 ; TYPE java.util.List<java.lang.String> NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE int NAME VAR_6 INIT = VAR_7 TYPE TYPE_3 NAME VAR_8 IN VAR_3 TYPE int NAME match INIT = VAR_8 . match ( VAR_5 , VAR_2 ) COND match > VAR_6  VAR_6 = match COND VAR_6 == ( VAR_9 )  return VAR_6 ;  return VAR_6 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_5 NAME VAR_5 INIT = VAR_3 . METHOD_1 ( VAR_1 ) TYPE TYPE_6 NAME type INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_5 , VAR_2 , type ) TYPE TYPE_7 NAME VAR_7 IN VAR_8  VAR_6 . METHOD_4 ( VAR_7 . METHOD_1 ( VAR_1 , type ) )  return VAR_6 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME t TYPE int NAME r TYPE int NAME b COND ! VAR_1  return ; TYPE int NAME VAR_3 INIT = METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < VAR_3  i ++ TYPE TYPE_1 NAME VAR_4 INIT = METHOD_3 ( i )  VAR_4 . METHOD_4 ( 0 , 0 , VAR_4 . METHOD_5 ( ) , VAR_4 . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 )  assertEquals ( STRING_1 , METHOD_2 ( ) , VAR_1 . METHOD_2 ( ) )  assertEquals ( STRING_2 , VAR_2 , VAR_1 . METHOD_3 ( ) )  assertEquals ( STRING_3 , VAR_3 , VAR_1 . METHOD_4 ( ) )  assertEquals ( STRING_4 , VAR_5 , VAR_1 . METHOD_5 ( ) )  assertEquals ( STRING_5 , VAR_6 , VAR_1 . METHOD_6 ( ) )
MODIFIER public final RETURN int[] NAME METHOD_1 TYPE int NAME VAR_1 INIT = size ( ) TYPE int[] NAME result INIT = new int [ VAR_1 ] TYPE int NAME i INIT = 0 COND i < VAR_1  i ++ TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( METHOD_2 ( i ) ) ) COND VAR_2 == null  throw new java.lang.NullPointerException ( ( STRING_1 + i ) ) ;  result [ i ] = VAR_2 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( result )  return result ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 )  VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 ) COND VAR_2 == 0  return null ;  VAR_3 . METHOD_5 ( )  return TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ; TYPE java.lang.Throwable NAME e  throw TYPE_3 . METHOD_8 ( e ) ;
MODIFIER protected static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME result INIT = VAR_1 COND result == null  VAR_1 = result = new TYPE_1 ( null , null , null , new TYPE_3 ( ) , new TYPE_4 ( ) )  return ( ( TYPE_1 ) ( result . METHOD_2 ( ) ) ) ;
MODIFIER synchronized RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME x TYPE int NAME y TYPE int NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE int NAME VAR_5  METHOD_2 ( )  return METHOD_3 ( mContext , VAR_1 , x , y , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 )  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( )  TYPE_1 . METHOD_5 ( )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( ) )  TYPE_2 . METHOD_9 ( VAR_3 )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME t TYPE float NAME r TYPE float NAME b TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return 0 ;  return VAR_5 . METHOD_3 ( new TYPE_2 ( VAR_2 , t , r , b ) , VAR_3 , VAR_4 ) ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME netId TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String[] NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME uid  TYPE_1 . METHOD_2 ( STRING_1 , netId , VAR_1 , VAR_2 , VAR_3 ) TYPE long NAME VAR_7 INIT = TYPE_2 . METHOD_3 ( )  METHOD_4 ( VAR_7 , netId ) . METHOD_5 ( VAR_1 , VAR_2 , VAR_3 ) COND ( VAR_8 ) != null  VAR_8 . METHOD_1 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 , uid )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  VAR_1 = STRING_2  java.lang.System.out.println ( VAR_1 ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) != 0 )  return ( VAR_1 + ( VAR_2 ) ) + ( VAR_3 ) ;  return VAR_3 ;
MODIFIER private RETURN android.os.Bundle NAME METHOD_1 TYPE TYPE_1 NAME b INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) TYPE int NAME VAR_2 INIT = b . METHOD_5 ( VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = b . METHOD_6 ( VAR_5 ) TYPE android.os.Bundle NAME VAR_6 INIT = new android.os.Bundle ( )  VAR_6 . METHOD_7 ( VAR_7 , VAR_2 )  VAR_6 . METHOD_8 ( VAR_8 , VAR_4 )  return VAR_6 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.util.Set<java.lang.String> NAME VAR_4 INIT = new TYPE_2 < java.lang.String > ( TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) TYPE java.util.Set<java.lang.String> NAME VAR_5 INIT = new TYPE_2 < java.lang.String > ( TYPE_3 . METHOD_2 ( VAR_3 ) )  assertEquals ( VAR_5 , VAR_4 )  assertEquals ( VAR_2 , VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME key TYPE byte[] NAME value TYPE int NAME uid  return ( VAR_1 . METHOD_2 ( key , value , uid ) ) == ( VAR_2 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_3 . TAG , STRING_1 , e )  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 INIT = ( VAR_1 . METHOD_2 ( ) ) + VAR_2 TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( VAR_3 ) TYPE java.lang.String NAME id INIT = ( ( STRING_1 + VAR_3 ) + STRING_2 ) + ( METHOD_4 ( VAR_4 . METHOD_5 ( ) ) ) TYPE TYPE_1 NAME VAR_6 INIT = METHOD_6 ( id , id , METHOD_7 ( VAR_4 . METHOD_5 ( ) ) , null )  return VAR_6 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.ArrayList<TYPE_2> NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_1 . size ( ) TYPE TYPE_1 NAME result INIT = new TYPE_1 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++  result . set ( i , VAR_1 . get ( i ) . METHOD_2 ( ) )  result . METHOD_3 ( )  return result ;
MODIFIER protected RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int NAME VAR_4 COND ( VAR_2 < 0 ) || ( VAR_2 > 11 )  VAR_1 += VAR_2 / 12  VAR_2 %= 12 COND VAR_2 == 12  VAR_4 = 1  VAR_4 = VAR_2 + 1 TYPE double NAME VAR_5 INIT = TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 , 1 )  return ( ( int ) ( VAR_5 ) ) ;
MODIFIER private RETURN java.io.File NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( VAR_3 class )  VAR_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( STRING_3 ) )  VAR_2 . METHOD_6 ( null , VAR_1 , true )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i <= INT_1  ++ i  s . METHOD_2 ( i )  assertEquals ( ( i & ( ~ ( VAR_1 ) ) ) , s . METHOD_3 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Class<?> NAME VAR_4 TYPE TYPE_3<java.lang.String> NAME VAR_5 TYPE TYPE_4 NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8 COND VAR_9 class . METHOD_2 ( VAR_4 )  return new TYPE_5 ( VAR_1 , VAR_8 , VAR_4 ) ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) COND ( VAR_3 ) && ( VAR_2 != ( VAR_4 ) )  return VAR_5 ; COND ( VAR_6 . METHOD_3 ( ) ) && ( ( VAR_2 . METHOD_4 ( VAR_7 ) ) > 0 )  VAR_2 = VAR_8 COND ( VAR_6 . METHOD_5 ( ) ) && ( VAR_2 == ( VAR_9 ) )  VAR_2 = VAR_5  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME time TYPE long NAME when INIT = time . METHOD_2 ( ) TYPE int NAME VAR_1 INIT = ( ( int ) ( when / INT_1 ) ) TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_3 , VAR_1 ) COND VAR_2 < 0  VAR_2 = ( ~ VAR_2 ) - 1 COND VAR_2 < 0  return false ;  return ( VAR_4 [ ( ( VAR_5 [ VAR_2 ] ) & INT_2 ) ] ) == 1 ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 INIT = ( METHOD_2 ( ) ) && ( ! ( ( METHOD_3 ( ) ) && ( ( ( VAR_3 ) == ( VAR_4 ) ) || ( ( VAR_3 ) == ( VAR_5 ) ) ) ) ) COND ( ( ! VAR_2 ) && ( VAR_6 ) ) && ( METHOD_2 ( ) )  log ( ( STRING_1 + ( VAR_3 ) ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME b TYPE int NAME VAR_1 INIT = ( ( VAR_2 ) & ( VAR_3 ) ) > > ( VAR_4 ) COND ( VAR_1 == ( VAR_5 ) ) && ( ! ( ( VAR_6 ) instanceof TYPE_3 ) )  VAR_7 = true TYPE TYPE_4 NAME VAR_8 INIT = VAR_9 TYPE TYPE_4 NAME VAR_10 INIT = VAR_11 TYPE boolean NAME VAR_7 INIT = ! ( VAR_8 . equals ( VAR_10 ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME uri COND ! ( TYPE_3 . equals ( uri . METHOD_2 ( ) ) )  return null ; TYPE java.lang.String NAME VAR_1 INIT = uri . METHOD_3 ( ) COND VAR_1 != null  return METHOD_1 ( mContext , uri . METHOD_3 ( ) ) ;  return null ;
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND VAR_1 . METHOD_2 ( )  return ; TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( VAR_3 class ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_2 . METHOD_4 ( ) TYPE TYPE_3 NAME VAR_5 INIT = METHOD_5 ( method ) COND TYPE_4 . METHOD_6 ( method )  VAR_4 . METHOD_7 ( VAR_5 )  VAR_4 . METHOD_8 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_3 )  return ;  METHOD_4 ( ) . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_5 ( ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) TYPE byte[] NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME in INIT = TYPE_1 . METHOD_3 ( )  in . METHOD_4 ( VAR_3 , 0 , VAR_3 . length )  in . METHOD_5 ( 0 )  VAR_2 . METHOD_6 ( )  return in ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE java.util.Map<?,?> NAME VAR_1 TYPE java.lang.Object NAME VAR_2 COND VAR_1 == VAR_2  return true ; COND VAR_2 instanceof java.util.Map TYPE java.util.Map<?,?> NAME VAR_3 INIT = ( ( java.util.Map < ? , ? > ) ( VAR_2 ) )  return VAR_1 . METHOD_2 ( ) . equals ( VAR_3 . METHOD_2 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , VAR_2 )  VAR_1 . METHOD_2 ( STRING_2 ) TYPE TYPE_2 NAME expected BLOCK BLOCK  VAR_1 . METHOD_2 ( STRING_3 ) TYPE TYPE_2 NAME expected BLOCK BLOCK
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3 . size ( ) COND VAR_2 > 0  VAR_2 --  android.util.Log.v ( VAR_4 . TAG , ( ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) + STRING_2 ) + ( VAR_3 . get ( VAR_2 ) ) ) )
MODIFIER public RETURN java.util.Map<TYPE_1,java.util.Map<java.lang.String,TYPE_2>> NAME METHOD_1 COND ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null ) TYPE TYPE_3 NAME project INIT = METHOD_2 ( )  project . METHOD_3 ( )  VAR_1 = project . METHOD_4 ( VAR_2 . METHOD_5 ( ) )  return VAR_1 ;
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = METHOD_2 ( ) . METHOD_1 ( VAR_1 ) TYPE TYPE_1[] NAME ret INIT = new TYPE_1 [ VAR_2 . length ] TYPE int NAME i INIT = 0 COND i < ( ret . length )  ++ i  ret [ i ] = new TYPE_1 ( VAR_3 , VAR_2 [ i ] . METHOD_3 ( ) ) TYPE java.lang.NullPointerException NAME VAR_4  return null ;  return ret ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type NAME type . METHOD_2 ( )  return VAR_2 ;  return VAR_4 ;  return VAR_6 ;  return VAR_8 ;  return VAR_10 ;  return VAR_12 ;  return VAR_14 ;  return TYPE_3 . METHOD_3 ( type ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_3 = VAR_1  VAR_4 = new TYPE_3 [ 2 ]  VAR_4 [ 0 ] = METHOD_2 ( STRING_1 , 1 , 1 )  VAR_4 [ 1 ] = METHOD_2 ( STRING_2 , 2 , 2 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2  this . VAR_1 = VAR_1  this . VAR_2 = VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_4 . get ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ) COND VAR_3 != null  METHOD_1 ( VAR_3 , VAR_2 ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( STRING_1 ) ;  throw new TYPE_5 ( STRING_2 ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_2 . name = VAR_1 . getName ( )  VAR_3 = VAR_1 . METHOD_2 ( )  VAR_4 = VAR_1 . METHOD_3 ( )  VAR_5 = VAR_1 . METHOD_4 ( )  VAR_6 = VAR_1 . METHOD_5 ( )  VAR_7 = VAR_1 . METHOD_6 ( )  VAR_8 = VAR_1 . METHOD_7 ( )  VAR_9 = VAR_1 . METHOD_8 ( )  VAR_10 = VAR_1 . METHOD_9 ( )  return VAR_2 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND ( VAR_1 ) == null  VAR_2 = VAR_3 COND ( VAR_3 ) < ( VAR_2 )  VAR_4 . METHOD_2 ( new TYPE_2 ( VAR_5 , event , VAR_1 ) ) COND ( VAR_3 ) > ( VAR_2 )  VAR_2 = VAR_3  VAR_1 = event  ( VAR_5 ) ++
MODIFIER protected RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( ) COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( ) TYPE java.lang.Exception NAME e BLOCK BLOCK  super . METHOD_1 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE float NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME i COND ( i < 0 ) || ( i > ( ( VAR_1 ) - 1 ) )  return false ;  return ( ( value [ ( i > > > 5 ) ] ) & ( VAR_2 [ ( i & INT_1 ) ] ) ) != 0 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( subId ) COND VAR_2 != null COND ! ( TYPE_2 . METHOD_3 ( mContext , VAR_1 , STRING_1 ) )  return null ; TYPE java.lang.String NAME number INIT = TYPE_3 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) COND VAR_3  log ( ( STRING_2 + number ) )  return number ;  loge ( ( STRING_3 + subId ) )  return null ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_1 == ( VAR_3 ) COND VAR_2  return context . METHOD_2 ( VAR_4 ) ;  return context . METHOD_2 ( VAR_5 ) ; COND VAR_2  return context . METHOD_2 ( VAR_6 ) ;  return context . METHOD_2 ( VAR_7 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  METHOD_3 ( false )  METHOD_4 ( false )  METHOD_5 ( VAR_1 , false )  METHOD_6 ( false )  assertEquals ( VAR_2 , TYPE_1 . METHOD_7 ( mContext , VAR_3 , VAR_4 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME type INIT = METHOD_2 ( ) COND type != null  VAR_2 . METHOD_3 ( VAR_3 ) TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( VAR_4 )  sb.append ( VAR_3 . METHOD_4 ( type . METHOD_5 ( ) , VAR_5 ) )  VAR_6 = true  VAR_7 . METHOD_6 ( sb . toString ( ) )  VAR_6 = false COND VAR_1  METHOD_7 ( )
MODIFIER public static RETURN byte[] NAME METHOD_1 TYPE java.lang.String NAME s TYPE int NAME VAR_1 INIT = ( ( int ) ( TYPE_2 . METHOD_2 ( s , true ) ) ) TYPE byte[] NAME result INIT = new byte [ ( VAR_2 ) + VAR_1 ]  TYPE_3 . METHOD_3 ( result , 0 , ( ( short ) ( VAR_1 ) ) , VAR_3 )  TYPE_2 . METHOD_1 ( result , VAR_4 , s )  return result ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1<?> NAME VAR_1 TYPE java.lang.Object NAME element COND VAR_1 instanceof TYPE_2  return ( ( TYPE_2 < ? > ) ( VAR_1 ) ) . count ( element ) ; COND VAR_1 instanceof java.util.Set  return ( ( java.util.Set < ? > ) ( VAR_1 ) ) . METHOD_2 ( element ) ? 1 : 0 ;  return TYPE_3 . METHOD_1 ( VAR_1 . METHOD_3 ( ) , element ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Object NAME expected TYPE java.lang.Object NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = STRING_1 COND VAR_1 != null  VAR_3 = VAR_1 + STRING_2  TYPE_1 . fail ( ( ( ( ( ( VAR_3 + STRING_3 ) + expected ) + STRING_4 ) + VAR_2 ) + STRING_5 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res  VAR_1 = new TYPE_2 ( mRS , res , VAR_2 )  VAR_3 = TYPE_3 . METHOD_2 ( mRS , TYPE_4 . METHOD_3 ( mRS ) )  METHOD_4 ( )  VAR_1 . METHOD_5 ( VAR_4 )  VAR_3 . METHOD_6 ( VAR_4 )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) COND ! ( VAR_1 . METHOD_3 ( ) )  throw new TYPE_2 ( ) ; COND valid COND VAR_1 instanceof TYPE_3  ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( this ) COND VAR_1 instanceof TYPE_4  ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_1 ( this )  throw new TYPE_5 ( ) ;  valid = false
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 TYPE short NAME VAR_2 INIT = INT_2 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_3 )  args . METHOD_2 ( STRING_2 , 0 )  args . METHOD_2 ( STRING_3 , VAR_1 )  TYPE_2 . METHOD_3 ( VAR_2 , TYPE_3 . METHOD_4 ( args ) . toString ( ) )  TYPE_4 . METHOD_5 ( VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME source COND source != null TYPE TYPE_3<TYPE_1,java.util.ArrayList<TYPE_2>> NAME entry IN VAR_1 . METHOD_2 ( ) COND entry . METHOD_3 ( ) . METHOD_4 ( source )  return entry . METHOD_5 ( ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  METHOD_2 ( ) MODIFIER public RETURN void NAME run  TYPE_4 . METHOD_3 ( VAR_3 ) . METHOD_5 ( VAR_1 , VAR_2 )  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_3 , TYPE_4 . METHOD_3 ( VAR_3 ) , new java.lang.Runnable ( ) { public void run ( ) { TYPE_4 . METHOD_3 ( VAR_3 ) . METHOD_5 ( VAR_1 , VAR_2 ) ; } } )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) != null COND ! ( VAR_1 . equals ( VAR_3 ) )  METHOD_2 ( ( STRING_1 + VAR_1 ) )  return false ; COND VAR_2 . METHOD_3 ( )  return true ;  VAR_3 = VAR_1  VAR_2 = VAR_4 . METHOD_4 ( VAR_5 , VAR_1 )  VAR_2 . METHOD_5 ( )  return true ;
MODIFIER public RETURN java.lang.String NAME toString TYPE byte[] NAME VAR_1 INIT = METHOD_1 ( ) TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ( 2 * ( VAR_1 . length ) ) ) TYPE byte NAME b IN VAR_1  sb.append ( VAR_2 [ ( ( b > > 4 ) & INT_1 ) ] ) . append ( VAR_2 [ ( b & INT_1 ) ] )  return sb . toString ( ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < TYPE_1 > ( )  VAR_1 = VAR_2 . METHOD_2 ( null )  android.util.Log . i ( VAR_3 . TAG , ( ( STRING_1 + ( VAR_1 . size ( ) ) ) + STRING_2 ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener TYPE int NAME VAR_1 COND ( mContext ) == null  return ; TYPE TYPE_2 NAME VAR_2 INIT = ( METHOD_2 ( ) ) != null COND ( VAR_3 ) == null  VAR_3 = VAR_4  VAR_5 . METHOD_3 ( VAR_3 , METHOD_4 ( ) , listener . callback , VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME ex BLOCK BLOCK TYPE java.lang.NullPointerException NAME ex BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_2  TYPE_1 . v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) )  VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( ) )  VAR_5 = new TYPE_2 ( VAR_4 , TYPE_3 . METHOD_3 ( ) )  VAR_5 . METHOD_4 ( ( ! ( VAR_6 ) ) )
MODIFIER static RETURN int NAME METHOD_1 TYPE java.util.List<?> NAME VAR_1 TYPE int NAME VAR_2 INIT = 1 TYPE java.lang.Object NAME VAR_3 IN VAR_1  VAR_2 = ( INT_1 * VAR_2 ) + ( VAR_3 == null ? 0 : VAR_3 . METHOD_2 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( STRING_1 )  assertNotNull ( s )  s . METHOD_2 ( )  s = new TYPE_1 ( ( ( java.lang.String ) ( null ) ) )  fail ( STRING_2 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) )  VAR_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) COND VAR_1 == ( VAR_6 )  METHOD_4 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_2 ) TYPE TYPE_3 NAME t INIT = METHOD_5 ( new TYPE_4 ( VAR_2 ) )  METHOD_6 ( VAR_2 , t )  t . METHOD_7 ( )  assertTrue ( VAR_2 . METHOD_8 ( ) )  assertTrue ( VAR_2 . METHOD_9 ( ) )  METHOD_10 ( t )  METHOD_11 ( VAR_2 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  METHOD_2 ( )  android.util.Log.e ( TYPE_3 . TAG , ( STRING_1 + ( VAR_3 ) ) )  VAR_4 COND METHOD_3 ( )  VAR_3 = TYPE_3 . METHOD_4 ( )  VAR_5 = VAR_2 COND TYPE_3 . METHOD_5 ( VAR_6 , VAR_3 , VAR_1 )  return true ;  VAR_5 = null  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 . id ) == ( VAR_3 ) COND ! ( TYPE_2 . METHOD_2 ( this ) )  TYPE_3 . METHOD_3 ( this , METHOD_4 ( ) . METHOD_5 ( VAR_4 ) , VAR_5 ) . METHOD_6 ( )  METHOD_7 ( new android.content.Intent ( VAR_6 ) )  return ;  super . METHOD_1 ( VAR_1 , VAR_2 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME method TYPE int NAME VAR_1 TYPE TYPE_4 NAME m INIT = METHOD_2 ( method ) COND m == null  return null ; COND ( VAR_2 ) != null  return VAR_2 . get ( VAR_1 ) ;  return VAR_3 ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( this ) == obj  return true ; COND obj == null  return false ; COND ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) ) COND ( VAR_2 ) == null COND ( VAR_3 ) != null  return false ; COND ! ( VAR_2 . equals ( VAR_3 ) )  return false ;  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( ( VAR_2 ) & ( VAR_3 ) ) == ( VAR_3 )  return null ; COND ( ( VAR_2 ) & ( VAR_4 ) ) == ( VAR_4 )  METHOD_2 ( VAR_1 )  return VAR_1 ? ( VAR_5 ) == null ? null : VAR_5 . get ( ) : ( VAR_6 ) == null ? null : VAR_6 . get ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) == null TYPE TYPE_3 NAME b INIT = new TYPE_3 ( VAR_1 )  b . METHOD_2 ( VAR_3 )  b . METHOD_3 ( VAR_4 )  b . METHOD_4 ( VAR_5 )  b . METHOD_5 ( VAR_5 )  VAR_2 = b . METHOD_6 ( )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME start COND ( start < 0 ) || ( start > ( input . length ( ) ) )  throw new TYPE_1 ( ( ( ( STRING_1 + start ) + STRING_2 ) + ( input . length ( ) ) ) ) ;  VAR_1 = TYPE_2 . METHOD_2 ( address , input , start , VAR_2 )  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.io.File[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) COND VAR_3 != null TYPE java.io.File NAME VAR_4 IN VAR_3 COND ( VAR_4 . METHOD_3 ( ) ) && ( ! ( METHOD_4 ( VAR_4 ) ) ) TYPE TYPE_3 NAME VAR_5 INIT = TYPE_4 . METHOD_5 ( VAR_4 ) COND VAR_5 != null  METHOD_6 ( VAR_1 , VAR_4 , VAR_5 , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.util.List<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_3 TYPE TYPE_1 NAME id IN VAR_3 COND id . equals ( name , VAR_1 )  return id ; TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( name , VAR_1 , VAR_2 )  VAR_3 . METHOD_2 ( VAR_4 )  return VAR_4 ;
MODIFIER private static RETURN java.io.File NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_5 . METHOD_3 ( ) TYPE TYPE_6 NAME VAR_3 INIT = new TYPE_6 ( VAR_2 )  VAR_1 . METHOD_4 ( VAR_3 )  return VAR_2 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e COND ! ( e . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) )  throw new TYPE_4 ( STRING_1 ) ; TYPE int NAME id INIT = VAR_1 . METHOD_4 ( 2 , e . METHOD_5 ( VAR_1 ) )  return new TYPE_1 ( id , VAR_1 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_8 . METHOD_4 ( ) . build ( VAR_3 , VAR_2 )  VAR_6 . METHOD_5 ( VAR_5 )  return VAR_5 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_2 ( ) ) == ( VAR_2 )  throw new TYPE_1 ( STRING_3 ) ;  return METHOD_3 ( VAR_3 , VAR_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 COND VAR_1  TYPE_1 . log ( STRING_1 ) TYPE TYPE_2 NAME service INIT = VAR_2 COND service != null  service . METHOD_1 ( )  return true ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( TYPE_1 . TAG , e.toString ( ) )  android.util.Log.w ( TYPE_1 . TAG , STRING_2 ) COND VAR_1  TYPE_1 . log ( android.util.Log . METHOD_2 ( new java.lang.Throwable ( ) ) )  return false ;
MODIFIER protected RETURN long NAME METHOD_1 TYPE int NAME VAR_1 TYPE long NAME VAR_2 COND VAR_1 == 16  return TYPE_2 . METHOD_2 ( ) ; COND VAR_1 == INT_1  return TYPE_2 . METHOD_3 ( ) ;  throw new java.lang.RuntimeException ( ( STRING_1 + VAR_1 ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) COND ! ( TYPE_3 . METHOD_3 ( VAR_1 ) . METHOD_4 ( STRING_1 ) )  java.lang.System.out.println ( STRING_2 )  return ;  TYPE_4 . METHOD_5 ( VAR_1 )  TYPE_4 . METHOD_6 ( VAR_1 )  TYPE_4 . METHOD_7 ( VAR_1 )  TYPE_4 . METHOD_8 ( VAR_1 )  TYPE_4 . METHOD_9 ( VAR_1 )  TYPE_2 . METHOD_10 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2  VAR_3  VAR_1 = METHOD_2 ( VAR_1 )  VAR_2 = METHOD_2 ( VAR_2 )  VAR_3 . METHOD_3 ( VAR_1 )  VAR_4 += VAR_2 . size ( )  METHOD_4 ( )  METHOD_5 ( VAR_1 )  METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( TYPE_2 . equals ( VAR_2 , VAR_1 ) )  VAR_2 = VAR_1 TYPE TYPE_3 NAME VAR_3 IN VAR_4  VAR_3 . METHOD_2 ( this )  METHOD_3 ( )  METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1  android.util.Log . i ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1<java.lang.Integer,java.lang.Integer> NAME VAR_2 INIT = METHOD_2 ( ) COND ( ( VAR_3 ) >= INT_1 ) && ( ( VAR_4 ) >= INT_2 )  METHOD_3 ( INT_1 , INT_2 , false , true )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE int NAME index COND index != ( VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_2 , index ) COND VAR_4 != null  return VAR_4 ;  return METHOD_3 ( VAR_1 , VAR_2 , VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 TYPE int NAME VAR_3 INIT = VAR_4  VAR_5 . METHOD_2 ( java.lang.Integer . toString ( VAR_1 ) )  TYPE_1 . METHOD_3 ( VAR_6 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_7 , VAR_1 )  VAR_6 . METHOD_6 ( VAR_3 , this . METHOD_7 ( VAR_8 ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 instanceof TYPE_2  throw new java.lang.RuntimeException ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) . size ( ) TYPE boolean NAME VAR_4 INIT = ( VAR_2 > 1 ) && ( VAR_3 > 1 )  return VAR_4 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME app TYPE int NAME VAR_1 TYPE android.os.Bundle NAME VAR_2 COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( VAR_4 , VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  VAR_3 = null  VAR_4 = null  VAR_5 = null  VAR_6 = null  VAR_7 = null  METHOD_3 ( VAR_8 , ( - 1 ) , false , false , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element TYPE java.lang.String NAME VAR_1 INIT = element . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = ( TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( 0 ) ) ) + ( VAR_1 . METHOD_5 ( 1 ) )  context . METHOD_6 ( VAR_3 , element , context . METHOD_7 ( element ) , java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) , null )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME action TYPE java.util.List<TYPE_2> NAME VAR_1 INIT = TYPE_3 . METHOD_1 ( VAR_2 , true ) COND ! ( VAR_1 . METHOD_2 ( ) )  TYPE_4 . METHOD_3 ( VAR_1 , null , false , true )  TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_5 ( ) . METHOD_6 ( ) , STRING_1 , STRING_2 )
MODIFIER private static RETURN java.util.ArrayList<java.io.File> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE java.util.ArrayList<java.io.File> NAME result INIT = new java.util.ArrayList < java.io.File > ( )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_3 , result )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , result )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_2 INIT = new byte [ 1 ]  TYPE_4 . METHOD_2 ( s , fd , callback , VAR_2 , 0 , 1 , 0 )  assertEquals ( INT_1 , VAR_2 [ 0 ] )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_1 == VAR_2  return new TYPE_1 ( ) ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) )  return METHOD_1 ( VAR_1 , VAR_3 ) . append ( VAR_2 . getName ( ) ) . append ( CHAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2  VAR_3 . METHOD_2 ( VAR_1 )  VAR_4 . verify ( VAR_5 , METHOD_3 ( ) ) . METHOD_4 ( METHOD_5 ( VAR_6 class ) )  VAR_4 . verify ( VAR_5 , METHOD_3 ( ) ) . METHOD_6 ( METHOD_7 ( ) , METHOD_5 ( VAR_7 class ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME data TYPE java.lang.String NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( data )  VAR_1 = TYPE_5 . METHOD_3 ( VAR_1 )  return METHOD_1 ( VAR_1 , new TYPE_6 ( new TYPE_7 ( VAR_1 ) ) , true ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  assertEquals ( new TYPE_3 ( i ) , ( ( TYPE_3 ) ( VAR_1 . METHOD_3 ( ) ) ) )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 . METHOD_2 ( null )  VAR_2 . METHOD_3 ( )  VAR_3 . METHOD_4 ( )  METHOD_5 ( VAR_4 )  VAR_1 . METHOD_6 ( this ) COND ( VAR_5 ) == ( VAR_6 )  VAR_7 . METHOD_7 ( )  VAR_8 . METHOD_7 ( )  VAR_9 . METHOD_7 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE byte[] NAME VAR_2 INIT = ( ( byte [ ] ) ( VAR_1 . METHOD_1 ( ) ) )  key = new TYPE_3 ( TYPE_4 . METHOD_3 ( VAR_2 ) ) TYPE int NAME VAR_3 INIT = TYPE_4 . METHOD_4 ( key . METHOD_5 ( ) )  VAR_4 = new TYPE_5 ( TYPE_4 . METHOD_6 ( VAR_3 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME index  METHOD_2 ( INT_1 ) TYPE TYPE_3 NAME VAR_2 INIT = ( VAR_3 ) / FLOAT_1 NAME VAR_4  TYPE_4 . assertTrue ( VAR_5 . METHOD_3 ( ) , STRING_1 ) MODIFIER public RETURN TYPE_1 NAME METHOD_5 TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_6 ( VAR_1 , index , VAR_5 )  ( ( TYPE_6 ) ( VAR_6 ) ) . METHOD_6 ( )  return VAR_6 ;  return VAR_5 . METHOD_4 ( VAR_1 , new TYPE_5 < TYPE_1 > ( ) { public TYPE_1 METHOD_5 ( ) { TYPE_1 VAR_6 = new TYPE_6 ( VAR_1 , index , VAR_5 ) ; ( ( TYPE_6 ) ( VAR_6 ) ) . METHOD_6 ( ) ; return VAR_6 ; } } ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[][] NAME VAR_1 INIT = new java.lang.String [ ] [ ] { null , new java.lang.String [ ] { STRING_1 } , null , new java.lang.String [ ] { STRING_2 } } TYPE java.lang.String[][] NAME VAR_2 INIT = new java.lang.String [ ] [ ] { null , null , null , new java.lang.String [ ] { STRING_2 } }  METHOD_2 ( VAR_2 , TYPE_1 . METHOD_3 ( VAR_1 ) )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( TYPE_1 . METHOD_2 ( INT_1 ) , STRING_1 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_2 ) , STRING_2 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_3 ) , STRING_3 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_4 ) , STRING_4 )  assertEquals ( TYPE_1 . METHOD_2 ( INT_5 ) , STRING_5 )  assertEquals ( TYPE_1 . METHOD_2 ( 0 ) , null )  assertEquals ( TYPE_1 . METHOD_2 ( INT_6 ) , null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( super . METHOD_1 ( ) ) )  VAR_2 = ( ( TYPE_3 ) ( VAR_3 . METHOD_2 ( ) ) )  VAR_4 = ( ( TYPE_4 ) ( VAR_5 . METHOD_2 ( ) ) )  VAR_6 = false  return VAR_1 ;
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME method TYPE TYPE_1 NAME call TYPE int NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( null , method , call , VAR_1 )  method . METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME name INIT = VAR_2 . METHOD_3 ( )  return name ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1  VAR_1 COND ( VAR_1 ) == null  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( TYPE_2 . METHOD_2 ( ) , VAR_3 )  VAR_1 . METHOD_3 ( METHOD_4 ( VAR_2 ) ) TYPE TYPE_3 NAME e  VAR_4 . METHOD_5 ( STRING_1 , e.getMessage ( ) )  return VAR_1 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_3> NAME VAR_2 COND ( VAR_1 == null ) || ( ( VAR_1 . METHOD_2 ( ) ) == 0 )  return null ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) )  VAR_1 . METHOD_4 ( )  return VAR_3 ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME userId COND ! ( VAR_2 . METHOD_2 ( userId ) )  return true ; TYPE TYPE_2 NAME p INIT = VAR_3 COND p != null TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( VAR_5 ) ) COND VAR_4 != null  return ( VAR_4 . METHOD_3 ( userId ) ) && ( ( ( VAR_6 ) & ( VAR_7 ) ) == 0 ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME out TYPE boolean NAME VAR_1 TYPE java.io.File NAME VAR_2  METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  super . METHOD_1 ( out , VAR_1 , VAR_2 )  TYPE_2 . METHOD_4 ( INT_1 )  METHOD_5 ( VAR_2 )  super . METHOD_1 ( out , VAR_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 . METHOD_2 ( VAR_2 ) )  return ; TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) COND VAR_4 . METHOD_4 ( true )  METHOD_5 ( VAR_2 ) COND ! VAR_3  VAR_4 . METHOD_4 ( false )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_3 NAME type INIT = VAR_1 . METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = VAR_3 . get ( type ) COND VAR_2 == null  VAR_2 = new java.util.ArrayList < TYPE_1 > ( 1 )  VAR_3 . METHOD_3 ( type , VAR_2 )  VAR_2 . METHOD_4 ( VAR_1 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME address  METHOD_2 ( VAR_2 , STRING_1 ) TYPE java.lang.Integer NAME VAR_3 INIT = VAR_4 . METHOD_3 ( VAR_1 , address ) COND VAR_3 == null  android.util.Log.d ( VAR_5 . TAG , ( STRING_2 + address ) )  return ; COND VAR_6  android.util.Log.d ( VAR_5 . TAG , ( ( ( STRING_3 + address ) + STRING_4 ) + VAR_3 ) )  METHOD_4 ( VAR_1 , VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE java.lang.String NAME name TYPE TYPE_3 NAME action TYPE java.io.File NAME VAR_3 TYPE TYPE_1 NAME VAR_4 COND VAR_5  VAR_4 = new TYPE_4 ( run , VAR_1 , VAR_6 , name , VAR_2 , null , VAR_3 )  VAR_4 = new TYPE_5 ( VAR_7 , VAR_1 , VAR_6 , name , VAR_2 , action , VAR_3 )  return VAR_4 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE long NAME expected TYPE java.lang.String NAME msg COND VAR_1 != expected  java.lang.System.out.println ( ( ( ( ( msg + STRING_1 ) + VAR_1 ) + STRING_2 ) + expected ) )  TYPE_1 . METHOD_2 ( ( - 1 ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME info  return new TYPE_1 ( info , new TYPE_3 ( info , null , VAR_3 , VAR_2 , TYPE_4 . METHOD_2 ( ) , false ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( INT_1 , VAR_2 ) TYPE byte[] NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE byte[] NAME VAR_4 INIT = TYPE_2 . METHOD_3 ( VAR_3 ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_2 . METHOD_4 ( VAR_4 )  assertEquals ( VAR_1 , VAR_5 )  TYPE_3 . METHOD_5 ( VAR_3 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( VAR_3 class )  VAR_2 . METHOD_4 ( VAR_4 )  VAR_2 . METHOD_5 ( TYPE_3 . getName ( ) , STRING_1 )  VAR_2 . METHOD_6 ( VAR_5 ) . METHOD_6 ( VAR_6 ) . METHOD_7 ( VAR_1 , false , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1  assertFalse ( METHOD_2 ( STRING_1 , new TYPE_1 ( STRING_2 ) . METHOD_3 ( VAR_1 , STRING_3 ) ) )  assertFalse ( METHOD_2 ( STRING_1 , new TYPE_1 ( STRING_4 ) . METHOD_3 ( VAR_1 , STRING_3 ) ) )  assertTrue ( METHOD_2 ( STRING_1 , new TYPE_1 ( STRING_2 ) . METHOD_3 ( VAR_1 , STRING_1 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Object NAME args TYPE java.lang.String NAME msg INIT = java.lang.String.format ( VAR_1 , args ) TYPE java.lang.String NAME s IN msg . METHOD_2 ( STRING_1 ) COND ( s . METHOD_3 ( ) . length ( ) ) > 0  TYPE_1 . METHOD_4 ( VAR_2 . TAG , s )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME data TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( data )  return VAR_2 ? ( ( TYPE_1 ) ( new TYPE_4 ( VAR_3 , VAR_1 ) ) ) : ( ( TYPE_1 ) ( new TYPE_5 ( VAR_3 , VAR_1 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ! ( METHOD_2 ( ) )  METHOD_3 ( )  METHOD_4 ( )  VAR_2 . METHOD_5 ( ) . METHOD_6 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_7 ( ) TYPE android.os.RemoteException NAME e  TYPE_1 . e ( VAR_4 . TAG , STRING_1 , e )  VAR_2 . METHOD_5 ( ) . METHOD_8 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return ; TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 TYPE TYPE_3 NAME VAR_7 INIT = VAR_5 . METHOD_3 ( )  VAR_7 . METHOD_4 ( new TYPE_4 ( VAR_2 , true ) )  VAR_7 . METHOD_5 ( 0 , 0 , VAR_5 . METHOD_6 ( ) , VAR_5 . METHOD_7 ( ) )  VAR_7 . METHOD_8 ( )
MODIFIER public RETURN void NAME verify TYPE TYPE_1 NAME key COND key instanceof TYPE_7 TYPE TYPE_8 NAME VAR_1 INIT = ( ( TYPE_7 ) ( key ) ) . METHOD_1 ( )  METHOD_2 ( VAR_1 )  return ;  METHOD_3 ( key , null )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( VAR_1 ) COND ! ( VAR_2 . equals ( VAR_3 . METHOD_3 ( ) ) )  VAR_3 . METHOD_4 ( VAR_2 )  METHOD_5 ( )  VAR_4 . METHOD_6 ( ) . METHOD_7 ( true )  METHOD_8 ( )
MODIFIER MODIFIER RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE int NAME flags TYPE TYPE_1<TYPE_2> NAME VAR_1 MODIFIER public RETURN void NAME METHOD_2 TYPE TYPE_2 NAME VAR_2  action . METHOD_2 ( VAR_2 )  VAR_3 . METHOD_2 ( VAR_2 )  return new TYPE_3 < TYPE_2 , TYPE_2 > ( VAR_1 ) { public void METHOD_2 ( TYPE_2 VAR_2 ) { action . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  METHOD_2 ( ) COND VAR_3  android.util.Log.d ( VAR_4 , ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + VAR_2 ) )  VAR_5 . METHOD_4 ( VAR_1 . METHOD_3 ( ) ) COND VAR_5 . METHOD_5 ( ) COND VAR_2  METHOD_6 ( VAR_6 )  METHOD_6 ( VAR_7 )  VAR_1 . METHOD_7 ( true )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( 6 ) TYPE TYPE_3 NAME callback INIT = new TYPE_4 ( )  VAR_2 . METHOD_2 ( VAR_3 , callback ) COND true  TYPE_5 . METHOD_3 ( INT_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_3 , VAR_4 ) COND VAR_2 . METHOD_2 ( )  VAR_1 = VAR_5 . METHOD_3 ( VAR_2 , false )  VAR_5 . METHOD_4 ( this , VAR_3 , ( STRING_1 + ( VAR_3 . METHOD_5 ( ) ) ) )  return null ;  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME version TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_3 NAME name TYPE TYPE_4 NAME d INIT = TYPE_5 . METHOD_2 ( version , VAR_1 , VAR_2 , name ) . METHOD_3 ( ) TYPE TYPE_6 NAME r INIT = new TYPE_6 ( d , VAR_3 )  VAR_4 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( ( ( TYPE_1 . METHOD_2 ( STRING_1 ) ) != ( VAR_1 ) ) )  TYPE_1 . METHOD_2 ( null )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK  TYPE_1 . METHOD_2 ( STRING_2 )  TYPE_1 . METHOD_2 ( STRING_3 )  fail ( ) TYPE java.lang.RuntimeException NAME expected BLOCK BLOCK  TYPE_2 . METHOD_3 ( )
MODIFIER public RETURN java.lang.String NAME toString TYPE java.lang.StringBuilder NAME VAR_1 INIT = new java.lang.StringBuilder ( ( ( VAR_2 . length ( ) ) + 7 ) ) COND ( VAR_2 . METHOD_1 ( CHAR_1 ) ) >= 0  VAR_1 . append ( CHAR_2 ) . append ( VAR_2 ) . append ( CHAR_3 )  VAR_1 . append ( VAR_2 ) COND METHOD_2 ( )  VAR_1 . append ( CHAR_1 ) . append ( VAR_3 )  return VAR_1 . toString ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_2 ) COND VAR_4 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( )  METHOD_4 ( VAR_5 , VAR_4 )  VAR_5 . METHOD_5 ( VAR_4 , TYPE_5 . METHOD_6 ( ) )  return VAR_5 ; TYPE java.io.IOException NAME e BLOCK BLOCK  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 COND ! ( VAR_3 )  return ; TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 , VAR_6 class ) COND VAR_4 != null TYPE TYPE_5 NAME VAR_7 INIT = TYPE_6 . METHOD_3 ( VAR_4 )  VAR_2 . METHOD_4 ( VAR_8 , VAR_7 )  VAR_9 . METHOD_1 ( VAR_1 , VAR_2 )
MODIFIER synchronized RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE int NAME VAR_8 TYPE int NAME VAR_9 TYPE int NAME VAR_10 TYPE int NAME VAR_11 TYPE int NAME VAR_12 TYPE int NAME VAR_13 TYPE float NAME VAR_14 TYPE int NAME VAR_15  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 , VAR_14 , VAR_15 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME id NAME id  METHOD_2 ( )  return true ;  METHOD_3 ( )  return true ;  METHOD_4 ( )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME offset COND ( VAR_1 [ offset ] ) != ( VAR_2 )  VAR_3 = VAR_1 [ offset ] COND ( VAR_3 ) != ( VAR_2 )  VAR_1 [ offset ] = VAR_3 COND ( VAR_3 ) >= 0  VAR_4 [ VAR_3 ] = offset
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( STRING_2 ) )  server . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) ) )  assertEquals ( STRING_4 , VAR_1 . METHOD_8 ( ) )  VAR_1 . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_2 ) COND VAR_1 == 0  return ; TYPE int NAME VAR_3 INIT = 6  TYPE_1 . METHOD_4 ( METHOD_3 ( ) , VAR_4 , METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = METHOD_2 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) COND VAR_4 == null  return false ; TYPE int NAME start INIT = VAR_4 . METHOD_4 ( )  return METHOD_5 ( start , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 ) TYPE java.util.ArrayList<TYPE_2> NAME response INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME VAR_4 IN VAR_2  response . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_4 ) ) COND RIL . RILJ_LOGD  VAR_3 . METHOD_5 ( VAR_5 , response )  VAR_6 . METHOD_6 ( new android.os.AsyncResult ( null , response , null ) )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( METHOD_2 ( ) ) != 1  throw new TYPE_1 ( this , STRING_1 ) ; COND ( ! ( ( METHOD_3 ( ) ) instanceof TYPE_2 ) ) || ( ! ( ( ( TYPE_2 ) ( METHOD_3 ( ) ) ) . METHOD_4 ( ) ) )  throw new TYPE_1 ( this , STRING_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE int NAME VAR_5 TYPE TYPE_2 NAME options INIT = new TYPE_2 ( )  VAR_6 = VAR_2  VAR_7 = VAR_3 TYPE TYPE_3 NAME VAR_8 INIT = new TYPE_3 ( )  METHOD_1 ( VAR_5 , VAR_4 , VAR_1 , VAR_8 , options )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 . METHOD_2 ( ) TYPE TYPE_3 NAME request INIT = new TYPE_3 ( null , null , null , ( - 1 ) , null , VAR_1 , VAR_2 )  VAR_4 . METHOD_3 ( request )  VAR_5 . METHOD_4 ( request )
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE TYPE_1 NAME VAR_5 TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 . METHOD_2 ( VAR_1 ) COND VAR_6 == null  return ; TYPE TYPE_3 NAME VAR_8 INIT = TYPE_3 . METHOD_2 ( VAR_2 )  VAR_6 . METHOD_3 ( ) . METHOD_1 ( VAR_5 , VAR_8 , VAR_3 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 )  VAR_1 . METHOD_2 ( 0 )  org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( ( - 1 ) )  org.junit.Assert.assertEquals ( ( - 1 ) , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( VAR_1 . METHOD_4 ( ) )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( new TYPE_2 ( ) , VAR_1 , null , VAR_2 , null , VAR_3 , false , true , FLOAT_1 , ( ( TYPE_3 ) ( null ) ) , ( ( TYPE_4 [ ] ) ( null ) ) )
MODIFIER protected RETURN void NAME METHOD_1 COND ( fd ) != null COND ( ( fd ) == ( VAR_1 . out ) ) || ( ( fd ) == ( VAR_2 ) )  METHOD_2 ( )  VAR_3 . set ( VAR_4 . TRUE )  METHOD_3 ( )  VAR_3 . set ( VAR_4 . FALSE )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class<?> NAME target INIT = VAR_1 class TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( target , null , new java.lang.String [ ] { STRING_1 } ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_4 ( VAR_4 , VAR_5 , VAR_6 , 0 , VAR_2 )  VAR_3 . run ( null )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_3 ( VAR_7 class , ( ( target . getName ( ) ) + STRING_2 ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( VAR_8 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( VAR_1 . METHOD_4 ( ) )  VAR_4 = METHOD_5 ( new TYPE_1 ( VAR_1 . METHOD_6 ( ) , VAR_3 , VAR_2 ) , VAR_1 )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_2 == null  TYPE_4 . METHOD_4 ( context )  TYPE_5 . e ( STRING_1 , STRING_2 ) TYPE TYPE_6 NAME call INIT = VAR_2 . METHOD_5 ( ) COND call != null  call . METHOD_6 ( VAR_1 )  TYPE_3 . METHOD_2 ( ) . METHOD_7 ( false , false )
MODIFIER public static RETURN void NAME METHOD_1 TYPE android.content.Intent NAME VAR_1 COND ( VAR_2 ) == null  return ; TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( VAR_4 , ( - 1 ) )  VAR_5 = ( VAR_3 != ( VAR_6 ) ) && ( VAR_3 != ( VAR_7 ) )  TYPE_1 . METHOD_3 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2  android.util.Slog.w ( TYPE_3 . TAG , ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) + STRING_3 ) )  return VAR_2 != null ? VAR_3 . METHOD_2 ( VAR_1 . netId , VAR_2 ) : VAR_3 . METHOD_3 ( VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_2 . get ( id ) TYPE TYPE_1 NAME VAR_3 INIT = null COND r != null  VAR_3 = METHOD_2 ( r , VAR_1 ) COND VAR_1  VAR_2 . METHOD_3 ( r )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE android.os.Message NAME VAR_3  METHOD_2 ( )  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_1 , e , VAR_5 ) ; COND ! ( TYPE_3 . METHOD_3 ( context , VAR_6 ) )  METHOD_4 ( ( ( VAR_2 == ( VAR_7 ) ) && ( TYPE_3 . METHOD_5 ( context ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  i ++  VAR_1 . append ( CHAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . toString ( )  TYPE_2 . METHOD_2 ( VAR_4 )  VAR_5 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) , VAR_6 )  fail ( STRING_1 ) TYPE TYPE_4 NAME e BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME expected TYPE java.io.File NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE byte[] NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( expected )  TYPE_4 . METHOD_5 ( VAR_3 , VAR_2 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME id  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( id )  TYPE_1 . METHOD_5 ( id )  TYPE_2 . METHOD_6 ( id ) TYPE java.lang.Throwable NAME e  throw TYPE_1 . METHOD_7 ( e ) ;  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE long NAME when TYPE int NAME VAR_1 INIT = ( ( int ) ( when / INT_1 ) ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 ) COND VAR_2 < 0  VAR_2 = ( ~ VAR_2 ) - 1 COND VAR_2 < 0  return VAR_4 ;  return ( VAR_5 ) + ( ( VAR_6 [ ( ( VAR_7 [ VAR_2 ] ) & INT_2 ) ] ) * INT_1 ) ;
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE byte NAME VAR_1 TYPE byte[] NAME data COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( data ) TYPE android.os.Message NAME msg INIT = VAR_5 . METHOD_3 ( VAR_6 )  msg.arg1 = VAR_1  msg.obj = VAR_4  VAR_5 . METHOD_4 ( msg )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME node COND ! ( VAR_1 )  return new TYPE_1 ( ) ; TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) TYPE TYPE_3 NAME parent INIT = METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 COND parent != null  VAR_3 = parent . METHOD_2 ( )  VAR_2 . METHOD_4 ( VAR_3 )  parent = parent . METHOD_3 ( )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  assertEquals ( VAR_1 [ 0 ] . x , VAR_1 [ 0 ] . y )  assertEquals ( VAR_1 [ 1 ] . x , VAR_1 [ 1 ] . y )  METHOD_2 ( VAR_1 [ 2 ] . x , VAR_1 [ 2 ] . y )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME entry TYPE long NAME VAR_1 TYPE long NAME VAR_2 TYPE long NAME VAR_3 TYPE long NAME VAR_4 TYPE long NAME VAR_5  assertEquals ( VAR_1 , VAR_6 )  assertEquals ( VAR_2 , VAR_7 )  assertEquals ( VAR_3 , VAR_8 )  assertEquals ( VAR_4 , VAR_9 )  assertEquals ( VAR_5 , VAR_10 )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( )  METHOD_3 ( VAR_4 < java.lang.String > METHOD_4 ( ) , VAR_3 , VAR_2 , VAR_5 )  return METHOD_5 ( VAR_3 , new TYPE_3 ( ) , VAR_1 ) ;  VAR_3 . METHOD_6 ( )
MODIFIER private static RETURN java.io.File NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_5 . METHOD_3 ( ) TYPE TYPE_6 NAME VAR_3 INIT = new TYPE_6 ( VAR_2 , null )  VAR_1 . METHOD_4 ( VAR_3 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME METHOD_3 TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE long NAME VAR_2 INIT = METHOD_4 ( METHOD_5 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_6 ( VAR_2 , STRING_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 , STRING_4 )  VAR_1 . METHOD_7 ( VAR_3 )  VAR_1 . METHOD_7 ( new TYPE_2 ( 0 ) )  VAR_1 . METHOD_7 ( new TYPE_2 ( 1 ) )  VAR_1 . METHOD_7 ( VAR_4 )  METHOD_2 ( STRING_1 , STRING_2 , new TYPE_1 ( ) { public void METHOD_3 ( java.util.List < TYPE_2 > VAR_1 ) { long VAR_2 = METHOD_4 ( METHOD_5 ( ) ) ; TYPE_2 VAR_3 = METHOD_6 ( VAR_2 , STRING_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( VAR_2 , STRING_4 ) ; VAR_1 . METHOD_7 ( VAR_3 ) ; VAR_1 . METHOD_7 ( new TYPE_2 ( 0 ) ) ; VAR_1 . METHOD_7 ( new TYPE_2 ( 1 ) ) ; VAR_1 . METHOD_7 ( VAR_4 ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<?> NAME parent TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE long NAME id COND ( VAR_3 . METHOD_2 ( ) ) == 1 TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( METHOD_3 ( VAR_5 ) ) ) COND ( VAR_4 == null ) || ( ! ( VAR_4 . METHOD_4 ( ) ) )  VAR_6 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = new byte [ ] { INT_1 , - 100 , 3 , 0 , 0 , 0 , 0 , 1 } TYPE TYPE_1 NAME in INIT = new TYPE_2 ( new TYPE_3 ( VAR_1 ) )  assertEquals ( ( - 1 ) , in . METHOD_2 ( ) )  assertEquals ( ( - 1 ) , in . METHOD_2 ( ) )  assertEquals ( 0 , in . METHOD_3 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME index TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( index )  VAR_3 . METHOD_2 ( ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( TYPE_2 . TAG , ( ( ( STRING_1 + ( VAR_1 . callback ) ) + STRING_2 ) + ( VAR_1 . pkg ) ) )  VAR_2 . METHOD_3 ( index )  METHOD_4 ( VAR_4 ) COND ( VAR_2 . size ( ) ) > 0  METHOD_5 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.io.File NAME out TYPE java.util.List<TYPE_2> NAME VAR_2  VAR_3 COND ( VAR_4 . METHOD_2 ( ) ) || ( ! ( TYPE_3 . METHOD_3 ( ) ) )  return ;  VAR_4 . METHOD_4 ( VAR_1 )  VAR_4 . METHOD_5 ( out )  VAR_4 . METHOD_6 ( new TYPE_4 ( new TYPE_5 ( out ) ) )  TYPE_3 . METHOD_7 ( VAR_2 )
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.lang.String NAME path TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( path , VAR_2 ) TYPE java.util.Set<byte[]> NAME VAR_3 INIT = VAR_4 TYPE java.util.Set<java.lang.String> NAME VAR_5 INIT = new TYPE_2 < java.lang.String > ( ) TYPE byte[] NAME value IN VAR_3  VAR_5 . METHOD_2 ( new java.lang.String ( TYPE_3 . METHOD_3 ( value ) ) )  return VAR_5 ;
MODIFIER public synchronized RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  throw new java.io.IOException ( STRING_1 ) ; COND ( - 1 ) == ( VAR_2 )  throw new java.io.IOException ( STRING_2 ) ;  pos = VAR_2
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE int NAME userId COND VAR_1  TYPE_1 . d ( VAR_2 . TAG , ( ( ( STRING_1 + packageName ) + STRING_2 ) + userId ) ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( packageName , userId )  METHOD_3 ( packageName , userId , VAR_3 )  VAR_5 . METHOD_4 ( packageName , userId )
MODIFIER public RETURN byte[] NAME METHOD_1 TYPE byte[] NAME VAR_1 COND TYPE_1 . METHOD_2 ( context )  return VAR_2 . METHOD_3 ( VAR_3 , VAR_4 , VAR_1 ) ;  return VAR_2 . METHOD_3 ( VAR_4 , VAR_1 ) ; TYPE TYPE_2 NAME e  throw new TYPE_3 ( VAR_5 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME id  VAR_1 . METHOD_2 ( )  TYPE_1 . METHOD_3 ( id ) COND VAR_2  TYPE_1 . METHOD_4 ( id )  TYPE_1 . METHOD_5 ( id ) TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_6 ( e ) ;  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME path COND ( null == path ) || ( path . equals ( STRING_1 ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_2 ( ) ) == ( VAR_1 )  throw new TYPE_1 ( STRING_3 ) ;  METHOD_3 ( VAR_2 , path )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME b  VAR_1 . METHOD_2 ( ( ( byte ) ( b ) ) ) COND b == CHAR_1  out  TYPE_1 . METHOD_3 ( VAR_2 , out )  VAR_1 . METHOD_4 ( )  TYPE_1 . METHOD_3 ( VAR_1 , out )  VAR_1 . METHOD_5 ( ) COND ( VAR_1 . METHOD_6 ( ) ) == 1  METHOD_1 ( CHAR_1 )
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  log ( STRING_1 )  VAR_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , VAR_3 , null )  VAR_2 . METHOD_2 ( ) . METHOD_5 ( METHOD_4 ( ) , VAR_4 , null )  VAR_2 . METHOD_2 ( ) . METHOD_6 ( METHOD_4 ( ) , VAR_5 , null )  VAR_6 . METHOD_7 ( this )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName INIT = STRING_1 TYPE java.lang.String NAME VAR_1 INIT = ( packageName . METHOD_2 ( CHAR_1 , CHAR_2 ) ) + STRING_2 TYPE java.util.Map<java.lang.String,TYPE_1> NAME input INIT = TYPE_2 . METHOD_3 ( )  input . METHOD_4 ( STRING_3 , new TYPE_1 ( true ) . METHOD_5 ( STRING_4 , true ) )  METHOD_6 ( packageName , input )  METHOD_7 ( VAR_2 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME out TYPE java.lang.String NAME VAR_2 TYPE int NAME size COND out . METHOD_2 ( )  out . METHOD_3 ( java.lang.String.format ( STRING_1 , ( VAR_2 + STRING_2 ) , java.lang.Integer . METHOD_4 ( size ) ) )  out . METHOD_5 ( size )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( STRING_1 , STRING_3 )  assertEquals ( STRING_4 , TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_1 ) )  assertEquals ( STRING_5 , TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_2 ) )  assertEquals ( STRING_6 , TYPE_2 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_1 ) )  assertEquals ( STRING_6 , TYPE_2 . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_2 ) )
MODIFIER public RETURN boolean NAME METHOD_1 COND ( METHOD_2 ( ) ) == true COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 )  return true ;  return VAR_3 . METHOD_1 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_2 , e )  return false ;
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , VAR_1 . METHOD_2 ( ) )  VAR_2 . METHOD_3 ( true )  assertTrue ( STRING_2 , VAR_2 . METHOD_2 ( ) )  VAR_3 . METHOD_3 ( false )  assertFalse ( STRING_3 , VAR_3 . METHOD_2 ( ) )  VAR_2 . METHOD_4 ( )  VAR_2 . METHOD_5 ( ) . METHOD_6 ( )  VAR_3 . METHOD_4 ( )  VAR_3 . METHOD_5 ( ) TYPE java.lang.Throwable NAME expected BLOCK BLOCK
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( context ) COND VAR_2 == null  return false ; COND VAR_1 != ( VAR_3 )  return false ;  return ( context . METHOD_3 ( VAR_4 ) ) == ( VAR_5 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_1 COND ! ( VAR_2 . METHOD_2 ( test ) ) COND ( VAR_3 ) != null  VAR_3 . info ( java.lang.String.format ( STRING_1 , test . METHOD_3 ( ) , test . METHOD_4 ( ) , VAR_4 ) )  super . METHOD_1 ( test , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( null , TYPE_1 . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( )  TYPE_1 . METHOD_3 ( VAR_2 )  METHOD_4 ( VAR_2 , TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 ) TYPE TYPE_4 NAME VAR_3  assertNotNull ( TYPE_5 . METHOD_5 ( ) )  METHOD_4 ( VAR_1 , TYPE_1 . METHOD_2 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 , TYPE_2 . METHOD_2 ( ) , true ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( null , VAR_1 , VAR_3 , VAR_4 )  VAR_2 . METHOD_3 ( VAR_5 class , VAR_6 )  VAR_2 . METHOD_3 ( VAR_7 class , VAR_8 )  VAR_2 . METHOD_4 ( )  VAR_1 . METHOD_5 ( true ) TYPE java.lang.Exception NAME e  e . METHOD_6 ( )
MODIFIER private RETURN com.android.jack.ir.ast.JMethod NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_2 TYPE com.android.jack.ir.ast.JMethod NAME method INIT = null TYPE java.lang.String NAME VAR_3 INIT = ( new java.lang.String ( VAR_4 ) ) + ( new java.lang.String ( VAR_1 . METHOD_2 ( ) ) ) TYPE com.android.jack.ir.ast.JMethod NAME VAR_5 IN VAR_2 . METHOD_3 ( ) COND VAR_3 . equals ( TYPE_2 . METHOD_4 ( ) . getName ( VAR_5 ) )  method = VAR_5  break ;  return method ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_2 . METHOD_4 ( VAR_4 class ) TYPE java.util.ArrayList<TYPE_1> NAME VAR_5 INIT = new java.util.ArrayList < > ( )  VAR_5 . METHOD_5 ( VAR_3 )  TYPE_2 . when ( VAR_1 . METHOD_6 ( ) ) . thenReturn ( VAR_5 ) TYPE boolean NAME VAR_6 INIT = VAR_7 . METHOD_7 ( VAR_8 )  org.mockito.Mockito.verify ( VAR_9 ) . METHOD_8 ( VAR_1 , VAR_3 )  assertEquals ( VAR_6 , true )
MODIFIER public RETURN void NAME METHOD_1 COND METHOD_2 ( )  return ;  android.util.Log . i ( VAR_1 . TAG , STRING_1 )  METHOD_3 ( ) TYPE android.os.Message NAME msg INIT = android.os.Message . METHOD_4 ( VAR_2 , VAR_3 )  VAR_4 . METHOD_5 ( ) . METHOD_6 ( msg )  VAR_5 . METHOD_7 ( ) TYPE TYPE_1 NAME e  e . METHOD_8 ( )  org.junit.Assert.assertEquals ( VAR_6 , VAR_4 . METHOD_9 ( ) )
MODIFIER private RETURN java.io.File NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_4 . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_3 INIT = new TYPE_5 ( VAR_2 , VAR_4 , false , false )  VAR_1 . METHOD_4 ( VAR_3 , false )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME result TYPE TYPE_3 NAME rr INIT = VAR_2 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_3 )  ret = new TYPE_4 ( VAR_4 , VAR_5 , VAR_6 )  TYPE_5 . METHOD_3 ( VAR_7 , ret )  VAR_2 . METHOD_4 ( rr , VAR_1 , ret )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME request TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , STRING_1 )  VAR_4 . METHOD_2 ( ) TYPE byte[] NAME VAR_5 INIT = ( ( byte [ ] ) ( request . METHOD_3 ( VAR_6 ) ) ) COND ! ( TYPE_2 . equals ( VAR_5 , VAR_7 ) )  return VAR_8 ; TYPE java.io.IOException NAME e  return VAR_9 ;  VAR_1 . METHOD_4 ( VAR_10 , VAR_7 )  return VAR_11 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( STRING_1 ) TYPE byte[] NAME VAR_3 INIT = new byte [ 20 ] TYPE int NAME length INIT = VAR_2 . METHOD_4 ( VAR_3 ) TYPE java.lang.String NAME s INIT = new java.lang.String ( VAR_3 , 0 , length )  VAR_2 . METHOD_5 ( )
MODIFIER protected RETURN void NAME METHOD_1  METHOD_2 ( ( STRING_1 + ( this ) ) )  METHOD_3 ( ) COND VAR_1  VAR_2 class  ( VAR_3 ) --  METHOD_2 ( ( STRING_2 + ( VAR_3 ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config INIT = METHOD_2 ( ) . METHOD_3 ( ) COND ( ( ( VAR_1 ) == ( VAR_2 ) ) && ( ! ( VAR_3 ) ) ) && ( ( VAR_4 ) == null )  METHOD_4 ( ) COND ( VAR_4 ) != null  METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME v COND ! ( v . METHOD_2 ( ) )  return ; TYPE TYPE_2 NAME VAR_1 INIT = METHOD_3 ( v . METHOD_4 ( ) ) COND VAR_1 == null  v . METHOD_5 ( )  VAR_2 . METHOD_6 ( VAR_3 )  VAR_2 . METHOD_7 ( )  VAR_2 . METHOD_8 ( VAR_1 . name )  VAR_2 . METHOD_9 ( VAR_4 )  VAR_2 . METHOD_8 ( VAR_5 )  VAR_2 . METHOD_10 ( )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME type TYPE java.util.List<TYPE_2> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( type ) TYPE TYPE_2 NAME VAR_2 IN VAR_1 COND VAR_2 != ( VAR_3 ) COND type == ( VAR_4 )  return false ;  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  this COND ! ( VAR_1 )  VAR_1 = true  VAR_2 . METHOD_1 ( )  out . METHOD_1 ( ) TYPE java.io.IOException NAME x  VAR_3 = true  VAR_2 = null  VAR_4 = null  out = null
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 == null ) || ( ( VAR_1 . length ( ) ) == 0 )  return null ; TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( null , VAR_1 ) . getName ( VAR_3 )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME VAR_1  METHOD_2 ( VAR_1 , this ) NAME VAR_2  VAR_5 = VAR_6  break ;  VAR_5 = VAR_9  METHOD_3 ( VAR_1 )  break ;  METHOD_4 ( VAR_11 , VAR_12 )  return VAR_13 ;  VAR_5 = VAR_9  METHOD_3 ( VAR_1 )  break ;  VAR_5 = VAR_9  METHOD_3 ( VAR_1 )  break ;  return VAR_13 ;  return VAR_16 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  assertNotNull ( VAR_1 ) TYPE TYPE_2 NAME method INIT = TYPE_3 . METHOD_3 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 )  assertNotNull ( VAR_1 . METHOD_4 ( method , 2 , STRING_5 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) COND ! ( VAR_1 . METHOD_5 ( ) ) TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_6 ( ) . METHOD_7 ( )  assertTrue ( STRING_1 , ( ( VAR_2 >= 0 ) && ( VAR_2 <= INT_1 ) ) )
MODIFIER private final RETURN java.lang.String NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE int NAME VAR_3 COND VAR_1  VAR_3 = VAR_4  VAR_3 = VAR_5 COND ! ( TYPE_1 . METHOD_2 ( ) )  VAR_3 |= VAR_6  return TYPE_2 . METHOD_3 ( mContext , VAR_3 , VAR_2 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE char NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE boolean NAME VAR_4  VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) COND VAR_4  VAR_5 . METHOD_3 ( VAR_2 , VAR_3 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 INIT = STRING_1 . METHOD_2 ( ) TYPE TYPE_1 NAME os INIT = new TYPE_1 ( ) TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( os )  TYPE_2 . METHOD_4 ( VAR_2 , VAR_1 , 0 , VAR_1 . length )  assertEquals ( VAR_1 . length , os . size ( ) )  assertEquals ( TYPE_3 . toString ( VAR_1 ) , TYPE_3 . toString ( os . METHOD_5 ( ) ) )  TYPE_2 . METHOD_6 ( VAR_2 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File[] NAME VAR_1 TYPE java.io.File[] NAME VAR_2 TYPE java.io.File NAME VAR_3 TYPE boolean NAME VAR_4 TYPE boolean NAME VAR_5 TYPE float NAME VAR_6 TYPE TYPE_1 NAME VAR_7 TYPE TYPE_2[] NAME VAR_8  TYPE_3 . METHOD_1 ( new TYPE_4 ( ) , VAR_1 , VAR_2 , null , null , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_2 . METHOD_2 ( )  return null ; TYPE TYPE_2 NAME VAR_3 INIT = null TYPE TYPE_2 NAME r IN VAR_2 . METHOD_3 ( ) COND ( r . METHOD_4 ( ) ) == VAR_1 COND ( VAR_3 == null ) || ( ( r . METHOD_5 ( VAR_3 ) ) > 0 )  VAR_3 = r  return VAR_2 . get ( VAR_3 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE short NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( subId ) COND VAR_2 != null COND ! ( TYPE_2 . METHOD_3 ( mContext , VAR_1 , STRING_1 ) )  return null ;  return VAR_2 . METHOD_4 ( ) ;  loge ( STRING_2 )  return null ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( 9 , ( STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) ) , STRING_7 )  TYPE_1 . METHOD_2 ( STRING_8 , ( STRING_1 + ( ( ( STRING_9 + STRING_10 ) + STRING_11 ) + STRING_12 ) ) , STRING_13 )
MODIFIER public static RETURN float NAME METHOD_1 TYPE float NAME a TYPE float NAME b COND a != a  return a ; COND ( ( a == FLOAT_1 ) && ( b == FLOAT_1 ) ) && ( ( TYPE_1 . METHOD_2 ( b ) ) == ( VAR_1 ) )  return b ;  return a <= b ? a : b ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) )  verify ( VAR_3 , METHOD_5 ( 1 ) ) . METHOD_6 ( METHOD_7 ( ) )  verify ( VAR_4 , METHOD_5 ( 1 ) ) . METHOD_8 ( 0 )
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 COND ( VAR_1 ) == null TYPE java.io.File NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 != null TYPE TYPE_2 NAME log INIT = new TYPE_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , log )  VAR_1 = VAR_4 . METHOD_1 ( )  VAR_1 = new TYPE_1 [ 0 ]  return VAR_1 ;
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME method TYPE TYPE_1 NAME call TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( method , call )  method . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME name INIT = VAR_1 . METHOD_3 ( )  return name ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME response  VAR_2 . METHOD_2 ( VAR_1 , response ) TYPE TYPE_2 NAME request INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND request != null  VAR_4 = response  METHOD_4 ( VAR_1 , request )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE long NAME id TYPE TYPE_2 NAME VAR_1 IN VAR_2 . values ( ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( id ) COND VAR_3 != null  return VAR_3 ;  return METHOD_3 ( id ) ;
MODIFIER public static final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 TYPE TYPE_1 NAME VAR_3 COND VAR_4  TYPE_3 . d ( VAR_5 . TAG , STRING_1 )  TYPE_4 . METHOD_2 ( VAR_6 , STRING_2 )  TYPE_5 . METHOD_3 ( )  TYPE_5 . METHOD_4 ( )  TYPE_6 . METHOD_5 ( )  TYPE_5 . METHOD_6 ( VAR_1 , VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) . get ( VAR_1 )  assertNotNull ( VAR_2 ) TYPE TYPE_2 NAME p IN VAR_2  assertTrue ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) , p . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  TYPE_1 . when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( VAR_1 )  METHOD_3 ( )  assertTrue ( ( ( VAR_3 . METHOD_4 ( ) ) == null ) )  org.mockito.Mockito.verify ( VAR_2 , TYPE_1 . METHOD_5 ( ) ) . METHOD_2 ( )  METHOD_6 ( 4 , false , false )  assertEquals ( VAR_1 , VAR_3 . METHOD_4 ( ) )  org.mockito.Mockito.verify ( VAR_2 ) . METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( VAR_1 instanceof TYPE_4 )  throw new TYPE_3 ( STRING_1 ) ; TYPE TYPE_4 NAME VAR_3 INIT = ( ( TYPE_4 ) ( VAR_1 ) )  VAR_4 = new TYPE_5 ( VAR_3 . METHOD_2 ( ) , VAR_2 , VAR_3 . METHOD_3 ( ) , VAR_5 )  VAR_6 . METHOD_4 ( VAR_4 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE boolean NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( ) TYPE TYPE_2 NAME config INIT = TYPE_2 . METHOD_3 ( VAR_2 ) MODIFIER public RETURN void NAME run  config . METHOD_5 ( VAR_1 , true )  TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_2 , config , new java.lang.Runnable ( ) { public void run ( ) { config . METHOD_5 ( VAR_1 , true ) ; } } )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE java.util.Map NAME m TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = m . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_2 . METHOD_4 ( ) TYPE java.lang.Object NAME key INIT = VAR_2 . METHOD_5 ( )  VAR_1 . append ( ( ( ( key + STRING_1 ) + ( m . get ( key ) ) ) + STRING_2 ) )  return VAR_1 . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME i INIT = 0 COND i < INT_1  i ++ COND METHOD_2 ( )  TYPE_1 . d ( VAR_1 . TAG , STRING_1 )  return ;  TYPE_1 . d ( VAR_1 . TAG , STRING_2 )  TYPE_2 . METHOD_3 ( INT_2 )  throw new TYPE_3 ( STRING_3 ) ;
MODIFIER public RETURN void NAME run TYPE boolean NAME VAR_1 INIT = false  VAR_2 . METHOD_1 ( ) TYPE TYPE_1 NAME e  VAR_1 = true TYPE java.lang.IllegalArgumentException NAME e  VAR_1 = true  assertTrue ( VAR_1 )  assertFalse ( VAR_2 . METHOD_2 ( ) )  assertFalse ( VAR_2 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) ) ) . thenReturn ( VAR_2 )  assertFalse ( VAR_3 . METHOD_5 ( VAR_4 ) )  METHOD_6 ( )  assertTrue ( VAR_3 . METHOD_5 ( VAR_4 ) )  org.mockito.Mockito.verify ( VAR_1 ) . METHOD_2 ( org.mockito.Matchers.eq ( VAR_5 ) , org.mockito.Matchers.eq ( false ) , org.mockito.Matchers.eq ( false ) )
MODIFIER public RETURN void NAME METHOD_1 COND ( ! ( METHOD_2 ( ) ) ) || ( ! ( METHOD_3 ( ) ) )  TYPE_1 . METHOD_4 ( VAR_1 , STRING_1 )  return ;  METHOD_5 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 )  METHOD_7 ( VAR_2 , VAR_5 ) TYPE TYPE_2 NAME VAR_6 INIT = METHOD_6 ( VAR_2 )  TYPE_3 . METHOD_8 ( VAR_6 , VAR_4 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_3<java.lang.String> NAME VAR_2  return VAR_1 . METHOD_2 ( name ) ; TYPE java.lang.Throwable NAME e  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 , new TYPE_5 ( VAR_2 , e ) )  TYPE_4 . METHOD_3 ( ) . METHOD_6 ( )  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( TYPE_2 . equals ( VAR_2 , VAR_1 ) ) COND VAR_1 != null  VAR_1 . METHOD_2 ( VAR_3 )  VAR_1 . METHOD_3 ( )  VAR_2 = VAR_1  TYPE_3 . d ( this , STRING_1 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME device INIT = VAR_2 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( VAR_1 , STRING_1 )  assertTrue ( METHOD_5 ( VAR_1 , STRING_1 ) )  TYPE_3 . METHOD_6 ( VAR_1 , STRING_1 )  assertFalse ( METHOD_5 ( VAR_1 , STRING_1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) , TYPE_5 . METHOD_4 ( s ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 )  return false ; COND VAR_1 == ( VAR_3 )  return false ; COND ( ( ( VAR_1 == ( VAR_4 ) ) || ( VAR_1 == ( VAR_5 ) ) ) || ( VAR_1 == ( VAR_6 ) ) ) || ( VAR_1 == ( VAR_7 ) )  return false ;  return true ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME uid TYPE java.lang.String[] NAME VAR_1 INIT = mContext . METHOD_2 ( ) . METHOD_3 ( uid ) TYPE int NAME userId INIT = TYPE_1 . METHOD_4 ( uid ) TYPE java.lang.String NAME packageName IN VAR_1 COND ! ( VAR_2 . METHOD_5 ( packageName , uid , userId ) )  return false ;  return true ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 COND VAR_2 > VAR_3  throw new java.lang.IllegalArgumentException ( ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_3 ) + STRING_3 ) ) ; COND VAR_2 < 0  throw new TYPE_1 ( VAR_2 ) ; COND VAR_3 > VAR_1  throw new TYPE_1 ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE int NAME type TYPE int NAME VAR_2  VAR_3 NAME type COND ( ( VAR_5 ) != ( VAR_6 ) ) && ( ( VAR_5 ) != ( VAR_7 ) )  throw new TYPE_1 ( ( STRING_1 + ( VAR_5 ) ) ) ;  VAR_5 = VAR_8  break ;  VAR_5 = VAR_6  break ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type COND type == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_1 NAME result INIT = VAR_1 . get ( type ) COND result == null  result = new TYPE_1 ( new TYPE_3 ( type ) )  VAR_1 . METHOD_3 ( type , result )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  super . METHOD_1 ( VAR_1 ) COND ( output ) == null  return ;  METHOD_2 ( ) COND VAR_1 == null  VAR_2 = new TYPE_3 ( output )  VAR_2 = new TYPE_3 ( output , VAR_1 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 COND VAR_2 != null  throw new TYPE_4 ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) . getName ( ) ) ) ) ;  METHOD_3 ( VAR_1 , key )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME VAR_1 TYPE long NAME context TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) ) COND ! ( VAR_4 )  assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_5 ) ) )  super . METHOD_1 ( session , VAR_1 , context , VAR_2 , fd , callback )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( )  TYPE_2 . METHOD_5 ( VAR_1 )  TYPE_3 . get ( VAR_2 ) . METHOD_6 ( VAR_1 )  METHOD_7 ( )  VAR_3 = METHOD_8 ( )
MODIFIER protected static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_1 . size ( ) TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( ( ( VAR_2 * 5 ) + 2 ) )  sb.append ( CHAR_1 ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++ COND i != 0  sb.append ( STRING_1 )  sb.append ( VAR_1 . get ( i ) . METHOD_2 ( ) )  sb.append ( CHAR_2 )  return sb . toString ( ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME provider TYPE int NAME VAR_1  VAR_2 TYPE int NAME size INIT = VAR_2 . size ( ) COND ( VAR_1 < 1 ) || ( VAR_1 > size )  VAR_1 = size + 1  VAR_2 . METHOD_2 ( ( VAR_1 - 1 ) , provider )  VAR_3 . METHOD_3 ( provider . getName ( ) , provider )  TYPE_2 . METHOD_4 ( )  return VAR_1 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.lang.Object NAME value INIT = TYPE_1 . METHOD_1 ( new TYPE_2 ( VAR_1 ) ) COND value instanceof java.lang.Integer  return ( ( java.lang.Integer ) ( value ) ) . METHOD_2 ( ) ; COND value instanceof java.lang.String THEN THEN TYPE TYPE_3 NAME e BLOCK BLOCK TYPE TYPE_4 NAME e  throw new java.lang.RuntimeException ( e ) ;  return 1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( this )  VAR_1 . METHOD_3 ( VAR_2 ) COND ( VAR_3 ) != null  VAR_1 . METHOD_3 ( VAR_3 ) COND ( VAR_4 ) != null  VAR_1 . METHOD_3 ( VAR_4 )  VAR_1 . METHOD_4 ( this )
MODIFIER private RETURN long NAME METHOD_1 TYPE int NAME subId TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_4 ) TYPE long NAME VAR_5 INIT = VAR_2 . METHOD_4 ( ( ( VAR_6 ) + subId ) , VAR_7 ) COND ( VAR_5 == ( VAR_7 ) ) && VAR_1  VAR_5 = METHOD_5 ( subId ) COND VAR_5 != ( VAR_7 )  METHOD_6 ( VAR_5 , subId )  METHOD_7 ( subId )  return VAR_5 ;
MODIFIER public RETURN byte[] NAME METHOD_1 COND ( VAR_1 ) != null  return VAR_1 . METHOD_1 ( ) ; TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_2 ( )  VAR_2 COND METHOD_3 ( ) COND TYPE_2 . METHOD_4 ( VAR_3 ) TYPE byte[] NAME VAR_4 INIT = VAR_5  VAR_5 = null  return VAR_4 ;  return null ;  return null ;
MODIFIER public static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<java.lang.String> NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE java.util.List<TYPE_1> NAME result INIT = new java.util.ArrayList < > ( ) TYPE java.lang.String NAME VAR_4 IN VAR_2  result . METHOD_3 ( new TYPE_4 ( VAR_1 , VAR_4 , VAR_3 ) )  return TYPE_5 . METHOD_4 ( result ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) instanceof TYPE_2 TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 ) )  return VAR_2 . METHOD_2 ( ) ; TYPE TYPE_3 NAME VAR_3 INIT = ( ( TYPE_3 ) ( VAR_1 ) )  return ( ( TYPE_1 ) ( VAR_3 . METHOD_3 ( ) . METHOD_2 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( null , STRING_1 , VAR_3 . TAG , null , null , null , null , false , ( - 1 ) , false , ( - 1 ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 0 ) ) . METHOD_5 ( org.mockito.Matchers . METHOD_6 ( ) , org.mockito.Matchers . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_7 ( ) , org.mockito.Matchers . METHOD_8 ( VAR_5 class ) )
MODIFIER protected RETURN boolean NAME METHOD_1 COND VAR_1  METHOD_2 ( )  VAR_1 = false COND ( VAR_2 ) != null TYPE java.util.List<android.bluetooth.BluetoothDevice> NAME VAR_3 INIT = METHOD_3 ( ) TYPE android.bluetooth.BluetoothDevice NAME VAR_4 IN VAR_3  METHOD_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 )  VAR_2 . METHOD_5 ( ) COND ( VAR_9 ) != null  VAR_9 . METHOD_5 ( )  return true ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return ; TYPE TYPE_2 NAME VAR_6 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND VAR_6 == null  return ; TYPE TYPE_1 NAME VAR_7 INIT = VAR_5 . METHOD_2 ( VAR_3 )  VAR_4 . METHOD_3 ( VAR_6 , VAR_7 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( method . METHOD_1 ( ) ) || ( method . METHOD_2 ( ) ) ) || ( ! ( VAR_1 . METHOD_3 ( this . METHOD_4 ( ) , method ) ) )  return ; TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_2 INIT = method . METHOD_5 ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_3 , method )  VAR_4 . METHOD_3 ( method )  VAR_3 . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME state  VAR_1  android.util.Log . i ( VAR_2 , ( STRING_1 + state ) )  VAR_3 = state COND ! state COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( )  METHOD_3 ( )  VAR_1  VAR_5 = true
MODIFIER public RETURN void NAME METHOD_1  f = java.io.File . METHOD_2 ( STRING_1 , STRING_2 ) TYPE java.lang.String NAME VAR_1 INIT = f . METHOD_3 ( )  VAR_2 = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_1 ( STRING_3 )  VAR_2 . METHOD_4 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_3 , VAR_4 ) COND VAR_2 . METHOD_2 ( )  VAR_1 = VAR_5 . METHOD_3 ( VAR_2 , false )  VAR_5 . METHOD_4 ( this , VAR_3 , ( STRING_1 + ( VAR_3 . METHOD_5 ( ) ) ) )  return null ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Runnable NAME r  VAR_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( )  VAR_1 . METHOD_2 ( STRING_2 )  Main . METHOD_4 ( r )  VAR_1 . METHOD_2 ( STRING_3 )  METHOD_5 ( )  VAR_1 . METHOD_2 ( STRING_4 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE long NAME VAR_1 TYPE TYPE_1 NAME VAR_2  TYPE_2 . METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 IN VAR_2  assertTrue ( VAR_3 . METHOD_3 ( ) ) TYPE TYPE_3 NAME VAR_4  fail ( STRING_1 )
MODIFIER public RETURN java.lang.String NAME toString COND ( - 1 ) == ( VAR_1 )  return super . toString ( ) ;  return type . get ( new TYPE_1 ( VAR_2 [ VAR_1 ] , VAR_3 . values [ VAR_1 ] ) ) . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( new TYPE_2 ( ) , STRING_1 . METHOD_5 ( ) ) TYPE TYPE_3 NAME expected BLOCK BLOCK  VAR_1 . METHOD_6 ( null , STRING_1 . METHOD_5 ( ) )  VAR_1 . METHOD_4 ( null , STRING_1 . METHOD_5 ( ) )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE java.io.IOException NAME expected BLOCK BLOCK
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME offset TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE int NAME line INIT = VAR_1 . METHOD_3 ( offset ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_4 ( line ) TYPE int NAME VAR_4 INIT = ( ( int ) ( VAR_1 . METHOD_5 ( offset ) ) )  return METHOD_6 ( ( VAR_4 + ( VAR_2 . METHOD_7 ( ) ) ) , ( VAR_3 + ( VAR_2 . METHOD_8 ( ) ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME state TYPE java.lang.Object NAME arg TYPE TYPE_2 NAME VAR_1 INIT = mContext . METHOD_2 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = mContext . METHOD_2 ( VAR_4 )  state . value = METHOD_3 ( ) . METHOD_4 ( )  VAR_5 = mContext . METHOD_5 ( VAR_6 )  VAR_7 = new TYPE_3 ( ( state . value ? VAR_1 : VAR_3 ) )  VAR_8 = VAR_9 class . getName ( )  VAR_10 = VAR_5
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == ( VAR_2 )  throw new TYPE_2 ( ) ; TYPE TYPE_1 NAME result INIT = VAR_3 [ VAR_1 ] COND ( ( VAR_4 ) != ( VAR_2 ) ) || ( result == null )  throw new TYPE_3 ( ) ;  VAR_5 = VAR_1  VAR_1 = ( ( VAR_1 ) + 1 ) & ( ( VAR_3 . length ) - 1 )  return result ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND VAR_1 . METHOD_2 ( )  return STRING_1 ; TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_1 ( this ) COND ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_2 ( ) )  throw new TYPE_2 ( ( STRING_2 + ( this ) ) , ( STRING_3 + ( this ) ) , STRING_4 ) ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_3 . METHOD_3 ( ) , null ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . METHOD_5 ( VAR_2 , true )  METHOD_6 ( VAR_1 , VAR_3 , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME id TYPE TYPE_1 NAME status TYPE short NAME VAR_1 COND VAR_2  android.util.Log.v ( TYPE_2 . TAG , ( ( ( ( ( STRING_1 + id ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( status ) ) ) + STRING_3 ) + VAR_1 ) ) COND ( status . status ) == ( VAR_3 )  VAR_4 . METHOD_3 ( id , true , VAR_1 )  VAR_4 . METHOD_4 ( id , true , status . status )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_2 ) )  org.mockito.Mockito.verify ( VAR_3 , TYPE_1 . METHOD_4 ( 0 ) ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_7 ( ) )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 0 ) ) . METHOD_8 ( 1 )  org.mockito.Mockito.verify ( VAR_4 , TYPE_1 . METHOD_4 ( 0 ) ) . METHOD_9 ( FLOAT_1 )
MODIFIER static RETURN void NAME METHOD_1 TYPE java.lang.Class<?extendsTYPE_1> NAME VAR_1 TYPE java.lang.StringBuilder NAME VAR_2 TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 ) )  TYPE_5 . METHOD_4 ( VAR_3 , VAR_4 ) TYPE TYPE_2 NAME VAR_5 IN VAR_3  TYPE_6 . METHOD_1 ( VAR_5 , VAR_2 , VAR_6 )
MODIFIER public RETURN android.bluetooth.BluetoothDevice NAME METHOD_1 COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return null ; COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , ( STRING_2 + ( service . METHOD_3 ( ) ) ) )  return service . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 TYPE TYPE_2 NAME listener COND VAR_2  android.util.Log.w ( VAR_3 . TAG , STRING_1 )  return ; TYPE TYPE_3 NAME VAR_4 INIT = VAR_5 . get ( ) COND VAR_4 == null  android.util.Log.w ( VAR_3 . TAG , STRING_2 )  return ;  VAR_4 . METHOD_1 ( VAR_6 , VAR_7 , VAR_1 , listener )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return 0 ;  return VAR_5 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = 0 COND VAR_1 != null NAME VAR_3  VAR_2 = INT_1 * INT_2  break ;  VAR_2 = INT_1 * 10  break ;  VAR_2 = INT_1  break ;  VAR_2 *= VAR_7  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME field TYPE TYPE_2 NAME value COND field == null  throw new java.lang.NullPointerException ( STRING_1 ) ; COND ( VAR_1 ) != null  throw new TYPE_3 ( STRING_2 ) ;  VAR_2 . METHOD_2 ( field )  VAR_3 . METHOD_3 ( field , value )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME c INIT = null  c = context . METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_2 , null , null , null ) TYPE boolean NAME VAR_3 INIT = ( c . METHOD_4 ( ) ) > 0  TYPE_3 . METHOD_5 ( context , VAR_3 )  return VAR_3 ; COND c != null  c . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  super . METHOD_1 ( VAR_2 , s , VAR_2 , VAR_1 , fd , callback )  VAR_3 [ 0 ] = session
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME slotId TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE android.os.Message NAME VAR_4  VAR_5 TYPE TYPE_1 NAME VAR_6 INIT = METHOD_2 ( slotId , VAR_1 ) COND VAR_6 != null  VAR_6 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE byte NAME VAR_1 TYPE byte NAME VAR_2 TYPE byte[] NAME data COND VAR_3  android.util.Log.v ( VAR_4 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) TYPE TYPE_1 NAME VAR_5 INIT = TYPE_1 . METHOD_2 ( data ) TYPE android.os.Message NAME msg INIT = VAR_6 . METHOD_3 ( VAR_7 )  msg.arg1 = VAR_1  VAR_8 = VAR_2  msg.obj = VAR_5  VAR_6 . METHOD_4 ( msg )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME c TYPE int NAME s INIT = super . METHOD_1 ( c ) COND ( VAR_1 ) != null  TYPE_2 . METHOD_2 ( s , VAR_1 ) COND ( VAR_2 ) != null  TYPE_2 . METHOD_3 ( s , VAR_2 ) COND VAR_3  TYPE_2 . METHOD_4 ( s )  return s ;
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3 NAME VAR_1  break ;  VAR_2 = VAR_4  break ;  android.util.Log.e ( VAR_5 , STRING_1 )  break ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE char NAME VAR_1 COND ( VAR_2 ) != null  this . VAR_2 [ 0 ] = VAR_1 COND ( TYPE_1 . METHOD_2 ( VAR_1 , 10 ) ) == 0 TYPE int NAME i INIT = 1 COND i < 10  i ++  this . VAR_2 [ i ] = ( ( char ) ( VAR_1 + i ) )  this . VAR_1 = VAR_1
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( this ) == obj  return true ; COND ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) )  return false ; TYPE TYPE_1 NAME b INIT = ( ( TYPE_1 ) ( obj ) )  return ( VAR_1 ) == ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME element TYPE int NAME size INIT = VAR_2 . size ( ) COND VAR_1 < 0  VAR_1 = size + VAR_1 COND VAR_1 == size  METHOD_2 ( element )  VAR_2 . METHOD_3 ( VAR_1 , METHOD_4 ( ) )  element . METHOD_5 ( this )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME VAR_2 TYPE TYPE_2 NAME VAR_3 IN VAR_1 COND ! ( TYPE_3 . METHOD_2 ( ( ( TYPE_4 ) ( VAR_3 ) ) ) )  VAR_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.Integer> NAME e INIT = new TYPE_1 < java.lang.Integer > ( 10 )  e . METHOD_2 ( 1 )  assertEquals ( ( ( long ) ( e . size ( ) ) ) , ( ( long ) ( 1 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) COND ( VAR_4 ) != null  VAR_4 . METHOD_2 ( )  VAR_4 = null  android.util.Log.w ( VAR_3 . TAG , STRING_2 )  VAR_5 . METHOD_3 ( )  VAR_6 . METHOD_4 ( VAR_1 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( mContext , VAR_2 ) TYPE byte[] NAME data INIT = VAR_1 . METHOD_1 ( ) COND data != null COND VAR_3  android.util.Log.d ( VAR_4 . TAG , STRING_1 )  METHOD_2 ( data , data . length )  METHOD_3 ( VAR_5 , 0 , null ) COND data == null  VAR_6 . METHOD_4 ( VAR_7 , VAR_8 )  VAR_9 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) )  METHOD_6 ( )  METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_8 ( TYPE_1 . METHOD_3 ( ) )  METHOD_9 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_10 ( TYPE_1 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME error TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Throwable NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = METHOD_1 ( VAR_2 )  TYPE_1 . log ( VAR_3 , STRING_1 , VAR_5 , VAR_4 ) COND VAR_3 != null  VAR_6 = true  METHOD_2 ( VAR_1 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 COND ! ( VAR_1 )  android.util.Log.w ( VAR_2 , STRING_1 )  VAR_1 = false COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( METHOD_3 ( ) . getName ( ) , VAR_4 ) COND ! ( METHOD_4 ( ) )  android.util.Log.e ( VAR_2 , STRING_2 ) COND ( VAR_5 ) != null  METHOD_5 ( ) . METHOD_6 ( VAR_5 )  VAR_5 = null  METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME provider  provider . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) )  provider . METHOD_2 ( STRING_3 , STRING_4 )  provider . METHOD_2 ( ( STRING_5 + ( VAR_2 ) ) , STRING_4 )  provider . METHOD_2 ( STRING_6 , ( ( VAR_1 ) + STRING_7 ) )  METHOD_3 ( provider , STRING_8 , ( ( VAR_1 ) + STRING_9 ) , ( ( VAR_1 ) + STRING_10 ) )  METHOD_4 ( provider , STRING_8 , VAR_3 )
MODIFIER private RETURN com.android.jack.ir.ast.JDefinedClassOrInterface NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_4 NAME type INIT = METHOD_2 ( VAR_1 , session . METHOD_3 ( ) ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_5 . METHOD_4 ( TYPE_5 . METHOD_5 ( type . METHOD_6 ( ) ) ) TYPE TYPE_6 NAME VAR_3 INIT = session . METHOD_7 ( ) . METHOD_8 ( VAR_2 ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_4 INIT = type . METHOD_1 ( VAR_3 , this )  return VAR_4 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME action NAME action  METHOD_2 ( VAR_2 )  ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_3 ( VAR_4 . TRUE )  break ; TYPE long NAME VAR_6 INIT = TYPE_2 . METHOD_4 ( VAR_7 , VAR_8 )  METHOD_5 ( VAR_2 , VAR_6 )  ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_3 ( VAR_4 . FALSE )  break ;  TYPE_3 . e ( VAR_9 , ( STRING_1 + action ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME offset TYPE long NAME value COND ( value < 0 ) || ( value > INT_1 )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + value ) ) ;  VAR_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( ) ) + offset ) , ( ( int ) ( value ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null  throw new TYPE_3 ( STRING_1 ) ;  return VAR_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( ) ) ; TYPE TYPE_4 NAME e  android.util.Log.w ( VAR_5 , STRING_2 )  VAR_1 = null  throw new TYPE_2 ( VAR_6 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_5 , ( STRING_3 + e ) )  throw new TYPE_2 ( VAR_7 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME content TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( path , content )  TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 < java.lang.String > of ( ) )
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_3 NAME pos TYPE TYPE_4 NAME VAR_3 INIT = METHOD_1 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_1 ( ) TYPE boolean NAME VAR_5 INIT = VAR_4 . equals ( VAR_3 ) COND ! VAR_5  METHOD_2 ( VAR_4 )  format ( VAR_1 . METHOD_3 ( ) , VAR_2 , pos ) COND ! VAR_5  METHOD_2 ( VAR_3 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_4 ( c )  assertTrue ( ( ( TYPE_1 . METHOD_2 ( s ) ) != 0 ) )  TYPE_1 . METHOD_5 ( s )  TYPE_1 . METHOD_6 ( c )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME type TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = METHOD_2 ( VAR_1 , type ) COND ( VAR_2 != null ) && ( ! ( VAR_2 . METHOD_3 ( ) ) )  return VAR_2 . get ( 0 ) ;  TYPE_3 . e ( this , new java.lang.Exception ( ) , ( ( STRING_1 + VAR_1 ) + STRING_2 ) )  return new TYPE_1 ( VAR_1 , false , type ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( VAR_4 class )  VAR_3 . METHOD_5 ( VAR_1 , VAR_2 , false )  METHOD_6 ( VAR_2 , VAR_5 , STRING_3 , false )  METHOD_6 ( VAR_2 , VAR_6 , STRING_4 , false )  METHOD_6 ( VAR_2 , VAR_7 , STRING_5 , false )  METHOD_6 ( VAR_2 , VAR_8 , STRING_6 , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME config  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) TYPE boolean NAME result INIT = false TYPE TYPE_2 NAME service INIT = VAR_2 COND service != null  result = service . METHOD_1 ( config ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 ) COND RIL . RILJ_LOGD  VAR_2 . METHOD_3 ( VAR_3 )  VAR_2 . METHOD_4 ( false , null )  VAR_2 . METHOD_5 ( VAR_4 , null )  VAR_2 . METHOD_6 ( )  VAR_2 . METHOD_7 ( INT_1 )  VAR_2 . METHOD_8 ( true )
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( VAR_4 ) COND VAR_3 != 4  throw new java.io.IOException ( STRING_1 ) ; TYPE TYPE_3 NAME b INIT = TYPE_3 . METHOD_3 ( VAR_4 )  return b . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 )  assertEquals ( 0 , TYPE_1 . METHOD_3 ( VAR_1 ) ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( STRING_2 )  assertEquals ( 16 , TYPE_1 . METHOD_3 ( VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  METHOD_3 ( true )  METHOD_4 ( false )  METHOD_5 ( VAR_1 , false )  METHOD_6 ( false )  assertEquals ( VAR_2 , TYPE_1 . METHOD_7 ( mContext , VAR_3 , VAR_4 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME w TYPE int NAME h TYPE int NAME d TYPE short[] NAME data  mRS . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , w , h , d )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , data , ( ( data . length ) * 2 ) )
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) COND ! ( VAR_2 )  TYPE_1 . METHOD_3 ( )  TYPE_1 . METHOD_4 ( )  VAR_2 = true  VAR_1 . METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE java.lang.String NAME VAR_4  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 )  TYPE_2 . METHOD_2 ( VAR_3 , VAR_4 )  METHOD_3 ( VAR_1 , VAR_2 )  METHOD_3 ( VAR_3 , VAR_4 )  METHOD_4 ( VAR_2 , VAR_4 )
MODIFIER private RETURN long NAME METHOD_1 COND ( VAR_1 ) == null  return - INT_1 ; COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 )  return - INT_1 ; COND METHOD_3 ( VAR_1 )  return ( ( TYPE_1 . METHOD_4 ( ) ) - ( VAR_3 ) ) + ( VAR_1 . METHOD_2 ( ) ) ;  return - INT_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( false )  VAR_1 . METHOD_4 ( ) . METHOD_5 ( null )  METHOD_6 ( VAR_1 . METHOD_7 ( ) )  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME uri TYPE java.lang.String NAME VAR_1 COND uri == null  throw new java.lang.NullPointerException ( STRING_1 ) ; COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_2 ) ; TYPE int NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == 0  return - 1 ;  return TYPE_1 . METHOD_1 ( VAR_2 , uri , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  android.util.Slog.v ( com.android.server.am.ActivityManagerService.TAG , ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_2 . METHOD_2 ( ) ) ) )  this  METHOD_3 ( VAR_3 , VAR_4 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , false , null )  assertEquals ( 1 , VAR_1 . size ( ) )  assertEquals ( VAR_3 , VAR_1 . get ( 0 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 )  ( VAR_3 ) ++ COND ! ( VAR_4 )  METHOD_4 ( ( ( VAR_1 . getName ( ) ) + STRING_1 ) )
MODIFIER protected RETURN boolean NAME METHOD_1  METHOD_2 ( VAR_1 ) COND ( VAR_2 ) != null  VAR_2 . METHOD_1 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( )  VAR_3 = null  TYPE_1 . METHOD_3 ( )  return true ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( ) TYPE int NAME VAR_2 INIT = ( VAR_3 . METHOD_3 ( ) . size ( ) ) + ( VAR_3 . METHOD_4 ( ) . size ( ) ) COND VAR_4  android.util.Log.d ( VAR_5 . TAG , ( STRING_1 + VAR_2 ) ) TYPE TYPE_2 NAME app INIT = null  app = VAR_6 . METHOD_5 ( VAR_7 ) COND app != null  app . METHOD_6 ( )  VAR_3 . METHOD_1 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 TYPE java.io.File NAME VAR_4 IN VAR_1 . METHOD_2 ( ) COND VAR_4 . METHOD_3 ( )  METHOD_1 ( VAR_4 , VAR_2 , VAR_3 ) TYPE java.lang.String NAME path INIT = VAR_4 . METHOD_4 ( ) COND ( VAR_4 . getName ( ) . METHOD_5 ( VAR_2 ) ) && ( ! ( VAR_3 . METHOD_6 ( path ) ) )  VAR_3 . METHOD_7 ( path )
MODIFIER public RETURN void NAME run  VAR_1 . METHOD_1 ( this ) TYPE boolean NAME VAR_2  VAR_3  VAR_2 = METHOD_2 ( packageName , userId )  METHOD_3 ( packageName , false ) COND VAR_4 != null  VAR_4 . METHOD_4 ( packageName , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log . i ( com.android.server.pm.PackageManagerService.TAG , STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) . METHOD_3 ( STRING_5 ) . METHOD_4 ( true ) . build ( )  METHOD_1 ( VAR_1 , false ) COND VAR_2  METHOD_1 ( VAR_1 , true )
MODIFIER public final RETURN TYPE_1 NAME call TYPE TYPE_1 NAME result INIT = METHOD_1 ( )  METHOD_2 ( STRING_1 )  return result ; TYPE TYPE_2 NAME VAR_1  METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) TYPE java.lang.Throwable NAME t  METHOD_5 ( t )  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 MODIFIER public RETURN java.lang.String NAME METHOD_2  return VAR_1 ; INIT = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } }  VAR_2 . METHOD_3 ( VAR_6 , new TYPE_2 ( STRING_3 ) , STRING_4 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  m . METHOD_2 ( )  assertFalse ( m . METHOD_3 ( true , null , new TYPE_1 [ 0 ] ) )  assertFalse ( m . METHOD_4 ( true ) )  assertEquals ( ( STRING_1 + STRING_2 ) , METHOD_5 ( m , true ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME device INIT = VAR_2 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( VAR_1 , STRING_1 )  TYPE_4 . METHOD_5 ( VAR_1 , STRING_2 )  device . METHOD_6 ( new TYPE_5 ( ) . METHOD_7 ( STRING_3 ) ) . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) )  server . METHOD_4 ( ) TYPE TYPE_2 NAME url INIT = new TYPE_2 ( STRING_2 , server . METHOD_5 ( ) , server . METHOD_6 ( ) , STRING_3 )  assertEquals ( STRING_1 , METHOD_7 ( url . METHOD_8 ( ) . METHOD_9 ( ) , VAR_1 ) ) TYPE TYPE_3 NAME request INIT = server . METHOD_10 ( )  assertEquals ( STRING_4 , request . METHOD_11 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . get ( new TYPE_2 ( STRING_1 , STRING_2 ) )  assertEquals ( STRING_3 , VAR_2 [ 1 ] )  assertEquals ( STRING_4 , VAR_3 [ 1 ] )  assertEquals ( STRING_4 , VAR_4 [ 1 ] )  assertEquals ( STRING_5 , VAR_5 [ 1 ] )  assertEquals ( STRING_6 , VAR_6 [ 1 ] )  assertEquals ( STRING_7 , VAR_7 [ 1 ] )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1  TYPE_3 . i ( VAR_2 , ( STRING_1 + VAR_1 ) ) TYPE java.io.File NAME VAR_3 INIT = new java.io.File ( VAR_1 , VAR_4 ) COND ! ( VAR_3 . METHOD_2 ( ) )  throw new TYPE_2 ( ( STRING_2 + VAR_3 ) ) ; TYPE byte[] NAME VAR_5 INIT = TYPE_4 . METHOD_3 ( VAR_3 , VAR_6 )  return TYPE_1 . METHOD_4 ( VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE int NAME status INIT = ( VAR_1 ) ? VAR_2 : VAR_3 TYPE int NAME subId INIT = METHOD_2 ( )  TYPE_1 . d ( VAR_4 , ( ( ( ( STRING_1 + status ) + STRING_2 ) + ( VAR_5 ) ) + subId ) ) TYPE TYPE_2 NAME VAR_6 INIT = TYPE_3 . METHOD_3 ( mContext ) TYPE TYPE_4 NAME VAR_7 INIT = VAR_6 . METHOD_4 ( )  VAR_7 . METHOD_5 ( ( ( VAR_5 ) + subId ) , status )  VAR_7 . METHOD_6 ( )
MODIFIER private static RETURN double NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 INIT = INT_1 TYPE double NAME VAR_3 INIT = ( VAR_1 . METHOD_2 ( VAR_4 ) ) / INT_2  return ( VAR_3 / ( ( ( ( double ) ( VAR_2 ) ) / 8 ) / INT_3 ) ) / ( INT_4 * INT_4 ) ;
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) COND VAR_1 . METHOD_3 ( )  VAR_2 . METHOD_4 ( VAR_1 . get ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 . size ( ) ) TYPE java.lang.String NAME VAR_4 IN VAR_2  METHOD_5 ( VAR_4 , VAR_3 ) TYPE boolean NAME VAR_5 INIT = ( VAR_2 . size ( ) ) > 0  return VAR_5 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE android.content.Intent NAME VAR_3 INIT = new android.content.Intent ( VAR_4 )  VAR_3 . METHOD_2 ( VAR_5 , device )  VAR_3 . METHOD_2 ( VAR_6 , VAR_1 ) COND VAR_2 != null  VAR_3 . METHOD_2 ( VAR_7 , VAR_2 )  VAR_8 . METHOD_3 ( VAR_3 , VAR_9 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_4 NAME location INIT = VAR_2 . METHOD_2 ( ) TYPE java.lang.Object NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) COND VAR_4 instanceof TYPE_5 COND context . METHOD_4 ( ) . METHOD_5 ( VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) )  return ;  context . METHOD_1 ( VAR_1 , location , VAR_3 , null )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME parent  parent . METHOD_2 ( new TYPE_3 ( 1 , false ) ) TYPE TYPE_2 NAME c INIT = new TYPE_2 ( parent , VAR_1 )  c . METHOD_2 ( new TYPE_3 ( 1 , false ) )  c . METHOD_3 ( new TYPE_4 ( VAR_2 ) )  METHOD_4 ( c )  METHOD_5 ( c )  METHOD_6 ( )  return c ;
MODIFIER private synchronized RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE int NAME VAR_1 INIT = - 1 TYPE TYPE_2<java.lang.Integer,TYPE_1> NAME entry IN VAR_2 . METHOD_2 ( ) COND entry . METHOD_3 ( ) . METHOD_4 ( ) . equals ( packageName )  VAR_1 = entry . METHOD_5 ( )  break ; COND VAR_1 != ( - 1 )  return VAR_2 . METHOD_6 ( VAR_1 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 COND ( VAR_5 ) == null  VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_4 , VAR_3 )  VAR_5 . set ( VAR_1 , VAR_2 , VAR_4 , VAR_3 ) COND ( VAR_6 ) != null  VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_1 TYPE TYPE_3<TYPE_4> NAME VAR_3  VAR_4  VAR_3 = VAR_5 . get ( VAR_2 ) TYPE TYPE_4 NAME VAR_6 IN VAR_3 COND VAR_6 . METHOD_1 ( )  return true ;  return false ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME userId TYPE TYPE_1 NAME service  TYPE_2 . METHOD_2 ( userId )  TYPE_2 . METHOD_3 ( mContext ) COND ! ( METHOD_4 ( userId , service ) )  return false ;  return VAR_1 . METHOD_1 ( service ) ;
MODIFIER public RETURN void NAME run  METHOD_1 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_2 . METHOD_2 ( VAR_3 , VAR_1 , VAR_4 , VAR_5 )  METHOD_3 ( VAR_1 . METHOD_4 ( ) ) TYPE TYPE_2 NAME e  METHOD_5 ( e ) TYPE TYPE_3 NAME e  METHOD_5 ( e ) TYPE TYPE_4 NAME e  METHOD_5 ( e ) TYPE java.io.IOException NAME e  METHOD_5 ( e )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1<TYPE_2,TYPE_3> NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 == null  return false ; TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_4 ( )  TYPE_4 . METHOD_5 ( VAR_2 , VAR_3 ) TYPE TYPE_5 NAME e  TYPE_4 . log ( e , STRING_1 , VAR_2 . METHOD_6 ( ) . toString ( ) )  return true ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args  TYPE_1 . METHOD_1 ( ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( )  VAR_1 . METHOD_2 ( )  VAR_2 . println ( STRING_1 ) TYPE TYPE_3 NAME VAR_3  java.lang.System.out.println ( STRING_2 ) TYPE TYPE_4 NAME VAR_4  java.lang.System.out.println ( STRING_2 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME session TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_1 ( ) TYPE TYPE_4 NAME event INIT = VAR_1 . start ( VAR_2 ) TYPE TYPE_5 NAME VAR_3 INIT = TYPE_6 . get ( VAR_4 )  VAR_3 . METHOD_2 ( VAR_5 ) TYPE TYPE_7 NAME e  session . METHOD_3 ( ) . METHOD_4 ( VAR_6 , e )  throw new TYPE_8 ( e ) ;  event . METHOD_5 ( )
MODIFIER public static final RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME provider TYPE TYPE_2[] NAME VAR_2 TYPE TYPE_3[] NAME VAR_3 TYPE TYPE_1 NAME context INIT = TYPE_1 . METHOD_2 ( VAR_1 , provider )  context . METHOD_3 ( VAR_2 , VAR_3 , new TYPE_4 ( ) )  return context ; TYPE java.lang.Exception NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_4 ( c ) )  TYPE_1 . METHOD_5 ( c )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args COND new TYPE_5 ( VAR_3 ) . METHOD_2 ( true , void . class , STRING_1 , java.lang.String [ ] . class )  return new TYPE_6 ( VAR_1 , VAR_3 , args ) ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME flags  VAR_1  VAR_2 . METHOD_2 ( ) COND ( VAR_3 . METHOD_3 ( ) ) > ( VAR_4 . METHOD_4 ( ) )  VAR_3 . METHOD_5 ( )  METHOD_6 ( flags )  VAR_2 . METHOD_7 ( )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log.w ( VAR_3 . TAG , STRING_1 )  return null ; TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . get ( ) COND VAR_4 == null  android.util.Log.w ( VAR_3 . TAG , STRING_2 )  return null ; TYPE int NAME VAR_6 INIT = ( ( this ) instanceof TYPE_3 ) ? VAR_7 : VAR_8  return VAR_4 . METHOD_2 ( VAR_9 , VAR_6 , VAR_10 , VAR_1 , null ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( true )  assertTrue ( STRING_1 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_2 ( false )  assertFalse ( STRING_2 , VAR_1 . METHOD_3 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME address TYPE java.lang.String NAME VAR_1 TYPE int NAME flags TYPE int NAME VAR_2 TYPE int NAME length INIT = VAR_3 . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < length  i ++  VAR_3 . METHOD_3 ( i ) . METHOD_4 ( address , VAR_1 , flags , VAR_2 ) TYPE android.os.RemoteException NAME e BLOCK BLOCK TYPE java.lang.RuntimeException NAME e BLOCK BLOCK  VAR_3 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = METHOD_2 ( STRING_1 )  s = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) , VAR_1 , true )  assertTrue ( STRING_2 , ( ( s . METHOD_4 ( ) ) == VAR_1 ) )  s = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) , VAR_1 , false )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE double NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != null  return ( STRING_1 + ( VAR_2 . toString ( ) ) ) + STRING_1 ; COND ( VAR_3 ) != null  return ( STRING_1 + ( VAR_3 ) ) + STRING_1 ;  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME uid TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 , uid )  return VAR_1 == ( VAR_4 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_5 . TAG , ( STRING_1 + e ) )  return false ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE java.lang.String NAME name TYPE boolean NAME input COND VAR_1  throw new TYPE_1 ( ) ; TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME m INIT = c . METHOD_3 ( name , new java.lang.Class [ ] { boolean . class } )  return ( ( java.lang.Integer ) ( m . invoke ( null , input ) ) ) ; TYPE java.lang.Exception NAME ex  throw new TYPE_1 ( ex ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1  METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 IN VAR_1  VAR_3 . METHOD_5 ( VAR_2 . METHOD_4 ( ) , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1  org.junit.Assert.assertEquals ( VAR_1 [ 0 ] , ( ( VAR_2 ) + ( VAR_3 ) ) )  org.junit.Assert.assertEquals ( VAR_1 [ 1 ] , STRING_1 )  org.junit.Assert.assertEquals ( VAR_1 [ 2 ] , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) )  TYPE_2 . assertTrue ( VAR_1 [ 3 ] . METHOD_3 ( STRING_4 ) )  org.junit.Assert.assertEquals ( VAR_1 . length , 4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t COND t instanceof com.android.jack.ir.ast.JDefinedClassOrInterface  METHOD_1 ( ( ( com.android.jack.ir.ast.JDefinedClassOrInterface ) ( t ) ) ) COND t instanceof TYPE_2  METHOD_1 ( ( ( TYPE_2 ) ( t ) ) . METHOD_2 ( ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME type TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND ( ( ( VAR_3 . METHOD_2 ( ) . equals ( device ) ) && ( ( VAR_3 . METHOD_3 ( ) ) == type ) ) && ( ( VAR_3 . METHOD_4 ( ) ) == VAR_2 ) ) && ( VAR_3 . METHOD_5 ( ) . equals ( VAR_1 ) )  return VAR_3 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == 0  return ; TYPE byte[] NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 ) TYPE byte[] NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( VAR_5 , VAR_1 ) TYPE int[] NAME VAR_6 INIT = TYPE_1 . METHOD_2 ( VAR_7 , VAR_1 )  VAR_8 . log ( new TYPE_2 ( VAR_9 , VAR_2 , VAR_4 , VAR_6 ) )  TYPE_3 . METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 , VAR_9 ) )  VAR_1 = 0
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  VAR_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_3 . METHOD_3 ( )  TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , VAR_5 , ( ! ( VAR_4 . METHOD_5 ( ) ) ) , VAR_3 . METHOD_6 ( ) . METHOD_7 ( ) , ( VAR_4 . METHOD_5 ( ) ? null : VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME type INIT = METHOD_3 ( ) . get ( VAR_2 )  METHOD_4 ( new TYPE_5 ( info , type , VAR_3 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return ; TYPE TYPE_1 NAME VAR_7 INIT = VAR_6 . METHOD_2 ( VAR_4 )  VAR_5 . offset ( VAR_2 , VAR_3 , VAR_7 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME key  return ( VAR_2 . METHOD_2 ( VAR_1 , key , ( - 1 ) ) ) == ( VAR_3 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_4 . TAG , STRING_1 , e )  return false ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME v TYPE int NAME VAR_2 TYPE long NAME id TYPE java.util.Map NAME VAR_3 INIT = ( ( java.util.Map ) ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) TYPE android.content.Intent NAME VAR_4 INIT = ( ( android.content.Intent ) ( VAR_3 . get ( STRING_1 ) ) )  METHOD_3 ( VAR_4 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return ; TYPE TYPE_2 NAME VAR_6 INIT = VAR_5 . METHOD_2 ( VAR_2 ) COND VAR_6 == null  return ; COND VAR_3 != null  VAR_7 . append ( VAR_8 . METHOD_3 ( VAR_3 ) , false )  VAR_7 . append ( VAR_8 , false )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3<java.lang.String,TYPE_4> NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE java.util.List<TYPE_4> NAME values INIT = VAR_2 . get ( STRING_1 )  assertEquals ( 2 , values . size ( ) ) TYPE TYPE_4 NAME VAR_3 INIT = values . get ( 1 )  METHOD_4 ( VAR_3 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.Allocation NAME in TYPE TYPE_2.Allocation NAME out TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_1 )  VAR_2 . METHOD_4 ( this ) COND VAR_2 . METHOD_5 ( )  VAR_2 . METHOD_6 ( in , out )  VAR_2 . METHOD_7 ( )  VAR_2 . METHOD_4 ( null )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME out INIT = STRING_1 TYPE byte[] NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 . size ( ) )  i ++  out += java.lang.String.format ( VAR_3 , STRING_2 , VAR_1 [ i ] )  return out ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2  this . VAR_1 = VAR_1  this . VAR_2 = VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_4 . get ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ) ) COND VAR_3 == null  throw new TYPE_4 ( STRING_1 ) ;  METHOD_1 ( VAR_3 , VAR_2 ) TYPE TYPE_5 NAME e  throw new TYPE_4 ( STRING_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME os TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( os ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_2 , new TYPE_5 ( VAR_2 ) )  VAR_3 . METHOD_3 ( VAR_1 )  VAR_2 . METHOD_4 ( )
MODIFIER protected RETURN boolean NAME METHOD_1 COND VAR_1  android.util.Log.d ( VAR_2 . TAG , STRING_1 )  METHOD_2 ( ) COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( ) COND ( VAR_4 ) != null  VAR_4 . METHOD_1 ( ) COND ( VAR_5 ) != null  VAR_5 . METHOD_1 ( )  return true ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ! ( super . equals ( obj ) )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) )  return ( VAR_2 . equals ( VAR_3 ) ) && ( VAR_4 . equals ( VAR_5 ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME packageName TYPE boolean NAME VAR_2  VAR_3 COND ( VAR_3 . size ( ) ) > ( VAR_4 )  VAR_3 . METHOD_2 ( )  VAR_3 . METHOD_3 ( new TYPE_1 ( VAR_1 , packageName , VAR_2 , TYPE_2 . METHOD_4 ( ) ) ) TYPE int NAME state INIT = ( VAR_2 ) ? VAR_5 : VAR_6  TYPE_3 . METHOD_5 ( VAR_7 , TYPE_4 . METHOD_6 ( ) , null , state , VAR_1 , packageName )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME request INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( request )  VAR_2 . METHOD_5 ( method )  request . METHOD_7 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME state TYPE byte[] NAME address TYPE TYPE_1 NAME event INIT = new TYPE_1 ( VAR_1 )  VAR_2 = state  event . device = METHOD_2 ( address ) COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( STRING_1 + event ) )  METHOD_3 ( event )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) TYPE TYPE_5 NAME action INIT = METHOD_3 ( x . action ) COND action == null  action = new TYPE_6 ( info )  METHOD_4 ( new TYPE_7 ( info , VAR_2 , action ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( )  this TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_3 ( VAR_1 ) COND VAR_3 != null  VAR_3 . METHOD_1 ( VAR_1 )  TYPE_2 . METHOD_4 ( VAR_2 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1[] NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_2 COND ( VAR_3 . METHOD_4 ( VAR_4 ) ) != null  return VAR_3 ; COND ( VAR_2 . length ) > 0  return VAR_2 [ 0 ] ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( false )  VAR_1 . METHOD_4 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK  VAR_2 . METHOD_5 ( )  VAR_1 . METHOD_4 ( )  fail ( STRING_1 ) TYPE TYPE_2 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME error COND VAR_2  METHOD_2 ( ) COND VAR_2  android.util.Log.d ( VAR_3 , ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + error ) ) COND VAR_4  METHOD_4 ( error )  VAR_1 . METHOD_5 ( false )
MODIFIER private RETURN com.android.jack.ir.ast.JDefinedClassOrInterface NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_3 ) ) COND ! ( TYPE_2 . METHOD_2 ( ( ( TYPE_1 ) ( VAR_1 ) ) , VAR_2 ) )  VAR_2 = ( ( TYPE_1 ) ( VAR_2 . METHOD_3 ( ) ) )  return VAR_2 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name IN VAR_2 . METHOD_2 ( ) COND VAR_2 . get ( name ) . METHOD_3 ( ) . equals ( VAR_1 )  return name ;  return null ;
MODIFIER MODIFIER RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( STRING_1 ) COND ( VAR_1 ) != null  VAR_1 . METHOD_3 ( ) COND ( ( VAR_2 ) != null ) && ( ! ( VAR_3 ) )  TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( context , VAR_2 ) , new TYPE_4 ( ) , TYPE_5 . METHOD_6 ( ) )  VAR_3 = true
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) )  VAR_1 . METHOD_5 ( TYPE_1 . METHOD_7 ( ) )  METHOD_8 ( )  METHOD_9 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_9 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE int NAME VAR_1 INIT = callback . METHOD_2 ( )  TYPE_2 . METHOD_3 ( ( VAR_1 != ( VAR_2 ) ) )  TYPE_3 . i ( STRING_1 , ( STRING_2 + VAR_1 ) )  call . METHOD_4 ( ) . METHOD_5 ( new TYPE_4 ( VAR_1 ) )  METHOD_6 ( VAR_3 )  listener . METHOD_7 ( false )  VAR_4 . METHOD_8 ( VAR_5 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME item COND ! ( VAR_1 )  return true ; NAME item . METHOD_2 ( )  METHOD_3 ( )  VAR_1 = false  METHOD_4 ( VAR_3 )  METHOD_3 ( )  METHOD_5 ( )  return true ;  break ;  return super . METHOD_1 ( item ) ;
MODIFIER public RETURN void NAME log TYPE java.lang.Throwable NAME VAR_1 TYPE java.lang.String NAME format TYPE java.lang.Object NAME args COND VAR_1 != null  VAR_1 . METHOD_1 ( ) TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) COND format != null  sb.append ( java.lang.String.format ( format , args ) ) COND VAR_1 != null  sb.append ( VAR_1 . toString ( ) )  VAR_2 . println ( sb )
MODIFIER private final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) COND VAR_2  METHOD_3 ( )  VAR_3 = TYPE_2 . METHOD_4 ( VAR_1 , VAR_4 , key . METHOD_5 ( ) )  VAR_3 = TYPE_2 . METHOD_6 ( VAR_1 , VAR_4 , key . METHOD_5 ( ) )  METHOD_7 ( VAR_3 )  this . VAR_5 = VAR_1
MODIFIER public RETURN void NAME METHOD_1  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , STRING_3 } )  fail ( STRING_4 ) TYPE TYPE_2 NAME e BLOCK BLOCK  new TYPE_1 ( STRING_1 , new java.lang.String [ ] { STRING_2 , STRING_5 } )  fail ( STRING_4 ) TYPE TYPE_2 NAME e BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( VAR_1 )  TYPE_2 . METHOD_2 ( FLOAT_1 ) TYPE TYPE_3 NAME VAR_4 TYPE TYPE_4 NAME VAR_5  VAR_2 = VAR_3 . get ( TYPE_5 . METHOD_3 ( VAR_1 ) ) TYPE TYPE_1 NAME VAR_6 IN VAR_3 . values ( ) TYPE java.lang.String NAME VAR_7 IN VAR_6 . METHOD_4 ( ) COND VAR_1 . equals ( VAR_7 )  return VAR_6 ;  TYPE_2 . METHOD_5 ( FLOAT_2 )
MODIFIER public RETURN void NAME log TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_3 NAME VAR_4  VAR_1 . METHOD_1 ( VAR_6 )  break ;  VAR_1 . error ( null , VAR_6 )  break ;  VAR_1 . info ( VAR_6 )  break ;  VAR_1 . error ( null , ( STRING_1 + ( VAR_4 ) ) )  VAR_9 . log ( VAR_1 )
MODIFIER private synchronized RETURN int NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE boolean NAME response INIT = false TYPE int NAME VAR_1 INIT = 0 TYPE TYPE_1 NAME info IN VAR_2 COND VAR_3 . equals ( packageName )  response = true  break ;  VAR_1 ++ COND ! response  VAR_1 = - 1 COND VAR_4  android.util.Log.d ( VAR_5 . TAG , ( ( ( STRING_1 + packageName ) + STRING_2 ) + VAR_1 ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) )  throw new java.lang.IllegalArgumentException ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) ) ; COND ( METHOD_2 ( ) ) == ( VAR_2 )  throw new TYPE_1 ( STRING_4 ) ;  METHOD_3 ( VAR_3 , VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE TYPE_4 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_5 )  VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) TYPE java.io.IOException NAME e  VAR_4 . log ( VAR_5 , ( ( ( STRING_1 + ( TYPE_5 . METHOD_6 ( CHAR_1 ) ) ) + STRING_2 ) + VAR_1 ) , e )  throw new TYPE_3 ( VAR_1 . METHOD_7 ( ) ) ;  return VAR_2 ;
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE float[] NAME d TYPE int NAME VAR_5  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME i INIT = 0 TYPE int NAME n INIT = name . length ( ) COND i < n  i ++ TYPE char NAME c INIT = name . METHOD_3 ( i ) COND c == CHAR_1 TYPE TYPE_3 NAME location INIT = context . METHOD_4 ( VAR_1 ) TYPE java.lang.String NAME VAR_2 INIT = STRING_1  context . METHOD_5 ( VAR_3 , null , location , VAR_2 , null )  break ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME method TYPE int NAME VAR_2 TYPE java.lang.String NAME type TYPE TYPE_2 NAME VAR_3 COND VAR_4 TYPE TYPE_1 NAME value INIT = TYPE_4 . METHOD_1 ( method , VAR_2 ) COND ( value != null ) && ( value . METHOD_2 ( ) )  return value ;  return super . METHOD_1 ( VAR_1 , method , VAR_2 , type , VAR_3 ) ;
MODIFIER protected final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_2 , true , VAR_3 ) TYPE TYPE_2 NAME VAR_4 TYPE java.lang.String NAME msg INIT = java.lang.String.format ( VAR_5 , VAR_2 , VAR_1 . toString ( ) )  TYPE_3 . METHOD_4 ( METHOD_5 ( ) , msg )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME status  VAR_3 TYPE TYPE_1<TYPE_2> NAME i INIT = VAR_4 . METHOD_2 ( ) COND i . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_5 INIT = i . METHOD_4 ( )  VAR_5 . METHOD_5 ( VAR_1 , VAR_2 , status ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_6 , ( ( STRING_1 + STRING_2 ) + ( e.getMessage ( ) ) ) )  i . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  METHOD_2 ( STRING_1 ) COND ! ( VAR_2 . METHOD_3 ( VAR_1 ) )  throw new TYPE_3 ( STRING_2 ) ;  return new TYPE_1 ( mContext , true ) ; TYPE android.os.RemoteException NAME e  throw e . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( ) TYPE java.io.File NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( STRING_1 )  VAR_4 . METHOD_4 ( VAR_3 )  VAR_4 . METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_1 , VAR_4 , false )  METHOD_7 ( VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME version TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_4 NAME d INIT = TYPE_5 . METHOD_2 ( version , VAR_2 , VAR_3 , VAR_4 , VAR_1 ) . METHOD_3 ( ) TYPE TYPE_6 NAME r INIT = new TYPE_6 ( d , VAR_5 )  VAR_6 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE int NAME VAR_8 TYPE int NAME VAR_9 TYPE int NAME VAR_10 TYPE int NAME VAR_11 TYPE int NAME VAR_12  METHOD_2 ( )  METHOD_3 ( mContext , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value COND key . METHOD_2 ( STRING_1 ) THEN THEN COND key . METHOD_2 ( STRING_2 )  VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , value ) COND ! ( VAR_4 )  VAR_5 . METHOD_4 ( key . toString ( ) , value . METHOD_5 ( ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.io.File NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = context . METHOD_2 ( ) . METHOD_3 ( ) COND VAR_2 != null TYPE TYPE_3 NAME VAR_3 IN VAR_2 . METHOD_4 ( ) . values ( ) COND VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) COND VAR_1 . equals ( VAR_3 . METHOD_7 ( ) . METHOD_8 ( ) )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 )  VAR_4 . METHOD_3 ( VAR_5 )  VAR_4 . METHOD_4 ( VAR_6 )  VAR_4 . METHOD_5 ( )  VAR_4 . METHOD_6 ( )  VAR_4 . METHOD_7 ( )  VAR_1 . METHOD_8 ( VAR_2 , ( ( VAR_3 ) + 1 ) )  VAR_4 . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  TYPE_1 . when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( VAR_1 )  METHOD_3 ( false , false , false )  assertTrue ( ( ( VAR_3 . METHOD_4 ( ) ) == null ) )  METHOD_5 ( 4 , false , false )  assertEquals ( VAR_1 , VAR_3 . METHOD_4 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME subId TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( subId ) COND VAR_3 != null COND ! ( TYPE_3 . METHOD_3 ( mContext , VAR_2 , STRING_1 ) )  return null ;  return VAR_3 . METHOD_1 ( VAR_1 ) ;  loge ( ( STRING_2 + subId ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME VAR_1 INIT = e . METHOD_2 ( ) COND ( ( ( ! ( METHOD_3 ( ) ) ) && ( VAR_1 != null ) ) && ( ( VAR_2 ) <= 0 ) ) && ( ( e . METHOD_4 ( ) . VAR_3 ) > 0 )  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( TYPE_2 . TAG , STRING_1 )  return ; TYPE boolean NAME VAR_1 INIT = TYPE_2 . METHOD_4 ( VAR_2 )  assertTrue ( STRING_2 , VAR_1 )  METHOD_5 ( VAR_3 , INT_1 , INT_2 , 4 )  METHOD_5 ( VAR_4 , INT_3 , INT_4 , 2 )
MODIFIER public static RETURN void NAME METHOD_1  Main . METHOD_2 ( )  Main . METHOD_3 ( )  Main . METHOD_4 ( )  Main . METHOD_5 ( )  Main . METHOD_6 ( )  Main . METHOD_7 ( )  Main . METHOD_8 ( )  Main . METHOD_9 ( )  Main . METHOD_10 ( )  VAR_1 . println ( STRING_1 )
MODIFIER final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 != 0 TYPE boolean NAME VAR_2 INIT = ( VAR_1 & ( VAR_3 ) ) != 0 COND VAR_2  TYPE_1 . METHOD_2 ( ) COND VAR_4  android.util.Slog.v ( VAR_5 . TAG , STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_2 ( VAR_4 , uri )  VAR_2 . METHOD_3 ( STRING_1 )  VAR_2 . METHOD_4 ( VAR_5 )  VAR_2 . METHOD_5 ( VAR_6 , VAR_7 )  METHOD_6 ( VAR_2 ) TYPE TYPE_2 NAME e  TYPE_3 . METHOD_7 ( this , VAR_8 , VAR_9 ) . METHOD_8 ( )  android.util.Log.e ( VAR_10 . TAG , STRING_2 , e )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME element TYPE int NAME VAR_1 COND element instanceof TYPE_2 COND ( ( ( TYPE_2 ) ( element ) ) . METHOD_2 ( ) ) == ( VAR_2 )  return VAR_3 ; COND ( ( ( TYPE_2 ) ( element ) ) . METHOD_2 ( ) ) == ( VAR_4 )  return VAR_5 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ;  METHOD_4 ( 0 )  METHOD_5 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 , VAR_3 )  METHOD_7 ( VAR_4 , VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) ) TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_3 ( VAR_4 , VAR_1 ) COND VAR_5 . METHOD_4 ( ) . METHOD_5 ( VAR_2 )  log ( ( STRING_1 + VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Integer NAME type TYPE java.lang.Integer NAME id TYPE java.lang.String NAME VAR_2 TYPE android.bluetooth.BluetoothDevice NAME device INIT = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) TYPE byte[] NAME VAR_4 INIT = VAR_2 . METHOD_4 ( )  return VAR_3 . METHOD_5 ( device , ( ( byte ) ( ( int ) ( type ) ) ) , ( ( byte ) ( ( int ) ( id ) ) ) , VAR_4 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE long NAME VAR_2 TYPE int NAME uid TYPE TYPE_1 NAME event INIT = new TYPE_1 ( )  VAR_3 = VAR_1  VAR_4 = VAR_2  event . uid = uid  VAR_5 . append ( event ) TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 . get ( VAR_1 ) COND VAR_6 == null  VAR_6 = new TYPE_2 ( VAR_1 )  VAR_7 . METHOD_2 ( VAR_1 , VAR_6 )  VAR_6 . METHOD_3 ( event )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( ( ( int ) ( FLOAT_1 * INT_1 ) ) , STRING_1 )  TYPE_1 . METHOD_3 ( VAR_2 ) TYPE TYPE_3 NAME f INIT = new TYPE_3 ( ) COND ! ( f . METHOD_4 ( ) . equals ( VAR_2 ) )  errln ( STRING_2 )  TYPE_1 . METHOD_3 ( VAR_1 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) == null COND ( ! ( METHOD_2 ( ) ) ) && ( ! ( METHOD_3 ( ) ) )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( VAR_2 ) ) ) ; COND ( VAR_2 . METHOD_4 ( 0 ) ) == CHAR_1  VAR_1 = VAR_2  VAR_1 = VAR_2 . METHOD_5 ( 1 , ( ( VAR_2 . length ( ) ) - 1 ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( ( VAR_1 + ( VAR_3 ) ) ) )  VAR_2 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( ( VAR_1 + ( 4 * ( VAR_3 ) ) ) ) ) TYPE TYPE_3 NAME entry INIT = TYPE_4 . METHOD_5 ( response )  METHOD_6 ( ( VAR_1 + ( 3 * ( VAR_3 ) ) ) , VAR_4 , VAR_5 )  assertEquals ( VAR_6 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_2  android.util.Log.v ( TAG , ( STRING_1 + ( VAR_3 ) ) )  VAR_3 = VAR_1 COND ( ( VAR_4 ) != null ) && ( ( VAR_4 . METHOD_2 ( ) ) != ( VAR_3 ) )  VAR_4 . METHOD_3 ( VAR_3 ) COND VAR_2  android.util.Log.v ( TAG , ( STRING_2 + ( VAR_3 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME method TYPE TYPE_3 NAME VAR_2 TYPE int NAME offset TYPE TYPE_4 NAME VAR_3  VAR_4 = METHOD_2 ( offset , VAR_4 )  VAR_5 . METHOD_1 ( VAR_1 , method , VAR_2 , VAR_6 , VAR_3 )  VAR_6 += VAR_3 . length ( VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 COND ( ( VAR_2 . METHOD_2 ( CHAR_1 ) ) != ( - 1 ) ) && ( ( ( VAR_3 ) & ( VAR_4 ) ) == 0 )  return ; COND TYPE_3 . METHOD_3 ( context , VAR_1 )  METHOD_4 ( context , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME userId TYPE android.os.Bundle NAME VAR_1 TYPE android.os.Bundle NAME VAR_2 COND ( ! ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) && ( ! ( VAR_2 . METHOD_2 ( VAR_3 ) ) )  return ; TYPE boolean NAME VAR_4 INIT = VAR_1 . METHOD_3 ( VAR_3 ) COND ( ( VAR_5 ) || ( VAR_6 ) ) && VAR_4  METHOD_4 ( STRING_1 , true ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  METHOD_5 ( VAR_4 )
MODIFIER public RETURN java.util.List<java.io.File> NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new java.util.ArrayList < java.io.File > ( 1 ) TYPE java.io.File NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) COND ( VAR_2 != null ) && ( VAR_2 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( VAR_2 )  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in TYPE TYPE_1 NAME result INIT = new TYPE_1 ( )  VAR_1 = ( ( in . METHOD_2 ( ) ) != 0 ) ? true : false  VAR_2 = new ArrayList < TYPE_3 > ( )  in . METHOD_3 ( VAR_2 , VAR_3 )  VAR_4 = new ArrayList < TYPE_4 > ( )  in . METHOD_3 ( VAR_4 , VAR_5 ) COND ( in . METHOD_4 ( ) ) != 0  android.util.Log.e ( TYPE_1 . TAG , STRING_1 )  return result ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( VAR_2 , null ) COND VAR_1 . METHOD_3 ( ) TYPE TYPE_1<TYPE_3> NAME VAR_3 INIT = VAR_1 . get ( ) . METHOD_4 ( TYPE_4 . METHOD_5 ( STRING_1 ) ) COND VAR_3 . METHOD_3 ( )  return java.lang.Integer.parseInt ( VAR_3 . get ( ) . METHOD_6 ( ) ) ;  return METHOD_7 ( ) ;
MODIFIER private RETURN void NAME set TYPE int NAME VAR_1 TYPE java.lang.Object NAME type  VAR_2 = TYPE_1 . METHOD_1 ( VAR_2 , VAR_1 ) COND VAR_1 >= ( VAR_3 . size ( ) )  VAR_3 . METHOD_2 ( VAR_4 )  VAR_3 . set ( VAR_1 , type )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 != null ) && ( VAR_2 != ( VAR_3 ) )  VAR_4 . METHOD_1 ( VAR_1 , VAR_2 )  VAR_4 . METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME slotId TYPE int NAME VAR_1 TYPE int NAME status  VAR_2  android.util.Log . i ( VAR_3 , ( ( ( ( ( STRING_1 + slotId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + status ) ) COND ( ( VAR_4 ) == slotId ) && ( VAR_1 == ( VAR_5 ) )  VAR_6 = status COND ( VAR_7 ) != null  VAR_7 . METHOD_2 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE TYPE_2 NAME data INIT = VAR_2 . METHOD_2 ( ) COND data != null TYPE TYPE_3 NAME VAR_3 INIT = data . METHOD_3 ( METHOD_4 ( ) ) COND VAR_3 != null  VAR_1 = new TYPE_1 ( STRING_1 , VAR_3 . METHOD_5 ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element TYPE TYPE_3 NAME VAR_1 INIT = element . METHOD_2 ( VAR_2 , VAR_3 ) COND VAR_1 != null TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) COND ( TYPE_4 . METHOD_4 ( VAR_5 , VAR_4 ) ) >= 0  context . METHOD_5 ( VAR_6 , context . METHOD_6 ( VAR_1 ) , STRING_1 , null )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 0 , 0 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( args . in )  args.out = t . METHOD_3 ( TYPE_4 . METHOD_4 ( in . METHOD_5 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_6 ( ) ) , TYPE_4 . METHOD_4 ( in . METHOD_7 ( ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND ! ( VAR_1 . METHOD_2 ( ) )  throw new TYPE_2 ( location ) ; COND VAR_1 . METHOD_3 ( )  throw new TYPE_3 ( location ) ;
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE byte NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( ) ) , x )  return this ;
MODIFIER public RETURN TYPE_1<TYPE_2,TYPE_3> NAME METHOD_1 TYPE TYPE_1<TYPE_2,TYPE_3> NAME VAR_1 INIT = null  VAR_1 = ( ( TYPE_1 < TYPE_2 , TYPE_3 > ) ( super . METHOD_1 ( ) ) ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( ) ;  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( this )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_3 ( STRING_1 , VAR_3 )  TYPE_3 . when ( VAR_4 . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_5 class ) ) ) . thenReturn ( VAR_2 ) TYPE java.lang.String NAME VAR_6 INIT = VAR_7 . METHOD_6 ( )  assertEquals ( VAR_6 , ( ( VAR_8 ) + ( VAR_3 ) ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( name )  assertTrue ( java.lang.String.format ( STRING_1 , name ) , VAR_1 . METHOD_3 ( ) )  assertTrue ( java.lang.String.format ( STRING_2 , name ) , VAR_1 . METHOD_4 ( ) )  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File[] NAME VAR_1 TYPE java.io.File[] NAME VAR_2 TYPE java.io.File NAME VAR_3 TYPE boolean NAME VAR_4  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , false , FLOAT_1 , ( ( TYPE_2 ) ( null ) ) , ( ( TYPE_3 [ ] ) ( null ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) TYPE TYPE_4 NAME VAR_4 INIT = METHOD_3 ( VAR_5 )  METHOD_4 ( new TYPE_5 ( info , VAR_4 , VAR_2 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_4 ( c )  METHOD_5 ( TYPE_1 . METHOD_2 ( s ) )  TYPE_1 . METHOD_6 ( s )  TYPE_1 . METHOD_7 ( c )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = null TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.io.File NAME f INIT = new java.io.File ( VAR_2 , VAR_3 )  VAR_1 = new TYPE_1 ( f )  VAR_4 . METHOD_3 ( VAR_1 , STRING_1 ) TYPE TYPE_3 NAME VAR_5 BLOCK BLOCK TYPE java.io.IOException NAME VAR_5 BLOCK BLOCK COND VAR_1 != null  VAR_1 . METHOD_4 ( ) TYPE java.io.IOException NAME VAR_5 BLOCK BLOCK
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( VAR_1 == null ) || ( VAR_1 . METHOD_2 ( ) )  return VAR_2 ; COND ( VAR_2 == null ) || ( VAR_2 . METHOD_2 ( ) )  return VAR_1 ; TYPE java.lang.StringBuilder NAME VAR_3 INIT = new java.lang.StringBuilder ( VAR_1 )  VAR_3 . append ( VAR_4 )  VAR_3 . append ( VAR_2 )  return VAR_3 . toString ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_2 ( ) )  return true ;  return ( ( VAR_1 instanceof TYPE_3 ) || ( VAR_1 instanceof TYPE_4 ) ) || ( VAR_1 instanceof TYPE_5 ) ;
MODIFIER public RETURN TYPE_1[] NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) COND VAR_1 == null  VAR_1 = TYPE_2 . METHOD_3 ( ) TYPE java.lang.Class<?> NAME c INIT = java.lang.Class . METHOD_4 ( ( ( getName ( ) ) + STRING_1 ) , true , VAR_1 )  return c . METHOD_1 ( ) ; TYPE java.lang.Exception NAME ex  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) ) ) . thenReturn ( null )  VAR_2 . METHOD_5 ( false )  VAR_2 . METHOD_6 ( VAR_3 )  VAR_4 . METHOD_7 ( VAR_5 )  VAR_6 . METHOD_8 ( )  verify ( VAR_7 ) . METHOD_9 ( )  verify ( VAR_7 , METHOD_10 ( ) ) . METHOD_11 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 class . getName ( ) , null ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) TYPE java.util.List<java.lang.String> NAME VAR_4 INIT = TYPE_2 . METHOD_4 ( ) TYPE TYPE_1 NAME VAR_5 IN VAR_3  VAR_4 . METHOD_5 ( VAR_5 . getName ( ) )  assertEquals ( TYPE_3 . METHOD_6 ( STRING_1 ) , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME callback TYPE TYPE_4 NAME VAR_3 INIT = VAR_4 . get ( ) COND VAR_3 == null  android.util.Log.e ( VAR_5 . TAG , STRING_1 )  return ; COND VAR_6  android.util.Log.e ( VAR_5 . TAG , STRING_2 )  return ;  VAR_3 . METHOD_1 ( VAR_7 , ( VAR_1 == null ? TYPE_5 . METHOD_2 ( ) : VAR_1 . METHOD_3 ( ) ) , VAR_2 , callback )
MODIFIER private static synchronized RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<java.lang.Class<?extendsTYPE_3>> NAME VAR_1 TYPE TYPE_1 NAME result INIT = VAR_2 . get ( VAR_1 ) COND result == null  result = TYPE_1 . of ( VAR_1 )  VAR_2 . METHOD_2 ( VAR_1 , result )  return result ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME type TYPE java.lang.String NAME name COND ( VAR_1 ) == null  VAR_1 = new java.util.ArrayList < java.util.List < ? > > ( ) TYPE TYPE_2<java.lang.Object> NAME entry INIT = new TYPE_2 < java.lang.Object > ( )  entry . METHOD_2 ( type )  entry . METHOD_2 ( name )  VAR_1 . METHOD_2 ( entry )  return this ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return ( ( METHOD_2 ( ) ) == ( VAR_2 . METHOD_2 ( ) ) ) && ( ( id ) == ( VAR_2 . id ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( ) COND ( VAR_2 . size ( ) ) <= 0  METHOD_5 ( ) TYPE int NAME VAR_3 INIT = METHOD_2 ( ) COND VAR_3 != VAR_1  METHOD_6 ( )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 COND VAR_1 != null  VAR_3 = TYPE_3 . get ( VAR_1 )  VAR_3 = TYPE_4 . METHOD_3 ( STRING_1 )  TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 . toString ( ) )  TYPE_5 . METHOD_5 ( VAR_3 )  return VAR_3 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND VAR_1 . METHOD_2 ( )  throw new TYPE_3 ( location ) ; COND VAR_1 . METHOD_3 ( )  VAR_2 . log ( VAR_3 , STRING_1 , new java.lang.Object [ ] { location . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) } )  throw new TYPE_2 ( location ) ;
MODIFIER private static RETURN java.lang.Class<?> NAME METHOD_1 TYPE java.lang.Class<?> NAME VAR_1 TYPE java.lang.Class<?> NAME c INIT = VAR_1 COND c != ( VAR_2 . Object class )  c = c . METHOD_2 ( ) TYPE TYPE_1 NAME method IN TYPE_2 . METHOD_3 ( c ) COND TYPE_3 . METHOD_4 ( method )  return method . METHOD_5 ( ) [ 0 ] ;  throw new TYPE_4 ( STRING_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE double NAME a INIT = VAR_1 . METHOD_2 ( )  a *= INT_1  a -= INT_2  a *= ( ( ( FLOAT_1 * INT_3 ) * INT_4 ) * INT_4 ) * INT_5  return new TYPE_1 ( ( ( long ) ( a ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2  METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) COND VAR_3 . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME args INIT = TYPE_1 . METHOD_4 ( )  args . arg1 = VAR_1  VAR_4 = VAR_2  VAR_5 . METHOD_5 ( VAR_6 , args ) . METHOD_6 ( )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_1 == VAR_2  return new TYPE_1 ( ) ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_2 . METHOD_2 ( ) ) )  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_3 ) . append ( VAR_2 . getName ( ) ) . append ( CHAR_1 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE byte[] NAME out TYPE int NAME VAR_1 COND ( ( context ) != null ) && ( TYPE_1 . METHOD_2 ( context ) )  METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , INT_1 )  METHOD_3 ( VAR_5 , VAR_3 , VAR_4 , INT_2 ) TYPE int NAME VAR_6 INIT = VAR_2 . METHOD_1 ( out , VAR_1 ) TYPE int NAME VAR_7 INIT = VAR_5 . METHOD_1 ( out , ( VAR_1 + VAR_6 ) )  return VAR_6 + VAR_7 ;
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( ( ! ( VAR_1 instanceof TYPE_1 ) ) || ( VAR_1 . METHOD_2 ( ) ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) )  return ; TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ( ( TYPE_1 ) ( VAR_1 ) ) )  VAR_2 . METHOD_5 ( method )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_2 TYPE java.lang.String NAME VAR_3  TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_1 + VAR_3 ) , STRING_2 )  TYPE_2 . METHOD_2 ( VAR_1 , ( STRING_3 + VAR_3 ) , STRING_2 )  VAR_2 . METHOD_3 ( ( STRING_1 + VAR_3 ) , VAR_3 )  VAR_2 . METHOD_3 ( ( STRING_3 + VAR_3 ) , VAR_3 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Integer NAME id TYPE java.lang.String NAME VAR_2 TYPE android.bluetooth.BluetoothDevice NAME device INIT = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_1 ) TYPE byte[] NAME VAR_4 INIT = VAR_2 . METHOD_4 ( )  return VAR_3 . METHOD_5 ( device , id , VAR_4 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( 0 )  METHOD_3 ( VAR_1 , VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_4 ( VAR_1 , VAR_2 )  METHOD_2 ( 1 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( VAR_1 , VAR_2 )  TYPE_2 . METHOD_5 ( VAR_3 , VAR_4 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME s INIT = METHOD_2 ( VAR_1 , 16 )  this . METHOD_3 ( ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_4 ( this . VAR_3 , s )  TYPE_2 . METHOD_5 ( ( VAR_2 > 0 ) ) COND VAR_2 < ( s . length ( ) )  throw METHOD_6 ( VAR_1 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) )  assertNotNull ( VAR_4 ) TYPE java.util.List<?extendsTYPE_3> NAME VAR_5 INIT = METHOD_4 ( VAR_3 ) TYPE TYPE_3 NAME match INIT = VAR_4 . METHOD_5 ( VAR_5 )  java.lang.System.out.println ( match . toString ( ) )  assertEquals ( VAR_2 , VAR_5 . METHOD_6 ( match ) )
MODIFIER public static RETURN java.util.Map<java.lang.String,java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME d TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( d . METHOD_2 ( ) ) TYPE TYPE_3 NAME s IN d . METHOD_3 ( ) COND s . METHOD_4 ( ) . equals ( VAR_2 )  VAR_1 . METHOD_5 ( STRING_1 , TYPE_2 . METHOD_6 ( true ) )  return TYPE_2 . METHOD_1 ( d . METHOD_2 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device INIT = VAR_1 . METHOD_2 ( )  METHOD_3 ( ) COND METHOD_4 ( )  METHOD_5 ( true )  TYPE_2 . assertFalse ( METHOD_4 ( ) )  METHOD_5 ( false )  METHOD_6 ( )  new TYPE_3 ( device ) . METHOD_7 ( )  TYPE_2 . assertTrue ( METHOD_4 ( ) )  METHOD_5 ( true )  TYPE_2 . assertFalse ( METHOD_4 ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.util.List<TYPE_3> NAME VAR_3 INIT = VAR_1 . METHOD_4 ( ) COND ( ( ( ! ( VAR_3 . METHOD_5 ( ) ) ) && ( ( VAR_3 . size ( ) ) <= 5 ) ) && ( ( VAR_1 . METHOD_6 ( ) . size ( ) ) == 1 ) ) && ( VAR_2 . METHOD_7 ( TYPE_4 . METHOD_8 ( ) ) )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( device ) TYPE android.content.Intent NAME VAR_2 INIT = new android.content.Intent ( VAR_3 )  VAR_2 . METHOD_3 ( VAR_4 , device )  VAR_2 . METHOD_3 ( VAR_5 , ( VAR_1 == null ? null : VAR_6 ) )  VAR_7 . METHOD_4 ( device , VAR_6 )  VAR_7 . METHOD_5 ( VAR_2 , VAR_8 )  VAR_9 . METHOD_6 ( device )
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 . METHOD_2 ( VAR_1 ) COND VAR_5 == null  return 0 ; TYPE TYPE_3 NAME VAR_7 INIT = TYPE_3 . METHOD_2 ( VAR_3 ) COND VAR_7 == null  return 0 ;  return VAR_5 . METHOD_3 ( VAR_2 , VAR_7 , VAR_4 ) ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME sb INIT = new TYPE_2 ( 100 )  sb.append ( STRING_1 ) TYPE int NAME VAR_2 INIT = VAR_1 . size ( ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++  sb.append ( STRING_2 )  sb.append ( VAR_1 . METHOD_2 ( i ) . METHOD_3 ( ) )  return sb . toString ( ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE java.lang.Object[] NAME VAR_2 TYPE int NAME index TYPE int NAME VAR_3 COND VAR_1 == null TYPE int NAME i INIT = index COND i < VAR_3  i ++ COND ( VAR_2 [ i ] ) == null  return i ; TYPE int NAME i INIT = index COND i < VAR_3  i ++ COND VAR_1 . equals ( VAR_2 [ i ] )  return i ;  return - 1 ;
MODIFIER protected RETURN TYPE_1[] NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME context TYPE TYPE_5 NAME field INIT = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , false )  return new TYPE_1 [ ] { new TYPE_6 ( VAR_2 , field , VAR_1 ) } ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.Throwable NAME e  -- ( VAR_1 ) COND ( VAR_1 ) > 0  return ; COND ( ( VAR_2 ) != null ) && ( VAR_3 )  TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) )  com.android.tradefed.log.LogUtil.CLog.i ( STRING_1 , VAR_2 ) TYPE java.io.IOException NAME VAR_4  TYPE_4 . e ( STRING_2 , VAR_2 , VAR_4 )  VAR_2 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME node TYPE TYPE_1 NAME parent TYPE TYPE_2 NAME VAR_1 COND VAR_1 == ( VAR_2 ) TYPE java.lang.String NAME VAR_3 INIT = VAR_4 . METHOD_2 ( ) COND VAR_3 != null  node . METHOD_3 ( STRING_1 , new TYPE_3 ( null , VAR_5 , VAR_3 ) )  parent . METHOD_4 ( node )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME project INIT = METHOD_2 ( null , STRING_1 , STRING_2 , STRING_3 )  METHOD_3 ( ( STRING_4 + ( ( STRING_5 + STRING_4 ) + STRING_6 ) ) , STRING_7 , VAR_1 , new java.lang.String [ ] { STRING_8 , STRING_9 , STRING_10 , new java.io.File ( project , STRING_11 ) . METHOD_4 ( ) , STRING_12 , STRING_13 , project . METHOD_4 ( ) } )
MODIFIER MODIFIER RETURN int NAME METHOD_1 TYPE int NAME offset TYPE int NAME i INIT = 0 COND i < ( VAR_1 . size ( ) )  i ++ TYPE int NAME VAR_2 INIT = VAR_1 . get ( i ) COND offset <= VAR_2  return i ;  return - 1 ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2  VAR_1 . METHOD_2 ( ) COND ! VAR_2  VAR_3 . println ( STRING_1 ) TYPE TYPE_2 NAME VAR_4 COND ! VAR_2  java.lang.System.out.println ( STRING_2 )  throw VAR_4 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME event NAME VAR_1 COND METHOD_2 ( )  METHOD_3 ( VAR_3 )  return true ; COND METHOD_4 ( )  METHOD_3 ( VAR_5 )  return true ;  VAR_8 = true  return super . METHOD_1 ( VAR_1 , event ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = METHOD_2 ( STRING_1 ) COND VAR_1 != null TYPE java.util.List<java.io.File> NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_4 ( null , VAR_2 )  assertNotNull ( VAR_3 )  return VAR_3 ;  fail ( STRING_2 )  return null ;
MODIFIER MODIFIER RETURN void NAME test  METHOD_1 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_1 ) ) ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) COND ( VAR_2 == null ) || ( ! ( VAR_2 . METHOD_4 ( VAR_4 ) ) )  status = VAR_5  status = VAR_6
MODIFIER public RETURN boolean NAME METHOD_1 COND ( VAR_1 ) != null  return VAR_1 . METHOD_1 ( ) ; TYPE TYPE_1 NAME e BLOCK BLOCK  METHOD_2 ( )  VAR_2 COND ! ( METHOD_3 ( ) )  return false ; COND ( VAR_3 ) == 0  android.util.Log.e ( VAR_4 , STRING_1 )  return true ;  VAR_3 = 0  return TYPE_2 . METHOD_4 ( VAR_5 , VAR_3 ) ;
MODIFIER public RETURN java.lang.String NAME toString COND ! ( METHOD_1 ( ) )  return STRING_1 ; TYPE TYPE_1 NAME in COND ( ! ( TYPE_2 . METHOD_2 ( ) ) ) && ( ( TYPE_3 . METHOD_3 ( ) ) != null )  in = TYPE_1 . METHOD_4 ( )  in = VAR_1 . METHOD_5 ( )  return ( ( ( STRING_2 + in ) + STRING_3 ) + ( VAR_1 . METHOD_6 ( ) ) ) + STRING_4 ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.util.Set<java.io.File> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) COND VAR_1 . METHOD_3 ( )  return TYPE_3 . METHOD_4 ( ) ; TYPE java.util.Set<TYPE_2> NAME VAR_3 INIT = TYPE_4 . METHOD_5 ( ) TYPE java.io.File NAME VAR_4 IN VAR_1  VAR_3 . METHOD_6 ( new TYPE_5 ( VAR_4 ) )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element COND ( ! ( element . METHOD_2 ( VAR_1 , VAR_2 ) ) ) && ( ! ( element . METHOD_2 ( VAR_1 , VAR_3 ) ) )  context . METHOD_3 ( VAR_4 , element , context . METHOD_4 ( element ) , ( STRING_1 + STRING_2 ) , null )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.util.ArrayList<TYPE_2> NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_3 . get ( ( ( VAR_3 . size ( ) ) - 1 ) )  return ( ( ( VAR_4 . METHOD_3 ( ) ) != null ) || ( ( VAR_4 . METHOD_4 ( ) . size ( ) ) > 0 ) ) && ( ( VAR_2 . METHOD_5 ( ) . METHOD_6 ( ) ) > 1 ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.Throwable NAME e TYPE TYPE_3 NAME info TYPE TYPE_1 NAME VAR_2 INIT = METHOD_1 ( e ) COND VAR_1 != null TYPE TYPE_4 NAME sb INIT = new TYPE_4 ( )  VAR_1 . METHOD_2 ( 0 , sb )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) . getName ( ) , sb . toString ( ) , info )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_2 ) ) ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_1 . get ( STRING_3 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_3 . METHOD_3 ( ) COND VAR_4 != null  errln ( STRING_4 ) TYPE java.lang.IllegalArgumentException NAME ex  logln ( STRING_5 ) TYPE TYPE_2 NAME ex  METHOD_4 ( ( STRING_6 + ( ex . getMessage ( ) ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_2 NAME level INIT = VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( STRING_1 ) COND VAR_2 != null  level = new TYPE_4 < TYPE_2 > ( VAR_3 class , TYPE_2 . values ( ) ) . METHOD_3 ( new TYPE_5 ( ) , VAR_2 ) TYPE TYPE_6 NAME e  throw new TYPE_1 ( e.getMessage ( ) ) ;  TYPE_7 . METHOD_4 ( level )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args  TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( )  VAR_1 . METHOD_3 ( true )  VAR_1 . METHOD_4 ( )  TYPE_3 . METHOD_5 ( ) . METHOD_6 ( ) TYPE java.lang.Exception NAME e  e . METHOD_7 ( )  TYPE_1 . METHOD_8 ( )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME parent TYPE java.lang.String NAME name  return METHOD_3 ( parent , name ) ; TYPE TYPE_3 NAME e  throw new TYPE_2 ( METHOD_4 ( parent , name ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.io.File NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_3 . METHOD_3 ( ) , VAR_3 , false , false ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( )  assertTrue ( VAR_4 . METHOD_5 ( VAR_2 , true ) )  METHOD_6 ( VAR_1 , VAR_4 , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  VAR_2 . METHOD_2 ( VAR_3 class . getName ( ) , VAR_1 ) TYPE java.util.List<TYPE_1> NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) TYPE java.util.List<java.lang.String> NAME VAR_5 INIT = TYPE_2 . METHOD_4 ( ) TYPE TYPE_1 NAME VAR_6 IN VAR_4  VAR_5 . METHOD_5 ( VAR_6 . getName ( ) )  assertEquals ( TYPE_3 . METHOD_6 ( VAR_1 ) , VAR_5 )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME d INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND d == null  return ; TYPE TYPE_1 NAME src INIT = VAR_3 . METHOD_2 ( VAR_2 ) COND src == null  return ;  TYPE_2 . METHOD_3 ( VAR_4 , 0 , VAR_5 , 0 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) TYPE java.lang.String NAME expected INIT = STRING_9 + ( STRING_10 + STRING_11 )  assertEquals ( expected , METHOD_2 ( VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ! ( VAR_3 . METHOD_2 ( ) ) )  METHOD_3 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_3 . METHOD_1 ( ) COND VAR_4 == null  throw new TYPE_2 ( STRING_1 , VAR_5 ) ;  VAR_2 = new TYPE_1 ( VAR_4 ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_1 , e , VAR_6 ) ;  return VAR_2 ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE float NAME VAR_4 TYPE float NAME VAR_5 TYPE int NAME VAR_6 TYPE TYPE_1 NAME VAR_7 INIT = VAR_8 . METHOD_2 ( VAR_1 ) COND VAR_7 == null  return false ;  return VAR_7 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class<?> NAME target INIT = VAR_1 class TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( target , STRING_1 , VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_4 ( VAR_5 , VAR_6 , VAR_7 , 0 , VAR_2 )  VAR_4 . run ( null )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_3 ( VAR_8 class , ( ( target . getName ( ) ) + STRING_2 ) )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( VAR_9 )
MODIFIER MODIFIER RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME action IN VAR_1 COND ! ( action . METHOD_3 ( ) )  TYPE_2 . i ( VAR_2 . TAG , ( STRING_1 + action ) )  action . start ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE android.content.Intent NAME i INIT = new android.content.Intent ( this , VAR_3 class )  i . METHOD_2 ( VAR_4 , VAR_2 )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 . name , TYPE_4 . METHOD_5 ( VAR_5 ) , i , null ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME config TYPE TYPE_2 NAME VAR_2 COND config == null  return null ; COND ( VAR_2 != null ) && ( ! ( VAR_2 . METHOD_2 ( ) ) )  VAR_3 . METHOD_3 ( config )  config = VAR_3  VAR_2 . METHOD_4 ( VAR_1 , config )  return config ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 class . getName ( ) , null ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) TYPE java.util.List<java.lang.String> NAME VAR_4 INIT = TYPE_2 . METHOD_4 ( ) TYPE TYPE_1 NAME VAR_5 IN VAR_3  VAR_4 . METHOD_5 ( VAR_5 . getName ( ) )  assertEquals ( TYPE_3 . METHOD_6 ( STRING_1 , STRING_1 , STRING_2 ) , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME id INIT = TYPE_4 . METHOD_2 ( session )  assertNotNull ( id )  assertEquals ( INT_1 , id . length )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME d INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND d == null  return false ; TYPE TYPE_1 NAME VAR_4 INIT = VAR_3 . METHOD_2 ( VAR_2 ) COND VAR_4 == null  return false ;  d . METHOD_3 ( VAR_5 )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 , INT_1 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( STRING_2 , INT_1 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_4 , VAR_1 )  new TYPE_4 ( VAR_3 )  fail ( STRING_3 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK TYPE TYPE_3 NAME VAR_5 INIT = new TYPE_3 ( VAR_6 , VAR_1 )  new TYPE_4 ( VAR_5 )  new TYPE_4 ( VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( s ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER private static RETURN java.lang.Class NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE java.util.List<java.lang.Throwable> NAME VAR_3 TYPE java.lang.Class NAME result INIT = null  result = TYPE_2 . METHOD_2 ( name , VAR_1 , VAR_2 ) TYPE TYPE_3 NAME e COND VAR_3 != null  VAR_3 . METHOD_3 ( e ) TYPE TYPE_4 NAME e COND VAR_3 != null  VAR_3 . METHOD_3 ( e )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE double NAME VAR_1 TYPE long NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 ) COND ( VAR_2 == INT_1 ) || ( VAR_2 == INT_2 )  VAR_3 . METHOD_3 ( ( ( VAR_4 ) + ( ( int ) ( VAR_1 ) ) ) )  VAR_3 . METHOD_4 ( new TYPE_1 ( VAR_1 ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME path TYPE int NAME action COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_1 . METHOD_2 ( action ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( VAR_1 ) == ( METHOD_3 ( ) )  throw new TYPE_2 ( STRING_3 ) ;  return METHOD_4 ( VAR_2 , path , action ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 class . getName ( ) )  VAR_1 . METHOD_2 ( new TYPE_2 ( null , null ) , 0 )  TYPE_3 . fail ( STRING_1 ) TYPE java.lang.IllegalArgumentException NAME expected  TYPE_4 . METHOD_3 ( expected ) . METHOD_4 ( ) . METHOD_5 ( STRING_2 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type NAME type . METHOD_2 ( )  return VAR_2 ;  return VAR_5 ;  return VAR_7 ;  return VAR_9 ;  return VAR_11 ;  return VAR_13 ;  return TYPE_3 . METHOD_3 ( type ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME output INIT = new byte [ INT_1 ]  TYPE_1 . METHOD_2 ( output ) TYPE boolean NAME VAR_1 INIT = true TYPE int NAME i INIT = 0 COND i < ( output . length )  i ++  VAR_1 &= ( output [ i ] ) == 0  assertFalse ( ( STRING_1 + STRING_2 ) , VAR_1 )  TYPE_2 . METHOD_3 ( )
MODIFIER public static RETURN android.content.Intent NAME METHOD_1 TYPE TYPE_1 NAME context COND ( ( TYPE_2 . METHOD_2 ( ) ) && ( TYPE_2 . METHOD_3 ( context ) ) ) && ( ( VAR_1 ) >= ( VAR_2 ) )  return context . METHOD_4 ( VAR_3 class ) . METHOD_1 ( ) ; TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( STRING_1 )  VAR_4 . METHOD_5 ( context . METHOD_6 ( ) )  return VAR_4 ;
MODIFIER private RETURN int[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int[] NAME VAR_2 INIT = new int [ 6 ]  VAR_2 [ 0 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 1 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 2 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 3 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 4 ] = METHOD_2 ( VAR_1 )  VAR_2 [ 5 ] = METHOD_2 ( VAR_1 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new int [ ] { VAR_2 , VAR_3 } ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_2 ( ) . addFeature ( VAR_5 ) . addFeature ( VAR_6 ) . build ( )  TYPE_3 . assertEquals ( VAR_1 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 COND ( ! ( VAR_1 ) ) || ( ! ( VAR_2 ) )  return ; COND ( VAR_3 ) == null  throw new TYPE_1 ( STRING_1 ) ; COND ! ( VAR_3 . METHOD_2 ( ) )  throw new TYPE_1 ( ( STRING_2 + STRING_3 ) ) ;  VAR_3 = null  VAR_1 = false  VAR_2 = false
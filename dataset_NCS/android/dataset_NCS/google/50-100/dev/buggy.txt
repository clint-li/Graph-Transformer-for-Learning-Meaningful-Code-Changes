MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE TYPE_1.NameKey NAME name  return VAR_1 . METHOD_1 ( name . get ( ) ) ; TYPE TYPE_2 NAME err  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err )  return null ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2  return new TYPE_3 ( VAR_2 , true , ( ! ( TYPE_1 . METHOD_2 ( VAR_3 class , VAR_1 . METHOD_3 ( ) ) ) ) , TYPE_1 . METHOD_2 ( VAR_4 class , VAR_1 . METHOD_3 ( ) ) , TYPE_1 . METHOD_2 ( VAR_5 class , VAR_1 . METHOD_3 ( ) ) , null , null ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_3 . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_4 INIT = ( ( TYPE_5 ) ( VAR_5 ) ) TYPE TYPE_6.Change NAME change INIT = TYPE_7 . get ( VAR_1 ) TYPE TYPE_8.NameKey NAME name INIT = change . getProject ( ) COND ! ( VAR_2 . METHOD_4 ( TYPE_9 . create ( name . get ( ) ) , VAR_6 ) )  return VAR_1 . METHOD_5 ( ) ;  return VAR_7 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME p TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( p ) TYPE TYPE_2 NAME VAR_2 INIT = repo . METHOD_3 ( )  return new TYPE_1 ( repo , new org.eclipse.jgit.revwalk.RevWalk ( VAR_2 . METHOD_4 ( ) ) , VAR_2 , new TYPE_3 ( ) , true ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new TYPE_4 < > ( ) TYPE TYPE_5 NAME VAR_3 IN VAR_4  VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( VAR_1 ) ) TYPE TYPE_3 NAME e  VAR_2 . METHOD_2 ( e . METHOD_4 ( ) )  throw new TYPE_3 ( e . getMessage ( ) , VAR_2 ) ;  return VAR_2 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( type . getRevision ( ) ) TYPE java.util.Map<java.lang.String,java.lang.String> NAME p INIT = new TYPE_2 < java.lang.String , java.lang.String > ( )  p . put ( STRING_1 , METHOD_2 ( project . get ( ) ) )  p . put ( STRING_2 , METHOD_2 ( ps . getRevision ( ) . get ( ) ) )  return ( VAR_2 ) + ( VAR_1 . METHOD_3 ( p ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id TYPE TYPE_2 NAME p INIT = VAR_2 . get ( ) . METHOD_1 ( VAR_3 , id ) TYPE TYPE_5 NAME VAR_4 IN p . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_1 . METHOD_5 ( ) . equals ( VAR_4 . getProject ( ) . METHOD_5 ( ) )  return new TYPE_1 ( VAR_1 , p . METHOD_2 ( ) ) ;  throw new TYPE_4 ( id ) ;
MODIFIER public RETURN void NAME add TYPE TYPE_1 NAME VAR_1 COND VAR_1 instanceof TYPE_2 COND ( VAR_2 ) == null  VAR_2 = TYPE_3 . METHOD_1 ( )  VAR_2 . add ( ( ( TYPE_2 < ? > ) ( VAR_1 ) ) )  VAR_3 . add ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.PatchSet NAME patchSet TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . revision = patchSet . getRevision ( ) . get ( )  VAR_1 = TYPE_3 . toString ( patchSet . METHOD_2 ( ) )  p . ref = patchSet . getRefName ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_3 . get ( patchSet . METHOD_3 ( ) )  VAR_4 = METHOD_4 ( VAR_2 . METHOD_5 ( ) )  return p ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( STRING_1 , STRING_2 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_8 ( TYPE_4 . of ( STRING_3 , STRING_4 , STRING_5 , STRING_2 , STRING_6 , STRING_7 ) )
MODIFIER protected RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . close ( )  VAR_1 = null COND ( db ) != null  db . close ( ) TYPE TYPE_1 NAME e  throw new TYPE_2 ( STRING_1 , e ) ;  db = null
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( VAR_1 . equals ( null ) ) . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . equals ( STRING_1 ) ) . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . equals ( VAR_1 ) ) . METHOD_3 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . equals ( VAR_2 ) ) . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . equals ( VAR_3 ) ) . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 )  assertEquals ( query ( in ) , METHOD_3 ( in ) )  VAR_1 . METHOD_4 ( new TYPE_2 ( VAR_2 ) ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  METHOD_5 ( ( out instanceof TYPE_3 ) )  assertEquals ( TYPE_4 . of ( query ( in . METHOD_6 ( 0 ) ) , in . METHOD_6 ( 1 ) ) , out . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  org.junit.Assert.assertEquals ( TYPE_2 . METHOD_4 ( ( ( TYPE_2 . METHOD_4 ( STRING_2 ) ) + STRING_3 ) ) , n . METHOD_5 ( ) )
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = commit . METHOD_2 ( VAR_2 ) COND ( VAR_1 . isEmpty ( ) ) || ( ( VAR_1 . size ( ) ) > 1 )  return null ; COND VAR_1 . get ( 0 ) . isEmpty ( )  return TYPE_1 . of ( ) ;  return TYPE_2 . METHOD_3 ( TYPE_3 . on ( CHAR_1 ) . METHOD_4 ( VAR_1 . get ( 0 ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.Map<java.lang.String,java.util.Set<java.lang.String>> NAME VAR_3 TYPE java.lang.String NAME VAR_4 IN METHOD_2 ( VAR_1 )  < java.lang.String > VAR_5 = VAR_3 . METHOD_3 ( VAR_4 , ( VAR_6 ) - > TYPE_1 . METHOD_4 ( ) )  VAR_5 . add ( VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1  TYPE_2 . METHOD_2 ( change . getProject ( ) . equals ( project ) , ( STRING_1 + STRING_2 ) , project , changeId , change . getProject ( ) )  return new TYPE_1 ( args , change ) . METHOD_3 ( ) ;
MODIFIER protected RETURN void NAME run  METHOD_1 ( ) TYPE TYPE_2 NAME err  throw new TYPE_1 ( ( STRING_1 + ( err . getMessage ( ) ) ) ) ; TYPE TYPE_3 NAME VAR_1 INIT = factory . create ( in , out )  VAR_1 . METHOD_2 ( format ) COND ( query ) != null  VAR_1 . METHOD_3 ( query )  VAR_1 . run ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( new TYPE_3 ( STRING_2 , STRING_3 ) ) )  METHOD_5 ( VAR_1 , n )  assertEquals ( STRING_4 , n . METHOD_6 ( ) )
MODIFIER public RETURN void NAME run TYPE int NAME line INIT = ( cm . METHOD_1 ( ) . METHOD_2 ( ) ) ? cm . METHOD_3 ( cm . METHOD_1 ( ) . METHOD_4 ( ) ) : 0 TYPE int NAME res INIT = java.util.Collections . METHOD_5 ( VAR_1 , new TYPE_1 ( cm . METHOD_6 ( ) , 0 , 0 , 0 , line , false ) , METHOD_7 ( ) )  METHOD_8 ( VAR_1 , VAR_2 , res , VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE TYPE_2 NAME r INIT = VAR_1 . get ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( id . name ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) TYPE TYPE_1 NAME result INIT = METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , VAR_3 class )  r . METHOD_6 ( )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = INT_1 TYPE long NAME VAR_2 INIT = INT_2 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME c INIT = new TYPE_2 ( p , VAR_2 )  METHOD_2 ( p , c . getParentKey ( ) )  METHOD_3 ( ( VAR_2 != ( c . METHOD_4 ( ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_3<java.lang.String> NAME n INIT = TYPE_3 . not ( p )  assertEquals ( 1 , n . METHOD_3 ( ) )  METHOD_4 ( p , n . METHOD_5 ( 0 ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit[] NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_1 > ( VAR_1 . length ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 IN VAR_1  walk . METHOD_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_3 . getId ( ) . name ( ) ) TYPE java.lang.String NAME msg INIT = VAR_3 . METHOD_3 ( )  VAR_2 . add ( new TYPE_1 ( VAR_4 , msg ) )  return VAR_2 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result  VAR_1 = new TYPE_2 ( this , METHOD_2 ( ) , getRevision ( ) , METHOD_3 ( ) , result . METHOD_4 ( ) , METHOD_5 ( ) . METHOD_6 ( ) )  METHOD_7 ( result . METHOD_8 ( ) )  display ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_4 , VAR_2 , VAR_3 , STRING_2 ) TYPE TYPE_2 NAME u INIT = user ( VAR_4 )  METHOD_4 ( u )  METHOD_5 ( STRING_3 , u )  METHOD_5 ( STRING_4 , u )  METHOD_6 ( STRING_5 , u )
MODIFIER protected RETURN void NAME METHOD_1  rpc ( VAR_1 class )  rpc ( VAR_2 class )  rpc ( VAR_3 class )  rpc ( VAR_4 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_2 ( ) )  install ( new TYPE_3 ( ) )  install ( new TYPE_4 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME e TYPE java.lang.String NAME VAR_1 INIT = e . getValue ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( 1 , TYPE_3 . METHOD_4 ( VAR_1 ) ) )  view . METHOD_5 ( VAR_2 . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME plugins INIT = VAR_1  TYPE_2 . METHOD_2 ( plugins ) TYPE TYPE_1 NAME VAR_2 INIT = plugins . METHOD_3 ( STRING_1 )  TYPE_2 . METHOD_4 ( VAR_2 , STRING_2 . METHOD_5 ( VAR_3 ) )  VAR_4 . METHOD_6 ( STRING_3 ) TYPE TYPE_3 NAME i INIT = VAR_5 . config ( ) . server ( ) . METHOD_7 ( )  com.google.common.truth.Truth.assertThat ( VAR_6 ) . METHOD_8 ( 1 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( project ) TYPE TYPE_2 NAME VAR_2 INIT = repo . METHOD_3 ( )  return new TYPE_1 ( repo , new org.eclipse.jgit.revwalk.RevWalk ( VAR_2 . METHOD_4 ( ) ) , VAR_2 , new TYPE_3 ( ) , true ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME c INIT = get ( changeId , VAR_1 , VAR_2 )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( 1 )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . isEqualTo ( METHOD_3 ( 2 ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < ? > ) ( VAR_3 . METHOD_4 ( ) ) ) ) . METHOD_5 ( TYPE_3 . of ( METHOD_3 ( 2 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_3 . get ( METHOD_3 ( 2 ) ) . VAR_5 ) . isEqualTo ( INT_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2.NameKey> NAME VAR_1  METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( VAR_4 )  VAR_2 . METHOD_1 ( VAR_1 )  METHOD_2 ( STRING_2 ) TYPE TYPE_4 NAME e  METHOD_3 ( ( STRING_3 + STRING_4 ) , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  METHOD_2 ( VAR_1 , null , true ) TYPE TYPE_1 NAME r INIT = VAR_2 . put ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) , METHOD_3 ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( r . METHOD_4 ( ) ) . isEqualTo ( VAR_3 )  r . METHOD_5 ( )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 COND ( format ) == ( VAR_2 ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( )  display ( VAR_3 )  return TYPE_5 . create ( VAR_3 . METHOD_1 ( ) ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( TYPE_6 . name ( ) ) ;  return apply ( ) ;
MODIFIER public RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE java.lang.String NAME path TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  rw . METHOD_2 ( rw . parseCommit ( VAR_1 ) )  rw . METHOD_3 ( false )  rw . METHOD_4 ( TYPE_1 . create ( TYPE_2 . METHOD_5 ( path ) , VAR_2 ) )  return rw . METHOD_6 ( ) ;  rw . METHOD_7 ( )
MODIFIER protected RETURN void NAME METHOD_1 COND ( db ) != null TYPE TYPE_2.Project NAME project INIT = getProject ( ) COND project != null TYPE TYPE_3 NAME w IN db . METHOD_2 ( ) . METHOD_3 ( project . getId ( ) )  add ( VAR_1 , w . getAccountId ( ) ) TYPE TYPE_4.OrmException NAME err BLOCK BLOCK
MODIFIER private RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) != null COND ( VAR_1 . METHOD_2 ( ) ) != null  return VAR_1 . METHOD_2 ( ) ;  return VAR_1 . METHOD_3 ( ) . toString ( ) ;  return VAR_2 . getName ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  METHOD_4 ( VAR_1 class , out . METHOD_5 ( ) )  assertEquals ( TYPE_2 . of ( query ( TYPE_1 . METHOD_6 ( in . METHOD_7 ( 0 ) , in . METHOD_7 ( 2 ) ) ) , in . METHOD_7 ( 1 ) , in . METHOD_7 ( INT_1 ) ) , out . METHOD_8 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE boolean NAME VAR_1  m . METHOD_2 ( )  m . METHOD_3 ( )  m . METHOD_4 ( TYPE_2 . css ( ) . METHOD_5 ( ) ) COND VAR_1  m . METHOD_6 ( TYPE_2 . css ( ) . METHOD_7 ( ) )  m . METHOD_8 ( STRING_1 , STRING_2 )  m . METHOD_9 ( )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result TYPE java.lang.String NAME b INIT = ( ( base ) != null ) ? java.lang.String . METHOD_1 ( base . get ( ) ) : null TYPE java.lang.String NAME VAR_1 INIT = java.lang.String . METHOD_1 ( revision . get ( ) )  TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId , VAR_1 ) , new TYPE_4 ( changeId , b , VAR_1 , VAR_2 ) )
MODIFIER public RETURN TYPE_1<?extendsjava.util.Set<java.lang.String>> NAME apply TYPE TYPE_2 NAME req TYPE TYPE_5 NAME VAR_1 INIT = req . METHOD_1 ( ) TYPE TYPE_6 NAME notes INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = notes . METHOD_4 ( ) COND VAR_2 == null  VAR_2 = java.util.Collections . METHOD_5 ( )  return TYPE_1 . METHOD_6 ( new TYPE_7 < java.lang.String > ( VAR_2 ) ) ;
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE int NAME change TYPE int NAME patch TYPE java.lang.String NAME branch COND ( branch . METHOD_2 ( TYPE_1 ) ) == 0  branch = branch . METHOD_3 ( TYPE_1 . length ( ) )  return ( ( ( change + STRING_1 ) + patch ) + STRING_1 ) + branch ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_1 TYPE TYPE_1 NAME msg COND msg != null COND ( VAR_1 != null ) && ( ( msg . METHOD_2 ( ) ) == null )  msg . METHOD_3 ( VAR_1 . getAccountId ( ) )  db . METHOD_4 ( ) . insert ( java.util.Collections.singleton ( msg ) ) TYPE com.google.gwtorm.server.OrmException NAME err  VAR_2 . METHOD_5 ( STRING_1 , err )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME out TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME path TYPE TYPE_3 NAME diff INIT = new TYPE_4 ( VAR_3 , out ) COND ! ( path . equals ( STRING_1 ) )  diff . METHOD_2 ( TYPE_5 . create ( path ) )  diff . METHOD_3 ( repo )  diff . METHOD_4 ( true )  diff . format ( VAR_1 , VAR_2 )  diff . METHOD_5 ( )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE boolean NAME VAR_2 INIT = false TYPE TYPE_4 NAME VAR_3 IN VAR_4  VAR_1 . METHOD_3 ( VAR_3 . METHOD_4 ( event ) ) TYPE TYPE_5 NAME e  VAR_1 . add ( new TYPE_1 ( e . getMessage ( ) , true ) )  VAR_2 = true COND VAR_2  METHOD_5 ( VAR_1 , event )  return VAR_1 ;
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND VAR_1 instanceof TYPE_2 TYPE TYPE_2 NAME p INIT = ( ( TYPE_2 ) ( VAR_1 ) )  return ( METHOD_1 ( ) . equals ( p . METHOD_1 ( ) ) ) && ( id . equals ( p . id ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Id NAME VAR_1 TYPE java.lang.String NAME msg TYPE java.util.Set<TYPE_2.Id> NAME VAR_2 TYPE TYPE_3<TYPE_4> NAME VAR_3  TYPE_5 . METHOD_2 ( VAR_4 . create ( VAR_1 , msg , VAR_2 ) ) . to ( VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = new com.google.gerrit.reviewdb.client.Account ( VAR_1 , TYPE_2 . METHOD_2 ( ) )  account . METHOD_3 ( false ) TYPE java.util.Set<TYPE_3> NAME VAR_2 INIT = TYPE_4 . of ( )  return new TYPE_1 ( VAR_3 , account , VAR_2 , java.util.Collections . METHOD_4 ( ) , new TYPE_5 < TYPE_6 , java.util.Set < TYPE_7 > > ( ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME key MODIFIER MODIFIER RETURN TYPE_3 NAME METHOD_2 TYPE java.lang.String NAME VAR_2 INIT = TYPE_4 . METHOD_3 ( VAR_1 , key )  return VAR_3 . METHOD_4 ( TYPE_5 . on ( STRING_4 ) . METHOD_5 ( VAR_4 , STRING_5 , VAR_1 ) , VAR_2 ) ;  return new TYPE_2 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + key ) + STRING_3 ) ) { TYPE_3 METHOD_2 ( ) throws java.io.IOException { java.lang.String VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , key ) ; return VAR_3 . METHOD_4 ( TYPE_5 . on ( STRING_4 ) . METHOD_5 ( VAR_4 , STRING_5 , VAR_1 ) , VAR_2 ) ; } } . METHOD_6 ( ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( VAR_2 . get ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_1 ) COND VAR_3 . METHOD_3 ( )  return VAR_3 ;  throw new TYPE_2 ( STRING_1 ) ; TYPE java.io.IOException NAME VAR_4  throw new TYPE_2 ( STRING_2 ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2  return new TYPE_3 ( VAR_1 , VAR_2 , true , ( ! ( TYPE_1 . METHOD_2 ( VAR_3 class , VAR_1 . METHOD_3 ( ) ) ) ) , TYPE_1 . METHOD_2 ( VAR_4 class , VAR_1 . METHOD_3 ( ) ) , TYPE_1 . METHOD_2 ( VAR_5 class , VAR_1 . METHOD_3 ( ) ) , null , null ) ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change.Id NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE TYPE_4.Key NAME VAR_2 INIT = new TYPE_4 . Key ( VAR_3 , VAR_1 ) TYPE TYPE_5 NAME VAR_4 INIT = db . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_4 . get ( VAR_2 ) COND VAR_5 == null  return VAR_6 . METHOD_3 ( VAR_1 , name , email ) ;  return VAR_5 . getAccountId ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME change INIT = METHOD_2 ( git , true )  METHOD_2 ( git , false ) TYPE java.util.Set<java.lang.String> NAME changes INIT = METHOD_3 ( change )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < ? > ) ( changes ) ) ) . isEmpty ( )
MODIFIER public RETURN org.eclipse.jgit.lib.ObjectId NAME commit TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( METHOD_1 ( ) )  VAR_1 . add ( this )  TYPE_2 . METHOD_2 ( getChange ( ) , VAR_1 . METHOD_3 ( ) . get ( getId ( ) ) )  VAR_1 . METHOD_4 ( )  return METHOD_5 ( ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME res INIT = METHOD_2 ( path , ( STRING_1 + VAR_1 ) , VAR_2 )  com.google.common.truth.Truth.assertThat ( res . METHOD_3 ( VAR_3 ) ) . isEqualTo ( STRING_2 ) TYPE java.lang.String NAME VAR_4 INIT = res . METHOD_4 ( ) TYPE java.lang.String NAME VAR_5 INIT = STRING_3  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_5 ( VAR_5 ) TYPE java.lang.String NAME result INIT = VAR_4 . METHOD_6 ( VAR_5 . length ( ) )  VAR_6 . METHOD_7 ( result )  return result ;
MODIFIER public static RETURN void NAME topic TYPE int NAME id TYPE java.lang.String NAME topic TYPE TYPE_1<java.lang.String> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_1 ( id , STRING_1 )  topic = TYPE_3 . METHOD_2 ( topic ) COND topic != null TYPE TYPE_4 NAME input INIT = TYPE_4 . create ( )  input . topic ( topic )  VAR_2 . put ( input , TYPE_5 . METHOD_3 ( VAR_1 ) )  VAR_2 . delete ( TYPE_5 . METHOD_3 ( VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ! ( METHOD_2 ( VAR_2 ) ) ) ) && ( ! ( METHOD_3 ( ) ) ) TYPE java.lang.String NAME VAR_3 INIT = VAR_4 . getProject ( ) . getName ( )  return new TYPE_1 ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) ) ; COND VAR_4 . METHOD_4 ( )  return METHOD_5 ( ) ;  return VAR_5 ;
MODIFIER private RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 , null , STRING_2 ) ) . METHOD_4 ( STRING_3 ) . METHOD_5 ( )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 , null , STRING_4 ) ) . METHOD_4 ( STRING_5 ) . METHOD_5 ( )  TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 , null , STRING_6 ) ) . METHOD_4 ( STRING_5 ) . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME result INIT = METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) TYPE java.lang.String NAME projectName INIT = result . getChange ( ) . change ( ) . getProject ( ) . get ( )  METHOD_3 ( new TYPE_2 . NameKey ( projectName , STRING_5 ) )  METHOD_4 ( STRING_6 , projectName )  METHOD_5 ( result . getChangeId ( ) )  result . METHOD_6 ( )  METHOD_7 ( result )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  super . METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE java.util.List<TYPE_3.Branch> NAME result  METHOD_2 ( true )  VAR_2 . display ( result )  TYPE_1 . METHOD_3 ( VAR_1 , new TYPE_2 < java.util.List < TYPE_3 . Branch > > ( ) { public void onSuccess ( final java.util.List < TYPE_3 . Branch > result ) { METHOD_2 ( true ) ; VAR_2 . display ( result ) ; } } )
MODIFIER private static RETURN java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME VAR_2 INIT = new java.util.ArrayList < > ( VAR_1 . size ( ) ) TYPE java.lang.String NAME s IN VAR_1  VAR_2 . add ( TYPE_3 . commit ( schema , s ) )  return VAR_2 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME refs  METHOD_2 ( refs ) TYPE java.util.List<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_1 INIT = new TYPE_3 < > ( ) TYPE java.util.List<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_2 INIT = new TYPE_3 < > ( )  METHOD_3 ( VAR_1 , VAR_2 )  rw . METHOD_4 ( )  return ( ! ( METHOD_5 ( VAR_2 , 1 ) . isEmpty ( ) ) ) || ( ! ( METHOD_5 ( VAR_1 , 1 ) . isEmpty ( ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3  VAR_4 . METHOD_2 ( VAR_3 )  VAR_5 . METHOD_2 ( VAR_2 )  VAR_6 . METHOD_2 ( VAR_1 )  VAR_7 . METHOD_2 ( VAR_1 )  VAR_8 . METHOD_2 ( VAR_3 )  VAR_9 . METHOD_2 ( ( ( VAR_1 || VAR_2 ) || VAR_3 ) )
MODIFIER public RETURN void NAME update TYPE int NAME VAR_1  VAR_2 += VAR_1 COND ( VAR_3 ) != ( VAR_4 ) TYPE int NAME VAR_5 INIT = ( ( VAR_2 ) * INT_1 ) / ( VAR_3 ) COND VAR_5 > ( VAR_6 )  VAR_6 = VAR_5  METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) )  VAR_1 = new TYPE_5 ( )  VAR_2 = ( repo . METHOD_3 ( ) . METHOD_4 ( ) ) / INT_1
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME path IN METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = METHOD_3 ( path ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_1 . METHOD_4 ( ) ) COND VAR_2 . METHOD_5 ( new TYPE_3 ( ) )  METHOD_6 ( path )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  assertEquals ( STRING_2 , VAR_2 . toString ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( STRING_3 )  VAR_3 . METHOD_2 ( VAR_2 . toString ( ) )  assertEquals ( VAR_2 , VAR_3 )
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME index TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_4 ( new TYPE_5 ( VAR_2 ) )  VAR_1 . METHOD_2 ( 2 ) TYPE TYPE_6 NAME VAR_3 INIT = TYPE_6 . METHOD_3 ( ) TYPE java.util.List<com.google.gerrit.reviewdb.client.Project.NameKey> NAME VAR_4  VAR_4 = METHOD_4 ( VAR_1 ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_5 . error ( STRING_1 , e )  return new TYPE_7 . Result ( VAR_3 , false , 0 , 0 ) ;  return METHOD_5 ( index , VAR_4 , VAR_1 ) ;
MODIFIER public final RETURN void NAME onSuccess TYPE TYPE_1 NAME result COND METHOD_1 ( ) COND ( ( result . size ( ) ) == 1 ) && ( TYPE_2 . METHOD_2 ( query ) ) TYPE TYPE_3.ChangeInfo NAME c INIT = result . get ( 0 ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id INIT = c . METHOD_3 ( )  TYPE_4 . display ( TYPE_5 . METHOD_4 ( id ) , new TYPE_6 ( id ) )  display ( result )  this . display ( )
MODIFIER private RETURN void NAME commit TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_5 INIT = METHOD_3 ( VAR_1 , VAR_4 )  VAR_2 . commit ( VAR_5 ) TYPE TYPE_4 NAME VAR_5 INIT = METHOD_3 ( VAR_1 , VAR_4 )  VAR_3 . commit ( VAR_5 ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_6 INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 )  TYPE_5 . METHOD_4 ( VAR_4 , VAR_6 )
MODIFIER private static RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) COND VAR_1 != null  VAR_2 . METHOD_3 ( VAR_1 . value ( ) )  VAR_1 = TYPE_4 . METHOD_4 ( VAR_1 )  VAR_2 . METHOD_5 ( )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME msg COND ( ( info ) == null ) && ( ( VAR_1 ) != null )  info = new TYPE_1 ( TYPE_2 . info ( ) )  VAR_1 . add ( info )  info . METHOD_2 ( msg )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 . METHOD_2 ( ) ) && ( ( getRevision ( ) ) == null ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_3 ( METHOD_4 ( ) )  METHOD_1 ( repo ) TYPE TYPE_1 NAME e  throw new java.io.IOException ( e ) ;  repo . close ( )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) != null  return METHOD_2 ( VAR_1 ) ; NAME status . getStatus ( )  return STRING_1 ;  return STRING_2 ;  return ( ( ( ( ( STRING_3 + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_5 ) + ( VAR_6 ) ) + STRING_6 ;
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_1 INIT = name + STRING_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND TYPE_3 . METHOD_3 ( VAR_2 )  return METHOD_4 ( VAR_1 ) ;  return METHOD_5 ( name ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class )  TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( TYPE_3 . get ( STRING_1 ) ) ) . METHOD_7 ( )  TYPE_1 . METHOD_8 ( VAR_1 )  VAR_3 = new TYPE_4 ( VAR_4 , cfg , TYPE_1 . METHOD_2 ( VAR_5 class ) , VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_4 ( VAR_1 ) TYPE TYPE_3 NAME in INIT = TYPE_5 . METHOD_2 ( VAR_2 )  return new TYPE_6 ( in ) ; TYPE java.io.IOException NAME e  throw new TYPE_7 ( ( STRING_1 + VAR_1 ) , e ) ; TYPE TYPE_8 NAME e  throw new TYPE_7 ( ( STRING_1 + VAR_1 ) , e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  change = ctx . getChange ( ) TYPE TYPE_2 NAME update INIT = ctx . METHOD_2 ( psId )  VAR_1 = ( change . getStatus ( ) ) == ( VAR_2 ) COND VAR_1  change . METHOD_3 ( VAR_3 )  update . METHOD_3 ( change . getStatus ( ) )  ctx . METHOD_1 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return changes . id ( VAR_1 . get ( ) . apply ( revision , in ) . VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( )  VAR_2 = null  super . METHOD_1 ( )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME update  return ( ( ( update != null ) && ( ( TYPE_3 . METHOD_2 ( VAR_1 ) ) == ( TYPE_3 . METHOD_2 ( update . METHOD_3 ( ) ) ) ) ) && ( VAR_2 . equals ( update . METHOD_4 ( ) ) ) ) && ( VAR_3 . equals ( update . METHOD_5 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Status NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = getChange ( ) . change ( )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . isEqualTo ( c . METHOD_2 ( ) )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . isEqualTo ( c . getStatus ( ) )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . isEqualTo ( TYPE_2 . METHOD_3 ( c . METHOD_4 ( ) ) )  METHOD_5 ( c , VAR_3 )
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 . Factory class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )  factory ( VAR_8 . Factory class )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = INT_1 TYPE long NAME VAR_2 INIT = INT_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( new TYPE_2 ( VAR_1 ) , VAR_2 )  assertEquals ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) , VAR_3 . toString ( ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( new TYPE_2 ( 0 ) , 0 )  VAR_4 . METHOD_2 ( VAR_3 . toString ( ) )  assertEquals ( VAR_3 , VAR_4 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = repo . METHOD_1 ( name )  return id != null ? walk . METHOD_2 ( id ) : null ; TYPE TYPE_2 NAME e  return null ; TYPE TYPE_3 NAME e  return null ; TYPE TYPE_4 NAME e  return null ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE TYPE_3<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME VAR_5 INIT = db . METHOD_2 ( ) . METHOD_3 ( VAR_2 )  TYPE_4 . METHOD_1 ( db , VAR_1 , VAR_5 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( server , admin )  VAR_2 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 . get ( ) )  VAR_3 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_3 . get ( ) )  VAR_1 . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME revision TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 COND ! ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_5 NAME event INIT = new TYPE_5 ( change , revision , VAR_1 , VAR_2 ) TYPE TYPE_6 NAME VAR_4 IN VAR_3  VAR_4 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_7 . log , e )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE int NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE TYPE_1.ChangeInfo NAME c INIT = getChange ( changeId , VAR_3 )  org.junit.Assert.assertEquals ( VAR_2 . name ( ) , VAR_4 )  org.junit.Assert.assertEquals ( VAR_1 , VAR_5 . get ( VAR_2 . name ( ) ) . VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReceiveCommand NAME cmd TYPE TYPE_2 NAME ctl INIT = VAR_1 . METHOD_2 ( cmd . getRefName ( ) ) COND ctl . METHOD_3 ( )  cmd . METHOD_4 ( rp )  TYPE_3 . reject ( cmd , STRING_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 )  commit . METHOD_2 ( ( VAR_1 ? ! ( VAR_3 . METHOD_3 ( ) . isEmpty ( ) ) : false ) )  VAR_4 . METHOD_2 ( ( VAR_1 ? VAR_3 . METHOD_4 ( ) : false ) )  VAR_5 . METHOD_2 ( VAR_1 )  VAR_6 . METHOD_2 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE TYPE_3 NAME cm INIT = VAR_1 . create ( change.getId ( ) )  cm . METHOD_2 ( ctx . METHOD_3 ( ) . getAccountId ( ) )  cm . METHOD_4 ( patchSet , VAR_2 )  cm . METHOD_5 ( VAR_3 . METHOD_6 ( ) )  cm . METHOD_7 ( VAR_3 . METHOD_8 ( ) )  cm . METHOD_9 ( )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_2 NAME VAR_3 COND TYPE_4 . METHOD_2 ( VAR_1 , VAR_3 )  return false ;  return ( VAR_2 == null ) || ( rw . METHOD_3 ( VAR_2 , VAR_3 ) ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER protected static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.lang.String NAME table TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME to TYPE TYPE_1 NAME s INIT = ( ( TYPE_1 ) ( db ) ) TYPE TYPE_2 NAME e INIT = new TYPE_2 ( s )  s . METHOD_2 ( e , table , VAR_1 , to )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME key INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) TYPE org.eclipse.jgit.lib.Repository NAME git INIT = VAR_1 . METHOD_2 ( key ) TYPE TYPE_2.ProjectConfig NAME cfg INIT = new TYPE_2 . ProjectConfig ( key )  cfg . METHOD_1 ( git )  return VAR_2 . create ( cfg ) ;  git . close ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 NAME type  this . VAR_3 = ( VAR_1 != null ) ? TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) : null  return this ;  throw new TYPE_4 ( java.lang.String.format ( STRING_1 , type ) ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME is  VAR_1 = new TYPE_2 ( ) TYPE TYPE_3 NAME input INIT = new TYPE_3 ( is ) TYPE char[] NAME VAR_2 INIT = new char [ INT_1 ] TYPE int NAME n INIT = 0 COND ( n = input . METHOD_2 ( VAR_2 ) ) != ( - 1 )  VAR_1 . METHOD_3 ( VAR_2 , 0 , n )  return VAR_1 . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  patchSet = ctx . METHOD_2 ( ) . patchSets ( ) . get ( psId ) COND ! ( patchSet . METHOD_3 ( ) )  throw new TYPE_3 ( STRING_1 ) ;  patchSet . METHOD_4 ( false )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( ) TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( r . getChangeId ( ) )  VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( getChange ( VAR_1 ) . VAR_3 ) . METHOD_6 ( )  VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_7 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( getChange ( VAR_1 ) . VAR_3 ) . METHOD_8 ( )
MODIFIER protected RETURN void NAME METHOD_1  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_1 class ) . to ( VAR_2 class )  bind ( VAR_3 class ) . to ( VAR_4 class )  install ( TYPE_1 . METHOD_2 ( ) )  bind ( VAR_5 class ) . METHOD_3 ( TYPE_2 . create ( ) ) . to ( VAR_6 class )
MODIFIER private static synchronized RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME p INIT = new TYPE_3 ( )  p . METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) )  p . METHOD_2 ( STRING_2 , ( ( STRING_3 + STRING_4 ) + ( ++ ( VAR_2 ) ) ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_4 ( p )  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1[] NAME VAR_1 TYPE TYPE_5 NAME d INIT = new TYPE_5 ( ) COND ( VAR_1 == null ) || ( ( VAR_1 . length ) == 0 )  VAR_2 = VAR_3  VAR_2 = VAR_4  VAR_5 = TYPE_6 . METHOD_2 ( VAR_1 [ 0 ] )  METHOD_1 ( db , d )
MODIFIER public RETURN org.eclipse.jgit.lib.ObjectId NAME commit TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( METHOD_1 ( ) )  VAR_1 . add ( this )  TYPE_2 . METHOD_2 ( getChange ( ) , VAR_1 . METHOD_3 ( ) . get ( ctl . getId ( ) ) )  VAR_1 . METHOD_4 ( )  return METHOD_5 ( ) ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME index TYPE int NAME VAR_1 INIT = index . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1 NAME i IN VAR_2 COND ( i . METHOD_2 ( ) . METHOD_3 ( ) ) == VAR_1  throw new TYPE_2 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ;  VAR_2 . add ( index )
MODIFIER private RETURN PatchSet.Id NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = commit . METHOD_2 ( VAR_2 ) COND ( VAR_1 . size ( ) ) != 1  throw METHOD_3 ( STRING_1 , VAR_2 , VAR_1 ) ; TYPE TYPE_2 NAME psId INIT = TYPE_3 . METHOD_4 ( VAR_1 . get ( 0 ) ) COND psId == null  throw METHOD_3 ( STRING_2 , VAR_2 , VAR_1 . get ( 0 ) ) ;  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( change.getId ( ) , psId ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( 0 ) TYPE TYPE_1 NAME VAR_1  METHOD_3 ( ( ( VAR_2 ) - FLOAT_1 ) )  METHOD_4 ( ) TYPE TYPE_2.ChangeInfo NAME info INIT = METHOD_5 ( METHOD_6 ( VAR_3 ) ) TYPE java.lang.String NAME message INIT = VAR_4 . get ( VAR_5 ) . commit . message  com.google.common.truth.Truth.assertThat ( message ) . contains ( java.lang.String.format ( STRING_1 , VAR_6 , admin . METHOD_7 ( ) . METHOD_8 ( ) ) )
MODIFIER private static RETURN TYPE_1 NAME create TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3<TYPE_2> NAME VAR_2 TYPE java.util.Map<java.lang.String,TYPE_4> NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String NAME VAR_5  return new TYPE_5 ( VAR_1 , TYPE_6 . METHOD_1 ( VAR_2 ) , TYPE_7 . METHOD_1 ( VAR_3 ) , VAR_4 , VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r  revision ( r ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) )  revision ( r ) . submit ( ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_4 ( project )  org.junit.Assert.assertEquals ( r . METHOD_5 ( ) , repo . METHOD_6 ( STRING_1 ) . METHOD_7 ( ) )  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( TYPE_1 . METHOD_3 ( TYPE_2 . r ( TYPE_2 . b ( 0 ) ) ) )  assertEquals ( STRING_1 , TYPE_1 . METHOD_3 ( TYPE_2 . r ( TYPE_2 . b ( 1 , CHAR_1 ) ) ) )  assertEquals ( STRING_2 , TYPE_1 . METHOD_3 ( TYPE_2 . r ( TYPE_2 . b ( INT_1 , CHAR_2 , CHAR_3 , CHAR_4 , CHAR_4 , CHAR_5 , CHAR_5 , CHAR_6 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1.Result NAME r INIT = METHOD_3 ( ) TYPE TYPE_2 NAME revision INIT = VAR_1 . changes ( ) . id ( r . getChangeId ( ) ) . METHOD_4 ( ) TYPE TYPE_3 NAME in INIT = new TYPE_3 ( )  VAR_2 = VAR_3 . toString ( )  in . label ( STRING_1 , INT_1 )  VAR_4 . METHOD_5 ( VAR_5 class )  VAR_4 . METHOD_6 ( STRING_2 )  revision . METHOD_7 ( in )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = TYPE_8 . of ( id ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = put . get ( ) . apply ( VAR_1 , in ) COND ( VAR_3 . size ( ) ) == 1  return VAR_3 . get ( 0 ) ;  throw new TYPE_9 ( ) ;
MODIFIER public static RETURN boolean NAME METHOD_1  return ( ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( TYPE_1 . METHOD_4 ( ) . auth ( ) . METHOD_5 ( ) ) ) && ( ! ( TYPE_1 . METHOD_2 ( ) . METHOD_6 ( ) ) ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = new com.google.gerrit.reviewdb.client.Account ( VAR_1 , TYPE_2 . METHOD_2 ( ) )  account . METHOD_3 ( false ) TYPE TYPE_3<TYPE_4> NAME VAR_2 INIT = java.util.Collections . METHOD_4 ( ) TYPE TYPE_3<TYPE_5> NAME VAR_3 INIT = java.util.Collections . METHOD_4 ( ) TYPE java.util.Set<TYPE_6> NAME VAR_4 INIT = TYPE_7 . of ( )  return new TYPE_1 ( account , VAR_4 , VAR_2 , VAR_3 ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 NAME VAR_1  return  ( )  - >  ( VAR_3 ? VAR_4 : VAR_5 ) . METHOD_2 ( )  return  ( )  - >  ( VAR_7 ? VAR_8 : VAR_5 ) . METHOD_2 ( )  return  ( )  - >
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.PatchSetApproval NAME VAR_1 COND VAR_1 != null  return VAR_2 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) ) ;  return VAR_3 ;
MODIFIER private RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME VAR_1 TYPE TYPE_2<TYPE_1> NAME result INIT = TYPE_3 . METHOD_2 ( VAR_1 . size ( ) ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_1 TYPE TYPE_1 NAME commit INIT = VAR_2 . get ( cd . getId ( ) )  TYPE_4 . METHOD_3 ( ( commit != null ) , STRING_1 , cd . change ( ) . getId ( ) )  result . add ( commit )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_3 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSet.Id,com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> NAME db COND ( VAR_1 ) == null  VAR_1 = TYPE_3 . create ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_2 IN com.google.gerrit.server.query.change.ChangeData . METHOD_2 ( db . get ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) )  VAR_1 . put ( VAR_2 . METHOD_5 ( ) , VAR_2 )  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( TYPE_1 . METHOD_2 ( ) ) != null  table . METHOD_3 ( 0 , VAR_1 , TYPE_2 . METHOD_4 ( ) )  table . METHOD_5 ( ) . METHOD_6 ( 0 , VAR_1 , TYPE_3 . css ( ) . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( git , VAR_2 ) TYPE TYPE_2 NAME res  res = METHOD_3 ( VAR_1 )  METHOD_4 ( )  VAR_1 . close ( ) TYPE TYPE_3 NAME VAR_3  VAR_4 . METHOD_5 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 )  METHOD_6 ( res . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false ) COND ( ( VAR_1 ) != null ) && ( ( VAR_2 ) >= 0 ) TYPE TYPE_1 NAME c INIT = TYPE_2 . METHOD_3 ( VAR_2 ) COND c != null  VAR_3 . put ( VAR_1 , METHOD_4 ( c ) )  super . METHOD_1 ( )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME base  return ( ( java.util.Map < java.lang.String , TYPE_1 > ) ( VAR_1 . get ( ) . METHOD_2 ( base ) . apply ( revision ) . value ( ) ) ) ; TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1  return changes . id ( VAR_1 . get ( ) . apply ( revision , null ) . VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ; TYPE TYPE_3 NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 != null  VAR_1 . close ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND VAR_3 != VAR_1  VAR_3 . METHOD_1 ( )  VAR_3 . close ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 INIT = notes . getChange ( ) . METHOD_2 ( ) COND ( VAR_1 != null ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = METHOD_3 ( ) . getAccountId ( )  return id . equals ( VAR_1 . get ( ) ) ;  return false ;
MODIFIER private static RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_2 NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE byte[] NAME VAR_6 TYPE org.eclipse.jgit.revwalk.RevCommit NAME base TYPE TYPE_5 NAME VAR_7 INIT = TYPE_6 . METHOD_2 ( VAR_4 , VAR_3 )  TYPE_6 . METHOD_3 ( VAR_1 , repo , rw , base , VAR_7 . METHOD_4 ( ) , VAR_2 , VAR_5 , VAR_6 )  return VAR_7 . METHOD_5 ( VAR_2 ) ;
MODIFIER public RETURN void NAME run  METHOD_1 ( ) TYPE TYPE_1 NAME VAR_1 INIT = factory . create ( in , out )  VAR_1 . METHOD_2 ( format ) COND ( query ) != null  VAR_1 . METHOD_3 ( query )  VAR_1 . run ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_1 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_4 ( STRING_2 , u . METHOD_5 ( STRING_3 ) . METHOD_6 ( ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . get ( VAR_1 ) TYPE boolean NAME VAR_3  VAR_3 = METHOD_2 ( VAR_2 , null ) TYPE TYPE_2 NAME e  VAR_3 = false  return VAR_3 ? TYPE_1 . METHOD_3 ( VAR_1 ) : null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME event COND ( VAR_1 ) == null MODIFIER public RETURN void NAME onSuccess TYPE TYPE_5 NAME result  METHOD_3 ( result )  VAR_2 . METHOD_4 ( true )  TYPE_3 . METHOD_2 ( patchSet . getId ( ) , new TYPE_4 < TYPE_5 > ( ) { public void onSuccess ( final TYPE_5 result ) { METHOD_3 ( result ) ; VAR_2 . METHOD_4 ( true ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , null , true ) TYPE TYPE_2 NAME r INIT = VAR_3 . put ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) , METHOD_3 ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( r . METHOD_4 ( ) ) . isEqualTo ( VAR_4 )  r . METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE TYPE_2<?> NAME in INIT = VAR_2 COND in != null TYPE TYPE_3 NAME VAR_3 IN in . METHOD_2 ( ) COND ( VAR_3 . METHOD_3 ( VAR_4 class ) ) != null  VAR_1 . add ( new TYPE_1 ( VAR_3 ) )  in = in . METHOD_4 ( )  METHOD_1 ( VAR_1 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3,TYPE_4> NAME VAR_1 TYPE TYPE_5 NAME p INIT = METHOD_2 ( ) COND ( VAR_2 ) != null  return new TYPE_6 ( VAR_1 , VAR_2 ) ;  return new TYPE_7 ( VAR_1 , VAR_3 , p . METHOD_3 ( ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = VAR_1 . create ( db , change . getProject ( ) , change.getId ( ) )  cd . METHOD_2 ( user ) COND TYPE_5 . METHOD_3 ( cfg )  return METHOD_4 ( db , new TYPE_1 ( cd , db , null ) , user ) ;  return METHOD_5 ( db , new TYPE_1 ( cd , db , null ) , user ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE TYPE_2 NAME ref IN VAR_3 . values ( ) TYPE TYPE_3.AccountGroup NAME VAR_4 INIT = VAR_1 . get ( ref . METHOD_2 ( ) ) COND ( VAR_4 != null ) && ( ! ( VAR_4 . getName ( ) . equals ( ref . getName ( ) ) ) )  VAR_2 = true  ref . METHOD_3 ( VAR_4 . getName ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) . getAccountId ( ) . get ( ) TYPE int NAME i INIT = 0 COND i < INT_1  i ++  METHOD_5 ( repo , null , null , VAR_1 , null ) . insert ( )  METHOD_6 ( STRING_3 )  METHOD_6 ( STRING_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME p INIT = VAR_2 . projects ( ) . name ( ( VAR_1 + STRING_2 ) ) . create ( ) . get ( )  com.google.common.truth.Truth.assertThat ( p . name ) . isEqualTo ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( )  TYPE_3 . METHOD_3 ( VAR_3 . getProject ( ) , p )  METHOD_4 ( VAR_1 , STRING_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_3 class , new TYPE_4 < TYPE_1 > ( VAR_1 , this ) )  VAR_2 . create ( ) . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_1 ) , VAR_3 class ) TYPE TYPE_6 NAME err  VAR_4 = null  VAR_5 = null  throw err ;
MODIFIER protected RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( binder ( ) , VAR_1 )  bind ( VAR_2 class )  METHOD_3 ( VAR_3 , STRING_1 ) . to ( VAR_2 class )  delete ( VAR_1 ) . to ( VAR_4 class )  get ( VAR_5 , STRING_2 ) . to ( VAR_6 class )  put ( VAR_5 , STRING_2 ) . to ( VAR_7 class )  get ( VAR_8 , STRING_3 ) . to ( VAR_9 class )  put ( VAR_8 , STRING_3 ) . to ( VAR_10 class )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME ps INIT = VAR_1 . to ( git , STRING_1 ) . METHOD_3 ( ) TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = METHOD_4 ( ps )  org.junit.Assert.assertEquals ( 0 , VAR_3 . size ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME p INIT = VAR_2 . projects ( ) . create ( VAR_1 ) . get ( )  com.google.common.truth.Truth.assertThat ( p . name ) . isEqualTo ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( )  TYPE_3 . METHOD_3 ( VAR_3 . getProject ( ) , p )  METHOD_4 ( VAR_1 , STRING_2 )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.AccountGroup NAME group TYPE java.lang.String NAME name TYPE TYPE_1 NAME args INIT = new TYPE_1 ( )  args . METHOD_1 ( name )  VAR_1 = java.util.Collections.singleton ( admin . getId ( ) )  return VAR_2 . create ( args ) . METHOD_2 ( ) ;
MODIFIER private RETURN void NAME delete TYPE java.lang.String NAME path  METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  TYPE_4 . display ( TYPE_5 . METHOD_2 ( changeId ) ) MODIFIER public RETURN void NAME METHOD_3 TYPE TYPE_6 NAME VAR_1 BLOCK BLOCK  TYPE_1 . delete ( changeId . get ( ) , path , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( TYPE_3 result ) { TYPE_4 . display ( TYPE_5 . METHOD_2 ( changeId ) ) ; } public void METHOD_3 ( TYPE_6 VAR_1 ) { } } )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change.Id NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE TYPE_4.Key NAME VAR_2 INIT = new TYPE_4 . Key ( VAR_3 , VAR_1 ) TYPE TYPE_5 NAME VAR_4 INIT = db . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_4 . get ( VAR_2 ) COND VAR_5 == null  return VAR_6 . METHOD_3 ( VAR_1 , name , email ) ;  return VAR_5 . getAccountId ( ) ;
MODIFIER protected RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = new TYPE_2 < java.lang.String > ( )  VAR_1 . add ( STRING_1 ) TYPE TYPE_3 NAME c IN METHOD_2 ( )  VAR_1 . add ( c . getName ( ) )  return VAR_1 ;
MODIFIER private static RETURN java.lang.StringBuilder NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( VAR_1 ) TYPE int NAME n INIT = ( VAR_2 . get ( ) ) % INT_1 COND n < INT_2  r . append ( CHAR_1 )  r . append ( n )  r . append ( CHAR_2 )  r . append ( VAR_2 . get ( ) )  r . append ( CHAR_2 )  return r ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Key NAME key TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 INIT = VAR_1 . getAccountId ( ) TYPE boolean NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_3.Key NAME VAR_4 INIT = VAR_1 . METHOD_3 ( )  return METHOD_1 ( key , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER private RETURN long NAME METHOD_1 TYPE java.lang.String NAME n TYPE java.lang.String NAME VAR_1 TYPE long NAME VAR_2 TYPE long NAME d INIT = TYPE_1 . METHOD_2 ( VAR_2 , TYPE_2 ) TYPE long NAME m  m = TYPE_3 . METHOD_3 ( config , STRING_1 , n , VAR_1 , d , TYPE_1 )  return TYPE_2 . METHOD_2 ( m , TYPE_1 ) ;
MODIFIER private RETURN void NAME add TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_1 . add ( new TYPE_1 ( VAR_2 . getKey ( ) , TYPE_3 . METHOD_1 ( VAR_2 ) ) ) TYPE TYPE_4 NAME e  throw e ; TYPE TYPE_5 NAME e  METHOD_2 ( db , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_7 ( VAR_11 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME get TYPE TYPE_1 NAME p INIT = VAR_1 COND ( VAR_2 ) && ( p . METHOD_1 ( ) ) TYPE TYPE_1 NAME VAR_3  VAR_3 = new TYPE_1 ( ) TYPE java.io.IOException NAME e  VAR_4 . error ( STRING_1 , e )  return p ;  p = VAR_3  VAR_1 = p  return p ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3 NAME git INIT = METHOD_2 ( ) TYPE TYPE_4.Result NAME change INIT = METHOD_3 ( git , true )  METHOD_3 ( git , false ) TYPE java.util.Set<java.lang.String> NAME changes INIT = METHOD_4 ( change )  org.junit.Assert.assertEquals ( 0 , changes . size ( ) )
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME notes TYPE java.util.Set<java.lang.String> NAME result INIT = new TYPE_2 < > ( ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps IN VAR_1 . METHOD_2 ( db . get ( ) , notes ) TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = ps . METHOD_3 ( ) COND VAR_2 != null  result . METHOD_4 ( VAR_2 )  return result ;
MODIFIER public RETURN void NAME add TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != null COND VAR_1 instanceof TYPE_2 COND ( VAR_3 ) == null  VAR_3 = TYPE_3 . METHOD_1 ( )  VAR_3 . add ( ( ( TYPE_2 < ? > ) ( VAR_1 ) ) )  VAR_2 . add ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_8 NAME result INIT = VAR_1 . create ( VAR_2 , message ) . METHOD_1 ( ) COND ( result . METHOD_2 ( ) . size ( ) ) > 0  throw new TYPE_6 ( result . getChangeId ( ) ) ;  return VAR_3 . create ( result . getChangeId ( ) ) . METHOD_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  r . METHOD_3 ( )  r . METHOD_4 ( true )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_1 ) TYPE TYPE_3 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME value TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . create ( project ) TYPE TYPE_3.ProjectConfig NAME config INIT = TYPE_4 . METHOD_2 ( VAR_1 )  config . getProject ( ) . METHOD_1 ( value )  config . commit ( VAR_1 )  VAR_3 . METHOD_3 ( config . getProject ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Key NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE TYPE_3<TYPE_4> NAME VAR_5 COND VAR_3 == null  VAR_5 . METHOD_2 ( new TYPE_5 ( ) )  return ;  TYPE_6 . METHOD_3 ( VAR_6 . create ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) . to ( VAR_5 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME project TYPE java.lang.String NAME ref TYPE TYPE_2 NAME cfg IN TYPE_3 . METHOD_2 ( ) COND cfg . METHOD_3 ( ref ) TYPE TYPE_4 NAME VAR_1 IN cfg . METHOD_4 ( project )  TYPE_3 . METHOD_5 ( project , ref , cfg , VAR_1 )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 class )  bind ( VAR_4 class ) . in ( VAR_5 )  bind ( VAR_6 class ) . METHOD_3 ( VAR_7 class ) . in ( VAR_5 )  factory ( VAR_8 . Factory class )  factory ( VAR_9 . Factory class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_10 class ) . to ( VAR_11 class )  install ( VAR_12 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 TYPE TYPE_2<java.lang.String,TYPE_3<TYPE_4<?,?>>> NAME VAR_3 IN VAR_4 . METHOD_2 ( VAR_1 . getName ( ) ) . METHOD_3 ( ) TYPE TYPE_4<?,?> NAME VAR_5 INIT = VAR_3 . getValue ( ) . get ( ) COND VAR_2 . METHOD_4 ( VAR_5 )  ( ( TYPE_5 < ? , ? > ) ( VAR_5 ) ) . METHOD_5 ( )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  factory ( VAR_2 . Factory class )  install ( new TYPE_2 ( VAR_3 ) ) COND ( ( VAR_4 ) == null ) && ( ( base ) == null )  install ( new TYPE_3 ( ) )  install ( new TYPE_4 ( ) )
MODIFIER public RETURN TYPE_1 NAME create TYPE java.util.List<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( out . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Account NAME a IN out . values ( )  r . add ( new TYPE_2 ( a ) )  return new TYPE_1 ( r ) ;
MODIFIER public RETURN boolean NAME METHOD_1 COND ( TYPE_1 . equals ( VAR_1 ) ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) COND ! ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) && ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) )  return false ;  return ( METHOD_8 ( VAR_3 ) ) && ( METHOD_9 ( ) ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME s TYPE int NAME n INIT = ( VAR_1 . METHOD_2 ( s ) ) ? VAR_1 . METHOD_3 ( s ) : VAR_2  return ( VAR_3 ) > 0 ? ( TYPE_2 . METHOD_4 ( n , VAR_3 ) ) + 1 : n ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( ( ( METHOD_2 ( ) ) || ( VAR_1 . METHOD_3 ( METHOD_2 ( ) ) ) ) || ( VAR_1 . METHOD_1 ( ) ) ) && ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) ) && ( METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ) && ( ! ( METHOD_9 ( db ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Id NAME VAR_1 TYPE TYPE_4.AccountGroup NAME group INIT = VAR_2 . get ( VAR_1 ) COND group == null  throw new TYPE_3 ( VAR_1 ) ;  return new TYPE_1 ( user . get ( ) , group ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( VAR_3 class , new TYPE_4 < TYPE_1 > ( VAR_1 , this ) )  VAR_2 . create ( ) . METHOD_4 ( METHOD_5 ( VAR_1 ) , VAR_3 class ) TYPE TYPE_5 NAME err  VAR_4 = null  VAR_5 = null  throw err ;
MODIFIER protected RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_3 NAME create INIT = VAR_1 . create ( name )  create . apply ( VAR_2 , new TYPE_4 ( ) )  return new TYPE_1 < TYPE_2 > ( VAR_3 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( name ) ) ) ;
MODIFIER private static RETURN TYPE_1<?extendsTYPE_2> NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_3 NAME VAR_1 COND TYPE_5 . METHOD_2 ( name )  return null ; TYPE TYPE_1<?> NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( name , false , VAR_1 ) COND ! ( VAR_3 class . METHOD_4 ( VAR_2 ) )  throw new TYPE_6 ( java.lang.String.format ( STRING_1 , name , VAR_3 class . getName ( ) ) ) ;  return ( ( TYPE_1 < ? extends TYPE_2 > ) ( VAR_2 ) ) ;
MODIFIER public RETURN void NAME onSuccess TYPE java.util.List<TYPE_1> NAME result TYPE java.util.List<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( result . size ( ) ) TYPE TYPE_1 NAME VAR_1 IN result  r . add ( new TYPE_2 ( VAR_1 ) )  VAR_2 . METHOD_1 ( req , new TYPE_3 ( r ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.AccountGroup> NAME schema TYPE TYPE_3 NAME cfg TYPE TYPE_4 NAME VAR_1 COND TYPE_5 . METHOD_2 ( cfg )  return new TYPE_6 ( ) ; TYPE TYPE_7 NAME VAR_2 INIT = TYPE_8 . METHOD_3 ( VAR_1 , ( ( VAR_3 ) + STRING_1 ) , schema )  return TYPE_9 . METHOD_4 ( VAR_2 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME key MODIFIER MODIFIER RETURN TYPE_3 NAME METHOD_3 TYPE java.lang.String NAME VAR_2 INIT = TYPE_4 . METHOD_4 ( VAR_1 , key )  return VAR_3 . METHOD_5 ( TYPE_5 . on ( STRING_4 ) . METHOD_6 ( VAR_4 , STRING_5 , VAR_1 ) , VAR_2 ) ;  return new TYPE_2 ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( METHOD_2 ( key ) ) ) + STRING_3 ) ) { TYPE_3 METHOD_3 ( ) throws java.io.IOException { java.lang.String VAR_2 = TYPE_4 . METHOD_4 ( VAR_1 , key ) ; return VAR_3 . METHOD_5 ( TYPE_5 . on ( STRING_4 ) . METHOD_6 ( VAR_4 , STRING_5 , VAR_1 ) , VAR_2 ) ; } } . METHOD_7 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_1 INIT = insert ( METHOD_3 ( repo ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_2 INIT = insert ( METHOD_3 ( repo ) )  METHOD_4 ( STRING_2 )  METHOD_4 ( VAR_1 . getId ( ) . get ( ) , VAR_1 )  METHOD_4 ( VAR_2 . getId ( ) . get ( ) , VAR_2 )
MODIFIER public RETURN TYPE_1.ChangeInfo NAME apply TYPE TYPE_2 NAME req TYPE TYPE_3 NAME input TYPE TYPE_6 NAME VAR_1 INIT = req . METHOD_1 ( ) TYPE TYPE_7 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND ! ( VAR_1 . METHOD_4 ( VAR_3 . get ( ) ) )  throw new TYPE_8 ( STRING_1 ) ; TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = METHOD_5 ( VAR_1 , input . message , VAR_2 . METHOD_6 ( ) )  return VAR_4 . create ( VAR_5 ) . format ( change ) ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 class )  bind ( VAR_4 class ) . in ( VAR_5 )  bind ( VAR_6 class ) . METHOD_3 ( VAR_7 class ) . in ( VAR_5 )  factory ( VAR_8 . Factory class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_9 class ) . to ( VAR_10 class )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_2.Key NAME key INIT = new TYPE_2 . Key ( VAR_2 , VAR_1 )  return auth ( db . METHOD_3 ( ) . get ( key ) ) ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  METHOD_4 ( ) . log ( STRING_1 , e )  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME user INIT = VAR_1 . METHOD_1 ( ) COND ( user != null ) && ( user . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) )  VAR_2 . METHOD_3 ( user . METHOD_4 ( ) )  return VAR_2 ;  return user ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 , STRING_2 , STRING_3 ) ) . METHOD_5 ( null ) . METHOD_6 ( )  METHOD_7 ( )  METHOD_8 ( STRING_4 , VAR_1 . METHOD_9 ( ) )
MODIFIER public RETURN TYPE_1 NAME run TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Account.Id NAME me INIT = getAccountId ( ) TYPE TYPE_3.Key NAME VAR_1 IN VAR_2 COND ! ( me . equals ( VAR_1 . getParentKey ( ) ) )  throw new TYPE_2 ( new TYPE_4 ( ) ) ;  db . METHOD_1 ( ) . METHOD_2 ( VAR_2 )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( admin ) TYPE java.lang.String NAME result INIT = VAR_1 . METHOD_2 ( STRING_1 )  org.junit.Assert . METHOD_3 ( result . contains ( STRING_2 ) )  org.junit.Assert . METHOD_3 ( result . contains ( STRING_3 ) )  org.junit.Assert . METHOD_3 ( result . contains ( STRING_4 ) )  org.junit.Assert . METHOD_3 ( result . contains ( STRING_5 ) )  org.junit.Assert . METHOD_3 ( result . contains ( STRING_6 ) )  VAR_1 . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . delete ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( branch . METHOD_2 ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) )  r . METHOD_4 ( )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME result INIT = new TYPE_1 ( )  VAR_3 = psId . getParentKey ( ) . get ( )  result . commit = new TYPE_2 ( )  VAR_4 . commit = VAR_1 . name ( )  VAR_5 = psId . get ( )  VAR_6 = VAR_2  result . status = STRING_1  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_1 INIT = insert ( METHOD_3 ( repo , null , null , null , null ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_2 INIT = insert ( METHOD_3 ( repo , null , null , null , null ) )  METHOD_4 ( STRING_2 )  METHOD_4 ( VAR_1 . getId ( ) . get ( ) , VAR_1 )  METHOD_4 ( VAR_2 . getId ( ) . get ( ) , VAR_2 )
MODIFIER public RETURN void NAME delete TYPE TYPE_1 NAME edit TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = edit . getChange ( ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_1 ( change . getProject ( ) )  TYPE_2 . METHOD_2 ( repo , edit )  repo . close ( )  VAR_2 . index ( db . get ( ) , change )
MODIFIER private RETURN TYPE_1.OrmException NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME err COND ( ( err . METHOD_2 ( ) ) == null ) && ( ( err . METHOD_3 ( ) ) != null )  err . METHOD_4 ( err . METHOD_3 ( ) )  return schema . METHOD_5 ( ) . METHOD_1 ( VAR_1 , TYPE_3 . METHOD_6 ( ) , err ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME in  TYPE_1 . METHOD_2 ( in )  METHOD_3 ( ( STRING_1 + in ) ) TYPE TYPE_2 NAME e  assertEquals ( ( STRING_2 + in ) , e . getMessage ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1 NAME p COND ( ( p . value ) < ( VAR_1 . length ) ) && ( ( VAR_1 [ p . value ] ) == CHAR_1 )  ( p . value ) ++
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 )  return VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 ) ;  return VAR_1 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ;
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db  METHOD_1 ( db , VAR_1 ) TYPE TYPE_2.AccountGroup NAME group INIT = db . METHOD_2 ( ) . get ( VAR_1 ) COND group == null  throw new TYPE_3 ( new TYPE_5 ( ) ) ;  group . METHOD_3 ( VAR_2 )  db . METHOD_2 ( ) . update ( java.util.Collections.singleton ( group ) )  return VAR_3 ;
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_2.Change NAME change INIT = db . changes ( ) . get ( id ) COND change == null  throw new TYPE_3 ( new TYPE_5 ( ) ) ; TYPE TYPE_6 NAME VAR_1 INIT = new TYPE_6 ( ) TYPE TYPE_1 NAME d INIT = new TYPE_1 ( )  d . METHOD_1 ( db , new TYPE_7 ( db ) , VAR_1 , change )  return d ;
MODIFIER public RETURN org.eclipse.jgit.lib.ObjectId NAME commit TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( METHOD_1 ( ) )  VAR_1 . add ( this )  VAR_1 . METHOD_2 ( getChange ( ) )  VAR_1 . METHOD_3 ( )  return METHOD_4 ( ) ;
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND VAR_2 . equals ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  return VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 , VAR_4 ) ; TYPE TYPE_4 NAME VAR_5 INIT = VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 )  return VAR_5 . METHOD_4 ( VAR_3 ) ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . to ( VAR_2 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )
MODIFIER private RETURN Project.NameKey NAME METHOD_1 TYPE TYPE_1 NAME p TYPE java.lang.String NAME projectName INIT = VAR_1 . METHOD_2 ( p ) . toString ( ) COND ( VAR_2 ) != CHAR_1  projectName = projectName . METHOD_3 ( VAR_2 , CHAR_1 ) COND projectName . METHOD_4 ( TYPE_2 ) TYPE int NAME VAR_3 INIT = ( projectName . length ( ) ) - ( TYPE_2 . length ( ) )  projectName = projectName . METHOD_5 ( 0 , VAR_3 )  return new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) ;
MODIFIER private RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  TYPE_4 . display ( VAR_2 ) MODIFIER public RETURN void NAME METHOD_3 TYPE TYPE_5 NAME VAR_3  VAR_4 . METHOD_4 ( STRING_2 )  super . METHOD_3 ( VAR_3 )  TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 . getName ( ) , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( TYPE_3 result ) { TYPE_4 . display ( VAR_2 ) ; } public void METHOD_3 ( TYPE_5 VAR_3 ) { VAR_4 . METHOD_4 ( STRING_2 ) ; super . METHOD_3 ( VAR_3 ) ; } } )
MODIFIER private static RETURN TYPE_1.Test NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND STRING_1 . equals ( VAR_1 )  return VAR_2 ; COND STRING_2 . equals ( VAR_1 )  return VAR_3 ; COND STRING_3 . equals ( VAR_1 )  return VAR_4 ;  throw new TYPE_2 ( ( STRING_4 + VAR_1 ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME change INIT = VAR_1 . get ( ) COND VAR_2 . METHOD_2 ( change )  METHOD_3 ( change )  METHOD_4 ( change ) TYPE com.google.gwtorm.server.OrmException|TYPE_3|java.io.IOException|TYPE_4 NAME e  VAR_3 . error ( ( STRING_1 + ( VAR_4 ) ) , e )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < TYPE_2 > ( )  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) )  modules.add ( VAR_1 . METHOD_2 ( VAR_3 class ) )  return VAR_4 . METHOD_3 ( modules ) ;
MODIFIER protected RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = new TYPE_2 < java.lang.String > ( )  VAR_1 . add ( STRING_1 )  VAR_1 . add ( STRING_2 ) TYPE TYPE_3 NAME c IN METHOD_2 ( )  VAR_1 . add ( c . getName ( ) )  return VAR_1 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME s INIT = METHOD_2 ( ) COND ( s == null ) || ( ( s . length ( ) ) == 0 )  return STRING_1 ; TYPE java.lang.String[] NAME VAR_1 INIT = s . METHOD_3 ( STRING_2 ) COND ( VAR_1 . length ) < INT_1  return STRING_1 ;  return VAR_1 [ INT_1 ] ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME config INIT = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( projectName , config ) , new TYPE_3 ( STRING_5 , STRING_6 ) , new TYPE_4 ( ) )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( projectName , STRING_7 , STRING_8 ) ) . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME VAR_2 TYPE java.util.Set<java.lang.String> NAME VAR_3 TYPE java.util.Set<java.lang.String> NAME VAR_4 TYPE TYPE_2 NAME VAR_5 COND ! ( VAR_6 . METHOD_2 ( ) . METHOD_3 ( ) )  return ;  METHOD_1 ( util . METHOD_4 ( change ) , util . METHOD_5 ( VAR_1 ) , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_7 . error ( STRING_1 , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  repo . branch ( STRING_2 ) . commit ( ) . add ( STRING_3 , VAR_1 ) . create ( ) TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( STRING_4 )  org.junit.Assert . METHOD_3 ( VAR_2 . contains ( STRING_5 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  return ;  message . insert ( 0 , STRING_1 )  VAR_2 . create ( project , git , VAR_3 ) . METHOD_2 ( VAR_1 , VAR_4 , VAR_5 , message . toString ( ) ) COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_2 . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_3 ( VAR_3 ) ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_3 < ? > ) ( VAR_1 ) ) ) . isEmpty ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME info  VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . css ( ) . METHOD_4 ( ) ) COND ( ! ( TYPE_4 . equals ( info . path ( ) ) ) ) && ( ! ( info . METHOD_5 ( ) ) )  VAR_1 . append ( ( ( info . METHOD_6 ( ) ) - ( info . METHOD_7 ( ) ) ) )  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 )  assertThat ( VAR_3 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_4 ) . to ( VAR_2 ) . to ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_11 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME revision NAME type  break ;  revision = TYPE_3 . METHOD_2 ( revision , VAR_14 )  TYPE_4 . METHOD_3 ( ( revision == ( VAR_14 ) ) , STRING_1 , type )  break ;  this . VAR_15 = revision  return this ;
MODIFIER public final RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME VAR_2 IN TYPE_2 . METHOD_2 ( METHOD_3 ( ) )  VAR_1 . add ( VAR_2 . get ( ) )  return VAR_1 ;
MODIFIER public static RETURN com.google.gerrit.reviewdb.client.PatchSet NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME id TYPE org.eclipse.jgit.lib.ObjectId NAME revision TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = new com.google.gerrit.reviewdb.client.PatchSet ( id )  ps . METHOD_2 ( new TYPE_1 ( revision . name ( ) ) )  ps . METHOD_3 ( VAR_1 )  ps . METHOD_4 ( TYPE_2 . METHOD_5 ( ) )  return ps ;
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo  repo = VAR_2 . METHOD_2 ( VAR_3 ) TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ; TYPE TYPE_1 NAME VAR_4 INIT = repo . METHOD_3 ( )  return VAR_4 . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) ; TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 , VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . to ( VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_5 ( VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cfg  METHOD_2 ( TYPE_2 . METHOD_3 ( true , java.util.Collections . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 , VAR_2 ) ) , VAR_3 ) ) TYPE TYPE_4<TYPE_5> NAME factory COND cfg . METHOD_6 ( STRING_1 , null , STRING_2 , false )  factory = new TYPE_6 . Factory ( )  factory = TYPE_7 . METHOD_7 ( )  METHOD_8 ( new TYPE_8 ( factory ) )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND VAR_2 . equals ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  return VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 , VAR_4 ) ; TYPE TYPE_4 NAME VAR_5 INIT = VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 )  return VAR_5 . METHOD_4 ( VAR_3 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_1<TYPE_4<TYPE_5>> NAME VAR_3 TYPE TYPE_1<TYPE_4<TYPE_5>> NAME VAR_4 TYPE TYPE_6 NAME VAR_5 TYPE TYPE_4<TYPE_2> NAME VAR_6 INIT = VAR_1 . values ( )  TYPE_2 . METHOD_2 ( VAR_6 ) TYPE TYPE_7 NAME cmd INIT = new TYPE_7 ( VAR_1 , VAR_6 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) COND cmd . METHOD_3 ( )  cmd . METHOD_4 ( )  TYPE_8 . get ( ) . METHOD_5 ( cmd )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE TYPE_3 NAME VAR_1 INIT = walk . METHOD_2 ( id ) TYPE TYPE_3 NAME VAR_2 INIT = walk . METHOD_1 ( VAR_1 )  return new TYPE_1 ( name , VAR_1 , VAR_1 . METHOD_3 ( ) , VAR_2 , VAR_2 . METHOD_3 ( ) ) ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_2.Key NAME key INIT = new TYPE_2 . Key ( VAR_2 , VAR_1 ) TYPE TYPE_2 NAME id INIT = db . METHOD_3 ( ) . get ( key ) COND id != null  return TYPE_1 . of ( id . getAccountId ( ) ) ;  return TYPE_1 . METHOD_4 ( ) ;  db . close ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1  db . create ( ) TYPE TYPE_2.ProjectConfig NAME c INIT = new TYPE_2 . ProjectConfig ( VAR_1 ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_2 ( VAR_1 )  c . METHOD_3 ( repo )  return new TYPE_1 ( TYPE_3 . METHOD_4 ( c . METHOD_5 ( ) . values ( ) ) ) ;  repo . close ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id TYPE TYPE_5 NAME user INIT = VAR_1 . METHOD_2 ( )  user . METHOD_3 ( ) TYPE TYPE_6 NAME change INIT = changes . METHOD_1 ( VAR_2 , id ) COND user . METHOD_4 ( ) . contains ( change . getChange ( ) . getId ( ) )  return new TYPE_7 ( user , change ) ;  throw new TYPE_4 ( id ) ;  user . METHOD_5 ( )
MODIFIER private RETURN java.lang.String NAME METHOD_1 COND ( METHOD_2 ( ) ) != null TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( METHOD_2 ( ) )  r . append ( STRING_1 )  return r . toString ( ) ;  return null ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config  super . METHOD_1 ( config ) TYPE java.lang.String NAME path INIT = config . METHOD_2 ( ) . METHOD_3 ( )  base = ( TYPE_3 . METHOD_4 ( path ) ) + STRING_1 TYPE TYPE_4 NAME VAR_1 IN VAR_2 TYPE TYPE_5 NAME VAR_3 INIT = METHOD_5 ( VAR_1 ) COND VAR_3 != null  plugins . put ( VAR_1 . getName ( ) , VAR_3 )  VAR_2 = null
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = change . getProject ( )  return VAR_2 . METHOD_1 ( VAR_1 , user ) . METHOD_1 ( change ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ;
MODIFIER public RETURN java.lang.String NAME toString TYPE java.lang.String NAME VAR_1 INIT = getValue ( ) COND TYPE_1 . METHOD_1 ( VAR_1 )  return ( ( METHOD_2 ( ) ) + STRING_1 ) + VAR_1 ;  return ( ( ( METHOD_2 ( ) ) + STRING_2 ) + VAR_1 ) + STRING_3 ;
MODIFIER MODIFIER RETURN java.util.List<TYPE_1> NAME METHOD_1 COND VAR_1  return METHOD_2 ( ) ; TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( ) TYPE TYPE_3 NAME s IN METHOD_4 ( )  VAR_2 . METHOD_5 ( s . METHOD_2 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 COND ( VAR_2 ) != null  throw new TYPE_1 ( STRING_1 ) ;  VAR_2 = new TYPE_2 ( new TYPE_3 . Factory ( ) . METHOD_2 ( ) ) TYPE TYPE_4<?,?> NAME p IN VAR_3 . values ( )  p . bind ( VAR_2 . METHOD_3 ( p . getName ( ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_2 NAME ctl INIT = VAR_1 . get ( ) . METHOD_2 ( ) COND ! ( ctl . METHOD_3 ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) ) )  throw new TYPE_1 ( java.lang.String.format ( STRING_2 , VAR_1 . get ( ) . METHOD_4 ( ) , new TYPE_3 ( ) . METHOD_5 ( ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_2.AccountGroup NAME group INIT = db . METHOD_1 ( ) . get ( VAR_1 )  METHOD_2 ( db , group ) TYPE TYPE_1 NAME d INIT = new TYPE_1 ( ) TYPE boolean NAME VAR_2 INIT = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( group . getId ( ) )  d . METHOD_5 ( db , new TYPE_6 ( db ) , group , VAR_2 )  return d ;
MODIFIER protected RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE java.lang.String NAME ref  java.util.Collections . METHOD_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( db , admin . METHOD_3 ( ) , VAR_4 , VAR_5 , new java.lang.String ( TYPE_4 . METHOD_4 ( VAR_1 ) ) , changeId )  return VAR_2 . to ( git , ref ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = insert ( METHOD_3 ( repo , null , null , null , null ) ) TYPE java.lang.String NAME key INIT = change . getKey ( ) . get ( )  METHOD_4 ( STRING_2 ) TYPE int NAME i INIT = 0 COND i <= INT_1  i ++ TYPE java.lang.String NAME VAR_1 INIT = key . METHOD_5 ( 0 , ( INT_2 - i ) )  METHOD_4 ( VAR_1 , change )
MODIFIER public final RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME n INIT = VAR_1 . METHOD_2 ( 0 ) TYPE TYPE_3.AccountGroup NAME group INIT = VAR_2 . get ( new TYPE_4 . NameKey ( n ) ) COND group == null  throw new TYPE_2 ( VAR_3 , ( ( STRING_1 + n ) + STRING_2 ) ) ;  VAR_4 . METHOD_3 ( group . getId ( ) )  return 1 ;
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . METHOD_3 ( ) . url ( ) ) . isEqualTo ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 )  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . METHOD_3 ( ) . url ( ) ) . isEqualTo ( VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_3 ) . METHOD_5 ( VAR_6 , VAR_7 ) . METHOD_5 ( VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_6 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( )  org.junit.Assert . METHOD_3 ( STRING_1 ) TYPE TYPE_1 NAME e TYPE TYPE_2[] NAME VAR_1 INIT = TYPE_3 . METHOD_4 ( e . METHOD_5 ( ) , TYPE_4 . METHOD_6 ( ) . METHOD_5 ( ) [ 1 ] ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_5 . toString ( VAR_1 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_7 ( STRING_2 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . contains ( STRING_3 )
MODIFIER MODIFIER RETURN void NAME display TYPE java.util.List<TYPE_1.Branch> NAME result  VAR_1 = false COND 1 < ( table . METHOD_1 ( ) )  table . METHOD_2 ( ( ( table . METHOD_1 ( ) ) - 1 ) ) TYPE TYPE_1.Branch NAME VAR_2 IN result TYPE int NAME row INIT = table . METHOD_1 ( )  table . METHOD_3 ( row )  METHOD_4 ( row )  METHOD_5 ( row , VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME project TYPE TYPE_2 NAME p IN project . METHOD_2 ( ) TYPE TYPE_3 NAME cfg INIT = VAR_2 . METHOD_3 ( p , VAR_3 ) COND cfg . METHOD_4 ( VAR_4 ) . contains ( VAR_1 )  return new TYPE_4 ( cfg ) . METHOD_1 ( VAR_1 ) ;  return new TYPE_4 ( VAR_2 . METHOD_5 ( VAR_3 ) ) . METHOD_1 ( VAR_1 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME message MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( result . METHOD_4 ( ) ) )  METHOD_5 ( )  TYPE_1 . METHOD_2 ( project , branch , message , base , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( result . METHOD_4 ( ) ) ) ; METHOD_5 ( ) ; } } )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME p INIT = METHOD_2 ( name )  return VAR_1 . get ( p , METHOD_3 ( p ) ) ; TYPE TYPE_3 NAME e  VAR_2 . METHOD_4 ( java.lang.String.format ( STRING_1 , name ) , e )  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_2<java.lang.String> NAME VAR_4 INIT = VAR_5 . get ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_2 ( ) . METHOD_6 ( ) COND VAR_4 . METHOD_7 ( )  VAR_3 . add ( VAR_4 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( VAR_3 , TYPE_3 . METHOD_8 ( VAR_2 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id COND ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  throw new TYPE_5 ( STRING_1 ) ;  return new TYPE_1 ( VAR_1 , id . get ( ) ) ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 NAME VAR_1  return false ; COND ( ( ( CHAR_8 <= VAR_1 ) && ( VAR_1 <= CHAR_9 ) ) || ( ( CHAR_10 <= VAR_1 ) && ( VAR_1 <= CHAR_11 ) ) ) || ( ( CHAR_12 <= VAR_1 ) && ( VAR_1 <= CHAR_13 ) )  return false ;  return true ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE TYPE_1.ChangeInfo NAME c INIT = getChange ( changeId , VAR_1 ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . get ( STRING_1 )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_2 ( 1 )  com.google.common.truth.Truth.assertThat ( VAR_4 . get ( 0 ) . value . METHOD_3 ( ) ) . isEqualTo ( 2 )  com.google.common.truth.Truth.assertThat ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_4 . get ( 0 ) . VAR_5 ) ) . isEqualTo ( admin . getId ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  METHOD_4 ( VAR_1 class , out . METHOD_5 ( ) )  assertEquals ( TYPE_2 . of ( query ( in . METHOD_6 ( 0 ) , INT_1 ) , in . METHOD_6 ( 1 ) ) , out . METHOD_7 ( ) )
MODIFIER public RETURN AccountGroup.Id NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . create ( ) TYPE TYPE_4.Id NAME me INIT = user . getAccountId ( )  return VAR_1 . METHOD_2 ( VAR_3 , null , null , me ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME p INIT = VAR_2 . projects ( ) . create ( ( VAR_1 + STRING_2 ) ) . get ( )  com.google.common.truth.Truth.assertThat ( p . name ) . isEqualTo ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( )  TYPE_3 . METHOD_3 ( VAR_3 . getProject ( ) , p )  METHOD_4 ( VAR_1 , STRING_3 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME base TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.lang.String NAME path TYPE byte[] NAME VAR_4 NAME VAR_1  VAR_2 . add ( new TYPE_5 ( path ) )  break ;  VAR_2 . add ( TYPE_6 . METHOD_2 ( VAR_1 , repo , rw , base , path , VAR_3 , VAR_4 ) )  break ;  VAR_2 . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_7 ) . METHOD_5 ( VAR_8 , VAR_9 ) . METHOD_5 ( VAR_10 ) . METHOD_6 ( VAR_3 , VAR_11 ) . METHOD_6 ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . create ( cd ) . METHOD_2 ( patchSet ) . METHOD_1 ( ) COND ( VAR_1 . status ) != ( VAR_3 )  throw new com.google.gwtorm.server.OrmException ( ( STRING_1 + VAR_1 ) ) ;  return VAR_1 . type ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) + ( VAR_1 ) ) + ( VAR_2 ) ) , METHOD_2 ( ( ( ( ( ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_1 ) ) + ( VAR_2 ) ) + STRING_2 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) ) )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( )  org.junit.Assert . METHOD_3 ( STRING_1 ) TYPE TYPE_1 NAME e TYPE TYPE_2[] NAME VAR_1 INIT = TYPE_3 . METHOD_4 ( e . METHOD_5 ( ) , TYPE_4 . METHOD_6 ( ) . METHOD_5 ( ) [ 1 ] ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_5 . toString ( VAR_1 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_7 ( STRING_2 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . contains ( STRING_3 )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME me COND me == null  return STRING_1 ; TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( me ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_3 INIT = VAR_2 . METHOD_3 ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_3 . getValue ( VAR_5 )  return VAR_4 != null ? VAR_4 : STRING_1 ;  VAR_1 . close ( ) TYPE java.io.IOException NAME e  return STRING_1 ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME info COND info . METHOD_1 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_3 . Factory ( ) ) COND info . METHOD_3 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_4 . Factory ( ) ) COND info . METHOD_4 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_2 , new TYPE_5 . Factory ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2  METHOD_2 ( res , VAR_3 )  res . METHOD_3 ( VAR_4 ) TYPE TYPE_5 NAME VAR_5 INIT = TYPE_6 . METHOD_4 ( req , res )  METHOD_5 ( req ) . create ( ) . METHOD_6 ( VAR_1 , VAR_2 , VAR_5 )  VAR_5 . METHOD_7 ( CHAR_1 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , VAR_1 , VAR_2 )  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 )  METHOD_4 ( user )  METHOD_5 ( ( ( VAR_3 ) + STRING_3 ) , ( ( VAR_3 ) + STRING_4 ) , ( ( VAR_4 ) + STRING_3 ) , ( ( VAR_4 ) + STRING_4 ) , STRING_2 , STRING_5 , STRING_6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND METHOD_2 ( )  return VAR_1 ; COND ( METHOD_3 ( ) ) && ( ! ( METHOD_4 ( ) ) )  return VAR_2 ; COND VAR_3 . get ( )  return VAR_4 ; TYPE long NAME VAR_5 INIT = METHOD_5 ( VAR_6 ) COND VAR_5 <= 0  return VAR_7 ;  return VAR_8 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE TYPE_2.Key NAME key INIT = new TYPE_2 . Key ( VAR_1 , VAR_2 , VAR_3 )  return new TYPE_3 ( key , VAR_4 , project , repo ) . METHOD_2 ( ) ; TYPE java.io.IOException NAME e  VAR_5 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . name ( ) ) ) + STRING_2 ) + project ) , e )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) TYPE TYPE_2 NAME r INIT = METHOD_3 ( STRING_2 )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_4 ( ) ) TYPE java.util.Map<java.lang.String,TYPE_3> NAME result INIT = TYPE_4 . METHOD_5 ( r )  TYPE_5 . METHOD_6 ( TYPE_6 . METHOD_7 ( VAR_4 , VAR_1 , project ) , result . values ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db COND ( ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) || ( METHOD_4 ( db ) ) ) || ( ! ( METHOD_5 ( VAR_1 . METHOD_6 ( db , notes ) , db ) ) )  return false ; COND METHOD_7 ( )  return true ;  return METHOD_2 ( ) . METHOD_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 . Collections < java.lang.String , java.util.ArrayList < TYPE_2 > > METHOD_3 ( ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_4 , TYPE_3 . of ( STRING_1 , TYPE_4 . METHOD_4 ( VAR_5 , VAR_6 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res TYPE boolean NAME VAR_1 TYPE TYPE_2.Id NAME id INIT = res . getAccountId ( ) TYPE TYPE_3.Key NAME VAR_2 INIT = res . METHOD_2 ( ) COND ( VAR_3 ) != null  VAR_4 . METHOD_3 ( key )  key = null  VAR_3 = null  key = VAR_4 . METHOD_4 ( id )  VAR_3 = VAR_4 . METHOD_5 ( key , id , VAR_1 , VAR_2 )  METHOD_6 ( )
MODIFIER public RETURN void NAME run  VAR_1 . get ( ) TYPE TYPE_1 NAME e  METHOD_1 ( project , e ) TYPE TYPE_2 NAME e  VAR_2 . set ( false ) TYPE TYPE_3 NAME e  METHOD_2 ( project , e ) TYPE TYPE_4 NAME e  METHOD_2 ( project , e )  VAR_3 . update ( 1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event  event . METHOD_2 ( )  event . METHOD_3 ( )  METHOD_4 ( ) COND TYPE_2 . METHOD_5 ( ) TYPE TYPE_3 NAME VAR_1 INIT = TYPE_2 . METHOD_6 ( ) . METHOD_7 ( )  VAR_1 . METHOD_8 ( VAR_2 ) MODIFIER public RETURN void NAME METHOD_10 TYPE TYPE_7 NAME VAR_3 BLOCK BLOCK MODIFIER public RETURN void NAME onSuccess TYPE TYPE_6 NAME result BLOCK BLOCK  TYPE_4 . METHOD_9 ( VAR_1 , new TYPE_5 < TYPE_6 > ( ) { public void METHOD_10 ( TYPE_7 VAR_3 ) { } public void onSuccess ( TYPE_6 result ) { } } )
MODIFIER private RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE TYPE_2.ChangeInfo NAME change TYPE java.util.Set<TYPE_1> NAME result INIT = new TYPE_3 < TYPE_1 > ( change . METHOD_2 ( ) . length ( ) ) TYPE int NAME i INIT = 0 COND i < ( change . METHOD_2 ( ) . length ( ) )  i ++  result . add ( change . METHOD_2 ( ) . get ( i ) . METHOD_3 ( ) )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_1 INIT = METHOD_2 ( VAR_2 , STRING_1 , 1 ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_3 INIT = METHOD_2 ( VAR_2 , STRING_2 , 1 )  org.junit.Assert.assertEquals ( TYPE_1 . create ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ) , VAR_4 . METHOD_4 ( change , TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 ) ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME r COND ( r . METHOD_2 ( ) . METHOD_3 ( ) ) == 0  return TYPE_4 . METHOD_4 ( r . METHOD_5 ( ) . getName ( ) , TYPE_5 . METHOD_6 ( r . METHOD_7 ( ) ) , VAR_1 , true , true ) ;  throw new TYPE_3 ( ( STRING_1 + r ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = STRING_1 TYPE TYPE_1 NAME e INIT = TYPE_1 . METHOD_2 ( name )  METHOD_3 ( e . METHOD_4 ( ) )  assertEquals ( name , e . METHOD_5 ( ) )  METHOD_6 ( VAR_1 , e . METHOD_7 ( ) )  METHOD_6 ( VAR_2 , e . METHOD_8 ( ) )  METHOD_9 ( e . METHOD_10 ( ) . isEmpty ( ) )
MODIFIER public RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE int NAME n INIT = ( VAR_2 . METHOD_2 ( ) ) - 1  TYPE_1 . METHOD_3 ( ( ( VAR_1 . size ( ) ) <= n ) , STRING_1 , n )  return query ( TYPE_2 . METHOD_4 ( TYPE_3 . project ( project ) , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( TYPE_3 . schema ( VAR_3 ) , VAR_1 ) ) ) ) ;
MODIFIER private RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE java.util.List<java.lang.String> NAME r INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME w IN db . get ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 , psId )  r . add ( w . getKey ( ) . METHOD_5 ( ) . METHOD_6 ( ) )  return r ;
MODIFIER private static RETURN java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME METHOD_1 TYPE TYPE_2 NAME args TYPE java.util.Set<com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = TYPE_3 . METHOD_2 ( VAR_1 . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id IN VAR_1  r . add ( new TYPE_4 ( args , id ) )  return r ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( ) TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = TYPE_1 . METHOD_3 ( new java.lang.String [ ] { STRING_1 , STRING_2 } ) TYPE java.util.List<TYPE_2> NAME m INIT = TYPE_3 . METHOD_4 ( repo , c , VAR_1 )  org.junit.Assert.assertEquals ( 0 , m . size ( ) )
MODIFIER public RETURN boolean NAME METHOD_1  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_2 ( ) ) ) || ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . to ( VAR_2 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  bind ( VAR_3 class ) . to ( VAR_4 class )  factory ( VAR_5 . Factory class )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id TYPE TYPE_2 NAME p INIT = VAR_2 . METHOD_1 ( VAR_3 , id ) TYPE TYPE_6 NAME VAR_4 IN p . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_1 . METHOD_5 ( ) . equals ( VAR_4 . getProject ( ) . METHOD_5 ( ) )  return new TYPE_1 ( VAR_1 , p . METHOD_2 ( ) ) ;  throw new TYPE_4 ( id ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME m INIT = TYPE_2 . METHOD_3 ( repo , c ) TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = TYPE_3 . of ( STRING_1 , STRING_2 )  com.google.common.truth.Truth.assertThat ( TYPE_4 . METHOD_4 ( m ) ) . METHOD_5 ( VAR_1 )
MODIFIER private RETURN TYPE_1 NAME message TYPE TYPE_2 NAME ctx TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE java.lang.String NAME VAR_1  TYPE_3 . METHOD_1 ( psId ) TYPE java.lang.String NAME VAR_2  VAR_2 = TYPE_4 . METHOD_2 ( ctx . METHOD_3 ( ) ) TYPE com.google.gwtorm.server.OrmException NAME e  return null ; TYPE TYPE_1 NAME m INIT = new TYPE_1 ( new TYPE_1 . Key ( psId . getParentKey ( ) , VAR_2 ) , ctx . METHOD_4 ( ) . getAccountId ( ) , ctx . METHOD_5 ( ) , psId )  m . METHOD_6 ( VAR_1 )  return m ;
MODIFIER protected synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) COND ( METHOD_2 ( ) ) || ( ( METHOD_3 ( ) ) && ( VAR_3 . get ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) )  new TYPE_3 ( VAR_2 , VAR_2 . toString ( ) ) . METHOD_6 ( )  VAR_4 = VAR_5 . submit ( VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME commit COND ( ( commit . getMessage ( ) ) == null ) || ( STRING_1 . equals ( commit . getMessage ( ) ) )  commit . METHOD_2 ( STRING_2 )  METHOD_3 ( VAR_1 , cfg )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e MODIFIER public RETURN void NAME onSuccess TYPE java.lang.String NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( psId ) )  TYPE_2 . topic ( psId . getParentKey ( ) . get ( ) , input . getValue ( ) . METHOD_2 ( ) , new TYPE_3 < java.lang.String > ( ) { public void onSuccess ( java.lang.String result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( psId ) ) ; } } )  METHOD_4 ( null )
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 . length ( ) ) <= ( VAR_2 )  return VAR_1 ; TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( CHAR_1 )  return VAR_3 >= 0 ? STRING_1 + ( VAR_1 . METHOD_3 ( VAR_3 ) ) : VAR_1 ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_2 NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . METHOD_2 ( STRING_1 ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_4 INIT = METHOD_3 ( rw , VAR_1 , VAR_2 ) COND VAR_4 == null  return null ;  VAR_3 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_4 ) ) TYPE TYPE_4 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return VAR_3 ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE TYPE_1 NAME id INIT = TYPE_2 . METHOD_1 ( cd )  TYPE_3 . METHOD_2 ( VAR_1 . delete ( id ) , VAR_2 . delete ( id ) ) . get ( ) TYPE TYPE_4 NAME e  throw new java.io.IOException ( e ) ; TYPE TYPE_5 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN void NAME close  VAR_1 . METHOD_1 ( ) COND ( log ) != null  log . close ( ) TYPE java.io.IOException NAME err  throw new TYPE_1 . OrmException ( STRING_1 , err ) ;  log = null  VAR_1 . METHOD_2 ( )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME apply TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME input COND VAR_1 . METHOD_1 ( ) TYPE TYPE_10 NAME in INIT = new TYPE_10 ( )  VAR_2 = ( input != null ) ? VAR_3 : null  return VAR_4 . get ( ) . apply ( VAR_1 , in ) ;  throw new TYPE_7 ( ) ;
MODIFIER public RETURN TYPE_1 NAME get COND ! ( VAR_1 )  VAR_2 COND ( ! ( VAR_2 . METHOD_1 ( ) ) ) && ( ! ( VAR_2 . METHOD_2 ( ) ) )  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , VAR_2 . METHOD_3 ( ) , getName ( ) ) ) ;  VAR_1 = true  return VAR_2 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) COND ( METHOD_2 ( ) ) && ( user . get ( ) . METHOD_3 ( ) . METHOD_4 ( ) )  new TYPE_3 ( VAR_2 , VAR_2 . toString ( ) ) . METHOD_5 ( )  VAR_3 . set ( VAR_4 . submit ( VAR_2 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( ( ( ( url ) + STRING_1 ) + VAR_1 ) ) COND VAR_2 != null  VAR_3 . METHOD_3 ( new TYPE_4 ( STRING_2 , STRING_3 ) )  VAR_3 . METHOD_4 ( new TYPE_5 ( TYPE_6 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) , TYPE_7 . name ( ) ) )  return METHOD_7 ( VAR_3 ) ;
MODIFIER public static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> NAME VAR_1 TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = new java.util.ArrayList < TYPE_1 < com.google.gerrit.server.query.change.ChangeData > > ( INT_1 ) TYPE com.google.gerrit.reviewdb.client.Change.Status NAME e IN TYPE_3 . values ( ) COND e . METHOD_2 ( )  r . add ( new TYPE_4 ( VAR_1 , e ) )  return ( r . size ( ) ) == 1 ? r . get ( 0 ) : METHOD_3 ( r ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( admin )  VAR_3 . changes ( ) . id ( VAR_1 . changeId ) . revision ( STRING_1 ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) )  VAR_3 . changes ( ) . id ( VAR_1 . changeId ) . revision ( STRING_1 ) . submit ( )  VAR_4 . METHOD_6 ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME input INIT = new TYPE_1 ( ) TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( VAR_2 )  VAR_3 = VAR_1  project ( ) . METHOD_4 ( input )  METHOD_5 ( STRING_2 ) TYPE TYPE_3 NAME e  com.google.common.truth.Truth.assertThat ( e ) . METHOD_6 ( ) . isEqualTo ( METHOD_7 ( TYPE_4 . of ( STRING_1 ) ) )  METHOD_8 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME id INIT = ( VAR_1 . METHOD_2 ( ) ) ? VAR_2 . METHOD_3 ( ) : VAR_1 . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( new TYPE_3 ( ) . METHOD_4 ( TYPE_4 . edit ( ) ) , ( STRING_1 + ( TYPE_5 . METHOD_5 ( id , path ) ) ) )  VAR_3 . METHOD_6 ( TYPE_6 . edit ( ) )  return VAR_3 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME p IN VAR_1 . METHOD_2 ( ) COND ( ( p . getRevision ( ) ) != null ) && ( ( p . getRevision ( ) . get ( ) ) != null ) TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = org.eclipse.jgit.lib.ObjectId . METHOD_3 ( p . getRevision ( ) . get ( ) ) COND ( VAR_2 . METHOD_4 ( id ) ) == 0  return true ;  return false ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1<TYPE_2<?,?>> NAME e COND STRING_1 . equals ( e . METHOD_2 ( ) )  return e . METHOD_3 ( ) ;  return java.lang.String.format ( STRING_2 , e . METHOD_2 ( ) , e . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1.Result NAME change INIT = METHOD_3 ( git )  submit ( change . getChangeId ( ) ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 INIT = METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_2 . getId ( ) ) . isEqualTo ( change . METHOD_4 ( ) )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_5 ( 0 ) ) . isEqualTo ( VAR_1 )  METHOD_6 ( change . getChangeId ( ) , 1 )
MODIFIER public static RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_1 NAME user TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId INIT = new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = new com.google.gerrit.reviewdb.client.Change ( new com.google.gerrit.reviewdb.client.Change . Key ( STRING_1 ) , changeId , user . METHOD_2 ( ) . getId ( ) , new TYPE_2 . NameKey ( project , STRING_2 ) , TYPE_3 . METHOD_3 ( ) )  TYPE_4 . METHOD_4 ( c )  return c ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME user COND user . METHOD_2 ( )  return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; COND user instanceof TYPE_3  return STRING_1 + ( ( ( TYPE_3 ) ( user ) ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . toString ( ) ) ;  return user . toString ( ) ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in TYPE TYPE_2 NAME VAR_1 TYPE TYPE_4 NAME index INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_5 NAME VAR_3 INIT = new TYPE_5 ( ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in , index , VAR_1 , VAR_3 ) COND ( in == out ) || ( out instanceof TYPE_6 )  return new TYPE_7 ( index , out , VAR_1 ) ; COND out == null  return in ;  return out ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return VAR_1 . id ( VAR_2 . get ( ) . apply ( change , in ) . VAR_3 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER private RETURN PatchSet.Id NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( commit , VAR_2 ) TYPE int NAME s INIT = VAR_1 . METHOD_3 ( CHAR_1 ) TYPE java.lang.String NAME VAR_3 INIT = ( s < 0 ) ? VAR_1 : VAR_1 . METHOD_4 ( 0 , s ) TYPE TYPE_2 NAME psId INIT = TYPE_3 . METHOD_5 ( VAR_3 ) COND psId == null  throw METHOD_6 ( VAR_2 , VAR_3 ) ;  return new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , psId ) ;
MODIFIER public static RETURN TYPE_1 NAME create TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4  return new TYPE_2 ( TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 , VAR_5 ) , TYPE_1 . METHOD_1 ( VAR_2 , STRING_2 , VAR_5 ) , TYPE_1 . METHOD_1 ( VAR_3 , STRING_3 , VAR_5 ) , TYPE_1 . METHOD_1 ( VAR_4 , STRING_4 , VAR_6 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_4.AccountGroup NAME group INIT = VAR_2 . get ( VAR_1 ) COND group == null  throw new TYPE_3 ( VAR_1 ) ;  return new TYPE_1 ( user . get ( ) , group ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.util.Map<java.lang.String,TYPE_3> NAME VAR_2 INIT = new TYPE_4 < > ( )  METHOD_2 ( VAR_2 )  VAR_2 . put ( STRING_1 , VAR_1 ) TYPE TYPE_5 NAME VAR_3 INIT = VAR_4 . METHOD_3 ( STRING_2 , VAR_2 ) TYPE TYPE_1 NAME result INIT = VAR_5 . METHOD_4 ( VAR_3 , VAR_6 class )  return result ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change  return METHOD_1 ( VAR_1 . METHOD_2 ( change , user . get ( ) ) ) ; TYPE TYPE_4 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME b INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_3 ) TYPE TYPE_3<java.lang.String> NAME n INIT = TYPE_3 . METHOD_3 ( a , b )  assertEquals ( 2 , n . METHOD_4 ( ) )  METHOD_5 ( a , n . METHOD_6 ( 0 ) )  METHOD_5 ( b , n . METHOD_6 ( 1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( STRING_2 , STRING_3 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_4 , STRING_5 )  org.junit.Assert.assertEquals ( STRING_6 , VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) ) . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( STRING_7 , VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 ) ) . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( ( ( TYPE_2 ) ( null ) ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )  METHOD_2 ( b , b . append ( new TYPE_3 ( STRING_2 ) ) )  METHOD_2 ( b , b . append ( new TYPE_1 ( ) . append ( STRING_3 ) ) )  assertEquals ( STRING_4 , b . METHOD_3 ( ) )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1.Change NAME change COND ( change != null ) && ( ( VAR_1 . get ( ) ) != null ) TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( VAR_1 . get ( ) )  r . append ( change . getChangeId ( ) )  return r . toString ( ) ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND VAR_2 . METHOD_4 ( )  return new TYPE_1 ( VAR_2 . group ( 1 ) , STRING_2 , VAR_1 ) ;  throw new TYPE_4 ( ( STRING_3 + VAR_1 ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME message  res . METHOD_2 ( VAR_1 )  METHOD_3 ( req , res , VAR_2 )  METHOD_4 ( res ) TYPE TYPE_3 NAME out INIT = TYPE_4 . METHOD_5 ( req , res )  out . METHOD_6 ( message )
MODIFIER private RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 TYPE TYPE_1 NAME n  return VAR_1 . METHOD_2 ( db . get ( ) , n . notes , VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  VAR_3 . error ( ( STRING_1 + ( VAR_2 ) ) , e )  return java.util.Collections . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME b INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_3 ) TYPE TYPE_3 NAME n INIT = TYPE_3 . METHOD_3 ( a , b )  assertEquals ( 2 , n . METHOD_4 ( ) )  METHOD_5 ( a , n . METHOD_6 ( 0 ) )  METHOD_5 ( b , n . METHOD_6 ( 1 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 , VAR_4 , VAR_1 ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_6 . get ( )  VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_5 )  VAR_2 . METHOD_2 ( ) . METHOD_4 ( VAR_5 ) TYPE TYPE_4 NAME VAR_7 INIT = new TYPE_4 ( null , account . getId ( ) )  VAR_7 . METHOD_5 ( VAR_1 )  VAR_7 . METHOD_6 ( account )  VAR_7 . commit ( VAR_2 )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = TYPE_8 . of ( id ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = put . get ( ) . apply ( VAR_1 , in ) COND ( VAR_3 . size ( ) ) == 1  return VAR_3 . get ( 0 ) ;  throw new TYPE_9 ( ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME factory INIT = new TYPE_2 ( )  factory . METHOD_2 ( new TYPE_3 ( url ) . METHOD_3 ( true ) . METHOD_4 ( ( ! ( VAR_1 ) ) ) . METHOD_5 ( INT_1 , VAR_2 ) . METHOD_1 ( ) )  return ( ( TYPE_1 ) ( factory . METHOD_6 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_1 , STRING_2 , STRING_3 ) ) . METHOD_5 ( STRING_4 ) . METHOD_6 ( )  METHOD_7 ( )  assertEquals ( STRING_5 , STRING_4 , VAR_1 . METHOD_8 ( ) . METHOD_9 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < TYPE_2 > ( )  modules.add ( new TYPE_3 ( ) ) COND VAR_2  modules.add ( new TYPE_4 ( ) )  modules.add ( new TYPE_5 ( ) )  modules.add ( new TYPE_6 ( ) )  return VAR_1 . METHOD_2 ( modules ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  return METHOD_2 ( repo , db , rw , commit , repo . METHOD_3 ( ) . values ( ) ) ; TYPE java.io.IOException NAME e TYPE java.lang.String NAME msg INIT = java.lang.String.format ( STRING_1 , commit . name ( ) , getProject ( ) . METHOD_4 ( ) )  VAR_1 . error ( msg , e )  return false ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3<TYPE_4> NAME VAR_3 INIT = new TYPE_3 < TYPE_4 > ( ) TYPE TYPE_5 NAME b IN VAR_4 COND ( b . ref ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) >= 0  VAR_3 . add ( new TYPE_4 ( b ) )  VAR_2 . METHOD_4 ( VAR_1 , new TYPE_6 ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( INT_1 ) )  METHOD_2 ( b , b . append ( 2 ) )  METHOD_2 ( b , b . append ( ( - INT_2 ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )
MODIFIER public RETURN java.lang.String NAME format TYPE java.lang.String NAME projectName TYPE TYPE_1 NAME cfg TYPE java.lang.String NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( ) COND ! ( cfg . METHOD_1 ( VAR_3 , false ) )  VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( METHOD_4 ( projectName ) ) TYPE byte[] NAME b INIT = VAR_2 . METHOD_5 ( VAR_1 , TYPE_4 . name ( ) )  return new java.lang.String ( b , TYPE_4 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_1 == ( TYPE_2 . METHOD_2 ( ) )  return new TYPE_1 ( db , repo , rp . METHOD_3 ( ) ) ;  return new TYPE_1 ( project . METHOD_4 ( ) ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME update TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps  METHOD_1 ( ps . getId ( ) , update )  TYPE_2 . METHOD_2 ( ps . METHOD_3 ( ) , STRING_1 , ps . getId ( ) )  update . METHOD_4 ( VAR_1 ) COND ( TYPE_3 . of ( update . getChange ( ) ) ) == ( VAR_2 )  db . patchSets ( ) . delete ( java.util.Collections.singleton ( ps ) )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME m  VAR_1 . set ( base , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , VAR_2 . METHOD_1 ( ) ) , VAR_3 , VAR_4 , VAR_5 , ( ( edit ) != null ) )  VAR_1 . METHOD_2 ( m , VAR_6 , ( VAR_7 != null ? VAR_7 . get ( 0 ) : null ) , ( VAR_8 != null ? VAR_8 . get ( 0 ) : null ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME id TYPE TYPE_2<java.lang.String> NAME VAR_1 TYPE TYPE_3.ProjectConfig NAME cfg INIT = VAR_2 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) TYPE java.lang.String NAME VAR_4 IN VAR_1  TYPE_4 . METHOD_4 ( cfg , VAR_4 , id )  TYPE_4 . METHOD_4 ( cfg , VAR_4 , id )  METHOD_5 ( VAR_3 , cfg )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , ( ( VAR_3 ) + STRING_1 ) ) TYPE TYPE_1 NAME input INIT = new TYPE_1 ( )  input . ref = STRING_2  input . message = STRING_3  VAR_4 . METHOD_3 ( VAR_5 class )  VAR_4 . METHOD_4 ( ( ( STRING_4 + ( VAR_3 ) ) + STRING_5 ) )  METHOD_5 ( input . ref ) . create ( input )
MODIFIER protected RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class )  rpc ( VAR_2 class )  rpc ( VAR_3 class )  rpc ( VAR_4 class )  rpc ( VAR_5 class )  rpc ( VAR_6 class )  rpc ( VAR_7 class )  rpc ( VAR_8 class )  rpc ( VAR_9 class )  rpc ( VAR_10 class )  rpc ( VAR_11 class )  rpc ( VAR_12 class )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1<TYPE_2> NAME VAR_3  new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , VAR_1 ) . METHOD_2 ( STRING_3 , VAR_2 ) . METHOD_3 ( STRING_4 , STRING_5 ) . METHOD_4 ( STRING_6 ) . METHOD_5 ( ) . get ( TYPE_4 . METHOD_6 ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_2 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_4 ( STRING_3 , u . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE byte[] NAME b TYPE java.lang.StringBuilder NAME VAR_1 INIT = new java.lang.StringBuilder ( ) TYPE int NAME i INIT = 0 COND i < ( b . length )  i ++ TYPE int NAME u INIT = ( ( b [ i ] ) > > INT_1 ) & INT_2 TYPE int NAME VAR_2 INIT = ( b [ i ] ) & INT_2  VAR_1 . append ( VAR_3 [ u ] )  VAR_1 . append ( VAR_3 [ VAR_2 ] )  return VAR_1 . toString ( ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.util.List<java.lang.String> NAME values INIT = TYPE_1 . METHOD_2 ( ) . get ( name ) COND values == null  return null ;  return values . get ( ( ( values . size ( ) ) - 1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId INIT = METHOD_2 ( ) . getChangeId ( ) TYPE TYPE_1.ChangeInfo NAME c INIT = get ( changeId )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < ? > ) ( VAR_1 ) ) ) . METHOD_3 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < ? > ) ( VAR_1 ) ) ) . METHOD_4 ( 1 )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . message ) . isEqualTo ( STRING_1 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . get ( STRING_1 ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( TYPE_4 . METHOD_3 ( VAR_2 ) )  VAR_3 . METHOD_4 ( STRING_2 )  VAR_1 . add ( VAR_3 ) TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( TYPE_6 . METHOD_5 ( ) )  VAR_4 . METHOD_4 ( STRING_3 )  VAR_1 . add ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = new TYPE_2 ( new TYPE_3 ( STRING_1 ) )  repo = new TYPE_4 < TYPE_1 > ( r )  servlet = new TYPE_5 ( new TYPE_6 ( repo . METHOD_2 ( ) ) , VAR_1 , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME index TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = METHOD_2 ( index , VAR_3 ) COND VAR_2 < 0  return null ; TYPE TYPE_1 NAME VAR_4 INIT = METHOD_3 ( VAR_2 , VAR_1 , TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) , null )  return VAR_4 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = getRevision ( ) COND VAR_1 == null  return ; TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( getChangeId ( ) , walk , VAR_1 , VAR_4 , VAR_5 , VAR_6 )  VAR_3 . METHOD_2 ( )  METHOD_3 ( VAR_7 , VAR_8 )  METHOD_3 ( VAR_9 , VAR_10 )  VAR_11 = VAR_12  walk . METHOD_4 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . create ( user , cd ) . METHOD_2 ( patchSet ) . METHOD_1 ( ) COND ( VAR_1 . status ) != ( VAR_3 )  throw new com.google.gwtorm.server.OrmException ( ( STRING_1 + VAR_1 ) ) ;  return VAR_1 . type ;
MODIFIER private RETURN java.util.Map<TYPE_1,TYPE_2> NAME METHOD_1 TYPE TYPE_3.Id NAME VAR_1 TYPE java.util.Map<TYPE_1,TYPE_2> NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 IN db . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  VAR_2 . put ( VAR_3 . METHOD_5 ( ) , VAR_3 )  return VAR_2 ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change  return new TYPE_2 ( null , change.getId ( ) , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_5 . METHOD_1 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_6 . of ( ) , TYPE_6 . of ( ) ) ;
MODIFIER private RETURN java.util.Map<com.google.gerrit.reviewdb.client.Change.Key,com.google.gerrit.reviewdb.client.Change.Id> NAME METHOD_1 TYPE TYPE_1.NameKey NAME branch TYPE java.util.Map<com.google.gerrit.reviewdb.client.Change.Key,com.google.gerrit.reviewdb.client.Change.Id> NAME r INIT = new TYPE_2 < > ( ) TYPE com.google.gerrit.reviewdb.client.Change NAME c IN db . changes ( ) . METHOD_2 ( branch )  r . put ( c . getKey ( ) , c . getId ( ) )  return r ;
MODIFIER public RETURN java.util.Map<TYPE_1,java.util.Set<TYPE_2>> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME git INIT = VAR_2 . METHOD_2 ( VAR_3 ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_1 )  VAR_4 . METHOD_3 ( git )  return VAR_4 . METHOD_1 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class )  bind ( VAR_2 class ) . to ( VAR_1 class )  bind ( VAR_3 class ) . to ( VAR_1 class )  bind ( VAR_4 class ) . to ( VAR_1 class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_5 class ) . to ( VAR_1 class )  METHOD_2 ( ) . to ( VAR_1 class )
MODIFIER protected RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( revision ) == null  return null ; TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , revision . METHOD_3 ( ) ) COND VAR_2 != null  return VAR_2 . METHOD_1 ( 0 ) ;  return null ;
MODIFIER public RETURN TYPE_1.PatchSet NAME METHOD_1 COND ( currentPatchSetId ) != null TYPE int NAME i INIT = ( patchSets . size ( ) ) - 1 COND i >= 0  i -- TYPE TYPE_1.PatchSet NAME ps INIT = patchSets . get ( i ) COND ps . getKey ( ) . equals ( currentPatchSetId )  return ps ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( new TYPE_2 ( INT_1 ) ) )  assertEquals ( STRING_2 , TYPE_1 . METHOD_2 ( new TYPE_2 ( STRING_2 , INT_1 ) ) )  assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_3 , INT_1 ) ) )
MODIFIER private RETURN TYPE_1<TYPE_2>[] NAME METHOD_1 TYPE TYPE_3 NAME r TYPE TYPE_1<TYPE_2>[] NAME p INIT = new TYPE_1 [ r . METHOD_2 ( ) ] TYPE int NAME i INIT = 0 COND i < ( p . length )  i ++  p [ i ] = METHOD_3 ( r . METHOD_4 ( i ) )  return p ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND ! ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) )  return ;  METHOD_1 ( util . METHOD_4 ( change ) , util . METHOD_5 ( change . getProject ( ) , patchSet ) , util . METHOD_6 ( VAR_1 ) , VAR_2 , VAR_3 ) TYPE TYPE_3|TYPE_4|java.io.IOException|com.google.gwtorm.server.OrmException NAME e  VAR_5 . error ( STRING_1 , e )
MODIFIER public RETURN void NAME run  VAR_1 TYPE TYPE_1<TYPE_2> NAME i INIT = VAR_1 . METHOD_1 ( ) COND i . METHOD_2 ( )  i . METHOD_3 ( ) . run ( ) TYPE TYPE_3 NAME err  VAR_2 . error ( STRING_1 , err )  i . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE TYPE_2 NAME c INIT = METHOD_2 ( branch , null )  ctx . METHOD_3 ( new TYPE_3 . ReceiveCommand ( c . METHOD_4 ( 0 ) , c , branch . get ( ) ) )  METHOD_5 ( branch , c )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME input INIT = new TYPE_1 ( ) TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  VAR_1 . METHOD_3 ( VAR_2 )  VAR_3 = VAR_1  project ( ) . METHOD_4 ( input )  org.junit.Assert . METHOD_5 ( STRING_2 ) TYPE TYPE_3 NAME e  com.google.common.truth.Truth.assertThat ( e ) . METHOD_6 ( ) . isEqualTo ( METHOD_7 ( TYPE_4 . of ( STRING_1 ) ) )  METHOD_8 ( )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1  < TYPE_3 > api = VAR_2 . get ( VAR_3 class , STRING_1 )  return TYPE_4 . METHOD_2 ( api . METHOD_3 ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , VAR_4 ) . VAR_5 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.NameKey NAME projectName TYPE org.eclipse.jgit.lib.Repository NAME r INIT = VAR_1 . METHOD_2 ( projectName . get ( ) )  return r . METHOD_3 ( VAR_2 ) ;  r . close ( ) TYPE java.io.IOException NAME VAR_3  return null ;
MODIFIER public static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2.Key NAME key TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_3 ( key . repo , key . path )  VAR_1 . METHOD_2 ( null , VAR_2 )  return TYPE_2 . METHOD_3 ( VAR_1 ) ;  key . repo = null
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2<?> NAME p INIT = ( ( TYPE_2 < ? > ) ( VAR_1 ) )  return ( METHOD_2 ( ) . equals ( p . METHOD_2 ( ) ) ) && ( getValue ( ) . equals ( p . getValue ( ) ) ) ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 < ( ( VAR_2 ) - 1 )  VAR_3 . info ( STRING_1 )  TYPE_1 . METHOD_2 ( VAR_4 ) TYPE TYPE_2 NAME VAR_5  return ;  VAR_3 . error ( ( ( STRING_2 + ( VAR_2 ) ) + STRING_3 ) )  METHOD_3 ( false )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE TYPE_3 NAME cm INIT = VAR_1 . create ( ctx . getProject ( ) , change.getId ( ) )  cm . METHOD_2 ( ctx . METHOD_3 ( ) . getAccountId ( ) )  cm . METHOD_4 ( patchSet , VAR_2 )  cm . METHOD_5 ( VAR_3 . METHOD_6 ( ) )  cm . METHOD_7 ( VAR_3 . METHOD_8 ( ) )  cm . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true )  METHOD_3 ( ) TYPE TYPE_1.Result NAME r INIT = METHOD_4 ( )  revision ( r ) . METHOD_5 ( TYPE_2 . reject ( ) )  r = METHOD_6 ( r . getChangeId ( ) )  METHOD_7 ( r , ( - 2 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE boolean NAME create TYPE TYPE_1 NAME p IN METHOD_2 ( ) COND p . getName ( ) . METHOD_3 ( name )  return p ; COND create TYPE TYPE_1 NAME p INIT = new TYPE_1 ( name )  VAR_1 . add ( p )  return p ;  return null ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME req TYPE java.lang.String NAME VAR_1 COND TYPE_2 . equals ( VAR_1 ) TYPE java.lang.String NAME user INIT = TYPE_3 . METHOD_2 ( req . METHOD_1 ( ) ) COND user != null  return user ; TYPE java.lang.String NAME auth INIT = req . METHOD_3 ( TYPE_2 )  return TYPE_4 . METHOD_4 ( auth ) ;  return TYPE_3 . METHOD_2 ( req . METHOD_3 ( VAR_1 ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND cd . METHOD_2 ( user )  return true ; TYPE TYPE_2.Change NAME c INIT = cd . change ( db ) COND ( c != null ) && ( VAR_1 . METHOD_3 ( c ) . METHOD_4 ( user ) . METHOD_5 ( ) )  cd . METHOD_6 ( user )  return true ;  return false ; TYPE TYPE_3 NAME e  return false ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,TYPE_2.NameKey> NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,TYPE_2.NameKey> NAME VAR_1 INIT = TYPE_3 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2  VAR_1 . put ( cd . change ( ) . getProject ( ) , cd . change ( ) . METHOD_2 ( ) )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME w TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_4 class ) COND VAR_2 != null  w . METHOD_3 ( )  w . METHOD_3 ( ( ( STRING_1 + ( METHOD_4 ( ) ) ) + STRING_2 ) )  w . METHOD_5 ( )  w . METHOD_3 ( ( ( STRING_3 + ( VAR_2 . value ( ) ) ) + STRING_4 ) )  w . METHOD_6 ( )  w . METHOD_3 ( STRING_5 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  org.junit.Assert.assertEquals ( VAR_1 . line , VAR_2 . line )  org.junit.Assert.assertEquals ( VAR_1 . message , VAR_2 . message )  org.junit.Assert.assertEquals ( VAR_3 , VAR_4 ) COND ( VAR_5 ) == null  org.junit.Assert.assertEquals ( VAR_6 , VAR_7 )
MODIFIER protected RETURN byte[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( revision ) == null  return new byte [ ] { } ; TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , revision . METHOD_3 ( ) ) COND VAR_2 != null TYPE TYPE_2 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( 0 ) , VAR_5 )  return VAR_4 . METHOD_6 ( VAR_6 ) ;  return new byte [ ] { } ;
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = - 1 TYPE int NAME i INIT = 0 COND i < ( VAR_3 . size ( ) )  i ++ COND ( VAR_3 . get ( i ) . METHOD_2 ( ) . METHOD_3 ( ) ) == VAR_1  VAR_2 = i  break ; COND VAR_2 >= 0  VAR_3 . METHOD_4 ( VAR_2 )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result COND METHOD_1 ( )  METHOD_2 ( 1 )  VAR_1 = result  VAR_2 . METHOD_3 ( false )  VAR_3 . METHOD_4 ( true )  VAR_4 . METHOD_4 ( true )  VAR_5 . METHOD_4 ( true )  METHOD_5 ( )  VAR_6 . onSuccess ( VAR_7 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME notes COND ! ( VAR_1 . METHOD_2 ( ) )  return TYPE_3 . METHOD_3 ( db . METHOD_4 ( ) . METHOD_1 ( notes . getChangeId ( ) ) ) ;  return TYPE_3 . METHOD_3 ( notes . METHOD_5 ( ) . METHOD_6 ( ) . values ( ) ) ;
MODIFIER public static RETURN TYPE_1 NAME revision TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME id TYPE int NAME VAR_1 INIT = id . getParentKey ( ) . get ( ) TYPE java.lang.String NAME revision INIT = TYPE_2 . get ( id ) COND revision != null  return TYPE_3 . revision ( VAR_1 , revision ) ;  return TYPE_3 . change ( VAR_1 ) . view ( STRING_1 ) . id ( id . get ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c  TYPE_2 . METHOD_2 ( ( ( c . METHOD_3 ( ) ) != null ) )  TYPE_2 . METHOD_2 ( ( ( c . getStatus ( ) ) == ( VAR_1 ) ) , ( STRING_1 + STRING_2 ) )  TYPE_2 . METHOD_2 ( c . METHOD_4 ( ) . equals ( METHOD_5 ( ) . getAccountId ( ) ) , ( STRING_3 + STRING_4 ) , METHOD_5 ( ) . getAccountId ( ) , c )
MODIFIER protected RETURN byte[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( revision ) == null  return new byte [ ] { } ; TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , revision . METHOD_3 ( ) ) COND VAR_2 != null TYPE TYPE_2 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( 0 ) , VAR_5 )  return VAR_4 . METHOD_6 ( VAR_6 ) ;  return new byte [ ] { } ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name  TYPE_1 . METHOD_2 ( name ) TYPE java.util.List<TYPE_2> NAME values INIT = new java.util.ArrayList < TYPE_2 > ( 2 )  values . add ( new TYPE_2 ( ( ( short ) ( 0 ) ) , STRING_1 ) )  values . add ( new TYPE_2 ( ( ( short ) ( 1 ) ) , STRING_2 ) ) TYPE TYPE_1 NAME type INIT = new TYPE_1 ( name , values )  return type ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) ) COND VAR_2 == null  return null ;  return METHOD_2 ( projectName , VAR_1 , VAR_4 . create ( VAR_2 ) . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME run  METHOD_1 ( VAR_1 ) COND ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ! ( VAR_1 . METHOD_3 ( ) . isEmpty ( ) ) )  throw new TYPE_1 ( 1 , STRING_1 ) ; TYPE TYPE_2 NAME VAR_2 INIT = METHOD_4 ( out )  VAR_1 . display ( VAR_2 )  VAR_2 . METHOD_5 ( )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME err TYPE java.lang.Exception NAME e COND VAR_1 COND err == null  VAR_2 . error ( err )  VAR_2 . error ( err , e )  return TYPE_2 . METHOD_2 ( ) ;  return TYPE_2 . METHOD_3 ( err ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1 == ( TYPE_3 . METHOD_2 ( ) )  METHOD_3 ( db ) TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_2 . METHOD_4 ( )  METHOD_3 ( db )  db . close ( )  VAR_3  VAR_3 . update ( 1 )  return null ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change  return new TYPE_2 ( change.getId ( ) , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_5 . METHOD_1 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_6 . of ( ) , TYPE_6 . of ( ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.HttpServletResponse NAME rsp TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_3.Key NAME key INIT = new TYPE_3 . Key ( VAR_2 , VAR_1 )  return auth ( db . METHOD_3 ( ) . get ( key ) ) ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  METHOD_4 ( ) . log ( STRING_1 , e )  return null ;
MODIFIER private RETURN void NAME METHOD_1  approvals = TYPE_1 . of ( )  reviewers = TYPE_2 . of ( )  VAR_1 = TYPE_3 . of ( )  VAR_2 = TYPE_1 . of ( )  VAR_3 = TYPE_1 . of ( )  VAR_4 = TYPE_1 . of ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Set<TYPE_1.Id> NAME VAR_1 INIT = user . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . get ( change . METHOD_3 ( ) . getParentKey ( ) )  METHOD_1 ( VAR_1 , VAR_2 . METHOD_4 ( ) )  METHOD_1 ( VAR_1 , VAR_3 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2  VAR_3 . METHOD_2 ( 0 , 0 , new TYPE_2 ( VAR_1 , INT_1 ) )  VAR_3 . METHOD_3 ( 0 , 1 , VAR_2 )  VAR_4 . METHOD_4 ( ) . METHOD_5 ( STRING_1 , VAR_1 . email ( ) )  VAR_4 . METHOD_4 ( ) . METHOD_5 ( STRING_2 , VAR_1 . name ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 . METHOD_3 ( db ) . isEmpty ( ) )  METHOD_4 ( STRING_1 )  METHOD_4 ( STRING_2 ) TYPE java.util.Set<java.lang.String> NAME s INIT = VAR_1 . METHOD_3 ( db )  assertEquals ( 1 , s . size ( ) )  METHOD_5 ( s . contains ( STRING_3 ) )  METHOD_2 ( s . contains ( STRING_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME row TYPE int NAME VAR_2 COND VAR_2 == ( VAR_3 )  METHOD_2 ( row ) COND ( VAR_2 == ( VAR_4 ) ) || ( VAR_2 == ( VAR_5 ) ) THEN THEN COND ( METHOD_3 ( row ) ) != null  METHOD_4 ( row )
MODIFIER MODIFIER RETURN void NAME set TYPE TYPE_1.ChangeInfo NAME info  this . changeId = info . METHOD_1 ( )  this . VAR_1 = ( info . METHOD_2 ( ) ) && ( info . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) )  METHOD_5 ( info . METHOD_6 ( ) )  VAR_2 . METHOD_7 ( changeId )  VAR_3 . METHOD_8 ( VAR_1 ) COND ! ( VAR_1 )  VAR_4 . METHOD_9 ( null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_2 )  return VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_3 ) ;  return VAR_1 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) . METHOD_4 ( VAR_3 ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 COND ( revision . get ( ) ) > 0 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_5 ( METHOD_6 ( ) )  VAR_1 . METHOD_7 ( TYPE_4 . METHOD_4 ( ) )  return java.util.Collections . METHOD_8 ( VAR_1 ) ;  return java.util.Collections . METHOD_9 ( ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( TYPE_3 . of ( db ) , VAR_1 ) MODIFIER public RETURN TYPE_2 NAME METHOD_2  return VAR_2 ; MODIFIER public RETURN TYPE_4<com.google.gerrit.reviewdb.server.ReviewDb> NAME METHOD_3  return TYPE_3 . of ( db ) ;  return new TYPE_1 ( ) { public TYPE_2 METHOD_2 ( ) { return VAR_2 ; } public TYPE_4 < com.google.gerrit.reviewdb.server.ReviewDb > METHOD_3 ( ) { return TYPE_3 . of ( db ) ; } } ;
MODIFIER public RETURN java.util.Set<java.lang.String> NAME METHOD_1  return TYPE_2 . METHOD_2 ( ( ( TYPE_3 < java.lang.String > ) ( VAR_1 . get ( ) . METHOD_3 ( true ) . apply ( revision ) . value ( ) ) ) ) ; TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public static RETURN void NAME query TYPE TYPE_1<TYPE_2<TYPE_3>> NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_4 ) TYPE java.lang.String NAME VAR_5 IN VAR_2  VAR_3 . METHOD_1 ( STRING_1 , TYPE_5 . METHOD_2 ( VAR_5 ) )  TYPE_3 . METHOD_3 ( VAR_3 , VAR_6 )  VAR_3 . METHOD_4 ( VAR_1 )
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME in TYPE java.util.ArrayList<TYPE_1> NAME r INIT = new java.util.ArrayList < TYPE_1 > ( in . size ( ) ) TYPE TYPE_1 NAME m IN in COND m . METHOD_2 ( )  r . METHOD_3 ( m . METHOD_4 ( ) )  r . add ( m )  return r ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = cm . METHOD_1 ( ) . METHOD_2 ( ) TYPE int NAME line INIT = ( cm . METHOD_3 ( VAR_1 ) ) + 1  TYPE_2 . METHOD_4 ( line ) TYPE java.lang.String NAME token INIT = TYPE_3 . METHOD_5 ( revision , path ) COND ! ( TYPE_4 . METHOD_6 ( ) )  TYPE_4 . METHOD_7 ( token )  TYPE_4 . display ( token )
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . http ( ) . METHOD_3 ( ) ) . isEqualTo ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_3 , null , VAR_4 , VAR_5 )  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . http ( ) . METHOD_3 ( ) ) . isEqualTo ( VAR_5 )
MODIFIER MODIFIER RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME s COND ( s == null ) || ( ( s . length ( ) ) < INT_1 )  return null ;  return ( ( s . METHOD_2 ( 0 , INT_2 ) ) + STRING_1 ) + ( s . METHOD_2 ( ( ( s . length ( ) ) - INT_3 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  METHOD_2 ( )  super . METHOD_1 ( )  VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) MODIFIER protected RETURN void NAME METHOD_6 TYPE TYPE_3 NAME result  display ( result )  TYPE_1 . METHOD_5 ( VAR_4 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_6 ( final TYPE_3 result ) { display ( result ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , STRING_2 )  org.junit.Assert.assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) , a . METHOD_4 ( VAR_1 ) )
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 INIT = TYPE_3 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2 . values ( )  VAR_1 . put ( cd . change ( ) . getProject ( ) , cd . getId ( ) )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE TYPE_1 NAME VAR_1 NAME VAR_1  METHOD_2 ( changeId )  return ;  METHOD_3 ( changeId )  return ;  METHOD_4 ( changeId )  return ;  METHOD_5 ( changeId )  return ;  METHOD_6 ( changeId )  return ;  org.junit.Assert . METHOD_7 ( ( STRING_1 + VAR_1 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( METHOD_2 ( VAR_1 ) )  return ; TYPE TYPE_2 NAME change INIT = VAR_2 . get ( )  METHOD_3 ( VAR_3 )  METHOD_4 ( change ) TYPE TYPE_3|com.google.gwtorm.server.OrmException|TYPE_4|java.io.IOException NAME e  VAR_4 . error ( STRING_1 , e )  throw new TYPE_5 ( e ) ;
MODIFIER protected RETURN void NAME METHOD_1  install ( new TYPE_1 ( ) )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) COND VAR_2 . METHOD_4 ( )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_3 class )  METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 class )  METHOD_5 ( STRING_1 ) . METHOD_6 ( VAR_5 class )
MODIFIER MODIFIER RETURN void NAME close  VAR_1 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_1 ( STRING_1 , e )  VAR_3 . close ( true ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_1 ( STRING_2 , e )  VAR_4 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_1 ( STRING_3 , e )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME i TYPE TYPE_1 NAME s INIT = VAR_1 . get ( i ) TYPE TYPE_1 NAME e INIT = VAR_1 . get ( ( i - 1 ) )  return ( ( s . METHOD_2 ( ) ) - ( e . METHOD_3 ( ) ) ) <= ( 2 * ( VAR_2 ) ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_2 . getChange ( ) . getStatus ( ) ) != ( VAR_3 )  return false ; TYPE TYPE_1 NAME t IN TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) COND ! ( VAR_2 . METHOD_4 ( t ) )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( INT_1 ) )  METHOD_2 ( b , b . append ( INT_2 ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME err  TYPE_2 . METHOD_2 ( true , VAR_1 ) COND TYPE_3 . METHOD_3 ( err )  new TYPE_3 ( err . getMessage ( ) ) . METHOD_4 ( )  TYPE_4 . display ( TYPE_5 . METHOD_5 ( id ) )  super . METHOD_1 ( err )
MODIFIER public RETURN void NAME onSuccess TYPE java.util.List<TYPE_1> NAME result  VAR_1 . METHOD_1 ( ) TYPE java.util.ArrayList<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( result . size ( ) ) TYPE TYPE_1 NAME p IN result  r . add ( new TYPE_2 ( p ) )  VAR_1 . put ( p . getName ( ) , p . METHOD_2 ( ) )  VAR_2 . METHOD_3 ( req , new TYPE_3 ( r ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME name IN ( ( java.util.List < java.lang.String > ) ( VAR_1 . get ( ) . METHOD_2 ( VAR_2 ) . apply ( new TYPE_1 ( ) ) ) )  VAR_3 . METHOD_3 ( name )  VAR_3 . METHOD_3 ( CHAR_1 )  VAR_3 . METHOD_4 ( )
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME value TYPE TYPE_1 NAME r  assertEquals ( VAR_1 , r . METHOD_2 ( ) )  assertEquals ( name , r . METHOD_3 ( ) )  assertEquals ( 1 , r . METHOD_4 ( ) ) TYPE TYPE_1 NAME c INIT = r . METHOD_5 ( 0 )  assertEquals ( VAR_2 , c . METHOD_2 ( ) )  assertEquals ( value , c . METHOD_3 ( ) )  assertEquals ( 0 , c . METHOD_4 ( ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } TYPE java.lang.String NAME value INIT = TYPE_1 . METHOD_2 ( STRING_4 )  return ( value != null ) && ( TYPE_2 . METHOD_3 ( VAR_1 ) . contains ( value . METHOD_4 ( ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2 NAME VAR_1 COND ( req . METHOD_2 ( ) . length ( ) ) >= ( TYPE_3 . info ( ) . METHOD_3 ( ) . METHOD_4 ( ) )  METHOD_5 ( req , VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_2 INIT = java.util.Collections . METHOD_6 ( )  VAR_1 . METHOD_7 ( req , new TYPE_5 ( VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = repo . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) TYPE TYPE_1 NAME res INIT = METHOD_5 ( STRING_1 )  org.junit.Assert.assertEquals ( ( name + STRING_2 ) , new java.lang.String ( res . METHOD_6 ( ) , VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1 == ( TYPE_2 . METHOD_2 ( ) )  METHOD_3 ( db ) TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_2 . METHOD_4 ( )  METHOD_3 ( db )  db . close ( )  return null ;
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE java.lang.StringBuilder NAME m INIT = new java.lang.StringBuilder ( VAR_1 ) TYPE java.lang.String[] NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 != null  m . append ( TYPE_1 . on ( STRING_1 ) . METHOD_3 ( VAR_2 ) )  return m . toString ( ) ;
MODIFIER private static RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_2 . METHOD_2 ( ) )  VAR_4 . METHOD_3 ( VAR_3 ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_5 INIT = VAR_4 . METHOD_4 ( VAR_1 ) COND org.eclipse.jgit.lib.ObjectId . equals ( VAR_5 , VAR_2 . METHOD_2 ( ) )  throw new TYPE_2 ( STRING_1 ) ;  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . METHOD_3 ( ) )  METHOD_2 ( b , b . METHOD_4 ( STRING_1 ) )  METHOD_2 ( b , b . METHOD_5 ( STRING_2 ) )  METHOD_2 ( b , b . append ( STRING_3 ) )  METHOD_2 ( b , b . METHOD_6 ( ) )  assertEquals ( STRING_4 , b . METHOD_7 ( ) )
MODIFIER protected RETURN void NAME run COND ( ( VAR_1 ) == null ) || ( VAR_1 . isEmpty ( ) )  VAR_2 . METHOD_1 ( true )  VAR_2 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME e  throw METHOD_3 ( e . getMessage ( ) ) ; TYPE TYPE_3 NAME e  throw METHOD_3 ( e . getMessage ( ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME i COND ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( i ) , VAR_2 ) ) && ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_4 ( i ) , VAR_3 ) )  ( VAR_4 ) ++  return true ;  return false ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME schema TYPE TYPE_4 NAME cfg TYPE TYPE_5 NAME VAR_1 COND TYPE_6 . METHOD_2 ( cfg )  return new TYPE_7 ( ) ; TYPE TYPE_8 NAME VAR_2 INIT = TYPE_9 . METHOD_3 ( VAR_1 , ( ( VAR_3 ) + STRING_1 ) , schema )  return TYPE_10 . METHOD_4 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( new TYPE_3 ( STRING_2 , STRING_3 ) , new TYPE_3 ( STRING_4 , STRING_5 ) ) )  METHOD_5 ( VAR_1 , n )  assertEquals ( ( STRING_6 + ( ( STRING_7 + STRING_8 ) + STRING_9 ) ) , n . METHOD_6 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME c TYPE TYPE_1.Project NAME VAR_1  VAR_1 = new TYPE_1 . Project ( new TYPE_3 . NameKey ( STRING_1 ) , VAR_2 )  VAR_1 . METHOD_2 ( STRING_2 )  VAR_1 . METHOD_3 ( VAR_3 )  VAR_1 . METHOD_4 ( false )  c . projects ( ) . insert ( java.util.Collections.singleton ( VAR_1 ) )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME token COND token == null  token = STRING_1 COND token . METHOD_2 ( STRING_2 )  token = token . METHOD_3 ( 1 )  return TYPE_1 . METHOD_4 ( ( STRING_3 + token ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project COND ( VAR_1 ) == null  VAR_1 = VAR_2 . get ( )  VAR_3 = true TYPE TYPE_1 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( project )  TYPE_2 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_6 ) )  return VAR_4 ; TYPE TYPE_3 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_2 ( ) ) ) || ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( ! ( METHOD_8 ( db ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 != null  VAR_1 . close ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND VAR_3 != VAR_1  VAR_3 . close ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) . toString ( ) COND TYPE_5 . METHOD_3 ( VAR_3 )  return METHOD_4 ( name , VAR_1 , VAR_2 ) ; COND VAR_4 . METHOD_5 ( VAR_1 )  return METHOD_6 ( VAR_1 , VAR_2 ) ;  throw new TYPE_4 ( java.lang.String.format ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 = TYPE_2 . METHOD_2 ( ) TYPE java.io.IOException NAME e COND ( e instanceof TYPE_3 ) && ( TYPE_4 . equals ( e . getMessage ( ) ) )  return null ; TYPE TYPE_5 NAME VAR_2 INIT = new TYPE_5 ( STRING_1 )  VAR_2 . METHOD_3 ( e )  throw VAR_2 ;  return VAR_1 ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME get TYPE TYPE_3<TYPE_2> NAME m INIT = new TYPE_3 < TYPE_2 > ( ) TYPE java.util.List<TYPE_4<TYPE_2>> NAME VAR_1 INIT = VAR_2 . METHOD_1 ( type ) COND VAR_1 != null TYPE TYPE_4<TYPE_2> NAME b IN VAR_1 COND ( b . getKey ( ) . METHOD_2 ( ) ) != null  m . put ( STRING_1 , b . getKey ( ) , b . METHOD_3 ( ) )  return m ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res COND ( VAR_1 ) == null  TYPE_4 . METHOD_2 ( res )  res . METHOD_3 ( VAR_2 )  return ;  VAR_1 . METHOD_4 ( req , res , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 )  assertThat ( VAR_3 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_2 ) . to ( VAR_4 ) . to ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 ) . METHOD_6 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_10 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_1 ( VAR_1 ) COND VAR_4 . METHOD_2 ( )  return VAR_2 . METHOD_3 ( getRefName ( ) ) ;  return new TYPE_1 ( VAR_2 , getRefName ( ) , VAR_4 ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.StringBuilder NAME b INIT = new java.lang.StringBuilder ( )  b . append ( ( ( STRING_1 + ( config . size ( ) ) ) + STRING_2 ) ) TYPE TYPE_1 NAME c IN config  b . append ( STRING_3 )  b . append ( c . toString ( ) )  b . append ( STRING_4 )  b . append ( STRING_5 )  return b . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 . isEmpty ( ) ) COND ( VAR_2 . contains ( VAR_3 ) ) || ( VAR_2 . contains ( VAR_4 ) )  commands . add ( VAR_5  new TYPE_1 ( ) ) COND ( ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( TYPE_3 . METHOD_4 ( ) )  commands . add ( VAR_5  new TYPE_4 ( METHOD_5 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_4 , STRING_2 )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_5 , VAR_4 , STRING_3 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_3 )  METHOD_4 ( STRING_4 , ( ( u . METHOD_5 ( ) ) == ( VAR_6 ) ) )  METHOD_4 ( STRING_5 , u . METHOD_6 ( STRING_6 ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . set ( VAR_4 ) TYPE java.lang.String NAME message  message = VAR_5 . get ( ) . getMessage ( )  VAR_3 . set ( VAR_2 )  err . METHOD_2 ( TYPE_3 . METHOD_3 ( message . toString ( ) ) )  err . METHOD_4 ( )  in . close ( )  out . close ( )  err . close ( )  VAR_6 . METHOD_5 ( INT_1 )
MODIFIER private static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2 NAME args TYPE java.lang.String NAME label TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = TYPE_3 . METHOD_2 ( ( 2 * ( VAR_1 ) ) ) TYPE int NAME i INIT = 1 COND i <= ( VAR_1 )  i ++  r . add ( TYPE_4 . METHOD_3 ( args , label , i ) )  r . add ( TYPE_4 . METHOD_3 ( args , label , ( - i ) ) )  return not ( METHOD_4 ( r ) ) ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p  VAR_1 = METHOD_2 ( )  VAR_2 = METHOD_3 ( )  VAR_3 = METHOD_4 ( )  VAR_4 = METHOD_5 ( )  VAR_5 = METHOD_6 ( )  VAR_6 = METHOD_7 ( )  VAR_7 = METHOD_8 ( )  VAR_8 = METHOD_9 ( )  VAR_9 = METHOD_10 ( )  VAR_10 = METHOD_11 ( )  VAR_11 = METHOD_12 ( )  VAR_12 = METHOD_13 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_3 ( query ( STRING_1 ) ) . changeId ) . isEqualTo ( r . getChangeId ( ) )  METHOD_4 ( user )  com.google.common.truth.Truth.assertThat ( query ( STRING_1 ) . isEmpty ( ) ) . METHOD_5 ( )
MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name  return VAR_1 . METHOD_1 ( name ) ; TYPE TYPE_1 NAME err  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err )  return null ;
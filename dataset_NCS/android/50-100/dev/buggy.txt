MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE long[] NAME values TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_4> NAME VAR_4 INIT = new java.util.ArrayList < > ( ) TYPE long NAME value IN values  VAR_4 . METHOD_3 ( value )  return new TYPE_1 ( TYPE_5 . METHOD_4 ( VAR_5 , STRING_1 ) , STRING_2 , 0 , VAR_2 . METHOD_5 ( ) , VAR_3 , VAR_4 , STRING_3 , STRING_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2[] NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 TYPE boolean NAME VAR_5 TYPE boolean NAME VAR_6 TYPE TYPE_5 NAME rule INIT = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) COND rule != null  rule . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) TYPE java.lang.Exception NAME e  METHOD_5 ( STRING_1 , rule . METHOD_6 ( ) . METHOD_7 ( ) , e.toString ( ) )
MODIFIER public RETURN void NAME METHOD_1 COND ( ! ( VAR_1 ) ) && ( ( VAR_2 ) != null ) TYPE TYPE_1 NAME node IN VAR_2 TYPE java.lang.String NAME VAR_3 INIT = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 )  mContext . METHOD_2 ( VAR_4 , node , mContext . METHOD_3 ( node ) , VAR_3 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE double NAME VAR_1 INIT = METHOD_2 ( METHOD_3 ( ) )  android.util.Log . i ( VAR_2 . TAG , ( STRING_1 + VAR_1 ) ) COND ( VAR_1 >= FLOAT_1 ) && ( VAR_1 <= FLOAT_2 )  return ; COND METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) COND ( VAR_1 >= FLOAT_3 ) && ( VAR_1 <= FLOAT_2 )  return ;  fail ( ( STRING_2 + VAR_1 ) )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1  android.util.Log.v ( VAR_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = VAR_2 COND service != null  return service . METHOD_1 ( ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_1 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_1 . TAG , STRING_2 )  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE int NAME VAR_2 INIT = INT_1 TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( 10 ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( 100 ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_3 ( VAR_1 , VAR_2 )  VAR_5 . METHOD_4 ( VAR_3 , VAR_4 )  fail ( STRING_2 ) TYPE TYPE_3 NAME VAR_6 BLOCK BLOCK TYPE java.lang.Exception NAME e  fail ( ( e + STRING_3 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE java.lang.Object NAME VAR_1 TYPE TYPE_2 NAME VAR_2  assertNotNull ( STRING_1 , VAR_2 ) TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( test , STRING_2 )  VAR_2 . METHOD_3 ( ( ( TYPE_3 ) ( VAR_1 ) ) , VAR_3 )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) TYPE java.util.List<TYPE_3> NAME VAR_3 INIT = TYPE_4 . METHOD_5 ( VAR_4 ) TYPE TYPE_3 NAME VAR_5 IN VAR_3 TYPE TYPE_5 NAME VAR_6 INIT = VAR_2 . METHOD_6 ( VAR_5 ) COND ( VAR_6 . METHOD_7 ( ) ) && ( ( VAR_6 . equals ( METHOD_8 ( ) ) ) == false )  METHOD_9 ( VAR_6 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME test TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( java.lang.String.format ( STRING_1 , test . METHOD_3 ( ) , test . METHOD_4 ( ) , VAR_3 ) )  VAR_2 . METHOD_2 ( METHOD_5 ( VAR_1 ) )  VAR_4 . METHOD_6 ( test )  super . METHOD_1 ( test , VAR_1 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) COND VAR_1 != null TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) COND ( VAR_2 . length ( ) ) > 0  return VAR_2 ;  return null ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ( this ) == VAR_1  return true ; COND ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) )  return false ; COND ! ( super . equals ( VAR_1 ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) ) COND ( VAR_3 ) != ( VAR_4 )  return false ;  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3  VAR_4 . METHOD_2 ( VAR_5 , VAR_1 )  VAR_4 . METHOD_3 ( VAR_6 )  VAR_4 . METHOD_4 ( VAR_3 )  VAR_4 . METHOD_5 ( VAR_7 , VAR_1 , STRING_1 , VAR_2 )  VAR_4 . METHOD_3 ( VAR_8 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME subId TYPE boolean NAME VAR_1 INIT = false TYPE TYPE_1 NAME telephony INIT = METHOD_2 ( ) COND telephony != null  VAR_1 = telephony . METHOD_1 ( subId ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK  android.util.Log.d ( VAR_2 . TAG , ( STRING_2 + VAR_1 ) )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME parent TYPE TYPE_1 NAME c TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = c . METHOD_2 ( ) COND METHOD_3 ( VAR_2 , parent , METHOD_4 ( ) ) TYPE java.lang.String NAME value INIT = METHOD_5 ( c . METHOD_6 ( ) )  METHOD_7 ( context , VAR_2 , value , parent , VAR_1 , c )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context COND TYPE_2 . METHOD_2 ( context ) COND ( VAR_1 ) >= ( VAR_2 )  return TYPE_2 . METHOD_3 ( context ) . METHOD_4 ( ) ;  return TYPE_2 . METHOD_3 ( context ) . METHOD_1 ( ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 = new TYPE_1 [ ] { }  VAR_2 = VAR_3 = VAR_4 = - 1  VAR_5 = new TYPE_2 ( INT_1 , 0 , TYPE_3 . METHOD_4 ( STRING_1 ) )  VAR_6 . METHOD_5 ( VAR_5 )  VAR_7 = new TYPE_4 ( TAG )  VAR_7 . start ( )  METHOD_6 ( )  METHOD_7 ( VAR_8 class , STRING_2 , VAR_9 , VAR_10 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( name ) COND VAR_1 == null  VAR_1 = TYPE_3 . METHOD_1 ( name ) COND VAR_1 == null  VAR_1 = TYPE_4 . METHOD_1 ( name ) COND VAR_1 == null  VAR_1 = TYPE_5 . METHOD_1 ( name )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 , 1 ) . METHOD_3 ( 2 , 1 ) . METHOD_4 ( )  assertEquals ( VAR_3 , VAR_4 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) )  METHOD_7 ( )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.v ( com.android.server.am.ActivityManagerService.TAG , ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_2 . METHOD_2 ( ) ) ) )  METHOD_3 ( VAR_3 )  this  METHOD_4 ( VAR_3 , VAR_4 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME c INIT = VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( ) TYPE long NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( ) TYPE long NAME VAR_4 INIT = 10  assertFalse ( c . METHOD_5 ( VAR_4 , VAR_5 ) )  assertTrue ( ( ( METHOD_6 ( VAR_3 ) ) >= VAR_4 ) )  VAR_2 . METHOD_7 ( ) TYPE TYPE_4 NAME e  METHOD_8 ( e )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2  when ( VAR_3 . METHOD_2 ( ) ) . thenReturn ( true )  when ( VAR_4 . METHOD_2 ( ) ) . thenReturn ( false )  VAR_5 . METHOD_3 ( VAR_1 )  VAR_6 . verify ( VAR_4 , METHOD_4 ( ) ) . METHOD_5 ( METHOD_6 ( VAR_7 class ) )  VAR_6 . verify ( VAR_4 , METHOD_4 ( ) ) . METHOD_7 ( METHOD_8 ( ) , METHOD_6 ( VAR_8 class ) )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class )  TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( STRING_1 )  VAR_3 = TYPE_1 . METHOD_6 ( VAR_4 class )  VAR_5 = new TYPE_2 ( VAR_6 , VAR_7 , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 COND ( ( VAR_1 . length ) > 0 ) && ( ( VAR_1 [ 0 ] ) != null ) COND ( VAR_2 ) == null  VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 , mContext , VAR_4 , VAR_5 )  VAR_2 . METHOD_3 ( VAR_3 , mContext , VAR_4 ) COND ( VAR_2 ) != null  VAR_2 . METHOD_4 ( )  VAR_2 = null
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1 NAME e INIT = ( ( TYPE_1 ) ( super . METHOD_1 ( ) ) )  VAR_1 = ( ( VAR_2 ) == null ) ? null : VAR_2 . METHOD_1 ( )  return e ; TYPE TYPE_2 NAME e  throw new TYPE_3 ( ) ;
MODIFIER public RETURN android.os.Bundle NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME action TYPE int NAME x TYPE int NAME y TYPE int NAME VAR_2 TYPE android.os.Bundle NAME VAR_3 TYPE boolean NAME VAR_4  VAR_5 TYPE long NAME VAR_6 INIT = TYPE_2 . METHOD_2 ( )  return METHOD_3 ( METHOD_4 ( this , VAR_1 ) , action , x , y , VAR_2 , VAR_3 , VAR_4 ) ;  TYPE_2 . METHOD_5 ( VAR_6 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME VAR_1 COND ( ! ( VAR_1 . METHOD_2 ( ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) instanceof TYPE_1 ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_4 ( ) COND ( VAR_2 . METHOD_5 ( VAR_3 class ) ) == null  VAR_2 . METHOD_6 ( new TYPE_3 ( VAR_2 ) )  return super . METHOD_1 ( VAR_1 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.util.List<java.lang.String> NAME VAR_4 TYPE int NAME i INIT = VAR_2 COND i < VAR_3  i ++ TYPE java.lang.String NAME VAR_5 INIT = VAR_1 [ i ] COND TYPE_1 . METHOD_2 ( VAR_5 )  VAR_4 . METHOD_3 ( VAR_5 . METHOD_4 ( VAR_6 ) )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_2 )  args . METHOD_2 ( STRING_2 , 0 )  args . METHOD_2 ( STRING_3 , VAR_3 )  TYPE_2 . METHOD_3 ( VAR_1 , TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_5 ( VAR_1 , VAR_5 )  TYPE_4 . METHOD_6 ( VAR_4 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4 TYPE TYPE_2 NAME VAR_5 COND TYPE_3 . METHOD_2 ( )  VAR_5 = TYPE_4 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , null )  VAR_5 = TYPE_5 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 )  return new TYPE_1 ( VAR_5 ) ;
MODIFIER public static RETURN java.util.ArrayList<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_3> NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) . VAR_3  return TYPE_5 . METHOD_6 ( TYPE_6 . METHOD_7 ( VAR_2 , true , VAR_1 ) ) ;
MODIFIER public static RETURN java.util.Set<java.lang.Integer> NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = 1 TYPE java.util.Set<java.lang.Integer> NAME result INIT = null COND VAR_1 != 0 COND ( VAR_1 & 1 ) != 0 COND result == null  result = new TYPE_1 < java.lang.Integer > ( )  result . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 ) )  VAR_1 >>>= 1  VAR_2 <<= 1  return result != null ? result : VAR_3 < java.lang.Integer > METHOD_4 ( ) ;
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 )  sb.append ( METHOD_1 ( ) . getName ( ) )  sb.append ( CHAR_1 )  sb.append ( VAR_1 . toString ( ) )  sb.append ( CHAR_2 )  sb.append ( type . METHOD_2 ( ) )  sb.append ( CHAR_3 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( ( VAR_1 . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_2 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ;  session = VAR_1 . METHOD_7 ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( method )  VAR_3 . METHOD_5 ( method )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) == null  VAR_3 = VAR_1  VAR_2 = VAR_4 . METHOD_2 ( VAR_5 , VAR_1 ) COND ! ( VAR_2 . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( )  return true ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  TYPE_2 . i ( STRING_1 , STRING_2 )  throw new java.lang.NullPointerException ( STRING_3 ) ;  return ( ( ( ( VAR_2 ) >= ( VAR_3 ) ) && ( ( VAR_2 ) <= ( VAR_4 ) ) ) && ( ! ( TYPE_3 . METHOD_2 ( ) ) ) ) && ( VAR_1 . METHOD_3 ( STRING_4 , false ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ( ( VAR_3 ) + STRING_1 ) )  VAR_2 . METHOD_3 ( VAR_4 , VAR_5 , VAR_1 )  VAR_2 = TYPE_2 . METHOD_2 ( STRING_2 )  VAR_2 . METHOD_3 ( VAR_4 , VAR_5 , VAR_1 )  fail ( ) TYPE TYPE_3 NAME expected BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config INIT = new TYPE_2 ( ) . addFeature ( VAR_1 ) . addFeature ( VAR_2 ) . build ( )  VAR_3 = config TYPE TYPE_1 NAME result INIT = VAR_4 . METHOD_2 ( )  TYPE_3 . assertEquals ( config , result )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device ) ;
MODIFIER private RETURN void NAME METHOD_1  this  METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_3 ( )  VAR_1 . METHOD_1 ( )  VAR_1 . METHOD_4 ( )  VAR_2 . METHOD_4 ( ) COND VAR_3  out . METHOD_5 ( ) TYPE TYPE_2 NAME x  TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) TYPE java.io.IOException NAME x  VAR_4 = true
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE char[] NAME s TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( s . length )  ++ i COND i != 0  result . append ( CHAR_1 )  result . append ( TYPE_2 . METHOD_1 ( s [ i ] ) )  return result . toString ( ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) TYPE TYPE_2 NAME VAR_3 IN m . METHOD_2 ( VAR_2 )  sb.append ( VAR_3 . toString ( ) ) . append ( CHAR_1 ) TYPE TYPE_3 NAME item IN VAR_3 . METHOD_3 ( )  sb.append ( STRING_1 ) . append ( item . toString ( ) ) . append ( CHAR_1 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME index TYPE int NAME VAR_2 COND VAR_3  TYPE_1 . d ( VAR_4 . TAG , ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + index ) + STRING_3 ) + VAR_2 ) )  VAR_5 . METHOD_2 ( VAR_2 )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3<TYPE_4> NAME VAR_2 TYPE java.util.List<TYPE_4> NAME VAR_3 INIT = TYPE_5 . METHOD_2 ( VAR_2 ) TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_3 ( VAR_5 , VAR_1 . METHOD_4 ( ) )  VAR_3 . METHOD_5 ( VAR_4 )  return new TYPE_6 ( TYPE_7 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) , TYPE_8 . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) , VAR_3 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2  TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , STRING_1 , VAR_1 ) TYPE int NAME i INIT = 0 TYPE int NAME size INIT = VAR_3 . size ( ) COND i < size  ++ i TYPE TYPE_1 NAME type INIT = VAR_3 . get ( i ) COND type == VAR_1  VAR_3 . set ( i , VAR_2 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 TYPE java.util.Set<TYPE_2> NAME VAR_2 INIT = new TYPE_3 < TYPE_2 > ( ) TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME type IN VAR_3 COND ( VAR_1 . METHOD_2 ( type ) ) || ( type . METHOD_2 ( VAR_1 ) ) TYPE com.android.jack.ir.ast.JMethod NAME method IN type . METHOD_3 ( )  VAR_2 . METHOD_4 ( method . METHOD_5 ( ) )  return VAR_2 ;
MODIFIER private RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( VAR_2 class ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_4 ) TYPE boolean NAME VAR_5 INIT = ( VAR_3 >= 0 ) && ( VAR_3 <= ( VAR_6 ) )  return VAR_5 ? VAR_3 : TYPE_1 . METHOD_6 ( ) . METHOD_5 ( VAR_4 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 , s )  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  s . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( )  s . METHOD_6 ( ) . getElement ( ) . METHOD_8 ( )  s . METHOD_8 ( )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 class ) TYPE java.io.File NAME VAR_3  VAR_3 = TYPE_3 . METHOD_3 ( STRING_1 , STRING_2 )  VAR_1 . METHOD_4 ( TYPE_4 . getName ( ) , TYPE_5 . toString ( VAR_4 ) )  VAR_1 . METHOD_4 ( TYPE_6 . getName ( ) , STRING_3 )  VAR_1 . METHOD_4 ( TYPE_7 . getName ( ) , VAR_3 . METHOD_5 ( ) ) TYPE java.io.IOException NAME e  throw new TYPE_8 ( e ) ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_3  METHOD_2 ( ) COND VAR_3  android.util.Log.d ( VAR_4 , ( ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) + STRING_2 ) + VAR_2 ) )  VAR_5 . METHOD_4 ( VAR_1 . METHOD_3 ( ) ) COND ( VAR_5 . METHOD_5 ( ) ) && ( VAR_6 ) COND VAR_2  METHOD_6 ( VAR_7 )  METHOD_6 ( VAR_8 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_3 , STRING_1 , VAR_1 , VAR_4 , ( ( TYPE_4 ) ( VAR_5 . METHOD_2 ( ) ) ) ) TYPE TYPE_1 NAME VAR_6 INIT = new TYPE_1 ( VAR_3 , VAR_7 < TYPE_5 > METHOD_3 ( VAR_1 ) , VAR_2 )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  TYPE_3 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) )  VAR_1 . METHOD_6 ( null ) TYPE TYPE_5 NAME VAR_3 INIT = METHOD_7 ( VAR_2 ) TYPE TYPE_6<TYPE_7> NAME request INIT = METHOD_8 ( TYPE_8 . with ( VAR_1 ) , VAR_2 ) . METHOD_9 ( VAR_3 ) . METHOD_10 ( VAR_3 ) COND VAR_2 . METHOD_11 ( )  request . METHOD_12 ( )  request . METHOD_13 ( VAR_1 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME uri TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE long NAME VAR_3 TYPE int NAME VAR_4 COND ( ( VAR_5 ) ++ ) > 0  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3 TYPE int NAME VAR_4 INIT = ( ( int ) ( METHOD_2 ( VAR_5 ) ) ) TYPE int NAME VAR_6 INIT = VAR_4 + ( VAR_7 ) TYPE int NAME VAR_8 INIT = METHOD_3 ( VAR_1 ) TYPE int NAME VAR_9 INIT = METHOD_4 ( VAR_5 ) COND VAR_10 . METHOD_5 ( )  METHOD_6 ( VAR_2 , VAR_4 , VAR_6 , VAR_8 , VAR_11 , VAR_9 ) ELSE ELSE
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b TYPE java.util.ArrayList<TYPE_2> NAME VAR_1 INIT = b . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . get ( ( ( VAR_1 . size ( ) ) - 1 ) ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_2 . METHOD_3 ( ) COND ( ( VAR_3 . METHOD_4 ( ) ) != ( VAR_4 ) ) && ( VAR_3 != ( VAR_5 ) )  throw new java.lang.RuntimeException ( ( STRING_1 + STRING_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( new java.util.HashMap < > ( ) ) . METHOD_3 ( 1 , FLOAT_1 , FLOAT_2 )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK TYPE java.util.HashMap<java.lang.Integer,TYPE_3> NAME m INIT = new java.util.HashMap < > ( )  m . METHOD_4 ( 1 , FLOAT_1 )  TYPE_1 . METHOD_2 ( m ) . METHOD_3 ( 1 , FLOAT_1 , FLOAT_2 )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( STRING_1 ) )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_5 ( STRING_2 ) ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , INT_1 , STRING_2 , STRING_1 )  assertEquals ( match , result )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_1 < 0 ) || ( VAR_1 > INT_1 )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND METHOD_2 ( )  throw new TYPE_1 ( STRING_2 ) ;  METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_1 ) TYPE TYPE_1 NAME VAR_3 COND ! ( METHOD_5 ( ) )  throw VAR_3 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE long NAME id TYPE int NAME VAR_1 COND ( ( status ) & ( VAR_2 ) ) == 0  status |= VAR_2  VAR_3 = new int [ ( ( VAR_1 - 1 ) / INT_1 ) + 1 ]  VAR_3 [ ( ( int ) ( id > > > INT_1 ) ) ] |= ( ( int ) ( id ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME session TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE TYPE_4 NAME VAR_2 COND VAR_2 . METHOD_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( VAR_2 , session . METHOD_4 ( ) )  session . METHOD_5 ( ) . METHOD_6 ( VAR_4 )
MODIFIER public synchronized RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name  return METHOD_2 ( name ) ; TYPE TYPE_3 NAME e TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_1 ( this , name )  VAR_3 . METHOD_3 ( name , VAR_1 )  return VAR_1 ; TYPE TYPE_4 NAME e  throw new TYPE_2 ( VAR_2 . METHOD_4 ( this , name ) ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND ! ( VAR_1 instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 . length )  ++ i COND ! ( VAR_3 [ i ] . equals ( VAR_4 [ i ] ) )  return false ;  return true ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3[] NAME VAR_3 INIT = VAR_4 COND METHOD_2 ( VAR_3 ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_6 COND VAR_5 == null  return false ; TYPE java.lang.String NAME VAR_7 INIT = TYPE_5 . METHOD_3 ( VAR_2 ) TYPE TYPE_6 NAME item INIT = TYPE_7 . METHOD_4 ( VAR_7 , VAR_5 ) COND item != null  METHOD_5 ( VAR_7 , item )  METHOD_6 ( VAR_3 , item )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( VAR_2 ) == VAR_1  return ;  VAR_2 = VAR_1 COND VAR_2  VAR_3 . METHOD_2 ( VAR_4 )  TYPE_1 . METHOD_3 ( mContext , VAR_5 )  VAR_3 . METHOD_4 ( VAR_4 )  TYPE_1 . METHOD_5 ( mContext , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 ) TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_4 ( VAR_5 )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_1 ) )  assertEquals ( VAR_3 , true )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 != null TYPE java.lang.Class<?extendsTYPE_1> NAME type INIT = VAR_1 . METHOD_2 ( ) COND ( type == ( VAR_2 class ) ) || ( type == ( VAR_3 class ) )  return VAR_1 ;  VAR_1 = VAR_1 . METHOD_3 ( )  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  VAR_3 TYPE TYPE_1<TYPE_2> NAME i INIT = VAR_4 . METHOD_2 ( ) COND i . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_5 INIT = i . METHOD_4 ( )  VAR_5 . METHOD_5 ( VAR_1 , VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_6 , ( ( STRING_1 + STRING_2 ) + ( e.getMessage ( ) ) ) )  i . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME size INIT = ( this . METHOD_2 ( ) ) > > 2 TYPE int NAME VAR_1 INIT = METHOD_3 ( )  return ( ( TYPE_1 ) ( new TYPE_2 ( this , ( - 1 ) , 0 , size , size , VAR_1 , METHOD_4 ( ) ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( STRING_1 , STRING_2 , VAR_3 . TAG , null , null , null , null , false , ( - 1 ) , false , ( - 1 ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_4 ( TYPE_1 . eq ( STRING_3 ) , TYPE_1 . eq ( STRING_4 ) , TYPE_1 . eq ( 0 ) , TYPE_1 . eq ( 0 ) , org.mockito.Matchers . METHOD_5 ( VAR_5 class ) )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name INIT = TYPE_2 . getName ( VAR_1 ) COND name == null  name = TYPE_3 . getName ( VAR_1 ) COND name == null  name = TYPE_4 . getName ( VAR_1 ) COND name == null  name = TYPE_5 . getName ( VAR_1 ) COND name == null  name = TYPE_6 . getName ( VAR_1 )  return name ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME b INIT = METHOD_2 ( STRING_2 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( new TYPE_1 [ ] { a , b } , VAR_2 ) . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( new TYPE_1 [ ] { a , VAR_1 } , VAR_2 )  VAR_3 . METHOD_3 ( )  fail ( ) TYPE TYPE_3 NAME expected  assertEquals ( STRING_3 , expected . getMessage ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type NAME type . METHOD_2 ( )  return VAR_2 ;  return VAR_4 ;  return VAR_6 ;  return VAR_8 ;  return VAR_10 ;  return VAR_4 ;  return TYPE_3 . METHOD_3 ( type ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( VAR_2 . METHOD_3 ( ) )  android.util.Log.w ( VAR_3 . TAG , ( ( STRING_1 + ( VAR_4 ) ) + STRING_2 ) )  METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_4 )  VAR_2 . METHOD_6 ( )  METHOD_7 ( ) COND ( METHOD_8 ( ) ) == 0 COND VAR_5  android.util.Log.d ( VAR_3 . TAG , STRING_3 )  METHOD_9 ( false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME VAR_1 COND VAR_2  log ( ( ( ( getName ( ) ) + ( VAR_1 . toString ( ) ) ) + STRING_1 ) ) NAME VAR_3 COND ( message.arg1 ) == ( VAR_5 )  METHOD_2 ( VAR_1 )  break ;  METHOD_2 ( VAR_1 )  METHOD_3 ( )  transitionTo ( VAR_7 )  break ;  return VAR_8 ;  TYPE_1 . METHOD_4 ( VAR_9 , VAR_3 )  return VAR_10 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME match TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) )  VAR_1 . METHOD_3 ( ( match = TYPE_3 . METHOD_5 ( INT_1 ) ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_5 ( INT_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_6 ( VAR_1 , INT_1 , STRING_1 )  assertEquals ( match , result )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.io.File NAME VAR_1 INIT = new java.io.File ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( new TYPE_2 ( VAR_1 , false ) )  TYPE_3 . METHOD_2 ( VAR_3 , path )  VAR_3 . METHOD_3 ( )  VAR_3 . METHOD_4 ( ) TYPE java.lang.Exception NAME e  android.util.Log.e ( VAR_4 , ( STRING_1 + ( e.getMessage ( ) ) ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME VAR_1 COND ( VAR_2 ) < ( VAR_3 )  return null ; COND VAR_1 == null  TYPE_4 . i ( STRING_1 , STRING_2 )  VAR_1 = TYPE_5 . METHOD_2 ( context ) COND VAR_1 == null  TYPE_4 . i ( STRING_1 , STRING_3 )  return null ;  return context . METHOD_3 ( VAR_4 class ) . METHOD_1 ( VAR_1 ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE int NAME start TYPE int NAME VAR_2 TYPE java.lang.StringBuilder NAME VAR_3 INIT = new java.lang.StringBuilder ( INT_1 ) TYPE int NAME i INIT = start COND i < VAR_2  ++ i COND i != 0  VAR_3 . append ( CHAR_1 )  VAR_3 . append ( VAR_1 [ i ] )  return VAR_3 . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.renderscript.Allocation NAME VAR_1 INIT = android.renderscript.Allocation.createSized ( mRS , TYPE_1 . METHOD_2 ( mRS ) , android.renderscript.cts.INPUTSIZE )  n = new int [ ( INPUTSIZE ) * 4 ]  TYPE_2 . METHOD_3 ( INT_1 , INT_2 , 1 , n )  VAR_1 . METHOD_4 ( n )  VAR_2 . METHOD_5 ( VAR_1 )  METHOD_6 ( INT_3 , 16 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_3 ( this ) COND VAR_1 . METHOD_4 ( )  METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( VAR_4 )  VAR_1 . METHOD_7 ( VAR_5 )  VAR_1 . METHOD_8 ( this )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 )  TYPE_2 . METHOD_3 ( VAR_1 , STRING_2 )  TYPE_3 . assertTrue ( STRING_3 , TYPE_2 . METHOD_4 ( VAR_1 , STRING_4 , null ) )  TYPE_3 . assertTrue ( STRING_5 , TYPE_2 . METHOD_4 ( VAR_1 , STRING_6 , null ) )  TYPE_2 . METHOD_5 ( VAR_1 , STRING_4 , null )  TYPE_2 . METHOD_5 ( VAR_1 , STRING_6 , null )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ! ( METHOD_2 ( ) ) ) || ( VAR_2 . METHOD_3 ( ) )  return ;  VAR_1 . print ( STRING_1 )  VAR_1 . print ( METHOD_4 ( ) )  VAR_1 . println ( STRING_2 ) TYPE TYPE_2 NAME VAR_3 IN VAR_2  VAR_3 . METHOD_1 ( VAR_1 )  VAR_1 . print ( STRING_3 )  VAR_1 . println ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.Class<?> NAME target INIT = VAR_1 class TYPE java.lang.String NAME VAR_2 INIT = STRING_1 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_2 ( VAR_4 , VAR_2 , null , target , VAR_5 , VAR_6 , 0 )  VAR_3 . run ( STRING_2 , null , null )  org.mockito.Mockito.verify ( VAR_4 , TYPE_3 . METHOD_2 ( 8 ) ) . METHOD_3 ( VAR_7 )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( path ) TYPE byte[] NAME b INIT = new byte [ 1 ] TYPE int NAME res INIT = - 1  res = METHOD_1 ( b , 0 , 1 )  TYPE_1 . METHOD_3 ( VAR_1 , res )  return res != ( - 1 ) ? ( b [ 0 ] ) & INT_1 : - 1 ;
MODIFIER public RETURN void NAME error TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME location TYPE java.lang.String NAME VAR_2 TYPE java.lang.Object NAME VAR_3 NAME VAR_1  VAR_5 . METHOD_1 ( STRING_1 , location , java.lang.String.format ( VAR_2 , VAR_3 ) )  break ;  VAR_5 . METHOD_2 ( STRING_1 , location , java.lang.String.format ( VAR_2 , VAR_3 ) )  break ;  VAR_5 . error ( null , STRING_1 , location , java.lang.String.format ( VAR_2 , VAR_3 ) )  break ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false , false , false )  TYPE_1 . when ( VAR_1 . METHOD_3 ( METHOD_4 ( ) ) ) . METHOD_5 ( VAR_2 )  assertFalse ( VAR_3 . METHOD_3 ( ) )  assertFalse ( VAR_3 . METHOD_6 ( ) )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME uid TYPE int NAME VAR_1 TYPE int[] NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int[][] NAME VAR_4 TYPE int NAME VAR_5 INIT = ( VAR_3 ) ? VAR_6 : 0  return TYPE_1 . METHOD_1 ( uid , VAR_1 , VAR_2 , VAR_5 , VAR_4 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . size ( ) TYPE int NAME i INIT = 0 COND i < VAR_1  i ++ TYPE TYPE_1 NAME w INIT = VAR_2 . get ( i ) COND VAR_3  android.util.Log.v ( TYPE_2 . TAG , ( STRING_1 + w ) )  w . METHOD_2 ( )
MODIFIER public RETURN java.lang.Integer NAME METHOD_1 TYPE java.lang.Integer NAME result INIT = 0 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 , null , null , null , null ) COND VAR_1 != null  result = VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_4 ( )  return result ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( )  TYPE_3 . METHOD_2 ( VAR_2 class . METHOD_3 ( ) , new java.lang.Class < ? > [ ] { VAR_3 class , VAR_4 class , VAR_5 class , VAR_6 class } , VAR_1 )  VAR_7 . println ( STRING_1 ) TYPE java.lang.IllegalArgumentException NAME VAR_8  java.lang.System.out.println ( STRING_2 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = null  VAR_1 = ( ( TYPE_1 < TYPE_2 > ) ( super . METHOD_1 ( ) ) )  VAR_1 . METHOD_2 ( new TYPE_3 ( m ) ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( ) ;  return VAR_1 ;
MODIFIER private synchronized RETURN void NAME METHOD_1 COND ( ( VAR_1 ) == true ) || ( ( VAR_2 ) != null )  return ; TYPE TYPE_1 NAME pm INIT = ( ( TYPE_1 ) ( mContext . METHOD_2 ( VAR_3 ) ) )  VAR_2 = pm . METHOD_3 ( VAR_4 , VAR_5 )
MODIFIER MODIFIER RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) TYPE java.lang.Class[] NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( ) COND ( ( VAR_3 . size ( ) ) < 1 ) || ( ( ( VAR_3 . size ( ) ) == 1 ) && ( VAR_4 class . METHOD_4 ( ) . equals ( VAR_3 . get ( 0 ) . getName ( ) ) ) )  METHOD_5 ( STRING_1 )  VAR_5 . METHOD_6 ( VAR_6 )  METHOD_7 ( VAR_2 , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME e INIT = VAR_1 . METHOD_3 ( ) TYPE java.lang.String[] NAME VAR_2 INIT = e . METHOD_4 ( )  TYPE_3 . METHOD_5 ( VAR_3 , VAR_2 )  METHOD_6 ( VAR_2 , e . METHOD_4 ( ) )  c . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( VAR_1 ) != null TYPE TYPE_2<java.lang.String,TYPE_3> NAME VAR_2 IN VAR_1 TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) COND ( ( VAR_4 ) == null ) || ( ! ( VAR_4 . METHOD_3 ( VAR_3 ) ) )  continue ; TYPE TYPE_3 NAME location INIT = VAR_2 . METHOD_4 ( )  context . METHOD_5 ( VAR_5 , location , VAR_6 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME sb  sb.append ( STRING_1 ) COND ( VAR_1 ) == null  sb.append ( STRING_2 )  return ; COND ( VAR_2 ) != null  VAR_2 . METHOD_1 ( sb )  sb.append ( STRING_3 )  VAR_3 . METHOD_1 ( sb )  sb.append ( STRING_4 )
MODIFIER public static final RETURN java.util.HashMap NAME METHOD_1 TYPE TYPE_1 NAME in TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( )  VAR_1 . METHOD_3 ( in , null )  return ( ( java.util.HashMap ) ( TYPE_5 . METHOD_4 ( VAR_1 , new java.lang.String [ 1 ] ) ) ) ;
MODIFIER public RETURN char NAME METHOD_1 TYPE int NAME i COND ! ( VAR_1 )  throw new TYPE_1 ( STRING_1 ) ;  METHOD_2 ( i , VAR_2 ) TYPE char NAME x INIT = ( ( char ) ( TYPE_2 . METHOD_3 ( METHOD_4 ( i ) , ( ! ( VAR_3 ) ) ) ) )  return x ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME listener  METHOD_2 ( ) COND listener == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_3 NAME p INIT = METHOD_3 ( VAR_1 , listener )  VAR_2 . METHOD_4 ( p )  VAR_3 . METHOD_1 ( VAR_4 , p ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_2 , e , VAR_5 ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_1 , ( ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) )  VAR_3 . METHOD_2 ( new TYPE_4 [ ] { TYPE_5 . METHOD_3 ( ) } )  VAR_3 . METHOD_4 ( VAR_2 )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context COND ( VAR_1 ) != null TYPE TYPE_2 NAME VAR_2 INIT = context . METHOD_2 ( ) COND ( VAR_2 != null ) && ( VAR_2 != ( VAR_3 ) ) TYPE java.lang.String NAME name INIT = TYPE_3 . METHOD_3 ( VAR_4 . getName ( ) ) COND ! ( name . METHOD_4 ( VAR_1 ) ) TYPE TYPE_4 NAME location INIT = TYPE_4 . METHOD_5 ( VAR_4 )  context . METHOD_6 ( VAR_5 , location , METHOD_7 ( name ) , null )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<java.lang.Class<?extendsTYPE_3>> NAME VAR_1 INIT = new java.util.ArrayList < java.lang.Class < ? extends TYPE_3 > > ( 1 )  VAR_1 . METHOD_2 ( VAR_2 class )  VAR_1 . METHOD_2 ( VAR_3 class ) TYPE TYPE_1 NAME VAR_4 INIT = null  VAR_4 = TYPE_4 . METHOD_3 ( VAR_5 class , VAR_1 ) TYPE java.io.File[] NAME VAR_6 INIT = VAR_4 . METHOD_4 ( )  VAR_4 . METHOD_5 ( VAR_6 )  VAR_4 . METHOD_6 ( VAR_7 )  return VAR_4 ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_1 NAME c INIT = VAR_4 . METHOD_2 ( ) COND ( c != null ) && ( c . METHOD_3 ( VAR_1 ) ) TYPE android.content.Intent NAME VAR_5 INIT = METHOD_4 ( c , VAR_2 , VAR_3 )  METHOD_5 ( VAR_5 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.Object NAME VAR_5 NAME VAR_1  VAR_7 . METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , java.lang.String.format ( VAR_4 , VAR_5 ) )  break ;  VAR_7 . METHOD_3 ( STRING_1 , VAR_2 , VAR_3 , java.lang.String.format ( VAR_4 , VAR_5 ) )  break ;  VAR_7 . error ( null , STRING_1 , VAR_2 , VAR_3 , java.lang.String.format ( VAR_4 , VAR_5 ) )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_3 )  assertEquals ( VAR_4 , VAR_5 . METHOD_4 ( VAR_6 ) . METHOD_5 ( ) )  VAR_7 . METHOD_6 ( VAR_6 )  TYPE_2 . METHOD_7 ( VAR_8 )  org.mockito.Mockito.verify ( VAR_3 . METHOD_8 ( ) , TYPE_3 . METHOD_9 ( ) ) . METHOD_6 ( org.mockito.Matchers.eq ( VAR_6 ) , org.mockito.Matchers . METHOD_10 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.io.File NAME path INIT = METHOD_3 ( VAR_1 . METHOD_4 ( ) ) COND ( ! ( path . METHOD_1 ( ) ) ) || ( path . METHOD_5 ( ) )  throw new TYPE_2 ( VAR_1 . METHOD_6 ( ) ) ;  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE byte[] NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) TYPE byte[] NAME VAR_4 INIT = VAR_2 . METHOD_3 ( )  VAR_5 . METHOD_4 ( VAR_3 )  VAR_6 . METHOD_4 ( VAR_4 ) COND VAR_1  METHOD_5 ( )  METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( this . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( true , null )  VAR_2 = this . VAR_1  VAR_3 . METHOD_5 ( VAR_4 , new java.lang.String [ ] { } )  new TYPE_1 ( TAG ) . start ( )  METHOD_6 ( )  METHOD_7 ( STRING_1 )  TYPE_2 . METHOD_8 ( 100 )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME context TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( VAR_3 )  VAR_2 . METHOD_2 ( new java.lang.String [ ] { context . METHOD_3 ( VAR_4 ) } )  return new TYPE_1 ( new TYPE_5 [ ] { VAR_2 , VAR_1 } ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_1 COND ( ( VAR_3 ) == ( VAR_4 ) ) || ( ( VAR_3 ) == ( VAR_5 ) )  return 0 ; COND ( ( VAR_3 ) == ( VAR_6 ) ) || ( ( VAR_3 ) == ( VAR_7 ) )  return 0 ;  throw VAR_2 . METHOD_2 ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == null  return false ; TYPE boolean NAME VAR_3 INIT = false TYPE TYPE_1 NAME VAR_4 IN VAR_2 . METHOD_3 ( ) COND VAR_4 . METHOD_4 ( ) . equals ( VAR_1 . METHOD_4 ( ) )  VAR_3 = true  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.renderscript.Allocation NAME VAR_1 INIT = android.renderscript.Allocation.createSized ( mRS , TYPE_1 . METHOD_2 ( mRS ) , android.renderscript.cts.INPUTSIZE )  n = new int [ ( INPUTSIZE ) * 2 ]  TYPE_2 . METHOD_3 ( INT_1 , INT_2 , 1 , n )  VAR_1 . METHOD_4 ( n )  VAR_2 . METHOD_5 ( VAR_1 )  METHOD_6 ( INT_1 , 16 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . i ( VAR_1 , STRING_1 ) COND VAR_2 . METHOD_2 ( )  VAR_3 . METHOD_3 ( VAR_4 , VAR_5 ) COND ( VAR_6 ) == ( VAR_7 )  TYPE_1 . i ( VAR_1 , ( STRING_2 + STRING_3 ) )  VAR_3 . METHOD_4 ( VAR_8 )  VAR_3 . METHOD_4 ( VAR_9 )  VAR_2 . METHOD_5 ( VAR_10 )  TYPE_1 . i ( VAR_1 , STRING_4 )  VAR_2 . METHOD_6 ( )
MODIFIER MODIFIER RETURN java.util.List<TYPE_1<TYPE_2>> NAME METHOD_1 TYPE java.util.List<TYPE_1<TYPE_2>> NAME VAR_1 INIT = super . METHOD_1 ( )  < TYPE_2 > VAR_2 = TYPE_3 . not ( new TYPE_4 ( VAR_3 class ) )  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_2 ( METHOD_3 ( ) ) COND ! ( VAR_4 )  < TYPE_2 > VAR_5 = TYPE_3 . not ( new TYPE_4 ( VAR_6 class ) )  VAR_1 . METHOD_2 ( VAR_5 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( ) . equals ( VAR_3 ) )  context . METHOD_4 ( VAR_4 , VAR_2 , context . METHOD_5 ( VAR_2 ) , STRING_1 , null )
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 )  sb.append ( METHOD_1 ( ) . getName ( ) )  sb.append ( CHAR_1 )  sb.append ( VAR_1 . METHOD_2 ( ) )  sb.append ( CHAR_2 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x )  METHOD_3 ( new TYPE_4 ( info , METHOD_4 ( info , VAR_2 ) ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME i INIT = ( VAR_1 . size ( ) ) - 1 COND i >= 0  i --  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + i ) + STRING_2 ) + ( VAR_1 . get ( i ) . VAR_3 ) ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = METHOD_2 ( VAR_1 , VAR_2 ) COND VAR_3 == null  android.util.Log.d ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) )  return - 1 ; TYPE TYPE_3 NAME VAR_4 INIT = METHOD_3 ( VAR_3 ) COND VAR_4 != null  android.util.Log.d ( TYPE_2 . TAG , ( ( ( STRING_3 + VAR_1 ) + STRING_2 ) + VAR_2 ) )  METHOD_4 ( VAR_4 )  return 1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 INIT = new TYPE_1 [ 0 ] TYPE TYPE_2 NAME request INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( new TYPE_4 ( ) . METHOD_4 ( VAR_2 ) ) . build ( ) TYPE TYPE_5 NAME result INIT = METHOD_5 ( VAR_3 , request )  TYPE_6 . METHOD_6 ( result . METHOD_7 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  VAR_3 = VAR_4  VAR_5 = VAR_6  VAR_7 = VAR_8  VAR_9 = VAR_10  VAR_11 = VAR_12  VAR_13 = VAR_14  VAR_15 = VAR_16  VAR_17 = VAR_18  VAR_19 = VAR_20  VAR_21 = VAR_22  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.os.Message NAME VAR_1 NAME VAR_2  VAR_4 . METHOD_2 ( this )  transitionTo ( VAR_6 )  break ;  METHOD_3 ( )  transitionTo ( VAR_8 )  break ;  VAR_10 . METHOD_4 ( VAR_11 , this )  VAR_10 . METHOD_5 ( VAR_11 , this ) . METHOD_6 ( )  transitionTo ( VAR_8 )  break ;  return VAR_12 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ; TYPE TYPE_4 NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_2 ) COND VAR_3 == null  throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ;  return TYPE_5 . METHOD_1 ( VAR_1 , VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME log COND METHOD_2 ( log , false ) MODIFIER public RETURN void NAME run  METHOD_4 ( VAR_2 , ( STRING_1 + log ) )  METHOD_3 ( VAR_1 , new java.lang.Runnable ( ) { public void run ( ) { METHOD_4 ( VAR_2 , ( STRING_1 + log ) ) ; } } ) COND ( VAR_3 ) != null  VAR_3 . METHOD_5 ( STRING_2 , log )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . d ( this , STRING_1 , VAR_1 ) COND TYPE_3 . equals ( VAR_2 , VAR_1 )  VAR_3 . METHOD_2 ( VAR_4 , VAR_5 ) TYPE TYPE_1 NAME VAR_6 INIT = null COND ( VAR_5 ) != null  VAR_6 = VAR_7 . METHOD_3 ( )  METHOD_4 ( VAR_6 )  METHOD_5 ( ) COND ( VAR_5 ) != null  METHOD_6 ( VAR_5 )  VAR_5 = null
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME i TYPE byte[] NAME VAR_1 TYPE int NAME offset  VAR_1 [ offset ] = ( ( byte ) ( i > > 16 ) )  VAR_1 [ ( offset + 1 ) ] = ( ( byte ) ( i > > 8 ) )  VAR_1 [ ( offset + 2 ) ] = ( ( byte ) ( i ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 COND METHOD_2 ( )  METHOD_3 ( )  server = METHOD_4 ( VAR_1 , VAR_2 )  out = new TYPE_2 ( new TYPE_3 ( server . METHOD_5 ( ) ) , true , VAR_3 ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( ( ( VAR_3 ) + STRING_1 ) ) ;  in = new TYPE_6 ( server . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 COND new TYPE_5 ( VAR_3 ) . METHOD_2 ( true , void . class , STRING_1 , java.lang.String [ ] . class )  return new TYPE_6 ( VAR_1 , VAR_3 ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( ) ) ) . thenReturn ( false )  TYPE_1 . when ( VAR_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_3 class ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( ) )  VAR_4 . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_5 , VAR_6 , VAR_7 ) , null , null , false , true , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME res INIT = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_1 , STRING_1 } TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_3 ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( STRING_4 ) TYPE int NAME VAR_3 INIT = 0 COND VAR_2 . METHOD_4 ( )  VAR_3 ++  assertEquals ( res [ VAR_3 ] , VAR_2 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.ArrayList NAME VAR_1 INIT = new java.util.ArrayList ( 5 )  assertEquals ( STRING_1 , 0 , VAR_1 . size ( ) )  new java.util.ArrayList ( ( - 10 ) )  fail ( STRING_2 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1  VAR_1 = METHOD_2 ( true , STRING_1 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  METHOD_3 ( VAR_2 , VAR_3 , STRING_2 )  METHOD_3 ( VAR_2 , VAR_4 , STRING_3 )  METHOD_3 ( VAR_2 , VAR_5 , STRING_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Set<java.io.File> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( new java.io.File ( STRING_1 ) ) TYPE java.util.Set<java.io.File> NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( VAR_3 )  VAR_1 . METHOD_4 ( VAR_2 )  assertTrue ( ( STRING_2 + ( VAR_1 . toString ( ) ) ) , VAR_1 . METHOD_5 ( ) )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME value TYPE int NAME VAR_1 COND VAR_2  throw new TYPE_1 ( ) ; TYPE int NAME VAR_3 INIT = INT_1  return ( ( ( value < < ( VAR_1 | INT_2 ) ) + ( value > > ( VAR_1 ^ INT_3 ) ) ) + ( value > > > ( VAR_1 + INT_4 ) ) ) + ( value < < ( VAR_1 - VAR_3 ) ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 )  i ++ COND ( VAR_2 [ i ] ) != ( VAR_3 [ i ] . get ( ) )  VAR_4 . println ( ( ( ( ( ( STRING_1 + i ) + STRING_2 ) + ( VAR_2 [ i ] ) ) + STRING_3 ) + ( VAR_3 [ i ] . get ( ) ) ) )
MODIFIER public final RETURN void NAME verify TYPE TYPE_1 NAME key TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_7 . METHOD_1 ( c . METHOD_2 ( ) ) TYPE TYPE_8 NAME VAR_3 INIT = TYPE_8 . METHOD_3 ( VAR_2 , VAR_1 )  METHOD_4 ( key , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME index TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 COND VAR_4  TYPE_2 . d ( VAR_5 . TAG , ( ( ( ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + index ) + STRING_3 ) + VAR_2 ) + STRING_4 ) + VAR_3 ) ) TYPE TYPE_3 NAME VAR_6 INIT = new TYPE_3 ( mContext , VAR_1 , null )  VAR_6 . set ( VAR_3 )  VAR_7 . METHOD_2 ( VAR_6 , VAR_2 , new TYPE_4 ( VAR_8 , VAR_8 ) )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME element TYPE TYPE_2 NAME VAR_1 INIT = element . METHOD_2 ( ) TYPE int NAME j INIT = 0 COND j < ( VAR_1 . METHOD_3 ( ) )  j ++ TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . item ( j ) COND ( VAR_2 . METHOD_4 ( ) ) == ( VAR_3 )  return VAR_2 . METHOD_5 ( ) . METHOD_6 ( ) ;  return null ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME state TYPE java.lang.String NAME VAR_1  return new TYPE_1 ( state , false , VAR_2 , new TYPE_2 ( VAR_3 ) , null , null , null , null , null , false , false , false , false , false , false , false , 0 , false , false , false , true , VAR_4 , false , VAR_1 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME version TYPE int NAME VAR_4 TYPE int NAME VAR_5 COND ( VAR_6 ) == false  throw new java.lang.RuntimeException ( ( ( VAR_7 . TAG ) + STRING_1 ) ) ;  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , version , VAR_4 , VAR_5 ) ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1  return ( ( ( ( ! ( VAR_1 . METHOD_2 ( STRING_1 ) ) ) && ( ! ( VAR_1 . METHOD_2 ( STRING_2 ) ) ) ) && ( ! ( VAR_1 . METHOD_2 ( STRING_3 ) ) ) ) && ( ! ( VAR_1 . METHOD_2 ( STRING_4 ) ) ) ) && ( ! ( VAR_1 . METHOD_3 ( STRING_5 ) ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME expected TYPE java.lang.String NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( expected . length , VAR_2 . length ) TYPE int NAME i INIT = 0 COND i < ( expected . length )  ++ i  org.junit.Assert.assertEquals ( ( STRING_1 + i ) , expected [ i ] , VAR_2 [ i ] )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.String NAME msg INIT = STRING_1 TYPE TYPE_2 NAME pm INIT = context . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = pm . METHOD_3 ( context . METHOD_4 ( ) , 0 )  msg = STRING_2 COND ( VAR_2 ) != null  msg = VAR_2 TYPE TYPE_4 NAME e  TYPE_5 . d ( VAR_3 . TAG , msg )  return msg ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.lang.String NAME key INIT = ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) + STRING_1 ) + VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . get ( key ) COND VAR_4 == null  VAR_4 = TYPE_6 . METHOD_2 ( new TYPE_7 ( VAR_1 ) , null , VAR_2 , VAR_3 )  TYPE_5 . METHOD_3 ( key , VAR_4 )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE TYPE_1 NAME status COND VAR_2  android.util.Log.v ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( TYPE_2 . METHOD_2 ( status ) ) ) )  VAR_3 . METHOD_3 ( VAR_1 , status . status , true )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 COND ( VAR_1 == ( VAR_4 ) ) && ( VAR_2 >= 0 ) COND VAR_3 == ( VAR_5 ) COND VAR_2 <= ( VAR_6 )  return true ; COND ( VAR_3 < ( VAR_5 ) ) && ( VAR_3 >= ( VAR_7 ) )  return true ;  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1  TYPE_2 . d ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME VAR_1 INIT = null  VAR_1 = TYPE_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( ) . METHOD_5 ( true ) TYPE java.io.IOException NAME e BLOCK BLOCK  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 . getName ( ) , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) , VAR_4 . METHOD_6 ( ) ) COND ( VAR_1 . METHOD_7 ( ) ) == ( VAR_5 ) TYPE TYPE_3 NAME config INIT = new TYPE_3 ( )  VAR_1 . METHOD_8 ( config )  METHOD_9 ( config )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  throw new TYPE_2 ( STRING_1 ) ;  VAR_1 . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 . METHOD_2 ( ) ) TYPE TYPE_3 NAME e  android.util.Log.w ( VAR_5 , STRING_2 )  VAR_1 = null  throw new TYPE_1 ( VAR_6 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_5 , ( STRING_3 + e ) )  throw new TYPE_1 ( VAR_7 ) ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return false ; TYPE TYPE_2 NAME path INIT = TYPE_2 . METHOD_2 ( VAR_2 ) COND path == null  return false ; COND VAR_5 . METHOD_3 ( )  path . METHOD_4 ( )  return false ;  path . METHOD_5 ( VAR_5 . METHOD_6 ( new TYPE_3 ( ) ) )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int[] NAME VAR_1 INIT = new int [ ] { VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 } TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  new TYPE_1 ( ) . METHOD_2 ( VAR_1 [ i ] , STRING_1 )  fail ( ( STRING_2 + ( VAR_1 [ i ] ) ) ) TYPE java.io.IOException NAME expected BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME pkg INIT = super . METHOD_1 ( ) COND pkg == null  pkg = TYPE_2 . METHOD_2 ( null , METHOD_3 ( ) , 0 , null , STRING_1 , null , TYPE_3 . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( ) , METHOD_6 ( ) . METHOD_7 ( ) )  METHOD_8 ( pkg ) TYPE java.lang.Exception NAME e  METHOD_9 ( STRING_2 , e.toString ( ) )  return pkg ;
MODIFIER public static RETURN float NAME METHOD_1 TYPE float NAME a TYPE float NAME b COND a != a  return a ; COND ( ( a == FLOAT_1 ) && ( b == FLOAT_1 ) ) && ( ( TYPE_1 . METHOD_2 ( a ) ) == ( VAR_1 ) )  return b ;  return a >= b ? a : b ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = new TYPE_1 ( VAR_2 , TYPE_2 . METHOD_2 ( ) )  VAR_3 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 )  VAR_6 = TYPE_3 . METHOD_3 ( VAR_7 , VAR_8 )  < TYPE_5 > VAR_9 = TYPE_4 . METHOD_4 ( VAR_10 class )  org.mockito.Mockito.verify ( VAR_2 ) . METHOD_5 ( VAR_9 . METHOD_6 ( ) )  VAR_11 = VAR_9 . METHOD_7 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE double NAME VAR_2  METHOD_2 ( java.lang.String.format ( STRING_1 , VAR_1 ) )  METHOD_2 ( STRING_2 )  METHOD_3 ( )  TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( 10 , VAR_3 ) )  METHOD_6 ( VAR_2 )  METHOD_7 ( )
MODIFIER public RETURN java.util.ArrayList<TYPE_1> NAME METHOD_1  VAR_1 TYPE int NAME VAR_2 INIT = VAR_1 . size ( ) TYPE java.util.ArrayList<TYPE_1> NAME VAR_3 INIT = new java.util.ArrayList < TYPE_1 > ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++  VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( i ) )  return VAR_3 ;
MODIFIER public synchronized RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1  METHOD_2 ( VAR_2 , STRING_1 ) COND VAR_3 . METHOD_3 ( VAR_4 , VAR_5 )  METHOD_4 ( STRING_2 )  return false ;  METHOD_4 ( ( STRING_3 + VAR_1 ) )  VAR_6 = VAR_1 TYPE android.os.Message NAME m INIT = VAR_7 . METHOD_5 ( VAR_8 )  VAR_7 . METHOD_6 ( m )  return true ;
MODIFIER private RETURN int NAME METHOD_1 TYPE java.lang.Class<?> NAME VAR_1 TYPE boolean NAME VAR_2  output . METHOD_2 ( VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_3 ( VAR_1 ) COND VAR_4 . METHOD_4 ( )  METHOD_5 ( VAR_1 , VAR_4 , VAR_2 )  METHOD_6 ( VAR_4 , VAR_2 ) TYPE int NAME VAR_5 INIT = METHOD_7 ( ) COND ! VAR_2  VAR_6 . METHOD_8 ( VAR_1 , VAR_5 )  return VAR_5 ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME item INIT = VAR_2 . get ( VAR_1 ) COND item == null  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;  return item . METHOD_3 ( ) ;
MODIFIER public RETURN java.lang.Integer NAME METHOD_1 TYPE int NAME n INIT = number COND n <= 1  return n ; TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ( n - 1 ) )  VAR_1 . METHOD_2 ( )  return ( new TYPE_1 ( ( n - 2 ) ) . METHOD_1 ( ) ) + ( VAR_1 . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , ( ( VAR_1 . get ( INT_1 ) ) == ( VAR_2 [ INT_1 ] ) ) )  VAR_1 . get ( INT_2 )  fail ( STRING_2 ) TYPE TYPE_1 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  TYPE_2 . d ( this , STRING_1 ) COND ! ( METHOD_2 ( ) ) TYPE int NAME VAR_2 INIT = METHOD_3 ( VAR_1 ) COND VAR_2 != ( VAR_3 )  METHOD_4 ( VAR_2 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME name TYPE TYPE_2 NAME VAR_1  VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_2  throw new TYPE_4 ( STRING_2 ) ; TYPE byte[] NAME VAR_3 INIT = VAR_1 . METHOD_3 ( name )  VAR_3 [ 6 ] &= INT_1  VAR_3 [ 6 ] |= INT_2  VAR_3 [ 8 ] &= INT_3  VAR_3 [ 8 ] |= INT_4  return new TYPE_1 ( VAR_3 ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 NAME VAR_1  return VAR_6 ;  return VAR_11 ;  throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( TYPE_1 . METHOD_2 ( ( VAR_1 & - 1 ) ) ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 )  VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) TYPE TYPE_4 NAME e  throw new TYPE_5 ( e ) ; TYPE TYPE_6 NAME e  throw new TYPE_5 ( e ) ; TYPE TYPE_7 NAME e BLOCK BLOCK TYPE TYPE_8 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( STRING_1 , TYPE_1 . METHOD_2 ( CHAR_1 ) )  assertTrue ( STRING_2 , TYPE_1 . METHOD_2 ( CHAR_2 ) )  assertTrue ( STRING_3 , TYPE_1 . METHOD_2 ( CHAR_3 ) )  assertTrue ( STRING_4 , TYPE_1 . METHOD_2 ( CHAR_4 ) )  assertTrue ( STRING_5 , TYPE_1 . METHOD_2 ( CHAR_5 ) )  assertTrue ( STRING_6 , TYPE_1 . METHOD_2 ( CHAR_6 ) )  assertTrue ( STRING_7 , ( ! ( TYPE_1 . METHOD_2 ( CHAR_7 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( this ) TYPE TYPE_2 NAME context INIT = METHOD_3 ( VAR_1 class )  when ( context . METHOD_4 ( VAR_2 ) ) . thenReturn ( VAR_3 )  METHOD_5 ( ) . when ( VAR_3 ) . METHOD_6 ( METHOD_7 ( ) , METHOD_8 ( ) , METHOD_9 ( VAR_4 . String class ) , VAR_5 . METHOD_10 ( ) , METHOD_9 ( VAR_6 class ) )  VAR_7 = new TYPE_3 ( context , VAR_8 , VAR_9 , VAR_10 , VAR_11 , VAR_12 , VAR_13 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE boolean NAME VAR_1 TYPE int NAME VAR_2 TYPE byte[] NAME VAR_3 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , VAR_1 , VAR_2 , VAR_3 ) ;
MODIFIER protected RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND VAR_1 == 16  VAR_3 = STRING_1  VAR_3 = STRING_2 COND VAR_2 == ( VAR_4 )  return VAR_3 ;  return ( VAR_3 + STRING_3 ) + ( VAR_2 . toString ( ) . METHOD_2 ( VAR_5 ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE TYPE_4 NAME type INIT = VAR_1 . METHOD_4 ( ) TYPE TYPE_5 NAME VAR_3 INIT = TYPE_6 . METHOD_5 ( TYPE_3 . METHOD_6 ( type ) ) TYPE TYPE_7 NAME VAR_4 INIT = TYPE_3 . METHOD_7 ( VAR_1 ) TYPE TYPE_8 NAME VAR_5 INIT = new TYPE_9 ( VAR_3 , VAR_4 , VAR_6 , METHOD_8 ( ) , VAR_2 )  METHOD_9 ( VAR_5 )  METHOD_10 ( VAR_7 , VAR_4 )  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( ) COND ( VAR_2 == null ) || ( ( VAR_2 . METHOD_2 ( ) ) != ( VAR_4 ) ) TYPE TYPE_4 NAME VAR_5 INIT = VAR_6 . METHOD_1 ( VAR_4 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) )  VAR_2 = VAR_5 . METHOD_6 ( VAR_1 )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) COND VAR_2 != null TYPE TYPE_3 NAME data INIT = VAR_2 . METHOD_3 ( VAR_1 ) COND data != null TYPE TYPE_4 NAME VAR_3 INIT = data . METHOD_4 ( )  VAR_3 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) COND ( ( VAR_5 ) != null ) && ( VAR_5 . METHOD_7 ( ) )  VAR_5 = null
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME is TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( name )  VAR_1 . METHOD_2 ( VAR_2 )  METHOD_3 ( is , VAR_1 , name ) TYPE java.lang.Exception NAME e  throw new TYPE_4 ( ( STRING_1 + name ) , e ) ;
MODIFIER public static synchronized RETURN int NAME METHOD_1 TYPE TYPE_1 NAME provider TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = provider . getName ( )  TYPE_2 . METHOD_2 ( ( STRING_1 + VAR_2 ) ) TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_4 INIT = TYPE_3 . METHOD_4 ( VAR_3 , provider , ( VAR_1 - 1 ) ) COND VAR_3 == VAR_4  return - 1 ;  TYPE_2 . METHOD_5 ( )  TYPE_4 . METHOD_6 ( VAR_4 )  return ( VAR_4 . METHOD_7 ( VAR_2 ) ) + 1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME count TYPE float[] NAME d TYPE int NAME VAR_2 INIT = ( VAR_3 . METHOD_2 ( ) ) * count  METHOD_3 ( VAR_1 , count , ( ( d . length ) * 4 ) , VAR_2 )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_4 , count , d , VAR_2 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME is TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( is ) TYPE long NAME VAR_2 INIT = TYPE_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) COND VAR_2 == INT_1  return null ;  return new TYPE_1 ( VAR_2 ) ; TYPE java.lang.Exception NAME e  throw new TYPE_3 ( e ) ;  VAR_1 . METHOD_4 ( )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME s INIT = METHOD_2 ( VAR_1 , 10 )  this . METHOD_3 ( ) TYPE int NAME VAR_2 INIT = TYPE_1 . METHOD_4 ( this . VAR_3 , s )  TYPE_2 . METHOD_5 ( ( VAR_2 > 0 ) ) COND VAR_2 < ( s . length ( ) )  throw METHOD_6 ( VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE android.os.Bundle NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_1 ( ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_3 ( VAR_1 ) COND VAR_2 . METHOD_4 ( )  return null ;  return VAR_2 ; TYPE android.os.RemoteException NAME ex  return null ; TYPE java.lang.NullPointerException NAME ex  return null ;
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int NAME VAR_5 TYPE byte[] NAME d TYPE int NAME VAR_6  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( )  VAR_2 . METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_1 )  assertTrue ( VAR_3 . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device COND ! ( device . METHOD_2 ( VAR_1 ) )  return ; TYPE TYPE_2 NAME VAR_2 INIT = device . METHOD_3 ( ) TYPE TYPE_3 NAME listener IN VAR_3  listener . METHOD_4 ( VAR_2 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( TYPE_4 . TAG , STRING_1 , e )
MODIFIER private final RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME uri TYPE int NAME uid TYPE int NAME VAR_1 COND ( uid == 0 ) || ( ! ( TYPE_2 . METHOD_2 ( ) ) )  return true ; TYPE java.util.HashMap<TYPE_1,TYPE_3> NAME VAR_2 INIT = VAR_3 . get ( uid ) COND VAR_2 == null  return false ; TYPE TYPE_3 NAME VAR_4 INIT = VAR_2 . get ( uri ) COND VAR_4 == null  return false ;  return ( VAR_1 & ( VAR_5 ) ) == VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , null , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_3 . of ( ) )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( STRING_3 )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_4 ) ) . METHOD_4 ( STRING_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE java.lang.String NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = VAR_2  TYPE_3 . METHOD_3 ( VAR_5 , ret )  VAR_3 . METHOD_4 ( rr , VAR_1 , ret )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME c  return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , c . state , VAR_2 , VAR_3 , VAR_4 , VAR_1 . METHOD_3 ( ) , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , false , false , 0 , VAR_10 , VAR_11 , VAR_12 , VAR_13 ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME device COND device != null TYPE java.lang.String NAME msg INIT = STRING_1 + ( device . METHOD_2 ( ) ) TYPE byte[] NAME VAR_2 INIT = TYPE_5 . METHOD_3 ( msg )  TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 ) TYPE TYPE_6 NAME VAR_3 INIT = TYPE_5 . METHOD_5 ( VAR_1 , false ) COND ( VAR_4 ) == false  throw new TYPE_3 ( VAR_5 , true ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 = new TYPE_3 ( new TYPE_4 ( this ) , VAR_4 . value ( ) )  VAR_3 . start ( )  VAR_5 = new TYPE_5 ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  METHOD_2 ( VAR_1 , VAR_2 ) TYPE java.lang.String NAME VAR_6 IN METHOD_3 ( )  METHOD_2 ( VAR_6 , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = TYPE_5 . METHOD_3 ( VAR_2 ) COND ( VAR_1 . error ) == ( VAR_4 )  TYPE_6 . METHOD_4 ( VAR_5 , ret )  VAR_3 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER public RETURN void NAME METHOD_1  assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_3 ( VAR_3 )  assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) )  VAR_1 . METHOD_4 ( VAR_2 , VAR_4 )  assertTrue ( TYPE_1 . equals ( VAR_4 , VAR_1 . get ( VAR_2 ) ) )  assertTrue ( VAR_1 . METHOD_2 ( VAR_2 ) )  METHOD_5 ( VAR_1 . get ( VAR_2 ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME uid TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE boolean NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE java.lang.String NAME VAR_6 TYPE TYPE_1 NAME config INIT = new TYPE_1 ( )  VAR_7 = VAR_2  VAR_8 = VAR_1  VAR_9 = uid  VAR_10 = VAR_3  config . status = ( VAR_4 ) ? VAR_11 : VAR_12 COND VAR_5 != null  VAR_13 = VAR_5  VAR_14 = VAR_6  VAR_15 . METHOD_2 ( VAR_16 )  return config ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME p TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 TYPE byte NAME a TYPE byte NAME VAR_3 TYPE TYPE_3[] NAME VAR_4 COND a == 0  VAR_4 = VAR_5  VAR_4 = VAR_6 TYPE TYPE_5 NAME VAR_7 INIT = TYPE_6 . METHOD_2 ( VAR_3 , VAR_8 ) TYPE byte[] NAME VAR_9 INIT = TYPE_6 . METHOD_3 ( VAR_3 , VAR_1 , VAR_8 , TYPE_5 . METHOD_4 ( VAR_10 ) , VAR_7 , VAR_4 )  return TYPE_7 . METHOD_5 ( p , VAR_9 , VAR_2 ) ;
MODIFIER public RETURN int[] NAME METHOD_1 TYPE int[] NAME src TYPE int[] NAME VAR_1  return new int [ ] { src [ 0 ] , VAR_1 [ 1 ] , VAR_1 [ 2 ] , TYPE_1 . METHOD_2 ( INT_1 , ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int[] NAME a TYPE int NAME VAR_1 TYPE int NAME x INIT = 0 TYPE int NAME i INIT = TYPE_1 . METHOD_2 ( VAR_1 ) COND i < ( a . length )  i ++  x += a [ i ]  return x ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ;  METHOD_7 ( method )  VAR_2 . METHOD_8 ( method )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( VAR_1 . METHOD_2 ( ) , STRING_1 )  assertEquals ( VAR_2 . METHOD_2 ( ) , STRING_2 )  assertEquals ( VAR_3 . METHOD_2 ( ) , STRING_3 )  assertEquals ( VAR_4 . METHOD_2 ( ) , STRING_4 )  assertEquals ( VAR_5 . METHOD_2 ( ) , STRING_5 )
MODIFIER protected RETURN void NAME METHOD_1 COND VAR_1  log ( STRING_1 ) COND ( VAR_2 ) == false  return ; COND ( METHOD_2 ( ) ) == false  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_3 )  METHOD_5 ( VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = TYPE_4 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) TYPE TYPE_5 NAME VAR_3 INIT = TYPE_5 . METHOD_1 ( TYPE_6 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) , VAR_2 , VAR_1 . METHOD_5 ( ) )  return new TYPE_1 ( TYPE_6 . METHOD_6 ( VAR_2 . METHOD_4 ( ) , VAR_3 . METHOD_4 ( ) , null ) ) ; TYPE java.lang.Exception NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == null  return VAR_3 ;  return new java.lang.StringBuilder ( ) . append ( ( ( METHOD_3 ( ) ) != null ? METHOD_3 ( ) . print ( VAR_1 ) : STRING_1 ) ) . append ( STRING_2 ) . append ( VAR_2 . METHOD_4 ( ) ) . append ( STRING_2 ) . append ( VAR_2 . METHOD_5 ( ) ) . toString ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) COND ( VAR_3 ) && ( VAR_2 != ( VAR_4 ) )  return VAR_5 ; COND ( VAR_6 . METHOD_3 ( ) ) && ( ( VAR_2 . METHOD_4 ( VAR_7 ) ) < 0 )  VAR_2 = VAR_8 COND ( VAR_6 . METHOD_5 ( ) ) && ( VAR_2 == ( VAR_9 ) )  VAR_2 = VAR_5  return VAR_2 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME m INIT = VAR_2 . METHOD_2 ( VAR_1 ) COND m . METHOD_3 ( ) TYPE java.lang.String NAME v INIT = m . METHOD_4 ( 1 ) TYPE int NAME VAR_3 INIT = - 1  VAR_3 = java.lang.Integer.parseInt ( v ) TYPE TYPE_3 NAME e  return null ; TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_3 )  return VAR_4 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME count TYPE byte[] NAME d TYPE int NAME VAR_2 INIT = ( VAR_3 . METHOD_2 ( ) ) * count  METHOD_3 ( VAR_1 , count , d . length , VAR_2 )  mRS . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_4 , count , d , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = java.util.HashMap . METHOD_2 ( VAR_1 ) TYPE float NAME VAR_3 INIT = VAR_2 * ( VAR_4 ) COND VAR_3 > ( ( VAR_5 ) + 1 )  VAR_3 = ( VAR_5 ) + 1  VAR_6 = ( ( int ) ( VAR_3 ) )  VAR_7 = new TYPE_1 [ VAR_2 ]  METHOD_3 ( VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String NAME VAR_5 TYPE TYPE_1 NAME VAR_6 TYPE TYPE_1 NAME VAR_7 TYPE java.lang.String NAME VAR_8 TYPE TYPE_2 NAME VAR_9 INIT = new TYPE_2 ( VAR_8 , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 )  VAR_9 . METHOD_2 ( ) TYPE java.io.IOException NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE TYPE_3 NAME fd INIT = VAR_1 . METHOD_2 ( path , VAR_2 , 0 ) TYPE long NAME size INIT = VAR_1 . METHOD_3 ( fd ) . VAR_3 TYPE long NAME address INIT = VAR_1 . METHOD_4 ( INT_1 , size , VAR_4 , VAR_5 , fd , 0 )  VAR_1 . METHOD_5 ( fd )  return new TYPE_1 ( address , size ) ;
MODIFIER private static RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.util.Set<java.lang.String> NAME VAR_4 INIT = new TYPE_4 < java.lang.String > ( ) COND VAR_2 . METHOD_2 ( VAR_3 )  VAR_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( VAR_1 , VAR_5 ) )  VAR_4 . METHOD_3 ( TYPE_5 . METHOD_5 ( VAR_2 . METHOD_6 ( VAR_3 ) ) )  return VAR_4 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 ) COND VAR_1 > 0  VAR_4 = VAR_5 COND VAR_1 == 0  VAR_4 = VAR_6  VAR_4 = VAR_7 TYPE android.os.RemoteException NAME e BLOCK BLOCK
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( STRING_1 ) COND VAR_4 != null  VAR_3 . METHOD_4 ( VAR_4 )  VAR_3 . METHOD_5 ( null ) TYPE TYPE_5 NAME VAR_5 INIT = TYPE_5 . METHOD_6 ( VAR_2 )  VAR_5 . METHOD_7 ( VAR_3 , STRING_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false  VAR_3 = VAR_1 COND ! ( VAR_4 )  METHOD_2 ( ) COND VAR_5  TYPE_1 . d ( VAR_6 , ( STRING_1 + VAR_1 ) )  VAR_7 . METHOD_3 ( ) . METHOD_4 ( this ) COND ( VAR_8 ) != null  VAR_2 = VAR_8 . METHOD_5 ( this )  VAR_9 = null  METHOD_6 ( )  METHOD_7 ( )  return VAR_2 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 COND ( VAR_2 != null ) && ( ( VAR_4 ) != ( VAR_5 ) )  throw new TYPE_4 ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) . getName ( ) ) ) ) ;  METHOD_3 ( VAR_1 , key )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME r TYPE int NAME VAR_2 TYPE int NAME b  TYPE_1 . METHOD_2 ( VAR_1 , ( ( ( - INT_1 | ( r < < 16 ) ) | ( ( VAR_2 & INT_2 ) < < 8 ) ) | ( b & INT_2 ) ) , VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME e COND ( ! ( e . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) ) && ( ! ( e . METHOD_2 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ) )  throw new TYPE_4 ( STRING_1 ) ; TYPE int NAME id INIT = VAR_1 . METHOD_5 ( 5 , e . METHOD_6 ( VAR_1 ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( id , VAR_1 )  VAR_2 . METHOD_7 ( FLOAT_1 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( ) . build ( )  VAR_2 . METHOD_2 ( STRING_1 , VAR_3 , TYPE_3 . METHOD_3 ( VAR_4 ) )  VAR_2 . METHOD_2 ( STRING_2 , VAR_5 , TYPE_3 . METHOD_3 ( VAR_6 ) )  VAR_2 . METHOD_2 ( STRING_3 , 0 , TYPE_3 . METHOD_3 ( VAR_7 ) )  VAR_2 . METHOD_2 ( STRING_4 , false , TYPE_3 . METHOD_3 ( VAR_8 ) )  VAR_2 . METHOD_2 ( STRING_5 , false , TYPE_3 . METHOD_3 ( VAR_9 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME expected TYPE java.lang.String NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  assertEquals ( expected . length , VAR_2 . length ) TYPE int NAME i INIT = 0 COND i < ( expected . length )  ++ i  assertEquals ( ( STRING_1 + i ) , expected [ i ] , VAR_2 [ i ] )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = METHOD_2 ( STRING_1 )  s = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 , true )  assertTrue ( STRING_2 , ( ( s . METHOD_5 ( ) ) == VAR_1 ) )  s = new TYPE_1 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 , false )
MODIFIER public final RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( 100 ) TYPE boolean NAME VAR_1 INIT = true  sb.append ( STRING_1 ) TYPE TYPE_2 NAME i IN VAR_2 COND VAR_1  VAR_1 = false  sb.append ( STRING_2 )  sb.append ( i . METHOD_1 ( ) )  sb.append ( STRING_3 )  return sb . toString ( ) ;
MODIFIER protected RETURN com.android.jack.ir.ast.JDefinedClassOrInterface NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_3 IN VAR_4  return VAR_3 . METHOD_1 ( this , VAR_1 ) ; TYPE TYPE_3 NAME e BLOCK BLOCK  throw new TYPE_4 ( this , VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ;  return new TYPE_3 ( VAR_2 , this . METHOD_2 ( ) , this . METHOD_3 ( ) , this . METHOD_4 ( ) , this . METHOD_5 ( ) , offset , true ) ;
MODIFIER public RETURN void NAME METHOD_1  when ( VAR_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) ) ) . thenReturn ( null )  VAR_2 . METHOD_5 ( false ) TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_6 ( )  VAR_2 . METHOD_7 ( VAR_4 ) TYPE int NAME VAR_5 INIT = VAR_2 . METHOD_6 ( )  assertEquals ( ( VAR_3 * 2 ) , VAR_5 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( METHOD_2 ( VAR_1 ) ) == ( VAR_3 )  return ; TYPE java.lang.String NAME msg INIT = ( ( ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( TYPE_1 . METHOD_3 ( ) ) ) + STRING_3 ) + ( TYPE_1 . METHOD_4 ( ) ) ) + STRING_4 ) + VAR_1  android.util.Log.w ( com.android.server.am.ActivityManagerService.TAG , msg )  throw new TYPE_2 ( msg ) ;
MODIFIER private RETURN int NAME METHOD_1 NAME VAR_1  return VAR_3 ;  return VAR_8 ;  return VAR_13 ;  return VAR_15 ;  return VAR_17 ;  return VAR_19 ;  return VAR_21 ;  return VAR_22 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( STRING_1 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_2 ( STRING_2 )  assertEquals ( VAR_3 . METHOD_2 ( ) . size ( ) , 0 )  VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , VAR_2 ) )  assertEquals ( VAR_3 . METHOD_2 ( ) . size ( ) , 2 )  VAR_3 . METHOD_5 ( TYPE_3 . METHOD_4 ( VAR_1 , VAR_2 ) )  assertEquals ( VAR_3 . METHOD_2 ( ) . size ( ) , 0 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( true ) COND ! ( VAR_1 . METHOD_2 ( true , false ) ) BLOCK BLOCK  assertFalse ( VAR_1 . get ( ) ) COND ! ( VAR_1 . METHOD_2 ( false , false ) ) BLOCK BLOCK  assertFalse ( VAR_1 . get ( ) ) COND ! ( VAR_1 . METHOD_2 ( false , true ) ) BLOCK BLOCK  assertTrue ( VAR_1 . get ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , false ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_2 , false )  assertEquals ( VAR_1 , VAR_3 )  VAR_3 = new TYPE_1 ( VAR_2 , true )  assertFalse ( VAR_1 . equals ( VAR_3 ) )  VAR_3 = new TYPE_1 ( VAR_4 , false )  assertFalse ( VAR_1 . equals ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  VAR_1 = null  VAR_2 . METHOD_2 ( )  VAR_2 = null TYPE java.io.IOException NAME e  android.util.Log.e ( VAR_3 . TAG , ( STRING_1 + ( e.toString ( ) ) ) )  VAR_4 . METHOD_3 ( VAR_5 ) . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_1 )  args . METHOD_2 ( STRING_2 , VAR_2 )  TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_3 ) . METHOD_5 ( VAR_1 , VAR_4 , true )  TYPE_4 . METHOD_6 ( VAR_3 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) == null COND ! ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) )  throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( VAR_2 ) ) ) ; COND ( VAR_2 . METHOD_4 ( 0 ) ) == CHAR_1  VAR_1 = VAR_2  VAR_1 = VAR_2 . METHOD_5 ( 1 , ( ( VAR_2 . length ( ) ) - 1 ) )  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( ) COND VAR_4  VAR_3 . METHOD_4 ( VAR_1 , false )  VAR_3 . METHOD_4 ( VAR_1 ) TYPE java.lang.Throwable NAME e  throw TYPE_3 . METHOD_5 ( e ) ;  VAR_2 . METHOD_6 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( this )  VAR_2 . METHOD_4 ( this ) COND ( VAR_3 ) != null  VAR_1 . METHOD_5 ( VAR_3 )  VAR_1 . METHOD_5 ( VAR_4 ) COND ( VAR_5 ) != null  VAR_1 . METHOD_5 ( VAR_5 )  VAR_6 . METHOD_6 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 NAME VAR_1  VAR_3 . METHOD_2 ( VAR_4 )  VAR_3 . METHOD_3 ( true )  break ;  VAR_3 . METHOD_2 ( VAR_6 )  VAR_3 . METHOD_3 ( true )  break ;  VAR_3 . METHOD_2 ( VAR_8 )  VAR_3 . METHOD_3 ( true )  break ;  VAR_3 . METHOD_2 ( null )  VAR_3 . METHOD_3 ( false )  break ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  TYPE_1 . METHOD_2 ( this )  VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 class )  TYPE_2 . METHOD_4 ( VAR_2 class )  TYPE_2 . METHOD_5 ( VAR_2 class , VAR_3 )  TYPE_3 . when ( mContext . METHOD_6 ( VAR_4 ) ) . thenReturn ( VAR_5 )  TYPE_3 . when ( mContext . METHOD_6 ( VAR_6 ) ) . thenReturn ( VAR_7 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  return false ; COND ( VAR_1 . METHOD_2 ( ) . length ( ) ) == 0  return false ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  return ( VAR_2 . METHOD_3 ( ) ) == ( VAR_3 ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 IN TYPE_3 . METHOD_2 ( ) TYPE TYPE_1 NAME project INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_4 NAME state INIT = TYPE_5 . METHOD_4 ( project ) COND state . METHOD_5 ( ) TYPE TYPE_6 NAME VAR_2 INIT = TYPE_6 . get ( project ) COND VAR_2 . METHOD_6 ( ) . equals ( STRING_1 )  return project ;  return null ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME a TYPE int NAME b TYPE int NAME c TYPE int NAME d TYPE int NAME e TYPE int NAME f TYPE int[] NAME values INIT = new int [ ] { a , b , c , d , e , f }  VAR_1 . println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) )  return a > b ? a : b ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  ++ i TYPE java.lang.Integer NAME VAR_3 INIT = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( VAR_3 )  assertTrue ( VAR_1 . METHOD_3 ( VAR_3 ) )  assertEquals ( 0 , VAR_1 . METHOD_4 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.lang.Object NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND context . METHOD_2 ( VAR_2 ) TYPE boolean NAME VAR_4 INIT = context . METHOD_3 ( ) COND VAR_4 TYPE int NAME VAR_5 INIT = METHOD_4 ( context , VAR_1 ) COND ( VAR_5 >= 0 ) && ( context . METHOD_5 ( VAR_5 , VAR_2 ) )  return ;  context . METHOD_1 ( VAR_2 , METHOD_6 ( context , VAR_1 ) , VAR_3 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME count COND count < 0  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; TYPE int NAME VAR_1 INIT = ( VAR_2 ) + count COND VAR_3  METHOD_2 ( VAR_1 ) COND VAR_1 > ( data . length )  TYPE_1 . METHOD_3 ( )  return ;  TYPE_2 . METHOD_4 ( data , VAR_2 , VAR_1 , ( ( byte ) ( 0 ) ) )  VAR_2 = VAR_1
MODIFIER static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME context COND ! ( TYPE_4 . get ( context ) . METHOD_2 ( VAR_1 , false ) )  return TYPE_1 . METHOD_3 ( ) ; TYPE java.lang.String NAME VAR_2 INIT = TYPE_5 . METHOD_4 ( context ) . METHOD_5 ( )  return TYPE_6 . METHOD_6 ( VAR_2 ) ? TYPE_1 . of ( TYPE_6 . get ( VAR_2 ) ) : TYPE_1 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 . METHOD_2 ( VAR_2 )  VAR_3 . METHOD_3 ( VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = ( ( TYPE_1 ) ( VAR_6 . METHOD_4 ( ) ) )  VAR_5 . flags &= ~ ( VAR_7 )  VAR_8 . METHOD_5 ( VAR_6 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) , null , 0 )  VAR_1 . METHOD_4 ( true )  assertTrue ( STRING_1 , VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_4 ( false )  assertFalse ( STRING_2 , VAR_1 . METHOD_5 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE short NAME VAR_1 TYPE short NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Exception NAME VAR_4  VAR_5 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) TYPE byte[] NAME error INIT = new byte [ 2 ]  error [ 0 ] = ( ( byte ) ( VAR_1 ) )  error [ 1 ] = ( ( byte ) ( VAR_2 ) )  METHOD_3 ( VAR_6 , error , 0 , 2 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE long NAME i TYPE TYPE_1 NAME output  output . METHOD_2 ( ( ( int ) ( i > > INT_1 ) ) )  output . METHOD_2 ( ( ( int ) ( i > > 16 ) ) )  output . METHOD_2 ( ( ( int ) ( i > > 8 ) ) )  output . METHOD_2 ( ( ( int ) ( i ) ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( )  return ( ( ( ( ( VAR_1 == 0 ? STRING_1 : ( TYPE_2 . toString ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 instanceof java.lang.Class ? TYPE_3 . METHOD_4 ( ( ( java.lang.Class ) ( VAR_2 ) ) ) : VAR_2 . toString ( ) ) ) + STRING_2 ) + ( TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ) ) + STRING_3 ) + ( getName ( ) ) ;
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( method )  VAR_2 . METHOD_5 ( method )  new TYPE_2 ( ) . METHOD_5 ( method )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME element TYPE java.lang.String NAME VAR_1 INIT = element . METHOD_2 ( VAR_2 , VAR_3 ) COND ( VAR_1 != null ) && ( ! ( VAR_1 . METHOD_3 ( ) ) )  return TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE TYPE_1 NAME VAR_4 IN TYPE_3 . METHOD_5 ( element ) COND VAR_4 . METHOD_6 ( ) . equals ( VAR_5 )  return true ;  return false ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1  this COND ( VAR_1 ) == null  VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class . METHOD_3 ( VAR_3 ) ) TYPE TYPE_3 NAME e  VAR_4 . error ( e , null )  VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) TYPE java.lang.Exception NAME e  VAR_4 . error ( null , STRING_1 )  VAR_1 = new java.util.ArrayList < TYPE_1 > ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_3 ( org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers . METHOD_4 ( int . class ) )  assertEquals ( VAR_2 , true )
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME format TYPE byte[] NAME VAR_3  VAR_4 COND ( VAR_5 ) == null  throw new TYPE_1 ( STRING_1 ) ;  VAR_5 . METHOD_1 ( VAR_1 , VAR_2 , format , VAR_3 ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_6 , ( STRING_2 + ( e.getMessage ( ) ) ) )  METHOD_2 ( VAR_1 , VAR_2 , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  VAR_2 = null  VAR_1 = null  VAR_3 = null  VAR_4 = null  VAR_5 = null  VAR_6 = null  VAR_7 . METHOD_3 ( )  VAR_8 = null  super . METHOD_1 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND METHOD_2 ( ) . METHOD_3 ( )  com.android.tradefed.log.LogUtil.CLog.i ( STRING_1 )  METHOD_4 ( STRING_2 )  METHOD_4 ( java.lang.String.format ( STRING_3 , VAR_2 ) )  METHOD_4 ( STRING_4 )  return ; TYPE TYPE_2 NAME VAR_3 MODIFIER public RETURN boolean NAME run  METHOD_2 ( ) . METHOD_5 ( VAR_1 )  return true ; INIT = new TYPE_2 ( ) { public boolean run ( ) throws TYPE_3 , TYPE_4 , java.io.IOException { METHOD_2 ( ) . METHOD_5 ( VAR_1 ) ; return true ; } }  METHOD_6 ( STRING_5 , VAR_3 , VAR_4 )
MODIFIER public synchronized RETURN long NAME METHOD_1 TYPE long NAME n COND VAR_1  return 0 ; COND ( in ) instanceof TYPE_1  n = in . METHOD_1 ( n ) TYPE long NAME VAR_2 INIT = ( n > ( ( expected ) - ( count ) ) ) ? ( expected ) - ( count ) : n  n = in . METHOD_1 ( VAR_2 )  METHOD_2 ( n )  return n ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME line COND ( VAR_3 ) != null TYPE TYPE_1 NAME VAR_4 IN VAR_3 COND VAR_4 . METHOD_1 ( VAR_1 , VAR_2 , line )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME c INIT = TYPE_1 . METHOD_2 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_3 ( c )  TYPE_1 . METHOD_4 ( s )  fail ( ) TYPE TYPE_2 NAME expected BLOCK BLOCK  TYPE_1 . METHOD_5 ( s )  TYPE_1 . METHOD_6 ( c )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2  METHOD_2 ( )  VAR_3  ( VAR_4 ) ++  VAR_3 . METHOD_3 ( new TYPE_2 ( VAR_2 , VAR_1 ) )  VAR_5 . METHOD_4 ( ) TYPE int NAME uid INIT = TYPE_3 . METHOD_5 ( ) TYPE TYPE_4 NAME VAR_6 INIT = TYPE_3 . METHOD_6 ( )  VAR_7 . METHOD_7 ( uid ) TYPE android.os.RemoteException NAME e BLOCK BLOCK  TYPE_3 . METHOD_8 ( VAR_6 )
MODIFIER protected RETURN void NAME METHOD_1  VAR_1 = VAR_2 . METHOD_2 ( 0 , STRING_1 , STRING_2 , null , null )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_4 ( VAR_3 , 0 )  VAR_1 . METHOD_5 ( VAR_4 , STRING_3 , STRING_1 , STRING_2 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 COND ! ( METHOD_2 ( VAR_1 ) )  return VAR_2 < TYPE_2 > of ( ) . METHOD_1 ( ) ; TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = new java.util.ArrayList < TYPE_2 > ( )  METHOD_3 ( METHOD_4 ( VAR_1 ) . METHOD_5 ( ) , VAR_1 , VAR_3 )  return VAR_3 . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . i ( STRING_1 , STRING_2 )  TYPE_2 . METHOD_2 ( mContext )  METHOD_3 ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( ) )  METHOD_6 ( VAR_1 . METHOD_7 ( ) , VAR_1 . METHOD_8 ( ) , VAR_1 . METHOD_9 ( ) . METHOD_10 ( ) , VAR_1 . METHOD_11 ( ) )  TYPE_3 . METHOD_12 ( ) . METHOD_13 ( ) . METHOD_1 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE java.util.Set<java.lang.String> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = packageName + CHAR_1 TYPE java.lang.String NAME VAR_4 INIT = VAR_3 . METHOD_2 ( CHAR_1 , CHAR_2 ) TYPE java.lang.String NAME entry IN VAR_5 TYPE java.io.File NAME VAR_6 INIT = new java.io.File ( entry ) COND ( VAR_6 . METHOD_3 ( ) ) && ( ! ( VAR_6 . METHOD_4 ( ) ) )  VAR_7 . METHOD_5 ( VAR_6 , VAR_4 , packageName , VAR_1 , VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME expected TYPE TYPE_1 NAME VAR_1 COND ! ( expected . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( expected ) )  return new TYPE_4 ( VAR_1 . METHOD_4 ( ) , VAR_1 , VAR_2 ) ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND event . METHOD_2 ( ) . equals ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , METHOD_5 ( ) ) COND event . METHOD_2 ( ) . equals ( VAR_3 )  TYPE_2 . METHOD_6 ( VAR_3 . METHOD_7 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 NAME VAR_1  return new TYPE_4 ( this ) ;  return new TYPE_5 ( this , VAR_1 , VAR_2 ) ;  return new TYPE_6 ( this , VAR_1 , VAR_2 ) ;  return new TYPE_7 ( this ) ;  throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE int NAME VAR_5 TYPE java.lang.String NAME key INIT = VAR_2 + VAR_3 TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 . get ( key ) COND VAR_6 == null  return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;  return new TYPE_1 ( VAR_8 , VAR_3 , TYPE_3 . METHOD_2 ( VAR_1 , VAR_8 ) , ( VAR_5 - ( VAR_9 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 , 1 , VAR_2 , 1 ) TYPE byte[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  VAR_3 [ ( ( VAR_3 . length ) - 3 ) ] = CHAR_1 TYPE TYPE_2 NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_3 )  assertEquals ( VAR_5 , VAR_6 . METHOD_4 ( VAR_4 . METHOD_5 ( ) ) )  METHOD_6 ( )  METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.android.jack.ir.ast.JMethod NAME VAR_1  this COND VAR_2  return ; TYPE TYPE_1 NAME node  node = METHOD_2 ( VAR_3 )  node . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME e  throw new TYPE_3 ( METHOD_4 ( VAR_1 ) , e ) ;  VAR_2 = true COND VAR_4  VAR_1 . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 * INT_1 TYPE byte[] NAME VAR_2 INIT = new byte [ INT_2 ] TYPE TYPE_1 NAME in INIT = new TYPE_1 ( new TYPE_2 ( METHOD_2 ( VAR_1 ) ) ) COND ( in . METHOD_3 ( ) ) != null COND ( in . METHOD_4 ( VAR_2 , 0 , VAR_2 . length ) ) != ( - 1 ) BLOCK BLOCK  in . METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 COND ( VAR_1 . METHOD_2 ( ) ) == 1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( STRING_1 )  VAR_2 . start ( )  VAR_3 = new TYPE_2 ( VAR_2 . METHOD_3 ( ) , VAR_4 , VAR_1 , this )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME location COND ! ( VAR_1 . METHOD_2 ( ) )  throw new TYPE_2 ( location ) ; COND ! ( VAR_1 . METHOD_3 ( ) )  throw new TYPE_3 ( ( ( TYPE_4 ) ( location ) ) ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME obj COND ( obj == null ) || ( obj instanceof TYPE_2 )  return ( ( TYPE_1 ) ( obj ) ) ; COND obj instanceof TYPE_3  return new TYPE_1 ( ( ( TYPE_3 ) ( obj ) ) ) ;  throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( obj . METHOD_2 ( ) . getName ( ) ) ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 TYPE boolean NAME VAR_2 TYPE int NAME VAR_3 INIT = VAR_1 . length TYPE TYPE_2<TYPE_3,TYPE_4> NAME e INIT = VAR_4 COND e != ( VAR_5 )  e = VAR_6 COND VAR_2  VAR_7 = ( ( e . key ) == null ) ? 0 : java.util.HashMap . METHOD_2 ( e . key ) TYPE int NAME index INIT = METHOD_3 ( VAR_7 , VAR_3 )  VAR_8 = VAR_1 [ index ]  VAR_1 [ index ] = e
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( org.mockito.Matchers . METHOD_4 ( VAR_3 class ) )  VAR_4 . METHOD_5 ( )  VAR_5 . METHOD_6 ( VAR_6 , VAR_7 )  < TYPE_3 > VAR_8 = TYPE_2 . METHOD_7 ( VAR_3 class )  org.mockito.Mockito.verify ( VAR_2 , TYPE_1 . METHOD_8 ( VAR_6 ) ) . METHOD_3 ( VAR_8 . METHOD_9 ( ) )  TYPE_4 . assertEquals ( VAR_9 , VAR_8 . METHOD_10 ( ) . METHOD_11 ( ) )
MODIFIER public RETURN TYPE_1<TYPE_2,TYPE_3> NAME METHOD_1 TYPE java.util.Map<?extendsTYPE_2,?extendsTYPE_3> NAME VAR_1  VAR_2 . METHOD_2 ( ( ( VAR_2 . size ( ) ) + ( VAR_1 . size ( ) ) ) ) TYPE TYPE_4<?extendsTYPE_2,?extendsTYPE_3> NAME entry IN VAR_1 . METHOD_3 ( )  METHOD_4 ( entry . METHOD_5 ( ) , entry . METHOD_6 ( ) )  return this ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) COND VAR_2 == null TYPE TYPE_4[] NAME VAR_3 INIT = VAR_1 . METHOD_4 ( ) COND ( VAR_3 . length ) > 0  VAR_2 = VAR_3 [ 0 ] COND VAR_2 != null TYPE TYPE_5 NAME VAR_4 INIT = VAR_2 . METHOD_5 ( ) COND VAR_4 != null  return VAR_4 . METHOD_1 ( ) ;  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME value COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , value ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_1  VAR_2 . METHOD_2 ( VAR_3 )  VAR_2 . METHOD_2 ( VAR_4 )  return this ; TYPE TYPE_2 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE long NAME VAR_1 COND VAR_2  return false ; COND ( VAR_3 ) <= 0  return false ; COND ( ( VAR_4 . size ( ) ) > 0 ) && ( ( VAR_5 ) > VAR_1 )  return false ; TYPE long NAME VAR_6 INIT = VAR_1 - ( VAR_3 )  return VAR_6 <= ( METHOD_2 ( VAR_1 ) ) ;
MODIFIER protected RETURN com.android.jack.ir.ast.JMethod NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE com.android.jack.ir.ast.JMethod NAME m IN VAR_1 . METHOD_2 ( ) COND ( m . METHOD_3 ( ) . equals ( VAR_2 ) ) && ( m . METHOD_4 ( ) . equals ( VAR_3 ) )  return m ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 , STRING_1 )  return ;  METHOD_4 ( 0 )  METHOD_5 ( VAR_2 , VAR_3 ) TYPE TYPE_2 NAME VAR_4 INIT = METHOD_6 ( VAR_2 , VAR_3 )  METHOD_4 ( 1 ) TYPE TYPE_2 NAME VAR_5 INIT = METHOD_6 ( VAR_2 , VAR_3 )  TYPE_3 . METHOD_7 ( VAR_4 , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3  VAR_4 = ( java.lang.Integer.parseInt ( VAR_3 . METHOD_2 ( VAR_5 ) ) ) == 1  VAR_6 = ( java.lang.Integer.parseInt ( VAR_3 . METHOD_2 ( VAR_7 ) ) ) == 1  VAR_8 = ( java.lang.Integer.parseInt ( VAR_3 . METHOD_2 ( VAR_9 ) ) ) == 1  VAR_10 = ( java.lang.Integer.parseInt ( VAR_3 . METHOD_2 ( VAR_11 ) ) ) == 1
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_3 TYPE boolean NAME VAR_4  return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , name , TYPE_3 . on ( CHAR_1 ) . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) , VAR_4 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME index COND ! ( METHOD_2 ( ) )  throw new TYPE_2 ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = size ( ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++ TYPE TYPE_1 NAME VAR_3 INIT = ( ( TYPE_1 ) ( METHOD_3 ( i ) ) ) COND ( VAR_3 != null ) && ( VAR_3 . METHOD_4 ( VAR_1 , index ) )  return VAR_3 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) ) TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME msg INIT = STRING_2 + STRING_3  super . METHOD_1 ( )  TYPE_2 . METHOD_3 ( msg , VAR_1 )  throw new TYPE_3 ( msg ) ;  METHOD_4 ( new TYPE_4 ( VAR_2 , METHOD_5 ( ) ) )  super . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE int NAME VAR_1 INIT = 5  METHOD_3 ( VAR_1 , false , false )  TYPE_1 . when ( VAR_2 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( ) ) ) . thenReturn ( false ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( )  VAR_4 = VAR_1  VAR_3 . METHOD_6 ( ) . METHOD_7 ( STRING_1 )  assertFalse ( VAR_5 . METHOD_8 ( VAR_3 ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_3> NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5 NAME VAR_4 INIT = VAR_3 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) TYPE int NAME VAR_5 INIT = VAR_1 . METHOD_4 ( VAR_3 ) TYPE int NAME VAR_6 INIT = VAR_1 . METHOD_5 ( VAR_3 )  return TYPE_6 . METHOD_6 ( VAR_4 , VAR_5 , VAR_6 ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3  TYPE_1 . when ( VAR_4 . METHOD_2 ( org.mockito.Matchers . METHOD_3 ( ) , org.mockito.Matchers . METHOD_3 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_3 ( ) ) ) . thenReturn ( VAR_3 ) TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 . METHOD_5 ( VAR_1 , TYPE_3 . METHOD_6 ( VAR_2 ) . METHOD_7 ( ) , VAR_7 , new TYPE_4 ( ) )  return VAR_8 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME service INIT = METHOD_2 ( ) COND service != null  return service . METHOD_1 ( VAR_1 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , STRING_1 , e )  return false ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME uri TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 COND ( ( VAR_5 ) ++ ) > 0  super . METHOD_1 ( uri , VAR_1 , VAR_2 , VAR_3 , VAR_4 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME callback COND callback == null  android.util.Log.w ( VAR_1 . TAG , STRING_1 )  return null ; TYPE android.os.Message NAME msg INIT = VAR_2 . METHOD_2 ( VAR_3 )  msg.obj = callback  VAR_2 . METHOD_3 ( msg )  VAR_4  return VAR_5 ;
MODIFIER protected RETURN boolean NAME METHOD_1  VAR_1 = null COND VAR_2  METHOD_2 ( )  VAR_2 = false COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( ) COND ( VAR_4 ) != null  VAR_4 . METHOD_3 ( ) COND ( VAR_5 ) != null  VAR_5 . METHOD_3 ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND ! ( METHOD_2 ( ) )  TYPE_3 . METHOD_3 ( VAR_3 )  return ;  TYPE_3 . METHOD_4 ( ) . METHOD_1 ( VAR_1 , VAR_2 , mContext . METHOD_5 ( ) , VAR_3 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 )  ++ i  assertEquals ( new TYPE_2 ( i ) , ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) )  METHOD_4 ( VAR_1 . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  assertNotNull ( VAR_1 ) TYPE int NAME VAR_2 INIT = 7  VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_3 ) , VAR_2 )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_5 ( org.mockito.Matchers.eq ( VAR_5 ) , org.mockito.Matchers.eq ( VAR_2 ) , org.mockito.Matchers.eq ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE short NAME VAR_1 INIT = INT_1 TYPE android.os.Bundle NAME args INIT = new android.os.Bundle ( )  args . METHOD_2 ( STRING_1 , VAR_2 )  args . METHOD_2 ( STRING_2 , 0 )  args . METHOD_2 ( STRING_3 , VAR_3 )  TYPE_2 . METHOD_3 ( VAR_1 , TYPE_3 . METHOD_4 ( args ) . toString ( ) )  org.mockito.Mockito.verify ( VAR_4 ) . METHOD_5 ( VAR_1 )  TYPE_4 . METHOD_6 ( VAR_4 )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( method ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 , method )  VAR_3 . METHOD_5 ( method )  VAR_2 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME out INIT = METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( STRING_1 )  VAR_2 . METHOD_4 ( STRING_2 )  out . METHOD_5 ( VAR_2 )  out . METHOD_6 ( ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_1 )  assertEquals ( null , VAR_3 . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  METHOD_3 ( VAR_3 , VAR_1 , VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = METHOD_4 ( VAR_2 )  TYPE_2 . assertNotNull ( VAR_5 )  TYPE_2 . assertFalse ( VAR_5 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( VAR_1 . size ( ) , VAR_5 . METHOD_6 ( ) . size ( ) )  METHOD_7 ( VAR_3 , VAR_5 , VAR_1 , true , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME request TYPE int NAME VAR_2 INIT = ( VAR_1 ) ? + 1 : - 1 NAME request . type  VAR_5 += VAR_2  break ;  VAR_5 += VAR_2  VAR_7 += VAR_2  break ;  break ;  android.util.Log . METHOD_2 ( VAR_10 . TAG , ( STRING_1 + ( request . type ) ) )  break ;
MODIFIER public static RETURN void NAME run  TYPE_1 . METHOD_1 ( VAR_1 class )  java.lang.System.out.println ( STRING_1 ) COND TYPE_2 . METHOD_2 ( )  java.lang.System.out.println ( STRING_2 ) COND TYPE_2 . METHOD_3 ( )  java.lang.System.out.println ( STRING_3 )  TYPE_2 . set ( 0 )  TYPE_2 . set ( 1 )  TYPE_2 . set ( 2 )  TYPE_2 . set ( 4 )  TYPE_2 . set ( 8 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ! ( VAR_3 . METHOD_2 ( ) ) )  METHOD_3 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( VAR_1 ) COND VAR_4 == null  throw new TYPE_2 ( STRING_1 , VAR_5 ) ;  VAR_2 = new TYPE_4 ( VAR_4 ) TYPE android.os.RemoteException NAME e  throw new TYPE_2 ( STRING_1 , e , VAR_6 ) ;  return VAR_2 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.Object NAME expected TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME source INIT = ( ( ( ( ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) + VAR_1 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) + STRING_11  TYPE_1 . METHOD_2 ( expected , source , STRING_12 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 = new TYPE_1 ( STRING_1 , STRING_2 )  java.lang.System.out.println ( ( STRING_3 + VAR_1 ) )  java.lang.System.out.println ( ( STRING_4 + ( VAR_1 . METHOD_2 ( ) ) ) )  VAR_1 = new TYPE_1 ( STRING_5 , STRING_6 )  java.lang.System.out.println ( ( STRING_3 + VAR_1 ) )  java.lang.System.out.println ( ( STRING_4 + ( VAR_1 . METHOD_2 ( ) ) ) ) TYPE TYPE_2 NAME VAR_2  VAR_3 . println ( STRING_7 )
MODIFIER public RETURN boolean NAME METHOD_1 COND ( TYPE_2 . METHOD_2 ( ) ) <= INT_1  return device . METHOD_3 ( new TYPE_3 ( ) . METHOD_4 ( ( STRING_1 + VAR_1 ) ) ) . METHOD_5 ( ) ;  return device . METHOD_3 ( new TYPE_3 ( ) . text ( ( STRING_1 + VAR_1 ) ) ) . METHOD_5 ( ) ;
MODIFIER public RETURN java.lang.Class NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.util.List<java.lang.Throwable> NAME VAR_1 TYPE TYPE_1 NAME element IN VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 COND VAR_3 != null TYPE java.lang.Class NAME VAR_5 INIT = VAR_3 . METHOD_2 ( name , VAR_6 , VAR_1 ) COND VAR_5 != null  return VAR_5 ; COND ( VAR_7 ) != null  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_7 ) )  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE char NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 COND VAR_2 COND VAR_5 . METHOD_2 ( VAR_1 )  VAR_3 = VAR_5 COND VAR_6 . METHOD_2 ( VAR_1 )  VAR_3 = VAR_6 COND VAR_7 . METHOD_2 ( VAR_1 )  VAR_3 = VAR_7 COND VAR_8 . METHOD_2 ( VAR_1 )  VAR_3 = VAR_8  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE float[] NAME VAR_3  assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( VAR_4 ) ) TYPE float[] NAME VAR_5 INIT = ( ( float [ ] ) ( VAR_1 . METHOD_2 ( VAR_6 ) ) ) TYPE int NAME i INIT = 0 COND i < ( VAR_3 . length )  i ++  assertEquals ( VAR_3 [ i ] , VAR_5 [ i ] , FLOAT_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( ) , VAR_2 ) ) ) COND VAR_1 == null  errln ( STRING_2 ) TYPE TYPE_3 NAME ex  METHOD_4 ( ( STRING_3 + ( ex . getMessage ( ) ) ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( STRING_1 , STRING_2 ) , STRING_3 ) ) && ( ! ( TYPE_3 . METHOD_4 ( STRING_4 ) ) )  METHOD_5 ( STRING_5 ) COND TYPE_1 . METHOD_6 ( TYPE_2 . METHOD_3 ( STRING_6 , STRING_2 ) , STRING_7 )  METHOD_5 ( STRING_8 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( ) TYPE java.util.List<TYPE_5> NAME VAR_5 INIT = METHOD_3 ( VAR_1 ) TYPE TYPE_5 NAME VAR_6 INIT = new TYPE_5 ( VAR_2 , new TYPE_6 ( VAR_4 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) , VAR_1 . METHOD_7 ( ) , null , VAR_3 )  VAR_5 . METHOD_8 ( VAR_6 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME service INIT = METHOD_2 ( ) COND service == null  return null ; TYPE TYPE_1 NAME VAR_2 INIT = service . METHOD_1 ( VAR_1 ) COND VAR_2 == null  METHOD_3 ( STRING_1 )  return null ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( METHOD_2 ( VAR_2 , STRING_1 ) )  throw new TYPE_2 ( STRING_2 ) ; TYPE TYPE_3 NAME VAR_3  VAR_4  VAR_3 = METHOD_3 ( VAR_1 ) COND VAR_3 == null  android.util.Log.w ( TYPE_4 . TAG , ( STRING_3 + VAR_1 ) )  return ;  VAR_5 = true
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  VAR_3 = new java.lang.String [ VAR_2 . length ] TYPE int NAME i INIT = 0 COND i < ( VAR_2 . length )  i ++  VAR_3 [ i ] = VAR_2 [ i ] . getName ( )  VAR_4 = METHOD_3 ( VAR_1 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 < 0  throw new TYPE_1 ( this , VAR_1 ) ; TYPE int NAME VAR_2 INIT = ( count ) - VAR_1 COND VAR_2 < 0  throw new TYPE_1 ( this , VAR_1 ) ;  return VAR_1 == 0 ? this : METHOD_2 ( VAR_1 , VAR_2 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) || ( VAR_2 ) COND ! ( VAR_3 . METHOD_2 ( ) )  VAR_3 . METHOD_3 ( ) COND VAR_4 . METHOD_2 ( )  VAR_4 . METHOD_4 ( )  VAR_5 . METHOD_5 ( VAR_6 ) COND ( VAR_7 ) == null COND VAR_8  android.util.Log.v ( com.android.server.am.ActivityManagerService.TAG , STRING_1 ) COND VAR_9  android.util.Log.v ( com.android.server.am.ActivityManagerService.TAG , STRING_2 )  METHOD_6 ( false , true )
MODIFIER protected RETURN java.util.Map<java.lang.String,java.lang.Object> NAME METHOD_1 TYPE java.lang.String NAME packageName TYPE java.util.Map<java.lang.String,java.lang.Object> NAME args TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 , packageName ) TYPE java.lang.String NAME result INIT = METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) )  return TYPE_2 . METHOD_5 ( result ) ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME msg TYPE TYPE_3 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( msg . METHOD_3 ( 0 ) . METHOD_4 ( 0 ) ) TYPE java.lang.Integer NAME VAR_2 INIT = java.lang.Integer . METHOD_2 ( ( ( VAR_1 . value ) - ( VAR_3 . value ) ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_4 ( TYPE_5 . METHOD_5 ( msg . METHOD_6 ( ) , VAR_5 , VAR_6 ) , VAR_2 )  return TYPE_6 . METHOD_7 ( VAR_4 ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( obj == null ) || ( ! ( obj instanceof TYPE_1 ) )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) ) COND ( this ) == VAR_1  return true ;  return ( VAR_2 . equals ( VAR_1 . METHOD_1 ( ) ) ) && ( VAR_3 . equals ( VAR_1 . METHOD_2 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( true , INT_1 )  assertEquals ( STRING_1 , INT_1 , VAR_1 . METHOD_5 ( ) )  VAR_1 . METHOD_4 ( false , 0 )  VAR_1 . METHOD_6 ( )  server . METHOD_6 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND null == ( VAR_2 )  return true ; COND null == ( VAR_3 )  return false ; TYPE TYPE_2 NAME VAR_4 IN VAR_3 COND VAR_4 . METHOD_2 ( VAR_5 )  return true ; COND ! ( VAR_1 . METHOD_3 ( VAR_4 ) )  return false ;  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = this . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = this . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = ( VAR_2 <= VAR_3 ) ? VAR_3 - VAR_2 : 0 TYPE int NAME size INIT = VAR_4 > > 2  return ( ( TYPE_1 ) ( new TYPE_3 ( this , ( - 1 ) , 0 , size , size , VAR_2 , METHOD_4 ( ) ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME res INIT = VAR_3 TYPE int NAME VAR_4 INIT = res . METHOD_2 ( ) . VAR_4  METHOD_3 ( res , VAR_1 , VAR_2 )  TYPE_3 . METHOD_4 ( res , VAR_4 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3<TYPE_4>> NAME VAR_1 TYPE long NAME key  VAR_2 TYPE TYPE_3<TYPE_4> NAME VAR_3 INIT = VAR_1 . get ( key ) COND VAR_3 != null TYPE TYPE_4 NAME entry INIT = VAR_3 . get ( ) COND entry != null  return entry . METHOD_2 ( ) ;  VAR_1 . METHOD_3 ( key )  return null ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( )  METHOD_3 ( ) COND ( VAR_1 ) == null MODIFIER public RETURN void NAME METHOD_4 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.Object NAME arg  METHOD_3 ( )  VAR_1 = new TYPE_1 ( ) { public void METHOD_4 ( TYPE_2 VAR_2 , java.lang.Object arg ) { METHOD_3 ( ) ; } }  VAR_3 . METHOD_5 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 , new TYPE_2 ( ) , VAR_4 , new TYPE_3 ( ) , VAR_5 . METHOD_3 ( ) ) COND ( VAR_6 ) >= ( VAR_7 )  TYPE_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) . METHOD_4 ( )  VAR_4 = new TYPE_2 ( mRS , res , VAR_5 )  VAR_4 . METHOD_5 ( VAR_1 )  VAR_4 . METHOD_6 ( VAR_3 )  VAR_4 . METHOD_7 ( INT_1 )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) )  server . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) )  assertEquals ( 3 , VAR_1 . METHOD_7 ( ) )  VAR_1 . METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 )  return ; COND METHOD_2 ( 1 ) TYPE int NAME VAR_2 INIT = METHOD_3 ( )  METHOD_4 ( VAR_2 ) TYPE int NAME VAR_3 INIT = METHOD_5 ( VAR_4 , VAR_5 , VAR_6 )  METHOD_6 ( VAR_7 , VAR_8 , STRING_1 , VAR_9 )  METHOD_4 ( VAR_3 , VAR_5 )  METHOD_6 ( VAR_7 , VAR_8 , STRING_2 , VAR_9 )  METHOD_7 ( VAR_3 , VAR_5 )  METHOD_6 ( VAR_7 , VAR_8 , STRING_1 , VAR_9 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME s TYPE int NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  TYPE_4 . METHOD_2 ( VAR_2 [ 0 ] , session )  super . METHOD_1 ( VAR_3 , s , VAR_3 , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context  super . METHOD_1 ( context )  METHOD_2 ( )  TYPE_2 . METHOD_1 ( )  TYPE_3 . METHOD_3 ( )  VAR_1 . METHOD_3 ( )  VAR_2 class  VAR_3 = null
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2  org.mockito.Mockito.verify ( VAR_3 , TYPE_1 . METHOD_2 ( VAR_2 ) ) . METHOD_3 ( TYPE_1 . METHOD_4 ( new TYPE_2 ( VAR_1 ) ) )  VAR_4 . METHOD_5 ( ) TYPE TYPE_3 NAME response INIT = VAR_4 . METHOD_6 ( )  assertEquals ( VAR_5 , response . status )  assertEquals ( VAR_1 , VAR_6 . packageName )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File[] NAME VAR_1 TYPE java.io.File[] NAME VAR_2 TYPE java.io.File NAME VAR_3 TYPE boolean NAME VAR_4 TYPE boolean NAME VAR_5 TYPE float NAME VAR_6  TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , ( ( TYPE_2 ) ( null ) ) , ( ( TYPE_3 [ ] ) ( null ) ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 . METHOD_2 ( VAR_2 ) )  return ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( mContext ) TYPE TYPE_2 NAME test IN VAR_4  assertEquals ( ( ( ( STRING_1 + ( VAR_5 ) ) + STRING_2 ) + ( test . address ) ) , VAR_6 , ( METHOD_3 ( test . address ) ? VAR_7 : VAR_3 . METHOD_4 ( test . address , VAR_5 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME device TYPE java.lang.String NAME VAR_1 INIT = device . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_1 ( VAR_1 ) COND VAR_2 != null TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( device ) TYPE boolean NAME result INIT = VAR_4 . METHOD_3 ( VAR_1 , VAR_2 )  VAR_2 . METHOD_4 ( ) COND result  return VAR_4 ; TYPE java.lang.Exception NAME e  android.util.Log.e ( VAR_5 . TAG , STRING_1 , e )  return null ;
MODIFIER private static RETURN byte[] NAME METHOD_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = new byte [ VAR_1 . size ( ) ] TYPE int NAME i INIT = 0 TYPE TYPE_1 NAME b IN VAR_1  VAR_2 [ ( i ++ ) ] = b  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE TYPE_1 NAME VAR_3 IN VAR_1  VAR_4 = ( VAR_5 ) ++ COND VAR_6  android.util.Log.v ( VAR_7 . TAG , ( STRING_1 + ( VAR_3 . METHOD_2 ( ) ) ) )  METHOD_3 ( VAR_3 )  VAR_8 . METHOD_4 ( VAR_3 ) TYPE java.lang.String NAME VAR_9 IN VAR_2  VAR_10 . METHOD_5 ( VAR_9 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = ( METHOD_1 ( ) ) ? VAR_2 . METHOD_2 ( false ) : METHOD_3 ( ) COND android.util.Log . METHOD_4 ( VAR_3 , VAR_4 )  TYPE_2 . log ( ( STRING_1 + VAR_5 ) )  TYPE_2 . log ( ( STRING_2 + VAR_1 ) )  METHOD_5 ( VAR_1 )  this . VAR_6 . METHOD_6 ( ) COND ( VAR_2 ) != null  VAR_2 . METHOD_7 ( VAR_1 )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context  TYPE_2 . METHOD_2 ( VAR_1 ) COND TYPE_3 . METHOD_3 ( context )  return VAR_2 . METHOD_4 ( VAR_3 ) ;  return TYPE_3 . METHOD_5 ( context ) . METHOD_4 ( VAR_3 , false ) ;
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME method TYPE TYPE_1 NAME call TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( null , method , call , 0 )  method . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME name INIT = VAR_1 . METHOD_3 ( )  return name ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME call TYPE TYPE_3 NAME callback TYPE boolean NAME VAR_2  org.mockito.Mockito.verify ( callback ) . METHOD_2 ( call )  org.mockito.Mockito.verify ( call . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ( VAR_2 ? 1 : 0 ) ) ) . METHOD_5 ( )  assertEquals ( call . METHOD_3 ( ) , VAR_1 . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.Class<?> NAME VAR_4 TYPE TYPE_3<java.lang.String> NAME VAR_5 TYPE TYPE_4 NAME VAR_6 TYPE int NAME VAR_7 TYPE boolean NAME VAR_8 COND new TYPE_5 ( VAR_4 ) . METHOD_2 ( true , void . class , STRING_1 , java.lang.String [ ] . class )  return new TYPE_6 ( VAR_1 , VAR_4 ) ;  return null ;
MODIFIER public RETURN int NAME METHOD_1 COND METHOD_2 ( ) TYPE int NAME VAR_1 INIT = METHOD_3 ( ) . METHOD_1 ( ) COND ( VAR_1 & ( VAR_2 ) ) != 0  VAR_1 &= ~ ( ( VAR_2 ) | ( VAR_3 ) )  return ( ( VAR_4 ) | ( VAR_5 ) ) | VAR_1 ; TYPE int NAME VAR_6 INIT = INT_1 TYPE int NAME VAR_7 INIT = TYPE_1 . METHOD_4 ( this , ( ( VAR_8 ) & VAR_6 ) )  return VAR_7 & VAR_6 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE boolean NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) TYPE boolean NAME VAR_4 INIT = ! ( TYPE_4 . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_5 ( ) ) )  VAR_1 . METHOD_6 ( new TYPE_5 ( context , TYPE_6 . METHOD_7 ( context , VAR_2 . METHOD_8 ( ) , TYPE_7 . METHOD_9 ( VAR_2 ) , VAR_3 , VAR_4 ) , VAR_5 , VAR_6 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE java.io.File NAME VAR_3 INIT = java.io.File . METHOD_2 ( STRING_6 , STRING_7 ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_3 ( new TYPE_4 ( VAR_3 ) )  VAR_4 . METHOD_3 ( VAR_1 )  VAR_4 . METHOD_4 ( ) TYPE TYPE_5 NAME VAR_5 INIT = VAR_2 . METHOD_5 ( new TYPE_6 ( VAR_3 ) )  assertNotNull ( VAR_5 )  VAR_3 . METHOD_6 ( )
MODIFIER private synchronized RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE TYPE_1 NAME VAR_1 COND VAR_2  android.util.Log.d ( TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_3 ) ) ) COND ( ( VAR_3 ) == false ) && ( ( VAR_4 . METHOD_1 ( device , VAR_1 ) ) == true )  VAR_3 = true  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Throwable NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_2 )  TYPE_1 . log ( VAR_3 , STRING_1 , VAR_5 , VAR_4 ) COND VAR_3 != null  VAR_6 = true  METHOD_3 ( VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . METHOD_2 ( ) COND VAR_3 != null TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . METHOD_2 ( )  TYPE_2 . assertEquals ( VAR_4 , VAR_3 )  VAR_3 = VAR_2 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_1 ) )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( INT_2 ) ) TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_5 ( VAR_1 , INT_3 , STRING_1 )  METHOD_6 ( result )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  VAR_1 . METHOD_2 ( true , true , true ) COND VAR_3  VAR_1 . METHOD_2 ( false , false , true )  VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( ! ( VAR_4 ) ) )  VAR_1 . METHOD_2 ( true , ( ! ( VAR_4 ) ) , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  METHOD_3 ( VAR_2 , VAR_1 , VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( VAR_2 )  TYPE_2 . assertNotNull ( VAR_4 )  TYPE_2 . assertFalse ( VAR_4 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( VAR_1 . size ( ) , VAR_4 . METHOD_6 ( ) . size ( ) )  METHOD_7 ( VAR_2 , VAR_4 , VAR_1 , false , VAR_3 )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5<TYPE_6> NAME VAR_4 INIT = TYPE_5 . of ( VAR_1 , VAR_2 , VAR_3 ) MODIFIER public RETURN TYPE_2 NAME METHOD_2  return VAR_1 ; MODIFIER public RETURN TYPE_5<TYPE_6> NAME METHOD_3  return VAR_4 ; MODIFIER public RETURN TYPE_5<TYPE_6> NAME METHOD_4  return VAR_4 . METHOD_5 ( 1 , VAR_4 . size ( ) ) ;  return new TYPE_1 ( ) { public TYPE_2 METHOD_2 ( ) { return VAR_1 ; } public TYPE_5 < TYPE_6 > METHOD_3 ( ) { return VAR_4 ; } public TYPE_5 < TYPE_6 > METHOD_4 ( ) { return VAR_4 . METHOD_5 ( 1 , VAR_4 . size ( ) ) ; } } ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( VAR_2 ) COND VAR_4 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( )  VAR_5 . METHOD_4 ( VAR_4 )  VAR_5 . METHOD_5 ( VAR_4 , TYPE_5 . METHOD_6 ( ) )  return VAR_5 ; TYPE java.io.IOException NAME e BLOCK BLOCK  return null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1  TYPE_1 . METHOD_2 ( METHOD_3 ( ) , TYPE_1 . METHOD_4 ( device . METHOD_5 ( ) ) , VAR_1 ) COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( ( ( STRING_1 + device ) + STRING_2 ) + VAR_1 ) )  return true ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME context  TYPE_2 . METHOD_2 ( VAR_1 ) COND TYPE_3 . METHOD_3 ( context )  return VAR_2 . METHOD_4 ( VAR_3 , VAR_4 ) ;  return TYPE_3 . METHOD_5 ( context ) . METHOD_4 ( VAR_3 , VAR_4 ) ;
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME method TYPE TYPE_1 NAME call TYPE int NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( method , call , VAR_1 )  method . METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME name INIT = VAR_2 . METHOD_3 ( )  return name ;
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME x TYPE float NAME y TYPE float NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return ;  VAR_6 . append ( new TYPE_2 . Float ( ( x - VAR_2 ) , ( y - VAR_2 ) , ( VAR_2 * 2 ) , ( VAR_2 * 2 ) ) , false )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in TYPE TYPE_1 NAME config INIT = new TYPE_1 ( )  VAR_1 = in . METHOD_2 ( )  VAR_2 = ( ( TYPE_3 ) ( in . METHOD_3 ( null ) ) )  VAR_3 = in . METHOD_4 ( )  VAR_4 = TYPE_4 . METHOD_5 ( in . METHOD_2 ( ) )  return config ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id TYPE java.lang.String NAME name TYPE TYPE_2 NAME type TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( id ) COND VAR_2 == null  VAR_2 = new TYPE_1 ( id , name , type , VAR_1 )  VAR_3 . METHOD_2 ( id , VAR_2 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_4 )  org.mockito.Mockito.verify ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) . METHOD_5 ( org.mockito.Matchers . METHOD_6 ( VAR_5 class ) , org.mockito.Matchers . METHOD_7 ( ) )  org.mockito.Mockito.verify ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) . METHOD_8 ( org.mockito.Matchers . METHOD_6 ( VAR_5 class ) )  assertEquals ( VAR_2 , false )
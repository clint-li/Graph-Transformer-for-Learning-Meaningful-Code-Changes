MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Bundle NAME VAR_1  super . METHOD_1 ( VAR_1 )  VAR_2 = new TYPE_1 ( this )  METHOD_2 ( VAR_2 )  VAR_3 = new TYPE_2 ( ) MODIFIER public RETURN void NAME run  METHOD_3 ( )  VAR_3 . METHOD_4 ( this , VAR_5 )  VAR_4 = new java.lang.Runnable ( ) { public void run ( ) { METHOD_3 ( ) ; VAR_3 . METHOD_4 ( this , VAR_5 ) ; } }  VAR_3 . METHOD_4 ( VAR_4 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1  METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) )  METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) INIT = new java.util.ArrayList < TYPE_1 > ( ) { { METHOD_2 ( METHOD_3 ( VAR_2 ) . build ( ) ) ; METHOD_2 ( METHOD_3 ( VAR_3 ) . build ( ) ) ; } }  TYPE_2 . when ( VAR_4 . METHOD_4 ( org.mockito.Matchers . METHOD_5 ( VAR_5 class ) ) ) . thenReturn ( VAR_1 )  assertEquals ( 2 , VAR_6 . METHOD_4 ( ) . size ( ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME locale COND VAR_1 . METHOD_2 ( )  return STRING_1 ; TYPE java.lang.String NAME result INIT = TYPE_2 . METHOD_3 ( METHOD_4 ( ) , locale . METHOD_4 ( ) ) COND result == null  result = TYPE_2 . METHOD_3 ( METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) . METHOD_4 ( ) )  return result ;
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  return ;  TYPE_1 . METHOD_2 ( VAR_2 ) COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 )  assertTrue ( VAR_1 . METHOD_4 ( ) )  return ;  assertEquals ( VAR_4 , VAR_1 . METHOD_3 ( ) )  assertFalse ( VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_1 ( )  METHOD_5 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 TYPE int NAME size INIT = VAR_1 . length ( ) COND ( count ) != size  return false ;  return METHOD_2 ( 0 , new java.lang.String ( 0 , size , VAR_1 . METHOD_3 ( ) ) , 0 , size ) ;
MODIFIER public RETURN void NAME METHOD_1  < TYPE_2 > VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class )  new TYPE_3 ( mContext )  org.mockito.Mockito.verify ( mContext ) . METHOD_3 ( org.mockito.Matchers . METHOD_4 ( VAR_3 class ) , VAR_1 . METHOD_5 ( ) )  assertEquals ( 2 , VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) )  assertEquals ( VAR_4 , VAR_1 . METHOD_6 ( ) . METHOD_8 ( 0 ) )  assertEquals ( VAR_5 , VAR_1 . METHOD_6 ( ) . METHOD_8 ( 1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE int NAME VAR_1  VAR_2 = METHOD_2 ( key ) TYPE int NAME VAR_3 INIT = ( key . length ( ) ) - ( TYPE_3 . METHOD_3 ( VAR_2 ) ) TYPE java.lang.String NAME VAR_4 INIT = key . METHOD_4 ( 0 , VAR_3 )  VAR_5 = TYPE_4 . METHOD_5 ( VAR_4 ) COND ( VAR_5 ) == null  return null ;  return VAR_6 ;
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  return ;  TYPE_1 . METHOD_2 ( VAR_2 ) COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 )  assertFalse ( VAR_1 . METHOD_4 ( ) )  return ;  assertEquals ( VAR_4 , VAR_1 . METHOD_3 ( ) )  assertTrue ( VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_1 ( )  METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME s INIT = new TYPE_3 ( p , STRING_1 , STRING_2 , STRING_3 , null , null ) TYPE java.lang.Object NAME VAR_1 INIT = s . METHOD_2 ( null )  assertTrue ( STRING_4 , ( VAR_1 instanceof TYPE_4 ) )  VAR_1 = s . METHOD_2 ( new java.lang.Object ( ) )  fail ( STRING_5 ) TYPE TYPE_5 NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b  TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 )  mRS . METHOD_3 ( )  METHOD_4 ( b )  METHOD_5 ( b )  mRS . METHOD_6 ( METHOD_7 ( mRS ) , b )  TYPE_2 . METHOD_8 ( VAR_1 )
MODIFIER public RETURN java.util.List<android.bluetooth.BluetoothDevice> NAME METHOD_1 TYPE int[] NAME VAR_1  android.util.Log.v ( VAR_2 . TAG , ( STRING_1 + ( TYPE_1 . toString ( VAR_1 ) ) ) ) TYPE TYPE_2 NAME service INIT = VAR_3 COND service != null  return service . METHOD_1 ( VAR_1 ) ; TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , e.toString ( ) )  android.util.Log.w ( VAR_2 . TAG , STRING_2 )  return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.io.File NAME VAR_1 COND VAR_1 . METHOD_2 ( ) TYPE java.lang.String[] NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 . length )  i ++ TYPE boolean NAME VAR_3 INIT = METHOD_1 ( new java.io.File ( VAR_1 , VAR_2 [ i ] ) ) COND ! VAR_3  return false ;  return VAR_1 . METHOD_4 ( ) ;
MODIFIER public RETURN java.lang.String NAME getName TYPE com.android.jack.ir.ast.JMethod NAME method TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( )  sb.append ( CHAR_1 ) TYPE TYPE_1 NAME p IN method . METHOD_1 ( ) COND ( p . METHOD_2 ( VAR_1 class ) ) != null  continue ;  sb.append ( getName ( p . METHOD_3 ( ) ) )  sb.append ( CHAR_2 )  sb.append ( getName ( method . METHOD_3 ( ) ) )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME call  mContext = TYPE_3 . METHOD_2 ( context ) COND call != null  VAR_1 = call COND ! ( call . METHOD_3 ( ) )  METHOD_4 ( call , true , ( ( call . METHOD_5 ( ) ) == ( VAR_2 ) ) )  METHOD_6 ( null , true , true )
MODIFIER public static RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_3 ) MODIFIER public RETURN java.lang.String NAME METHOD_6 TYPE TYPE_2 NAME VAR_4  return VAR_4 . METHOD_7 ( ) ;  return TYPE_3 . METHOD_5 ( VAR_2 , new TYPE_4 < TYPE_2 , java.lang.String > ( ) { public java.lang.String METHOD_6 ( TYPE_2 VAR_4 ) { return VAR_4 . METHOD_7 ( ) ; } } ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 . METHOD_2 ( this , VAR_1 , VAR_2 )  VAR_4 COND ! ( VAR_5 )  VAR_4 . METHOD_3 ( ) TYPE TYPE_3 NAME e  TYPE_4 . d ( STRING_1 )  VAR_6 . METHOD_4 ( ) COND VAR_4 . METHOD_5 ( )  return ;  VAR_4 . METHOD_6 ( false )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 , VAR_3 , VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 )  METHOD_3 ( s )  s . METHOD_4 ( )  VAR_1 . METHOD_5 ( )  METHOD_6 ( )  VAR_1 . METHOD_7 ( )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE byte[] NAME address TYPE boolean NAME VAR_1 COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( STRING_1 + VAR_1 ) ) TYPE android.os.Message NAME msg INIT = VAR_4 . METHOD_2 ( VAR_5 )  msg.obj = address  msg.arg1 = ( VAR_1 ) ? 1 : 0  VAR_4 . METHOD_3 ( msg )
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  VAR_4 = false  TYPE_6 . METHOD_2 ( VAR_1 ) COND ( VAR_5 ) != null  VAR_5 . METHOD_3 ( VAR_1 , key , VAR_2 , VAR_3 )  METHOD_4 ( VAR_6 , VAR_1 , key , VAR_2 , null , VAR_3 )  VAR_4 = true  this . VAR_1 = VAR_1
MODIFIER MODIFIER RETURN byte[] NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 )  VAR_3 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( )  VAR_3 . METHOD_4 ( )  return VAR_2 . METHOD_5 ( ) ; TYPE java.lang.Throwable NAME t  METHOD_6 ( t )  return new byte [ 0 ] ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME node TYPE TYPE_3 NAME type INIT = TYPE_4 . METHOD_2 ( node ) TYPE java.lang.String NAME name INIT = TYPE_4 . getName ( node ) COND ( type != null ) && ( name != null )  return new TYPE_1 ( name , type , node ) ;  return null ;
MODIFIER private static RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < java.lang.String > ( VAR_3 ) COND ( VAR_4 ) != null  VAR_2 . METHOD_2 ( STRING_1 )  VAR_2 . METHOD_2 ( VAR_4 . METHOD_3 ( STRING_2 , STRING_3 ) ) COND ( VAR_5 ) != null  VAR_2 . METHOD_2 ( STRING_4 )  VAR_2 . METHOD_2 ( VAR_5 . METHOD_3 ( STRING_2 , STRING_3 ) )  return VAR_2 ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME project TYPE java.io.File NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) COND VAR_1 != null  return ( TYPE_2 . METHOD_3 ( project , VAR_1 ) ) != null ; TYPE java.lang.Exception NAME e  TYPE_3 . log ( e , null )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( null , STRING_1 ) COND VAR_1 != null TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_5 . METHOD_3 ( ) . METHOD_5 ( ) )  METHOD_6 ( VAR_4 . toString ( ) , VAR_3 , ( - 1 ) )  METHOD_7 ( )  VAR_6 = true
MODIFIER public RETURN boolean NAME METHOD_1 COND ( TYPE_2 . METHOD_2 ( ) ) <= INT_1  return device . METHOD_3 ( new TYPE_3 ( ) . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( ) ;  return device . METHOD_3 ( new TYPE_3 ( ) . text ( STRING_1 ) ) . METHOD_5 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( METHOD_2 ( ) )  throw new TYPE_2 ( ) ;  VAR_1 = ( VAR_2 ) ++  return type . get ( new TYPE_3 < TYPE_4 , TYPE_5 > ( ( ( TYPE_4 ) ( VAR_3 [ VAR_1 ] ) ) , ( ( TYPE_5 ) ( VAR_4 . values [ VAR_1 ] ) ) , VAR_4 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.util.List<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2  return METHOD_2 ( name , VAR_1 , VAR_2 ) ; TYPE TYPE_4 NAME e TYPE TYPE_1 NAME id INIT = METHOD_3 ( name , VAR_1 , VAR_2 ) COND id == null  id = new TYPE_1 ( name , VAR_1 , VAR_2 )  VAR_3 . METHOD_4 ( id )  return id ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( VAR_1 , VAR_2 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = this . VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME result  result = ( ( size ) > 0 ) ? ( ( TYPE_1 ) ( VAR_2 [ 0 ] ) ) : null  VAR_1 . METHOD_3 ( )  return result ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME uid TYPE int NAME VAR_1 TYPE int[] NAME VAR_2 TYPE int NAME VAR_3 TYPE int[][] NAME VAR_4 TYPE long NAME VAR_5 TYPE long NAME VAR_6  TYPE_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( ) TYPE int NAME VAR_7 INIT = TYPE_3 . METHOD_5 ( uid , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) COND VAR_7 == 0  TYPE_4 . METHOD_6 ( true , VAR_3 )  TYPE_2 . METHOD_7 ( )  return VAR_7 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.Object NAME element TYPE int NAME VAR_1 COND element instanceof TYPE_1 COND VAR_1 == 0  return ( ( TYPE_1 ) ( element ) ) . METHOD_2 ( ) ;  return ( ( TYPE_1 ) ( element ) ) . METHOD_3 ( ) ; TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( element ) ) NAME VAR_1  return VAR_2 . METHOD_4 ( ) ;  return VAR_2 . METHOD_5 ( ) ;  return null ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( VAR_1 . length ( ) ) == 0  return true ; TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( )  return ( VAR_2 != null ) && ( VAR_2 . METHOD_1 ( VAR_1 ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME out TYPE TYPE_4 NAME os INIT = null  os = new TYPE_5 ( out . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( os ) COND os != null  os . METHOD_4 ( ) TYPE java.io.IOException NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) || ( VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) || ( VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) || ( VAR_5 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( INT_1 , STRING_1 ) TYPE java.io.File NAME f INIT = TYPE_1 . METHOD_3 ( ) TYPE TYPE_2 NAME out INIT = TYPE_1 . METHOD_4 ( f )  out . METHOD_5 ( new TYPE_3 ( VAR_1 ) )  out . METHOD_6 ( )  out . METHOD_7 ( ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( f )  assertNotNull ( VAR_2 . METHOD_8 ( VAR_1 ) )  VAR_2 . METHOD_7 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 IN VAR_3 COND VAR_2 . METHOD_3 ( ) . equals ( VAR_1 )  return VAR_2 ;  return METHOD_4 ( ) . METHOD_1 ( VAR_1 ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  super . METHOD_1 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = METHOD_2 ( )  METHOD_3 ( VAR_2 , VAR_3 , VAR_4 )  METHOD_3 ( VAR_2 , VAR_5 , VAR_4 )  METHOD_3 ( VAR_2 , VAR_6 , VAR_4 )  METHOD_3 ( VAR_2 , VAR_7 , VAR_8 )  METHOD_3 ( VAR_2 , VAR_9 , VAR_4 )  METHOD_3 ( VAR_2 , VAR_10 , VAR_4 )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND ( VAR_2 ) == null  return ; COND ( TYPE_2 . METHOD_2 ( ) ) == false  return ; COND ( VAR_3 ) != null  TYPE_3 . d ( STRING_1 , ( STRING_2 + VAR_1 ) )  VAR_4 = VAR_1  METHOD_3 ( )  VAR_4 = VAR_1
MODIFIER private RETURN boolean NAME METHOD_1 TYPE long NAME VAR_1 COND VAR_1 == ( VAR_2 )  return true ; COND VAR_1 < ( VAR_3 )  return false ; COND VAR_1 == ( VAR_3 )  return true ; COND ( VAR_3 ) != 0  VAR_4 . METHOD_2 ( ( VAR_1 - ( VAR_3 ) ) )  VAR_3 = VAR_1  return false ;
MODIFIER protected final RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  TYPE_1 . METHOD_2 ( VAR_1 ) COND ( VAR_2 ) != null  VAR_2  transitionTo ( VAR_3 )  super . METHOD_1 ( )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME context TYPE TYPE_4 NAME call TYPE int NAME VAR_2 TYPE TYPE_5 NAME arg INIT = TYPE_3 . METHOD_2 ( call , VAR_2 ) COND arg == null  return null ;  return new TYPE_6 ( context , VAR_1 ) . METHOD_3 ( arg ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args TYPE TYPE_5 NAME VAR_8 IN VAR_9 TYPE TYPE_1 NAME VAR_10 INIT = VAR_8 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , args ) COND VAR_10 != null  return VAR_10 ;  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME request TYPE TYPE_2 NAME in INIT = METHOD_2 ( request ) TYPE int NAME VAR_1 INIT = in . METHOD_3 ( ) TYPE int NAME flags INIT = in . METHOD_3 ( ) COND false  android.util.Log.v ( STRING_1 , ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) + flags ) )  TYPE_3 . METHOD_4 ( VAR_1 , flags )  return null ; TYPE java.lang.RuntimeException NAME re  return METHOD_5 ( 1 , re . getMessage ( ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args  VAR_1 = new char [ INT_1 * INT_2 ] [ ] COND ! ( Main . METHOD_2 ( VAR_1 ) )  java.lang.System.out.println ( STRING_1 ) COND ! ( Main . METHOD_3 ( ) )  java.lang.System.out.println ( STRING_2 )  TYPE_1 . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = VAR_2 . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = VAR_2 . METHOD_4 ( ) TYPE int NAME VAR_5 INIT = VAR_3 * ( VAR_6 ) TYPE char[] NAME VAR_7 INIT = new char [ VAR_5 ]  TYPE_1 . METHOD_5 ( VAR_2 . METHOD_6 ( ) , 0 , VAR_7 , 0 , VAR_4 )  VAR_2 = TYPE_2 . METHOD_7 ( VAR_7 , 0 , VAR_5 )  VAR_2 . METHOD_2 ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE float NAME value TYPE int NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( value ) COND ( ( VAR_1 == INT_1 ) || ( VAR_1 == INT_2 ) ) || ( VAR_1 == INT_3 )  VAR_2 . METHOD_3 ( ( ( VAR_3 ) + ( ( int ) ( value ) ) ) )  VAR_2 . METHOD_4 ( new TYPE_2 . Float ( value ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE int NAME index TYPE TYPE_1 NAME res INIT = this COND res != null  res = res . METHOD_2 ( ) TYPE TYPE_1 NAME obj INIT = res . METHOD_3 ( index , null , this ) COND obj != null  ( ( TYPE_2 ) ( obj ) ) . METHOD_4 ( METHOD_5 ( ) )  return obj ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME result COND result . METHOD_4 ( )  result = TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) TYPE TYPE_4 NAME e  METHOD_3 ( e )  return ; COND ( result . METHOD_5 ( ) ) == ( VAR_3 )  METHOD_6 ( )  METHOD_3 ( new TYPE_4 ( result . METHOD_5 ( ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME config TYPE TYPE_3 NAME rr INIT = VAR_2 . METHOD_2 ( VAR_1 ) COND rr != null TYPE java.util.ArrayList<TYPE_4> NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_3 )  ret = TYPE_5 . METHOD_3 ( config , VAR_2 )  TYPE_6 . METHOD_4 ( VAR_4 , ret )  VAR_2 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME v TYPE java.lang.String NAME id INIT = METHOD_3 ( VAR_2 , VAR_3 . METHOD_4 ( ) ) TYPE java.lang.String NAME VAR_5 INIT = id TYPE TYPE_4 NAME VAR_6 INIT = METHOD_5 ( VAR_3 . METHOD_4 ( ) )  v = METHOD_6 ( VAR_2 , id , VAR_5 , VAR_6 , null , VAR_7 )  return v ;
MODIFIER private static RETURN java.lang.Class NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 TYPE java.util.List<java.lang.Throwable> NAME VAR_3 TYPE java.lang.Class NAME result INIT = null  result = TYPE_2 . METHOD_2 ( name , VAR_1 , VAR_2 ) TYPE TYPE_3 NAME e COND VAR_3 != null  VAR_3 . METHOD_3 ( e ) TYPE TYPE_4 NAME e COND VAR_3 != null  VAR_3 . METHOD_3 ( e )  return result ;
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( VAR_3 , VAR_4 )  VAR_5 . METHOD_3 ( VAR_6 )  VAR_5 . METHOD_4 ( VAR_7 )  VAR_5 . METHOD_5 ( )  VAR_5 . METHOD_6 ( java.lang.Integer . toString ( VAR_1 ) )  VAR_2 . METHOD_7 ( VAR_3 , ( ( VAR_4 ) + 1 ) )  VAR_5 . METHOD_8 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 TYPE TYPE_3 NAME d IN VAR_2 TYPE boolean NAME VAR_3 INIT = METHOD_2 ( VAR_1 , d ) COND ! VAR_3 TYPE java.lang.String NAME VAR_4 INIT = ( d . METHOD_3 ( ) ) ? d . METHOD_4 ( ) : d . METHOD_5 ( )  TYPE_4 . METHOD_6 ( VAR_1 . METHOD_7 ( ) , ( STRING_1 + VAR_4 ) )  continue ;  METHOD_8 ( VAR_1 , d )  METHOD_9 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME en INIT = VAR_1 TYPE boolean[] NAME VAR_2 INIT = new boolean [ 1 ] TYPE TYPE_2 NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) COND ! ( METHOD_3 ( ) )  assertEquals ( STRING_2 , STRING_3 , VAR_3 . getName ( en , VAR_4 , VAR_2 ) )  assertEquals ( STRING_4 , STRING_5 , VAR_3 . getName ( en , VAR_5 , VAR_2 ) )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE float NAME VAR_1  TYPE_1 . METHOD_2 ( INT_1 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( METHOD_3 ( ) , VAR_3 , VAR_4 ) TYPE TYPE_3 NAME VAR_5 INIT = TYPE_3 . METHOD_4 ( VAR_2 , 100 )  VAR_5 . METHOD_5 ( new TYPE_4 ( VAR_1 , new float [ ] { FLOAT_1 , FLOAT_1 , FLOAT_1 } ) )  VAR_5 . METHOD_6 ( METHOD_7 ( ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , true )  VAR_1 . METHOD_2 ( null , new TYPE_2 ( ) )  org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( null , new TYPE_3 ( ) , new TYPE_2 ( ) )  org.junit.Assert.assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 COND ( ( VAR_1 == null ) || ( ( VAR_1 . length ) < 1 ) ) || ( ( VAR_1 [ 0 ] ) == null )  return ; TYPE java.lang.String NAME VAR_2 INIT = VAR_1 [ 0 ] . METHOD_2 ( )  VAR_3 . METHOD_1 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . get ( new TYPE_2 ( STRING_1 , STRING_2 ) )  assertEquals ( STRING_3 , VAR_2 [ 1 ] )  assertEquals ( STRING_4 , VAR_3 [ 1 ] )  assertEquals ( STRING_5 , VAR_4 [ 1 ] )  assertEquals ( STRING_6 , VAR_5 [ 1 ] )  assertEquals ( STRING_7 , VAR_6 [ 1 ] )  assertEquals ( STRING_5 , VAR_7 [ 1 ] )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value TYPE int NAME VAR_2 TYPE TYPE_3<TYPE_1,TYPE_2> NAME VAR_3 INIT = VAR_4 COND ( VAR_3 != ( VAR_5 ) ) && ( METHOD_2 ( VAR_3 ) )  METHOD_3 ( VAR_3 . key )  super . METHOD_1 ( VAR_1 , key , value , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( ) COND VAR_1 . METHOD_4 ( )  return new TYPE_1 ( ) ;  return TYPE_1 . METHOD_5 ( TYPE_2 . on ( CHAR_1 ) . METHOD_6 ( VAR_1 ) ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) COND VAR_1 != null  sb.append ( VAR_1 ) COND VAR_2 != null COND ( sb . length ( ) ) > 0  sb.append ( STRING_1 )  sb.append ( VAR_2 )  return sb . toString ( ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( VAR_1 . size ( ) ) TYPE java.io.File NAME VAR_3 IN VAR_1  VAR_2 . METHOD_4 ( new TYPE_1 ( VAR_3 , true , true ) )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device COND VAR_1  android.util.Log.v ( TYPE_1 . TAG , STRING_1 ) TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return false ;  return ( ( service . METHOD_3 ( ) ) == ( VAR_2 ) ) && ( service . METHOD_4 ( ) . equals ( device ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME time TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 ) != ( this )  throw new TYPE_4 ( ) ; TYPE TYPE_5 NAME VAR_4 INIT = this . VAR_4 COND ! ( VAR_4 . METHOD_2 ( time , VAR_2 ) )  return false ; TYPE boolean NAME VAR_5 INIT = false  VAR_5 = VAR_1 . METHOD_3 ( ) COND ! VAR_5  VAR_4 . METHOD_4 ( )  return VAR_5 ;
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int NAME VAR_5 TYPE int[] NAME d TYPE int NAME VAR_6  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , VAR_5 , d , VAR_6 )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( this ) == obj  return true ; COND ! ( obj instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( obj ) )  return VAR_2 . equals ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1  METHOD_4 ( METHOD_5 ( METHOD_6 ( x ) ) ) TYPE java.lang.Throwable NAME e  throw METHOD_7 ( x , e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 > 0 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( VAR_1 ) COND VAR_4 COND VAR_2 == null  java.lang.System.out.println ( ( ( ( STRING_1 + ( VAR_5 . METHOD_2 ( ) ) ) + STRING_2 ) + VAR_1 ) )  return VAR_2 ;  return null ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE char[] NAME VAR_2 TYPE int NAME length INIT = VAR_1 . length ( ) COND ( VAR_2 . length ) != length  return false ; TYPE int NAME i INIT = 0 COND i < length  i ++ COND ( VAR_2 [ i ] ) != ( VAR_1 . METHOD_2 ( i ) )  return false ;  return true ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( VAR_1 . METHOD_2 ( ) . equals ( VAR_3 ) ) && ( STRING_1 . equals ( VAR_1 . METHOD_3 ( STRING_2 ) ) )  return TYPE_5 . METHOD_4 ( VAR_2 ) ;  throw new TYPE_3 ( ( ( STRING_3 + VAR_2 ) + STRING_4 ) ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME obj COND ( obj != null ) && ( obj instanceof TYPE_1 ) TYPE TYPE_1<?> NAME VAR_1 INIT = ( ( TYPE_1 < ? > ) ( obj ) ) COND ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) )  return TYPE_1 . METHOD_2 ( METHOD_3 ( ) , VAR_1 . METHOD_3 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  fail ( ) TYPE java.lang.NullPointerException NAME expected BLOCK BLOCK TYPE int NAME c INIT = TYPE_1 . METHOD_3 ( ) TYPE int NAME s INIT = TYPE_1 . METHOD_4 ( c )  METHOD_5 ( TYPE_1 . METHOD_2 ( s ) )  TYPE_1 . METHOD_6 ( s )  TYPE_1 . METHOD_7 ( c )  TYPE_2 . METHOD_8 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE android.content.Intent NAME VAR_3 INIT = new android.content.Intent ( this , METHOD_2 ( ) )  VAR_3 . METHOD_3 ( VAR_4 , VAR_2 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) , VAR_2 . METHOD_4 ( ) , VAR_3 ) )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = ( ( VAR_1 ) && ( ( METHOD_2 ( ) ) > 1 ) ) && ( METHOD_3 ( STRING_1 ) ) COND VAR_1  VAR_2 = METHOD_4 ( )  METHOD_5 ( VAR_3 )  METHOD_6 ( ( ( ( VAR_4 ) + STRING_2 ) + ( VAR_5 ) ) , VAR_2 )  METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1  android.util.Log.v ( VAR_2 . TAG , STRING_1 ) TYPE java.lang.String NAME action INIT = VAR_1 . METHOD_2 ( ) COND action . equals ( VAR_3 ) TYPE android.bluetooth.BluetoothDevice NAME device INIT = VAR_1 . METHOD_3 ( VAR_4 ) COND ( METHOD_4 ( device ) ) >= ( VAR_5 )  METHOD_5 ( device ) COND action . equals ( VAR_6 ) TYPE android.bluetooth.BluetoothDevice NAME device INIT = VAR_1 . METHOD_3 ( VAR_4 )  METHOD_6 ( device )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s INIT = new TYPE_1 ( STRING_1 , 0 , false )  s . METHOD_2 ( )  s . METHOD_2 ( )  fail ( STRING_2 ) TYPE TYPE_2 NAME VAR_1 BLOCK BLOCK  s . METHOD_3 ( )  s . METHOD_3 ( )  fail ( STRING_2 ) TYPE TYPE_2 NAME VAR_1 BLOCK BLOCK
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return true ; TYPE TYPE_1 NAME VAR_5 INIT = VAR_4 . METHOD_2 ( VAR_2 ) COND VAR_5 == null  return true ;  VAR_6 . METHOD_3 ( )  VAR_6 . METHOD_4 ( VAR_7 )  return true ;
MODIFIER protected RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE android.os.Bundle NAME args TYPE java.lang.String NAME VAR_1 INIT = args . METHOD_2 ( VAR_2 ) TYPE java.util.List<java.lang.String> NAME VAR_3 COND VAR_1 == null  VAR_3 = null  VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 )  return VAR_3 ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1  METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( context ) TYPE java.lang.IllegalArgumentException NAME e  TYPE_2 . e ( VAR_2 . TAG , STRING_1 , e ) TYPE java.io.IOException NAME e  TYPE_2 . e ( VAR_2 . TAG , STRING_2 , e ) TYPE TYPE_3 NAME e  TYPE_2 . e ( VAR_2 . TAG , STRING_2 , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 INIT = new TYPE_1 [ 0 ] TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME request INIT = new TYPE_4 ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( new TYPE_5 ( ) . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( VAR_2 ) . build ( ) TYPE TYPE_6 NAME result INIT = METHOD_6 ( VAR_4 , request )  org.junit.Assert.assertEquals ( request . METHOD_7 ( ) , result . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME f INIT = new java.io.File ( VAR_2 , ( ( STRING_1 + VAR_1 ) + STRING_2 ) )  logln ( ( STRING_3 + ( f . METHOD_2 ( ) ) ) )  TYPE_2 . METHOD_3 ( f , VAR_3 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE long NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE long NAME VAR_3 INIT = ( v == null ) ? ( ( long ) ( m . METHOD_2 ( ) ) ) : ( ( long ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( ( this ) == ( VAR_2 ) ) && ( VAR_1 != ( VAR_2 ) ) ) || ( ( ( this ) != ( VAR_2 ) ) && ( VAR_1 == ( VAR_2 ) ) )  throw new TYPE_2 ( ( ( ( this ) + STRING_1 ) + VAR_1 ) ) ;  return ( METHOD_2 ( ) ) > ( VAR_1 . METHOD_2 ( ) ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 IN VAR_2 . get ( action . METHOD_1 ( ) ) COND VAR_1 instanceof TYPE_2 TYPE TYPE_3 NAME c INIT = ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) COND c != null  VAR_3 . METHOD_3 ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_2 ( ) , action , null , ( ! VAR_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME fd TYPE java.lang.String[] NAME args TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( new TYPE_3 ( fd ) ) TYPE TYPE_4 NAME service INIT = METHOD_2 ( ) COND service == null  return ;  service . METHOD_1 ( fd , VAR_1 , args )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME value INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . get ( value ) COND VAR_2 != null  return VAR_2 ;  VAR_3 . METHOD_4 ( value , VAR_1 )  return VAR_1 ;
MODIFIER public RETURN java.io.File NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 TYPE TYPE_2 NAME target IN VAR_3 . METHOD_2 ( ) COND ( target . METHOD_3 ( ) ) && ( target . METHOD_4 ( ) . equals ( VAR_4 ) )  return new java.io.File ( target . METHOD_5 ( ) ) ; TYPE java.io.File NAME VAR_5 INIT = new java.io.File ( VAR_1 , VAR_6 ) TYPE java.io.File NAME VAR_7 INIT = new java.io.File ( VAR_5 , java.lang.String.format ( STRING_1 , METHOD_4 ( ) . METHOD_6 ( ) ) )  return VAR_7 ;
MODIFIER private RETURN java.lang.String NAME format TYPE double NAME number TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME result INIT = new TYPE_2 ( ) COND ( METHOD_1 ( ) ) != ( VAR_2 )  number = new TYPE_3 ( TYPE_4 . toString ( number ) ) . METHOD_2 ( METHOD_3 ( ) , VAR_3 ) . METHOD_4 ( )  VAR_1 . format ( number , result , 0 , 0 )  METHOD_5 ( result , VAR_1 )  return result . toString ( ) ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 COND ( VAR_1 == null ) || ( VAR_2 )  return java.lang.String . METHOD_2 ( VAR_1 ) ; COND VAR_1 instanceof TYPE_1  return TYPE_2 . METHOD_3 ( ( ( TYPE_1 ) ( VAR_1 ) ) ) ;  return ( STRING_1 + ( TYPE_2 . METHOD_4 ( java.lang.String . METHOD_2 ( VAR_1 ) . METHOD_5 ( ) ) ) ) + STRING_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE TYPE_2 NAME VAR_1 TYPE java.lang.Throwable NAME e COND ! ( VAR_2 . equals ( VAR_3 ) )  device . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) COND ( VAR_4 ) != null  TYPE_4 . METHOD_3 ( VAR_4 )  device . METHOD_2 ( ( STRING_2 + ( VAR_5 ) ) )  device . METHOD_2 ( STRING_3 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( ( ( STRING_1 + ( this ) ) + STRING_2 ) + ( VAR_3 ) ) + STRING_3 ) + ( VAR_4 ) ) )  VAR_5 . METHOD_2 ( )
MODIFIER public RETURN java.util.List<java.io.File> NAME METHOD_1 TYPE java.util.List<java.io.File> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) COND ( VAR_3 ) != ( VAR_4 )  VAR_1 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) COND METHOD_5 ( ) TYPE TYPE_2 NAME VAR_6 IN VAR_7  VAR_1 . METHOD_3 ( VAR_6 . METHOD_4 ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 , FLOAT_1 , STRING_1 )  VAR_1 . METHOD_4 ( 3 )  METHOD_3 ( VAR_1 , FLOAT_1 , STRING_2 )  VAR_1 . METHOD_5 ( 3 )  METHOD_3 ( VAR_1 , FLOAT_1 , STRING_2 )  VAR_1 . METHOD_4 ( ( - 1 ) )  METHOD_3 ( VAR_1 , FLOAT_1 , STRING_3 )  VAR_1 . METHOD_5 ( ( - 1 ) )  METHOD_3 ( VAR_1 , FLOAT_1 , STRING_1 )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_4 , VAR_5 ) TYPE boolean NAME VAR_6 INIT = ( VAR_3 . METHOD_4 ( VAR_7 , 0 , VAR_5 ) ) != 0  METHOD_5 ( VAR_2 , VAR_6 )  TYPE_1 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME expected INIT = METHOD_2 ( ) TYPE TYPE_2 NAME p INIT = new TYPE_3 ( null , expected , ( - 1 ) , null , null , null , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( )  p . METHOD_3 ( VAR_4 )  assertEquals ( expected , VAR_4 )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME a INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND a == null  return false ; TYPE TYPE_1 NAME b INIT = VAR_3 . METHOD_2 ( VAR_2 ) COND b == null  return false ; TYPE int NAME i INIT = 0 COND i < ( VAR_4 )  i ++ COND ( VAR_5 [ i ] ) != ( VAR_6 [ i ] )  return false ;  return true ;
MODIFIER protected RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) TYPE int NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_5 ) COND VAR_3 != 0  return VAR_3 ; TYPE TYPE_3 NAME VAR_6 INIT = VAR_7 . getName ( ) TYPE TYPE_3 NAME VAR_8 INIT = VAR_9 . getName ( )  return VAR_6 . METHOD_2 ( VAR_8 ) ;
MODIFIER protected final RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = ( VAR_1 + 7 ) / 8 TYPE byte[] NAME b INIT = new byte [ VAR_2 ] TYPE int NAME VAR_3 INIT = 0  METHOD_2 ( b ) TYPE int NAME i INIT = 0 COND i < VAR_2  i ++  VAR_3 = ( VAR_3 < < 8 ) + ( ( b [ i ] ) & INT_1 )  return VAR_3 > > > ( ( VAR_2 * 8 ) - VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME h INIT = VAR_1 TYPE TYPE_1 NAME result INIT = VAR_2 [ h ] COND result == null  return null ;  VAR_2 [ h ] = null  VAR_1 = ( h + 1 ) & ( ( VAR_2 . length ) - 1 )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String NAME action INIT = VAR_1 . METHOD_2 ( ) COND VAR_2  log ( ( STRING_1 + action ) ) COND action . equals ( VAR_3 ) COND ( VAR_4 ) == ( VAR_5 . METHOD_3 ( ) . METHOD_4 ( ) )  METHOD_5 ( new android.content.Intent ( VAR_6 ) )  METHOD_6 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE boolean NAME result INIT = false COND VAR_1  android.util.Log.d ( TYPE_1 . TAG , STRING_1 ) COND ( ( METHOD_2 ( ) ) != null ) && ( METHOD_2 ( ) . equals ( device ) ) NAME VAR_2  METHOD_3 ( ( - 1 ) )  result = true  break ;  break ;  return result ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME args TYPE TYPE_2 NAME t  t . METHOD_2 ( 3 , 3 , false ) TYPE TYPE_3 NAME in INIT = t . METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = t . METHOD_3 ( ( ( float ) ( FLOAT_1 / ( VAR_3 ) ) ) )  args.out = t . METHOD_4 ( in , VAR_2 )
MODIFIER static RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ( VAR_1 == null ) || ( VAR_2 == null )  return VAR_1 == VAR_2 ;  return ( ( VAR_3 . equals ( VAR_4 ) ) && ( TYPE_2 . equals ( VAR_5 , VAR_6 ) ) ) && ( ( VAR_7 ) == ( VAR_8 ) ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 , new java.lang.Class < ? > [ ] { VAR_2 , VAR_3 class , VAR_4 class } , new java.lang.Object [ ] { VAR_5 , METHOD_3 ( ) , null } )  TYPE_2 . assertTrue ( VAR_1 . METHOD_4 ( VAR_6 ) . METHOD_5 ( ) )  METHOD_6 ( VAR_7 , 10 , VAR_8 )  TYPE_2 . assertFalse ( VAR_1 . METHOD_4 ( VAR_6 ) . METHOD_5 ( ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 TYPE java.lang.String[] NAME args INIT = new java.lang.String [ ] { STRING_1 , VAR_2 . METHOD_2 ( ) , VAR_1 . METHOD_2 ( ) , STRING_2 } TYPE TYPE_1 NAME options INIT = TYPE_2 . METHOD_3 ( args )  new TYPE_3 ( options , STRING_3 ) . METHOD_4 ( options . METHOD_5 ( ) )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( )  VAR_1 . METHOD_3 ( VAR_2 , null , null )  METHOD_4 ( ) TYPE boolean NAME VAR_3 INIT = VAR_4 . METHOD_5 ( VAR_5 ) COND ( ( TYPE_1 . METHOD_6 ( VAR_6 ) ) == false ) && ( ( VAR_4 . METHOD_5 ( VAR_6 ) ) != null )  VAR_3 = true COND VAR_3  METHOD_7 ( )  VAR_5 . METHOD_8 ( )  VAR_7 = null  METHOD_9 ( VAR_8 )
MODIFIER private RETURN void NAME METHOD_1  VAR_1 = ( VAR_2 ) & ( METHOD_2 ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_3 ( ) COND ( ( VAR_1 ) & ( VAR_3 . METHOD_4 ( ) ) ) == 0  METHOD_5 ( METHOD_6 ( false ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_4 ( STRING_1 )  errln ( ( STRING_2 + ( STRING_3 + STRING_4 ) ) ) TYPE java.lang.Exception NAME e BLOCK BLOCK  VAR_1 = ( ( TYPE_1 ) ( VAR_1 . METHOD_5 ( ) ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME version TYPE int NAME VAR_5 TYPE int NAME VAR_6 COND ( VAR_7 ) == false  throw new java.lang.RuntimeException ( ( ( VAR_8 . TAG ) + STRING_1 ) ) ;  return METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , version , VAR_5 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( ) TYPE int NAME VAR_3 INIT = 0 TYPE TYPE_1 NAME VAR_4 IN VAR_5 COND ( VAR_4 . METHOD_4 ( ) . METHOD_5 ( ) ) > VAR_3  VAR_3 = VAR_4 . METHOD_4 ( ) . METHOD_5 ( )  VAR_6 . METHOD_6 ( VAR_3 )  VAR_1 . METHOD_2 ( )  VAR_2 . METHOD_3 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME node TYPE java.lang.String NAME VAR_1 INIT = node . METHOD_2 ( ) COND VAR_1 . equals ( STRING_1 ) TYPE TYPE_2 NAME location INIT = mContext . METHOD_3 ( node )  mContext . METHOD_4 ( VAR_2 , node , location , ( STRING_2 + STRING_3 ) , null )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME method TYPE TYPE_3 NAME VAR_2 TYPE int NAME offset TYPE TYPE_4 NAME VAR_3  VAR_4 = METHOD_2 ( offset , VAR_4 )  METHOD_3 ( offset , VAR_5 )  VAR_6 . METHOD_1 ( VAR_1 , method , VAR_2 , VAR_7 , VAR_3 )  VAR_7 += VAR_3 . length ( VAR_7 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_2 NAME s INIT = new TYPE_2 ( VAR_1 )  VAR_1 . METHOD_2 ( VAR_3 )  METHOD_3 ( VAR_1 , s )  s . METHOD_4 ( VAR_4 , VAR_5 )  s . METHOD_5 ( VAR_5 , VAR_5 )  s . METHOD_6 ( VAR_5 , VAR_5 )  s . METHOD_7 ( VAR_5 )  VAR_1 . METHOD_8 ( )  METHOD_9 ( )  VAR_1 . METHOD_10 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  this COND VAR_2  return ; TYPE TYPE_2 NAME node  node = METHOD_2 ( )  node . METHOD_3 ( VAR_1 ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( METHOD_4 ( VAR_1 ) , e ) ;  VAR_2 = true
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 COND ( VAR_1 != null ) && ( ! ( ( VAR_1 instanceof TYPE_6 ) || ( VAR_1 instanceof TYPE_7 ) ) )  throw new TYPE_4 ( STRING_1 ) ;  METHOD_2 ( key , VAR_1 )
MODIFIER public synchronized RETURN void NAME run TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 COND ( VAR_1 . METHOD_1 ( ) ) || ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) )  return ;  TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_2 ( ) . METHOD_6 ( ) , VAR_1 )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE int NAME VAR_3  this COND ! ( VAR_4 )  throw new java.lang.RuntimeException ( STRING_1 ) ; TYPE int NAME VAR_5 INIT = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) COND VAR_5 != 0 TYPE TYPE_2 NAME res INIT = new TYPE_2 ( VAR_5 )  METHOD_3 ( res . METHOD_4 ( ) )  return res ;  throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ;
MODIFIER public RETURN void NAME run  VAR_1 = TYPE_1 . METHOD_1 ( )  TYPE_1 . METHOD_2 ( )  VAR_2 = new TYPE_2 ( )  METHOD_3 ( )  VAR_3 . METHOD_4 ( )  TYPE_1 . METHOD_5 ( ) TYPE TYPE_3 NAME e  e . METHOD_6 ( )  fail ( STRING_1 )  METHOD_7 ( )  VAR_2 = null  VAR_1 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = METHOD_2 ( x ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( VAR_3 ) TYPE TYPE_4 NAME VAR_4 INIT = METHOD_3 ( VAR_5 ) TYPE TYPE_4 NAME VAR_6 INIT = METHOD_3 ( VAR_7 )  METHOD_4 ( new TYPE_5 ( info , VAR_6 , VAR_4 , VAR_2 ) ) TYPE java.lang.Throwable NAME e  throw METHOD_5 ( x , e ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME status COND VAR_2  android.util.Log.v ( VAR_3 . TAG , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + status ) )  VAR_4 . METHOD_2 ( VAR_1 , ( status == ( VAR_5 ) ? VAR_6 : VAR_7 ) , false )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  VAR_3 . METHOD_3 ( VAR_1 , true ) TYPE TYPE_2 NAME node IN VAR_2 COND ( node . METHOD_4 ( ) ) == false  VAR_3 . METHOD_3 ( node , true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE boolean NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_4 )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_4 ( org.mockito.Matchers.eq ( VAR_1 ) , org.mockito.Matchers . METHOD_5 ( int . class ) )  assertEquals ( VAR_2 , true )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE byte[] NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 , VAR_5 , 0 , 0 , true ) TYPE int NAME VAR_6 INIT = METHOD_3 ( ) TYPE TYPE_2 NAME VAR_7 INIT = TYPE_3 . METHOD_4 ( VAR_8 class )  VAR_9 . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 )  org.mockito.Mockito.verify ( VAR_10 ) . METHOD_5 ( VAR_6 , VAR_4 , VAR_7 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME out TYPE TYPE_4 NAME os INIT = null  os = new TYPE_5 ( out . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( os ) COND os != null  os . METHOD_4 ( ) TYPE java.io.IOException NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2  TYPE_3 . d ( VAR_3 , ( ( STRING_1 + VAR_1 ) + STRING_2 ) )  TYPE_3 . d ( VAR_3 , this . toString ( ) ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_2 ( )  VAR_4 . METHOD_1 ( ) COND VAR_2  TYPE_3 . d ( VAR_3 , ( ( STRING_3 + VAR_1 ) + STRING_2 ) )  TYPE_3 . d ( VAR_3 , this . toString ( ) )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME subId COND ! ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return null ; TYPE TYPE_3 NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 != null  return VAR_3 . METHOD_1 ( ) ;  return null ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE double NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false TYPE double NAME VAR_3 INIT = ( v == null ) ? ( ( double ) ( m . METHOD_2 ( ) ) ) : ( ( double ) ( m . METHOD_2 ( v ) ) )  TYPE_3 . assertTrue ( ( VAR_3 == value ) ) TYPE TYPE_4 NAME e  VAR_2 = true  TYPE_3 . METHOD_3 ( VAR_2 , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 COND ( TYPE_1 . METHOD_2 ( ) ) || ( TYPE_2 . METHOD_3 ( STRING_1 , false ) )  TYPE_3 . METHOD_4 ( VAR_1 ) . METHOD_5 ( METHOD_6 ( ) , STRING_2 ) TYPE android.os.Bundle NAME VAR_2 INIT = METHOD_7 ( ) . METHOD_8 ( )  VAR_2 . METHOD_9 ( VAR_3 , VAR_4 ) TYPE android.content.Intent NAME VAR_5 INIT = new android.content.Intent ( this , VAR_6 class ) . METHOD_10 ( VAR_7 , VAR_2 )  METHOD_11 ( VAR_5 , VAR_8 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME node COND ( ( node . METHOD_2 ( ) . size ( ) ) == 1 ) && ( ! ( node . METHOD_2 ( ) . METHOD_3 ( ) . toString ( ) . equals ( STRING_1 ) ) )  context . METHOD_4 ( VAR_2 , node , context . METHOD_5 ( node ) , ( STRING_2 + STRING_3 ) , null )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE int NAME VAR_1 NAME VAR_1  return STRING_1 ;  return STRING_2 ;  return STRING_3 ;  return STRING_4 ;  return STRING_5 ;  return STRING_6 ;  return STRING_7 ;  return STRING_8 ;  return STRING_9 ;  return STRING_10 ;  return STRING_11 ;  return STRING_12 ;  return java.lang.Integer . toString ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  key . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME expected BLOCK BLOCK  key . METHOD_4 ( )  key . METHOD_3 ( VAR_1 ) TYPE TYPE_1 NAME expected BLOCK BLOCK
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME x TYPE java.lang.String NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) TYPE TYPE_3 NAME out INIT = new TYPE_4 ( VAR_2 )  out . METHOD_5 ( x . METHOD_6 ( ) )  out . METHOD_7 ( ) TYPE java.lang.Exception NAME e  throw new java.lang.RuntimeException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 INIT = new TYPE_1 [ 0 ] TYPE TYPE_2 NAME request INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( new TYPE_4 ( ) . METHOD_4 ( VAR_2 ) ) . build ( ) TYPE TYPE_5 NAME result INIT = METHOD_5 ( request )  TYPE_6 . METHOD_6 ( result . METHOD_7 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ( VAR_2 . METHOD_2 ( ) ) == VAR_1  return VAR_2 ; TYPE TYPE_1 NAME VAR_3 IN VAR_2 . METHOD_3 ( ) TYPE TYPE_1 NAME v INIT = METHOD_1 ( VAR_1 , VAR_3 ) COND v != null  return v ;  return null ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 )  VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , 0 , 0 , 0 )  org.mockito.Mockito.verify ( VAR_5 ) . METHOD_3 ( org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) , org.mockito.Matchers . METHOD_4 ( ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return ;  VAR_4 . METHOD_3 ( VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE boolean NAME VAR_3 INIT = ( ( VAR_4 ) == null ) ? true : ! ( VAR_4 . get ( VAR_1 ) ) TYPE TYPE_1 NAME VAR_5 COND VAR_3  VAR_5 = VAR_2 . METHOD_2 ( VAR_6 ) COND ! ( VAR_7 )  VAR_6 += VAR_5 . METHOD_3 ( )  VAR_7 = false  VAR_5 = VAR_2  result . METHOD_4 ( VAR_1 , VAR_5 )
MODIFIER public RETURN int NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return VAR_2 ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return VAR_2 ;  return service . METHOD_1 ( ) ;
MODIFIER static RETURN byte[] NAME METHOD_1 TYPE java.lang.Object NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME os INIT = new TYPE_2 ( VAR_2 )  os . METHOD_2 ( VAR_1 )  os . METHOD_3 ( ) TYPE java.lang.Exception NAME e  android.util.Log.w ( VAR_3 . TAG , ( ( ( STRING_1 + e ) + STRING_2 ) + VAR_1 ) )  return VAR_2 . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME v COND TYPE_2 . METHOD_2 ( )  VAR_1 . METHOD_1 ( new TYPE_1 ( v . METHOD_3 ( ) ) )  return ; TYPE int NAME i INIT = 0 COND i < ( VAR_2 . length )  i ++  METHOD_4 ( VAR_2 [ i ] )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME provider  METHOD_1 ( provider , ( ( byte ) ( 1 ) ) , TYPE_1 . METHOD_2 ( STRING_1 ) , TYPE_1 . METHOD_3 ( STRING_1 ) )  METHOD_1 ( provider , ( ( byte ) ( 2 ) ) , TYPE_1 . METHOD_3 ( STRING_1 ) , TYPE_1 . METHOD_2 ( STRING_1 ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( VAR_2 class ) TYPE TYPE_1 NAME result INIT = null TYPE TYPE_1 NAME VAR_3 IN VAR_1 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_1 . METHOD_4 ( VAR_3 ) COND VAR_4 . METHOD_5 ( VAR_5 )  TYPE_4 . i ( STRING_1 , ( VAR_3 + STRING_2 ) ) COND result != null  return null ;  result = VAR_3  return result ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND VAR_1 == VAR_2  return new TYPE_1 ( ) ; TYPE TYPE_2 NAME VAR_3 INIT = VAR_2 . METHOD_2 ( )  return TYPE_3 . METHOD_1 ( VAR_1 , VAR_3 ) . append ( VAR_2 . getName ( ) ) . append ( CHAR_1 ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 IN VAR_3 TYPE TYPE_2 NAME VAR_4 IN VAR_2 . METHOD_2 ( ) COND VAR_1 . equals ( VAR_4 . METHOD_3 ( ) )  return true ;  return false ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME target COND ( VAR_1 ) == 1  target . append ( CHAR_1 )  target . append ( CHAR_2 )  target . append ( CHAR_3 )  ( VAR_1 ) ++  return 3 ; COND ( VAR_1 ) == 2  target . append ( CHAR_4 )  ( VAR_1 ) ++  return 1 ;  throw new java.io.IOException ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE android.os.Bundle NAME VAR_1  super . METHOD_1 ( VAR_1 ) TYPE android.content.Intent NAME VAR_2 INIT = METHOD_2 ( )  METHOD_3 ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = ( ( TYPE_1 ) ( METHOD_4 ( VAR_4 ) ) ) TYPE TYPE_2 NAME VAR_5 INIT = new TYPE_2 ( VAR_3 . METHOD_5 ( ) )  new TYPE_3 ( this , VAR_5 ) . METHOD_6 ( METHOD_2 ( ) , METHOD_7 ( ) , true )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element TYPE TYPE_3 NAME VAR_1 INIT = element . METHOD_2 ( VAR_2 , VAR_3 ) COND VAR_1 != null TYPE java.lang.String NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) COND ( TYPE_4 . METHOD_4 ( VAR_5 , VAR_4 ) ) >= 0  context . METHOD_5 ( VAR_6 , element , context . METHOD_6 ( VAR_1 ) , STRING_1 , null )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) TYPE int NAME VAR_2 INIT = ( VAR_1 . METHOD_3 ( new TYPE_2 ( time ) ) ) ? VAR_1 . METHOD_4 ( ) : 0 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_5 ( )  VAR_4 [ VAR_5 ] = VAR_2  VAR_4 [ VAR_6 ] = VAR_3  METHOD_6 ( time , VAR_3 ) TYPE int NAME i INIT = 0 COND i < ( VAR_7 )  i ++  VAR_8 [ i ] = true
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( STRING_1 )  fail ( STRING_2 ) TYPE java.io.IOException NAME e BLOCK BLOCK  TYPE_2 . METHOD_2 ( VAR_2 , null , VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = new java.io.File ( VAR_2 , VAR_3 ) . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_4 )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1  VAR_3 . METHOD_2 ( mContext , VAR_4 , VAR_5 , 0 )  METHOD_3 ( true )  break ;  METHOD_4 ( ( STRING_1 + ( VAR_1 ) ) )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME session TYPE int NAME VAR_1 TYPE int NAME c TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  assertEquals ( STRING_1 , new java.lang.String ( VAR_3 ) )  assertEquals ( STRING_2 , 0 , ( ( TYPE_4 . METHOD_3 ( VAR_1 ) ) & ( VAR_4 ) ) )  super . METHOD_1 ( session , VAR_1 , c , VAR_2 , fd , callback )
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME pkg TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_2<java.lang.String> NAME VAR_4 TYPE boolean NAME VAR_5 INIT = false COND VAR_3 && ( ( ( VAR_6 ) != null ) || ( ( VAR_7 ) != null ) )  VAR_4 = new TYPE_2 < java.lang.String > ( )  VAR_4 . METHOD_2 ( pkg . packageName )  VAR_4 = null  return METHOD_1 ( pkg , VAR_1 , VAR_2 , VAR_4 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.Class<?> NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 == null  throw new TYPE_2 ( ) ;  return VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE TYPE_3 NAME e  throw new TYPE_4 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( VAR_2 )  TYPE_2 . assertNotNull ( VAR_4 )  TYPE_2 . assertTrue ( VAR_4 . METHOD_5 ( ) )  TYPE_2 . assertTrue ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) COND VAR_2 != null TYPE TYPE_3 NAME VAR_3 IN VAR_4  VAR_3 . METHOD_3 ( VAR_2 ) TYPE java.lang.String NAME VAR_5 INIT = TYPE_4 . METHOD_4 ( VAR_2 )  TYPE_5 . METHOD_5 ( VAR_5 , VAR_1 , VAR_6 )
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3  VAR_4 = false  TYPE_6 . METHOD_2 ( VAR_1 ) COND ( VAR_5 ) != null  VAR_5 . METHOD_3 ( VAR_1 , key , VAR_2 , VAR_3 )  METHOD_4 ( VAR_6 , VAR_1 , key , null , VAR_2 , VAR_3 )  VAR_4 = true  this . VAR_1 = VAR_1
MODIFIER public RETURN void NAME METHOD_1 COND METHOD_2 ( )  return ; TYPE android.bluetooth.BluetoothDevice NAME device INIT = METHOD_3 ( STRING_1 )  TYPE_1 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . get ( device ) )  TYPE_1 . assertTrue ( VAR_1 . METHOD_6 ( device ) ) TYPE java.util.Map<android.bluetooth.BluetoothDevice,TYPE_2> NAME VAR_2 INIT = VAR_1 . METHOD_5 ( )  org.junit.Assert.assertEquals ( 1 , VAR_2 . size ( ) )  TYPE_1 . assertNotNull ( VAR_2 . get ( device ) )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = INT_1 TYPE int NAME result INIT = 1  result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) TYPE TYPE_1 NAME VAR_3 IN VAR_2  result += VAR_3 . METHOD_1 ( )  return result ;
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( new TYPE_2 ( ) )  assertNotNull ( s )  s . METHOD_2 ( )  s = new TYPE_1 ( ( ( TYPE_3 ) ( null ) ) )  fail ( STRING_1 ) TYPE java.lang.NullPointerException NAME e BLOCK BLOCK
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE byte[] NAME result TYPE byte[] NAME VAR_1 COND ( ( ( ( result [ 0 ] ) != ( VAR_1 [ 0 ] ) ) || ( ( result [ 1 ] ) != ( VAR_1 [ 1 ] ) ) ) || ( ( result [ 2 ] ) != ( VAR_1 [ 2 ] ) ) ) || ( ( result [ 3 ] ) != ( VAR_1 [ 3 ] ) )  return false ;  return true ;
MODIFIER protected RETURN void NAME METHOD_1 COND VAR_1  METHOD_2 ( ) COND ( VAR_2 ) != null  METHOD_3 ( VAR_2 ) COND ( ( VAR_2 ) != null ) && ( VAR_3 )  METHOD_3 ( VAR_2 ) COND ( VAR_4 ) != null  METHOD_3 ( VAR_4 )  super . METHOD_1 ( )  VAR_5 = false
MODIFIER private RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME METHOD_3  VAR_2 COND ( VAR_3 ) == 0  TYPE_1 . METHOD_4 ( this , STRING_2 ) COND ( -- ( VAR_3 ) ) == 0  VAR_4 . METHOD_5 ( false )  VAR_1 . METHOD_2 ( new java.lang.Runnable ( STRING_1 ) { public void METHOD_3 ( ) { synchronized ( VAR_2 ) { if ( ( VAR_3 ) == 0 ) { TYPE_1 . METHOD_4 ( this , STRING_2 ) ; } else if ( ( -- ( VAR_3 ) ) == 0 ) { VAR_4 . METHOD_5 ( false ) ; } } } } . METHOD_6 ( ) )
MODIFIER static RETURN void NAME METHOD_1  VAR_1 COND ( VAR_1 . size ( ) ) == 0  return ; TYPE java.util.ArrayList<java.lang.Runnable> NAME VAR_2 INIT = new java.util.ArrayList < java.lang.Runnable > ( VAR_1 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 . size ( ) )  i ++  VAR_2 . get ( i ) . run ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE byte[] NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_2 ( VAR_6 ) . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_4 ) . build ( ) TYPE TYPE_3 NAME VAR_7 INIT = TYPE_3 . METHOD_4 ( VAR_5 , VAR_8 )  assertEquals ( VAR_1 , VAR_9 )  assertEquals ( VAR_3 , VAR_10 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME is INIT = METHOD_2 ( )  assertEquals ( CHAR_1 , METHOD_3 ( is ) )  assertEquals ( CHAR_2 , METHOD_4 ( is ) )  fail ( STRING_1 ) TYPE java.io.IOException NAME e  assertEquals ( STRING_2 , e.getMessage ( ) )  is . METHOD_5 ( )
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 != null TYPE byte[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_3 ( ) TYPE int NAME length INIT = VAR_1 . METHOD_4 ( ) COND length != 0  return TYPE_3 . METHOD_5 ( VAR_2 , VAR_3 , length ) ; TYPE TYPE_4 NAME e  throw new TYPE_2 ( VAR_4 ) ;  return VAR_5 ;  return VAR_5 ;
MODIFIER MODIFIER RETURN TYPE_1<TYPE_2>.VAR_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_3<TYPE_1<TYPE_2>.VAR_1> NAME i INIT = VAR_2 . METHOD_2 ( ) COND i . METHOD_3 ( ) TYPE TYPE_1<TYPE_2>.VAR_1 NAME entry INIT = i . METHOD_4 ( ) COND VAR_3 . equals ( name )  return entry ;  android.util.Log.e ( TYPE_1 . TAG , ( STRING_1 + name ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.io.File NAME VAR_1  new TYPE_1 ( log ) . args ( STRING_1 , STRING_2 , java.lang.Integer . toString ( VAR_2 ) , VAR_3 , STRING_3 , STRING_4 , STRING_5 , VAR_1 . METHOD_2 ( ) ) . METHOD_3 ( ) . METHOD_4 ( )
MODIFIER MODIFIER RETURN void NAME test TYPE java.util.List<java.lang.String> NAME result INIT = new java.util.ArrayList ( TYPE_1 . METHOD_1 ( ) . VAR_1 ) COND ( result . size ( ) ) == 0  status = VAR_2  METHOD_2 ( )  status = VAR_3  METHOD_3 ( ( ( FLOAT_1 - ( cts ) ) - ( VAR_4 ) ) )  METHOD_4 ( )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE java.lang.Object NAME d TYPE int NAME VAR_5 TYPE TYPE_1 NAME VAR_6  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 , VAR_7 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) + ( java.lang.String . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 ) ) ) ) + STRING_3 ) + ( VAR_5 ) ) )  VAR_6 . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 , METHOD_5 ( VAR_7 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME version TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_4 NAME d INIT = TYPE_5 . METHOD_2 ( version , VAR_2 , VAR_3 , VAR_1 ) . METHOD_3 ( ) TYPE TYPE_6 NAME r INIT = new TYPE_6 ( d , VAR_4 )  VAR_5 . METHOD_4 ( d . METHOD_5 ( ) , r )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  return new TYPE_2 ( METHOD_3 ( ) , METHOD_4 ( ) , VAR_1 , METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) , a , b , c , d ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME s TYPE long NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback  assertEquals ( VAR_2 , TYPE_4 . METHOD_2 ( s ) )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME provider  provider . METHOD_2 ( STRING_1 , ( ( VAR_1 ) + STRING_2 ) )  provider . METHOD_2 ( STRING_3 , ( ( VAR_1 ) + STRING_4 ) )  provider . METHOD_2 ( STRING_5 , ( ( VAR_1 ) + STRING_6 ) )  provider . METHOD_2 ( STRING_7 , STRING_8 )  provider . METHOD_2 ( STRING_9 , STRING_8 )  provider . METHOD_2 ( STRING_10 , STRING_8 )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE java.lang.String NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME node TYPE TYPE_2 NAME in COND ! ( TYPE_3 . METHOD_2 ( node , in ) )  return false ; TYPE int NAME i INIT = 0 COND i < ( VAR_1 . size ( ) )  i ++ COND ! ( TYPE_3 . METHOD_1 ( VAR_1 . get ( i ) , in ) )  return false ;  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME call  TYPE_2 . d ( this , STRING_1 , call ) COND ! ( VAR_1 . METHOD_2 ( call ) )  VAR_1 . METHOD_3 ( call ) COND TYPE_3 . equals ( VAR_2 , call . METHOD_4 ( ) )  METHOD_5 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3  VAR_4 TYPE long NAME VAR_5 INIT = TYPE_2 . METHOD_2 ( )  return VAR_6 . METHOD_3 ( METHOD_4 ( this , VAR_1 ) , VAR_2 , VAR_3 ) ;  TYPE_2 . METHOD_5 ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME type TYPE TYPE_3 NAME config TYPE java.util.List<TYPE_4> NAME VAR_1 INIT = TYPE_5 . METHOD_2 ( type ) TYPE TYPE_4 NAME t IN VAR_1 COND t == ( VAR_2 )  continue ; TYPE TYPE_1 NAME match INIT = METHOD_1 ( name , type , config ) COND match != null  return match ;  return null ;
MODIFIER public synchronized RETURN void NAME METHOD_1 COND VAR_1  return ;  VAR_1 = true COND ( ( path ) == null ) || ( path . METHOD_2 ( ) )  return ;  VAR_2 = new TYPE_1 ( path . METHOD_3 ( ) ) TYPE java.io.IOException NAME VAR_3  TYPE_2 . METHOD_4 ( ( STRING_1 + ( path ) ) , VAR_3 )  VAR_2 = null
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  METHOD_2 ( TYPE_1 . METHOD_4 ( ) )  METHOD_2 ( TYPE_1 . METHOD_5 ( ) )  assertFalse ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) )  assertTrue ( VAR_1 . METHOD_8 ( VAR_2 ) )  assertTrue ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME packageName INIT = VAR_1 . METHOD_2 ( )  METHOD_3 ( packageName ) TYPE TYPE_2 NAME info INIT = new TYPE_2 ( TYPE_1 . METHOD_4 ( VAR_1 ) , VAR_2 , VAR_3 , METHOD_5 ( VAR_1 . METHOD_6 ( ) ) , METHOD_7 ( packageName ) , METHOD_8 ( packageName ) )  METHOD_9 ( info )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME flags TYPE boolean NAME VAR_1  VAR_2 . METHOD_2 ( ) COND VAR_1  TYPE_1 . METHOD_3 ( id )  TYPE_1 . METHOD_4 ( id , VAR_3 , flags ) TYPE java.lang.Throwable NAME e  throw TYPE_2 . METHOD_5 ( e ) ;  VAR_2 . METHOD_6 ( )
MODIFIER public RETURN void NAME set TYPE TYPE_1 NAME config TYPE boolean NAME VAR_1 COND config != null TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  i ++ TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 [ i ] COND ( ( VAR_1 == false ) || ( VAR_3 == null ) ) || ( ( VAR_3 . METHOD_1 ( ) ) == false )  VAR_5 [ i ] = VAR_3
MODIFIER public RETURN void NAME event TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME event TYPE java.lang.String NAME format TYPE java.lang.Object NAME args TYPE java.lang.String NAME msg  msg = ( ( args == null ) || ( ( args . length ) == 0 ) ) ? format : java.lang.String.format ( VAR_2 , format , args ) TYPE TYPE_2 NAME VAR_3  TYPE_3 . e ( STRING_1 , VAR_3 , STRING_2 , format , args . length )  msg = format + STRING_3  event ( VAR_1 , event , msg )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME expected  < TYPE_3 > VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 class )  org.mockito.Mockito.verify ( VAR_3 , TYPE_4 . METHOD_3 ( ) ) . log ( VAR_1 . METHOD_4 ( ) ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_5 ( VAR_1 . METHOD_6 ( ) ) COND ! ( METHOD_7 ( expected , VAR_4 ) )  assertEquals ( expected , VAR_4 )
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE byte[] NAME address TYPE int NAME state COND VAR_1  android.util.Log.v ( VAR_2 . TAG , ( ( ( STRING_1 + ( TYPE_1 . toString ( address ) ) ) + STRING_2 ) + state ) ) TYPE android.os.Message NAME msg INIT = VAR_3 . METHOD_2 ( VAR_4 )  msg.obj = address  msg.arg1 = state  VAR_3 . METHOD_3 ( msg )
MODIFIER public static final RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.StringBuilder NAME b INIT = new java.lang.StringBuilder ( ) TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME i INIT = 1 COND i <= VAR_2  i ++ TYPE java.lang.String NAME s INIT = VAR_1 . METHOD_3 ( i )  VAR_3 . println ( ( ( ( STRING_1 + i ) + STRING_2 ) + s ) ) COND s != null  b . append ( s )  return b . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) )  METHOD_6 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) )  METHOD_7 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_5 ( ) )  METHOD_8 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME path COND ( null == path ) || ( path . equals ( STRING_1 ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( METHOD_2 ( ) ) == ( VAR_1 )  throw new TYPE_1 ( STRING_3 ) ;  return METHOD_3 ( VAR_2 , path ) ;
MODIFIER static RETURN boolean NAME METHOD_1 TYPE int NAME VAR_1 TYPE float NAME VAR_2 TYPE float NAME VAR_3 TYPE TYPE_1 NAME d INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND d == null  return false ;  d . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 , VAR_3 ) )  return true ;
MODIFIER public RETURN java.lang.Integer NAME METHOD_1 TYPE java.lang.Integer NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_3 TYPE TYPE_3 NAME session INIT = VAR_4 . get ( VAR_1 ) COND session == null  throw new TYPE_4 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; TYPE int NAME VAR_5 INIT = METHOD_2 ( )  session . METHOD_3 ( TYPE_5 . METHOD_4 ( VAR_2 ) , new TYPE_6 ( VAR_5 ) )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE java.lang.Integer[] NAME VAR_3 INIT = new java.lang.Integer [ VAR_2 ] TYPE int NAME i INIT = 0 COND i < ( ( VAR_2 ) - 1 )  ++ i  VAR_3 [ i ] = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 ) )  METHOD_4 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME x INIT = 0 TYPE int NAME y INIT = 1 COND ( y ++ ) < 10 COND y > 1  x = INT_1  x = INT_2  return x ;
MODIFIER private RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE TYPE_2 NAME VAR_8 INIT = new TYPE_3 ( VAR_1 )  VAR_8 . METHOD_2 ( )  VAR_8 . set ( VAR_2 , ( VAR_3 - 1 ) , VAR_4 , VAR_5 , VAR_6 , VAR_7 )  return VAR_8 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 10 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_2 . METHOD_3 ( )  VAR_3 . METHOD_4 ( null )  VAR_2 . METHOD_5 ( false )  VAR_3 . METHOD_6 ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_2 . METHOD_7 ( )  METHOD_8 ( VAR_4 ) TYPE int NAME VAR_5 INIT = VAR_3 . METHOD_9 ( )  assertEquals ( VAR_1 , VAR_5 )  VAR_2 . METHOD_10 ( )
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  TYPE_1 . d ( VAR_2 , STRING_1 )  TYPE_1 . d ( VAR_2 , this . toString ( ) ) COND METHOD_2 ( )  METHOD_3 ( ) . METHOD_1 ( ) COND VAR_1  TYPE_1 . d ( VAR_2 , STRING_2 )  TYPE_1 . d ( VAR_2 , this . toString ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME entry TYPE java.lang.String NAME VAR_1 TYPE int NAME uid TYPE int NAME set TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4  assertEquals ( VAR_1 , VAR_5 )  assertEquals ( uid , entry . uid )  assertEquals ( set , entry . set )  assertEquals ( VAR_2 , VAR_6 )  assertEquals ( VAR_3 , VAR_7 )  assertEquals ( VAR_4 , VAR_8 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME subId TYPE java.lang.String NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , STRING_1 ) )  return null ; TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( subId ) COND VAR_3 != null  return VAR_3 . METHOD_4 ( ) ;  return null ;
MODIFIER private static RETURN TYPE_1[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1[] NAME VAR_2 INIT = new TYPE_1 [ VAR_3 ] TYPE int NAME i INIT = 0 COND i <= ( ( VAR_3 ) - 1 )  i ++  VAR_2 [ i ] = TYPE_2 . METHOD_2 ( ( ( VAR_1 + ( i + 1 ) ) + STRING_1 ) )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE int NAME action COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) || ( ! ( TYPE_2 . METHOD_2 ( action ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( VAR_1 ) == ( METHOD_3 ( ) )  throw new TYPE_3 ( STRING_3 ) ;  return METHOD_4 ( VAR_2 , path , action ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME context COND ! ( TYPE_2 . METHOD_2 ( ) )  TYPE_3 . i ( STRING_1 , STRING_2 )  return false ; TYPE TYPE_4 NAME provider INIT = new TYPE_4 ( context ) COND ! ( provider . METHOD_3 ( ) )  TYPE_3 . i ( STRING_1 , STRING_3 )  return false ;  return true ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  throw new java.lang.NullPointerException ( STRING_1 ) ;  METHOD_2 ( ) TYPE TYPE_2 NAME s INIT = VAR_2 . get ( VAR_1 ) COND s == null  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;  return s . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_2 NAME node IN VAR_1 COND node instanceof TYPE_3  node . METHOD_2 ( this )  METHOD_3 ( node ) COND ! ( VAR_2 . METHOD_4 ( ) ) TYPE TYPE_2 NAME node INIT = VAR_2 . METHOD_5 ( ) COND VAR_3 . METHOD_6 ( node . METHOD_7 ( ) )  node . METHOD_2 ( this )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 IN VAR_1  VAR_3 = ( VAR_4 ) ++ COND VAR_5  android.util.Log.v ( VAR_6 . TAG , ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) )  METHOD_3 ( VAR_2 )  VAR_7 . METHOD_4 ( VAR_2 )
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND VAR_1 == ( this )  return true ; COND ( ( ( VAR_1 instanceof TYPE_1 ) && ( METHOD_1 ( ) ) ) && ( ( ( TYPE_1 < ? > ) ( VAR_1 ) ) . METHOD_1 ( ) ) ) && ( ( METHOD_2 ( ) ) != ( VAR_1 . METHOD_2 ( ) ) )  return false ;  return TYPE_2 . METHOD_3 ( this , VAR_1 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 COND VAR_1 < ( VAR_3 ) TYPE int NAME i INIT = TYPE_1 . METHOD_2 ( VAR_2 , ( ( count ) - 1 ) ) COND i >= 0  i -- COND ( METHOD_3 ( i ) ) == VAR_1  return i ;  return - 1 ;  return METHOD_4 ( VAR_1 , VAR_2 ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_1 , VAR_3 ) COND ! ( VAR_2 . METHOD_2 ( ) ) COND ! ( VAR_2 . METHOD_3 ( ) )  android.util.Log . METHOD_4 ( TYPE_2 . TAG , ( STRING_1 + VAR_2 ) )  return null ;  return new TYPE_1 ( new java.io.File ( VAR_2 , VAR_4 ) ) ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME call TYPE TYPE_2 NAME VAR_1 COND ( ! ( call . METHOD_2 ( ) . METHOD_3 ( ) ) ) || ( ! ( ( call . METHOD_4 ( ) ) instanceof TYPE_3 ) )  return false ;  return call . METHOD_8 ( ) . METHOD_9 ( VAR_1 . METHOD_10 ( ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . set ( new java.lang.Object ( ) )  VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) TYPE boolean NAME VAR_2 IN new boolean [ ] { true , false }  VAR_1 . METHOD_3 ( true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) ) TYPE int NAME VAR_2 INIT = 100  VAR_1 . METHOD_4 ( VAR_2 ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_5 ( )  assertTrue ( STRING_1 , ( ( TYPE_4 . METHOD_6 ( ( VAR_2 - VAR_3 ) ) ) <= 10 ) )  VAR_1 . METHOD_7 ( )  server . METHOD_7 ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_1 ( )  assertEquals ( VAR_3 , VAR_1 . status )  assertEquals ( VAR_4 , VAR_5 . packageName )  org.mockito.Mockito.verify ( VAR_6 ) . METHOD_2 ( TYPE_2 . eq ( VAR_7 ) )  VAR_8 . METHOD_3 ( )
MODIFIER public static RETURN byte[] NAME METHOD_1 TYPE java.io.File NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = new byte [ INT_1 ] TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_1 ) TYPE int NAME count COND ( count = VAR_4 . METHOD_2 ( VAR_2 ) ) != ( - 1 )  VAR_3 . METHOD_3 ( VAR_2 , 0 , count )  return VAR_3 . METHOD_4 ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 NAME VAR_1 COND ( VAR_3 ) == null  TYPE_1 . METHOD_2 ( VAR_1 )  return VAR_3 ; COND ( VAR_5 ) == null  TYPE_1 . METHOD_2 ( VAR_1 )  return VAR_5 ; BLOCK BLOCK  return TYPE_1 . METHOD_1 ( ) ;
MODIFIER MODIFIER RETURN boolean NAME start COND ( ( ( VAR_1 ) != null ) && ( ( VAR_2 ) != null ) ) && ( ( ! ( VAR_3 ) ) || ( ! ( METHOD_1 ( ) ) ) )  return false ;  VAR_4 = true  VAR_5 = new TYPE_1 ( this )  VAR_5 . start ( )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME session TYPE long NAME s TYPE long NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME fd TYPE TYPE_3 NAME callback TYPE byte[] NAME VAR_2 INIT = new byte [ 1 ]  TYPE_4 . METHOD_2 ( s , fd , callback , VAR_2 , 0 , 1 , 0 )  assertEquals ( INT_1 , VAR_2 [ 0 ] )  super . METHOD_1 ( session , s , c , VAR_1 , fd , callback )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  METHOD_2 ( VAR_1 , false ) TYPE int NAME VAR_2 INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND VAR_2 >= 0 COND VAR_4  android.util.Log.v ( TYPE_2 . TAG , ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_1 ) )  VAR_3 . METHOD_4 ( VAR_2 )  METHOD_5 ( VAR_2 , VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE byte[] NAME VAR_2 COND ( null == VAR_2 ) || ( 0 >= ( VAR_2 . length ) )  throw new java.lang.IllegalArgumentException ( STRING_1 ) ; COND ( METHOD_2 ( ) ) == ( VAR_3 )  throw new TYPE_2 ( STRING_2 ) ;  return METHOD_3 ( VAR_4 , VAR_1 , VAR_2 ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME fd  fd = VAR_2 . METHOD_1 ( VAR_3 , ( VAR_1 ? VAR_4 : VAR_5 ) , 0 ) COND ! VAR_1  VAR_2 . METHOD_2 ( fd , VAR_6 , VAR_7 , 1 )  return fd ; TYPE TYPE_3 NAME VAR_8  throw VAR_8 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 , STRING_1 , STRING_2 , STRING_3 )  VAR_1 . METHOD_2 ( VAR_3 )  assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )  assertEquals ( VAR_4 , VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1  server . METHOD_2 ( new TYPE_1 ( ) . METHOD_3 ( STRING_1 ) )  server . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( server . METHOD_5 ( STRING_2 ) . METHOD_6 ( ) ) ) TYPE TYPE_3 NAME in INIT = ( ( TYPE_3 ) ( VAR_1 . METHOD_7 ( ) ) )  assertEquals ( STRING_1 , METHOD_8 ( in , VAR_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( server . METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) )  VAR_2 . METHOD_4 ( VAR_1 )  assertEquals ( VAR_1 , VAR_2 . METHOD_5 ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME element COND ( TYPE_3 . METHOD_2 ( element ) ) && ( TYPE_3 . METHOD_3 ( element ) )  context . METHOD_4 ( VAR_1 , element , context . METHOD_5 ( element ) , STRING_1 , null )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME is INIT = new TYPE_1 ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( is ) COND true TYPE java.lang.String NAME line INIT = VAR_2 . METHOD_2 ( ) COND line != null  VAR_3 . METHOD_3 ( STRING_1 , VAR_4 , line )  break ; TYPE java.io.IOException NAME e BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME address TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE byte[] NAME value TYPE TYPE_1 NAME service INIT = METHOD_2 ( ) COND service == null  return ;  service . METHOD_1 ( VAR_1 , address , VAR_2 , VAR_3 , VAR_4 , value )
MODIFIER public RETURN void NAME run TYPE int NAME i TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( i ) TYPE int NAME j INIT = 0 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 , 0 , ( ( VAR_5 * VAR_6 ) / 2 ) ) , null , null , null , null ) COND VAR_3 . METHOD_3 ( )  ++ j
MODIFIER private RETURN void NAME METHOD_1 COND TYPE_1 . METHOD_2 ( VAR_1 )  throw new TYPE_2 ( ( ( TYPE_1 . METHOD_3 ( VAR_2 ) ? STRING_1 : STRING_2 ) + STRING_3 ) ) ;  VAR_3 . METHOD_4 ( VAR_1 , VAR_4 )  VAR_5 . METHOD_5 ( VAR_6 )  VAR_5 . METHOD_6 ( )  METHOD_7 ( )  METHOD_8 ( )  VAR_3 . METHOD_9 ( VAR_1 , VAR_7 )  VAR_5 . METHOD_10 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , null , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_3 . of ( ) )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( STRING_3 )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_4 ) ) . METHOD_4 ( STRING_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_2 )  return ;  METHOD_4 ( ) . METHOD_1 ( VAR_1 , mContext . METHOD_5 ( ) , VAR_2 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER private RETURN boolean NAME run TYPE TYPE_1 NAME run INIT = new TYPE_1 ( this ) COND ( VAR_1 . length ) > 0  VAR_2 . METHOD_1 ( ( STRING_1 + ( TYPE_2 . METHOD_2 ( STRING_2 , VAR_1 ) ) ) )  return VAR_3 . METHOD_3 ( VAR_4 , VAR_5 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME i INIT = 0 COND i <= 100  ++ i  Main . METHOD_2 ( VAR_1 ) COND ( i % 10 ) == 0  TYPE_2 . METHOD_3 ( ) . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 )  VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_1 ) )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_4 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_3 ( ) )  VAR_1 . METHOD_2 ( new TYPE_2 ( STRING_2 ) )  VAR_1 . METHOD_4 ( )  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME key TYPE int NAME i INIT = TYPE_1 . METHOD_2 ( VAR_1 , 0 , VAR_2 , key ) COND i >= 0 COND ( VAR_3 [ i ] ) != ( VAR_4 )  VAR_3 [ i ] = VAR_4  VAR_5 = true
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 MODIFIER public RETURN java.lang.String NAME METHOD_2  return VAR_1 ; MODIFIER protected RETURN void NAME METHOD_3 BLOCK BLOCK INIT = new TYPE_1 ( VAR_3 , new TYPE_2 ( STRING_1 ) , VAR_4 , new TYPE_2 ( STRING_2 ) , VAR_5 , STRING_3 ) { public java.lang.String METHOD_2 ( ) { return VAR_1 ; } protected void METHOD_3 ( ) { } }  VAR_2 . METHOD_4 ( VAR_6 , new TYPE_2 ( STRING_4 ) )  return VAR_2 ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( this ) COND ( VAR_2 ) == ( VAR_3 ) TYPE java.lang.Object NAME value IN METHOD_3 ( ) COND value instanceof TYPE_2 COND ! ( VAR_4 )  ( ( TYPE_2 ) ( value ) ) . METHOD_4 ( this )  VAR_1 . METHOD_5 ( ( ( TYPE_2 ) ( value ) ) )  VAR_4 = true
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_3 ) + STRING_5 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 )  VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , true )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_6 ) ) , VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME args COND ! ( TYPE_1 . METHOD_2 ( args ) )  TYPE_1 . METHOD_3 ( )  TYPE_2 . METHOD_4 ( ( - 1 ) ) TYPE long NAME start INIT = TYPE_2 . METHOD_5 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( false )  VAR_1 . METHOD_6 ( ) TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_5 ( )  java.lang.System.out.println ( ( STRING_1 + ( ( VAR_2 - start ) / INT_1 ) ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME path  VAR_1 = TYPE_1 . METHOD_2 ( path ) TYPE TYPE_2 NAME VAR_2  return false ;  METHOD_3 ( )  return true ; TYPE java.lang.Exception NAME ex  VAR_1 . METHOD_4 ( ) TYPE TYPE_2 NAME VAR_3 BLOCK BLOCK  TYPE_3 . METHOD_5 ( ( ( STRING_1 + path ) + STRING_2 ) , ex )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 COND ( ( ( VAR_3 ) == null ) || ( VAR_1 == null ) ) || ( ( VAR_4 . METHOD_2 ( ) ) != ( VAR_1 . METHOD_2 ( ) ) )  android.util.Slog.w ( VAR_5 . TAG , ( STRING_1 + VAR_1 ) )  VAR_6 . METHOD_3 ( VAR_7 )
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME uid TYPE int NAME VAR_1 TYPE int[] NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int[][] NAME VAR_4 TYPE int NAME VAR_5 INIT = ( VAR_3 ) ? VAR_6 : 0  return TYPE_1 . METHOD_2 ( uid , VAR_1 , VAR_2 , VAR_5 , VAR_4 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2[] NAME VAR_2 TYPE TYPE_2 NAME VAR_3 IN VAR_2 COND ( ( ( VAR_4 ) == false ) || ( ( VAR_3 . METHOD_2 ( ) ) == false ) ) && ( ( VAR_3 . METHOD_3 ( ) ) == false )  VAR_1 . METHOD_4 ( VAR_3 . METHOD_5 ( ) )
MODIFIER static RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_2 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  return ;  VAR_6 . append ( new TYPE_3 . Float ( VAR_7 , VAR_8 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) , false )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 COND ( ( null == path ) || ( path . equals ( STRING_1 ) ) ) && ( ( null == VAR_1 ) || ( VAR_1 . equals ( STRING_1 ) ) )  throw new java.lang.IllegalArgumentException ( STRING_2 ) ; COND ( VAR_2 ) == ( METHOD_2 ( ) )  throw new TYPE_1 ( STRING_3 ) ;  return METHOD_3 ( VAR_3 , path , VAR_1 ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME c TYPE int NAME s INIT = super . METHOD_1 ( c )  TYPE_2 . METHOD_2 ( s , TYPE_3 . METHOD_3 ( ) )  TYPE_2 . METHOD_4 ( s , ( ( VAR_1 ) | ( VAR_2 ) ) )  return s ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE java.lang.String NAME name MODIFIER public RETURN boolean NAME METHOD_3  return false ; MODIFIER public RETURN void NAME METHOD_4 TYPE java.lang.String[] NAME VAR_1 TYPE java.lang.String NAME line IN VAR_1 COND ! ( line . METHOD_5 ( ) )  device . METHOD_6 ( name , line )  device . METHOD_2 ( ( STRING_1 + name ) , new TYPE_5 ( ) { public boolean METHOD_3 ( ) { return false ; } public void METHOD_4 ( java.lang.String [ ] VAR_1 ) { for ( java.lang.String line : VAR_1 ) { if ( ! ( line . METHOD_5 ( ) ) ) { device . METHOD_6 ( name , line ) ; } } } } )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME type NAME type  VAR_3 . METHOD_1 ( VAR_1 )  break ;  VAR_3 . METHOD_2 ( VAR_1 )  break ;  VAR_3 . METHOD_3 ( VAR_1 )  break ; TYPE java.io.IOException NAME e  TYPE_2 . log ( VAR_6 , ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + type ) , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 . getName ( ) , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) , VAR_2 . METHOD_6 ( ) ) COND ( VAR_1 . METHOD_7 ( ) ) == ( VAR_4 ) TYPE TYPE_3 NAME config INIT = new TYPE_3 ( )  VAR_1 . METHOD_8 ( config )  METHOD_9 ( config )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method COND ( ( ( method . METHOD_1 ( ) . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_1 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ;  new TYPE_1 ( ) . METHOD_5 ( method )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.Object> NAME VAR_1 INIT = new TYPE_1 < java.lang.Object > ( ) TYPE java.lang.Object NAME a INIT = new java.lang.Object ( )  TYPE_2 . assertTrue ( VAR_1 . METHOD_2 ( a ) )  TYPE_2 . assertFalse ( VAR_1 . METHOD_2 ( a ) ) TYPE java.lang.Object NAME b INIT = new java.lang.Object ( )  TYPE_2 . assertTrue ( VAR_1 . METHOD_2 ( b ) )  TYPE_2 . assertFalse ( VAR_1 . METHOD_2 ( null ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE int NAME n INIT = 0 COND n < ( VAR_1 . length ( ) )  n ++ COND ( VAR_1 . METHOD_2 ( n ) ) != 0  return VAR_1 ;  return STRING_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME rr INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND rr != null TYPE TYPE_4 NAME ret INIT = null COND ( VAR_1 . error ) == ( VAR_4 )  ret = TYPE_5 . METHOD_3 ( VAR_2 , VAR_3 )  TYPE_6 . METHOD_4 ( VAR_5 , ret )  VAR_3 . METHOD_5 ( rr , VAR_1 , ret )
MODIFIER public final RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3<?superTYPE_2> NAME action  TYPE_4 . METHOD_2 ( action ) MODIFIER MODIFIER RETURN TYPE_6<TYPE_2> NAME METHOD_3 TYPE int NAME flags TYPE TYPE_6<TYPE_2> NAME VAR_2 MODIFIER public RETURN void NAME METHOD_4 TYPE TYPE_2 NAME VAR_3  action . METHOD_4 ( VAR_3 )  VAR_4 . METHOD_4 ( VAR_3 )  return new TYPE_7 < TYPE_2 , TYPE_2 > ( VAR_2 ) { public void METHOD_4 ( TYPE_2 VAR_3 ) { action . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; } } ;  return new TYPE_5 < TYPE_2 , TYPE_2 > ( this , VAR_1 , 0 ) { TYPE_6 < TYPE_2 > METHOD_3 ( int flags , TYPE_6 < TYPE_2 > VAR_2 ) { return new TYPE_7 < TYPE_2 , TYPE_2 > ( VAR_2 ) { public void METHOD_4 ( TYPE_2 VAR_3 ) { action . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; } } ; } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( VAR_2 ) TYPE TYPE_3 NAME VAR_4 INIT = this . VAR_4 TYPE int NAME VAR_5 INIT = ( METHOD_4 ( VAR_1 , VAR_4 ) ) ? VAR_6 : VAR_7 COND VAR_3 < VAR_5  VAR_8 = TYPE_2 . METHOD_5 ( VAR_2 , TYPE_2 . METHOD_6 ( VAR_5 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1  mRS . METHOD_2 ( ) TYPE int NAME id INIT = mRS . METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 ) TYPE TYPE_1 NAME VAR_10 INIT = new TYPE_1 ( id , mRS )  VAR_11 = VAR_12  VAR_13 = VAR_5  VAR_14 = VAR_1  VAR_15 = VAR_2  VAR_16 = VAR_3  VAR_17 = VAR_4  VAR_18 = VAR_19  VAR_20 = VAR_21  VAR_22 = VAR_6  return VAR_10 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 )  return ;  METHOD_4 ( ) . METHOD_1 ( mContext . METHOD_5 ( ) , VAR_1 ) TYPE android.os.RemoteException NAME e  throw e . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME device TYPE TYPE_2 NAME VAR_1 TYPE TYPE_6<java.lang.String,java.lang.String> NAME entry IN TYPE_7 . METHOD_2 ( )  VAR_1 . METHOD_3 ( entry . METHOD_4 ( ) , TYPE_8 . METHOD_5 ( STRING_1 , device . METHOD_6 ( entry . METHOD_7 ( ) ) ) )  device . METHOD_8 ( STRING_2 )  device . METHOD_8 ( STRING_3 )
MODIFIER public RETURN void NAME run COND ( VAR_1 ) == 0  VAR_2 = TYPE_1 . METHOD_1 ( )  VAR_3 = ( TYPE_1 . METHOD_1 ( ) ) - ( ( VAR_2 ) + ( 100 * ( VAR_1 ) ) )  ( VAR_1 ) ++ COND ( VAR_1 ) == 2  TYPE_2 . METHOD_2 ( INT_1 ) TYPE TYPE_3 NAME e BLOCK BLOCK
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = 1  VAR_1 = ( VAR_1 * INT_1 ) + ( ( int ) ( VAR_2 ) )  VAR_1 = ( VAR_1 * INT_2 ) + ( ( int ) ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_2 ( ) ) )  return VAR_1 ;
MODIFIER static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 ) COND VAR_3 == null  return 0 ;  VAR_5 = TYPE_2 . METHOD_2 ( VAR_2 )  VAR_3 . METHOD_3 ( )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE long NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN boolean NAME METHOD_1 COND ! ( VAR_1 . METHOD_2 ( true ) )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) COND ! ( METHOD_3 ( VAR_2 ) ) COND VAR_3  log ( VAR_2 . METHOD_4 ( ) )  return false ; TYPE TYPE_2 NAME VAR_4 IN VAR_5 . values ( ) COND METHOD_5 ( VAR_4 )  return true ;  return false ;
MODIFIER public RETURN int NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  return - 1 ;  VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 , 0 , false ) COND VAR_3 == null  return - 1 ;  return VAR_3 . userId ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) )  assertEquals ( CHAR_1 , VAR_1 . METHOD_3 ( ) )  assertEquals ( CHAR_2 , VAR_1 . METHOD_4 ( ) )  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_2 ) )  assertEquals ( CHAR_3 , VAR_1 . METHOD_3 ( ) )  assertEquals ( CHAR_4 , VAR_1 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  METHOD_2 ( TYPE_1 . METHOD_4 ( ) )  METHOD_2 ( TYPE_1 . METHOD_5 ( ) )  assertFalse ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) TYPE TYPE_2 NAME app INIT = new TYPE_2 ( )  app . uid = VAR_2  app . packageName = VAR_3  assertTrue ( VAR_1 . METHOD_8 ( app ) )  assertTrue ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 < 0  VAR_1 = 0 COND VAR_1 != ( VAR_2 )  VAR_2 = VAR_1  METHOD_2 ( ) COND ( VAR_3 ) > VAR_1  VAR_3 = VAR_1  METHOD_3 ( VAR_4 , VAR_3 , false )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE long NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE byte[] NAME VAR_3 INIT = VAR_4 . METHOD_3 ( ) TYPE byte[] NAME VAR_5 INIT = VAR_6 . METHOD_3 ( ) TYPE long NAME VAR_7 INIT = ( VAR_2 . METHOD_2 ( ) ) - VAR_1  android.util.Log.d ( VAR_8 . TAG , ( ( STRING_1 + VAR_7 ) + STRING_2 ) )  return TYPE_1 . METHOD_4 ( VAR_3 , VAR_5 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME device TYPE java.lang.String NAME project TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME packageName TYPE int NAME pos INIT = VAR_1 . METHOD_2 ( STRING_1 ) COND pos != ( - 1 )  packageName = VAR_1 . METHOD_3 ( 0 , pos )  packageName = STRING_2  return METHOD_4 ( packageName , device , project , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Throwable NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = METHOD_2 ( VAR_2 )  TYPE_1 . log ( VAR_3 , STRING_1 , VAR_5 , VAR_4 ) COND VAR_3 != null  VAR_6 = true  METHOD_3 ( VAR_1 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  assertEquals ( STRING_1 , ( - 1 ) , VAR_1 . METHOD_2 ( ) ) TYPE int NAME VAR_2 INIT = INT_1  VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , VAR_2 )  assertEquals ( STRING_2 , VAR_2 , VAR_1 . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2  assertEquals ( STRING_3 , VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) )  VAR_1 = STRING_4  VAR_2 = STRING_5  assertEquals ( STRING_3 , VAR_2 , TYPE_1 . METHOD_2 ( VAR_1 ) )
MODIFIER public RETURN boolean NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( context ) )  return false ;  return ( ( ( ( ( ! ( METHOD_3 ( ) ) ) && ( ! ( METHOD_4 ( ) ) ) ) && ( ! ( METHOD_5 ( ) ) ) ) && ( ! ( METHOD_6 ( ) ) ) ) && ( ! ( METHOD_7 ( ) ) ) ) && ( ! ( METHOD_8 ( ) ) ) ;
MODIFIER public static RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . get ( VAR_3 , STRING_1 ) TYPE TYPE_1<java.lang.String> NAME VAR_4 INIT = new TYPE_4 < java.lang.String > ( ) COND VAR_2 . METHOD_3 ( )  return VAR_4 ; TYPE TYPE_5 NAME VAR_5 INIT = TYPE_5 . on ( VAR_6 ) . METHOD_4 ( ) TYPE java.lang.String NAME VAR_7 IN VAR_5 . METHOD_5 ( VAR_2 )  VAR_4 . METHOD_6 ( VAR_7 )  return VAR_4 ;
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( entry ) - > entry . getName ( ) . METHOD_4 ( STRING_1 ) ) . METHOD_5 ( TYPE_4 . METHOD_6 ( TYPE_2 : : getName ) ) . METHOD_7 ( TYPE_1 . METHOD_8 ( TYPE_1 ) ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.StringBuilder NAME sb INIT = new java.lang.StringBuilder ( ) TYPE byte NAME b COND ( b = VAR_1 . get ( VAR_2 ) ) != 0  ++ VAR_2  sb.append ( ( ( char ) ( b ) ) )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME listener INIT = new TYPE_1 ( 0 ) TYPE TYPE_2<TYPE_3> NAME VAR_1 INIT = METHOD_2 ( listener , VAR_2 ) TYPE TYPE_2<TYPE_3> NAME VAR_3 INIT = METHOD_2 ( listener , VAR_4 ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_1 . get ( VAR_6 , VAR_7 ) TYPE TYPE_3 NAME server INIT = VAR_3 . get ( VAR_6 , VAR_7 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND ! ( TYPE_2 . METHOD_2 ( VAR_3 ) )  android.util.Log.w ( TYPE_3 . TAG , STRING_1 )  return false ; TYPE TYPE_3 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_4 ( device , VAR_1 , VAR_2 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE android.content.Intent NAME VAR_4 INIT = new android.content.Intent ( VAR_5 ) TYPE byte[][] NAME VAR_6 INIT = new byte [ 2 ] [ ]  VAR_6 [ 0 ] = VAR_7  VAR_6 [ 1 ] = VAR_8  VAR_4 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( VAR_6 , VAR_2 , VAR_3 ) )  VAR_1 . METHOD_4 ( VAR_4 , VAR_9 , VAR_10 , VAR_11 , null , null , VAR_12 , null , null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.Class<?> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 TYPE int NAME VAR_6 TYPE boolean NAME VAR_7 TYPE java.lang.String[] NAME args COND VAR_8 . METHOD_2 ( VAR_3 )  return new TYPE_5 ( VAR_1 , VAR_7 , VAR_3 , args ) ;  return null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE int NAME index INIT = METHOD_2 ( VAR_1 , true ) COND index >= 0 TYPE TYPE_1 NAME r INIT = ( ( TYPE_1 ) ( VAR_2 . get ( index ) ) ) COND r != null  return VAR_3 ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE java.io.File NAME VAR_2 INIT = new java.io.File ( VAR_3 , VAR_4 ) COND VAR_2 . METHOD_2 ( )  VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 , false )  VAR_5 . METHOD_4 ( this , VAR_3 , ( STRING_1 + ( VAR_3 . METHOD_5 ( ) ) ) )  return null ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context  VAR_1 = TYPE_2 . get ( context . METHOD_2 ( ) ) COND ! ( VAR_2 )  VAR_2 = true  context . METHOD_3 ( VAR_3 , TYPE_3 . METHOD_4 ( VAR_4 ) , STRING_1 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME server INIT = new TYPE_1 ( 0 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , server . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( INT_1 )  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_5 ( ) ) >= INT_1 ) )  VAR_1 . METHOD_6 ( )  server . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 ) TYPE int NAME i INIT = 0 COND i < ( VAR_2 )  ++ i TYPE java.lang.Integer NAME VAR_3 INIT = new java.lang.Integer ( i )  VAR_1 . METHOD_2 ( VAR_3 )  assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) )  assertEquals ( 0 , VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_2 ( new java.lang.Integer ( VAR_2 ) )  METHOD_5 ( ) TYPE TYPE_2 NAME VAR_4 BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 INIT = ( TYPE_2 . METHOD_2 ( ) ) - ( VAR_3 ) TYPE boolean NAME VAR_4 INIT = VAR_2 < ( TYPE_3 . METHOD_3 ( ) ) TYPE boolean NAME VAR_5 INIT = VAR_1 == ( VAR_6 ) TYPE int NAME VAR_7 INIT = TYPE_4 . METHOD_4 ( VAR_4 , VAR_5 )  VAR_8 . log ( new TYPE_4 ( VAR_9 , VAR_7 ) )
MODIFIER private static RETURN long NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 TYPE long NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( VAR_1 ) COND VAR_3 >= VAR_2  throw new TYPE_2 ( ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) + VAR_2 ) ) ; TYPE long NAME VAR_4 INIT = TYPE_3 . METHOD_3 ( VAR_1 ) COND ( VAR_3 + VAR_4 ) != VAR_2  throw new TYPE_2 ( ( STRING_3 + STRING_4 ) ) ;  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) COND VAR_2 != null TYPE java.lang.String NAME pkg IN VAR_2  this COND METHOD_3 ( pkg , ( - 1 ) , false , false , false )  METHOD_4 ( VAR_4 )  return ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE long NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME key INIT = ( ( VAR_2 . METHOD_3 ( ) ) + STRING_1 ) + VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = TYPE_4 . get ( key ) COND VAR_4 == null  VAR_4 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) TYPE TYPE_5 NAME e  VAR_4 = new TYPE_1 ( VAR_5 , null )  TYPE_4 . METHOD_5 ( key , VAR_4 )  return VAR_4 ;
MODIFIER private RETURN TYPE_1[] NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 . METHOD_3 ( new TYPE_3 ( TYPE_4 . METHOD_4 ( ) ) ) ) ) TYPE TYPE_1[] NAME VAR_3 INIT = new TYPE_1 [ ] { VAR_2 }  return VAR_3 ; TYPE java.lang.Exception NAME ex  fail ( ( STRING_2 + ex ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( false , METHOD_4 ( ) )  assertTrue ( VAR_3 . METHOD_5 ( VAR_4 ) )  assertFalse ( VAR_5 . METHOD_6 ( ) )  assertFalse ( VAR_2 . METHOD_6 ( ) )  VAR_3 . METHOD_7 ( VAR_4 )  VAR_6 . METHOD_8 ( )  assertTrue ( VAR_5 . METHOD_6 ( ) )  assertTrue ( VAR_2 . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE byte[] NAME data TYPE int NAME offset TYPE int NAME length COND ! ( METHOD_2 ( ) ) TYPE java.lang.String NAME s INIT = null  s = new java.lang.String ( data , offset , length , STRING_1 ) TYPE TYPE_1 NAME e  s = new java.lang.String ( data , offset , length )  VAR_1 . append ( s )
MODIFIER public RETURN void NAME METHOD_1  s = new TYPE_1 ( STRING_1 )  s . METHOD_2 ( ( ( VAR_1 ) - 1 ) )  fail ( STRING_2 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  s . METHOD_2 ( ( ( VAR_2 ) + 1 ) )  fail ( STRING_2 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK  s . METHOD_2 ( 11 )  assertEquals ( 11 , s . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME b INIT = METHOD_2 ( STRING_2 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( a , b , VAR_2 ) . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( a , VAR_1 , VAR_2 )  VAR_3 . METHOD_3 ( )  fail ( ) TYPE TYPE_3 NAME expected  assertEquals ( STRING_3 , expected . getMessage ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.lang.Integer[] NAME VAR_2 INIT = new java.lang.Integer [ VAR_3 ]  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) )  METHOD_5 ( ) TYPE java.lang.NullPointerException NAME VAR_4 BLOCK BLOCK
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 COND VAR_1 COND ( VAR_2 ) || ( VAR_3 )  android.util.Log.v ( VAR_4 . TAG , ( STRING_1 + ( VAR_5 ) ) )  VAR_6 = true  VAR_1 = false  return true ;  return false ;
MODIFIER public static RETURN java.lang.Integer NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.Integer NAME VAR_2 TYPE java.lang.String NAME v INIT = null  v = TYPE_1 . METHOD_2 ( VAR_1 ) TYPE java.lang.IllegalArgumentException NAME e BLOCK BLOCK TYPE java.lang.NullPointerException NAME e BLOCK BLOCK COND v != null  return java.lang.Integer . METHOD_3 ( v ) ; TYPE TYPE_2 NAME e BLOCK BLOCK  return VAR_2 ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE long NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = ( ( VAR_4 ) >= ( VAR_5 ) ) ? TYPE_2 : VAR_6  return VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_7 , java.lang.String . METHOD_5 ( VAR_2 ) ) . METHOD_4 ( VAR_8 , STRING_1 ) . METHOD_4 ( VAR_9 , VAR_10 ) . build ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE TYPE_2 NAME VAR_5 TYPE int NAME VAR_6 TYPE int NAME VAR_7 TYPE TYPE_4 NAME callback  METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , callback , new TYPE_5 ( TYPE_6 . METHOD_2 ( ) ) )
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3  VAR_4 . info ( STRING_1 )  VAR_1 . METHOD_2 ( VAR_5 )  METHOD_3 ( VAR_1 , 0 , VAR_6 )  METHOD_4 ( )  VAR_4 . METHOD_5 ( STRING_2 )  VAR_4 . info ( STRING_3 )  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  METHOD_3 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 , STRING_15 , STRING_16 , STRING_17 , STRING_18 , STRING_19 , STRING_20 , STRING_21 , STRING_22 , STRING_23 , STRING_24 , STRING_25 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 COND METHOD_2 ( VAR_1 )  return true ; COND VAR_2 == null  return false ;  return METHOD_1 ( TYPE_1 . METHOD_3 ( VAR_1 ) , VAR_2 , 0 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 . METHOD_2 ( this )  VAR_1 . METHOD_3 ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 IN VAR_4 COND VAR_3 == null  throw new java.lang.RuntimeException ( STRING_1 ) ;  VAR_1 . METHOD_3 ( VAR_3 )  VAR_1 . METHOD_4 ( this )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( event . METHOD_3 ( ) ) COND VAR_1 != null TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( VAR_3 . METHOD_4 ( ) ) ) COND VAR_2 != null  VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) )
MODIFIER synchronized RETURN void NAME METHOD_1 TYPE int NAME id TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE int NAME w TYPE int NAME h TYPE int[] NAME d TYPE int NAME VAR_5  METHOD_2 ( )  METHOD_3 ( mContext , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , w , h , d , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = ( VAR_1 . METHOD_2 ( ) ) ? TYPE_1 . METHOD_3 ( ) : VAR_1 COND ( VAR_5 ) && ( METHOD_4 ( ) )  METHOD_5 ( VAR_1 , VAR_2 , 0 )  TYPE_2 . METHOD_1 ( fd , VAR_4 , VAR_2 , VAR_3 )  super . address = VAR_4  super . VAR_6 = VAR_2
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME res TYPE TYPE_2 NAME VAR_2 COND VAR_2 != null  return VAR_2 . toString ( ) ; TYPE TYPE_3 NAME r INIT = METHOD_2 ( VAR_1 ) COND r != null  return r . METHOD_3 ( res ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_2 ( 3 ) . METHOD_2 ( 1 , 2 ) . METHOD_2 ( 2 , 3 ) . METHOD_2 ( 3 , 1 ) . METHOD_3 ( 1 ) . METHOD_4 ( )  assertEquals ( 6 , VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) )  assertEquals ( 6 , VAR_1 . METHOD_5 ( 2 ) . METHOD_6 ( ) )  assertEquals ( 6 , VAR_1 . METHOD_5 ( 3 ) . METHOD_6 ( ) )
MODIFIER public RETURN void NAME run TYPE com.android.jack.ir.ast.JMethod NAME method TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_1 INIT = method . METHOD_1 ( ) COND ( ( ( VAR_1 . METHOD_2 ( ) ) || ( method . METHOD_3 ( ) ) ) || ( method . METHOD_4 ( ) ) ) || ( ! ( VAR_2 . METHOD_5 ( this . METHOD_6 ( ) , method ) ) )  return ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( method )  VAR_3 . METHOD_5 ( method )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 )  VAR_3 = true  VAR_4 . METHOD_3 ( VAR_5 , METHOD_4 ( VAR_6 , new TYPE_1 ( ) ) )  ( VAR_7 ) ++  VAR_4 . METHOD_3 ( VAR_8 , METHOD_4 ( VAR_6 , new TYPE_2 ( ) ) )  ( VAR_7 ) ++
MODIFIER private RETURN int NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE int NAME VAR_4  VAR_4 = TYPE_1 . METHOD_2 ( path , VAR_1 , VAR_2 , VAR_3 ) TYPE java.io.IOException NAME VAR_5  android.util.Slog.w ( VAR_6 . TAG , ( STRING_1 + path ) , VAR_5 )  return VAR_7 ;  return METHOD_3 ( VAR_4 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in TYPE TYPE_3 NAME address INIT = null TYPE int NAME VAR_1 INIT = 0 COND ( in . METHOD_2 ( ) ) == 1  address = TYPE_3 . METHOD_3 ( in . METHOD_4 ( ) )  VAR_1 = in . METHOD_5 ( ) TYPE TYPE_4 NAME e BLOCK BLOCK  return new TYPE_1 ( address , VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND ( METHOD_2 ( ) ) == false  android.util.Log.e ( android.bluetooth.BluetoothDevice . TAG , STRING_1 )  throw new java.io.IOException ( ) ;  return new TYPE_1 ( VAR_2 , ( - 1 ) , true , true , this , VAR_1 , null ) ;
MODIFIER public RETURN java.lang.String NAME toString TYPE TYPE_1 NAME sb INIT = new TYPE_1 ( ( ( ( size ) * 5 ) + 10 ) )  sb.append ( CHAR_1 ) TYPE int NAME i INIT = 0 COND i < ( size )  i ++ COND i != 0  sb.append ( STRING_1 )  sb.append ( values [ i ] )  sb.append ( CHAR_2 )  return sb . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( ) . toString ( ) , VAR_2 ) ) ) COND VAR_1 == null  errln ( STRING_2 ) TYPE TYPE_3 NAME ex  METHOD_4 ( ( STRING_3 + ( ex . getMessage ( ) ) ) )
MODIFIER static RETURN java.lang.String NAME METHOD_1 TYPE char[][] NAME name TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE int NAME i INIT = 0 COND i < ( name . length )  ++ i COND i > 0  result . append ( CHAR_1 )  result . append ( name [ i ] )  return result . toString ( ) ;
MODIFIER public RETURN boolean NAME equals TYPE java.lang.Object NAME VAR_1 COND VAR_1 == ( this )  return true ; COND ! ( VAR_1 instanceof TYPE_1 )  return false ; TYPE TYPE_1 NAME VAR_2 INIT = ( ( TYPE_1 ) ( VAR_1 ) )  return ( ( this . VAR_3 ) == ( VAR_4 ) ) && ( TYPE_2 . equals ( this . entry . METHOD_1 ( ) , VAR_5 . METHOD_1 ( ) ) ) ;
MODIFIER public RETURN byte[] NAME METHOD_1 COND ( ( VAR_1 . equals ( VAR_2 ) ) || ( VAR_1 . equals ( VAR_3 ) ) ) || ( VAR_1 . equals ( VAR_4 ) ) COND ( content ) == null  return null ;  return content . METHOD_2 ( ) ;  throw new java.io.IOException ( ( STRING_1 + ( VAR_1 ) ) ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME a TYPE int NAME b TYPE int NAME c TYPE int[] NAME values INIT = new int [ ] { a , b , c }  VAR_1 . println ( ( ( STRING_1 + ( TYPE_1 . toString ( values ) ) ) + STRING_2 ) )  return a > b ? a : b ;
MODIFIER private RETURN TYPE_1<?> NAME METHOD_1 TYPE long NAME VAR_1 INIT = VAR_2 . get ( )  METHOD_2 ( VAR_3 ) COND ( METHOD_3 ( ) ) && ( ( VAR_2 . get ( ) ) == VAR_1 ) TYPE TYPE_1<?> NAME VAR_4 INIT = VAR_5  METHOD_2 ( VAR_6 ) COND ( METHOD_3 ( ) ) && ( ( VAR_2 . get ( ) ) == VAR_1 )  return VAR_4 ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  android.util.Log.d ( VAR_2 . TAG , ( ( STRING_1 + ( VAR_3 ) ) + STRING_2 ) ) COND METHOD_2 ( VAR_3 ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( VAR_3 , false )  VAR_5 = true  METHOD_3 ( VAR_4 ) TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( VAR_3 )  VAR_5 = true  METHOD_4 ( VAR_4 )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE float NAME x COND VAR_1  throw new TYPE_2 ( ) ; COND ! ( VAR_2 )  throw new TYPE_3 ( STRING_1 ) ;  METHOD_1 ( METHOD_2 ( METHOD_3 ( VAR_3 ) ) , x )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE android.os.Message NAME msg NAME VAR_1 COND ( VAR_3 ) != null  VAR_3 . METHOD_2 ( )  break ;  METHOD_3 ( )  VAR_5 . METHOD_4 ( )  break ;  METHOD_5 ( )  break ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_4 NAME location INIT = VAR_2 . METHOD_2 ( ) TYPE java.lang.Object NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) COND VAR_4 instanceof TYPE_5 COND context . METHOD_4 ( ) . METHOD_5 ( null , VAR_1 , ( ( TYPE_5 ) ( VAR_4 ) ) )  return ;  context . METHOD_1 ( VAR_1 , location , VAR_3 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE android.content.Intent NAME VAR_1 TYPE java.lang.String[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 ) COND VAR_2 != null TYPE java.lang.String NAME pkg IN VAR_2 COND METHOD_3 ( pkg , ( - 1 ) , false , false , false )  METHOD_4 ( VAR_4 )  return ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_3 IN VAR_4  new TYPE_4 ( VAR_2 , VAR_5 , VAR_1 , VAR_3 , VAR_6 ) . METHOD_4 ( )  VAR_2 . METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 , VAR_2 )  VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) TYPE TYPE_4 NAME e BLOCK BLOCK TYPE TYPE_5 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_1 != null  VAR_3 . METHOD_3 ( VAR_1 . length ( ) )  VAR_4 = VAR_1 COND VAR_2 && ( ! ( TYPE_2 . METHOD_4 ( VAR_1 ) ) )  METHOD_5 ( )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE TYPE_2 NAME v TYPE int NAME value TYPE boolean NAME VAR_1 TYPE boolean NAME VAR_2 INIT = false COND v == null  m . METHOD_2 ( value )  m . METHOD_2 ( v , value ) TYPE TYPE_3 NAME e  VAR_2 = true  TYPE_4 . assertEquals ( VAR_2 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE android.bluetooth.BluetoothDevice NAME device TYPE int NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  android.util.Log.w ( TYPE_2 . TAG , STRING_1 )  return false ; TYPE TYPE_2 NAME service INIT = METHOD_3 ( ) COND service == null  return false ;  return service . METHOD_1 ( device , VAR_1 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 COND ( VAR_3 ) <= 0  return VAR_4 ;  VAR_5 = ( ( VAR_6 ) & ( VAR_7 ) ) == ( VAR_7 )  VAR_6 &= ~ ( VAR_7 ) TYPE long NAME VAR_8 INIT = METHOD_2 ( )  VAR_2 . METHOD_3 ( )  TYPE_4 . METHOD_4 ( VAR_9 , STRING_1 ) TYPE TYPE_1 NAME VAR_10 INIT = VAR_1 . METHOD_5 ( )  TYPE_4 . METHOD_6 ( VAR_9 )  METHOD_7 ( VAR_8 )  return VAR_10 ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  TYPE_1 . d ( VAR_1 , ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + ( VAR_3 ) ) ) COND ( ! ( VAR_2 ) ) && ( ! ( VAR_4 . METHOD_2 ( VAR_3 ) ) )  METHOD_3 ( VAR_5 , false )  METHOD_4 ( ) COND ( VAR_6 ) != null  METHOD_5 ( VAR_6 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.util.Map NAME VAR_1 TYPE java.util.Map NAME VAR_2 COND VAR_1 . equals ( VAR_2 )  return ; TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( ) TYPE java.util.Set NAME VAR_4 INIT = VAR_1 . METHOD_2 ( ) TYPE java.util.Set NAME VAR_5 INIT = VAR_2 . METHOD_2 ( )  METHOD_3 ( STRING_1 , VAR_4 , VAR_5 , VAR_3 , 20 )  METHOD_3 ( STRING_2 , VAR_5 , VAR_4 , VAR_3 , 20 )  errln ( VAR_3 . toString ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  assertTrue ( STRING_1 , ( ( VAR_1 . METHOD_2 ( ) . length ) > 0 ) ) TYPE TYPE_2 NAME target IN VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME status INIT = new TYPE_4 ( target ) . run ( new TYPE_5 ( ) ) COND ( status . METHOD_3 ( ) ) != ( VAR_2 )  fail ( STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( os )  VAR_1 . METHOD_2 ( )  VAR_1 . METHOD_3 ( )  fail ( STRING_1 ) TYPE java.io.IOException NAME e BLOCK BLOCK  VAR_1 = new TYPE_1 ( os )  VAR_1 . METHOD_3 ( )  VAR_1 . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( INT_1 , STRING_1 ) TYPE java.io.File NAME f INIT = METHOD_3 ( ) TYPE TYPE_2 NAME out INIT = TYPE_1 . METHOD_4 ( f )  out . METHOD_5 ( new TYPE_3 ( VAR_1 ) )  out . METHOD_6 ( )  out . METHOD_7 ( ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( f )  assertNotNull ( VAR_2 . METHOD_8 ( VAR_1 ) )  VAR_2 . METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . when ( VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) . VAR_3 ) ) ) . thenReturn ( true ) TYPE TYPE_3 NAME result INIT = VAR_4 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_2 ) , null , null , false , true , null )  TYPE_5 . METHOD_7 ( result )  TYPE_1 . METHOD_8 ( VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME entry TYPE boolean NAME VAR_2  METHOD_2 ( entry , VAR_2 , false ) COND ( entry . name ) != null  TYPE_2 . d ( VAR_3 . TAG , ( STRING_1 + entry ) ) COND ( VAR_4 ) != null  TYPE_3 . METHOD_3 ( mContext , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( ) TYPE android.os.RemoteException NAME e  android.util.Log.e ( VAR_2 . TAG , android.util.Log . METHOD_3 ( new java.lang.Throwable ( ) ) )  android.util.Log.e ( VAR_2 . TAG , STRING_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME callback  VAR_1  VAR_2 . METHOD_2 ( callback ) COND ( ( VAR_3 ) == null ) || ( VAR_3 . METHOD_3 ( ) )  return ; TYPE TYPE_2 NAME i IN VAR_3  callback . METHOD_4 ( i . slotId , VAR_4 ) TYPE android.os.RemoteException NAME e  android.util.Log.w ( VAR_5 , STRING_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME info TYPE TYPE_3 NAME VAR_1 TYPE com.android.jack.ir.ast.JDefinedClassOrInterface NAME VAR_2 TYPE com.android.jack.ir.ast.JMethod NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_3 . METHOD_2 ( ) TYPE TYPE_1 NAME call INIT = new TYPE_1 ( info , VAR_1 , VAR_2 , VAR_4 , VAR_3 . METHOD_4 ( ) , VAR_4 . METHOD_5 ( ) )  call . METHOD_6 ( new TYPE_5 ( VAR_3 ) )  return call ;
MODIFIER protected RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME result INIT = device . METHOD_1 ( path , true ) COND result != null  TYPE_1 . log ( VAR_1 , ( STRING_1 + result ) )  return false ;  return true ; TYPE TYPE_2 NAME e  TYPE_1 . log ( VAR_1 , ( STRING_2 + path ) , e )  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ! ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ; TYPE int NAME VAR_2 INIT = this . METHOD_2 ( ) TYPE int NAME VAR_3 INIT = this . METHOD_3 ( ) TYPE int NAME VAR_4 INIT = ( VAR_2 <= VAR_3 ) ? VAR_3 - VAR_2 : 0 TYPE int NAME size INIT = VAR_4 > > 3  return ( ( TYPE_1 ) ( new TYPE_3 ( this , ( - 1 ) , 0 , size , size , VAR_2 , METHOD_4 ( ) ) ) ) ;
MODIFIER protected RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = super . METHOD_1 ( VAR_1 ) COND VAR_2 != 0  return VAR_2 ; TYPE TYPE_2 NAME VAR_3 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) TYPE TYPE_3 NAME VAR_4 INIT = METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_3 . METHOD_2 ( ) . METHOD_3 ( )  return VAR_4 . METHOD_4 ( VAR_5 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME callback  METHOD_2 ( VAR_2 , STRING_1 ) COND VAR_3  android.util.Log.d ( VAR_4 . TAG , ( STRING_2 + VAR_1 ) )  VAR_5 . METHOD_3 ( VAR_1 , callback , this )  METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != null  return ( STRING_1 + ( VAR_2 . toString ( ) ) ) + STRING_1 ; COND ( VAR_3 ) != null  return ( STRING_1 + ( VAR_3 ) ) + STRING_1 ;  throw new java.lang.IllegalArgumentException ( STRING_2 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME context TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) COND VAR_2 != null TYPE TYPE_5 NAME VAR_6 INIT = TYPE_4 . METHOD_3 ( VAR_7 , VAR_8 , VAR_9 , VAR_10 ) COND VAR_6 == null TYPE java.lang.String NAME VAR_11 INIT = java.lang.String.format ( STRING_1 , VAR_1 . name )  context . METHOD_4 ( VAR_12 , context . METHOD_5 ( VAR_2 , VAR_1 ) , VAR_11 , null )
MODIFIER public RETURN java.lang.Object NAME METHOD_1 TYPE TYPE_1<TYPE_2,TYPE_3> NAME m INIT = ( ( TYPE_1 < TYPE_2 , TYPE_3 > ) ( super . METHOD_1 ( ) ) )  VAR_1 = null  VAR_2 = VAR_3 . METHOD_1 ( )  return m ; TYPE TYPE_4 NAME e  throw new TYPE_5 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( STRING_1 ) , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( STRING_3 )  TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_4 ) ) . METHOD_4 ( STRING_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config INIT = new TYPE_1 ( )  config . METHOD_2 ( STRING_1 )  config . METHOD_3 ( STRING_2 )  config . METHOD_4 ( INT_1 ) TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( null , config ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( null , config )  TYPE_3 . assertFalse ( TYPE_2 . equals ( VAR_1 , VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME flags  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_2 ( VAR_3 )  VAR_1 . METHOD_3 ( METHOD_4 ( ) . toString ( ) )  VAR_1 . METHOD_2 ( METHOD_5 ( ) )  VAR_1 . METHOD_6 ( METHOD_7 ( ) )  VAR_1 . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_4 ) )  VAR_1 . METHOD_3 ( METHOD_10 ( ) )  VAR_1 . METHOD_3 ( METHOD_11 ( ) )  VAR_1 . METHOD_12 ( VAR_5 , 0 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 COND VAR_1 == ( VAR_2 )  android.util.Log.e ( VAR_3 . TAG , STRING_1 )  return null ; TYPE TYPE_1 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( VAR_1 ) COND VAR_4 == null  android.util.Log.e ( VAR_3 . TAG , ( STRING_2 + VAR_1 ) )  return VAR_4 ;
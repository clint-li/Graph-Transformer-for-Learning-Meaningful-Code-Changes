MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < TYPE_2 > ( ) COND sshd  modules.add ( new TYPE_3 ( ) ) COND VAR_1  modules.add ( new TYPE_4 ( ) )  modules.add ( new TYPE_5 ( ) )  modules.add ( VAR_2 . METHOD_2 ( VAR_3 class ) )  modules.add ( new TYPE_6 ( ) )  return VAR_4 . METHOD_3 ( modules ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME token  VAR_1 . METHOD_1 ( token , changes , VAR_2 ) TYPE TYPE_1 NAME e  throw new TYPE_2 ( e . getMessage ( ) , e ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ; TYPE TYPE_3 NAME e  throw new TYPE_2 ( STRING_2 , e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_2 = VAR_3  VAR_2 = VAR_2 . METHOD_2 ( ) COND ! ( VAR_2 . METHOD_3 ( ) )  throw new TYPE_4 ( STRING_1 , VAR_2 ) ;  VAR_1 . METHOD_4 ( ( ( TYPE_5 ) ( VAR_2 ) ) . METHOD_5 ( ) )  return VAR_4 ;
MODIFIER private RETURN void NAME METHOD_1  close ( )  VAR_1 = repo . METHOD_2 ( ) TYPE TYPE_1 NAME ref INIT = repo . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) COND ref == null  return ; TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 )  VAR_3 = rw . parseCommit ( ref . METHOD_5 ( ) . METHOD_6 ( ) )  notes = TYPE_2 . METHOD_7 ( VAR_1 , VAR_3 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME p MODIFIER public RETURN TYPE_2 NAME METHOD_2  return new TYPE_2 ( METHOD_3 ( p ) , TYPE_4 . METHOD_4 ( p . toString ( ) ) , TYPE_5 . METHOD_5 ( p ) ) ; TYPE TYPE_6 NAME e  return VAR_1 ;  return new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 METHOD_2 ( ) throws java.io.IOException { try { return new TYPE_2 ( METHOD_3 ( p ) , TYPE_4 . METHOD_4 ( p . toString ( ) ) , TYPE_5 . METHOD_5 ( p ) ) ; } catch ( TYPE_6 e ) { return VAR_1 ; } } } ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Status NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = result . METHOD_2 ( ref )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_3 ( message ( VAR_3 ) ) . isEqualTo ( VAR_3 . getStatus ( ) )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . isEqualTo ( VAR_3 . getMessage ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp  rsp . METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME in INIT = METHOD_3 ( ) TYPE TYPE_4 NAME out INIT = rsp . METHOD_4 ( )  TYPE_5 . METHOD_5 ( in , out )  out . close ( )  in . close ( )
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2<?> NAME p INIT = ( ( TYPE_2 < ? > ) ( VAR_1 ) )  return TYPE_2 . METHOD_2 ( ) . equals ( p . METHOD_2 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = getChange ( VAR_1 . getChange ( ) ) TYPE TYPE_2 NAME event INIT = new TYPE_2 ( change )  event . change = METHOD_2 ( change )  VAR_2 = METHOD_3 ( VAR_1 . METHOD_4 ( ) )  VAR_3 = VAR_1 . METHOD_5 ( )  VAR_4 . get ( ) . METHOD_6 ( change , event , db . get ( ) ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_5 . error ( STRING_1 , e )
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config TYPE java.lang.String NAME VAR_1  config . METHOD_2 ( STRING_1 , null , STRING_2 , VAR_2 )  config . METHOD_3 ( STRING_1 , null , STRING_3 , STRING_4 )  config . METHOD_3 ( STRING_1 , null , STRING_5 , STRING_6 )  config . METHOD_3 ( STRING_1 , null , STRING_7 , VAR_1 )  config . METHOD_4 ( STRING_1 , STRING_8 , STRING_9 , true )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( project , STRING_1 )  METHOD_3 ( user )  VAR_1 . METHOD_4 ( VAR_2 class )  VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_5 ( ) . get ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME user INIT = user ( STRING_2 , null )  TYPE_1 . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME r INIT = create ( ) . METHOD_4 ( user )  METHOD_5 ( r )  assertEquals ( VAR_2 . getName ( ) , r . name )  assertEquals ( VAR_2 . METHOD_6 ( ) , r . email )  TYPE_1 . METHOD_7 ( VAR_1 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 MODIFIER public RETURN TYPE_2 NAME apply TYPE TYPE_5 NAME VAR_2  return METHOD_5 ( VAR_2 ) ; TYPE java.io.IOException NAME e  throw new TYPE_6 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) , e ) ;  return java.util.Collections . METHOD_2 ( TYPE_3 . METHOD_3 ( java.util.Collections . METHOD_4 ( VAR_1 . METHOD_1 ( ) ) , new TYPE_4 < TYPE_5 , TYPE_2 > ( ) { public TYPE_2 apply ( TYPE_5 VAR_2 ) { try { return METHOD_5 ( VAR_2 ) ; } catch ( java.io.IOException e ) { throw new TYPE_6 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) , e ) ; } } } ) ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_3 INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = VAR_3 . parseCommit ( org.eclipse.jgit.lib.ObjectId . METHOD_3 ( VAR_1 ) )  return commit . METHOD_4 ( ) ;  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = null TYPE TYPE_3 NAME w IN this COND w instanceof TYPE_2 TYPE TYPE_2 NAME d INIT = ( ( TYPE_2 ) ( w ) ) COND VAR_2 == null  VAR_2 = d COND ( VAR_3 ) == VAR_1  d . METHOD_1 ( )  return ; COND VAR_2 != null  VAR_2 . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  VAR_1 = true  METHOD_5 ( )  TYPE_4 . display ( TYPE_5 . METHOD_6 ( result . METHOD_7 ( ) ) ) MODIFIER public RETURN void NAME METHOD_8 TYPE TYPE_6 NAME VAR_2  METHOD_9 ( true )  super . METHOD_8 ( VAR_2 )  TYPE_1 . METHOD_2 ( id . get ( ) , revision , METHOD_3 ( ) , METHOD_4 ( ) , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { VAR_1 = true ; METHOD_5 ( ) ; TYPE_4 . display ( TYPE_5 . METHOD_6 ( result . METHOD_7 ( ) ) ) ; } public void METHOD_8 ( TYPE_6 VAR_2 ) { METHOD_9 ( true ) ; super . METHOD_8 ( VAR_2 ) ; } } )
MODIFIER protected RETURN void NAME run  METHOD_1 ( ) TYPE TYPE_2 NAME VAR_1 INIT = factory . create ( in , out )  VAR_1 . METHOD_2 ( format ) COND ( query ) != null  VAR_1 . METHOD_3 ( query )  VAR_1 . run ( ) TYPE TYPE_3 NAME err  throw new TYPE_4 ( ( STRING_1 + ( err . getMessage ( ) ) ) ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME apply TYPE TYPE_3 NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME r INIT = TYPE_1 . METHOD_1 ( VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . getChange ( ) . getProject ( ) , VAR_3 ) ) COND VAR_1 . METHOD_4 ( )  r . METHOD_5 ( TYPE_5 . METHOD_6 ( INT_1 , VAR_4 ) )  return r ; TYPE TYPE_6 NAME e  throw new TYPE_4 ( e . getMessage ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( admin , VAR_2 )  METHOD_4 ( admin )  METHOD_5 ( VAR_1 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_6 ( STRING_1 , VAR_1 ) . to ( VAR_5 , VAR_3 ) . to ( VAR_6 ) . METHOD_7 ( admin , VAR_7 , VAR_8 , VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_8 ( VAR_11 ) . METHOD_8 ( VAR_12 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME p INIT = TYPE_3 . get ( VAR_1 ) COND ! ( TYPE_4 . METHOD_2 ( p ) )  throw new java.io.IOException ( java.lang.String.format ( STRING_1 , VAR_1 ) ) ; TYPE java.lang.String NAME VAR_2 INIT = new java.lang.String ( TYPE_4 . METHOD_3 ( p ) , VAR_3 )  return new TYPE_1 ( new TYPE_1 . Id ( id , 0 ) , VAR_2 ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 COND ! ( VAR_1 . METHOD_2 ( VAR_2 ) )  throw new TYPE_3 ( java.lang.String.format ( STRING_1 , VAR_3 , VAR_4 , VAR_2 . getProject ( ) . getName ( ) ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1.Account NAME result  VAR_1 . METHOD_2 ( false ) TYPE TYPE_1.Account NAME me INIT = TYPE_2 . METHOD_3 ( )  me . METHOD_4 ( result . METHOD_5 ( ) )  me . METHOD_6 ( result . METHOD_7 ( ) )  TYPE_2 . METHOD_8 ( ) COND ( VAR_2 ) != null  VAR_2 . display ( me )
MODIFIER protected RETURN boolean NAME METHOD_1 COND ( VAR_1 . length ( ) ) == 0  VAR_2 . METHOD_2 ( STRING_1 )  return false ; COND VAR_3 . isEmpty ( )  VAR_2 . info ( STRING_2 )  return false ; COND ( ( ( VAR_3 . size ( ) ) == 1 ) && ( ( VAR_4 . size ( ) ) == 1 ) ) && ( VAR_4 . contains ( VAR_5 ) )  return false ;  return true ;
MODIFIER protected RETURN java.util.List<com.google.gerrit.reviewdb.client.Change> NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE java.lang.String NAME ref INIT = event . getRefName ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( event . METHOD_2 ( ) ) COND ref . equals ( VAR_1 )  return com.google.gerrit.server.query.change.ChangeData . METHOD_3 ( VAR_2 . get ( ) . METHOD_4 ( project ) ) ;  return com.google.gerrit.server.query.change.ChangeData . METHOD_3 ( VAR_2 . get ( ) . METHOD_5 ( new TYPE_2 . NameKey ( project , ref ) ) ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME a TYPE TYPE_1 NAME b TYPE int NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( a . name ) . METHOD_3 ( TYPE_2 . METHOD_2 ( b . name ) ) COND VAR_1 != 0  return VAR_1 ;  return TYPE_2 . METHOD_2 ( a . id ) . METHOD_3 ( TYPE_2 . METHOD_2 ( b . name ) ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME id TYPE java.lang.String NAME ref TYPE TYPE_3.ProjectConfig NAME cfg INIT = VAR_2 . METHOD_2 ( project ) . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_4 . METHOD_1 ( cfg , VAR_1 , id , ref )  METHOD_4 ( project , cfg )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_1 NAME b INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_3 ) TYPE TYPE_1 NAME c INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_4 )  assertEquals ( STRING_5 , TYPE_3 . METHOD_3 ( a , b ) . toString ( ) )  assertEquals ( STRING_6 , TYPE_3 . METHOD_3 ( a , b , c ) . toString ( ) )
MODIFIER private static RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE byte[] NAME data INIT = new byte [ ( ( int ) ( VAR_2 . METHOD_2 ( ) ) ) ] TYPE TYPE_3 NAME in INIT = VAR_1 . METHOD_3 ( VAR_2 )  TYPE_4 . METHOD_4 ( in , data , 0 , data . length )  in . close ( )  return data ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_2 NAME VAR_3 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_4 TYPE TYPE_3 NAME VAR_5 INIT = VAR_3 . METHOD_2 ( )  return ( ( TYPE_1 ) ( VAR_2 ) ) . format ( project . get ( ) , TYPE_4 . METHOD_3 ( repo , VAR_4 ) , METHOD_4 ( VAR_1 ) , VAR_5 ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result COND ( ( VAR_1 == null ) && ( ( VAR_2 ) == null ) ) || ( ( VAR_1 != null ) && ( VAR_1 . equals ( VAR_2 ) ) )  display ( result )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME notes COND ! ( VAR_1 . METHOD_2 ( ) )  return TYPE_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( db . METHOD_5 ( ) . METHOD_6 ( notes . getChangeId ( ) ) , VAR_2 ) ) ;  notes . METHOD_7 ( ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = TYPE_4 . METHOD_8 ( )  VAR_3 . METHOD_9 ( notes . METHOD_10 ( ) . values ( ) )  return TYPE_3 . METHOD_3 ( VAR_3 ) ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE java.util.List<TYPE_1> NAME result INIT = new java.util.ArrayList ( VAR_1 . size ( ) ) TYPE TYPE_1 NAME c IN VAR_1 COND TYPE_3 . METHOD_2 ( c ) . equals ( psId )  result . add ( c )  return TYPE_4 . METHOD_3 ( result ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( ( ( VAR_1 . length ) * 2 ) ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++ TYPE byte NAME b INIT = VAR_1 [ i ]  r . append ( VAR_2 [ ( ( b > > > INT_1 ) & INT_2 ) ] )  r . append ( VAR_2 [ ( b & INT_2 ) ] )  return r . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  assertEquals ( VAR_1 class , out . METHOD_4 ( ) )  assertEquals ( TYPE_2 . of ( query ( in . METHOD_5 ( 1 ) ) , in . METHOD_5 ( 0 ) ) , out . METHOD_6 ( ) )
MODIFIER public RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.Set<TYPE_1> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( )  VAR_2 . add ( VAR_3 . create ( STRING_1 , VAR_4 ) )  VAR_2 . add ( VAR_3 . create ( STRING_2 , VAR_5 ) )  VAR_2 . add ( VAR_3 . create ( STRING_3 , VAR_5 ) )  VAR_2 . add ( VAR_3 . create ( STRING_4 , VAR_1 . project ) )  VAR_2 . add ( VAR_3 . create ( STRING_5 , VAR_6 ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( null , new TYPE_2 ( VAR_2 ) , null , null ) TYPE java.util.List<TYPE_3> NAME m INIT = VAR_1 . METHOD_3 ( repo , c , VAR_3 )  com.google.common.truth.Truth.assertThat ( TYPE_4 . METHOD_4 ( m ) ) . METHOD_5 ( TYPE_5 . of ( STRING_1 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 . METHOD_3 ( ) , STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( VAR_1 . METHOD_6 ( ) ) ) ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps  TYPE_2 . METHOD_2 ( ps . getId ( ) . getParentKey ( ) . equals ( cd . getId ( ) ) , STRING_1 , ps . getId ( ) , cd . getId ( ) )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( STRING_2 + ( VAR_2 ) ) + ( TYPE_2 . METHOD_5 ( STRING_3 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( VAR_3 ) ) , n . METHOD_6 ( ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new TYPE_2 < > ( ) TYPE TYPE_3 NAME VAR_3 IN VAR_4  VAR_2 . METHOD_2 ( VAR_3 . METHOD_1 ( VAR_1 , VAR_5 ) )  return VAR_2 ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.ProjectConfig NAME project TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_3 NAME group TYPE java.lang.String NAME ref TYPE TYPE_1 NAME VAR_4 INIT = TYPE_4 . METHOD_2 ( project , group )  VAR_4 . METHOD_3 ( VAR_2 )  VAR_4 . METHOD_4 ( VAR_3 )  return TYPE_4 . METHOD_5 ( project , VAR_1 , VAR_4 , ref ) ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2.NameKey NAME branch TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> NAME schema INIT = TYPE_4 . schema ( VAR_2 ) TYPE int NAME VAR_3 COND ( schema != null ) && ( schema . METHOD_2 ( VAR_4 ) )  VAR_3 = ( VAR_5 . METHOD_3 ( ) ) - INT_1  VAR_3 = VAR_5 . METHOD_4 ( )  return METHOD_1 ( schema , branch , VAR_1 , VAR_3 ) ;
MODIFIER private RETURN void NAME format TYPE TYPE_1 NAME out  out . METHOD_1 ( TYPE_2 . METHOD_2 ( commit ) . METHOD_3 ( VAR_1 ) ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( out )  VAR_2 . METHOD_4 ( repo )  VAR_2 . format ( base . METHOD_5 ( ) , commit . METHOD_5 ( ) )  VAR_2 . METHOD_6 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_1<TYPE_2> NAME VAR_1  new TYPE_3 ( ( STRING_1 + ( TYPE_4 . METHOD_2 ( project . get ( ) ) . METHOD_3 ( STRING_2 , STRING_3 ) ) ) ) . METHOD_4 ( STRING_4 ) . METHOD_5 ( TYPE_5 . METHOD_6 ( VAR_1 ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( repo ) COND ! ( VAR_2 . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( new TYPE_2 ( repo , VAR_2 , db ) )  VAR_1 . METHOD_4 ( in , out , err )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME a TYPE TYPE_1 NAME b  return new TYPE_2 ( ) . append ( a . METHOD_2 ( ) , b . METHOD_2 ( ) ) . append ( b . METHOD_3 ( ) , a . METHOD_3 ( ) ) . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME p  p = METHOD_2 ( STRING_1 )  assertEquals ( METHOD_2 ( STRING_2 ) , TYPE_2 . METHOD_3 ( p , STRING_3 ) )  p = METHOD_2 ( STRING_4 )  assertEquals ( METHOD_2 ( STRING_5 ) , TYPE_2 . METHOD_3 ( p , STRING_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx COND ( METHOD_2 ( ) ) && ( VAR_1 )  VAR_2 . METHOD_3 ( change , ctx . METHOD_4 ( ) . getAccountId ( ) , VAR_3 , VAR_4 , VAR_5 , ctx . METHOD_5 ( ) )
MODIFIER public RETURN TYPE_1 NAME create TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = TYPE_1 . METHOD_1 ( db ) . changes ( ) . get ( changeId )  TYPE_2 . METHOD_2 ( change , STRING_1 , changeId )  TYPE_2 . METHOD_3 ( change . getProject ( ) . equals ( project ) , ( STRING_2 + STRING_3 ) , project , changeId , change . getProject ( ) )  return new TYPE_1 ( args , project , change ) . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 COND ! ( TYPE_4 . getAccountId ( ) . equals ( VAR_1 . getAccountId ( ) ) )  VAR_2 . METHOD_2 ( new TYPE_5 ( ) )  return ; MODIFIER public RETURN TYPE_3 NAME run TYPE TYPE_7.ReviewDb NAME db  db . METHOD_3 ( ) . update ( java.util.Collections.singleton ( VAR_1 ) )  return VAR_3 ;  run ( VAR_2 , new TYPE_6 < TYPE_3 > ( ) { public TYPE_3 run ( TYPE_7 . ReviewDb db ) throws TYPE_8 . OrmException { db . METHOD_3 ( ) . update ( java.util.Collections.singleton ( VAR_1 ) ) ; return VAR_3 ; } } )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e  e . METHOD_2 ( ) TYPE java.lang.String NAME t INIT = TYPE_2 . METHOD_3 ( psId , VAR_1 . path ( ) , VAR_1 . line ( ) ) COND ! ( TYPE_3 . METHOD_4 ( ) )  TYPE_3 . METHOD_5 ( t )  TYPE_3 . display ( t )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 class )  METHOD_4 ( ) . to ( VAR_3 class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_4 class ) . to ( VAR_5 class )  TYPE_1 . bind ( binder ( ) , VAR_6 class ) . to ( VAR_7 class )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.PatchSet NAME METHOD_1 TYPE TYPE_1 NAME rsrc TYPE com.google.gerrit.reviewdb.client.PatchSet NAME VAR_1 MODIFIER public RETURN com.google.gerrit.reviewdb.client.PatchSet NAME update TYPE com.google.gerrit.reviewdb.client.PatchSet NAME VAR_3  VAR_3 . METHOD_4 ( false )  return VAR_3 ; INIT = VAR_2 . get ( ) . patchSets ( ) . METHOD_2 ( rsrc . METHOD_3 ( ) . getId ( ) , new TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ( ) { public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet VAR_3 ) { VAR_3 . METHOD_4 ( false ) ; return VAR_3 ; } } )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<TYPE_1.Id,TYPE_2.Id> NAME VAR_1 INIT = new TYPE_3 < TYPE_1 . Id , TYPE_2 . Id > ( ) TYPE TYPE_2.Id NAME VAR_2 IN approvals  VAR_1 . put ( VAR_2 . getParentKey ( ) , VAR_2 )  VAR_3 . METHOD_2 ( change , user . METHOD_3 ( ) , VAR_4 , VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( ! ( METHOD_5 ( db ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2  METHOD_2 ( VAR_1 , VAR_2 ) TYPE TYPE_1 NAME e INIT = new TYPE_1 ( VAR_1 , VAR_2 )  TYPE_2 . METHOD_3 ( e ) . METHOD_4 ( VAR_3 ) . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_1 ) , TYPE_3 . METHOD_6 ( VAR_2 ) , TYPE_3 . METHOD_7 ( ) )  servlet . METHOD_8 ( VAR_4 , VAR_5 )  TYPE_2 . METHOD_9 ( VAR_5 ) . METHOD_10 ( VAR_6 , e . getMessage ( ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME b COND ( ( ( b . config ) != null ) && ( ( VAR_1 ) != null ) ) && ( ( VAR_2 ) != null )  return new TYPE_1 ( b . view , b . config , VAR_1 , VAR_2 ) ;  return null ;
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2.Result NAME r TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( db , admin . METHOD_2 ( ) , STRING_1 , STRING_2 , VAR_1 , r . getChangeId ( ) )  return VAR_2 . to ( git , STRING_3 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ) || ( METHOD_6 ( ) . METHOD_7 ( ) ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME key TYPE java.lang.String NAME VAR_2 TYPE int NAME n INIT = VAR_1 . METHOD_2 ( ( ( STRING_1 + key ) + STRING_2 ) )  return ( ( VAR_1 . METHOD_3 ( 0 , n ) ) + VAR_2 ) + ( VAR_1 . METHOD_3 ( ( ( n + INT_1 ) + ( key . length ( ) ) ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cm TYPE int NAME VAR_1 INIT = cm . METHOD_2 ( cm . METHOD_3 ( ) . METHOD_4 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . METHOD_5 ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_2 . METHOD_6 ( ) COND cm . METHOD_7 ( ) THEN THEN  METHOD_8 ( VAR_4 , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  change = ctx . getChange ( ) TYPE TYPE_2 NAME update INIT = ctx . METHOD_2 ( psId )  VAR_1 = ( change . getStatus ( ) ) == ( VAR_2 ) COND VAR_1  change . METHOD_3 ( VAR_3 )  update . METHOD_3 ( change . getStatus ( ) )  TYPE_3 . METHOD_4 ( change )  ctx . METHOD_1 ( )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( STRING_1 ) TYPE java.lang.String[] NAME VAR_3 INIT = VAR_1 . METHOD_2 ( STRING_2 ) TYPE java.lang.String NAME s IN VAR_3 COND ! ( s . METHOD_3 ( ) . isEmpty ( ) )  VAR_2 . append ( ( ( STRING_3 + s ) + STRING_4 ) )  return VAR_2 . toString ( ) ;
MODIFIER public RETURN TYPE_1.PatchSet NAME METHOD_1 COND ( currentPatchSetId ) != null TYPE int NAME i INIT = ( patchSets . size ( ) ) - 1 COND i >= 0  i -- TYPE TYPE_1.PatchSet NAME ps INIT = patchSets . get ( i ) COND ps . getId ( ) . equals ( currentPatchSetId )  return ps ;  return null ;
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE boolean NAME VAR_1 COND VAR_2 . METHOD_2 ( false )  throw new java.io.IOException ( STRING_1 ) ; TYPE TYPE_1.Result NAME result INIT = ( VAR_1 ) ? VAR_3 . METHOD_1 ( db , changeId ) : VAR_3 . METHOD_3 ( db , changeId ) COND VAR_4 . METHOD_2 ( false )  throw new java.io.IOException ( STRING_2 ) ;  return result ;
MODIFIER protected RETURN void NAME run COND VAR_1 . METHOD_1 ( )  VAR_2 . METHOD_2 ( STRING_1 )  VAR_2 . METHOD_2 ( STRING_2 ) TYPE TYPE_2 NAME e  throw new TYPE_1 ( ( STRING_3 + ( e . getMessage ( ) ) ) ) ;
MODIFIER private RETURN boolean NAME add TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME w TYPE TYPE_3 NAME type TYPE TYPE_4 NAME user INIT = VAR_2 . create ( args . db , w . getAccountId ( ) ) COND METHOD_1 ( user , w . METHOD_2 ( ) ) COND w . METHOD_3 ( type )  VAR_3 . add ( w . getAccountId ( ) )  return true ; TYPE TYPE_5 NAME e BLOCK BLOCK  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME c INIT = get ( changeId , VAR_1 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . isEqualTo ( METHOD_2 ( 2 ) )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < ? > ) ( VAR_3 . METHOD_3 ( ) ) ) ) . METHOD_4 ( TYPE_3 . of ( METHOD_2 ( 2 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_3 . get ( METHOD_2 ( 2 ) ) . VAR_4 ) . isEqualTo ( INT_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME info  VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . css ( ) . METHOD_4 ( ) ) COND TYPE_4 . equals ( info . path ( ) )  VAR_1 . METHOD_5 ( )  VAR_1 . append ( info . status ( ) )  VAR_1 . METHOD_6 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = ctx . getChange ( ) TYPE TYPE_3 NAME update INIT = ctx . METHOD_2 ( change . currentPatchSetId ( ) )  change . METHOD_3 ( VAR_1 )  change . METHOD_4 ( ctx . METHOD_5 ( ) )  update . METHOD_3 ( VAR_1 )  METHOD_6 ( ctx , update )  return true ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME notes COND ! ( VAR_1 . METHOD_2 ( ) )  return TYPE_3 . METHOD_3 ( db . METHOD_4 ( ) . METHOD_1 ( notes . getChangeId ( ) ) ) ;  return notes . METHOD_5 ( ) . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( true ) )  METHOD_2 ( b , b . append ( false ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 COND ! ( VAR_1 ) TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . getName ( ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_6 . METHOD_3 ( VAR_4 , new TYPE_4 ( ( ( STRING_1 + ( VAR_7 ) ) + STRING_2 ) ) )  VAR_2 . METHOD_4 ( VAR_4 )  VAR_2 . METHOD_5 ( VAR_5 )  VAR_2 . METHOD_6 ( false )  VAR_1 = true
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME notes INIT = METHOD_3 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name INIT = notes . METHOD_4 ( ) TYPE TYPE_2 NAME ctl INIT = METHOD_5 ( notes )  ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_6 ( name )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_7 ( ctl , null ) . METHOD_8 ( ) ) . METHOD_9 ( TYPE_4 . METHOD_10 ( ( STRING_1 + name ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME branch  new TYPE_2 ( server , VAR_1 , branch ) . METHOD_2 ( ) TYPE TYPE_3 NAME e  VAR_2 . error ( ( ( STRING_1 + branch ) + STRING_2 ) , e )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME base TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.lang.String NAME path TYPE byte[] NAME VAR_4 NAME VAR_1  VAR_2 . add ( new TYPE_5 ( path ) )  break ;  VAR_2 . add ( TYPE_6 . METHOD_2 ( VAR_1 , repo , rw , base , path , VAR_3 , VAR_4 ) )  VAR_2 . METHOD_3 ( )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc COND ( VAR_1 ) || ( rsrc . METHOD_1 ( ) )  return VAR_2 . format ( rsrc . METHOD_2 ( ) . getProject ( ) ) ;  throw new TYPE_3 ( rsrc . METHOD_2 ( ) . getProject ( ) . getName ( ) ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( this . METHOD_4 ( ) , VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( this . VAR_2 , VAR_3 ) . METHOD_6 ( METHOD_7 ( ) , METHOD_7 ( ) ) . METHOD_6 ( this . VAR_4 , VAR_5 ) . METHOD_5 ( this . VAR_6 , VAR_7 , TYPE_3 . METHOD_8 ( ) ) . METHOD_5 ( this . psId , VAR_1 . psId , TYPE_3 . METHOD_8 ( ) . METHOD_9 ( ) ) . result ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) COND VAR_3 . METHOD_2 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_4 INIT = METHOD_3 ( ) COND VAR_4 != null  VAR_2 . METHOD_4 ( VAR_4 )  VAR_1 . METHOD_2 ( VAR_2 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME s INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( STRING_1 )  r . append ( VAR_1 . METHOD_3 ( ) )  r . append ( STRING_2 )  return r . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_2 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_3 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_4 ) ) )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_5 , STRING_6 , STRING_7 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( STRING_1 , VAR_1 )  VAR_4 . METHOD_4 ( ) . METHOD_5 ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , VAR_5 . METHOD_6 ( new TYPE_1 ( VAR_2 ) ) , VAR_6 )  VAR_3 . METHOD_3 ( STRING_4 , VAR_1 )  VAR_3 . error ( STRING_5 , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME change INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( 1 ) ) TYPE java.lang.String NAME patchSet INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( 2 ) ) TYPE java.lang.String NAME path INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 ) )  VAR_1 . METHOD_4 ( new TYPE_3 ( change , patchSet , path ) )  VAR_1 . METHOD_5 ( TYPE_4 . METHOD_6 ( path ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_8 ( STRING_2 , VAR_2 ) . METHOD_9 ( VAR_7 , VAR_4 ) . to ( VAR_8 , VAR_9 ) . to ( VAR_10 ) . METHOD_10 ( VAR_11 ) . METHOD_10 ( VAR_12 ) . METHOD_9 ( VAR_3 )
MODIFIER public RETURN void NAME run  VAR_1 . info ( STRING_1 ) COND ( VAR_2 ) != null  TYPE_1 . delete ( VAR_3 ) TYPE java.io.IOException NAME err  VAR_1 . METHOD_1 ( ( STRING_2 + ( VAR_3 ) ) , err )  VAR_4 . METHOD_2 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p  METHOD_2 ( p ) TYPE java.lang.String NAME topic INIT = STRING_1 TYPE TYPE_3.Result NAME r INIT = METHOD_3 ( ( STRING_2 + topic ) )  r . METHOD_4 ( )  r . METHOD_5 ( VAR_1 , topic )  r = METHOD_3 ( ( STRING_3 + topic ) )  r . METHOD_4 ( )  r . METHOD_5 ( VAR_1 , topic )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME token TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( token )  TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  TYPE_4 . METHOD_5 ( VAR_2 , VAR_1 . METHOD_4 ( ) , VAR_1 . getValue ( ) ) TYPE TYPE_5 NAME e  throw VAR_3 . reject ( e . getMessage ( ) ) ;  VAR_4 . put ( VAR_1 . METHOD_4 ( ) , VAR_1 . getValue ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  com.google.common.truth.Truth.assertThat ( VAR_2 . line ) . isEqualTo ( VAR_1 . line )  com.google.common.truth.Truth.assertThat ( VAR_2 . message ) . isEqualTo ( VAR_1 . message )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . isEqualTo ( VAR_4 )  TYPE_3 . METHOD_2 ( VAR_5 , VAR_6 ) COND ( VAR_7 ) == null  com.google.common.truth.Truth.assertThat ( VAR_8 ) . isEqualTo ( VAR_9 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 TYPE TYPE_1 NAME ref INIT = refs . get ( VAR_1 ) COND ref != null TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_4 INIT = ref . get ( ) COND VAR_4 . equals ( VAR_2 )  ref . METHOD_2 ( VAR_4 , VAR_3 )
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME git TYPE boolean NAME VAR_1  TYPE_4 . METHOD_2 ( git , STRING_1 ) TYPE java.lang.String NAME file INIT = ( VAR_1 ) ? STRING_2 : ( STRING_3 + ( VAR_2 ) ) + STRING_4 TYPE TYPE_5 NAME VAR_3 INIT = VAR_4 . create ( db , admin . METHOD_3 ( ) , ( STRING_5 + ( VAR_2 ) ) , file , ( STRING_6 + ( VAR_2 ) ) )  ( VAR_2 ) ++  return VAR_3 . to ( git , STRING_7 ) ;
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  servlet = new TYPE_5 ( new TYPE_6 ( repo . METHOD_2 ( ) ) , new TYPE_7 ( ) , new TYPE_8 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME type INIT = METHOD_2 ( ) . METHOD_3 ( STRING_1 , null , STRING_2 ) COND type == null  return VAR_1 ; TYPE TYPE_1 NAME t IN TYPE_2 . values ( ) COND type . METHOD_4 ( t . name ( ) )  return t ;  throw new TYPE_3 ( ( STRING_3 + type ) ) ;
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) )  VAR_1 = new TYPE_5 ( )  VAR_2 = ( repo . METHOD_3 ( ) . METHOD_4 ( ) ) / INT_1
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3.Id,TYPE_4.Id> NAME VAR_1 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( )  a . type = VAR_1 . getKey ( ) . get ( ) TYPE TYPE_5 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 . getKey ( ) )  VAR_4 = VAR_2 . METHOD_3 ( ) . getName ( )  a . value = TYPE_6 . toString ( VAR_1 . getValue ( ) . get ( ) )  return a ;
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1  return ( ( java.util.Map < java.lang.String , TYPE_1 > ) ( VAR_1 . get ( ) . apply ( revision ) . value ( ) ) ) ; TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  return VAR_2 . METHOD_4 ( db , VAR_3 , project , VAR_4 ) ; TYPE java.lang.Exception NAME e  VAR_5 . error ( ( STRING_1 + project ) , e )  return false ;
MODIFIER public static RETURN void NAME patch TYPE java.lang.String NAME token TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME base TYPE TYPE_1.Key NAME id TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4  TYPE_5 . patch ( token , base , id , VAR_1 , VAR_2 , VAR_3 , VAR_4 , null )
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE TYPE_1.ProjectConfig NAME cfg TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( VAR_2 , cfg . getProject ( ) . METHOD_1 ( ) , db )  util . METHOD_2 ( INT_1 )  util . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  VAR_1 . METHOD_5 ( STRING_1 )  cfg . commit ( VAR_1 ) TYPE TYPE_5 NAME ref INIT = db . METHOD_6 ( VAR_3 )  return util . METHOD_7 ( ) . parseCommit ( ref . METHOD_8 ( ) ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 COND TYPE_2 . METHOD_2 ( )  return new TYPE_3 ( TYPE_2 . METHOD_3 ( ) . getId ( ) ) ; TYPE TYPE_1 NAME r INIT = new TYPE_3 ( null )  r . METHOD_4 ( true )  return r ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME message MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( id ) )  METHOD_4 ( )  TYPE_1 . METHOD_2 ( id . get ( ) , message , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( id ) ) ; METHOD_4 ( ) ; } } )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME req COND TYPE_3 . METHOD_2 ( req . METHOD_3 ( ) ) . is ( VAR_1 ) TYPE java.lang.String NAME VAR_2 INIT = TYPE_4 . toString ( req . METHOD_4 ( ) ) TYPE TYPE_5 NAME VAR_3 INIT = new TYPE_6 ( ) . METHOD_5 ( VAR_4 class , new TYPE_7 ( ) ) . METHOD_5 ( VAR_5 class , new TYPE_8 ( ) ) . create ( )  return VAR_3 . METHOD_6 ( VAR_2 , VAR_4 class ) ;  return null ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) COND VAR_2 . METHOD_6 ( TYPE_3 )  return VAR_2 . METHOD_7 ( TYPE_3 . length ( ) ) ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_5 ) . to ( VAR_2 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_7 ( VAR_11 ) . METHOD_7 ( VAR_12 )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_1 > ( VAR_1 . size ( ) ) TYPE TYPE_1 NAME VAR_3 IN VAR_1 COND TYPE_3 . METHOD_2 ( getRefName ( ) , VAR_3 . METHOD_3 ( ) )  VAR_2 . add ( VAR_3 )  return VAR_2 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME msg TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_1 TYPE TYPE_3 NAME input INIT = TYPE_3 . create ( )  input . message ( TYPE_4 . METHOD_2 ( msg ) )  TYPE_4 . METHOD_3 ( id , STRING_1 ) . data ( input ) . METHOD_4 ( VAR_1 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME e  VAR_1 . METHOD_2 ( e . getValue ( ) )  VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) COND VAR_1 . METHOD_2 ( )  METHOD_4 ( view . METHOD_5 ( ) )  view . METHOD_6 ( VAR_1 . METHOD_2 ( ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME type TYPE TYPE_1 NAME t INIT = type . METHOD_2 ( ) COND ! ( VAR_1 class . getName ( ) . equals ( t . METHOD_3 ( ) ) ) COND ( TYPE_2 . METHOD_4 ( t ) . length ) > 0  return true ;  t = type . METHOD_2 ( )  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp  METHOD_2 ( req , rsp ) TYPE java.lang.Exception NAME e  METHOD_3 ( ) . log ( STRING_1 , e )  METHOD_4 ( rsp , null , null )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 )  VAR_2 . METHOD_2 ( revision . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( VAR_1 ) TYPE java.util.List<TYPE_1> NAME VAR_4 INIT = TYPE_3 . METHOD_5 ( ) COND VAR_2 . METHOD_6 ( )  VAR_4 . add ( new TYPE_1 ( VAR_2 ) )  return VAR_4 ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( VAR_2 , VAR_3 ) ) COND VAR_4  bind ( VAR_5 . String class ) . METHOD_3 ( VAR_6 class ) . METHOD_2 ( VAR_7 class . getName ( ) )  bind ( VAR_8 class ) . METHOD_4 ( VAR_9 class )
MODIFIER public RETURN TYPE_1 NAME create TYPE java.lang.String NAME VAR_1 COND METHOD_1 ( )  VAR_2 . METHOD_2 ( VAR_2 . get ( ) , new TYPE_2 ( VAR_3 ) )  VAR_4 = METHOD_3 ( )  VAR_5 . info ( STRING_1 ) TYPE java.lang.Exception NAME e  VAR_5 . error ( ( STRING_2 + STRING_3 ) , e )  return VAR_2 . get ( ) . create ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , admin , VAR_2 )  assertThat ( VAR_3 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_4 , VAR_5 , VAR_6 , VAR_7 , admin ) . to ( VAR_8 ) . METHOD_6 ( VAR_9 ) . to ( VAR_2 )
MODIFIER public RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( ) COND c == null  VAR_1 = java.util.Collections . METHOD_2 ( ) COND ( VAR_2 ) != null  return VAR_2 . get ( c . currentPatchSetId ( ) ) ;  VAR_1 = TYPE_1 . METHOD_3 ( VAR_3 . METHOD_4 ( db , METHOD_5 ( ) , c . currentPatchSetId ( ) ) )  return VAR_1 ;
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Account NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME r INIT = METHOD_2 ( VAR_1 )  return ( r . size ( ) ) == 1 ? VAR_2 . get ( r . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) : null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = METHOD_2 ( ( ( STRING_1 + ( VAR_1 . get ( ) ) ) + STRING_2 ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( r )  org.junit.Assert . METHOD_5 ( ( ( VAR_3 . size ( ) ) == 1 ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( )  cfg = new TYPE_3 ( )  cfg . METHOD_7 ( STRING_2 , null , STRING_3 , STRING_1 )  VAR_2 = new TYPE_4 ( VAR_1 , cfg )  VAR_2 . METHOD_8 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 NAME TYPE_2 . get ( )  METHOD_2 ( true )  METHOD_3 ( true )  break ;  METHOD_2 ( true )  METHOD_3 ( false )  break ;  break ;  return this ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( VAR_1 ) MODIFIER public RETURN TYPE_2 NAME METHOD_2  return VAR_2 ; MODIFIER public RETURN TYPE_3<com.google.gerrit.reviewdb.server.ReviewDb> NAME METHOD_3  return TYPE_4 . of ( db ) ;  return new TYPE_1 ( ) { public TYPE_2 METHOD_2 ( ) { return VAR_2 ; } public TYPE_3 < com.google.gerrit.reviewdb.server.ReviewDb > METHOD_3 ( ) { return TYPE_4 . of ( db ) ; } } ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND cd . METHOD_2 ( user )  return true ; TYPE TYPE_2.Change NAME c INIT = cd . change ( db ) COND ( c != null ) && ( VAR_1 . METHOD_3 ( c , user ) . METHOD_4 ( ) )  cd . METHOD_5 ( user )  return true ;  return false ; TYPE TYPE_3 NAME e  return false ;
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME rsrc TYPE java.util.Map<com.google.gerrit.reviewdb.client.Project.NameKey,TYPE_2> NAME VAR_1 INIT = new TYPE_5 < > ( ) TYPE TYPE_2 NAME ps IN rsrc . METHOD_2 ( ) . METHOD_1 ( )  VAR_1 . put ( ps . getProject ( ) . METHOD_3 ( ) , ps )  VAR_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 . user ( user ) . METHOD_6 ( VAR_3 , VAR_1 . METHOD_4 ( ) ) )  return VAR_1 . values ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_2 , VAR_4 , STRING_1 ) . METHOD_4 ( ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_3 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) && ( ! ( TYPE_2 . METHOD_3 ( ) ) )  VAR_2 . METHOD_4 ( true ) COND ( ( VAR_1 . METHOD_2 ( ) ) > ( FLOAT_1 * ( VAR_1 . METHOD_5 ( ) ) ) ) && ( TYPE_2 . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( false )
MODIFIER public RETURN void NAME METHOD_1 TYPE long NAME VAR_1 INIT = INT_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 )  assertEquals ( ( STRING_1 + VAR_1 ) , VAR_2 . toString ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( 0 )  VAR_3 . METHOD_2 ( VAR_2 . toString ( ) )  assertEquals ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_2 INIT = VAR_3 . changes ( ) . query ( ) . METHOD_3 ( 1 ) . get ( )  org.junit.Assert.assertEquals ( 1 , VAR_2 . size ( ) )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) . changeId )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( project . get ( ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 , VAR_3 ) COND VAR_2 . METHOD_3 ( )  return VAR_2 ;  throw new TYPE_2 ( STRING_1 ) ; TYPE java.io.IOException NAME e  throw new TYPE_2 ( STRING_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . branch = VAR_1  VAR_2 = STRING_1  in . project = project . get ( )  VAR_3 = true  VAR_4 . METHOD_2 ( VAR_5 class ) TYPE TYPE_2.ChangeInfo NAME info INIT = VAR_6 . changes ( ) . create ( in ) . get ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME info  VAR_1 . METHOD_2 ( info . branch ( ) )  VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( TYPE_3 . query ( info . METHOD_5 ( ) , info . status ( ) , info . branch ( ) , info . topic ( ) ) ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_8 ( STRING_2 , VAR_2 ) . to ( VAR_7 , VAR_8 , VAR_4 ) . to ( VAR_9 ) . METHOD_9 ( VAR_10 ) . METHOD_9 ( VAR_11 ) . METHOD_10 ( VAR_12 ) . METHOD_10 ( VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < > ( )  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) )  modules.add ( new TYPE_3 ( ) )  modules.add ( new TYPE_4 ( false , VAR_1 . METHOD_2 ( VAR_3 class ) , VAR_1 . METHOD_2 ( VAR_4 class ) ) )  modules.add ( new TYPE_5 ( ) )  return VAR_1 . METHOD_3 ( modules ) ;
MODIFIER public RETURN java.lang.String NAME toString COND METHOD_1 ( )  return ( ( ( ( ( STRING_1 + ( error ) ) + STRING_2 ) + ( VAR_1 ) ) + STRING_3 ) + ( VAR_2 ) ) + STRING_4 ;  return ( ( ( STRING_5 + ( VAR_3 ) ) + STRING_6 ) + ( VAR_4 ) ) + STRING_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = insert ( METHOD_3 ( repo ) ) TYPE java.lang.String NAME key INIT = change . getKey ( ) . get ( )  METHOD_4 ( STRING_2 ) TYPE int NAME i INIT = 0 COND i <= INT_1  i ++ TYPE java.lang.String NAME VAR_1 INIT = key . METHOD_5 ( 0 , ( INT_2 - i ) )  METHOD_4 ( VAR_1 , change )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( new TYPE_3 ( STRING_2 , STRING_3 ) ) )  METHOD_5 ( VAR_1 , n )  assertEquals ( ( STRING_4 + ( ( STRING_5 + STRING_6 ) + STRING_7 ) ) , n . METHOD_6 ( ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_5 ( TYPE_4 . METHOD_6 ( METHOD_7 ( ) , getRevision ( ) , METHOD_8 ( ) ) )  VAR_1 . METHOD_9 ( TYPE_5 . METHOD_4 ( ) )  return java.util.Collections . METHOD_10 ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . add ( METHOD_2 ( VAR_2 , admin , STRING_1 , 1 ) ) TYPE TYPE_1 NAME VAR_3 INIT = user ( VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = user ( VAR_4 , admin )  METHOD_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) )  METHOD_5 ( STRING_3 , VAR_5 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME label IN METHOD_3 ( ) . METHOD_3 ( )  VAR_1 . add ( label . getName ( ) )  org.junit.Assert.assertEquals ( TYPE_3 . of ( STRING_1 ) , VAR_1 )
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c TYPE TYPE_2 NAME VAR_1  METHOD_2 ( )  VAR_2 = VAR_1  change = c  METHOD_3 ( )  return TYPE_3 . create ( c , VAR_3 ) ; COND ( rw ) != null  rw . METHOD_4 ( ) COND ( repo ) != null  repo . close ( )
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input TYPE TYPE_6 NAME ctl INIT = rsrc . METHOD_1 ( ) COND ! ( ctl . METHOD_2 ( ) )  VAR_1 . user ( user ) . METHOD_3 ( VAR_2 )  VAR_3 . index ( db . get ( ) , rsrc . getChange ( ) )  return TYPE_1 . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME onSuccess TYPE java.util.List<TYPE_1> NAME result TYPE java.util.ArrayList<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( result . size ( ) ) TYPE TYPE_1 NAME p IN result  r . add ( new TYPE_2 ( p ) )  VAR_1 . METHOD_1 ( req , new TYPE_3 ( r ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = METHOD_1 ( VAR_1 ) COND VAR_2 != null TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( config )  VAR_3 . METHOD_2 ( VAR_2 )  return VAR_3 ;  return null ; TYPE java.io.IOException NAME e  VAR_4 . error ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , e )  return null ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSet> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSet> NAME VAR_1 MODIFIER public RETURN boolean NAME apply TYPE com.google.gerrit.reviewdb.client.PatchSet NAME input  return METHOD_2 ( ) . METHOD_3 ( input , db ) ; TYPE com.google.gwtorm.server.OrmException NAME e  return false ; INIT = new TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ( ) { public boolean apply ( com.google.gerrit.reviewdb.client.PatchSet input ) { try { return METHOD_2 ( ) . METHOD_3 ( input , db ) ; } catch ( com.google.gwtorm.server.OrmException e ) { return false ; } } }  return TYPE_3 . METHOD_4 ( patchSets ( ) ) . METHOD_5 ( VAR_1 ) . METHOD_6 ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME id COND id . METHOD_2 ( ) . METHOD_3 ( STRING_1 )  return METHOD_4 ( ) ; COND id . METHOD_2 ( ) . METHOD_3 ( STRING_2 )  return true ; TYPE TYPE_2 NAME t IN VAR_1 COND t . METHOD_5 ( id )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_5 ) . to ( VAR_2 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_5 ( VAR_11 ) . METHOD_5 ( VAR_12 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME get TYPE java.lang.String NAME p TYPE TYPE_3<TYPE_1<TYPE_2>> NAME m TYPE TYPE_1<TYPE_2> NAME r INIT = m . get ( p ) COND r == null  r = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( )  return r ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 COND TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) COND VAR_1 != null NAME VAR_1  return STRING_1 ;  return STRING_2 ;  return STRING_3 ;  return null ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME id TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME message INIT = ( ( id . name ( ) ) + STRING_1 ) + VAR_2 COND VAR_3  VAR_1 . add ( new TYPE_2 ( message , true ) )  throw new TYPE_3 ( STRING_2 , VAR_1 ) ;  VAR_1 . add ( new TYPE_2 ( ( STRING_3 + message ) , false ) )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 )  VAR_2 . METHOD_2 ( revision . METHOD_3 ( ) )  VAR_2 . METHOD_4 ( VAR_1 ) TYPE java.util.List<TYPE_1> NAME VAR_4 INIT = new java.util.ArrayList < > ( ) COND VAR_2 . METHOD_5 ( )  VAR_4 . add ( new TYPE_1 ( VAR_2 ) )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = repo . commit ( ) . create ( ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME master INIT = repo . commit ( ) . METHOD_2 ( VAR_1 ) . create ( )  org.junit.Assert.assertEquals ( ( ( VAR_2 ) + 1 ) , METHOD_3 ( VAR_1 ) )  org.junit.Assert.assertEquals ( ( ( VAR_2 ) + 2 ) , METHOD_3 ( master ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = new TYPE_2 ( VAR_2 . getValue ( ) ) COND VAR_3 . equals ( VAR_4 )  VAR_1 . METHOD_2 ( VAR_5 ) COND ( query ) == null  VAR_1 . run ( )  query = VAR_1
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE org.eclipse.jgit.lib.Repository NAME repo  return new TYPE_1 ( TYPE_4 . of ( new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 , VAR_3 ) , new TYPE_7 ( VAR_1 , VAR_4 ) , new TYPE_8 ( VAR_1 ) , new TYPE_9 ( VAR_1 , VAR_4 , VAR_5 , VAR_2 ) , new TYPE_10 ( VAR_1 , repo , VAR_6 ) , new TYPE_11 ( VAR_7 ) , new TYPE_12 ( VAR_6 ) ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result TYPE java.lang.String NAME VAR_1 TYPE java.lang.String[] NAME args TYPE TYPE_2 NAME ctx INIT = VAR_2 . get ( ) TYPE java.lang.String NAME VAR_3 INIT = METHOD_2 ( ctx ) TYPE long NAME VAR_4 INIT = METHOD_3 ( ctx ) TYPE java.lang.String NAME VAR_5 INIT = METHOD_4 ( VAR_1 , args )  VAR_6 . METHOD_5 ( new TYPE_3 ( VAR_3 , METHOD_6 ( ctx ) , ( STRING_1 + VAR_5 ) , VAR_4 , TYPE_4 . METHOD_7 ( args ) , result ) )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3<?extendsTYPE_1<TYPE_2>> NAME VAR_1 COND ( VAR_1 . size ( ) ) != 1  throw new TYPE_4 ( STRING_1 ) ;  return new TYPE_5 < TYPE_2 > ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_2 ( STRING_1 )  repo . branch ( STRING_2 ) . commit ( ) . add ( STRING_3 , VAR_1 ) . create ( )  org.junit.Assert.assertEquals ( ( ( STRING_4 + ( VAR_1 . name ( ) ) ) + STRING_5 ) , METHOD_3 ( STRING_6 , STRING_7 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME result INIT = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( TYPE_3 . METHOD_6 ( VAR_2 ) , result . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( null , new TYPE_2 ( VAR_2 ) , null , null , null ) TYPE java.util.List<TYPE_3> NAME m INIT = VAR_1 . METHOD_3 ( repo , c , VAR_3 )  com.google.common.truth.Truth.assertThat ( TYPE_4 . METHOD_4 ( m ) ) . METHOD_5 ( STRING_1 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME delete TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE java.lang.String NAME id INIT = cd . getId ( ) . toString ( ) COND cd . getChange ( ) . getStatus ( ) . METHOD_1 ( )  VAR_1 . METHOD_2 ( id )  commit ( VAR_1 )  VAR_2 . METHOD_2 ( id )  commit ( VAR_2 )  return TYPE_3 . METHOD_3 ( null ) ; TYPE TYPE_4 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = METHOD_2 ( ) . add ( STRING_1 , STRING_2 ) . message ( STRING_3 ) . create ( ) TYPE java.lang.String NAME VAR_2 INIT = getChangeId ( VAR_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 INIT = METHOD_2 ( ) . add ( STRING_4 , STRING_5 ) . message ( STRING_6 ) . create ( ) TYPE java.lang.String NAME VAR_4 INIT = getChangeId ( VAR_3 )  TYPE_1 . METHOD_3 ( VAR_5 , STRING_7 , false )  METHOD_4 ( VAR_2 , VAR_2 )  METHOD_4 ( VAR_4 , VAR_4 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( 1 ) , 2 )  assertEquals ( STRING_1 , VAR_1 . toString ( ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( new TYPE_2 ( 0 ) , 0 )  VAR_2 . METHOD_2 ( VAR_1 . toString ( ) )  assertEquals ( VAR_1 , VAR_2 )
MODIFIER public RETURN com.google.gerrit.reviewdb.client.AccountGroup NAME METHOD_1 TYPE TYPE_1.Id NAME key TYPE TYPE_1.NameKey NAME name INIT = new TYPE_1 . NameKey ( ( STRING_1 + ( key . toString ( ) ) ) ) TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client . AccountGroup ( name , key , null )  VAR_1 . METHOD_2 ( VAR_2 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( STRING_1 + ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_2 ) + STRING_5 ) ) , METHOD_2 ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) ) )
MODIFIER static RETURN boolean NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME a TYPE org.eclipse.jgit.revwalk.RevCommit NAME b COND ( a . METHOD_2 ( ) ) != ( b . METHOD_2 ( ) )  return false ; TYPE int NAME i INIT = 0 COND i < ( a . METHOD_2 ( ) )  i ++ COND ( a . METHOD_3 ( i ) ) != ( b . METHOD_3 ( i ) )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_1 + ( VAR_1 . METHOD_2 ( ) )  VAR_3 . METHOD_3 ( VAR_2 ) COND VAR_4 . METHOD_4 ( VAR_1 )  VAR_3 . METHOD_5 ( STRING_2 , VAR_4 . METHOD_6 ( VAR_1 ) )  METHOD_7 ( VAR_1 )  VAR_3 . close ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 )  VAR_3 = VAR_1 . METHOD_3 ( VAR_4 class )  VAR_5 = TYPE_3 . METHOD_4 ( VAR_1 )  VAR_6 = TYPE_3 . METHOD_5 ( VAR_1 )  VAR_7 . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_1 , VAR_8 class ) )  VAR_9 . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_1 , VAR_10 class ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = table . METHOD_2 ( ) TYPE int NAME VAR_2 INIT = table . METHOD_3 ( ) TYPE int NAME row INIT = 0 COND row < VAR_2  row ++ COND ( METHOD_4 ( row ) ) != null  table . METHOD_5 ( row , VAR_3 )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( )  VAR_2 . add ( VAR_1 )  add ( VAR_2 )  VAR_1 . METHOD_2 ( ( STRING_1 + ( METHOD_3 ( ) . get ( ) ) ) )  display ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_1 != null TYPE TYPE_1 NAME a INIT = VAR_2 . get ( VAR_1 . getName ( ) ) COND VAR_3 . contains ( a )  VAR_2 . METHOD_1 ( a )  a . METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE TYPE_1<com.google.gerrit.reviewdb.client.Change> NAME changes INIT = null  changes = db . changes ( ) . METHOD_2 ( project . METHOD_3 ( ) ) TYPE com.google.gwtorm.server.OrmException NAME VAR_1 BLOCK BLOCK  METHOD_4 ( changes )  db . METHOD_5 ( ) . delete ( db . METHOD_5 ( ) . METHOD_2 ( project . METHOD_3 ( ) ) )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , null , new TYPE_5 ( null ) , new TYPE_6 ( null ) )
MODIFIER public RETURN void NAME METHOD_1  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , new TYPE_5 ( null , VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( STRING_2 , STRING_3 ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( STRING_4 , STRING_5 )  assertEquals ( STRING_6 , VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 , VAR_3 ) ) . METHOD_5 ( ) )  assertEquals ( STRING_7 , VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 , VAR_2 ) ) . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) . toString ( ) )  assertEquals ( STRING_4 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_5 ) . toString ( ) )  assertEquals ( STRING_6 , TYPE_1 . METHOD_2 ( STRING_7 , STRING_8 ) . toString ( ) )
MODIFIER protected RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( true )  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_3 ( )  VAR_2 = null TYPE TYPE_1 NAME VAR_3 IN VAR_4  VAR_3 . METHOD_4 ( )  VAR_4 . METHOD_5 ( )  super . METHOD_1 ( )
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME edit TYPE com.google.gerrit.reviewdb.client.PatchSet NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 INIT = rw . parseCommit ( org.eclipse.jgit.lib.ObjectId . METHOD_2 ( VAR_2 . getRevision ( ) . get ( ) ) ) COND VAR_3 . METHOD_3 ( ) . equals ( edit . METHOD_3 ( ) )  throw new TYPE_2 ( STRING_1 ) ;  return TYPE_3 . METHOD_4 ( rw , VAR_1 , VAR_3 , edit ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_3 . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_4 INIT = TYPE_6 . get ( VAR_1 ) TYPE TYPE_7 NAME VAR_5 INIT = VAR_4 . getProject ( ) . METHOD_4 ( ) COND ! ( VAR_2 . METHOD_5 ( VAR_6 [ VAR_5 . METHOD_6 ( ) ] , VAR_7 ) )  return VAR_1 . METHOD_7 ( ) ;  return VAR_8 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp  METHOD_2 ( req , rsp ) TYPE java.lang.Exception NAME e  METHOD_3 ( ) . log ( STRING_1 , e )  METHOD_4 ( rsp , false )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE boolean NAME VAR_1 COND ! VAR_1  return VAR_2 . values ( ) ; TYPE java.util.ArrayList<TYPE_2> NAME plugins INIT = new java.util.ArrayList < TYPE_2 > ( VAR_2 . values ( ) )  plugins . METHOD_2 ( VAR_3 . values ( ) )  return plugins ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = METHOD_2 ( STRING_2 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( METHOD_3 ( VAR_1 , null , null , null , null ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_4 INIT = insert ( METHOD_3 ( VAR_2 , null , null , null , null ) )  METHOD_4 ( STRING_3 )  METHOD_4 ( STRING_4 )  METHOD_4 ( STRING_5 , VAR_3 )  METHOD_4 ( STRING_6 , VAR_4 )
MODIFIER private RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE TYPE_1 NAME me TYPE TYPE_2 NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevCommit NAME base TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( )  VAR_4 . METHOD_2 ( VAR_3 )  VAR_4 . METHOD_3 ( base )  VAR_4 . METHOD_4 ( VAR_2 . METHOD_5 ( ) )  VAR_4 . METHOD_6 ( METHOD_7 ( me ) )  VAR_4 . METHOD_8 ( VAR_2 . METHOD_9 ( ) )  return VAR_1 . insert ( VAR_4 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 )  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 )  METHOD_4 ( user )  METHOD_5 ( STRING_3 , ( ( VAR_3 ) + STRING_4 ) , ( ( VAR_3 ) + STRING_5 ) , ( ( VAR_4 ) + STRING_4 ) , ( ( VAR_4 ) + STRING_5 ) , STRING_1 , STRING_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME change TYPE boolean NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( db , change . change ( ) ) COND VAR_1  com.google.common.truth.Truth.assertThat ( submit . METHOD_3 ( VAR_2 ) ) . isEmpty ( )  com.google.common.truth.Truth.assertThat ( submit . METHOD_3 ( VAR_2 ) ) . METHOD_4 ( )  METHOD_5 ( ( ( FLOAT_1 / ( VAR_4 ) ) / ( VAR_5 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user COND ! ( VAR_1 . METHOD_2 ( ) )  return VAR_2 ; TYPE java.lang.String NAME id INIT = TYPE_3 . METHOD_3 ( user . METHOD_4 ( ) . METHOD_5 ( ) ) COND id == null  return VAR_2 ;  return new TYPE_4 ( VAR_3 . get ( id ) ) ; TYPE TYPE_5 NAME e  VAR_4 . METHOD_6 ( java.lang.String.format ( STRING_1 , id ) , e )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_2 ( STRING_1 , e )  VAR_3 . close ( true ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_2 ( STRING_2 , e )  VAR_4 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_2 ( STRING_3 , e )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME topic INIT = VAR_1 . METHOD_2 ( ) MODIFIER public RETURN void NAME onSuccess TYPE java.lang.String NAME result  VAR_2 = true  TYPE_3 . display ( TYPE_4 . METHOD_4 ( change.getId ( ) ) )  METHOD_5 ( ) MODIFIER public RETURN void NAME METHOD_6 TYPE TYPE_5 NAME VAR_3  METHOD_7 ( true )  super . METHOD_6 ( VAR_3 )  TYPE_1 . topic ( change.getId ( ) . get ( ) , topic , METHOD_3 ( ) , new TYPE_2 < java.lang.String > ( ) { public void onSuccess ( java.lang.String result ) { VAR_2 = true ; TYPE_3 . display ( TYPE_4 . METHOD_4 ( change.getId ( ) ) ) ; METHOD_5 ( ) ; } public void METHOD_6 ( final TYPE_5 VAR_3 ) { METHOD_7 ( true ) ; super . METHOD_6 ( VAR_3 ) ; } } )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE int NAME VAR_3 INIT = TYPE_3 . METHOD_4 ( TYPE_2 . METHOD_2 ( VAR_4 ) , VAR_2 ) TYPE TYPE_4 NAME VAR_5 INIT = TYPE_2 . METHOD_5 ( VAR_3 , VAR_2 ) TYPE TYPE_5 NAME VAR_6 INIT = TYPE_6 . METHOD_1 ( ) . METHOD_6 ( new TYPE_7 ( VAR_5 , VAR_7 ) )  VAR_1 . METHOD_7 ( VAR_6 )  VAR_6 . close ( )  return TYPE_2 . METHOD_8 ( VAR_5 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cm COND cm . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = cm . METHOD_3 ( )  cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) )  cm . METHOD_4 ( VAR_1 , VAR_4 , VAR_3 . METHOD_6 ( ) )  cm . METHOD_7 ( null )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId  TYPE_2 . METHOD_2 ( ( ! ( VAR_1 . METHOD_3 ( ) ) ) , ( STRING_1 + STRING_2 ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = TYPE_3 . METHOD_4 ( db ) . changes ( ) . get ( changeId )  TYPE_2 . METHOD_5 ( change , STRING_3 , changeId )  return new TYPE_1 ( args , change . getProject ( ) , change ) . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( admin )  METHOD_4 ( VAR_1 , VAR_2 )  assertThat ( VAR_3 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_4 ) . to ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 , VAR_2 ) . METHOD_6 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_10 )
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( VAR_1 . get ( ) ) == ( rsrc . METHOD_1 ( ) )  throw new TYPE_6 ( STRING_1 ) ;  return VAR_2 . METHOD_2 ( rsrc . METHOD_1 ( ) ) ;
MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE TYPE_1.NameKey NAME name  return VAR_1 . METHOD_1 ( name ) ; TYPE TYPE_2 NAME err  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err )  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p TYPE java.lang.String NAME url NAME p  url = VAR_2  break ;  url = admin . METHOD_2 ( )  break ;  throw new TYPE_3 ( ( STRING_1 + p ) ) ;  git = TYPE_4 . METHOD_3 ( ( ( url + STRING_2 ) + ( project . get ( ) ) ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME file TYPE TYPE_2<TYPE_1> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( project . getName ( ) , VAR_1 , file )  return VAR_2 . isEmpty ( ) ? null : VAR_2 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  install ( VAR_1 . METHOD_2 ( VAR_2 class ) )  install ( TYPE_1 . METHOD_3 ( ) )  install ( new TYPE_2 ( ) )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_3 class ) . to ( VAR_4 class )  install ( new TYPE_3 ( ) )
MODIFIER public final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key COND ( ( VAR_1 ) == null ) && ( ( VAR_2 ) != null )  throw new TYPE_3 ( STRING_1 ) ; COND ( ( VAR_1 ) != null ) && ( ( VAR_2 ) == null )  throw new TYPE_3 ( STRING_2 ) ;  return METHOD_1 ( key , 0 , true , ( ( VAR_1 ) != null ? new TYPE_4 < TYPE_5 > ( ) : null ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE short NAME VAR_3 TYPE int NAME line TYPE java.lang.String NAME VAR_4 INIT = METHOD_2 ( VAR_2 , VAR_3 , line )  VAR_1 . append ( ( ( ( ( STRING_1 + line ) + STRING_2 ) + VAR_4 ) + STRING_3 ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME commit TYPE TYPE_2 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( rw . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( )  VAR_1 . METHOD_5 ( commit ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 IN VAR_3 COND VAR_1 . METHOD_6 ( VAR_1 . parseCommit ( VAR_2 ) , VAR_1 . parseCommit ( commit ) )  return true ;  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( project . get ( ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 ) COND VAR_2 . METHOD_3 ( )  return VAR_2 ;  throw new TYPE_2 ( STRING_1 ) ; TYPE java.io.IOException NAME e  throw new TYPE_2 ( STRING_2 ) ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1  < TYPE_3 > api = VAR_2 . get ( VAR_3 class , STRING_1 )  return TYPE_4 . METHOD_2 ( api . METHOD_3 ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , VAR_4 ) . METHOD_1 ( ) ) ;
MODIFIER public RETURN void NAME index TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id,TYPE_2> NAME i IN METHOD_1 ( ) TYPE TYPE_3<TYPE_2> NAME VAR_1 INIT = VAR_2 . METHOD_2 ( id ) COND VAR_1 . METHOD_3 ( )  i . METHOD_4 ( VAR_1 . get ( ) )  i . delete ( id )  METHOD_5 ( id . get ( ) )  TYPE_4 . METHOD_6 ( id )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3 NAME git INIT = METHOD_2 ( ) TYPE TYPE_4.Result NAME change INIT = METHOD_3 ( git , true ) TYPE TYPE_4.Result NAME VAR_1 INIT = METHOD_3 ( git , true ) TYPE TYPE_4.Result NAME VAR_2 INIT = METHOD_3 ( git , true )  METHOD_3 ( git , false ) TYPE java.util.Set<java.lang.String> NAME changes INIT = METHOD_4 ( change )  METHOD_5 ( changes , VAR_1 , VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1  return TYPE_1 . create ( ) . set ( STRING_1 , false ) . set ( STRING_2 , 0 ) . set ( STRING_3 , FLOAT_1 ) . set ( STRING_4 , true ) . set ( STRING_5 , INT_1 ) . set ( STRING_6 , false ) . set ( STRING_7 , true ) . set ( STRING_8 , true ) . set ( STRING_9 , STRING_10 ) . set ( STRING_11 , TYPE_2 . METHOD_2 ( type ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = getRevision ( ) COND VAR_1 == null  return ; TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( getChange ( ) , walk , VAR_1 , VAR_4 , VAR_5 , VAR_6 )  VAR_3 . METHOD_2 ( )  METHOD_3 ( VAR_7 , VAR_8 )  METHOD_3 ( VAR_9 , VAR_10 )  VAR_11 = VAR_12
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_3 . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_4 INIT = ( ( TYPE_5 ) ( VAR_5 ) ) TYPE TYPE_6.Change NAME change INIT = TYPE_7 . get ( VAR_1 ) TYPE TYPE_8.NameKey NAME name INIT = change . METHOD_4 ( ) COND ! ( VAR_2 . METHOD_5 ( TYPE_9 . create ( name . get ( ) ) , VAR_6 ) )  return VAR_1 . METHOD_6 ( ) ;  return VAR_7 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return VAR_1 . id ( VAR_2 . get ( ) . apply ( change , in ) . VAR_3 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME s INIT = ( ( TYPE_2 ) ( db ) ) TYPE TYPE_3 NAME e INIT = new TYPE_3 ( s )  METHOD_2 ( db , s , e )  METHOD_3 ( db , s , e )  METHOD_4 ( db )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_2 , VAR_5 , VAR_6 , VAR_7 ) . to ( VAR_8 ) . METHOD_6 ( VAR_9 ) . to ( VAR_3 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_4 ( VAR_1 ) TYPE TYPE_3 NAME in INIT = TYPE_5 . METHOD_2 ( VAR_2 )  return new TYPE_1 ( in ) ; TYPE java.io.IOException NAME e  throw new TYPE_6 ( ( STRING_1 + VAR_1 ) , e ) ; TYPE TYPE_7 NAME e  throw new TYPE_6 ( ( STRING_1 + VAR_1 ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = STRING_1 TYPE java.lang.String NAME value INIT = STRING_2 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( name , value )  org.junit.Assert . METHOD_3 ( name , VAR_1 . METHOD_4 ( ) )  org.junit.Assert . METHOD_3 ( value , VAR_1 . getValue ( ) )  org.junit.Assert.assertEquals ( 0 , VAR_1 . METHOD_5 ( ) . size ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3.Result NAME r INIT = METHOD_2 ( ) TYPE TYPE_4 NAME in INIT = new TYPE_4 ( )  VAR_1 = user . email TYPE TYPE_5 NAME VAR_2 INIT = VAR_3 . changes ( ) . id ( r . getChangeId ( ) )  VAR_2 . METHOD_1 ( in )  org.junit.Assert.assertEquals ( TYPE_6 . of ( user . id ) , TYPE_7 . METHOD_3 ( VAR_2 . get ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( VAR_1 , VAR_2 )  assertThat ( VAR_3 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_4 ) . to ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 , VAR_2 ) . METHOD_6 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_10 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 , VAR_3 )  METHOD_3 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_4 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME m  VAR_1 . set ( ( base != null ? new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , base . METHOD_1 ( ) ) : null ) , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , VAR_2 . METHOD_1 ( ) , VAR_2 . edit ( ) ) , VAR_3 , VAR_4 , VAR_5 )  VAR_1 . METHOD_2 ( m , VAR_6 , VAR_7 . get ( 0 ) , VAR_8 . get ( 0 ) , VAR_9 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_1 ( ) COND ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) && ( config . METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( new TYPE_2 ( VAR_5 . get ( ) ) )  VAR_6 . set ( VAR_7 . create ( null , TYPE_3 . METHOD_4 ( ) , VAR_4 ) . METHOD_5 ( INT_1 , VAR_8 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME user TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME input INIT = TYPE_3 . create ( )  input . METHOD_2 ( user )  TYPE_4 . change ( id ) . view ( STRING_1 ) . put ( input , VAR_1 )
MODIFIER private RETURN java.lang.String NAME url TYPE TYPE_1 NAME info  return info . METHOD_1 ( ) ? TYPE_2 . METHOD_2 ( base , VAR_1 , info . path ( ) ) : ( VAR_2 ) == ( VAR_3 ) ? TYPE_2 . METHOD_3 ( base , VAR_1 , info . path ( ) ) : TYPE_2 . METHOD_4 ( VAR_1 , info . path ( ) ) ;
MODIFIER private RETURN java.util.Map<TYPE_1.Key,TYPE_1.Id> NAME METHOD_1 TYPE java.util.Map<TYPE_1.Key,TYPE_1.Id> NAME r INIT = new TYPE_3 < TYPE_1 . Key , TYPE_1 . Id > ( ) TYPE TYPE_4.Change NAME c IN db . changes ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) )  r . put ( c . getKey ( ) , c . getId ( ) )  return r ;
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME in COND in != null MODIFIER public RETURN int NAME METHOD_3 TYPE TYPE_2 NAME a TYPE TYPE_2 NAME b  return a . METHOD_4 ( ) . METHOD_5 ( b . METHOD_4 ( ) ) ;  java.util.Collections . METHOD_1 ( TYPE_3 . METHOD_2 ( in ) , new TYPE_4 < TYPE_2 > ( ) { public int METHOD_3 ( TYPE_2 a , TYPE_2 b ) { return a . METHOD_4 ( ) . METHOD_5 ( b . METHOD_4 ( ) ) ; } } )  return in ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_2 . getChange ( ) . getStatus ( ) ) != ( VAR_3 )  return false ; TYPE TYPE_1 NAME t IN TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_3 ( ) COND ! ( VAR_2 . METHOD_4 ( t ) )  return false ;  return true ;
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2<?> NAME VAR_2 INIT = ( ( TYPE_2 < ? > ) ( VAR_1 ) )  return ( getName ( ) . equals ( VAR_2 . getName ( ) ) ) && ( METHOD_2 ( ) . equals ( VAR_2 . METHOD_2 ( ) ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) . METHOD_3 ( this )  db = VAR_1 . METHOD_4 ( )  TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ( ( db ) instanceof TYPE_2 ) ) . METHOD_7 ( )  VAR_2 = ( ( TYPE_2 ) ( db ) ) . METHOD_8 ( )  VAR_3 = VAR_2 . METHOD_9 ( STRING_1 )  VAR_4 = VAR_2 . METHOD_9 ( STRING_2 )  VAR_5 = VAR_2 . METHOD_9 ( STRING_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( ( ( java.lang.String ) ( null ) ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )  METHOD_2 ( b , b . append ( STRING_2 ) )  METHOD_2 ( b , b . append ( STRING_3 ) )  assertEquals ( STRING_4 , b . METHOD_3 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_2.Project NAME project TYPE TYPE_1 NAME result INIT = TYPE_3 . METHOD_2 ( VAR_1 , repo , project ) COND result != ( VAR_2 )  return result ;  result = TYPE_3 . METHOD_2 ( VAR_3 , repo , project ) COND result != ( VAR_2 )  return result ;  result = TYPE_3 . METHOD_2 ( VAR_4 , repo , project ) COND result != ( VAR_2 )  return result ;  return VAR_2 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_3 INIT = VAR_2 . METHOD_3 ( STRING_1 ) COND VAR_3 . METHOD_4 ( )  return new TYPE_1 ( VAR_3 . METHOD_5 ( 1 ) ) ;  VAR_2 . close ( )  return null ; TYPE TYPE_5 NAME e  return null ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME message MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( result . METHOD_4 ( ) ) )  METHOD_5 ( )  TYPE_1 . METHOD_2 ( project , branch , null , message , base , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( result . METHOD_4 ( ) ) ) ; METHOD_5 ( ) ; } } )
MODIFIER protected RETURN Project.NameKey NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_1 NAME VAR_4 TYPE TYPE_3 NAME in INIT = new TYPE_3 ( )  in . name = name ( VAR_1 )  VAR_5 = ( VAR_2 != null ) ? VAR_2 . get ( ) : null  VAR_6 = VAR_4  VAR_7 = VAR_3  VAR_6 = VAR_4  return METHOD_1 ( in ) ;
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE TYPE_1 NAME VAR_1 COND VAR_2 . METHOD_2 ( false )  throw new java.io.IOException ( STRING_1 ) ; TYPE TYPE_1.Result NAME result INIT = VAR_3 . METHOD_1 ( db , changeId , VAR_1 ) COND VAR_4 . METHOD_2 ( false )  throw new java.io.IOException ( STRING_2 ) ;  return result ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE boolean NAME edit TYPE TYPE_1 NAME VAR_5 INIT = METHOD_2 ( VAR_1 )  VAR_6 . put ( VAR_5 . METHOD_3 ( VAR_3 ) , new TYPE_2 ( METHOD_4 ( VAR_1 , VAR_7 . METHOD_5 ( ) , VAR_2 , 0 , VAR_8 , null ) , VAR_2 , VAR_4 ) )  VAR_9 . add ( new TYPE_3 ( METHOD_6 ( VAR_5 ) , ( ( VAR_3 - VAR_4 ) + 1 ) , VAR_3 , edit ) )
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id,java.lang.String> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) ) TYPE java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME VAR_2 INIT = VAR_3 . get ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( changeId ) COND ( VAR_2 . size ( ) ) != 1  throw new TYPE_5 ( changeId ) ;  return VAR_2 . get ( 0 ) . METHOD_4 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1  return METHOD_2 ( ) ; COND ! ( VAR_2 . METHOD_3 ( ) )  METHOD_4 ( )  return METHOD_2 ( ) ; TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_3 . METHOD_5 ( METHOD_6 ( ) )  METHOD_1 ( repo )  VAR_1 = true TYPE TYPE_2|java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return METHOD_2 ( ) ;
MODIFIER protected RETURN TYPE_1<?> NAME METHOD_1 TYPE TYPE_2.Factory NAME VAR_1 TYPE TYPE_3 NAME rsrc TYPE TYPE_4 NAME input  return VAR_2 . apply ( rsrc . METHOD_2 ( ) . METHOD_3 ( ) , rsrc . getChange ( ) , rsrc . getChange ( ) . currentPatchSetId ( ) , null ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME cfg INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( )  cfg . METHOD_4 ( ) . METHOD_5 ( )  cfg . METHOD_4 ( ) . put ( VAR_3 . getName ( ) , VAR_3 )  METHOD_6 ( cfg )
MODIFIER public RETURN com.google.gerrit.reviewdb.client.PatchSet NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.reviewdb.server.ReviewDb> NAME db COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( db ) COND c == null  return null ; TYPE com.google.gerrit.reviewdb.client.PatchSet NAME p IN METHOD_2 ( db ) COND p . getId ( ) . equals ( c . currentPatchSetId ( ) )  VAR_1 = p  return p ;  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) == null COND config . METHOD_2 ( STRING_1 ) . contains ( STRING_2 )  VAR_1 = new TYPE_1 ( false , TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , config , STRING_2 ) )  VAR_1 = new TYPE_1 ( false )
MODIFIER public RETURN TYPE_1.ChangeInfo NAME get TYPE TYPE_2<TYPE_3> NAME s  return TYPE_5 . apply ( VAR_1 . METHOD_1 ( s ) . format ( change ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_4 ( STRING_1 , e ) ;
MODIFIER private RETURN TYPE_1<java.lang.String,java.lang.String> NAME METHOD_1 TYPE TYPE_1<java.lang.String,java.lang.String> NAME VAR_1 INIT = new TYPE_1 < java.lang.String , java.lang.String > ( )  VAR_1 . put ( STRING_1 , VAR_2 class . getName ( ) )  VAR_1 . put ( STRING_2 , STRING_3 )  VAR_1 . put ( STRING_4 , STRING_5 )  return VAR_1 ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( ( change ) != null ) && ( ( METHOD_2 ( ) ) != null ) TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( METHOD_2 ( ) )  r . append ( change . getChangeId ( ) )  return r . toString ( ) ;  return null ;
MODIFIER protected RETURN java.lang.String NAME METHOD_1 COND ( ( change ) != null ) && ( ( METHOD_2 ( ) ) != null ) TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( METHOD_2 ( ) )  r . append ( change . getChangeId ( ) )  return r . toString ( ) ;  return null ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME approvals INIT = db . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) ) . METHOD_4 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME a IN approvals  a . METHOD_5 ( change )  db . METHOD_2 ( ) . update ( approvals )
MODIFIER protected RETURN void NAME METHOD_1  install ( new TYPE_1 ( ) . METHOD_2 ( VAR_1 class , VAR_2 class ) . METHOD_3 ( VAR_3 . Factory class ) )  install ( new TYPE_1 ( ) . METHOD_2 ( VAR_4 class , VAR_5 class ) . METHOD_3 ( VAR_6 . Factory class ) )  install ( new TYPE_2 ( VAR_7 ) ) COND ( VAR_8 ) == null  install ( new TYPE_3 ( ) )  install ( new TYPE_4 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = change . getProject ( )  return VAR_2 . METHOD_1 ( VAR_1 , user ) . METHOD_1 ( change ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME r TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . get ( )  VAR_1 . METHOD_2 ( r . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( r . METHOD_5 ( ) )  return VAR_1 . apply ( change ) ; TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = METHOD_2 ( STRING_2 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( METHOD_3 ( VAR_1 ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_4 INIT = insert ( METHOD_3 ( VAR_2 ) )  METHOD_4 ( STRING_3 )  METHOD_4 ( STRING_4 , VAR_3 )  METHOD_4 ( STRING_5 , VAR_4 )  METHOD_4 ( STRING_6 , VAR_4 , VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_2 . METHOD_1 ( VAR_1 ) COND ( ( VAR_3 ) instanceof TYPE_1 ) && ( VAR_4 . METHOD_2 ( false , true ) )  ( ( TYPE_1 ) ( VAR_3 ) ) . METHOD_1 ( )  VAR_5 . METHOD_3 ( this )  VAR_5 . METHOD_4 ( )  return true ;  return false ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE byte[] NAME VAR_3 INIT = new TYPE_2 ( ) . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( VAR_1 ) , TYPE_3 . name ( ) )  return new TYPE_4 ( VAR_3 ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( TYPE_3 . name ( ) ) . METHOD_7 ( VAR_2 ) ;
MODIFIER protected RETURN void NAME METHOD_1 COND ( db ) != null TYPE TYPE_1 NAME ps INIT = METHOD_2 ( ) COND ps != null TYPE TYPE_2 NAME w IN METHOD_3 ( ) COND w . METHOD_4 ( )  add ( VAR_1 , w . getAccountId ( ) ) TYPE TYPE_3.OrmException NAME err BLOCK BLOCK
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return changes . id ( VAR_1 . get ( ) . apply ( revision , in ) . VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException|TYPE_4|java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER protected RETURN void NAME run TYPE TYPE_2 NAME input INIT = TYPE_3 . METHOD_1 ( TYPE_4 . METHOD_2 ( VAR_1 , ObjectId : : getName ) )  VAR_2 = VAR_3 TYPE TYPE_5 NAME r INIT = VAR_4 . apply ( new TYPE_6 ( VAR_5 ) , input )  METHOD_3 ( VAR_6 , STRING_1 )  METHOD_3 ( VAR_7 , STRING_2 )  METHOD_3 ( VAR_8 , STRING_3 ) TYPE TYPE_7|java.io.IOException NAME e  throw METHOD_4 ( e ) ;
MODIFIER public RETURN TYPE_1<java.util.Set<java.lang.String>> NAME apply TYPE TYPE_2 NAME req TYPE TYPE_5 NAME VAR_1 INIT = req . METHOD_1 ( ) TYPE TYPE_6 NAME notes INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = notes . METHOD_4 ( ) COND VAR_2 == null  VAR_2 = java.util.Collections . METHOD_5 ( )  return TYPE_1 . METHOD_6 ( VAR_2 ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1.NameKey NAME branch TYPE TYPE_2 NAME r INIT = new TYPE_2 ( )  TYPE_3 . p ( r , branch . getParentKey ( ) )  TYPE_3 . METHOD_2 ( r , branch )  TYPE_3 . a ( r , STRING_1 )  return ( VAR_1 ) + r ;
MODIFIER private static RETURN Account.Id NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.Account NAME a INIT = VAR_1 . METHOD_2 ( db , VAR_2 ) COND a == null  throw new TYPE_2 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ;  return a . getId ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME value COND ( ! ( VAR_1 . METHOD_2 ( name ) ) ) || ( VAR_1 . get ( name ) . isEmpty ( ) )  VAR_1 . put ( name , new TYPE_1 . String ( value ) )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1.ChangeInfo NAME info  info . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) TYPE TYPE_2<TYPE_3> NAME VAR_1 INIT = info . METHOD_1 ( ) . values ( )  TYPE_3 . METHOD_3 ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_3 ( ) TYPE TYPE_4 NAME insert INIT = METHOD_2 ( VAR_2 , VAR_1 )  VAR_3 . insert ( VAR_4 )  org.junit.Assert . METHOD_3 ( STRING_1 ) TYPE TYPE_1.OrmException NAME e  org.junit.Assert . METHOD_4 ( e . METHOD_5 ( ) , VAR_1 )  METHOD_6 ( insert , 1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_3 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = TYPE_1 . METHOD_1 ( project , VAR_1 . getAccountId ( ) ) TYPE TYPE_2 NAME u INIT = METHOD_2 ( c , VAR_1 )  u . METHOD_3 ( c . METHOD_4 ( ) )  u . METHOD_5 ( c . METHOD_6 ( ) . get ( ) )  u . commit ( )  return c ;
MODIFIER private RETURN TYPE_1 NAME file TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_1 ( ) TYPE TYPE_1 NAME e INIT = new TYPE_1 ( name )  e . METHOD_2 ( VAR_3 )  e . METHOD_3 ( VAR_1 . insert ( VAR_4 , TYPE_3 . METHOD_4 ( name ) ) )  VAR_1 . METHOD_5 ( )  return e ;  VAR_1 . METHOD_6 ( )
MODIFIER protected RETURN java.util.List<org.eclipse.jgit.revwalk.RevCommit> NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( project ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  rw . METHOD_3 ( rw . parseCommit ( repo . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) ) )  return TYPE_1 . METHOD_6 ( rw ) ;  rw . METHOD_7 ( )  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME db TYPE org.eclipse.jgit.lib.ObjectId NAME id COND id != null  VAR_1 = db . METHOD_2 ( )  revision = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) . parseCommit ( id )  METHOD_3 ( )  VAR_1 . METHOD_4 ( )  VAR_1 = null  revision = null  METHOD_3 ( )
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = db . METHOD_3 ( ) . get ( new TYPE_2 . Key ( VAR_3 , VAR_1 ) ) COND VAR_2 != null  return TYPE_1 . of ( VAR_2 . getAccountId ( ) ) ;  return TYPE_1 . METHOD_4 ( ) ;  db . close ( )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 == null  throw new TYPE_3 ( ) ; TYPE java.lang.String NAME url INIT = VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) . METHOD_3 ( ) , size ) COND TYPE_5 . METHOD_4 ( url )  throw new TYPE_3 ( ) ;  return TYPE_6 . METHOD_5 ( url ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME t INIT = this TYPE int NAME VAR_2 INIT = VAR_1 COND ( t . METHOD_2 ( ) ) && ( 0 < VAR_1 )  VAR_1 --  t = ( ( TYPE_2 ) ( t ) ) . VAR_3 . METHOD_3 ( ) COND t . METHOD_2 ( )  return ( ( TYPE_2 ) ( t ) ) . VAR_4 ;  throw new TYPE_3 ( VAR_2 ) ;
MODIFIER public RETURN void NAME index TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_1,TYPE_3> NAME i IN METHOD_1 ( )  VAR_2 . METHOD_2 ( VAR_1 ) TYPE TYPE_4<TYPE_3> NAME VAR_3 INIT = VAR_2 . get ( VAR_1 ) COND VAR_3 . METHOD_3 ( )  i . METHOD_4 ( VAR_3 . get ( ) )  i . delete ( VAR_1 )  METHOD_5 ( VAR_1 . get ( ) )  TYPE_5 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_1 == null ) || ( ( VAR_1 . getValue ( ) ) == null )  throw new TYPE_3 ( STRING_1 ) ;  return TYPE_4 . METHOD_2 ( VAR_2 . METHOD_1 ( VAR_1 . getValue ( ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = id TYPE java.util.List<TYPE_8> NAME VAR_3 INIT = put . get ( ) . apply ( VAR_1 , in ) COND VAR_3 . isEmpty ( )  return TYPE_9 . METHOD_1 ( ) ; COND ( VAR_3 . size ( ) ) == 1  return VAR_3 . get ( 0 ) ;  throw new TYPE_10 ( ) ;
MODIFIER private RETURN java.util.Map<com.google.gerrit.reviewdb.client.Account.Id,TYPE_1> NAME METHOD_1 TYPE TYPE_2.Id NAME VAR_1 TYPE java.util.Map<com.google.gerrit.reviewdb.client.Account.Id,TYPE_1> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_1 NAME m IN db . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  VAR_2 . put ( m . getAccountId ( ) , m )  return VAR_2 ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME req TYPE java.lang.String NAME VAR_1 INIT = req . METHOD_2 ( ) COND TYPE_2 . METHOD_3 ( VAR_1 )  return VAR_2 ;  return TYPE_3 . is ( CHAR_1 ) . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  VAR_2 . METHOD_2 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_3 ( VAR_1 ) ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( VAR_2 . METHOD_5 ( ) ) ) ) . METHOD_6 ( VAR_1 )
MODIFIER private RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_3 ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = METHOD_3 ( c ) COND ps != null  METHOD_4 ( ps , VAR_1 )  return METHOD_5 ( ) . insert ( VAR_4 , VAR_1 . toString ( ) . METHOD_6 ( STRING_1 ) ) ; TYPE TYPE_2 NAME e  throw new java.io.IOException ( e ) ;  return null ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3<TYPE_4> NAME VAR_3 INIT = new TYPE_3 < > ( ) TYPE TYPE_5 NAME b IN VAR_4 COND b . ref ( ) . contains ( VAR_1 . METHOD_2 ( ) )  VAR_3 . add ( new TYPE_4 ( b ) )  VAR_2 . METHOD_3 ( VAR_1 , new TYPE_6 ( VAR_3 ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE TYPE_1.Status NAME status MODIFIER public RETURN boolean NAME apply TYPE TYPE_1 NAME input  return ( input . getStatus ( ) ) == status ;  return TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_1 , new TYPE_5 < TYPE_1 > ( ) { public boolean apply ( TYPE_1 input ) { return ( input . getStatus ( ) ) == status ; } } ) ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 INIT = change . currentPatchSetId ( ) TYPE TYPE_1 NAME ps INIT = new TYPE_1 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( change.getId ( ) , ( VAR_1 != null ? ( VAR_1 . get ( ) ) + 1 : 1 ) ) )  ps . METHOD_2 ( STRING_1 )  change . METHOD_3 ( ps )  TYPE_2 . METHOD_4 ( change )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME a TYPE java.lang.String NAME b TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . create ( a ) , TYPE_2 . create ( b ) ) . toString ( ) COND ! ( VAR_2 . equals ( VAR_1 ) )  org.junit.Assert . METHOD_3 ( java.lang.String.format ( STRING_1 , a , b , VAR_2 , VAR_1 ) )
MODIFIER private static RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE java.util.List<org.eclipse.jgit.lib.ObjectId> NAME VAR_1 COND ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) )  return null ; MODIFIER public RETURN java.lang.String NAME apply TYPE org.eclipse.jgit.lib.ObjectId NAME id  return id . getName ( ) ;  return TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < org.eclipse.jgit.lib.ObjectId , java.lang.String > ( ) { public java.lang.String apply ( org.eclipse.jgit.lib.ObjectId id ) { return id . getName ( ) ; } } ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 * ( VAR_3 . METHOD_4 ( ) ) ) + ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) ) ) , VAR_4 )  VAR_5 . METHOD_2 ( ) . METHOD_3 ( ( ( VAR_1 * ( VAR_6 . METHOD_4 ( ) ) ) + ( VAR_6 . METHOD_5 ( ) . METHOD_6 ( ) ) ) , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME branch INIT = db . METHOD_2 ( VAR_1 ) COND branch != null  VAR_2 = VAR_3 . parseCommit ( branch . METHOD_3 ( ) )  base = TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_2 ) COND ( VAR_2 ) != null  VAR_4 = TYPE_2 . METHOD_4 ( db . METHOD_6 ( ) , VAR_2 )  VAR_4 = TYPE_2 . METHOD_7 ( )
MODIFIER private RETURN boolean NAME equals TYPE com.google.gerrit.reviewdb.client.PatchSet NAME p TYPE java.lang.String NAME id TYPE boolean NAME VAR_1 INIT = ( METHOD_1 ( ) ) == ( VAR_2 ) TYPE java.lang.String NAME VAR_3 INIT = ( ( p . getRevision ( ) ) != null ) ? p . getRevision ( ) . get ( ) : null  return ( VAR_1 && ( id . equals ( VAR_3 ) ) ) || ( ( ( ! VAR_1 ) && ( VAR_3 != null ) ) && ( VAR_3 . METHOD_2 ( id ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1  VAR_2 . apply ( rsrc , TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME input INIT = new TYPE_1 ( ) TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 )  VAR_1 . add ( STRING_1 )  VAR_3 = VAR_1  project ( ) . METHOD_3 ( input )  METHOD_4 ( STRING_2 ) TYPE TYPE_3 NAME e  com.google.common.truth.Truth.assertThat ( e ) . METHOD_5 ( ) . isEqualTo ( METHOD_6 ( TYPE_4 . of ( STRING_1 ) ) )  METHOD_7 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME name TYPE TYPE_2 NAME p INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = repo . METHOD_2 ( )  p . METHOD_3 ( VAR_1 , new org.eclipse.jgit.revwalk.RevWalk ( repo ) . METHOD_4 ( repo . METHOD_5 ( name ) ) )  return p ;  METHOD_6 ( VAR_2 )  VAR_1 . close ( )  METHOD_7 ( VAR_3 )  to = VAR_4
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME master INIT = STRING_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = git . METHOD_2 ( ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( )  METHOD_5 ( master , STRING_3 , STRING_4 , STRING_5 )  VAR_2 . METHOD_6 ( VAR_1 )  METHOD_7 ( VAR_3 , project , STRING_6 ) TYPE TYPE_1.Result NAME r INIT = METHOD_5 ( STRING_7 , STRING_8 , STRING_9 , STRING_10 )  r . METHOD_8 ( )  r . METHOD_9 ( VAR_4 , null , admin )  METHOD_10 ( master , STRING_8 )
MODIFIER public RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME update TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE TYPE_3 NAME info TYPE TYPE_4<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_2 TYPE TYPE_5<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_3  return METHOD_1 ( db , update , VAR_1 , change , ps . getId ( ) , ps . METHOD_2 ( ) , info . METHOD_3 ( ) . METHOD_4 ( ) , info . METHOD_5 ( ) . METHOD_4 ( ) , VAR_2 , VAR_3 ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user TYPE TYPE_3 NAME revision  return new TYPE_1 ( user . METHOD_2 ( ) . METHOD_3 ( null ) , revision . METHOD_4 ( ) , TYPE_4 . of ( user . getAccountId ( ) ) , null , VAR_1 , VAR_2 , TYPE_5 . of ( ) ) ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Account NAME METHOD_1 TYPE java.lang.String NAME VAR_1  return VAR_2 . get ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ; TYPE TYPE_2 NAME e NAME VAR_3 COND ( VAR_7 . METHOD_4 ( VAR_1 ) ) == null  return METHOD_5 ( VAR_1 ) ;  break ; BLOCK BLOCK  throw e ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 INIT = 2 TYPE int NAME VAR_2 INIT = INT_1 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME c INIT = new TYPE_2 ( p , VAR_2 )  METHOD_2 ( p , c . getParentKey ( ) )  METHOD_3 ( ( VAR_2 != ( c . METHOD_4 ( ) ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME msg TYPE TYPE_3 NAME c  res . METHOD_2 ( VAR_1 )  TYPE_4 . METHOD_3 ( req , res , null , c )  TYPE_4 . METHOD_4 ( null , res , msg )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3<byte[]> NAME VAR_1 TYPE java.util.List<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( ) TYPE byte[] NAME key IN VAR_1 TYPE byte[] NAME VAR_2 INIT = METHOD_2 ( key ) COND VAR_2 != null  r . add ( new TYPE_2 ( key , VAR_2 ) )  return new TYPE_4 < TYPE_2 > ( r ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId  com.google.common.truth.Truth.assertThat ( VAR_1 . changes ( ) . id ( changeId ) . info ( ) . VAR_2 ) . METHOD_2 ( STRING_1 ) . isEqualTo ( true ) TYPE TYPE_1 NAME rsrc INIT = METHOD_3 ( changeId ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_4 ( rsrc )  com.google.common.truth.Truth.assertThat ( VAR_3 . METHOD_5 ( ) ) . METHOD_2 ( STRING_2 ) . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( VAR_3 . METHOD_7 ( ) ) . METHOD_2 ( STRING_3 ) . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  VAR_1 = true  METHOD_4 ( )  TYPE_4 . display ( TYPE_5 . METHOD_5 ( id ) ) MODIFIER public RETURN void NAME METHOD_6 TYPE TYPE_6 NAME VAR_2  METHOD_7 ( true )  super . METHOD_6 ( VAR_2 )  TYPE_1 . METHOD_2 ( id . get ( ) , revision , METHOD_3 ( ) , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { VAR_1 = true ; METHOD_4 ( ) ; TYPE_4 . display ( TYPE_5 . METHOD_5 ( id ) ) ; } public void METHOD_6 ( TYPE_6 VAR_2 ) { METHOD_7 ( true ) ; super . METHOD_6 ( VAR_2 ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , admin )  assertThat ( VAR_3 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( admin ) . to ( VAR_4 ) . METHOD_6 ( VAR_5 , VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a TYPE com.google.gerrit.reviewdb.client.Change NAME change  VAR_1 = ( change . METHOD_2 ( ) . METHOD_3 ( ) ) / INT_1  VAR_2 = ( change . METHOD_4 ( ) . METHOD_3 ( ) ) / INT_1  VAR_3 = change . METHOD_5 ( )  VAR_4 = change . getStatus ( ) . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  VAR_1 . METHOD_3 ( )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( new TYPE_3 ( ) ) ) . METHOD_6 ( )  VAR_1 . METHOD_7 ( )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( ) )  VAR_2 . METHOD_8 ( )  VAR_3 = new TYPE_4 ( VAR_4 , VAR_5 , VAR_6 , VAR_1 , VAR_7 , VAR_8 )  VAR_3 . METHOD_9 ( )  VAR_2 . METHOD_10 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME message  res . METHOD_2 ( VAR_1 )  METHOD_3 ( res , VAR_2 )  METHOD_4 ( res ) TYPE TYPE_3 NAME out INIT = TYPE_4 . METHOD_5 ( req , res )  out . METHOD_6 ( message )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) COND ( VAR_2 ) == VAR_1  VAR_3 = null  METHOD_3 ( ) COND ( VAR_4 ) == VAR_1  VAR_3 = null  VAR_5 = false  METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctl TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME a TYPE java.lang.String NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 . getName ( ) ) TYPE TYPE_4 NAME user INIT = VAR_3 . create ( a . getAccountId ( ) ) TYPE TYPE_5 NAME VAR_4 INIT = ctl . METHOD_3 ( user ) . METHOD_4 ( VAR_2 )  a . METHOD_5 ( ( ( short ) ( VAR_4 . METHOD_6 ( a . getValue ( ) ) ) ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  METHOD_2 ( VAR_4 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( true ) TYPE TYPE_1 NAME u INIT = user ( )  METHOD_4 ( STRING_2 , u . METHOD_5 ( ) )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME m  VAR_1 . METHOD_1 ( null , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , VAR_2 . METHOD_2 ( ) ) )  VAR_1 . METHOD_3 ( m , VAR_3 , VAR_4 . get ( 0 ) , VAR_5 . get ( 0 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = repo . METHOD_3 ( repo . commit ( ) . message ( STRING_2 ) . add ( STRING_3 , STRING_4 ) . add ( STRING_5 , STRING_6 ) . create ( ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = METHOD_4 ( repo , commit , null , null , null ) . insert ( )  METHOD_5 ( STRING_7 )  METHOD_5 ( STRING_8 , change )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  b . append ( 1 ) TYPE TYPE_2 NAME VAR_1 INIT = b . METHOD_2 ( )  METHOD_3 ( VAR_1 )  METHOD_4 ( VAR_1 , b )  METHOD_5 ( ( VAR_1 instanceof TYPE_1 ) )  assertEquals ( STRING_1 , VAR_1 . METHOD_6 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1  VAR_2 = VAR_1 - ( METHOD_2 ( ) . METHOD_3 ( ) ) TYPE int NAME i INIT = 0 COND i < ( METHOD_2 ( ) . METHOD_4 ( ) )  i ++  VAR_3 . get ( i ) . METHOD_1 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String,org.eclipse.jgit.revwalk.RevCommit> NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE TYPE_2 NAME input INIT = new TYPE_2 ( )  VAR_3 = VAR_2  project ( ) . METHOD_1 ( input )  METHOD_3 ( )  METHOD_4 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( )  VAR_1 = VAR_2 . METHOD_2 ( c , VAR_3 . create ( c . METHOD_3 ( ) ) ) TYPE TYPE_2 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . in ( VAR_2 class )  bind ( VAR_3 class )  bind ( VAR_4 class ) . in ( VAR_5 )  bind ( VAR_6 class ) . in ( VAR_2 class )  bind ( VAR_7 . Factory class ) . in ( VAR_5 )  factory ( VAR_8 . Factory class )  factory ( VAR_9 . Factory class )
MODIFIER protected RETURN java.util.Set<TYPE_1.Id> NAME METHOD_1 TYPE TYPE_2 NAME r  r = VAR_1 . get ( change . METHOD_2 ( ) . getParentKey ( ) )  return r != null ? r . METHOD_3 ( ) : VAR_2 . Collections < TYPE_1 . Id > METHOD_4 ( ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( id )  TYPE_3 . METHOD_2 ( VAR_2 . delete ( VAR_1 ) , VAR_3 . delete ( VAR_1 ) ) . get ( ) TYPE TYPE_4|TYPE_5 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 )  METHOD_3 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( STRING_2 , STRING_3 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_8 ( TYPE_4 . of ( STRING_4 , STRING_5 , STRING_3 , STRING_6 ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME commit COND ( ( VAR_1 ) == null ) || ( VAR_1 . isEmpty ( ) )  return false ; TYPE TYPE_1 NAME VAR_2 IN VAR_1  METHOD_2 ( VAR_2 ) COND ( VAR_3 ) == null  return false ; COND ! ( VAR_4 . currentPatchSetId ( ) . equals ( VAR_3 ) )  return false ;  return true ;
MODIFIER public RETURN void NAME set TYPE TYPE_1 NAME base TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 TYPE boolean NAME VAR_5  this . base = base  this . VAR_1 = VAR_1  this . VAR_2 = VAR_2  this . VAR_3 = VAR_3  this . VAR_4 = VAR_4  this . VAR_5 = VAR_5
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 ) . METHOD_4 ( )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_4 , STRING_1 ) TYPE TYPE_2 NAME VAR_5 INIT = util . user ( VAR_3 , VAR_4 )  METHOD_5 ( STRING_2 , VAR_5 . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( VAR_2 ) TYPE java.lang.String NAME ref INIT = VAR_3 COND ( repo . METHOD_3 ( ) . METHOD_4 ( ref ) ) != null TYPE TYPE_1 NAME VAR_4 INIT = repo . METHOD_5 ( ref )  VAR_4 . METHOD_6 ( true )  com.google.common.truth.Truth . METHOD_7 ( ) . METHOD_8 ( ( STRING_1 + ref ) ) . METHOD_9 ( VAR_4 . delete ( ) ) . isEqualTo ( VAR_5 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE int NAME VAR_1 COND ( VAR_1 == 0 ) && ( ( VAR_2 ) != null )  return METHOD_2 ( key ) ;  return METHOD_3 ( key ) ; TYPE TYPE_3|com.google.gwtorm.server.OrmException NAME e TYPE java.lang.String NAME msg INIT = STRING_1  VAR_3 . METHOD_4 ( ( ( msg + STRING_2 ) + ( TYPE_4 . METHOD_5 ( key . METHOD_6 ( ) ) ) ) , e )  return TYPE_1 . METHOD_7 ( msg ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_1 )  org.junit.Assert . METHOD_3 ( VAR_3 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_4 ( ) , VAR_4 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_5 ( STRING_1 ) , VAR_5 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME e TYPE java.lang.String NAME VAR_1 INIT = e . getValue ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( 0 , TYPE_3 . METHOD_4 ( VAR_1 ) ) ) COND ( view ) != null  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_2 . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_1 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( VAR_3 ) TYPE TYPE_4 NAME e  throw METHOD_5 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( new TYPE_4 ( VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( ) TYPE java.io.IOException NAME err  throw new TYPE_5 ( STRING_1 , err ) ;
MODIFIER private RETURN void NAME METHOD_1 COND ( repo ) == null  this . repo = VAR_1 . METHOD_2 ( project )  VAR_2 = true  VAR_3 = repo . METHOD_3 ( )  VAR_4 = new org.eclipse.jgit.revwalk.RevWalk ( VAR_3 . METHOD_4 ( ) )  commands = new TYPE_1 ( repo )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = java.lang.String.format ( STRING_1 , VAR_1 , VAR_2 ) TYPE byte[] NAME VAR_4 INIT = VAR_3 . METHOD_2 ( STRING_2 ) TYPE java.lang.String NAME VAR_5 INIT = TYPE_1 . METHOD_3 ( VAR_4 )  return VAR_6 . METHOD_4 ( VAR_5 ) ; TYPE TYPE_2 NAME e  throw new TYPE_3 ( e ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER private static RETURN int NAME METHOD_1 TYPE TYPE_1<?> NAME c TYPE java.lang.String NAME n INIT = c . getName ( )  n = n . METHOD_2 ( ( ( n . METHOD_3 ( CHAR_1 ) ) + 1 ) ) COND n . METHOD_4 ( STRING_1 )  n = n . METHOD_2 ( 1 )  return TYPE_2 . METHOD_5 ( n ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME c TYPE TYPE_1.Project NAME p  p = new TYPE_1 . Project ( VAR_1 , VAR_2 )  p . METHOD_2 ( STRING_1 )  p . METHOD_3 ( false )  c . projects ( ) . insert ( java.util.Collections.singleton ( p ) )
MODIFIER protected RETURN void NAME METHOD_1 MODIFIER protected RETURN void NAME METHOD_2  super . METHOD_2 ( ) MODIFIER public RETURN void NAME METHOD_3  super . METHOD_3 ( )  display ( )  table = new TYPE_1 ( VAR_1 ) { protected void METHOD_2 ( ) { super . METHOD_2 ( ) ; } public void METHOD_3 ( ) { super . METHOD_3 ( ) ; display ( ) ; } }  super . METHOD_1 ( ) TYPE java.lang.String NAME VAR_2 INIT = table . METHOD_4 ( ) COND VAR_2 != null  METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_2 )  add ( table )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.HttpServletResponse NAME res TYPE TYPE_2 NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_1 )  res . METHOD_3 ( VAR_3 )  res . METHOD_4 ( STRING_1 )  res . METHOD_5 ( STRING_2 )  res . METHOD_6 ( VAR_2 . length ) TYPE TYPE_4 NAME out INIT = res . METHOD_7 ( )  out . METHOD_8 ( VAR_2 )  out . close ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.PatchSet NAME patchSet TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . revision = patchSet . getRevision ( ) . get ( )  VAR_1 = TYPE_3 . toString ( patchSet . METHOD_2 ( ) )  return p ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME schema INIT = METHOD_2 ( )  METHOD_3 ( schema . METHOD_4 ( ) )  assertEquals ( STRING_1 , schema . METHOD_4 ( ) . METHOD_5 ( ) )  assertEquals ( 2 , schema . METHOD_4 ( ) . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME ctx INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_4 ( ) . add ( VAR_1 )  ctx . METHOD_3 ( VAR_3 )  return true ; TYPE TYPE_5 NAME e  return false ;  ctx . close ( ) TYPE TYPE_5 NAME e  VAR_4 . METHOD_4 ( STRING_1 , e )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME base  return ( ( java.util.Map < java.lang.String , TYPE_1 > ) ( VAR_1 . get ( ) . METHOD_2 ( base ) . apply ( revision ) . value ( ) ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p TYPE java.lang.String NAME url NAME p  url = VAR_2  break ;  url = admin . METHOD_2 ( server )  break ;  throw new TYPE_2 ( ( STRING_1 + p ) ) ;  METHOD_3 ( TYPE_3 . METHOD_4 ( ( ( url + STRING_2 ) + ( project . get ( ) ) ) ) )
MODIFIER public RETURN void NAME close  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_1 ( )  VAR_2 = null COND ( VAR_3 ) != null  VAR_3 . METHOD_1 ( )  VAR_3 = null
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . get ( ) ) . isEqualTo ( VAR_2 )  VAR_1 . METHOD_3 ( )  TYPE_1 . METHOD_4 ( VAR_2 ) . METHOD_5 ( )  TYPE_1 . METHOD_4 ( VAR_2 ) . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . get ( ) ) . METHOD_7 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME id TYPE java.lang.String NAME ref TYPE TYPE_2.ProjectConfig NAME cfg INIT = VAR_2 . METHOD_2 ( project ) . METHOD_3 ( )  TYPE_3 . METHOD_1 ( cfg , VAR_1 , id , ref )  METHOD_4 ( project , cfg )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME c TYPE TYPE_2.ReviewDb NAME db COND ! ( c . METHOD_2 ( db ) )  throw new TYPE_3 ( c . getChange ( ) . getId ( ) ) ;  return c ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( ) TYPE TYPE_2.ChangeInfo NAME result INIT = TYPE_3 . METHOD_3 ( query ( r . getChangeId ( ) ) )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_4 < ? > ) ( VAR_2 ) ) ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = METHOD_2 ( VAR_1 , VAR_3 ) TYPE TYPE_5 NAME VAR_5 INIT = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( )  METHOD_6 ( db , VAR_2 , VAR_4 , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2.Result NAME r INIT = METHOD_2 ( STRING_1 )  r . METHOD_3 ( ) TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_4 ( ) , VAR_3 , STRING_2 , STRING_3 , r . getChangeId ( ) )  r = VAR_1 . to ( git , ( STRING_4 + ( r . getChange ( ) . change ( ) . getId ( ) . get ( ) ) ) )  r . METHOD_3 ( )
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_5 ) . METHOD_3 ( )  VAR_2 = VAR_3 . METHOD_4 ( VAR_1 ) TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return VAR_2 . METHOD_5 ( ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( result . change )  cm . METHOD_1 ( VAR_2 . getAccountId ( ) )  cm . METHOD_2 ( result . patchSet , result . info )  cm . METHOD_3 ( ) TYPE TYPE_2 NAME e TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_3 INIT = VAR_4 . getId ( )  VAR_5 . error ( ( STRING_1 + VAR_3 ) , e )
MODIFIER public RETURN TYPE_1 NAME get TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . METHOD_1 ( VAR_1 ) COND VAR_2 == null  return null ;  VAR_2 = METHOD_2 ( VAR_2 ) COND VAR_2 . METHOD_3 ( )  VAR_3 . METHOD_4 ( VAR_1 )  return null ;  return VAR_2 ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME cfg TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = cfg . METHOD_2 ( VAR_3 , null , VAR_4 ) COND TYPE_2 . METHOD_3 ( VAR_2 )  VAR_2 = VAR_5  VAR_2 = VAR_2 . METHOD_4 ( STRING_1 , VAR_1 )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 , VAR_4 , VAR_1 ) TYPE TYPE_3 NAME VAR_5 INIT = VAR_6 . get ( )  VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_5 )  VAR_2 . METHOD_2 ( ) . METHOD_4 ( VAR_5 ) TYPE TYPE_4 NAME VAR_7 INIT = new TYPE_4 ( account . getId ( ) )  VAR_7 . METHOD_5 ( VAR_1 )  VAR_7 . METHOD_6 ( account )  VAR_7 . commit ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = repo ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( )  METHOD_4 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 )  VAR_2 . METHOD_5 ( VAR_1 )  METHOD_6 ( VAR_3 , project , STRING_6 ) TYPE TYPE_1.Result NAME r INIT = METHOD_4 ( STRING_7 , STRING_8 , STRING_4 , STRING_9 )  r . METHOD_7 ( )  r . METHOD_8 ( VAR_4 , null , admin )  r . METHOD_9 ( TYPE_2 . getMessage ( ) )
MODIFIER public static RETURN java.util.Map<java.lang.String,java.lang.String> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME url COND url != null  return TYPE_1 . of ( STRING_1 , VAR_1 , STRING_2 , url ) ;  return TYPE_1 . of ( STRING_1 , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME id TYPE TYPE_2 NAME rsrc INIT = changes . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( id ) ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( account . METHOD_4 ( ) , rsrc )  VAR_3 . apply ( VAR_2 , new TYPE_5 ( ) ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . get ( STRING_1 )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) TYPE java.util.List<TYPE_2> NAME result INIT = METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , new TYPE_3 < java.util.List < TYPE_2 > > ( ) { } . METHOD_6 ( ) )  org.junit.Assert . METHOD_7 ( result . isEmpty ( ) )
MODIFIER private RETURN java.util.Map<org.eclipse.jgit.lib.ObjectId,TYPE_1> NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new TYPE_2 < org.eclipse.jgit.lib.ObjectId , TYPE_1 > ( ) TYPE TYPE_1 NAME r IN repo . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . values ( ) COND TYPE_3 . METHOD_4 ( r . getName ( ) )  VAR_1 . put ( r . METHOD_5 ( ) , r )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . put ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) , TYPE_2 . METHOD_2 ( STRING_3 ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cm COND ! ( TYPE_3 . METHOD_2 ( ) )  return METHOD_3 ( cm ) ; MODIFIER public RETURN void NAME run COND cm . METHOD_4 ( ) . METHOD_5 ( )  METHOD_6 ( cm )  return new TYPE_1 ( ) { public void run ( ) { if ( cm . METHOD_4 ( ) . METHOD_5 ( ) ) { METHOD_6 ( cm ) ; } } } ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_4 NAME ctl INIT = rsrc . METHOD_1 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = VAR_1 . METHOD_2 ( db . get ( ) , rsrc . METHOD_3 ( ) ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = ctl . getProject ( ) . METHOD_4 ( )  return VAR_2 . apply ( project , ps . getRevision ( ) . get ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c  TYPE_2 . METHOD_2 ( ( ( c . METHOD_3 ( ) ) != null ) , STRING_1 , c )  TYPE_2 . METHOD_2 ( c . METHOD_4 ( ) . equals ( METHOD_5 ( ) . getAccountId ( ) ) , ( STRING_2 + STRING_3 ) , METHOD_5 ( ) . getAccountId ( ) , c )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 != null  VAR_1 . close ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_4 COND VAR_3 != VAR_1  VAR_1 . close ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 COND VAR_1  return new TYPE_2 ( ) ; TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_3 ) NAME VAR_2  return ( VAR_5 ) != null ? VAR_5 : new TYPE_5 ( ) ;  throw new TYPE_6 ( ( STRING_1 + VAR_2 ) ) ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.PatchSetApproval NAME METHOD_1 TYPE TYPE_1 NAME ctl TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 TYPE TYPE_2 NAME id INIT = TYPE_3 . METHOD_2 ( ctl . METHOD_3 ( ) . METHOD_3 ( ) ) . METHOD_4 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_3 INIT = new com.google.gerrit.reviewdb.client . PatchSetApproval ( new TYPE_4 . Key ( VAR_1 , VAR_2 , id ) , ( ( short ) ( 0 ) ) , TYPE_5 . METHOD_5 ( ) )  VAR_3 . METHOD_6 ( ctl . getChange ( ) )  return VAR_3 ;
MODIFIER private RETURN void NAME set TYPE java.lang.String NAME branch TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE TYPE_1 NAME u INIT = VAR_1 . METHOD_1 ( ( ( VAR_2 ) + branch ) )  u . METHOD_2 ( true )  u . METHOD_3 ( id ) NAME u . update ( )  break ;  METHOD_4 ( ( ( ( STRING_1 + branch ) + STRING_2 ) + ( u . METHOD_5 ( ) ) ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME req INIT = TYPE_2 . METHOD_2 ( )  req . METHOD_3 ( path ) COND VAR_1 != null  req . METHOD_4 ( VAR_1 ) TYPE TYPE_1 NAME res INIT = new TYPE_1 ( )  servlet . METHOD_5 ( req , res )  org.junit.Assert.assertEquals ( VAR_2 , res . getStatus ( ) )  return res ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME path INIT = VAR_2 . get ( VAR_1 ) . path ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( VAR_3 . getParentKey ( ) ) ) MODIFIER public RETURN void NAME METHOD_4 TYPE TYPE_6 NAME VAR_4 BLOCK BLOCK  TYPE_1 . METHOD_2 ( VAR_3 . getParentKey ( ) . get ( ) , path , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( TYPE_3 result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( VAR_3 . getParentKey ( ) ) ) ; } public void METHOD_4 ( TYPE_6 VAR_4 ) { } } )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME w TYPE java.lang.String NAME id TYPE java.lang.StringBuilder NAME VAR_1 INIT = new java.lang.StringBuilder ( )  VAR_1 . append ( STRING_1 )  VAR_1 . append ( STRING_2 )  VAR_1 . append ( id )  VAR_1 . append ( STRING_3 )  VAR_1 . append ( STRING_4 )  VAR_1 . append ( STRING_5 )  VAR_1 . append ( STRING_6 )  w . METHOD_2 ( ) . METHOD_3 ( STRING_7 , VAR_1 . toString ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 IN TYPE_4 . METHOD_2 ( ) . METHOD_3 ( ) COND r . METHOD_4 ( VAR_2 . METHOD_5 ( ) . getId ( ) )  METHOD_6 ( r , VAR_1 , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = rsrc . getChange ( )  return new TYPE_3 ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( ( ( ( ! ( change . METHOD_5 ( ) ) ) && ( ( change . getStatus ( ) ) != ( VAR_1 ) ) ) && ( METHOD_6 ( rsrc ) ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME update TYPE java.lang.String NAME msg INIT = message . getMessage ( ) COND TYPE_2 . METHOD_2 ( msg ) . METHOD_3 ( )  update . METHOD_1 ( VAR_1 )  VAR_2 . METHOD_1 ( VAR_1 )  return ; COND TYPE_3 . METHOD_2 ( msg ) . METHOD_3 ( )  update . METHOD_1 ( VAR_3 )  VAR_2 . METHOD_1 ( VAR_3 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME query TYPE int NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1<TYPE_2> NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( query ) COND VAR_1 > 0  VAR_4 . METHOD_3 ( STRING_1 , VAR_1 )  TYPE_2 . METHOD_4 ( VAR_4 , VAR_5 ) COND ! ( TYPE_4 . equals ( VAR_2 ) )  VAR_4 . METHOD_3 ( STRING_2 , VAR_2 )  VAR_4 . METHOD_5 ( VAR_3 )
MODIFIER private RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 TYPE TYPE_1 NAME n  return VAR_1 . METHOD_2 ( db . get ( ) , VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  VAR_3 . error ( ( STRING_1 + ( VAR_2 ) ) , e )  return java.util.Collections . METHOD_3 ( ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME url TYPE java.lang.String NAME VAR_2 COND ( url == null ) || ( ! ( url . contains ( VAR_1 ) ) )  return url ;  return url . METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( VAR_2 ) ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rsrc . METHOD_1 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = rsrc . METHOD_2 ( ) . getProject ( ) . METHOD_3 ( )  return VAR_1 . apply ( project , commit . getId ( ) . getName ( ) ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME u INIT = METHOD_2 ( ) COND u instanceof TYPE_3  return TYPE_4 . METHOD_3 ( u . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 , VAR_2 , VAR_3 ) ; COND u instanceof TYPE_5  return VAR_2 ;  throw new TYPE_6 ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME e  VAR_1 . METHOD_2 ( e . getValue ( ) )  view . METHOD_3 ( VAR_2 ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) )  view . METHOD_3 ( VAR_3 ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) )  METHOD_5 ( VAR_4 ) TYPE TYPE_3 NAME a TYPE TYPE_4 NAME config TYPE TYPE_5 NAME to TYPE TYPE_6 NAME VAR_5
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = repo . commit ( ) . create ( )  repo . METHOD_2 ( 1 ) TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_3 ( STRING_1 , commit )  org.junit.Assert.assertEquals ( ( ( VAR_2 ) + 1 ) , METHOD_4 ( commit ) )  org.junit.Assert.assertEquals ( ( ( VAR_2 ) + 2 ) , METHOD_4 ( VAR_1 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 )  VAR_2 . info ( STRING_1 , VAR_1 ) COND TYPE_2 . METHOD_4 ( VAR_1 )  METHOD_5 ( VAR_1 )  VAR_2 . info ( STRING_2 , VAR_1 )  VAR_2 . METHOD_6 ( ( STRING_3 + ( STRING_4 + STRING_5 ) ) , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , TYPE_5 . create ( 0 , 0 , INT_1 , INT_2 ) )
MODIFIER private static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2 NAME args TYPE java.lang.String NAME label TYPE int NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( VAR_2 . isEmpty ( ) )  return new TYPE_3 ( args , label , VAR_1 , null ) ; TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = new java.util.ArrayList < > ( ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME a IN VAR_2  r . add ( new TYPE_3 ( args , label , VAR_1 , a ) )  return METHOD_2 ( r ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_2 ( ( ! ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) , STRING_1 ) TYPE int NAME e INIT = VAR_1 . METHOD_4 ( CHAR_1 )  TYPE_2 . METHOD_2 ( ( e >= 0 ) , STRING_2 , VAR_1 )  return TYPE_1 . create ( VAR_1 . METHOD_5 ( 0 , e ) , TYPE_4 . METHOD_6 ( VAR_1 . METHOD_5 ( ( e + 1 ) ) , VAR_1 . length ( ) ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_2 . get ( ( VAR_1 ? METHOD_2 ( ) : METHOD_3 ( ) ) )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_4 ( ) )  return METHOD_5 ( ) . METHOD_6 ( r . METHOD_7 ( ) , VAR_4 class ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( 1 )  assertEquals ( STRING_1 , VAR_1 . toString ( ) ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( 0 )  VAR_2 . METHOD_2 ( VAR_1 . toString ( ) )  assertEquals ( VAR_1 , VAR_2 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE TYPE_1 NAME out INIT = new TYPE_1 ( ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( out )  VAR_3 . METHOD_2 ( repo )  VAR_3 . format ( VAR_1 , VAR_2 )  VAR_3 . METHOD_3 ( )  return out . toString ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME info TYPE java.lang.String NAME name INIT = ( ( info . METHOD_2 ( ) . name ( ) ) != null ) ? info . METHOD_2 ( ) . name ( ) : TYPE_2 . METHOD_3 ( ) . METHOD_4 ( )  VAR_1 . METHOD_5 ( name )  VAR_1 . METHOD_6 ( name )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 COND ( VAR_1 . size ( ) ) <= 0  return STRING_1 ; TYPE java.lang.StringBuilder NAME out INIT = new java.lang.StringBuilder ( ) TYPE TYPE_1 NAME VAR_2 IN VAR_1 COND ( out . length ( ) ) > 0  out . append ( STRING_2 )  out . append ( VAR_2 . getValue ( ) )  return ( STRING_3 + STRING_4 ) + ( out . toString ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_5 ( VAR_3 , VAR_8 ) . METHOD_5 ( VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_6 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME change INIT = METHOD_2 ( git )  submit ( change . getChangeId ( ) )  METHOD_3 ( git , false )  com.google.common.truth.Truth.assertThat ( METHOD_4 ( ) . METHOD_5 ( 0 ) ) . isEqualTo ( change . METHOD_6 ( ) . METHOD_5 ( 0 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Change NAME change TYPE TYPE_3 NAME user TYPE TYPE_5.NameKey NAME VAR_1 INIT = change . getProject ( )  return VAR_2 . METHOD_1 ( VAR_1 , user ) . METHOD_1 ( change ) ; TYPE TYPE_6 NAME e  throw new TYPE_4 ( change.getId ( ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , VAR_2 )  assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  assertEquals ( VAR_2 , a . METHOD_4 ( VAR_1 ) )  assertEquals ( ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) + VAR_2 ) , a . toString ( ) )
MODIFIER public static RETURN void NAME submit TYPE int NAME id TYPE java.lang.String NAME commit TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME in INIT = TYPE_3 . create ( )  in . METHOD_1 ( true )  TYPE_4 . METHOD_2 ( id , commit , STRING_1 ) . data ( in ) . METHOD_3 ( VAR_1 )
MODIFIER public RETURN void NAME set TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME base TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_2 NAME VAR_4 TYPE TYPE_3 NAME VAR_5 TYPE boolean NAME VAR_6  this . base = base  this . VAR_1 = VAR_1  this . VAR_2 = VAR_2  this . VAR_3 = VAR_3  this . VAR_4 = VAR_4  this . VAR_5 = VAR_5  this . VAR_6 = VAR_6
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2 TYPE TYPE_3 NAME in INIT = TYPE_3 . create ( )  in . METHOD_2 ( path )  in . METHOD_3 ( VAR_1 )  TYPE_4 . edit ( id ) . METHOD_4 ( in , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( )  METHOD_7 ( VAR_2 , VAR_3 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_8 ( STRING_1 , VAR_2 ) . METHOD_9 ( VAR_3 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) . to ( VAR_9 ) . METHOD_10 ( VAR_10 )
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME args TYPE TYPE_5 NAME user INIT = args . METHOD_2 ( ) COND user . METHOD_3 ( )  return VAR_1 . get ( args . METHOD_2 ( ) . getAccountId ( ) ) . METHOD_4 ( ) . METHOD_5 ( ) ;  return VAR_2 . Collections < TYPE_2 > METHOD_6 ( ) ;
MODIFIER private RETURN Account.Id NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_3.Account NAME a INIT = VAR_2 . METHOD_2 ( VAR_1 ) COND a == null  throw new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ;  return a . getId ( ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2  org.junit.Assert.assertEquals ( VAR_1 . ref , VAR_2 . ref ) COND ( VAR_1 . revision ) != null  org.junit.Assert.assertEquals ( VAR_1 . revision , VAR_2 . revision )  org.junit.Assert.assertEquals ( VAR_3 , TYPE_2 . METHOD_2 ( VAR_4 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3.Result NAME r INIT = METHOD_2 ( )  VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_3 ( )  VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1 COND isEmpty ( )  return ;  METHOD_2 ( ) COND ! ( VAR_1 . isEmpty ( ) )  METHOD_3 ( )  METHOD_4 ( )  TYPE_1 . METHOD_1 ( VAR_2 )  TYPE_1 . METHOD_1 ( VAR_3 ) COND ( VAR_2 ) != null  VAR_2 . close ( ) COND ( VAR_3 ) != null  VAR_3 . close ( )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME git TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) )  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ;
MODIFIER private static RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.PatchSet> NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE TYPE_3<com.google.gerrit.reviewdb.client.PatchSet> NAME patchSets INIT = cd . patchSets ( ) TYPE TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.PatchSet> NAME result INIT = TYPE_4 . METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps IN patchSets  result . put ( ps . getId ( ) . get ( ) , ps )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_2 ) ) )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_3 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_4 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) COND VAR_3 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_4 INIT = new TYPE_3 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_5 INIT = METHOD_3 ( VAR_4 ) COND VAR_5 != null COND VAR_4 . get ( )  VAR_1 . METHOD_4 ( getRefName ( ) )  VAR_2 . METHOD_5 ( VAR_5 )  VAR_1 . METHOD_6 ( VAR_2 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ) COND VAR_1 . METHOD_4 ( )  r . append ( STRING_1 )  r . append ( METHOD_5 ( ) )  r . append ( STRING_2 )  return r . toString ( ) ;
MODIFIER public RETURN TYPE_1 NAME create TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = TYPE_2 . METHOD_1 ( db ) . changes ( ) . get ( changeId )  TYPE_3 . METHOD_2 ( change , STRING_1 , changeId )  TYPE_3 . METHOD_3 ( change . getProject ( ) . equals ( project ) , ( STRING_2 + STRING_3 ) , project , changeId , change . getProject ( ) )  return new TYPE_1 ( args , project , change ) . METHOD_4 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( ( ( java.lang.StringBuilder ) ( null ) ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )  METHOD_2 ( b , b . append ( new java.lang.StringBuilder ( STRING_2 ) ) )  METHOD_2 ( b , b . append ( new java.lang.StringBuilder ( STRING_3 ) ) )  assertEquals ( STRING_4 , b . METHOD_3 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME c INIT = null  c = METHOD_2 ( ) TYPE TYPE_2 NAME s INIT = VAR_1 . METHOD_3 ( )  s . METHOD_4 ( STRING_1 )  s . close ( )  VAR_2 = METHOD_5 ( ) TYPE TYPE_3 NAME e  VAR_3 . METHOD_6 ( ( STRING_2 + ( url ) ) , e )  c = close ( c )  METHOD_7 ( c )
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( ) COND VAR_2 == null  VAR_3 . METHOD_3 ( STRING_1 )  TYPE_2 . METHOD_4 ( 1 )  VAR_4 . METHOD_3 ( ( STRING_2 + VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_1> NAME m INIT = TYPE_2 . METHOD_3 ( repo , c , TYPE_3 . METHOD_4 ( ) ) TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = TYPE_4 . of ( ( STRING_1 + ( VAR_2 ) ) )  com.google.common.truth.Truth.assertThat ( TYPE_5 . METHOD_5 ( m ) ) . METHOD_6 ( VAR_1 )
MODIFIER MODIFIER RETURN boolean NAME add TYPE TYPE_1 NAME VAR_1  this COND ( ! ( VAR_2 ) ) && ( ! ( VAR_3 ) ) COND VAR_4 . isEmpty ( )  TYPE_2 . METHOD_1 ( ) . METHOD_2 ( this )  VAR_4 . add ( VAR_1 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME on  VAR_1 = on COND VAR_1 TYPE TYPE_1 NAME p INIT = getValue ( ) . METHOD_2 ( )  VAR_2 . METHOD_3 ( p . METHOD_4 ( ) )  VAR_2 . METHOD_3 ( false )  METHOD_5 ( update . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( STRING_4 + ( VAR_2 ) ) + ( TYPE_2 . METHOD_5 ( STRING_5 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_6 ) ) ) + ( VAR_3 ) ) , n . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 , VAR_3 )  METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_7 ) . to ( VAR_8 ) . METHOD_5 ( VAR_9 , VAR_10 ) . METHOD_5 ( VAR_11 ) . METHOD_6 ( VAR_12 ) . METHOD_6 ( VAR_2 , VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME req TYPE TYPE_2 NAME res INIT = new TYPE_2 ( )  servlet . METHOD_2 ( req , res )  org.junit.Assert.assertEquals ( VAR_2 , res . getStatus ( ) )  org.junit.Assert.assertEquals ( VAR_1 , res . METHOD_3 ( VAR_3 ) )
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . http ( ) . user ( ) ) . isEqualTo ( VAR_1 )  VAR_2 . METHOD_3 ( VAR_3 , null , VAR_4 , VAR_5 )  com.google.common.truth.Truth.assertThat ( METHOD_2 ( ) . http ( ) . user ( ) ) . isEqualTo ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME t  VAR_1 [ ( ++ ( VAR_2 ) ) ] = t TYPE TYPE_2 NAME e TYPE int NAME VAR_3 INIT = VAR_1 . length TYPE TYPE_1[] NAME VAR_4 INIT = new TYPE_1 [ VAR_3 + INT_1 ]  TYPE_3 . METHOD_2 ( VAR_1 , 0 , VAR_4 , 0 , VAR_3 )  VAR_1 = VAR_4  VAR_1 [ VAR_2 ] = t
MODIFIER public RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = VAR_1 . get ( ) . changes ( ) . get ( id ) COND c != null  return new TYPE_2 < com.google.gerrit.server.query.change.ChangeData > ( java.util.Collections . METHOD_2 ( VAR_2 . create ( VAR_1 . get ( ) , c ) ) ) ;  return new TYPE_2 < com.google.gerrit.server.query.change.ChangeData > ( VAR_3 . Collections < com.google.gerrit.server.query.change.ChangeData > METHOD_3 ( ) ) ;
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . get ( STRING_1 ) COND VAR_2 == null  VAR_2 = VAR_1 . METHOD_2 ( ) . get ( STRING_2 ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_2 . METHOD_2 ( ) . get ( TYPE_5 . getName ( ) ) . METHOD_3 ( ) )  return VAR_4 . get ( ) . METHOD_4 ( VAR_3 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = VAR_1 . change ( VAR_2 ) COND change == null  return false ; TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . create ( VAR_2 , change . METHOD_2 ( ) )  return VAR_3 . METHOD_3 ( ) . contains ( VAR_5 ) ;
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME topic TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) )  com.google.common.truth.Truth.assertThat ( topic ) . METHOD_3 ( )  return VAR_1 . to ( git , ( STRING_1 + topic ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . create ( project ) TYPE TYPE_2 NAME r INIT = new TYPE_2 ( )  r . METHOD_2 ( VAR_2 )  VAR_4 = VAR_1  r . commit ( VAR_2 )  VAR_2 . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE org.eclipse.jgit.lib.ObjectId NAME id  this . rw = walk  this . VAR_1 = walk . METHOD_2 ( )  revision = ( id != null ) ? walk . parseCommit ( id ) : null  METHOD_3 ( )  walk = null  VAR_1 = null
MODIFIER public RETURN void NAME run TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  db = VAR_1 . METHOD_1 ( ) TYPE com.google.gwtorm.server.OrmException NAME e  e . METHOD_2 ( )  return ; TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( ) COND VAR_2 == null  break ;  METHOD_4 ( db , VAR_2 )  VAR_3  VAR_3 . update ( 1 )  db . close ( )
MODIFIER private static RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME config TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = new TYPE_2 < java.lang.String > ( ) TYPE TYPE_3 NAME VAR_2 IN config . METHOD_2 ( )  VAR_1 . add ( VAR_2 . METHOD_3 ( ) )  return VAR_1 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( VAR_1 . METHOD_2 ( ) , STRING_1 ) TYPE TYPE_5 NAME in INIT = new TYPE_6 ( VAR_2 )  in = TYPE_7 . METHOD_3 ( in )  return new TYPE_1 ( in ) ;  in . close ( ) TYPE java.io.IOException NAME e  throw new TYPE_3 ( e ) ; TYPE TYPE_8 NAME e  throw new TYPE_3 ( e ) ;
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME add TYPE TYPE_3 NAME in INIT = new TYPE_3 ( )  in . add = add  return VAR_1 . apply ( account , in ) ; TYPE TYPE_4|com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER private RETURN void NAME METHOD_1 COND ( ! ( VAR_1 . isEmpty ( ) ) ) && ( ! ( METHOD_2 ( ) ) ) TYPE TYPE_1<java.lang.String,TYPE_2> NAME VAR_2 IN VAR_1 . METHOD_3 ( )  VAR_2 . getValue ( ) . METHOD_4 ( projectName . get ( ) , VAR_2 . getKey ( ) , VAR_3 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) . METHOD_3 ( VAR_5 ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( )  TYPE_3 . METHOD_4 ( VAR_1 , p ) COND ( p . value ) >= ( VAR_1 . length )  VAR_6 = null  return ;  VAR_6 = TYPE_4 . METHOD_5 ( METHOD_1 ( VAR_1 , p . value ) )
MODIFIER public RETURN TYPE_1.Change NAME update TYPE TYPE_1.Change NAME c  c . METHOD_1 ( VAR_1 )  c . METHOD_2 ( true ) COND ! ( VAR_2 . equals ( c . currentPatchSetId ( ) ) )  c . METHOD_3 ( VAR_3 . get ( VAR_2 ) ) TYPE TYPE_2 NAME VAR_4  VAR_5 . error ( ( STRING_1 + VAR_2 ) , VAR_4 )  TYPE_3 . METHOD_4 ( c )  return c ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) != null  return METHOD_2 ( VAR_1 ) ; NAME status . getStatus ( )  return STRING_1 ;  return STRING_2 ;  return ( ( ( ( ( STRING_3 + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_5 ) + ( VAR_6 ) ) + STRING_6 ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = null TYPE TYPE_3 NAME u IN VAR_1 COND VAR_2 == null  VAR_2 = VAR_3 COND ( VAR_3 ) != VAR_2  throw new TYPE_4 ( STRING_1 ) ;  return VAR_2 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db COND ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ) || ( METHOD_4 ( db ) )  return false ; COND METHOD_5 ( )  return true ;  return METHOD_6 ( ) . METHOD_1 ( ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 IN VAR_2 COND ! ( VAR_1 instanceof TYPE_1 )  continue ; TYPE TYPE_1 NAME VAR_3 INIT = ( ( TYPE_1 ) ( VAR_1 ) ) COND VAR_3 . METHOD_2 ( ) . METHOD_3 ( )  continue ;  return VAR_3 ;  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Change NAME change TYPE TYPE_4.NameKey NAME VAR_1 INIT = change . METHOD_2 ( ) . getParentKey ( )  return VAR_2 . METHOD_3 ( VAR_1 ) . METHOD_1 ( change ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME out  out . METHOD_2 ( TYPE_2 . METHOD_3 ( commit ) . METHOD_4 ( VAR_1 ) ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( out )  VAR_2 . METHOD_5 ( repo )  VAR_2 . format ( base . METHOD_6 ( ) , commit . METHOD_6 ( ) )  VAR_2 . METHOD_7 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND METHOD_2 ( )  return VAR_1 ; COND ( METHOD_3 ( ) ) && ( ! ( METHOD_4 ( ) ) )  return VAR_2 ; COND VAR_3 . get ( )  return VAR_4 ; TYPE long NAME VAR_5 INIT = METHOD_5 ( VAR_6 ) COND VAR_5 <= 0  return VAR_7 ; COND 0 < VAR_5  return VAR_8 ;  return VAR_9 ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) )  VAR_2 = TYPE_3 . METHOD_4 ( ) COND TYPE_4 . info ( ) . auth ( ) . METHOD_5 ( )  VAR_3 . METHOD_6 ( VAR_2 )  VAR_1 . add ( TYPE_2 . METHOD_7 ( ) , VAR_2 )  VAR_4 = TYPE_3 . METHOD_4 ( )  VAR_3 . METHOD_6 ( VAR_4 )  VAR_1 . METHOD_8 ( TYPE_2 . METHOD_9 ( ) , VAR_4 )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME change TYPE java.lang.String NAME id TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = VAR_1 . get ( ) . patchSets ( ) . get ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( change . getChange ( ) . getId ( ) , TYPE_3 . METHOD_2 ( id ) ) ) COND ps != null  return java.util.Collections . METHOD_3 ( new TYPE_1 ( change , ps ) ) ;  return java.util.Collections . METHOD_4 ( ) ;
MODIFIER private RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE java.util.Set<TYPE_1> NAME VAR_2 COND TYPE_4 . equals ( VAR_1 )  return METHOD_2 ( project , VAR_2 ) ; TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group INIT = VAR_3 . get ( VAR_1 ) COND group != null  return METHOD_3 ( group , project , VAR_2 ) ;  return java.util.Collections . METHOD_4 ( ) ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_5 class )  return METHOD_1 ( VAR_1 , VAR_3 . METHOD_3 ( VAR_6 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) , VAR_7 , STRING_1 ) , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME projectName INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( 1 ) ) TYPE java.lang.String NAME revision INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( 2 ) ) TYPE java.lang.String NAME path INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( INT_1 ) )  VAR_1 . METHOD_4 ( new TYPE_3 ( projectName , revision , path ) )  VAR_1 . METHOD_5 ( TYPE_4 . METHOD_6 ( path ) )
MODIFIER public RETURN TYPE_1<TYPE_2>.TYPE_3 NAME METHOD_1 TYPE TYPE_4.Key<TYPE_2> NAME VAR_1 TYPE TYPE_5<TYPE_2> NAME VAR_2 TYPE TYPE_6<TYPE_2> NAME n INIT = new TYPE_6 < TYPE_2 > ( VAR_2 , VAR_3 ) COND ref . METHOD_2 ( VAR_4 , n )  return new TYPE_3 ( VAR_1 , n , VAR_5 ) ;  return null ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME token  VAR_1 . METHOD_1 ( token , changes ) TYPE TYPE_1 NAME e  throw new TYPE_2 ( e . getMessage ( ) , e ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_1 NAME c IN db . METHOD_3 ( ) . METHOD_4 ( rsrc . METHOD_5 ( ) . getId ( ) , rsrc . getAccountId ( ) )  VAR_1 . put ( c . getKey ( ) . get ( ) , c )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_6 , VAR_7 ) . to ( VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.AccountGroup NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME c TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 COND VAR_1 == null  VAR_1 = TYPE_2 . METHOD_2 ( name , VAR_2 )  return new com.google.gerrit.reviewdb.client . AccountGroup ( new TYPE_3 . NameKey ( name ) , new TYPE_3 . Id ( c . METHOD_3 ( ) ) , VAR_1 , TYPE_4 . METHOD_4 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME notes TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_2 COND METHOD_2 ( notes , VAR_1 , VAR_2 . getAccountId ( ) , VAR_2 . getValue ( ) )  return ;  VAR_3 . user ( VAR_1 ) . change ( notes ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_5 )
MODIFIER MODIFIER RETURN void NAME display TYPE TYPE_1.Account NAME account  info . METHOD_1 ( 0 , VAR_1 , account . METHOD_2 ( ) )  info . METHOD_1 ( 1 , VAR_1 , account . METHOD_3 ( ) )  info . METHOD_1 ( 2 , VAR_1 , account . METHOD_4 ( ) )  info . METHOD_1 ( INT_1 , VAR_1 , TYPE_2 . METHOD_5 ( account . METHOD_6 ( ) ) )  info . METHOD_1 ( INT_2 , VAR_1 , account . getId ( ) . toString ( ) )
MODIFIER public RETURN void NAME run TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_1 . METHOD_1 ( ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( ) COND VAR_2 == null  break ;  METHOD_3 ( db , VAR_2 )  VAR_3  VAR_3 . update ( 1 ) TYPE com.google.gwtorm.server.OrmException NAME e  e . METHOD_4 ( )
MODIFIER public RETURN TYPE_1 NAME get TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_1 ( notes . METHOD_2 ( ) ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_2 INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  return VAR_3 . METHOD_3 ( VAR_2 , notes , patchSet ) ; TYPE java.io.IOException NAME e  throw TYPE_2 . METHOD_4 ( e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( ! ( METHOD_5 ( db ) ) ) ;
MODIFIER protected RETURN boolean NAME METHOD_1 COND ( VAR_1 . length ( ) ) == 0  return false ; COND VAR_2 . isEmpty ( )  return false ; COND ( ( VAR_3 . size ( ) ) == 1 ) && ( VAR_3 . contains ( VAR_4 ) )  return false ;  return true ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME ctx TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = ctx . METHOD_2 ( ) . get ( ) TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( id )  VAR_1 . create ( VAR_2 , VAR_3 ) . index ( db , c )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME res INIT = METHOD_2 ( STRING_1 , VAR_1 )  com.google.common.truth.Truth.assertThat ( res ) . METHOD_3 ( 1 )  com.google.common.truth.Truth.assertThat ( res ) . METHOD_4 ( STRING_2 ) TYPE TYPE_1 NAME d INIT = res . get ( STRING_2 )  com.google.common.truth.Truth.assertThat ( d . name ) . isEqualTo ( repo . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME info COND ( info . status ( ) ) == ( VAR_1 ) TYPE TYPE_2<TYPE_3> NAME VAR_2 INIT = ( info . METHOD_2 ( ) ) ? info . METHOD_3 ( ) : VAR_3 < TYPE_3 > create ( )  VAR_2 . METHOD_4 ( STRING_1 ) COND VAR_2 . METHOD_5 ( STRING_2 )  VAR_4 . METHOD_6 ( true )  VAR_4 . METHOD_7 ( VAR_2 . get ( STRING_2 ) . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME label IN METHOD_3 ( ) . METHOD_3 ( )  VAR_1 . add ( label . getName ( ) )  assertEquals ( TYPE_3 . of ( STRING_1 , STRING_2 ) , VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_3 , ( INT_1 < < INT_1 ) ) TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( VAR_2 )  VAR_1 . METHOD_3 ( VAR_4 )  VAR_4 . close ( )  return TYPE_3 . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( )  METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_2 INIT = VAR_3 . changes ( ) . query ( ( STRING_1 + ( VAR_1 . getChangeId ( ) ) ) ) . get ( )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , TYPE_3 . METHOD_3 ( VAR_2 ) . changeId )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1  METHOD_2 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  TYPE_4 . display ( TYPE_5 . METHOD_3 ( changeId ) ) MODIFIER public RETURN void NAME METHOD_4 TYPE TYPE_6 NAME VAR_2 BLOCK BLOCK  TYPE_1 . METHOD_1 ( changeId . get ( ) , path , VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( TYPE_3 result ) { TYPE_4 . display ( TYPE_5 . METHOD_3 ( changeId ) ) ; } public void METHOD_4 ( TYPE_6 VAR_2 ) { } } )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME branch TYPE TYPE_2 NAME e INIT = VAR_1 . get ( branch ) COND e == null  e = new TYPE_2 ( branch )  VAR_1 . put ( branch , e )  VAR_2 = true  METHOD_2 ( e )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME ps TYPE java.lang.String NAME url INIT = java.lang.String.format ( STRING_1 , ps . getParentKey ( ) . get ( ) , ps . get ( ) )  return METHOD_2 ( ) . METHOD_3 ( VAR_1 . get ( url ) . METHOD_4 ( ) , VAR_2 class ) . changes ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . in ( VAR_2 )  bind ( VAR_3 class ) . in ( VAR_2 )  bind ( VAR_4 class ) . to ( VAR_3 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_2 ( ) )  bind ( VAR_5 class )
MODIFIER static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME create TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE TYPE_3<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 COND ( TYPE_5 . METHOD_1 ( schema ) ) == ( VAR_2 )  throw new TYPE_4 ( STRING_1 ) ; TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME VAR_3 INIT = new java.util.ArrayList ( VAR_1 . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id IN VAR_1  VAR_3 . add ( new TYPE_5 ( id ) )  return TYPE_1 . METHOD_2 ( VAR_3 ) ;
MODIFIER private RETURN TYPE_1 NAME user TYPE TYPE_2.AccountGroup NAME VAR_1 TYPE TYPE_3.Factory NAME VAR_2 MODIFIER public RETURN TYPE_3 NAME create TYPE TYPE_1 NAME VAR_3 TYPE java.lang.String NAME ref  return new TYPE_3 ( VAR_4 , VAR_3 , ref ) ; INIT = new TYPE_3 . Factory ( ) { public TYPE_3 create ( final TYPE_1 VAR_3 , final java.lang.String ref ) { return new TYPE_3 ( VAR_4 , VAR_3 , ref ) ; } }  return new TYPE_1 ( VAR_5 . Collections < TYPE_4 . Id > METHOD_1 ( ) , VAR_5 . Collections < TYPE_4 . Id > METHOD_1 ( ) , VAR_2 , new TYPE_5 ( VAR_1 ) , METHOD_2 ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 COND METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( )  VAR_1 . append ( STRING_1 )  VAR_1 . append ( METHOD_5 ( ) )  VAR_1 . append ( STRING_2 )  msg . METHOD_6 ( VAR_1 . toString ( ) , STRING_3 )  TYPE_2 . METHOD_1 ( msg )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) COND VAR_1 . isEmpty ( )  VAR_4 . METHOD_3 ( false )  VAR_3 . METHOD_4 ( VAR_1 )  VAR_4 . METHOD_3 ( true ) COND ( ( VAR_5 ) == null ) || ( ( VAR_5 ) == VAR_2 )  METHOD_5 ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1  TYPE_2 . METHOD_2 ( change . getProject ( ) . equals ( project ) , ( STRING_1 + STRING_2 ) , project , changeId , change . getProject ( ) )  return new TYPE_1 ( args , project , change ) . METHOD_3 ( ) ;
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME refs COND VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1 NAME r INIT = refs . get ( TYPE_2 . METHOD_4 ( VAR_1 . METHOD_2 ( ) . getAccountId ( ) ) ) COND r != null TYPE TYPE_3 NAME s INIT = new TYPE_3 ( VAR_2 , r )  refs = new TYPE_4 ( refs )  refs . put ( s . getName ( ) , s )  return refs ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_3 ) . to ( VAR_6 ) . METHOD_5 ( VAR_7 , VAR_8 ) . METHOD_5 ( VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_6 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_5 ( STRING_1 , VAR_1 ) . METHOD_6 ( VAR_3 ) . to ( VAR_6 ) . METHOD_7 ( VAR_7 , VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_8 ( VAR_10 ) . METHOD_8 ( VAR_2 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME res INIT = METHOD_2 ( path )  org.junit.Assert.assertEquals ( VAR_1 , res . METHOD_3 ( VAR_2 ) ) TYPE java.lang.String NAME VAR_3 INIT = res . METHOD_4 ( )  return new java.lang.String ( TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) , VAR_4 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) COND ( VAR_1 ) == null TYPE TYPE_2 NAME VAR_2 INIT = METHOD_7 ( ) COND ! ( METHOD_8 ( ) . METHOD_9 ( ) )  METHOD_4 ( ) . METHOD_10 ( VAR_2 )  METHOD_11 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME msg TYPE TYPE_1 NAME t COND VAR_1 . METHOD_2 ( ) COND t != null  VAR_1 . error ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t )  VAR_1 . error ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_3 ) . METHOD_5 ( VAR_6 , VAR_7 ) . to ( VAR_8 ) . METHOD_5 ( VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_6 ( VAR_2 )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project COND ! ( METHOD_2 ( project ) )  return false ; TYPE java.lang.String[] NAME projects INIT = config . METHOD_3 ( ) COND ( projects . length ) < 1  return true ;  return new TYPE_1 ( TYPE_2 . METHOD_4 ( projects ) ) . METHOD_5 ( project ) ;
MODIFIER protected RETURN TYPE_1<?> NAME METHOD_1 TYPE java.lang.String NAME name TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = METHOD_2 ( name , VAR_1 , VAR_2 , VAR_3 )  METHOD_3 ( VAR_4 , project , STRING_1 )  METHOD_3 ( VAR_5 , project , STRING_2 )  return METHOD_4 ( project ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME req TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME path COND path . isEmpty ( )  return null ;  path = TYPE_3 . METHOD_2 ( path ) TYPE TYPE_4.Result NAME result INIT = METHOD_3 ( req , path ) COND result == null  return null ; COND ( result . METHOD_4 ( ) ) != null  return METHOD_5 ( VAR_1 , result , path ) ;  return METHOD_6 ( VAR_1 , result , path ) ;
MODIFIER protected RETURN TYPE_1.ChangeInfo NAME getChange TYPE java.lang.String NAME changeId TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = ( ( VAR_1 . length ) > 0 ) ? STRING_1 + ( TYPE_3 . on ( STRING_2 ) . METHOD_1 ( VAR_1 ) ) : STRING_3 TYPE TYPE_4 NAME r INIT = VAR_3 . get ( ( ( STRING_4 + changeId ) + VAR_2 ) )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_2 ( ) )  return TYPE_5 . METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , VAR_5 . ChangeInfo class ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  new TYPE_1 ( ) . METHOD_2 ( ) . METHOD_3 ( STRING_2 , VAR_1 )  METHOD_4 ( STRING_3 ) TYPE TYPE_2 NAME e  assertEquals ( ( STRING_4 + VAR_1 ) , e . getMessage ( ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME msg TYPE TYPE_3 NAME c TYPE TYPE_4 NAME err COND err != null  TYPE_5 . METHOD_2 ( req , err )  TYPE_6 . METHOD_3 ( req , res , null , null , c )  res . METHOD_4 ( VAR_1 )  TYPE_6 . METHOD_5 ( req , res , msg )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE java.lang.String NAME message COND TYPE_1 . METHOD_2 ( VAR_1 )  VAR_2 . METHOD_3 ( ( message + STRING_1 ) )  VAR_2 . METHOD_3 ( TYPE_2 . on ( STRING_2 ) . METHOD_4 ( VAR_1 ) )  VAR_2 . METHOD_3 ( STRING_3 )
MODIFIER protected RETURN void NAME run TYPE boolean NAME VAR_1 INIT = true TYPE TYPE_2 NAME rsrc IN changes . values ( )  index . apply ( rsrc , new TYPE_3 ( ) ) TYPE java.io.IOException|TYPE_4|com.google.gwtorm.server.OrmException|TYPE_5 NAME e  VAR_1 = false  METHOD_1 ( STRING_1 , java.lang.String.format ( STRING_2 , rsrc . getId ( ) , e . getMessage ( ) ) ) COND ! VAR_1  throw METHOD_2 ( STRING_3 ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( schema , id )  TYPE_3 . METHOD_2 ( VAR_2 . delete ( VAR_1 ) , VAR_3 . delete ( VAR_1 ) ) . get ( ) TYPE TYPE_4|TYPE_5 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.util.Set<TYPE_1> NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = TYPE_4 . METHOD_2 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( VAR_4 . METHOD_3 ( ) ) . isEqualTo ( VAR_2 )  com.google.common.truth.Truth.assertThat ( VAR_4 . METHOD_4 ( ) ) . METHOD_5 ( VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME c TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME r INIT = VAR_3 . put ( ( ( ( ( ( STRING_1 + changeId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + VAR_2 ) , c )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_2 ( ) )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result  METHOD_1 ( ( VAR_1 ? 1 : 0 ) )  VAR_2 = TYPE_2 . METHOD_2 ( psId , VAR_2 . getKey ( ) . get ( ) , result )  VAR_3 . METHOD_3 ( false )  VAR_4 . METHOD_4 ( true )  VAR_5 . METHOD_4 ( true )  VAR_6 . METHOD_4 ( true )  METHOD_5 ( )  VAR_7 . onSuccess ( VAR_8 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME branch TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_3 . METHOD_2 ( ) , VAR_4 )  VAR_2 . METHOD_3 ( )  VAR_2 . append ( STRING_1 , project . get ( ) )  VAR_2 . append ( STRING_2 , branch )  VAR_2 . append ( VAR_5 , VAR_6 ) TYPE TYPE_3 NAME VAR_7 IN METHOD_4 ( VAR_1 )  VAR_2 . METHOD_5 ( VAR_8 , VAR_7 )  return VAR_2 . toString ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE TYPE_1.ChangeInfo NAME c INIT = getChange ( changeId , VAR_1 ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . get ( STRING_1 )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_2 ( 1 )  com.google.common.truth.Truth.assertThat ( VAR_4 . get ( 0 ) . value ) . isEqualTo ( 2 )  com.google.common.truth.Truth.assertThat ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_4 . get ( 0 ) . VAR_5 ) ) . isEqualTo ( admin . getId ( ) )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( )  add ( VAR_1 , to ) COND ! ( VAR_2 . isEmpty ( ) )  METHOD_3 ( TYPE_2 . METHOD_4 ( ) , ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3.NameKey NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5 NAME VAR_4 TYPE TYPE_6 NAME VAR_5  return VAR_6 . create ( VAR_3 , db , VAR_1 . repo , VAR_1 . rw , VAR_7 , VAR_8 , METHOD_2 ( VAR_1 , VAR_4 ) , VAR_2 , VAR_5 , VAR_9 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) == ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) ) )  METHOD_5 ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) == ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_3 ) . METHOD_4 ( ) ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME value COND ( ! ( VAR_1 . METHOD_2 ( name ) ) ) || ( VAR_1 . get ( name ) . isEmpty ( ) )  VAR_1 . put ( name , new TYPE_1 . String ( value ) )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_2 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_4 ( STRING_3 , u . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE TYPE_1 NAME c INIT = METHOD_2 ( change , user ) COND ! ( c . METHOD_3 ( db . get ( ) ) )  throw new TYPE_3 ( c . getChange ( ) . getId ( ) ) ;  return c ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account TYPE java.lang.String NAME VAR_1 COND ! ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_1 NAME event INIT = new TYPE_1 ( util . METHOD_4 ( account ) , VAR_1 ) TYPE TYPE_2 NAME VAR_3 IN VAR_2  VAR_3 . METHOD_5 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_6 ( TYPE_3 . log , e )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_3 NAME u TYPE TYPE_4 NAME VAR_4  TYPE_5 . METHOD_2 ( u ) COND u instanceof TYPE_6  return VAR_1 . METHOD_3 ( u . METHOD_4 ( ) . METHOD_5 ( ) , VAR_4 , VAR_2 , VAR_3 ) ; COND u instanceof TYPE_7  return VAR_2 ;  throw new TYPE_8 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 . Factory class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )  factory ( VAR_8 . Factory class )  factory ( VAR_9 . Factory class )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME r INIT = VAR_3 . delete ( ( ( ( ( ( STRING_1 + changeId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + VAR_2 ) )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.HttpServletResponse NAME VAR_1 INIT = METHOD_2 ( VAR_2 . HttpServletResponse class )  servlet . METHOD_3 ( null , VAR_1 )  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 )  VAR_1 = METHOD_2 ( VAR_2 . HttpServletResponse class )  METHOD_6 ( new java.io.IOException ( STRING_1 ) ) . METHOD_7 ( VAR_1 ) . METHOD_8 ( VAR_4 )  servlet . METHOD_9 ( null , VAR_1 )  TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_3<java.lang.String> NAME n INIT = TYPE_3 . not ( p )  METHOD_3 ( ( n instanceof TYPE_4 ) )  METHOD_4 ( p , n )  METHOD_5 ( p , TYPE_3 . not ( n ) )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) MODIFIER protected RETURN void NAME METHOD_3 TYPE TYPE_3 NAME result  display ( result )  VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_4 ) )  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { display ( result ) ; VAR_2 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_4 ) ) ; } } )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_4 IN VAR_1  VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_4 ) ) TYPE java.lang.String NAME name IN VAR_2  VAR_5 . info ( java.lang.String.format ( STRING_1 , name ) )  VAR_3 . METHOD_4 ( name ) . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  throw new TYPE_1 ( STRING_1 ) ; TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE TYPE_3 NAME args INIT = VAR_2 . args COND VAR_4 . METHOD_2 ( ) . equals ( VAR_4 . METHOD_3 ( ) )  continue ; TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = VAR_5 . get ( VAR_6 . getAccountId ( ) ) . METHOD_4 ( )  VAR_7 . METHOD_5 ( VAR_8 , VAR_4 . METHOD_3 ( ) , VAR_4 . METHOD_2 ( ) , account )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = repo . METHOD_3 ( repo . commit ( ) . message ( STRING_2 ) . add ( STRING_3 , STRING_4 ) . add ( STRING_5 , STRING_6 ) . create ( ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = insert ( METHOD_4 ( repo , commit ) )  METHOD_5 ( STRING_7 )  METHOD_5 ( STRING_8 )  METHOD_5 ( STRING_9 , change )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3  VAR_3 += VAR_1 TYPE int NAME VAR_4 INIT = ( VAR_3 ) - ( VAR_5 )  VAR_6 . add ( new TYPE_1 ( VAR_5 , VAR_5 , VAR_4 ) )  VAR_7 . add ( new TYPE_1 ( VAR_2 , ( ( VAR_3 ) - 1 ) , ( - VAR_4 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( ) TYPE TYPE_2.ChangeInfo NAME result INIT = TYPE_3 . METHOD_3 ( VAR_1 . changes ( ) . query ( r . getChangeId ( ) ) . get ( ) )  org.junit.Assert . METHOD_4 ( VAR_2 )  org.junit.Assert . METHOD_4 ( VAR_3 )  org.junit.Assert . METHOD_4 ( VAR_4 )  org.junit.Assert . METHOD_4 ( VAR_5 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( ( ( ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) + ( VAR_1 ) ) + STRING_4 ) + STRING_5 ) + ( VAR_2 ) ) , METHOD_2 ( ( ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_1 ) ) + STRING_4 ) + STRING_5 ) + ( VAR_2 ) ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3<TYPE_1> NAME r INIT = VAR_1 . apply ( change , null )  return r . METHOD_2 ( ) ? null : r . value ( ) ; TYPE TYPE_4 NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER protected RETURN TYPE_1<?> NAME METHOD_1 TYPE java.lang.String NAME name TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = METHOD_2 ( name , VAR_1 , VAR_2 , VAR_3 )  METHOD_3 ( VAR_4 , project , STRING_1 )  METHOD_3 ( VAR_5 , project , STRING_2 )  return METHOD_4 ( project ) ;  METHOD_5 ( VAR_6 ) NAME VAR_7  Test = VAR_8 TYPE TYPE_3.submit NAME VAR_9  on ( projects )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 TYPE java.lang.String NAME VAR_2  VAR_3 . projects ( ) . name ( VAR_1 . get ( ) ) . METHOD_2 ( VAR_2 ) TYPE TYPE_1 NAME e  e . METHOD_3 ( )  com.google.common.truth.Truth.assertThat ( e . getMessage ( ) ) . contains ( VAR_2 )
MODIFIER public RETURN void NAME run TYPE int NAME line INIT = ( cm . METHOD_1 ( ) . METHOD_2 ( ) ) ? cm . METHOD_3 ( cm . METHOD_1 ( ) . METHOD_4 ( ) ) : 0 TYPE int NAME res INIT = java.util.Collections . METHOD_5 ( VAR_1 , new TYPE_1 ( cm . METHOD_6 ( ) , line , 0 , false ) , METHOD_7 ( ) )  METHOD_8 ( VAR_1 , VAR_2 , res , VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = new com.google.gerrit.reviewdb.client.Account ( VAR_1 , TYPE_2 . METHOD_2 ( ) )  account . METHOD_3 ( name )  account . METHOD_4 ( email ) TYPE TYPE_1 NAME s INIT = new TYPE_1 ( account , VAR_2 . Collections < TYPE_3 > METHOD_5 ( ) , VAR_2 . Collections < TYPE_4 > METHOD_5 ( ) )  return s ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE java.util.List<TYPE_4> NAME VAR_3  VAR_4 = db . METHOD_2 ( )  return METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ;  VAR_4 . METHOD_4 ( )
MODIFIER protected synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( ) . VAR_3 . METHOD_3 ( VAR_4 )  VAR_2  VAR_2 . add ( this ) TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( VAR_1 ) COND METHOD_4 ( )  new TYPE_5 ( VAR_5 , VAR_5 . toString ( ) ) . METHOD_5 ( )  VAR_6 = VAR_7 . submit ( VAR_5 )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) COND FLOAT_1 <= ( TYPE_2 . METHOD_3 ( VAR_1 ) )  return true ;  VAR_2 . METHOD_4 ( STRING_2 )  VAR_2 . METHOD_4 ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) )  return false ;
MODIFIER public RETURN void NAME delete TYPE int NAME id TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( id )  TYPE_3 . METHOD_2 ( VAR_2 . delete ( VAR_1 ) , VAR_3 . delete ( VAR_1 ) ) . get ( ) TYPE TYPE_4|TYPE_5 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = new com.google.gerrit.reviewdb.client.Change ( VAR_2 . getChange ( ) )  METHOD_2 ( VAR_1 , VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_3 ( change , VAR_1 . METHOD_4 ( ) . get ( change.getId ( ) ) )  VAR_1 . METHOD_5 ( )  return VAR_3 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME err TYPE java.lang.Exception NAME e COND VAR_1 COND e == null  VAR_2 . error ( err )  VAR_2 . error ( err , e )  return TYPE_2 . METHOD_2 ( ) ;  return TYPE_2 . METHOD_3 ( err ) ;
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  VAR_1 . close ( ) COND ( rw ) != null  rw . close ( ) COND ( repo ) != null  repo . close ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 COND VAR_1 == null  VAR_1 = VAR_3 . METHOD_2 ( getProject ( ) . METHOD_3 ( ) , config . METHOD_4 ( ) )  VAR_2 = VAR_1  return VAR_4 . create ( VAR_1 ) ;
MODIFIER MODIFIER RETURN Account.Id NAME getAccountId TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = get ( 0 ) . VAR_1 TYPE int NAME i INIT = 1 COND i < ( size ( ) )  i ++  TYPE_1 . METHOD_1 ( TYPE_2 . equals ( id , get ( i ) . VAR_1 ) , STRING_1 , id , get ( i ) . VAR_1 )  return id ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME id TYPE java.lang.String NAME name  TYPE_1 . METHOD_2 ( name ) TYPE java.util.List<TYPE_2> NAME values INIT = new java.util.ArrayList < TYPE_2 > ( 2 )  values . add ( new TYPE_2 ( ( ( short ) ( 0 ) ) , STRING_1 ) )  values . add ( new TYPE_2 ( ( ( short ) ( 1 ) ) , STRING_2 ) ) TYPE TYPE_1 NAME type INIT = new TYPE_1 ( name , values )  type . METHOD_3 ( id )  return type ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME i INIT = new TYPE_1 ( )  i . i = 1  VAR_1 = 2  i . id = INT_1  VAR_2 = INT_2  VAR_3 = INT_3  VAR_4 = INT_4  i . b = true  VAR_5 = false  VAR_6 = true  i . s = STRING_1  VAR_7 = STRING_2  VAR_8 = null  i . t = VAR_9  VAR_10 = VAR_9  return i ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_2 ) TYPE TYPE_2 NAME VAR_5 INIT = user ( VAR_1 , VAR_4 )  METHOD_3 ( VAR_5 )  METHOD_4 ( VAR_5 )  METHOD_5 ( STRING_2 , VAR_5 )  METHOD_5 ( STRING_3 , VAR_5 )  METHOD_5 ( STRING_4 , VAR_5 )  METHOD_3 ( STRING_1 , VAR_5 )  METHOD_3 ( STRING_5 , VAR_5 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 COND ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) )  VAR_1 . set ( STRING_1 , VAR_2 ) COND ( VAR_3 != null ) && ( ! ( VAR_3 . isEmpty ( ) ) )  VAR_4 . METHOD_2 ( STRING_2 , null , STRING_3 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME id TYPE TYPE_2 NAME rsrc INIT = changes . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( id ) )  VAR_2 . METHOD_4 ( rsrc )  VAR_2 . apply ( account , new TYPE_4 ( ) ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND ( VAR_1 ) == null MODIFIER public RETURN void NAME onSuccess TYPE TYPE_4 NAME result  METHOD_3 ( result )  TYPE_2 . METHOD_2 ( patchSet . getKey ( ) , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( final TYPE_4 result ) { METHOD_3 ( result ) ; } } )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_2 = VAR_3  VAR_4 = VAR_5 NAME type  VAR_8 = VAR_9  path = VAR_1 . path  revision = VAR_1 . revision  VAR_13 = VAR_14  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2 COND VAR_2 != null  VAR_1 . append ( CHAR_1 ) TYPE boolean NAME VAR_3 INIT = true TYPE TYPE_2 NAME VAR_4 IN VAR_2 COND VAR_3  VAR_3 = false  VAR_1 . append ( CHAR_2 )  VAR_5 . METHOD_1 ( VAR_1 , VAR_4 )  VAR_1 . append ( CHAR_3 )  VAR_1 . append ( VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ! ( VAR_1 . METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) COND TYPE_2 . METHOD_4 ( VAR_1 )  TYPE_2 . METHOD_5 ( VAR_1 , VAR_2 )  VAR_3 . METHOD_6 ( java.lang.String.format ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ! ( METHOD_2 ( VAR_2 ) ) ) TYPE java.lang.String NAME VAR_3 INIT = VAR_4 . getProject ( ) . getName ( )  return new TYPE_1 ( ( ( STRING_1 + VAR_3 ) + STRING_2 ) ) ; TYPE com.google.gerrit.reviewdb.client.Project NAME project INIT = VAR_4 . getProject ( ) COND project . METHOD_3 ( )  return METHOD_4 ( ) ;  return VAR_5 ;
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 . Factory class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )  factory ( VAR_8 . Factory class )  factory ( VAR_9 . Factory class )  factory ( VAR_10 . Factory class )  factory ( VAR_11 . Factory class )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m  m . METHOD_2 ( )  m . METHOD_3 ( STRING_1 )  m . METHOD_4 ( )  m . METHOD_5 ( )  m . METHOD_2 ( )  m . METHOD_6 ( STRING_2 )  m . METHOD_6 ( STRING_3 )  m . METHOD_4 ( )  m . METHOD_5 ( )
MODIFIER private static RETURN TYPE_1 NAME not TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> NAME p TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> NAME n INIT = p . METHOD_1 ( 0 ) COND n instanceof TYPE_5  return TYPE_6 . METHOD_2 ( ( ( TYPE_5 < com.google.gerrit.server.query.change.ChangeData > ) ( n ) ) ) ; TYPE TYPE_7 NAME VAR_1 INIT = new TYPE_7 ( )  VAR_1 . add ( new TYPE_8 ( ) , VAR_2 )  VAR_1 . add ( TYPE_6 . METHOD_3 ( schema , n ) , VAR_3 )  return VAR_1 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 NAME VAR_1  return ( ( ! ( METHOD_2 ( ) ) ) && ( ( user . METHOD_3 ( ) ) || ( METHOD_4 ( VAR_3 ) ) ) ) || ( METHOD_5 ( ) ) ;  return ( ( ! ( METHOD_2 ( ) ) ) && ( METHOD_6 ( java.util.Collections . METHOD_7 ( ) ) ) ) || ( METHOD_5 ( ) ) ;  throw new TYPE_2 ( ( VAR_1 + STRING_1 ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( ( VAR_1 . METHOD_2 ( ) ) == 0 ) && ( ! ( TYPE_2 . METHOD_3 ( ) ) )  TYPE_2 . METHOD_4 ( true )  VAR_2 . METHOD_5 ( false ) COND ( ( VAR_1 . METHOD_2 ( ) ) > ( FLOAT_1 * ( VAR_1 . METHOD_6 ( ) ) ) ) && ( TYPE_2 . METHOD_3 ( ) )  TYPE_2 . METHOD_4 ( false )  VAR_2 . METHOD_5 ( true )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME msg TYPE TYPE_3 NAME c TYPE TYPE_4 NAME err  res . METHOD_2 ( VAR_1 )  TYPE_5 . METHOD_3 ( req , res , null , c )  TYPE_5 . METHOD_4 ( req , res , msg ) COND err != null  TYPE_6 . METHOD_5 ( req , err )
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = STRING_1 TYPE java.lang.String NAME VAR_4 INIT = STRING_2 TYPE TYPE_2 NAME VAR_5 INIT = VAR_6 . create ( db , admin . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_1 , VAR_2 ) TYPE TYPE_2.Result NAME r INIT = VAR_5 . to ( git , STRING_3 )  r . METHOD_3 ( )  return r ;
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) COND TYPE_2 . isEmpty ( VAR_3 )  return false ; TYPE boolean NAME VAR_4 INIT = TYPE_3 . contains ( VAR_3 . METHOD_4 ( ) )  VAR_5 . METHOD_5 ( ( ( ( ( ( STRING_2 + VAR_2 ) + STRING_3 ) + VAR_3 ) + STRING_4 ) + VAR_4 ) )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( admin )  METHOD_4 ( VAR_1 , VAR_2 )  assertThat ( VAR_3 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_4 , VAR_2 ) . to ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_11 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME config INIT = STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( projectName , config ) , new TYPE_3 ( STRING_5 ) , new TYPE_4 ( ) )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( projectName , STRING_6 , STRING_7 ) ) . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( STRING_1 ) TYPE TYPE_2 NAME ctl INIT = METHOD_2 ( VAR_1 )  VAR_3 . create ( ) . METHOD_3 ( db , VAR_1 . getId ( ) )  METHOD_4 ( ctl , null , TYPE_3 . METHOD_5 ( ( STRING_2 + ( VAR_1 . getId ( ) ) ) ) )
MODIFIER public RETURN TYPE_1.AccountGroup NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_3.NameKey NAME VAR_2 INIT = new TYPE_3 . NameKey ( VAR_1 ) TYPE TYPE_1.AccountGroup NAME group INIT = db . METHOD_3 ( ) . get ( VAR_2 ) COND group != null  return group ;  return null ;  db . close ( )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) TYPE TYPE_2.Result NAME result INIT = VAR_1 . to ( git , STRING_1 )  VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) , VAR_3 , STRING_2 , STRING_3 , result . getChangeId ( ) )  return VAR_1 . to ( git , STRING_1 ) . getChangeId ( ) ;
MODIFIER public RETURN TYPE_1.AccountGroup NAME METHOD_1 TYPE TYPE_2.Id NAME key TYPE TYPE_2.NameKey NAME name INIT = new TYPE_2 . NameKey ( ( STRING_1 + ( key . toString ( ) ) ) ) TYPE TYPE_1.AccountGroup NAME VAR_1 INIT = new TYPE_1 . AccountGroup ( name , key )  VAR_1 . METHOD_2 ( VAR_2 )  VAR_1 . METHOD_3 ( VAR_3 )  return VAR_1 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME me  me = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) , ( ( TYPE_4 ) ( null ) ) )  me . METHOD_5 ( STRING_1 )  me . METHOD_6 ( STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( ( ( STRING_2 + STRING_3 ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_5 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_6 ) ) ) + STRING_7 ) + STRING_8 ) , n . METHOD_6 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME name TYPE TYPE_2 NAME p INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = repo . METHOD_2 ( )  p . METHOD_3 ( VAR_1 , new org.eclipse.jgit.revwalk.RevWalk ( repo ) . METHOD_4 ( repo . METHOD_5 ( name ) ) )  return p ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1.ChangeInfo NAME info  info . METHOD_1 ( ) . METHOD_2 ( STRING_1 ) TYPE TYPE_2<TYPE_3> NAME VAR_1 INIT = info . METHOD_1 ( ) . values ( )  TYPE_3 . METHOD_3 ( VAR_1 )  VAR_2 . METHOD_4 ( VAR_1 , diff )  VAR_3 . METHOD_5 ( info )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME user COND user . METHOD_2 ( )  return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; COND user instanceof TYPE_3  return STRING_1 + ( user . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) . toString ( ) ) ;  return user . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( VAR_2 . getName ( ) ) COND VAR_3 != null  VAR_3 . METHOD_1 ( VAR_2 )  VAR_4 . add ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  METHOD_3 ( VAR_1 . METHOD_4 ( ) )  new TYPE_3 ( VAR_1 )  METHOD_5 ( STRING_1 ) TYPE TYPE_4 NAME e  assertEquals ( ( STRING_2 + ( VAR_1 . METHOD_6 ( ) ) ) , e . getMessage ( ) )  VAR_1 . delete ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) )  VAR_1 . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( )  cfg = new TYPE_3 ( )  cfg . METHOD_7 ( STRING_2 , null , STRING_3 , STRING_1 )  VAR_2 = new TYPE_4 ( VAR_1 , cfg , METHOD_8 ( VAR_3 class ) )  VAR_2 . METHOD_9 ( )
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_3 ( )  VAR_1 = null  VAR_2 . METHOD_4 ( ) . METHOD_5 ( )  VAR_3 . METHOD_4 ( ) . METHOD_5 ( )  TYPE_1 . METHOD_6 ( true )  TYPE_2 . METHOD_7 ( true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME projectName TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME msg TYPE java.util.List<TYPE_2> NAME VAR_2 TYPE TYPE_3<TYPE_4> NAME VAR_3 TYPE org.eclipse.jgit.lib.ObjectId NAME base INIT = org.eclipse.jgit.lib.ObjectId . METHOD_2 ( VAR_1 )  VAR_4 . create ( projectName , base , VAR_2 , msg ) . to ( VAR_3 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME row TYPE int NAME VAR_1 COND ( VAR_1 == 1 ) || ( VAR_1 == 2 ) COND ! ( STRING_1 . equals ( table . METHOD_2 ( row , VAR_1 ) ) )  METHOD_3 ( row , VAR_1 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME e TYPE java.lang.String NAME VAR_1 INIT = e . getValue ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( 1 , TYPE_3 . METHOD_4 ( VAR_1 ) ) ) COND ( view ) != null  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( ( ( VAR_4 . METHOD_2 ( ) ) + VAR_1 ) ) COND ! ( TYPE_3 . METHOD_3 ( VAR_2 ) )  VAR_3 . METHOD_4 ( STRING_1 , TYPE_4 . toString ( ) )  VAR_3 . METHOD_5 ( new TYPE_5 ( VAR_2 , VAR_5 ) )  return VAR_6 . METHOD_6 ( VAR_3 , new TYPE_6 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 class )  VAR_1 . METHOD_3 ( STRING_1 ) TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . account = user . email  VAR_3 = STRING_2  in . ref = STRING_3  VAR_4 . projects ( ) . name ( VAR_5 . get ( ) ) . METHOD_4 ( in )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . name = VAR_1  VAR_2 = true  VAR_3 . projects ( ) . create ( in )  METHOD_2 ( VAR_1 , VAR_4 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE boolean NAME edit  VAR_5 . add ( new TYPE_2 ( VAR_6 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) , ( ( VAR_3 - VAR_4 ) + 1 ) , VAR_3 , edit ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReceiveCommand NAME cmd TYPE TYPE_2 NAME ctl INIT = VAR_1 . METHOD_2 ( cmd . getRefName ( ) ) COND ctl . METHOD_3 ( ) COND ( TYPE_3 . METHOD_4 ( cmd ) ) && ( ! ( METHOD_5 ( cmd ) ) )  return ;  METHOD_6 ( ctl , cmd )  cmd . METHOD_7 ( rp )  TYPE_3 . reject ( cmd , STRING_1 )
MODIFIER static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData,?> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE java.lang.String NAME id COND ( ( id . length ( ) ) == ( VAR_1 ) ) && ( schema . METHOD_2 ( VAR_2 ) )  return VAR_2 ;  return VAR_3 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME p COND p instanceof TYPE_4 < ? >  return METHOD_2 ( p ) ;  return new TYPE_5 ( new TYPE_6 ( p . METHOD_3 ( ) . getName ( ) , p . getValue ( ) ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_2 IN index . METHOD_2 ( TYPE_1 . METHOD_3 ( new TYPE_2 ( args , VAR_1 . getId ( ) ) , this ) , 1 ) . METHOD_4 ( ) COND VAR_2 . getId ( ) . equals ( VAR_1 . getId ( ) )  return true ; TYPE TYPE_3 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return false ;
MODIFIER private RETURN TYPE_1 NAME message TYPE TYPE_2.Change NAME c TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2  VAR_2 = TYPE_3 . METHOD_1 ( schema ) TYPE TYPE_4.OrmException NAME e  return null ; TYPE TYPE_1 NAME m INIT = new TYPE_1 ( new TYPE_1 . Key ( c . getId ( ) , VAR_2 ) , null )  m . METHOD_2 ( VAR_1 )  return m ;
MODIFIER protected RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_2  return METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ) ; TYPE java.io.IOException NAME e TYPE TYPE_2 NAME VAR_4 INIT = new TYPE_2 ( e . getMessage ( ) )  VAR_4 . METHOD_5 ( e )  throw VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  repo . METHOD_2 ( 2 ) TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_3 ( STRING_1 , repo . commit ( ) . create ( ) )  repo . METHOD_2 ( ( - 1 ) ) TYPE TYPE_1 NAME VAR_2 INIT = repo . METHOD_3 ( STRING_2 , VAR_1 )  org.junit.Assert.assertEquals ( ( ( VAR_3 ) + INT_1 ) , METHOD_4 ( VAR_1 ) )  org.junit.Assert.assertEquals ( ( ( VAR_3 ) + 2 ) , METHOD_4 ( VAR_2 ) )
MODIFIER private RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_2 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = VAR_1 . insert ( VAR_2 , new byte [ ] { } )  VAR_1 . METHOD_3 ( )  return id ;  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN TYPE_1 NAME create TYPE java.util.List<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( out . size ( ) ) TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME a IN out . values ( )  r . add ( new TYPE_2 ( a ) )  return new TYPE_1 ( r ) ;
MODIFIER private RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.ArrayList<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_1 TYPE TYPE_2 NAME VAR_4 IN VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String[] NAME VAR_5 INIT = VAR_4 . METHOD_4 ( ) . METHOD_5 ( STRING_1 )  VAR_2 . add ( VAR_5 [ 0 ] )  return VAR_2 ;
MODIFIER protected RETURN void NAME insert TYPE int NAME row TYPE TYPE_1 NAME VAR_1  table . METHOD_1 ( row )  METHOD_2 ( row ) TYPE TYPE_2 NAME VAR_2 INIT = table . METHOD_3 ( )  VAR_2 . METHOD_4 ( row , 1 , TYPE_3 . css ( ) . METHOD_5 ( ) )  VAR_2 . METHOD_4 ( row , 1 , TYPE_3 . css ( ) . METHOD_6 ( ) )  VAR_2 . METHOD_4 ( row , 2 , TYPE_3 . css ( ) . METHOD_5 ( ) )  METHOD_7 ( row , VAR_1 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( ctx . getProject ( ) , psId . getParentKey ( ) )  cm . METHOD_1 ( ctx . METHOD_2 ( ) . getAccountId ( ) )  cm . METHOD_3 ( patchSet , info )  cm . METHOD_4 ( ) TYPE java.lang.Exception NAME e  VAR_2 . error ( ( STRING_1 + ( psId ) ) , e )
MODIFIER public RETURN void NAME run  METHOD_1 ( ) TYPE TYPE_1 NAME e  TYPE_2 . METHOD_2 ( 1 ) TYPE TYPE_3 NAME e COND VAR_1 . METHOD_3 ( ) . equals ( STRING_1 )  METHOD_4 ( e )  VAR_2 . METHOD_5 ( e . toString ( ) ) TYPE java.lang.Exception NAME e  METHOD_4 ( e )  METHOD_6 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cfg TYPE java.lang.String NAME revision TYPE TYPE_3 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( cfg . METHOD_4 ( VAR_2 , true ) ) . METHOD_5 ( STRING_1 ) TYPE java.lang.String NAME name IN VAR_3 . METHOD_6 ( )  VAR_1 . METHOD_7 ( name , VAR_3 . METHOD_8 ( name ) )  VAR_1 . METHOD_7 ( STRING_2 )  VAR_1 . METHOD_7 ( STRING_3 , revision )  return VAR_1 . get ( ) ;
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME in COND ( VAR_1 . get ( ) ) != ( rsrc . METHOD_1 ( ) )  throw new TYPE_4 ( STRING_1 ) ;  VAR_2 . METHOD_2 ( VAR_1 . get ( ) . getAccountId ( ) , rsrc . getChange ( ) . getId ( ) )  return TYPE_1 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.util.Set<TYPE_2> NAME VAR_3 TYPE java.lang.String[] NAME VAR_4 INIT = VAR_2 . METHOD_2 ( ) TYPE java.lang.String NAME VAR_5 INIT = TYPE_3 . METHOD_3 ( VAR_4 , STRING_1 ) COND ! ( TYPE_4 . METHOD_4 ( VAR_5 ) )  VAR_6 . METHOD_5 ( VAR_1 , VAR_5 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME topic COND ( topic == null ) || ( topic . isEmpty ( ) )  topic = STRING_1 + ( TYPE_2 . METHOD_2 ( ) . toString ( ) )  VAR_2 . METHOD_3 ( STRING_2 , VAR_1 , topic )  VAR_3 . changes ( ) . id ( VAR_1 ) . topic ( topic )  return topic ;
MODIFIER MODIFIER RETURN java.util.Map<java.lang.String,?> NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( req ) . METHOD_3 ( )  return TYPE_3 . of ( STRING_1 , VAR_3 , STRING_2 , TYPE_4 . METHOD_4 ( VAR_4 ) , STRING_3 , METHOD_5 ( req , VAR_5 , TYPE_5 . METHOD_6 ( VAR_6 ) ) , STRING_4 , METHOD_5 ( req , VAR_7 , METHOD_7 ( req ) ) ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME b TYPE int NAME VAR_1 INIT = ( TYPE_1 . index ( this ) ) - ( TYPE_1 . index ( b ) ) COND VAR_1 == 0  getName ( ) . METHOD_1 ( b . getName ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1  db . create ( ) TYPE TYPE_2 NAME VAR_1 INIT = db . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = db . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 )  assertEquals ( VAR_3 , VAR_4 )  assertEquals ( VAR_5 , VAR_6 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME ctl TYPE com.google.gerrit.reviewdb.client.PatchSet NAME in  VAR_1 = VAR_2 . create ( METHOD_2 ( VAR_3 ) ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = METHOD_3 ( ctl ) TYPE TYPE_1 NAME VAR_4 INIT = METHOD_4 ( ctl , VAR_5 . create ( db . get ( ) , ctl ) , in , repo , true )  VAR_1 . METHOD_5 ( )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) )  METHOD_3 ( )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_4 ) ) , METHOD_2 ( STRING_1 ) )  METHOD_3 ( )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_5 ) ) , METHOD_2 ( STRING_1 ) )
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME cfg TYPE java.lang.String NAME name TYPE int NAME VAR_1  return cfg . METHOD_1 ( name , VAR_1 ) ; TYPE TYPE_2 NAME e  VAR_2 . error ( java.lang.String.format ( STRING_1 , name , VAR_1 ) )  VAR_2 . METHOD_2 ( ( STRING_2 + ( e . getMessage ( ) ) ) , e )  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME add TYPE TYPE_2<TYPE_3> NAME VAR_1 TYPE TYPE_4<TYPE_2<TYPE_3>> NAME ref INIT = new TYPE_4 < TYPE_2 < TYPE_3 > > ( VAR_1 )  VAR_2 . add ( ref ) MODIFIER public RETURN void NAME METHOD_1 COND ref . METHOD_2 ( VAR_1 , null )  VAR_2 . METHOD_1 ( ref )  return new TYPE_1 ( ) { public void METHOD_1 ( ) { if ( ref . METHOD_2 ( VAR_1 , null ) ) { VAR_2 . METHOD_1 ( ref ) ; } } } ;
MODIFIER private synchronized RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 ) TYPE java.lang.String NAME name INIT = VAR_1 . getName ( )  VAR_3 . info ( java.lang.String.format ( STRING_1 , name , VAR_1 . METHOD_3 ( ) ) )  VAR_1 . METHOD_4 ( VAR_4 )  VAR_4 . METHOD_5 ( VAR_1 )  VAR_5 . METHOD_6 ( name )  VAR_6 . METHOD_6 ( name )  VAR_7 . add ( VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME result MODIFIER public RETURN void NAME METHOD_2 TYPE TYPE_3 NAME VAR_2  VAR_1 . METHOD_3 ( VAR_2 ) INIT = new TYPE_1 ( ) { public void METHOD_2 ( TYPE_3 VAR_2 ) throws java.io.IOException { VAR_1 . METHOD_3 ( VAR_2 ) ; } } . METHOD_4 ( VAR_1 . METHOD_5 ( ) )  return result ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME r  VAR_2 . display ( r . METHOD_3 ( ) )  VAR_3 . display ( r . METHOD_4 ( ) )  VAR_4 . display ( r . METHOD_5 ( ) ) MODIFIER public RETURN void NAME METHOD_6 TYPE TYPE_4 NAME VAR_5  TYPE_5 . log ( STRING_1 , VAR_5 )  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 r ) { VAR_2 . display ( r . METHOD_3 ( ) ) ; VAR_3 . display ( r . METHOD_4 ( ) ) ; VAR_4 . display ( r . METHOD_5 ( ) ) ; } public void METHOD_6 ( final TYPE_4 VAR_5 ) { TYPE_5 . log ( STRING_1 , VAR_5 ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  METHOD_3 ( ( VAR_1 instanceof TYPE_3 ) )  METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( STRING_2 )  METHOD_3 ( ( VAR_2 instanceof TYPE_5 ) )  METHOD_5 ( TYPE_4 . METHOD_4 ( VAR_2 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 INIT = ( cd != null ) ? cd . reviewers ( TYPE_2 . of ( db ) ) . values ( ) : VAR_2 . METHOD_4 ( db , change.getId ( ) ) . values ( ) TYPE TYPE_3 NAME user INIT = ( ( TYPE_3 ) ( METHOD_2 ( ) ) )  return VAR_1 . contains ( user . getAccountId ( ) ) ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4 TYPE TYPE_5 NAME VAR_5 INIT = METHOD_2 ( VAR_1 , VAR_3 ) TYPE TYPE_6 NAME VAR_6 INIT = TYPE_6 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( VAR_4 ) . METHOD_6 ( )  METHOD_7 ( db , VAR_2 , VAR_5 , VAR_6 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME w INIT = METHOD_2 ( ) COND w != null  w = w . METHOD_2 ( ) COND w instanceof TYPE_2  ( ( TYPE_2 ) ( w ) ) . METHOD_1 ( )  break ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( project ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 INIT = repo . METHOD_3 ( STRING_1 ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 INIT = repo . METHOD_3 ( STRING_2 )  return METHOD_4 ( repo , VAR_2 , VAR_3 ) ;  rw . METHOD_5 ( )  repo . close ( )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result  VAR_1 . METHOD_1 ( ) COND TYPE_2 . METHOD_2 ( ) . auth ( ) . METHOD_3 ( )  VAR_2 = VAR_3 COND ( VAR_4 . METHOD_4 ( ) ) == 0 TYPE com.google.gerrit.reviewdb.client.Account NAME me INIT = TYPE_2 . METHOD_5 ( )  me . METHOD_6 ( VAR_3 )  METHOD_7 ( me )  VAR_5 . METHOD_8 ( true )  METHOD_9 ( )
MODIFIER static RETURN int NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = VAR_1 . change ( ) . getProject ( )  return ( ( VAR_2 . config ) == null ) || ( project == null ) ? VAR_3 : VAR_4 . METHOD_2 ( project , VAR_5 ) . METHOD_3 ( VAR_6 , VAR_3 ) ; TYPE TYPE_1 NAME e  VAR_7 . error ( ( STRING_1 + project ) )  return VAR_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_1 NAME event TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME VAR_1 IN VAR_2 . values ( ) COND METHOD_2 ( change , VAR_1 . user , db )  VAR_3 . METHOD_3 ( event )  METHOD_4 ( event )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME cfg INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( )  TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) . METHOD_5 ( true )  METHOD_6 ( VAR_2 , cfg )
MODIFIER public RETURN void NAME name TYPE java.lang.String NAME name TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  in . name = name  VAR_1 . apply ( rsrc , in ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( name , e ) ; TYPE java.lang.Exception NAME e  throw TYPE_5 . METHOD_1 ( STRING_1 , e ) ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE java.lang.String NAME VAR_4 INIT = get ( name ) TYPE java.lang.String NAME VAR_5 INIT = ui . METHOD_2 ( ( VAR_4 != null ? VAR_4 : VAR_2 ) , STRING_1 , VAR_1 ) COND VAR_3 && ( VAR_5 == VAR_2 )  VAR_5 = null COND ! ( TYPE_1 . METHOD_3 ( VAR_4 , VAR_5 ) )  set ( name , VAR_5 )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1  org.junit.Assert . METHOD_2 ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) == ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) ) )  org.junit.Assert . METHOD_5 ( ( ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_2 ) . METHOD_4 ( ) ) == ( TYPE_1 . METHOD_3 ( STRING_1 , STRING_3 ) . METHOD_4 ( ) ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( STRING_1 )  VAR_2 . METHOD_3 ( TYPE_3 . css ( ) . METHOD_4 ( ) )  TYPE_2 . METHOD_5 ( VAR_2 , VAR_1 )  TYPE_2 . METHOD_6 ( VAR_3 . METHOD_7 ( ) , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i INIT = 1 COND i < INT_1  i ++ TYPE java.lang.String NAME p INIT = STRING_1 + i  METHOD_2 ( p )  TYPE_2 . METHOD_3 ( ( ( ( VAR_1 . METHOD_4 ( ) ) + STRING_2 ) + p ) )  return null ;
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME ref TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_3 NAME VAR_4 INIT = VAR_5 . create ( db , admin . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 )  return VAR_4 . to ( git , ref ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( VAR_1 , STRING_1 )  METHOD_3 ( VAR_1 . METHOD_4 ( ) )  METHOD_3 ( VAR_2 . METHOD_5 ( ) ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_1 )  METHOD_6 ( VAR_4 )  assertEquals ( VAR_1 , VAR_5 )  VAR_2 . delete ( )  VAR_1 . delete ( )
MODIFIER MODIFIER RETURN TYPE_1<TYPE_2> NAME METHOD_1 MODIFIER private static final TYPE long NAME VAR_1 INIT = INT_1 MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = new TYPE_4 ( new TYPE_5 ( VAR_3 ) )  VAR_4 . METHOD_2 ( VAR_2 )  VAR_4 . METHOD_3 ( )  VAR_4 . close ( ) TYPE java.io.IOException NAME err  throw new TYPE_6 ( STRING_1 , err ) ;  return new TYPE_1 < TYPE_2 > ( ) { private static final long VAR_1 = INT_1 ; public void METHOD_1 ( TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { try { TYPE_4 VAR_4 = new TYPE_4 ( new TYPE_5 ( VAR_3 ) ) ; try { VAR_4 . METHOD_2 ( VAR_2 ) ; VAR_4 . METHOD_3 ( ) ; } finally { VAR_4 . close ( ) ; } } catch ( java.io.IOException err ) { throw new TYPE_6 ( STRING_1 , err ) ; } } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = insert ( METHOD_3 ( repo ) ) TYPE TYPE_3 NAME query INIT = METHOD_4 ( STRING_2 ) . METHOD_5 ( INT_1 )  METHOD_6 ( query , change )  METHOD_6 ( query . METHOD_7 ( 1 ) )  METHOD_6 ( query . METHOD_7 ( INT_2 ) )  METHOD_8 ( query . METHOD_7 ( INT_3 ) )  METHOD_6 ( query . METHOD_5 ( INT_3 ) . METHOD_7 ( INT_3 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME i TYPE TYPE_6 NAME VAR_1 INIT = new TYPE_6 ( new TYPE_6 . Id ( user . getAccountId ( ) , VAR_2 ) , VAR_3 )  VAR_4 . apply ( new TYPE_7 ( user . METHOD_2 ( ) , VAR_1 ) , null )
MODIFIER public RETURN java.util.Set<com.google.gerrit.reviewdb.client.PatchSet.Id> NAME METHOD_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.PatchSet.Id> NAME VAR_1 INIT = new TYPE_1 < > ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2  VAR_1 . add ( cd . change ( ) . currentPatchSetId ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . delete ( ) ) . METHOD_3 ( )  TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) ) . METHOD_7 ( VAR_1 . METHOD_8 ( ) ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_5 . METHOD_9 ( VAR_3 )  com.google.common.truth.Truth.assertThat ( VAR_4 . METHOD_10 ( ) . METHOD_11 ( ) ) . METHOD_3 ( )
MODIFIER private RETURN Account.Id NAME user TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE TYPE_1 NAME s INIT = METHOD_1 ( name , email )  TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( s . METHOD_5 ( ) . getId ( ) ) ) ) . METHOD_6 ( TYPE_3 . of ( s ) )  return s . METHOD_5 ( ) . getId ( ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  VAR_2 . METHOD_2 ( METHOD_3 ( ) )  VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_3 , VAR_4 ) )  VAR_2 . METHOD_5 ( STRING_1 ) TYPE TYPE_4 NAME VAR_5 INIT = new TYPE_4 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_6 INIT = METHOD_6 ( VAR_1 , VAR_5 ) COND VAR_5 . get ( )  return null ;  VAR_2 . METHOD_7 ( TYPE_5 . METHOD_8 ( VAR_6 ) )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_1 NAME out TYPE TYPE_2 NAME ctl TYPE TYPE_3 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = ctl . getChange ( ) . currentPatchSetId ( )  return format ( out , ctl , VAR_2 . METHOD_1 ( db . get ( ) , VAR_1 , psId , VAR_3 ) ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1  return TYPE_1 . METHOD_2 ( ) ; TYPE TYPE_3.OrmException NAME e  throw new TYPE_2 ( INT_1 , STRING_1 ) ; TYPE TYPE_4 NAME e  throw new TYPE_2 ( INT_1 , STRING_1 ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc COND ( VAR_1 ) || ( rsrc . METHOD_1 ( ) )  return VAR_2 . format ( rsrc . METHOD_2 ( ) . getProject ( ) ) ;  throw new TYPE_3 ( rsrc . getName ( ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 MODIFIER public RETURN TYPE_2 NAME METHOD_2 MODIFIER public RETURN java.util.Set<TYPE_3> NAME METHOD_3 TYPE TYPE_4<TYPE_3> NAME VAR_1  return null ; MODIFIER public RETURN java.util.Set<TYPE_3> NAME METHOD_4  return null ; MODIFIER public RETURN boolean NAME METHOD_5 TYPE TYPE_4<TYPE_3> NAME VAR_1  return true ; MODIFIER public RETURN boolean NAME contains TYPE TYPE_3 NAME VAR_2  return true ;  return new TYPE_2 ( ) { public java.util.Set < TYPE_3 > METHOD_3 ( TYPE_4 < TYPE_3 > VAR_1 ) { return null ; } public java.util.Set < TYPE_3 > METHOD_4 ( ) { return null ; } public boolean METHOD_5 ( TYPE_4 < TYPE_3 > VAR_1 ) { return true ; } public boolean contains ( TYPE_3 VAR_2 ) { return true ; } } ;  return new TYPE_1 ( null ) { public TYPE_2 METHOD_2 ( ) { return new TYPE_2 ( ) { public java.util.Set < TYPE_3 > METHOD_3 ( TYPE_4 < TYPE_3 > VAR_1 ) { return null ; } public java.util.Set < TYPE_3 > METHOD_4 ( ) { return null ; } public boolean METHOD_5 ( TYPE_4 < TYPE_3 > VAR_1 ) { return true ; } public boolean contains ( TYPE_3 VAR_2 ) { return true ; } } ; } } ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME factory INIT = TYPE_3 . METHOD_2 ( )  factory . METHOD_3 ( false )  factory . METHOD_4 ( false )  factory . METHOD_5 ( true )  factory . METHOD_6 ( true ) TYPE TYPE_1 NAME VAR_1 INIT = factory . METHOD_7 ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = METHOD_3 ( repo , null , null , null , null ) . insert ( ) TYPE java.lang.String NAME key INIT = change . getKey ( ) . get ( )  METHOD_4 ( STRING_2 ) TYPE int NAME i INIT = 0 COND i <= INT_1  i ++ TYPE java.lang.String NAME VAR_1 INIT = key . METHOD_5 ( 0 , ( INT_2 - i ) )  METHOD_4 ( VAR_1 , change )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( INT_1 , VAR_1 ) TYPE TYPE_2<TYPE_3> NAME repo INIT = METHOD_3 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_2 INIT = insert ( METHOD_4 ( repo ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( METHOD_4 ( repo ) )  TYPE_1 . METHOD_5 ( 0 , VAR_4 )  METHOD_6 ( STRING_2 )  METHOD_6 ( STRING_3 , VAR_3 )  METHOD_6 ( STRING_4 , VAR_3 )  METHOD_6 ( STRING_5 , VAR_3 )  METHOD_6 ( STRING_6 , VAR_3 , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME get  return new TYPE_2 ( server ) ; TYPE TYPE_3 NAME VAR_1 MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_4.Account NAME account TYPE TYPE_5 NAME info  throw VAR_1 ;  return new TYPE_1 ( ) { public void METHOD_1 ( TYPE_4 . Account account , TYPE_5 info ) throws TYPE_3 { throw VAR_1 ; } } ;
MODIFIER public static RETURN com.google.gerrit.reviewdb.client.Change.Id NAME METHOD_1 TYPE java.lang.String NAME ref TYPE int NAME VAR_1 INIT = ( ref . METHOD_2 ( TYPE_1 ) ) + ( TYPE_1 . length ( ) ) TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_3 ( ref , VAR_1 ) TYPE java.lang.String NAME id INIT = ref . METHOD_4 ( VAR_1 , VAR_2 )  return new com.google.gerrit.reviewdb.client.Change . Id ( TYPE_3 . METHOD_5 ( id ) ) ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME in TYPE java.util.ArrayList<TYPE_1> NAME r INIT = new java.util.ArrayList < TYPE_1 > ( in . size ( ) ) TYPE TYPE_1 NAME m IN in COND VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME c IN VAR_1 . METHOD_3 ( )  r . add ( new TYPE_1 ( c , VAR_2 ) )  r . add ( m )  return r ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.HttpServletResponse NAME res TYPE byte[] NAME msg INIT = TYPE_3 . message ( VAR_1 )  res . METHOD_2 ( TYPE_4 . METHOD_3 ( ) , STRING_1 )  res . METHOD_4 ( msg . length )  TYPE_5 . METHOD_5 ( res ) TYPE TYPE_6 NAME out INIT = res . METHOD_6 ( )  out . METHOD_7 ( msg )  out . close ( )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME s INIT = METHOD_2 ( ) COND ( s == null ) || ( ( s . length ( ) ) == 0 )  return STRING_1 ; TYPE java.lang.String[] NAME VAR_1 INIT = s . METHOD_3 ( STRING_2 ) COND ( VAR_1 . length ) < INT_1  return STRING_1 ;  return VAR_1 [ 2 ] ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id  id = TYPE_2 . METHOD_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2  return null ; TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_3 ( )  return auth ( db . METHOD_4 ( ) . get ( id ) ) ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  METHOD_5 ( ) . log ( STRING_1 , e )  return null ;
MODIFIER public RETURN void NAME close TYPE TYPE_1 NAME VAR_1 INIT = METHOD_1 ( ) COND VAR_1 != null COND ( VAR_1 . METHOD_2 ( ) ) != ( - 1 ) BLOCK BLOCK  VAR_2 . close ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_2 = new TYPE_2 ( )  VAR_2 . add ( new TYPE_3 ( TYPE_4 . METHOD_2 ( ) ) )  VAR_3 = new TYPE_5 ( STRING_1 , STRING_1 )  VAR_2 . add ( VAR_3 )  VAR_1 . add ( VAR_2 )
MODIFIER private static RETURN java.util.List<com.google.gerrit.reviewdb.client.PatchSet> NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME info TYPE TYPE_2<TYPE_3> NAME VAR_1 INIT = info . METHOD_2 ( ) . values ( )  TYPE_3 . METHOD_3 ( VAR_1 ) TYPE java.util.List<com.google.gerrit.reviewdb.client.PatchSet> NAME r INIT = new java.util.ArrayList < com.google.gerrit.reviewdb.client.PatchSet > ( VAR_1 . length ( ) ) TYPE TYPE_3 NAME VAR_2 IN TYPE_4 . METHOD_4 ( VAR_1 )  r . add ( TYPE_5 . METHOD_5 ( info , VAR_2 ) )  return r ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.io.IOException NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1 NAME VAR_3 COND ( VAR_2 > ( cfg . METHOD_2 ( ) ) ) || ( VAR_1 instanceof TYPE_2 )  return false ;  METHOD_3 ( VAR_1 . getMessage ( ) )  TYPE_3 . METHOD_4 ( cfg . METHOD_5 ( ) ) TYPE TYPE_4 NAME e  TYPE_3 . METHOD_6 ( ) . METHOD_7 ( )  return false ;  return true ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , VAR_2 )  org.junit.Assert.assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( STRING_3 , a . METHOD_4 ( VAR_1 ) )  org.junit.Assert.assertEquals ( ( ( ( STRING_4 + VAR_1 ) + STRING_5 ) + VAR_2 ) , a . toString ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String,TYPE_2> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( new TYPE_4 ( ) ) TYPE java.lang.String NAME VAR_2 IN TYPE_5 . METHOD_4 ( ) . METHOD_5 ( )  org.junit.Assert.assertEquals ( TYPE_5 . METHOD_4 ( ) . get ( VAR_2 ) . METHOD_6 ( ) , VAR_1 . get ( VAR_2 ) . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME t COND t . METHOD_2 ( )  return new TYPE_2 ( ( ( this . METHOD_3 ( ) ) - ( t . METHOD_3 ( ) ) ) ) ;  return new TYPE_3 ( ( ( this . VAR_1 ) - ( t . METHOD_4 ( ) ) ) ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME query TYPE int NAME VAR_2 TYPE int NAME n INIT = ( VAR_2 <= 0 ) ? INT_1 : TYPE_3 . METHOD_2 ( VAR_2 , INT_1 )  return TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( VAR_3 . METHOD_5 ( query ) , n ) ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = TYPE_8 . of ( VAR_1 . METHOD_1 ( ) . toString ( ) )  return delete . get ( ) . apply ( VAR_1 , in ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME index TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = METHOD_2 ( index , false , VAR_3 ) COND VAR_2 < 0  return null ;  return METHOD_3 ( VAR_2 , VAR_1 , null , TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < TYPE_2 > ( )  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) )  modules.add ( VAR_3 . METHOD_2 ( VAR_4 class ) )  modules.add ( VAR_1 . METHOD_2 ( VAR_5 class ) )  modules.add ( TYPE_3 . METHOD_3 ( ) )  modules.add ( TYPE_4 . METHOD_3 ( ) )  return VAR_3 . METHOD_4 ( modules ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = METHOD_2 ( STRING_1 )  org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_3 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_4 ( ) . METHOD_5 ( r . METHOD_6 ( ) , VAR_3 class )  TYPE_3 . METHOD_7 ( user , VAR_2 )  METHOD_8 ( STRING_2 , admin , user )  r . METHOD_9 ( )  org.junit.Assert.assertEquals ( VAR_4 , METHOD_10 ( STRING_1 ) )  METHOD_8 ( STRING_2 , admin )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 )  id = TYPE_2 . METHOD_2 ( VAR_4 )  TYPE_3 . METHOD_3 ( VAR_5 . METHOD_4 ( ) ) . METHOD_5 ( ( STRING_1 + ( VAR_4 ) ) )  change = new com.google.gerrit.reviewdb.client.Change ( null , id , null , null , TYPE_4 . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME id TYPE TYPE_2 NAME rsrc INIT = changes . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( id ) ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( account . METHOD_4 ( ) , rsrc )  VAR_3 . apply ( VAR_2 , new TYPE_5 ( ) ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME token COND TYPE_2 . METHOD_2 ( )  return new TYPE_3 ( TYPE_2 . METHOD_3 ( ) . getId ( ) ) ; TYPE TYPE_1 NAME r INIT = new TYPE_3 ( null )  r . METHOD_4 ( true )  return r ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME VAR_1 INIT = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) )  METHOD_1 ( ( STRING_2 + ( VAR_1 . METHOD_2 ( ) . get ( ) ) ) , VAR_1 )  METHOD_1 ( ( STRING_2 + ( VAR_1 . getName ( ) ) ) , VAR_1 )  METHOD_1 ( ( STRING_2 + ( VAR_1 . getId ( ) . get ( ) ) ) , VAR_1 )
MODIFIER public RETURN void NAME index TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id,TYPE_2> NAME i IN METHOD_1 ( )  VAR_1 . METHOD_2 ( id ) TYPE TYPE_3<TYPE_2> NAME VAR_2 INIT = VAR_1 . get ( id ) COND VAR_2 . METHOD_3 ( )  i . METHOD_4 ( VAR_2 . get ( ) )  i . delete ( id )  METHOD_5 ( id . get ( ) )  TYPE_4 . METHOD_6 ( id )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME view TYPE java.lang.String NAME name TYPE java.util.List<java.lang.String> NAME values INIT = view . METHOD_2 ( ) . get ( name )  return ( ! ( values . isEmpty ( ) ) ) && ( ( values . get ( 0 ) . equals ( STRING_1 ) ) || ( values . get ( 0 ) . equals ( STRING_2 ) ) ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE java.lang.String NAME s IN new java.lang.String [ ] { STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 }  VAR_1 . METHOD_3 ( s )  TYPE_2 . METHOD_4 ( STRING_8 , VAR_1 )  TYPE_2 . METHOD_5 ( STRING_9 , STRING_10 )  TYPE_2 . METHOD_5 ( STRING_11 , STRING_12 )  TYPE_2 . METHOD_5 ( STRING_13 , STRING_10 )  TYPE_2 . METHOD_5 ( STRING_14 , STRING_12 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.Set<TYPE_2> NAME VAR_2 COND VAR_2 != null  VAR_1 . append ( CHAR_1 ) TYPE boolean NAME VAR_3 INIT = true TYPE TYPE_2 NAME VAR_4 IN VAR_2 COND VAR_3  VAR_3 = false  VAR_1 . append ( CHAR_2 )  VAR_5 . METHOD_1 ( VAR_1 , VAR_4 )  VAR_1 . append ( CHAR_3 )  VAR_1 . append ( VAR_6 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a TYPE TYPE_2 NAME VAR_1  org.junit.Assert . METHOD_2 ( ( ( VAR_2 . get ( ) ) == ( VAR_3 ) ) )  org.junit.Assert.assertEquals ( VAR_4 , VAR_1 . name )  org.junit.Assert.assertEquals ( a . email , VAR_1 . email )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME revision TYPE java.lang.String NAME VAR_1 COND ( VAR_2 ) != null  return METHOD_2 ( revision . METHOD_3 ( STRING_1 , METHOD_4 ( projectName ) ) . METHOD_3 ( STRING_2 , METHOD_4 ( revision ) ) . METHOD_3 ( STRING_3 , METHOD_4 ( VAR_1 ) ) . toString ( ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( ( STRING_2 + ( TYPE_2 . METHOD_5 ( STRING_3 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_5 ) ) ) + STRING_6 ) + STRING_7 ) , n . METHOD_6 ( ) )
MODIFIER public RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 . get ( VAR_1 ) ) == null TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( VAR_1 )  VAR_4 . METHOD_2 ( VAR_3 )  VAR_2 . put ( VAR_1 , VAR_3 . METHOD_1 ( ) )  return VAR_2 . get ( VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  super . METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  METHOD_2 ( true )  display ( result )  TYPE_1 . METHOD_3 ( VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { METHOD_2 ( true ) ; display ( result ) ; } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 IN VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_3 IN VAR_2 . METHOD_3 ( )  VAR_3 . METHOD_4 ( METHOD_5 ( VAR_3 . METHOD_6 ( ) ) )  VAR_4 . put ( VAR_1 . METHOD_7 ( ) , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 COND ( db ) != null TYPE TYPE_1 NAME ps INIT = METHOD_2 ( ) COND ps != null TYPE TYPE_2 NAME w IN METHOD_3 ( ) COND w . METHOD_4 ( )  add ( VAR_1 , w . getAccountId ( ) ) TYPE TYPE_3.OrmException NAME err BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_8 ( STRING_2 , VAR_2 ) . METHOD_9 ( VAR_6 , VAR_7 , VAR_4 ) . to ( VAR_8 ) . to ( VAR_9 ) . METHOD_10 ( VAR_10 ) . METHOD_10 ( VAR_11 ) . METHOD_9 ( VAR_3 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1.NameKey NAME project TYPE TYPE_2.PatchSet NAME ps TYPE TYPE_3 NAME r INIT = new TYPE_3 ( )  TYPE_4 . p ( r , project )  TYPE_4 . METHOD_2 ( r , ps )  return ( VAR_1 ) + r ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_8 ( STRING_2 , VAR_2 ) . METHOD_9 ( VAR_4 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_10 ( VAR_8 ) . METHOD_10 ( VAR_9 ) . METHOD_11 ( VAR_10 ) . METHOD_11 ( VAR_3 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  VAR_2 = VAR_1  VAR_3 = VAR_4 . FALSE TYPE TYPE_3 NAME r INIT = VAR_5 . put ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) , in )  org.junit.Assert.assertEquals ( VAR_6 , r . METHOD_2 ( ) )  r . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , admin , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_5 ) . METHOD_5 ( VAR_6 , VAR_7 , admin ) . to ( VAR_8 ) . METHOD_5 ( VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_6 ( VAR_2 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cfg TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4.Factory NAME VAR_2 TYPE TYPE_5<TYPE_6> NAME VAR_3 TYPE TYPE_7 NAME VAR_4 TYPE TYPE_1 NAME s INIT = new TYPE_1 ( cfg , null , VAR_1 , VAR_2 , VAR_3 , null , null , null ) TYPE TYPE_9 NAME view IN TYPE_10 . values ( )  s . METHOD_2 ( view , VAR_4 )  return s ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , VAR_2 )  org.junit.Assert.assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( VAR_2 , a . METHOD_4 ( VAR_1 ) )  org.junit.Assert.assertEquals ( ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) + VAR_2 ) , a . toString ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE TYPE_1 NAME VAR_1 TYPE TYPE_3.line NAME VAR_2 TYPE TYPE_4 NAME name TYPE TYPE_5 NAME VAR_3  VAR_4 . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) . revision ( patchSet . getRevision ( ) . get ( ) ) . METHOD_2 ( VAR_1 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = VAR_2 . METHOD_2 ( 0 , ( ( VAR_2 . METHOD_3 ( STRING_1 ) ) - 1 ) ) TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) )  METHOD_4 ( VAR_4 , VAR_1 , VAR_3 )  return VAR_4 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE int NAME i TYPE int NAME s INIT = VAR_1 . get ( i ) . METHOD_2 ( ) TYPE int NAME e INIT = VAR_1 . get ( ( i - 1 ) ) . METHOD_3 ( )  return ( s - e ) <= ( 2 * ( VAR_2 ) ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1  return VAR_2 . get ( VAR_3 . get ( ) , new com.google.gerrit.reviewdb.client.PatchSet.Id ( VAR_1 . getParentKey ( ) , ( ( VAR_1 . get ( ) ) - 1 ) ) ) ; TYPE TYPE_3 NAME e  throw new TYPE_2 ( e . getMessage ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND ( VAR_2 ) != null  VAR_3 . METHOD_4 ( VAR_4 , VAR_2 . METHOD_5 ( ) )  VAR_5 . METHOD_6 ( )
MODIFIER private RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = db . patchSets ( ) . get ( psId ) COND ps == null  throw new TYPE_1 ( ) ;  return org.eclipse.jgit.lib.ObjectId . METHOD_2 ( ps . getRevision ( ) . get ( ) ) ; TYPE TYPE_2 NAME e  VAR_1 . error ( ( ( STRING_1 + psId ) + STRING_2 ) )  throw new TYPE_1 ( ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME branch TYPE java.lang.String NAME topic COND ( topic != null ) && ( ! ( topic . isEmpty ( ) ) )  return ( ( branch + STRING_1 ) + topic ) + STRING_2 ;  return branch ;
MODIFIER public static RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME message TYPE java.util.Set<TYPE_1> NAME VAR_1 TYPE java.util.Map<TYPE_1,byte[]> NAME VAR_2 INIT = new TYPE_3 < > ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_1  VAR_2 . put ( VAR_3 , null )  return TYPE_4 . METHOD_1 ( repo , message , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( )  METHOD_4 ( VAR_1 , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_5 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 , VAR_2 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_11 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND VAR_1 == ( TYPE_2 . METHOD_2 ( ) )  METHOD_3 ( db ) TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_2 . METHOD_4 ( )  METHOD_3 ( db )  db . close ( )  VAR_3  VAR_3 . update ( 1 )  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1  value = VAR_1  VAR_2 . METHOD_2 ( ( ( STRING_1 + ( 2 * VAR_1 ) ) + STRING_2 ) )  msg . METHOD_3 ( ( ( ( VAR_3 ) + VAR_1 ) + STRING_3 ) )
MODIFIER protected RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = TYPE_2 . METHOD_1 ( project , VAR_1 . getAccountId ( ) ) TYPE TYPE_3 NAME u INIT = METHOD_2 ( c , VAR_1 )  u . METHOD_3 ( c . METHOD_4 ( ) )  u . METHOD_5 ( c . METHOD_6 ( ) . get ( ) )  u . commit ( )  return c ;
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND VAR_1 instanceof TYPE_2 TYPE TYPE_2 NAME r INIT = ( ( TYPE_2 ) ( VAR_1 ) )  return ( ( ( ( TYPE_3 . equals ( name , r . name ) ) && ( TYPE_3 . equals ( id , r . id ) ) ) && ( TYPE_3 . equals ( type , r . type ) ) ) && ( TYPE_3 . equals ( VAR_2 , VAR_3 ) ) ) && ( TYPE_3 . equals ( VAR_4 , VAR_5 ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_1 INIT = METHOD_3 ( repo , VAR_2 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = METHOD_3 ( repo , VAR_5 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_6 INIT = insert ( VAR_4 )  METHOD_4 ( STRING_2 , VAR_3 )  METHOD_4 ( STRING_3 , VAR_3 )  METHOD_4 ( STRING_4 , VAR_3 )  METHOD_4 ( STRING_5 , VAR_6 )  METHOD_4 ( STRING_6 , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND ! ( VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( ) COND ( VAR_2 . METHOD_4 ( event ) ) && ( ( VAR_3 ) > 0 )  TYPE_2 . METHOD_5 ( STRING_1 , VAR_3 )  VAR_3 = 0 COND ( ( VAR_3 ) % INT_1 ) == 0  TYPE_2 . error ( STRING_2 , VAR_3 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_2 ( ( ! ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) , STRING_1 ) TYPE int NAME e INIT = VAR_1 . METHOD_4 ( CHAR_1 )  TYPE_2 . METHOD_2 ( ( e >= 0 ) , STRING_2 , VAR_1 )  return new TYPE_1 ( VAR_1 . METHOD_5 ( 0 , e ) , TYPE_4 . METHOD_6 ( VAR_1 . METHOD_5 ( ( e + 1 ) ) , VAR_1 . length ( ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = org.eclipse.jgit.lib.ObjectId . METHOD_2 ( STRING_1 )  name = new TYPE_1 . NameKey ( STRING_2 )  VAR_2 = METHOD_3 ( )  VAR_3 = TYPE_2 . METHOD_4 ( VAR_4 . Repository class )  VAR_5 = TYPE_2 . METHOD_4 ( VAR_6 class )  VAR_7 = TYPE_2 . METHOD_4 ( VAR_8 . Factory class )  VAR_9 = TYPE_2 . METHOD_4 ( VAR_10 class )  VAR_11 = new java.util.ArrayList < TYPE_3 > ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . get ( req . METHOD_2 ( ) ) COND VAR_1 == null  rsp . METHOD_3 ( VAR_3 )  return ; NAME VAR_1 . METHOD_4 ( )  METHOD_5 ( VAR_1 , req , rsp )  break ;  METHOD_6 ( VAR_1 , req , rsp )  break ;  rsp . METHOD_3 ( VAR_3 )  break ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3.Result NAME r INIT = METHOD_2 ( )  VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . revision ( r . METHOD_3 ( ) . name ( ) ) . METHOD_1 ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.Exception NAME error COND VAR_2 . METHOD_2 ( )  VAR_2 . METHOD_3 ( java.lang.String.format ( STRING_1 , VAR_1 . METHOD_4 ( ) . getName ( ) , error ) )  VAR_2 . METHOD_5 ( STRING_2 , VAR_1 . METHOD_4 ( ) . getName ( ) , error . getMessage ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 COND ( TYPE_1 . equals ( VAR_1 ) ) && ( ! ( VAR_2 . METHOD_2 ( ) ) ) COND ! ( ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ) && ( VAR_2 . METHOD_5 ( ) ) )  return false ;  return ( METHOD_6 ( VAR_3 ) ) && ( METHOD_7 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( STRING_1 , STRING_2 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( TYPE_3 . of ( TYPE_4 . METHOD_3 ( STRING_3 ) ) , VAR_3 )  org.junit.Assert.assertEquals ( STRING_4 , VAR_2 . format ( VAR_1 ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( VAR_2 )  cm . METHOD_1 ( VAR_3 . getAccountId ( ) )  cm . METHOD_2 ( VAR_4 , result . info )  cm . METHOD_3 ( ) TYPE java.lang.Exception NAME e TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_5 INIT = VAR_4 . getId ( )  VAR_6 . error ( ( STRING_1 + VAR_5 ) , e )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_2 ) != ( this )  return VAR_2 . METHOD_1 ( VAR_1 ) ; COND ! ( VAR_1 . METHOD_2 ( ) )  return VAR_3 ; COND ( this ) == VAR_1  return VAR_4 ; TYPE int NAME VAR_5 INIT = ( this . METHOD_3 ( ) ) - ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) ) COND VAR_5 != 0  return VAR_5 ;  throw new TYPE_3 ( STRING_1 ) ;
MODIFIER protected RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 class , VAR_2 )  bind ( VAR_3 class )  bind ( VAR_4 class ) . in ( VAR_1 class )  bind ( VAR_5 class ) . METHOD_3 ( this )  bind ( VAR_6 class ) . METHOD_3 ( config . METHOD_4 ( ) )  install ( new TYPE_1 ( ) . METHOD_5 ( VAR_7 . Factory class ) )
MODIFIER protected RETURN void NAME METHOD_1  rpc ( VAR_1 class )  rpc ( VAR_2 class )  rpc ( VAR_3 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_2 ( ) )  install ( new TYPE_3 ( ) )  install ( new TYPE_4 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME rsrc TYPE TYPE_2 NAME user INIT = ( ( TYPE_2 ) ( rsrc . METHOD_2 ( ) . METHOD_3 ( ) ) )  VAR_1 . METHOD_4 ( change , user . METHOD_5 ( ) , rsrc . METHOD_6 ( ) , message . getMessage ( ) , VAR_2 , db ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_3 . METHOD_7 ( STRING_1 , e )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_2 . get ( VAR_1 )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_2 ( ) )  return METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , new TYPE_3 < java.util.List < TYPE_1 > > ( ) { } . METHOD_6 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId INIT = METHOD_2 ( STRING_1 ) . getChangeId ( ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 INIT = METHOD_3 ( changeId )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( STRING_2 )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( STRING_3 )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_5 ( 2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = ( VAR_2 . METHOD_2 ( VAR_3 class ) ) == null TYPE boolean NAME VAR_4 INIT = ( ( VAR_2 . METHOD_2 ( VAR_5 class ) ) == null ) && ( ( VAR_2 . METHOD_3 ( ) . METHOD_2 ( VAR_5 class ) ) == null )  METHOD_4 ( config ( VAR_2 ) , VAR_1 , VAR_4 )  base . METHOD_1 ( )  METHOD_5 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = ctx . getChange ( ) COND METHOD_2 ( )  VAR_1 = VAR_2 . get ( )  VAR_1 . METHOD_3 ( ctx )  return ; COND c . currentPatchSetId ( ) . equals ( psId )  c . METHOD_4 ( METHOD_5 ( ctx ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE TYPE_2 NAME VAR_5 TYPE TYPE_6 NAME VAR_6 INIT = VAR_7 . get ( )  return new TYPE_1 ( METHOD_1 ( VAR_1 ) , VAR_4 , VAR_2 , VAR_1 , VAR_3 , new TYPE_7 ( METHOD_1 ( VAR_1 ) , VAR_6 , VAR_1 ) , VAR_5 , VAR_6 . METHOD_2 ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Change NAME change TYPE TYPE_2.Id NAME psId TYPE TYPE_3.Id NAME VAR_1 TYPE TYPE_4.Id NAME VAR_2 TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_5 NAME VAR_3 TYPE TYPE_1.PatchSetApproval NAME VAR_4 INIT = new TYPE_1 . PatchSetApproval ( new TYPE_7 . Key ( psId , VAR_1 , VAR_2 ) , ( ( short ) ( 0 ) ) )  VAR_4 . METHOD_2 ( change )  db . METHOD_3 ( ) . insert ( java.util.Collections.singleton ( VAR_4 ) , VAR_3 )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name INIT = VAR_1 . getName ( ) COND name . METHOD_2 ( STRING_1 )  name = name . METHOD_3 ( 0 , name . METHOD_4 ( CHAR_1 ) ) TYPE int NAME VAR_2 INIT = name . METHOD_4 ( CHAR_1 )  return 0 < VAR_2 ? name . METHOD_3 ( 0 , VAR_2 ) : name ;
MODIFIER public RETURN boolean NAME METHOD_1 COND METHOD_2 ( ) . METHOD_3 ( ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = METHOD_2 ( ) . METHOD_4 ( ) . getAccountId ( )  return id . equals ( getChange ( ) . METHOD_5 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME in INIT = new TYPE_1 . ChangeInfo ( )  in . branch = VAR_1  VAR_2 = STRING_1  in . project = project . get ( ) TYPE TYPE_1.ChangeInfo NAME info INIT = VAR_3 . changes ( ) . create ( in ) . get ( )  org.junit.Assert.assertEquals ( in . project , info . project )  org.junit.Assert.assertEquals ( in . branch , info . branch )  org.junit.Assert.assertEquals ( VAR_2 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) MODIFIER protected RETURN void NAME METHOD_3 TYPE TYPE_3 NAME result BLOCK BLOCK MODIFIER protected RETURN void NAME METHOD_4  TYPE_4 . METHOD_5 ( VAR_2 , true )  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { } protected void METHOD_4 ( ) { TYPE_4 . METHOD_5 ( VAR_2 , true ) ; } } )
MODIFIER protected RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME git TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 . create ( db , admin . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 )  return VAR_4 . to ( git , STRING_1 ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cm MODIFIER public RETURN void NAME run COND cm . METHOD_2 ( ) . METHOD_3 ( )  cm . METHOD_2 ( ) . METHOD_4 ( STRING_1 )  METHOD_5 ( ) . METHOD_6 ( cm , VAR_1 ) . run ( )  return new TYPE_1 ( ) { public void run ( ) { if ( cm . METHOD_2 ( ) . METHOD_3 ( ) ) { cm . METHOD_2 ( ) . METHOD_4 ( STRING_1 ) ; } else { METHOD_5 ( ) . METHOD_6 ( cm , VAR_1 ) . run ( ) ; } } } ;
MODIFIER private RETURN boolean NAME METHOD_1 COND VAR_1 . METHOD_2 ( )  return VAR_2 ; TYPE java.lang.StringBuilder NAME msg INIT = new java.lang.StringBuilder ( )  msg . append ( STRING_1 )  msg . append ( STRING_2 ) COND VAR_2  msg . append ( STRING_3 )  msg . append ( STRING_4 )  msg . append ( STRING_5 )  msg . append ( STRING_6 )  return VAR_1 . METHOD_3 ( msg . toString ( ) , name ) ;
MODIFIER public RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 COND VAR_1  return TYPE_1 . getRevision ( ) ; COND ! ( VAR_2 . METHOD_2 ( ) )  return null ; TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_3 . METHOD_3 ( METHOD_4 ( ) ) TYPE TYPE_2 NAME ref INIT = repo . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getRefName ( ) )  return ref != null ? ref . METHOD_7 ( ) : null ; TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = TYPE_1 . METHOD_2 ( project , VAR_1 , 1 ) TYPE TYPE_2 NAME update INIT = METHOD_3 ( c , VAR_1 )  update . METHOD_4 ( ( STRING_1 + STRING_2 ) )  update . commit ( )  org.junit.Assert.assertEquals ( STRING_3 , update . getRefName ( ) )  METHOD_5 ( ( STRING_4 + ( ( ( ( STRING_5 + STRING_1 ) + STRING_6 ) + STRING_5 ) + STRING_7 ) ) , update . getRevision ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_1 + ( VAR_1 . METHOD_2 ( ) )  VAR_3 . METHOD_3 ( VAR_2 )  VAR_3 . METHOD_4 ( STRING_2 , VAR_4 . METHOD_5 ( VAR_1 ) )  METHOD_6 ( VAR_1 )  VAR_3 . close ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME event INIT = new TYPE_1 ( VAR_1 ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME p IN VAR_2 . METHOD_2 ( ) TYPE long NAME size INIT = VAR_3 . get ( p ) . get ( )  event . METHOD_3 ( size , p . get ( ) )  return event ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME commit TYPE java.lang.String NAME base TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_3 . create ( )  VAR_2 . METHOD_2 ( base )  TYPE_4 . METHOD_3 ( id , commit , STRING_1 ) . METHOD_4 ( VAR_2 , VAR_1 )
MODIFIER private static RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME req TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.lang.String[] NAME values INIT = req . METHOD_3 ( STRING_1 ) COND values != null  VAR_1 . METHOD_4 ( TYPE_3 . METHOD_5 ( values ) )  values = req . METHOD_3 ( STRING_2 ) COND values != null  VAR_1 . METHOD_4 ( TYPE_3 . METHOD_5 ( values ) )  return VAR_1 ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId[] NAME VAR_1 TYPE long[] NAME VAR_2 TYPE boolean[] NAME VAR_3 TYPE java.util.List<TYPE_1> NAME VAR_4 INIT = new java.util.ArrayList ( VAR_1 . length ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  VAR_4 . add ( new TYPE_1 ( VAR_1 [ i ] . name ( ) , new TYPE_2 ( VAR_2 [ i ] ) , VAR_3 [ i ] ) )  return VAR_4 ;
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE TYPE_1.Id NAME VAR_1 TYPE TYPE_2.NameKey NAME VAR_2 TYPE TYPE_3 NAME e INIT = TYPE_4 . METHOD_2 ( ) . get ( VAR_2 ) COND e == null  return false ; TYPE java.util.Set<TYPE_5.Id> NAME VAR_3 INIT = TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_1 )  return TYPE_6 . METHOD_5 ( VAR_3 , e , VAR_4 , ( ( short ) ( 1 ) ) , true ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = TYPE_1 . METHOD_2 ( project , VAR_1 . getAccountId ( ) , 1 ) TYPE TYPE_2 NAME update INIT = METHOD_3 ( c , VAR_1 )  update . METHOD_4 ( ( STRING_1 + STRING_2 ) )  update . commit ( )  org.junit.Assert.assertEquals ( STRING_3 , update . getRefName ( ) )  METHOD_5 ( ( STRING_4 + ( ( ( ( STRING_5 + STRING_1 ) + STRING_6 ) + STRING_5 ) + STRING_7 ) ) , update . getRevision ( ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( in , STRING_1 ) ) TYPE java.lang.String NAME line COND ( line = VAR_1 . METHOD_1 ( ) ) != null  VAR_2 . error ( ( STRING_2 + line ) )  VAR_1 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_2 ( STRING_3 , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  METHOD_2 ( )  METHOD_3 ( ctx )  ctx . METHOD_4 ( new TYPE_4 . ReceiveCommand ( org.eclipse.jgit.lib.ObjectId . METHOD_5 ( ) , commit , METHOD_6 ( ) . METHOD_7 ( ) , VAR_1 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_1 TYPE TYPE_2 NAME notes TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( )  return METHOD_1 ( db , VAR_1 , notes , patchSet ) ; TYPE com.google.gwtorm.server.OrmException NAME e  VAR_2 . error ( STRING_1 , e )  return new TYPE_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , ( ( VAR_3 ) + STRING_1 ) ) TYPE TYPE_1 NAME input INIT = new TYPE_1 ( )  input . ref = STRING_2  VAR_4 . METHOD_3 ( VAR_5 class )  VAR_4 . METHOD_4 ( STRING_3 )  METHOD_5 ( input . ref ) . create ( input )
MODIFIER public RETURN void NAME submit TYPE TYPE_3.Result NAME r INIT = METHOD_1 ( ) TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_2 ( )  VAR_1 . METHOD_3 ( TYPE_5 . METHOD_4 ( ) )  VAR_1 . submit ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE TYPE_1 NAME r INIT = VAR_1 . get ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( id . name ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) )
MODIFIER public RETURN java.util.List<com.google.gerrit.reviewdb.client.Project.NameKey> NAME METHOD_1 TYPE java.util.List<com.google.gerrit.reviewdb.client.Project> NAME VAR_1 INIT = METHOD_2 ( ) TYPE java.util.List<com.google.gerrit.reviewdb.client.Project.NameKey> NAME VAR_2 INIT = new java.util.ArrayList < com.google.gerrit.reviewdb.client.Project.NameKey > ( VAR_1 . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Project NAME p IN VAR_1  VAR_2 . add ( p . METHOD_3 ( ) )  return VAR_2 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME user INIT = VAR_1 . METHOD_1 ( ) COND user . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) )  VAR_2 . METHOD_3 ( user . METHOD_4 ( ) )  return VAR_2 ;  return user ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  METHOD_3 ( )  TYPE_2 . METHOD_4 ( true )  VAR_2 . METHOD_5 ( cd )  VAR_2 . METHOD_6 ( id )  TYPE_2 . METHOD_7 ( )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 IN VAR_2  METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) )  VAR_3 . METHOD_2 ( VAR_1 . METHOD_5 ( ) )  VAR_2 . METHOD_1 ( )  VAR_4 . METHOD_6 ( ) . METHOD_7 ( VAR_5 )  VAR_5 = null
MODIFIER private RETURN java.util.Map<java.lang.String,java.util.List<TYPE_1>> NAME METHOD_1 TYPE TYPE_2 NAME config TYPE java.util.Map<java.lang.String,java.util.List<TYPE_1>> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = config . METHOD_3 ( VAR_3 , true ) TYPE java.lang.String NAME key IN VAR_2 COND key . METHOD_4 ( STRING_1 ) TYPE java.lang.String NAME VAR_4 INIT = config . METHOD_5 ( VAR_3 , null , key )  VAR_1 . put ( key , METHOD_6 ( VAR_4 ) )  return VAR_1 ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE boolean NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_2 INIT = VAR_3 . METHOD_1 ( project . METHOD_2 ( ) ) COND VAR_2 == null  throw new TYPE_1 ( STRING_1 ) ;  METHOD_3 ( VAR_2 ) COND ! VAR_1  METHOD_4 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME p  VAR_1 . METHOD_2 ( ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey> NAME n INIT = TYPE_2 . METHOD_3 ( VAR_2 . get ( VAR_3 ) )  n . METHOD_1 ( p . METHOD_4 ( ) )  VAR_2 . put ( VAR_3 , java.util.Collections . METHOD_5 ( n ) ) TYPE TYPE_3 NAME e  VAR_4 . METHOD_6 ( STRING_1 , e )  VAR_1 . METHOD_7 ( )  METHOD_8 ( p )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME db TYPE org.eclipse.jgit.lib.ObjectId NAME id  VAR_1 = db . METHOD_2 ( )  revision = ( id != null ) ? new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) . parseCommit ( id ) : null  METHOD_3 ( )  VAR_1 . METHOD_4 ( )  VAR_1 = null
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_2 ) . to ( VAR_5 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_5 ( VAR_10 ) . METHOD_5 ( VAR_11 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME get INIT = TYPE_3 . METHOD_2 ( ( ( ( url ) + STRING_1 ) + VAR_1 ) ) COND VAR_2 != null  get . METHOD_3 ( VAR_2 )  return METHOD_4 ( get ) ;
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  servlet = new TYPE_5 ( new TYPE_6 ( ) , new TYPE_7 ( ) , new TYPE_8 ( repo . METHOD_2 ( ) ) , new TYPE_9 ( ) )
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 . Factory class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME r TYPE TYPE_2 NAME VAR_1 TYPE TYPE_2 NAME d  VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_4 NAME cfg INIT = VAR_1 . METHOD_3 ( ) COND ( VAR_2 . isEmpty ( ) ) && ( ! ( VAR_1 . METHOD_4 ( ) ) )  VAR_2 = TYPE_3 . METHOD_2 ( d )  return r ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( project ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = rw . parseCommit ( id )  rw . METHOD_3 ( c )  return c ; FINALLY FINALLY
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = VAR_1 . create ( db . get ( ) , project , ps . getId ( ) . getParentKey ( ) ) TYPE TYPE_4 NAME ctl INIT = cd . METHOD_2 ( )  return VAR_2 . METHOD_3 ( ctl , ps ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1  VAR_1 . METHOD_2 ( id )  index . METHOD_3 ( VAR_1 . get ( id ) ) COND ( VAR_2 ) != null  VAR_2 . METHOD_4 ( ( STRING_1 + VAR_3 ) )  VAR_4 . METHOD_5 ( ) TYPE java.lang.Exception NAME e  VAR_5 . METHOD_5 ( )  throw e ;  return null ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  VAR_1 = VAR_2 . TRUE TYPE TYPE_2 NAME r INIT = VAR_3 . put ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) , in )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_2 ( ) )  r . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null COND type == ( VAR_1 . METHOD_2 ( ) )  VAR_1 . METHOD_3 ( VAR_2 )  TYPE_1 . METHOD_4 ( METHOD_5 ( ) ) . METHOD_6 ( )  new TYPE_2 ( STRING_1 , type , VAR_1 ) . METHOD_1 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( )  METHOD_7 ( VAR_2 , VAR_3 , VAR_4 )  VAR_5 . METHOD_8 ( )  METHOD_7 ( VAR_2 , VAR_3 , VAR_3 )  assertThat ( VAR_5 ) . METHOD_9 ( STRING_1 , VAR_2 ) . METHOD_10 ( VAR_3 , VAR_6 , VAR_7 , VAR_8 , VAR_4 ) . to ( VAR_9 ) . METHOD_11 ( VAR_10 )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1.ChangeInfo NAME c TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . get ( STRING_1 )  com.google.common.truth.Truth.assertThat ( ( ( int ) ( VAR_4 ) ) ) . isEqualTo ( ( - 1 ) )  com.google.common.truth.Truth.assertThat ( VAR_5 ) . METHOD_2 ( 1 )  com.google.common.truth.Truth.assertThat ( VAR_5 . get ( 0 ) . name ) . isEqualTo ( STRING_2 )  com.google.common.truth.Truth.assertThat ( VAR_5 . get ( 0 ) . value . METHOD_3 ( ) ) . isEqualTo ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( ( ( TYPE_2 ) ( null ) ) ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )  METHOD_2 ( b , b . append ( new TYPE_2 ( STRING_2 ) ) )  METHOD_2 ( b , b . append ( new TYPE_2 ( STRING_3 ) ) )  assertEquals ( STRING_4 , b . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME input INIT = new TYPE_1 ( )  VAR_1 = VAR_2  METHOD_2 ( user )  project ( ) . METHOD_3 ( input )  org.junit.Assert . METHOD_4 ( STRING_1 ) TYPE TYPE_2 NAME e  com.google.common.truth.Truth.assertThat ( e ) . METHOD_5 ( ) . isEqualTo ( METHOD_6 ( VAR_2 ) )  METHOD_2 ( admin )  METHOD_7 ( VAR_2 )
MODIFIER private RETURN void NAME walk TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 TYPE java.util.List<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_3  rw . METHOD_1 ( VAR_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_4 IN VAR_3  rw . METHOD_2 ( VAR_4 ) TYPE java.io.IOException NAME e BLOCK BLOCK  rw . METHOD_3 ( VAR_2 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME c COND ( c = rw . METHOD_4 ( ) ) != null BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = r . METHOD_3 ( ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id INIT = psId . getParentKey ( ) TYPE TYPE_2 NAME VAR_1 INIT = METHOD_4 ( psId , user . getId ( ) , TYPE_3 . METHOD_5 ( ) , STRING_1 )  METHOD_4 ( psId , null , VAR_1 . METHOD_6 ( ) , STRING_2 )  VAR_2 . METHOD_7 ( id )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME account INIT = VAR_2 . METHOD_2 ( VAR_1 ) TYPE TYPE_3<TYPE_4> NAME VAR_3 INIT = account . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 IN VAR_3 TYPE java.lang.String NAME key INIT = VAR_4 . METHOD_4 ( ) . getKey ( ) . get ( ) COND key . METHOD_5 ( TYPE_5 )  return new TYPE_1 ( key . METHOD_6 ( TYPE_5 . length ( ) ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME revision TYPE TYPE_3 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 COND ! ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_5 NAME event INIT = new TYPE_5 ( change , revision , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_6 NAME VAR_5 IN VAR_4  VAR_5 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_7 . log , e )
MODIFIER public RETURN TYPE_1<TYPE_2.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME METHOD_1 TYPE TYPE_3<TYPE_2.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 INIT = TYPE_4 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2  VAR_1 . put ( cd . change ( ) . METHOD_2 ( ) , cd . getId ( ) )  return VAR_1 ;
MODIFIER private RETURN long NAME METHOD_1 TYPE TYPE_1 NAME p TYPE long NAME VAR_1 INIT = cfg . METHOD_2 ( STRING_1 , STRING_2 , 0 ) TYPE long NAME VAR_2 INIT = p . METHOD_3 ( ) COND ( VAR_1 > 0 ) && ( VAR_2 > 0 )  return TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) ;  return TYPE_2 . METHOD_5 ( VAR_1 , VAR_2 ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<?> NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . git ( ) . METHOD_2 ( )  VAR_4 . METHOD_3 ( VAR_3 )  VAR_4 . METHOD_4 ( new TYPE_5 ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + VAR_2 ) ) ) TYPE TYPE_6<TYPE_1> NAME r INIT = VAR_4 . METHOD_5 ( )  return TYPE_7 . METHOD_6 ( r ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ( VAR_1 = ( VAR_2 ) - ( ( TYPE_1 ) ( METHOD_3 ( ) ) ) ) ) TYPE TYPE_2.ChangeInfo NAME info INIT = METHOD_4 ( METHOD_5 ( VAR_3 ) ) TYPE java.lang.String NAME message INIT = VAR_4 . get ( VAR_5 ) . commit . message  com.google.common.truth.Truth.assertThat ( message ) . contains ( java.lang.String.format ( STRING_1 , VAR_6 , admin . METHOD_6 ( ) . METHOD_7 ( ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1.Change NAME c TYPE long NAME VAR_1 INIT = c . METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME id INIT = c . getId ( ) . get ( )  c . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_1 , id ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( ) . METHOD_3 ( project ) . run ( ) TYPE java.io.IOException NAME e  VAR_2 . error ( STRING_1 , e )  return false ;  return true ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p  METHOD_2 ( p ) TYPE TYPE_3.Result NAME r INIT = METHOD_3 ( STRING_1 )  r . METHOD_4 ( )  r . METHOD_5 ( VAR_1 , null )  r = METHOD_3 ( STRING_2 )  r . METHOD_4 ( )  r . METHOD_5 ( VAR_1 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  METHOD_2 ( )  METHOD_3 ( )  VAR_1 = VAR_2 . get ( ctx . METHOD_4 ( ) , commit , psId )  ctx . METHOD_5 ( new TYPE_3 . ReceiveCommand ( org.eclipse.jgit.lib.ObjectId . METHOD_6 ( ) , commit , METHOD_7 ( ) . METHOD_8 ( ) , VAR_3 ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME project TYPE java.lang.String NAME ref TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME status TYPE TYPE_3.Status NAME VAR_2 TYPE TYPE_4 NAME event INIT = new TYPE_4 ( project , ref , TYPE_5 . METHOD_2 ( VAR_1 ) , status , VAR_2 )  METHOD_3 ( project , event )
MODIFIER private RETURN void NAME METHOD_1 TYPE int NAME row  METHOD_2 ( row )  METHOD_3 ( row , 0 , TYPE_1 . METHOD_4 ( ) )  METHOD_5 ( ) . METHOD_6 ( row , 0 , VAR_1 )  METHOD_7 ( row , 0 , STRING_1 )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( )  VAR_1 = VAR_2 NAME VAR_3 . METHOD_4 ( )  METHOD_5 ( )  break ;  METHOD_6 ( )  METHOD_7 ( )  METHOD_8 ( )  break ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1 . METHOD_2 ( )  throw new com.google.gwtorm.server.OrmException ( VAR_2 ) ; COND isEmpty ( )  return ; TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . METHOD_3 ( VAR_5 )  METHOD_4 ( )  TYPE_2 . METHOD_1 ( VAR_6 )  TYPE_2 . METHOD_1 ( VAR_7 )  close ( )
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.server.query.change.ChangeData> NAME VAR_1 INIT = TYPE_3 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2 . values ( )  VAR_1 . put ( cd . change ( ) . getProject ( ) , cd )  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  throw new TYPE_2 ( STRING_1 ) ;  bind ( VAR_1 class ) . to ( VAR_2 class )  bind ( VAR_3 class ) . METHOD_3 ( VAR_4 class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_5 class ) . to ( VAR_6 class )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME projectName INIT = METHOD_2 ( VAR_1 ) . get ( ) TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new TYPE_2 < > ( ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( )  VAR_3 . project = projectName  VAR_2 . add ( VAR_3 )  VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) TYPE java.util.List<TYPE_1> NAME VAR_5 INIT = VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( VAR_5 ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_2 . METHOD_3 ( )  VAR_4 . METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_5 , VAR_6 , new TYPE_4 ( ( ( TYPE_5 . METHOD_5 ( ) ) - ( TYPE_6 . METHOD_6 ( VAR_1 , VAR_7 ) ) ) ) ) )  METHOD_7 ( VAR_4 )  METHOD_8 ( VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp  rsp . METHOD_2 ( STRING_1 )  rsp . METHOD_3 ( STRING_2 ) TYPE TYPE_4 NAME out INIT = rsp . METHOD_4 ( )  out . METHOD_5 ( STRING_3 )  out . METHOD_5 ( STRING_4 )  out . METHOD_5 ( STRING_5 )  out . METHOD_5 ( STRING_6 )  out . METHOD_5 ( STRING_7 )  out . close ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) . METHOD_4 ( TYPE_1 . change ( STRING_2 ) ) )  METHOD_5 ( TYPE_1 . METHOD_3 ( STRING_1 ) . METHOD_4 ( TYPE_1 . change ( STRING_3 ) ) )  METHOD_5 ( TYPE_1 . METHOD_3 ( STRING_4 ) . METHOD_4 ( TYPE_1 . change ( STRING_2 ) ) )  METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_4 ) . METHOD_4 ( TYPE_1 . change ( STRING_3 ) ) )
MODIFIER public RETURN void NAME METHOD_1  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( change , ps ) )  VAR_2 . METHOD_3 ( VAR_3 . METHOD_4 ( change ) . get ( ) , VAR_4 , VAR_5 )  org.junit.Assert . METHOD_5 ( ) TYPE TYPE_1 NAME e  org.junit.Assert.assertEquals ( STRING_1 , e . getMessage ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME w IN VAR_1 . get ( ) . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) )  add ( VAR_2 , w . getAccountId ( ) ) TYPE TYPE_2.OrmException NAME err BLOCK BLOCK
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2 TYPE TYPE_3 NAME in INIT = TYPE_3 . METHOD_2 ( ) TYPE java.lang.String NAME n INIT = TYPE_4 . METHOD_3 ( VAR_1 )  new TYPE_5 ( ( STRING_1 + n ) ) . METHOD_4 ( ) . data ( in ) . put ( VAR_2 )
MODIFIER private static RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_2 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = VAR_1 . insert ( VAR_2 , new byte [ ] { } )  VAR_1 . METHOD_3 ( )  return id ;  VAR_1 . METHOD_4 ( )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME info  VAR_1 = info . METHOD_1 ( ) TYPE java.lang.String NAME VAR_2 INIT = info . METHOD_2 ( ) COND ( VAR_2 != null ) && ( ! ( STRING_1 . equals ( VAR_2 ) ) )  p . insert ( new TYPE_2 ( VAR_1 ) , 0 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) , null )  return ( VAR_1 != null ) && ( VAR_3 . METHOD_5 ( ) . equals ( VAR_1 . getProject ( ) . METHOD_5 ( ) ) ) ;
MODIFIER public RETURN java.lang.String NAME toString TYPE java.lang.StringBuilder NAME b INIT = new java.lang.StringBuilder ( )  b . append ( STRING_1 ) COND VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( )  b . append ( ( ( STRING_2 + ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) . get ( ) ) ) + STRING_3 ) )  return b . toString ( ) ;
MODIFIER protected RETURN java.lang.String NAME METHOD_1 COND ( METHOD_2 ( ) ) != null TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( METHOD_2 ( ) )  r . append ( change . getChangeId ( ) )  return r . toString ( ) ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME url TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_2 . get ( url )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_2 ( ) )  TYPE_3 . METHOD_3 ( VAR_1 , METHOD_4 ( ) . METHOD_5 ( r . METHOD_6 ( ) , VAR_4 class ) )
MODIFIER private RETURN void NAME add TYPE TYPE_1.ReviewDb NAME db TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME VAR_2  VAR_1 . add ( new TYPE_2 ( VAR_2 . getKey ( ) , TYPE_4 . METHOD_1 ( VAR_2 ) ) ) TYPE TYPE_5 NAME e  throw e ; TYPE TYPE_6 NAME e  METHOD_2 ( db , VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 NAME TYPE_2 . METHOD_2 ( VAR_1 )  return TYPE_3 . METHOD_3 ( TYPE_4 . of ( ) , VAR_3 ) ;  return TYPE_5 . METHOD_3 ( TYPE_4 . of ( ) , VAR_3 ) ;  throw new TYPE_6 ( STRING_1 ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME query TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.util.Set<TYPE_1> NAME VAR_3 TYPE TYPE_2<TYPE_3> NAME VAR_4 TYPE TYPE_4 NAME VAR_5 INIT = TYPE_3 . METHOD_2 ( query ) COND VAR_2 > 0  VAR_5 . METHOD_3 ( STRING_1 , VAR_2 )  TYPE_3 . METHOD_4 ( VAR_5 , VAR_3 ) COND VAR_1 != 0  VAR_5 . METHOD_3 ( STRING_2 , VAR_1 )  VAR_5 . get ( VAR_4 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME git INIT = VAR_1 . METHOD_2 ( getProject ( ) . METHOD_3 ( ) ) TYPE TYPE_1 NAME ref INIT = git . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) COND ( ref == null ) || ( ( ref . METHOD_6 ( ) ) == null )  return true ;  return ! ( ref . METHOD_6 ( ) . equals ( config . getRevision ( ) ) ) ; TYPE java.io.IOException NAME VAR_3  return true ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_3<TYPE_1> NAME view INIT = TYPE_4 . METHOD_2 ( ) TYPE TYPE_5 NAME res INIT = new TYPE_5 ( )  METHOD_3 ( VAR_1 , view , res )  METHOD_4 ( ( STRING_1 + ( res . getStatus ( ) ) ) , ( ( ( res . getStatus ( ) ) < INT_1 ) || ( ( res . getStatus ( ) ) >= INT_2 ) ) )  return view . get ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . METHOD_3 ( ) )  METHOD_2 ( b , b . append ( STRING_1 ) )  METHOD_2 ( b , b . METHOD_4 ( ) )  assertEquals ( STRING_2 , b . METHOD_5 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  VAR_1 = VAR_2  VAR_3 = true  VAR_4 = true  VAR_5 = VAR_6  VAR_7 = VAR_8  VAR_9 = VAR_10  VAR_11 = null  VAR_12 = VAR_13  VAR_14 = VAR_15  VAR_16 = VAR_17  VAR_18 = false  VAR_19 = true  VAR_20 = false  VAR_21 = VAR_22  VAR_23 = true  VAR_24 = false  VAR_25 = true  VAR_26 = false  VAR_27 = VAR_28  return p ;
MODIFIER private RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) )  VAR_2 = TYPE_3 . METHOD_4 ( ) COND TYPE_4 . METHOD_5 ( ) . METHOD_6 ( )  VAR_3 . METHOD_7 ( VAR_2 )  VAR_1 . add ( TYPE_2 . METHOD_8 ( ) , VAR_2 )  VAR_4 = TYPE_3 . METHOD_4 ( )  VAR_3 . METHOD_7 ( VAR_4 )  VAR_1 . METHOD_9 ( TYPE_2 . METHOD_10 ( ) , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_2 , STRING_1 ) . METHOD_4 ( ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_3 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE java.util.List<TYPE_1> NAME result INIT = new TYPE_4 ( args . rw , VAR_2 , VAR_3 ) . METHOD_1 ( VAR_1 )  java.util.Collections . METHOD_1 ( result , VAR_4 )  return result ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 COND ! ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_2.ReceiveCommand NAME cmd IN VAR_1 . METHOD_4 ( ) COND ( cmd . METHOD_5 ( ) ) == ( VAR_4 )  METHOD_1 ( project , cmd , util . METHOD_6 ( VAR_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( change.getId ( ) ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 INIT = VAR_1 . METHOD_3 ( repo , VAR_2 )  VAR_1 . add ( new TYPE_3 . ReceiveCommand ( VAR_3 , org.eclipse.jgit.lib.ObjectId . METHOD_4 ( ) , VAR_2 ) )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE TYPE_1 NAME rsrc TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_1 MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME update TYPE com.google.gerrit.reviewdb.client.Change NAME change COND ( change . getStatus ( ) ) == ( VAR_3 )  change . METHOD_3 ( VAR_4 )  TYPE_3 . METHOD_4 ( change )  return change ; INIT = VAR_2 . get ( ) . changes ( ) . METHOD_2 ( rsrc . getChange ( ) . getId ( ) , new TYPE_2 < com.google.gerrit.reviewdb.client.Change > ( ) { public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus ( ) ) == ( VAR_3 ) ) { change . METHOD_3 ( VAR_4 ) ; TYPE_3 . METHOD_4 ( change ) ; } return change ; } } )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_5 NAME req INIT = ( ( TYPE_5 ) ( VAR_1 ) ) COND ! ( TYPE_6 . METHOD_2 ( req ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 )  return ; TYPE TYPE_7 NAME rsp INIT = new TYPE_7 ( req , ( ( TYPE_8 . HttpServletResponse ) ( VAR_2 ) ) ) COND METHOD_3 ( req , rsp )  VAR_3 . METHOD_1 ( req , rsp )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME VAR_1 INIT = new TYPE_1 . ChangeInfo ( )  VAR_1 . project = project . get ( )  VAR_1 . branch = STRING_1 TYPE TYPE_2 NAME r INIT = VAR_2 . METHOD_2 ( STRING_2 , VAR_1 )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) )  org.junit.Assert . METHOD_4 ( r . METHOD_5 ( ) . contains ( STRING_3 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , admin , VAR_2 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_5 , VAR_6 , VAR_7 , VAR_8 ) . METHOD_6 ( admin ) . to ( VAR_9 ) . METHOD_6 ( VAR_10 ) . to ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . get ( ) . changes ( ) . get ( changeId ) COND c == null  throw TYPE_3 . error ( ( ( STRING_1 + changeId ) + STRING_2 ) ) ;  return VAR_1 . create ( c ) ;
MODIFIER private RETURN java.util.List<com.google.gerrit.reviewdb.client.Change> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = null  db = VAR_1 . METHOD_2 ( )  return db . changes ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; TYPE com.google.gwtorm.server.OrmException NAME e  VAR_2 . METHOD_5 ( ( STRING_1 + ( e . getMessage ( ) ) ) )  return java.util.Collections . METHOD_6 ( ) ; COND db != null  db . close ( )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( change.getId ( ) )  cm . METHOD_1 ( change . METHOD_2 ( ) )  cm . METHOD_3 ( patchSet , VAR_2 )  cm . METHOD_4 ( VAR_3 )  cm . METHOD_5 ( reviewers )  cm . METHOD_6 ( VAR_4 )  cm . METHOD_7 ( ) TYPE java.lang.Exception NAME e  VAR_5 . error ( ( STRING_1 + ( change.getId ( ) ) ) , e )
MODIFIER public synchronized RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3  VAR_4 . METHOD_2 ( )  VAR_4 . METHOD_3 ( STRING_1 , VAR_1 , STRING_2 , VAR_2 )  VAR_4 . METHOD_3 ( STRING_1 , VAR_1 , STRING_3 , VAR_3 )  VAR_4 . METHOD_4 ( )
MODIFIER private RETURN java.util.List<?> NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) )  return TYPE_1 . METHOD_3 ( METHOD_4 ( ) , new TYPE_2 ( TYPE_2 . METHOD_5 ( ) ) , rw , VAR_1 ) ;  rw . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 COND ( format ) == ( VAR_2 ) TYPE TYPE_6 NAME VAR_3 INIT = new TYPE_6 ( )  display ( VAR_3 )  return TYPE_7 . create ( VAR_3 . METHOD_1 ( ) ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) ;  format = VAR_4  return display ( null ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id TYPE java.util.List<com.google.gerrit.reviewdb.client.Change> NAME changes INIT = METHOD_2 ( id . METHOD_3 ( ) ) COND ( changes . size ( ) ) != 1  throw new TYPE_4 ( id ) ; TYPE TYPE_6 NAME VAR_2  VAR_2 = VAR_3 . METHOD_4 ( changes . get ( 0 ) ) TYPE TYPE_7 NAME e  throw new TYPE_4 ( id ) ;  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME METHOD_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 INIT = new TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > ( ( ( reviewers . size ( ) ) + ( VAR_2 . size ( ) ) ) )  VAR_1 . METHOD_2 ( reviewers )  VAR_1 . METHOD_2 ( VAR_2 )  return java.util.Collections . METHOD_3 ( VAR_1 ) ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = TYPE_1 . METHOD_2 ( project , VAR_1 )  db . changes ( ) . insert ( java.util.Collections.singleton ( c ) ) TYPE TYPE_2 NAME u INIT = VAR_2 . create ( VAR_3 . METHOD_3 ( c , VAR_4 . create ( VAR_1 ) ) )  u . METHOD_4 ( c . METHOD_5 ( ) )  u . METHOD_6 ( c . METHOD_7 ( ) . get ( ) )  u . commit ( )  return c ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . get ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) ) TYPE TYPE_2 NAME info INIT = METHOD_2 ( ) . METHOD_3 ( r . METHOD_4 ( ) , VAR_3 class )  TYPE_3 . METHOD_5 ( admin , info ) TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = VAR_4 . get ( admin . getId ( ) ) . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( VAR_5 ) . isEqualTo ( account . METHOD_7 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME e TYPE java.lang.String NAME VAR_1 INIT = e . getValue ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( 0 , TYPE_3 . METHOD_4 ( VAR_1 ) ) )  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_2 . METHOD_2 ( ) )
MODIFIER public RETURN TYPE_1 NAME to TYPE java.lang.String NAME ref  TYPE_3 . add ( git , VAR_1 , VAR_2 )  changeId = TYPE_3 . METHOD_1 ( git , VAR_3 . METHOD_2 ( ) , VAR_4 )  return TYPE_3 . METHOD_3 ( git , ref ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_1 )  VAR_2 . info ( ( STRING_1 + VAR_1 ) ) COND TYPE_2 . METHOD_4 ( VAR_1 )  TYPE_2 . METHOD_5 ( VAR_1 )  VAR_2 . info ( ( STRING_2 + VAR_1 ) )  VAR_2 . METHOD_6 ( java.lang.String.format ( ( STRING_3 + ( STRING_4 + STRING_5 ) ) , VAR_1 ) )
MODIFIER public RETURN void NAME METHOD_1  install ( VAR_1 . METHOD_2 ( VAR_2 class ) )  install ( TYPE_1 . METHOD_3 ( ) )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_3 class ) . to ( VAR_4 class )  install ( new TYPE_2 ( ) )  factory ( VAR_5 . Factory class )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value TYPE int NAME size INIT = ( ( ( ( ( INT_1 + ( INT_2 * INT_3 ) ) + ( 2 * INT_4 ) ) + INT_1 ) + ( INT_5 * INT_3 ) ) + ( INT_5 * INT_2 ) ) + INT_6 TYPE TYPE_3 NAME e IN value . METHOD_2 ( )  size += e . METHOD_1 ( )  return size ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( new TYPE_3 ( ) )  VAR_1 . METHOD_3 ( this )  VAR_2 = new TYPE_4 ( )  VAR_2 . add ( VAR_1 )  VAR_2 . METHOD_4 ( )  db = VAR_3 . METHOD_5 ( )  VAR_4 . create ( db )  VAR_5 = VAR_6 . METHOD_6 ( TYPE_5 . METHOD_7 ( STRING_1 ) ) . getAccountId ( )  user = VAR_7 . create ( VAR_5 )  METHOD_8 ( )  METHOD_9 ( )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . getRefName ( ) )  return METHOD_4 ( VAR_1 . commit ) ;  return java.util.Collections . METHOD_5 ( ) ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE java.util.Set<TYPE_2> NAME VAR_1 INIT = new TYPE_3 < > ( )  VAR_1 . add ( TYPE_4 . METHOD_2 ( VAR_2 , repo ) )  VAR_1 . add ( TYPE_4 . METHOD_2 ( VAR_3 , repo ) )  return TYPE_4 . METHOD_1 ( repo , STRING_1 , VAR_1 ) ;
MODIFIER MODIFIER RETURN void NAME display TYPE TYPE_1 NAME result  project = result . project  VAR_1 . METHOD_1 ( project . METHOD_2 ( ) )  TYPE_2 . METHOD_3 ( VAR_2 , VAR_3 )  TYPE_2 . METHOD_3 ( VAR_4 , VAR_5 )  TYPE_2 . METHOD_3 ( VAR_6 , VAR_7 )  TYPE_2 . METHOD_3 ( VAR_8 , VAR_9 )  METHOD_4 ( project . METHOD_5 ( ) )  METHOD_6 ( project . METHOD_7 ( ) )  VAR_10 . METHOD_8 ( false )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE boolean NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND ( VAR_1 . METHOD_4 ( ) ) == ( VAR_4 ) TYPE java.lang.String NAME url INIT = METHOD_5 ( )  METHOD_6 ( VAR_2 , url , VAR_3 , false ) COND ( VAR_1 . METHOD_7 ( ) ) == ( VAR_4 ) TYPE java.lang.String NAME url INIT = METHOD_8 ( )  METHOD_6 ( VAR_2 , url , VAR_3 , true )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME err TYPE java.lang.Exception NAME e COND VAR_1 COND e == null  VAR_2 . error ( err )  VAR_2 . error ( err , e )  return TYPE_2 . METHOD_2 ( ) ;  return TYPE_2 . METHOD_3 ( err ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME res TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( TYPE_3 . create ( res ) . METHOD_2 ( ) , true , VAR_2 ) COND VAR_1 != null  VAR_3 . METHOD_3 ( VAR_1 )  return VAR_3 ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE long NAME VAR_1 TYPE long NAME VAR_2 COND ( VAR_2 - VAR_1 ) < ( ( ( INT_1 * INT_2 ) * INT_2 ) * INT_3 )  return new TYPE_1 ( STRING_1 ) . format ( new TYPE_2 ( VAR_2 ) ) ;  return new TYPE_1 ( STRING_2 ) . format ( new TYPE_2 ( VAR_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( STRING_5 + ( VAR_2 ) ) + ( TYPE_2 . METHOD_5 ( STRING_6 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_7 ) ) ) + ( VAR_3 ) ) , n . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME p TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_3 = VAR_4  VAR_5 = VAR_6  VAR_7 = VAR_1  VAR_8 = VAR_9 . METHOD_2 ( )  VAR_10 = ++ ( VAR_11 )  VAR_12 . METHOD_3 ( VAR_2 )  return p ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE int NAME VAR_4 TYPE TYPE_1 NAME VAR_5 INIT = METHOD_2 ( VAR_1 )  VAR_6 . put ( VAR_5 . METHOD_3 ( VAR_3 ) , new TYPE_2 ( METHOD_4 ( VAR_1 , VAR_7 . METHOD_5 ( ) , VAR_2 , 0 , VAR_8 , null ) , VAR_2 , VAR_4 ) )  VAR_9 . add ( new TYPE_3 ( METHOD_6 ( VAR_5 ) , ( ( VAR_3 - VAR_4 ) + 1 ) , VAR_3 ) )
MODIFIER public RETURN int NAME run TYPE TYPE_1 NAME VAR_1 MODIFIER protected RETURN void NAME METHOD_2  bind ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . in ( VAR_5 ) INIT = TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) , new TYPE_4 ( ) , new TYPE_5 ( ) , new TYPE_6 ( ) { protected void METHOD_2 ( ) { bind ( VAR_3 class ) . METHOD_3 ( VAR_4 class ) . in ( VAR_5 ) ; } } )  TYPE_7 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 class ) )  VAR_1 . METHOD_5 ( VAR_6 class ) . METHOD_6 ( )  return METHOD_7 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( VAR_1 . getParentKey ( ) ) TYPE TYPE_1 NAME notes INIT = VAR_2 . create ( c ) . METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME a INIT = VAR_3 . METHOD_3 ( db , notes , VAR_1 )  org.junit.Assert . METHOD_4 ( a . METHOD_5 ( ) )  org.junit.Assert.assertEquals ( 1 , a . getValue ( ) )  org.junit.Assert.assertEquals ( admin . id , a . getAccountId ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = STRING_1 TYPE java.lang.String NAME value INIT = STRING_2 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( name , value )  METHOD_3 ( name , VAR_1 . METHOD_4 ( ) )  METHOD_3 ( value , VAR_1 . getValue ( ) )  assertEquals ( 0 , VAR_1 . METHOD_5 ( ) . size ( ) )
MODIFIER MODIFIER RETURN void NAME add TYPE java.util.List<java.lang.String> NAME values INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME input IN VAR_1 TYPE java.lang.String NAME VAR_2 INIT = input . getValue ( ) . METHOD_1 ( ) COND ! ( VAR_2 . isEmpty ( ) )  input . METHOD_2 ( STRING_1 )  values . add ( VAR_2 )  t . insert ( values )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = git . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( )  METHOD_5 ( STRING_2 , STRING_3 , STRING_4 , STRING_5 )  VAR_2 . METHOD_6 ( VAR_1 )  METHOD_7 ( VAR_3 , project , STRING_6 ) TYPE TYPE_1.Result NAME r INIT = METHOD_5 ( STRING_7 , STRING_8 , STRING_4 , STRING_9 )  r . METHOD_8 ( )  r . METHOD_9 ( VAR_4 , null , admin )  r . METHOD_10 ( TYPE_2 . getMessage ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , true )  TYPE_1 . METHOD_2 ( VAR_2 , false )  TYPE_1 . METHOD_2 ( error , false )  VAR_3 . METHOD_2 ( false )  VAR_4 . METHOD_3 ( true )  VAR_4 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_5 ) )  VAR_4 . METHOD_6 ( )
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( VAR_1 == null ) || ( ! ( VAR_1 instanceof TYPE_2 ) )  return false ; TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) COND ( ( this . VAR_3 ) != ( VAR_4 ) ) || ( ( this . VAR_5 ) != ( VAR_6 ) )  return false ;  return true ;
MODIFIER private static RETURN java.util.Set<org.eclipse.jgit.revwalk.RevCommit> NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE TYPE_1<TYPE_2> NAME refs TYPE java.util.Set<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( ) TYPE TYPE_2 NAME r IN refs  VAR_1 . add ( rw . parseCommit ( r . METHOD_3 ( ) ) ) TYPE TYPE_5 NAME VAR_2 BLOCK BLOCK  return VAR_1 ;
MODIFIER private RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 COND ( cd ) == null TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME VAR_1 INIT = db ( )  TYPE_1 . METHOD_2 ( ( VAR_1 != null ) , STRING_1 )  cd = VAR_2 . create ( VAR_1 , METHOD_3 ( ) )  return cd ;
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( ! ( super . equals ( VAR_1 ) ) ) || ( ! ( VAR_1 instanceof TYPE_2 ) )  return false ;  return new TYPE_3 < TYPE_4 > ( METHOD_1 ( ) ) . equals ( new TYPE_3 ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 )  METHOD_4 ( user )  METHOD_5 ( r , STRING_2 )  METHOD_6 ( r ) . METHOD_7 ( STRING_2 )  METHOD_8 ( r , STRING_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name COND VAR_1 . isEmpty ( )  return true ; TYPE java.lang.String NAME projectName INIT = name . get ( ) TYPE java.lang.String NAME VAR_2 IN VAR_1 COND METHOD_2 ( projectName , VAR_2 )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rw . parseCommit ( VAR_2 ) COND ! ( VAR_1 . METHOD_2 ( db . get ( ) , rw , commit ) )  throw new TYPE_2 ( ) ;  rw . METHOD_3 ( )
MODIFIER private RETURN boolean NAME METHOD_1 COND ( VAR_1 . length ( ) ) == 0  return false ; COND VAR_2 . isEmpty ( )  return false ; COND ( ( VAR_2 . size ( ) ) == 1 ) && ( VAR_2 . contains ( VAR_3 ) )  return false ;  return true ;
MODIFIER public RETURN void NAME update  schema = VAR_1 . METHOD_1 ( )  METHOD_2 ( )  METHOD_3 ( VAR_2 , VAR_3 . getId ( ) . METHOD_4 ( ) , null ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ; COND ( schema ) != null  schema . close ( )  schema = null
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = new com.google.gerrit.reviewdb.client.Change ( new com.google.gerrit.reviewdb.client.Change . Key ( STRING_1 ) , new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) , new com.google.gerrit.reviewdb.client.Account.Id ( 2 ) , new TYPE_2 . NameKey ( VAR_2 , STRING_2 ) , TYPE_3 . METHOD_2 ( ) )  VAR_1 . set ( VAR_3 , change )  VAR_1 . set ( VAR_4 , util . user ( VAR_5 ) . METHOD_3 ( change ) )
MODIFIER public RETURN void NAME display TYPE java.util.List<TYPE_1> NAME result COND 1 < ( table . METHOD_1 ( ) )  table . METHOD_2 ( ( ( table . METHOD_1 ( ) ) - 1 ) ) TYPE TYPE_1 NAME VAR_1 IN result TYPE int NAME row INIT = table . METHOD_1 ( )  table . METHOD_3 ( row )  METHOD_4 ( row )  METHOD_5 ( row , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE TYPE_2 NAME label IN METHOD_3 ( ) . METHOD_3 ( )  VAR_1 . add ( label . getName ( ) )  assertEquals ( TYPE_3 . of ( STRING_1 ) , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  METHOD_4 ( VAR_1 class , out . METHOD_5 ( ) )  assertEquals ( TYPE_2 . of ( query ( TYPE_1 . METHOD_6 ( in . METHOD_7 ( 0 ) , in . METHOD_7 ( 2 ) ) ) , in . METHOD_7 ( 1 ) ) , out . METHOD_8 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE TYPE_1 NAME d INIT = new TYPE_1 ( )  VAR_1 = c . getId ( ) . toString ( )  d . id = c . getKey ( ) . toString ( )  d . revision = ps . getRevision ( ) . get ( )  d . ref = ps . getRefName ( )  return d ;
MODIFIER private RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE long NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME b INIT = new TYPE_3 ( )  TYPE_4 . METHOD_3 ( ) . METHOD_4 ( b , VAR_1 ) TYPE byte[] NAME key INIT = b . METHOD_5 ( )  return TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_6 ( VAR_2 , key ) ) . METHOD_5 ( ) ;
MODIFIER private static RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME revision TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 INIT = repo . METHOD_2 ( TYPE_2 . METHOD_3 ( revision , VAR_2 ) ) COND VAR_1 == null  throw new TYPE_1 ( ) ;  return VAR_1 ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.PatchSetApproval NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( VAR_1 . getParentKey ( ) ) TYPE TYPE_1 NAME notes INIT = VAR_2 . create ( c ) . METHOD_2 ( )  return VAR_3 . METHOD_1 ( db , notes , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 )  METHOD_3 ( STRING_2 , VAR_1 , VAR_2 )  METHOD_4 ( user )  METHOD_5 ( STRING_3 , ( ( VAR_3 ) + STRING_4 ) , ( ( VAR_3 ) + STRING_5 ) , ( ( VAR_4 ) + STRING_4 ) , ( ( VAR_4 ) + STRING_5 ) , STRING_1 , STRING_6 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) TYPE TYPE_2 NAME VAR_4 INIT = util . user ( VAR_1 , VAR_5 ) TYPE TYPE_2 NAME VAR_6 INIT = util . user ( VAR_1 , VAR_5 , VAR_3 )  METHOD_3 ( STRING_2 , VAR_4 . METHOD_4 ( ) )  METHOD_5 ( STRING_3 , VAR_6 . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE java.util.List<TYPE_1.ChangeInfo> NAME VAR_1 INIT = VAR_2 . changes ( ) . query ( STRING_1 ) . get ( )  org.junit.Assert.assertEquals ( 1 , VAR_1 . size ( ) )  VAR_1 = VAR_2 . changes ( ) . query ( STRING_2 ) . get ( )  org.junit.Assert . METHOD_3 ( VAR_1 . isEmpty ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME update TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE TYPE_2<java.lang.String> NAME VAR_1  ps . METHOD_1 ( VAR_1 )  update . METHOD_1 ( VAR_1 )  db . patchSets ( ) . update ( java.util.Collections.singleton ( ps ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = org.eclipse.jgit.lib.ObjectId . METHOD_2 ( cd . METHOD_3 ( ) . getRevision ( ) . get ( ) ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_4 ( cd . change ( ) . getProject ( ) ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = TYPE_1 . METHOD_5 ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rw . parseCommit ( id )  return ( commit . METHOD_6 ( ) ) > 1 ; TYPE java.io.IOException NAME e  throw new TYPE_2 ( e ) ;
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME value TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . get ( name ) COND VAR_1 == null  throw TYPE_5 . error ( ( ( ( STRING_1 + name ) + STRING_2 ) + value ) ) ;  return VAR_1 . create ( this , value ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE int NAME psId TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( db , TYPE_2 . METHOD_2 ( VAR_3 . get ( ) . METHOD_3 ( changeId ) ) . change ( ) ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_4 INIT = VAR_5 . METHOD_4 ( db , VAR_1 , new com.google.gerrit.reviewdb.client.PatchSet.Id ( VAR_1 . getChangeId ( ) , psId ) )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 . METHOD_2 ( commit . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) COND VAR_2  METHOD_6 ( ) TYPE java.lang.String NAME VAR_3 INIT = TYPE_1 . METHOD_7 ( ) COND ( VAR_3 != null ) && ( VAR_3 . METHOD_8 ( STRING_1 ) )  METHOD_9 ( VAR_3 . METHOD_10 ( INT_1 ) )  METHOD_11 ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = METHOD_2 ( )  return METHOD_3 ( repo , db , rw , commit , repo . METHOD_4 ( ) . values ( ) ) ;  repo . close ( ) TYPE java.io.IOException NAME e TYPE java.lang.String NAME msg INIT = java.lang.String.format ( STRING_1 , commit . name ( ) , getProject ( ) . METHOD_5 ( ) )  VAR_1 . error ( msg , e )  return false ;
MODIFIER public static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , null , null , null , null , null , null , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_1 ( server , user ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( server , user )  TYPE_3 . METHOD_2 ( user )  VAR_2 . METHOD_3 ( )  METHOD_4 ( TYPE_3 . METHOD_5 ( ( ( ( VAR_2 . METHOD_6 ( ) ) + STRING_1 ) + ( project . get ( ) ) ) ) )  VAR_2 . close ( )  VAR_3 = VAR_4 . METHOD_7 ( )  VAR_5 = new TYPE_1 ( server , VAR_3 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME message  res . METHOD_2 ( VAR_1 )  METHOD_3 ( req , res , VAR_2 )  METHOD_4 ( req , res ) TYPE TYPE_3 NAME out INIT = res . METHOD_5 ( )  out . METHOD_6 ( message )  out . close ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) )  p . METHOD_2 ( STRING_2 , ( STRING_3 + ( ( VAR_2 ) ++ ) ) )  db = new TYPE_2 < TYPE_3 > ( new TYPE_4 ( p ) , VAR_3 class )  VAR_4 = new java.util.ArrayList < TYPE_3 > ( )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME account  return VAR_1 . METHOD_2 ( ) . apply ( account ) ; TYPE com.google.gwtorm.server.OrmException|TYPE_5|java.io.IOException NAME e  throw new TYPE_4 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME p IN VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( p . METHOD_3 ( ) , p . getKey ( ) , 0 , null )  TYPE_4 . METHOD_4 ( VAR_2 . METHOD_5 ( ) . toString ( ) , p . METHOD_3 ( ) , null )
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  servlet = new TYPE_5 ( new TYPE_6 ( ) , new TYPE_7 ( repo . METHOD_2 ( ) ) , new TYPE_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( ) TYPE TYPE_1 NAME r INIT = VAR_1 . delete ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( branch . METHOD_4 ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_5 ( ) )  r . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId INIT = METHOD_2 ( name ( STRING_1 ) ) . getChangeId ( ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 INIT = METHOD_3 ( changeId )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( STRING_2 )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( STRING_3 )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_5 ( 2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME info INIT = METHOD_2 ( VAR_1 , STRING_1 )  VAR_2 . METHOD_3 ( VAR_3 class )  VAR_2 . METHOD_4 ( STRING_2 )  VAR_4 . projects ( ) . name ( project . get ( ) ) . METHOD_5 ( info . id ) . get ( true )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user COND ( VAR_1 ) != null  throw new TYPE_3 ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; COND ( change ) != null  VAR_1 = VAR_2 . METHOD_3 ( change , user )  VAR_1 = VAR_2 . METHOD_3 ( VAR_3 , user ) TYPE TYPE_4 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME VAR_4 TYPE java.lang.String[] NAME VAR_5  this . VAR_6 = TYPE_1 . METHOD_2 ( name ) . METHOD_3 ( )  this . VAR_2 = VAR_2  this . VAR_5 = VAR_5
MODIFIER protected RETURN void NAME METHOD_1 TYPE int NAME row TYPE boolean NAME VAR_1  super . METHOD_1 ( row , VAR_1 ) COND ( ! ( VAR_2 ) ) || ( STRING_1 . equals ( VAR_3 . METHOD_2 ( ) ) )  VAR_3 . METHOD_3 ( METHOD_4 ( row ) . getName ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 COND getChange ( ) . getStatus ( ) . METHOD_2 ( )  return ( ( ( METHOD_3 ( ) ) || ( METHOD_4 ( ) . METHOD_3 ( ) ) ) || ( METHOD_5 ( ) . METHOD_3 ( ) ) ) || ( METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE org.eclipse.jgit.lib.ObjectId NAME id  this . VAR_1 = walk . METHOD_2 ( )  revision = ( id != null ) ? new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) . parseCommit ( id ) : null  METHOD_3 ( )  VAR_1 = null
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) COND VAR_2 != null TYPE TYPE_3 NAME u INIT = repo . METHOD_3 ( VAR_3 )  u . METHOD_4 ( VAR_2 )  repo . close ( ) TYPE java.io.IOException NAME e  VAR_4 . error ( java.lang.String.format ( STRING_1 , VAR_1 . METHOD_2 ( ) , VAR_2 ) , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = METHOD_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_4 INIT = TYPE_4 . METHOD_3 ( VAR_2 ) TYPE TYPE_3 NAME VAR_5 INIT = TYPE_5 . METHOD_4 ( VAR_3 )  TYPE_5 . METHOD_5 ( VAR_5 , VAR_3 )  TYPE_4 . METHOD_6 ( VAR_1 , VAR_4 )  TYPE_5 . METHOD_7 ( VAR_5 , VAR_4 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME VAR_1 COND VAR_1 == null  return cfg . METHOD_1 ( VAR_2 , VAR_3 , name ) ;  return TYPE_1 . METHOD_2 ( cfg . METHOD_1 ( VAR_2 , VAR_3 , name ) , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Key NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE int NAME VAR_3 TYPE TYPE_3 NAME VAR_4  VAR_5 = VAR_1  VAR_6 = VAR_2  VAR_7 = METHOD_2 ( VAR_3 , VAR_4 )  VAR_8 . METHOD_3 ( )  VAR_9 = METHOD_4 ( )  VAR_8 . add ( VAR_9 )  VAR_8 . add ( METHOD_5 ( ) )  VAR_10 . METHOD_3 ( )  VAR_11 = METHOD_4 ( )  VAR_10 . add ( VAR_11 )  VAR_10 . add ( METHOD_5 ( ) )
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME account TYPE java.util.List<java.lang.String> NAME add TYPE java.util.List<java.lang.String> NAME delete TYPE TYPE_5 NAME in INIT = new TYPE_5 ( )  in . add = add  in . delete = delete  return VAR_1 . apply ( account , in ) ; TYPE TYPE_6|com.google.gwtorm.server.OrmException|java.io.IOException|TYPE_7 NAME e  throw new TYPE_4 ( e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_2 ( STRING_1 ) TYPE TYPE_2 NAME VAR_2 INIT = repo . METHOD_3 ( repo . file ( STRING_2 , VAR_1 ) )  org.junit.Assert.assertEquals ( VAR_3 , METHOD_4 ( VAR_1 ) )  org.junit.Assert.assertEquals ( VAR_3 , METHOD_4 ( VAR_2 ) )
MODIFIER protected RETURN TYPE_1<?>.VAR_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) . METHOD_4 ( ) TYPE TYPE_1<?>.VAR_1 NAME b INIT = VAR_3 . METHOD_5 ( STRING_1 ) TYPE TYPE_2<java.lang.String> NAME id INIT = TYPE_3 . getChangeId ( VAR_3 , VAR_2 ) COND id . METHOD_6 ( )  b . METHOD_7 ( id . get ( ) . METHOD_8 ( 1 ) )  b . METHOD_7 ( )  return b ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME key TYPE java.lang.String[] NAME values COND ( values . length ) > 0 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) TYPE java.lang.String NAME VAR_3 IN values  VAR_2 . add ( new TYPE_3 ( VAR_3 ) )  VAR_1 . add ( key , VAR_2 )
MODIFIER public RETURN boolean NAME METHOD_1  return ( ( ( ( ( user ) instanceof TYPE_1 ) || ( user . METHOD_2 ( group . METHOD_3 ( ) ) ) ) || ( METHOD_4 ( ) ) ) || ( user . METHOD_5 ( ) . METHOD_6 ( ) ) ) || ( VAR_1 . METHOD_7 ( group . METHOD_3 ( ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  super . METHOD_1 ( VAR_1 ) COND VAR_1 . METHOD_2 ( )  return ; COND ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 class ) ) != null COND ( ! ( VAR_1 . METHOD_5 ( ) ) ) || ( ! ( VAR_3 . get ( ) . METHOD_6 ( ) ) )  VAR_1 . METHOD_7 ( new TYPE_2 ( ) )  return ;
MODIFIER private static RETURN java.lang.String NAME url TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME ps TYPE TYPE_1 NAME info  return TYPE_2 . METHOD_1 ( null , ps , info . path ( ) , ( ( info . METHOD_2 ( ) ) == ( VAR_1 ) ? VAR_2 : VAR_3 ) , info . line ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = METHOD_2 ( ) TYPE TYPE_1 NAME update INIT = METHOD_3 ( c , VAR_1 )  update . METHOD_4 ( VAR_1 . METHOD_5 ( ) . getId ( ) , VAR_2 )  update . commit ( ) TYPE TYPE_2 NAME notes INIT = METHOD_6 ( c ) TYPE TYPE_3<com.google.gerrit.reviewdb.client.PatchSet.Id,TYPE_4> NAME VAR_3 INIT = notes . METHOD_7 ( )  org.junit.Assert.assertEquals ( 0 , VAR_3 . METHOD_8 ( ) . size ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME msg INIT = VAR_1 . getValue ( ) . METHOD_2 ( ) COND METHOD_3 ( )  return ( msg . length ( ) ) > 0 ;  return msg . equals ( ( ( VAR_2 . message ( ) ) != null ? VAR_2 . message ( ) . METHOD_2 ( ) : STRING_1 ) ) ;
MODIFIER private RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME METHOD_1 TYPE java.util.Set<java.lang.String> NAME VAR_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME result INIT = new TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > ( ) TYPE java.lang.String NAME email IN VAR_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( email )  result . METHOD_3 ( VAR_2 )  return result ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME ps TYPE java.lang.String NAME token INIT = TYPE_1 . METHOD_2 ( ps ) MODIFIER public RETURN void NAME onSuccess  TYPE_3 . display ( this . token , METHOD_3 ( ) ) MODIFIER private RETURN TYPE_4 NAME METHOD_3  return new TYPE_5 ( ps ) ;  new TYPE_2 ( token ) { public void onSuccess ( ) { TYPE_3 . display ( this . token , METHOD_3 ( ) ) ; } private TYPE_4 METHOD_3 ( ) { return new TYPE_5 ( ps ) ; } } . onSuccess ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME cm INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_2 ( VAR_3 ) MODIFIER protected RETURN void NAME METHOD_3  install ( VAR_5 )  install ( cm )  install ( VAR_2 )  VAR_4 = new TYPE_4 ( ) { protected void METHOD_3 ( ) { install ( VAR_5 ) ; install ( cm ) ; install ( VAR_2 ) ; } }
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME n INIT = VAR_1 . getName ( )  return ( ( ( n . METHOD_2 ( STRING_1 ) ) || ( n . METHOD_2 ( STRING_2 ) ) ) && ( VAR_1 . METHOD_3 ( ) ) ) && ( ( n . METHOD_4 ( STRING_3 ) ) >= 0 ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account NAME a TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( a . getId ( ) . get ( ) )  VAR_1 . email = a . METHOD_2 ( )  VAR_1 . name = a . METHOD_3 ( )  VAR_2 = a . METHOD_4 ( )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE short NAME VAR_3 TYPE int NAME line  VAR_1 . append ( ( STRING_1 + line ) ) TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . METHOD_2 ( VAR_3 , line )  VAR_1 . append ( STRING_2 )  VAR_1 . append ( VAR_4 ) TYPE TYPE_2 NAME e  VAR_1 . append ( STRING_3 )  VAR_1 . append ( STRING_4 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE boolean NAME VAR_1 INIT = TYPE_1 . equals ( VAR_2 . METHOD_2 ( ) )  return ! ( ( VAR_1 || ( ( ( VAR_3 ) == ( VAR_4 ) ) && ( 0 >= ( VAR_2 . METHOD_3 ( ) . size ( ) ) ) ) ) || ( ( ( VAR_3 ) == ( VAR_5 ) ) && ( 0 >= ( VAR_2 . METHOD_4 ( ) . size ( ) ) ) ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 COND getChange ( ) . getStatus ( ) . METHOD_2 ( )  return ( ( ( ( METHOD_3 ( ) ) || ( METHOD_4 ( ) . METHOD_3 ( ) ) ) || ( METHOD_5 ( ) . METHOD_3 ( ) ) ) || ( METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ;  return METHOD_4 ( ) . METHOD_9 ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.NameKey NAME VAR_1 TYPE TYPE_2 NAME user TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . get ( VAR_1 . getParentKey ( ) ) COND VAR_2 == null  return false ; TYPE TYPE_4 NAME VAR_4 INIT = VAR_2 . METHOD_2 ( user )  return VAR_4 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( ! ( METHOD_5 ( db ) ) ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_1 . email ( ) ) != null  return VAR_1 . email ( ) ; COND ( VAR_1 . name ( ) ) != null  return VAR_1 . name ( ) ; COND ( VAR_1 . METHOD_2 ( ) ) != 0  return STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ;  return STRING_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME p INIT = VAR_2 . projects ( ) . name ( VAR_1 ) . create ( ) . get ( )  com.google.common.truth.Truth.assertThat ( p . name ) . isEqualTo ( VAR_1 ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( )  TYPE_3 . METHOD_3 ( VAR_3 . getProject ( ) , p )  METHOD_4 ( VAR_1 , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME id TYPE TYPE_2 NAME rsrc INIT = changes . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( id ) )  VAR_2 . METHOD_4 ( rsrc )  VAR_2 . apply ( account , new TYPE_4 ( ) ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME name TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  return rw . parseCommit ( repo . METHOD_2 ( name ) . METHOD_3 ( ) ) ;  rw . METHOD_4 ( )  repo . close ( )
MODIFIER public RETURN java.lang.String NAME get TYPE java.lang.String NAME VAR_1 INIT = super . get ( ) COND VAR_1 != null  return VAR_1 ; COND ( VAR_2 ) != null TYPE TYPE_1 NAME req  req = VAR_2 . get ( ) TYPE TYPE_2 NAME VAR_3 COND ( VAR_3 . METHOD_1 ( ) ) instanceof TYPE_3  return null ;  throw VAR_3 ;  return TYPE_4 . METHOD_2 ( req ) ;  return null ;
MODIFIER public RETURN TYPE_1<?,java.io.IOException> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 TYPE java.util.List<TYPE_3<?>> NAME VAR_2 INIT = new java.util.ArrayList ( VAR_1 . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id IN VAR_1  VAR_2 . add ( METHOD_1 ( id ) )  return TYPE_4 . METHOD_2 ( VAR_2 ) ;
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input  VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , TYPE_6 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ) TYPE TYPE_7|java.io.IOException NAME e  throw new TYPE_5 ( e . getMessage ( ) ) ;  return TYPE_1 . METHOD_6 ( ) ;
MODIFIER protected RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME git TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME topic TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 . create ( db , admin . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 )  return VAR_4 . to ( git , ( STRING_1 + topic ) ) ;
MODIFIER static final RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME VAR_1  return new TYPE_1 ( TYPE_4 . METHOD_2 ( VAR_1 . get ( ) . METHOD_3 ( ) , VAR_1 . get ( ) . METHOD_4 ( ) ) , ( ( int ) ( ( VAR_1 . get ( ) . METHOD_4 ( ) ) * ( VAR_1 . get ( ) . METHOD_3 ( ) ) ) ) ) ;
MODIFIER public RETURN void NAME name TYPE java.lang.String NAME name TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  in . name = name  VAR_1 . apply ( rsrc , in ) TYPE TYPE_3 NAME e  throw new TYPE_4 ( name , e ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < > ( )  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) ) COND ! ( VAR_3 )  modules.add ( new TYPE_3 ( ) )  modules.add ( new TYPE_4 ( VAR_4 , VAR_1 . METHOD_2 ( VAR_5 class ) , VAR_1 . METHOD_2 ( VAR_6 class ) ) ) COND ! ( VAR_4 )  modules.add ( new TYPE_5 ( ) )  return VAR_1 . METHOD_3 ( modules ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME cm TYPE int NAME line TYPE int NAME VAR_1 TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  cm . METHOD_2 ( line , VAR_2 , VAR_3 . diff ( ) )  return line + VAR_1 ;
MODIFIER private RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = new java.util.ArrayList < > ( ) COND ( VAR_4 ) == null  VAR_3 . add ( VAR_2 . METHOD_2 ( VAR_5 , VAR_6 ) ) TYPE TYPE_3 NAME e  VAR_3 . add ( STRING_1 )  VAR_3 . METHOD_3 ( METHOD_4 ( VAR_4 , VAR_2 , VAR_5 ) )  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3.ChangeInfo NAME result  VAR_1 = true  METHOD_5 ( )  TYPE_4 . display ( TYPE_5 . METHOD_6 ( result . METHOD_7 ( ) ) ) MODIFIER public RETURN void NAME METHOD_8 TYPE TYPE_6 NAME VAR_2  METHOD_9 ( true )  super . METHOD_8 ( VAR_2 )  TYPE_1 . METHOD_2 ( project , METHOD_3 ( ) , message . METHOD_4 ( ) , new TYPE_2 < TYPE_3 . ChangeInfo > ( ) { public void onSuccess ( TYPE_3 . ChangeInfo result ) { VAR_1 = true ; METHOD_5 ( ) ; TYPE_4 . display ( TYPE_5 . METHOD_6 ( result . METHOD_7 ( ) ) ) ; } public void METHOD_8 ( TYPE_6 VAR_2 ) { METHOD_9 ( true ) ; super . METHOD_8 ( VAR_2 ) ; } } )
MODIFIER protected RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) , VAR_3 ) TYPE TYPE_2.Result NAME result INIT = VAR_1 . to ( STRING_1 )  result . METHOD_3 ( )  return result ;
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME i TYPE int NAME row TYPE int NAME VAR_1 COND i . METHOD_2 ( ) TYPE TYPE_2 NAME c INIT = i . METHOD_3 ( )  table . METHOD_4 ( row )  table . METHOD_5 ( ) . METHOD_6 ( row , 0 , VAR_2 )  METHOD_7 ( row , VAR_1 , c , ( ! ( i . METHOD_2 ( ) ) ) )  row ++  return row ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( new TYPE_4 ( VAR_2 ) )  VAR_3 . METHOD_2 ( VAR_1 )  VAR_3 . METHOD_3 ( )  VAR_3 . close ( ) TYPE java.io.IOException NAME err  throw new TYPE_5 ( STRING_1 , err ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE java.lang.String NAME id INIT = cd . getId ( ) . toString ( ) COND cd . change ( ) . getStatus ( ) . METHOD_1 ( )  VAR_1 . METHOD_2 ( id )  commit ( VAR_1 )  VAR_2 . METHOD_2 ( id )  commit ( VAR_2 ) TYPE com.google.gwtorm.server.OrmException|TYPE_1 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public static RETURN void NAME message TYPE int NAME id TYPE java.lang.String NAME commit TYPE java.lang.String NAME message TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME input INIT = TYPE_3 . create ( )  input . METHOD_1 ( message )  TYPE_4 . METHOD_2 ( id , commit , STRING_1 ) . METHOD_3 ( input , VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rw . parseCommit ( VAR_2 ) COND ! ( VAR_1 . METHOD_2 ( db . get ( ) , rw , commit ) )  throw new TYPE_2 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME changes INIT = METHOD_2 ( changeId ) COND changes . isEmpty ( )  throw new TYPE_2 ( changeId ) ;  return create ( db , project , changeId ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3 . get ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( ) COND VAR_2 == 0  throw new TYPE_1 ( STRING_1 ) ;  return ( 0 < VAR_1 ) && ( VAR_1 <= VAR_2 ) ? VAR_1 : VAR_2 ;
MODIFIER public RETURN void NAME run TYPE int NAME line INIT = ( cm . METHOD_1 ( ) . METHOD_2 ( ) ) ? cm . METHOD_3 ( cm . METHOD_1 ( ) . METHOD_4 ( ) ) : 0 TYPE int NAME res INIT = java.util.Collections . METHOD_5 ( VAR_1 , new TYPE_1 ( cm . METHOD_6 ( ) , 0 , 0 , line , false ) , METHOD_7 ( ) )  METHOD_8 ( VAR_1 , VAR_2 , res , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . METHOD_3 ( STRING_1 ) )  METHOD_2 ( b , b . METHOD_4 ( INT_1 ) )  METHOD_2 ( b , b . METHOD_5 ( INT_2 ) )  METHOD_2 ( b , b . METHOD_6 ( ) )  assertEquals ( STRING_2 , b . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 ) TYPE java.lang.String NAME name INIT = STRING_2 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME user INIT = user ( name , null )  TYPE_1 . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME r INIT = create ( ) . METHOD_4 ( user )  METHOD_5 ( r )  assertEquals ( name , r . name )  assertEquals ( VAR_2 . METHOD_6 ( ) , r . email )  TYPE_1 . METHOD_7 ( VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME ref TYPE TYPE_3 NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  b . ref = ref . getName ( ) COND ( ref . METHOD_2 ( ) ) != null  b . revision = ref . METHOD_2 ( ) . name ( )  b . METHOD_3 ( ( ( ! ( VAR_2 . contains ( ref . getName ( ) ) ) ) && ( VAR_1 . METHOD_4 ( ) ) ) )  return b ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME add TYPE TYPE_3.Key<TYPE_2> NAME key TYPE TYPE_4<TYPE_2> NAME VAR_1 TYPE TYPE_5<TYPE_4<TYPE_2>> NAME ref INIT = new TYPE_5 < TYPE_4 < TYPE_2 > > ( VAR_1 )  VAR_2 . add ( ref )  return new TYPE_6 ( ref , key , VAR_1 ) ;
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 = null  TYPE_1 . METHOD_2 ( VAR_2 )  TYPE_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_2 NAME VAR_4 IN VAR_5  VAR_4 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( ) COND ( ( VAR_6 ) != null ) && ( VAR_6 . METHOD_5 ( ) )  TYPE_4 . METHOD_6 ( VAR_7 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( ( VAR_2 ) != null ) && ( ( VAR_2 . METHOD_2 ( ) . get ( VAR_1 ) ) != null )  return TYPE_1 . of ( TYPE_2 . of ( VAR_2 . METHOD_2 ( ) . get ( VAR_1 ) ) ) ;  return TYPE_1 . METHOD_3 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME revision NAME type  this . VAR_3 = revision  break ;  TYPE_3 . METHOD_2 ( ( revision == null ) , STRING_1 , type )  this . VAR_3 = revision  break ;  return this ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) )  return ; TYPE TYPE_1[] NAME VAR_2 INIT = VAR_1 . METHOD_4 ( ) COND VAR_2 != null TYPE TYPE_1 NAME d IN VAR_2 COND d . METHOD_5 ( )  TYPE_2 . METHOD_1 ( d )  TYPE_2 . METHOD_6 ( d )  TYPE_2 . METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx COND ( VAR_1 ) != null  VAR_1 . METHOD_1 ( ctx )  return ;  ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( org.eclipse.jgit.lib.ObjectId . METHOD_3 ( patchSet . getRevision ( ) . get ( ) ) , org.eclipse.jgit.lib.ObjectId . METHOD_4 ( ) , patchSet . getRefName ( ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1 TYPE TYPE_1 NAME VAR_2  VAR_1 . append ( CHAR_1 )  VAR_1 . append ( VAR_2 . METHOD_2 ( ) )  VAR_1 . append ( CHAR_2 )  VAR_1 . append ( VAR_2 . METHOD_3 ( ) )  VAR_1 . append ( CHAR_2 )  VAR_1 . append ( VAR_2 . METHOD_4 ( ) )  VAR_1 . append ( CHAR_2 )  VAR_1 . append ( VAR_2 . METHOD_5 ( ) )  VAR_1 . append ( CHAR_3 )
MODIFIER public RETURN TYPE_1.ChangeInfo NAME get TYPE TYPE_2<TYPE_3> NAME s  return TYPE_5 . apply ( VAR_1 . get ( ) . METHOD_1 ( s ) . format ( change ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_4 ( STRING_1 , e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME m TYPE int NAME VAR_1  m . METHOD_2 ( )  m . METHOD_3 ( )  m . METHOD_4 ( VAR_2 )  m . METHOD_5 ( )  m . METHOD_6 ( )  m . METHOD_3 ( )  m . METHOD_4 ( STRING_1 )  m . METHOD_7 ( STRING_2 , INT_1 )  m . append ( TYPE_2 . METHOD_8 ( VAR_1 ) )  m . METHOD_6 ( )  m . METHOD_9 ( )
MODIFIER private RETURN TYPE_1<com.google.gerrit.reviewdb.client.Account> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.lib.ObjectId NAME commit  rw . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( null , VAR_1 )  VAR_2 . METHOD_3 ( rw , commit )  return VAR_2 . METHOD_4 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = new com.google.gerrit.reviewdb.client.Change ( VAR_2 . getChange ( ) )  METHOD_2 ( VAR_1 , VAR_2 )  return TYPE_1 . METHOD_3 ( change , VAR_1 . METHOD_4 ( ) . get ( change.getId ( ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2  METHOD_2 ( req , res , VAR_3 )  res . METHOD_3 ( VAR_4 ) TYPE TYPE_5 NAME VAR_5 INIT = res . METHOD_4 ( )  new TYPE_6 ( ) . METHOD_5 ( VAR_6 ) . METHOD_6 ( ) . METHOD_7 ( ) . create ( ) . METHOD_8 ( VAR_1 , VAR_2 , VAR_5 )  VAR_5 . METHOD_9 ( CHAR_1 )  VAR_5 . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( ( STRING_2 + ( VAR_2 ) ) + ( TYPE_2 . METHOD_5 ( STRING_3 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( VAR_3 ) ) + STRING_5 ) , n . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 )  METHOD_3 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( STRING_3 , STRING_4 ) ) , TYPE_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( STRING_1 , STRING_5 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_8 ( TYPE_4 . of ( STRING_6 , STRING_7 , STRING_4 , STRING_8 , STRING_9 , STRING_10 , STRING_5 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME VAR_1 INIT = METHOD_2 ( VAR_2 ) TYPE TYPE_2 NAME r INIT = VAR_3 . METHOD_3 ( STRING_1 , VAR_1 )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_4 ( ) )  org.junit.Assert . METHOD_5 ( r . METHOD_6 ( ) . contains ( STRING_2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Change NAME change TYPE TYPE_2 NAME event TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_4 NAME VAR_1 IN VAR_2 . values ( ) COND METHOD_2 ( change , VAR_1 . user , db )  VAR_3 . METHOD_3 ( event )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME VAR_3 INIT = VAR_1 . getKey ( ) . getParentKey ( ) . get ( ) TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . getKey ( ) . getParentKey ( ) . get ( )  return TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 . METHOD_3 ( ) , VAR_2 . METHOD_3 ( ) ) . METHOD_1 ( VAR_3 , VAR_4 ) . METHOD_1 ( VAR_1 . METHOD_4 ( ) , VAR_2 . METHOD_4 ( ) ) . result ( ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 )  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 )  METHOD_4 ( user )  com.google.common.truth.Truth.assertThat ( METHOD_5 ( ) . METHOD_6 ( ) ) . METHOD_7 ( TYPE_1 . METHOD_8 ( VAR_3 , 1 ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Status NAME status NAME status  return ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ) || ( METHOD_5 ( ) . METHOD_6 ( ) ) ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME line TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE boolean NAME edit  VAR_4 . add ( new TYPE_2 ( VAR_5 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) , ( ( VAR_2 - VAR_3 ) + 1 ) , ( ( line - VAR_3 ) + 1 ) , VAR_2 , edit ) )
MODIFIER public static RETURN TYPE_1 NAME change TYPE java.lang.String NAME project TYPE int NAME id COND project == null  return new TYPE_1 ( STRING_1 ) . id ( java.lang.String . METHOD_1 ( id ) ) ;  return new TYPE_1 ( STRING_1 ) . id ( project , id ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME git INIT = METHOD_2 ( ) TYPE TYPE_2.Result NAME change INIT = METHOD_3 ( git )  submit ( change . getChangeId ( ) )  METHOD_4 ( git , false )  org.junit.Assert.assertEquals ( change . METHOD_5 ( ) . METHOD_6 ( 0 ) , METHOD_7 ( ) . METHOD_6 ( 0 ) )
MODIFIER private RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME c TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME cfg TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( null , null , null , VAR_2 ) TYPE java.lang.String NAME VAR_4 INIT = TYPE_3 . METHOD_2 ( cfg ) TYPE java.util.List<TYPE_4> NAME m INIT = VAR_3 . METHOD_3 ( repo , c , rw , VAR_4 , VAR_1 )  return TYPE_5 . METHOD_4 ( m ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r TYPE java.lang.String NAME n TYPE java.lang.String NAME VAR_1 COND ( r . length ( ) ) > 0  r . append ( STRING_1 )  r . append ( n )  r . append ( STRING_2 )  r . append ( TYPE_2 . METHOD_2 ( VAR_1 ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME view TYPE java.lang.String NAME token INIT = view . METHOD_2 ( ) COND ! ( token . equals ( TYPE_2 . METHOD_2 ( ) ) )  TYPE_2 . METHOD_3 ( token , false ) COND ( VAR_1 ) != null  TYPE_3 . METHOD_4 ( token ) COND view instanceof TYPE_4  VAR_2 = token  super . METHOD_1 ( view )  view . METHOD_1 ( )
MODIFIER private RETURN boolean NAME METHOD_1 COND VAR_1 . METHOD_2 ( )  return VAR_2 ; TYPE java.lang.StringBuilder NAME msg INIT = new java.lang.StringBuilder ( )  msg . append ( STRING_1 )  msg . append ( STRING_2 ) COND VAR_2  msg . append ( STRING_3 )  msg . append ( STRING_4 )  msg . append ( STRING_5 )  msg . append ( STRING_6 )  return VAR_1 . METHOD_3 ( true , msg . toString ( ) , name ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = null COND VAR_1 != null  VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) COND VAR_2 == null  VAR_2 = TYPE_3 . METHOD_3 ( VAR_4 , VAR_5 )  return new TYPE_1 ( VAR_2 ) ;
MODIFIER public RETURN boolean NAME apply TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME p INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( project . getName ( ) ) TYPE org.eclipse.jgit.lib.Repository NAME db INIT = VAR_2 . METHOD_1 ( p ) TYPE TYPE_3 NAME git INIT = new TYPE_3 ( db )  git . METHOD_2 ( ) . METHOD_3 ( branch ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( )  git . close ( )  return true ;
MODIFIER private RETURN TYPE_1 NAME user TYPE TYPE_2.ProjectConfig NAME VAR_1 TYPE java.lang.String NAME name TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME VAR_2  return new TYPE_1 ( VAR_3 . Collections < TYPE_3 > METHOD_1 ( ) , VAR_3 . Collections < TYPE_3 > METHOD_1 ( ) , VAR_4 , null , VAR_5 , VAR_6 , new TYPE_4 ( name , VAR_2 ) , METHOD_2 ( VAR_1 ) ) ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME m  VAR_1 . set ( ( base != null ? new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , base . METHOD_1 ( ) ) : null ) , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , VAR_2 . METHOD_1 ( ) ) , VAR_3 , VAR_4 , VAR_5 , ( ( edit ) != null ) )  VAR_1 . METHOD_2 ( m , VAR_6 , VAR_7 . get ( 0 ) , VAR_8 . get ( 0 ) , VAR_9 )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME id TYPE TYPE_2<TYPE_3> NAME VAR_1 COND id . METHOD_2 ( ) . METHOD_3 ( STRING_1 )  return true ; COND id . METHOD_2 ( ) . METHOD_3 ( STRING_2 )  return true ; TYPE TYPE_3 NAME t IN VAR_1 COND t . METHOD_4 ( id )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME n INIT = projectName + ( VAR_2 ) TYPE TYPE_2 NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( n ) . METHOD_4 ( ) , VAR_4 ) TYPE org.eclipse.jgit.lib.Repository NAME db INIT = TYPE_3 . METHOD_5 ( VAR_3 , false )  db . create ( true )  db . close ( )
MODIFIER public RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1  VAR_2 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 . change ( ) . METHOD_3 ( ) )  VAR_3 = index . METHOD_4 ( VAR_2 , VAR_4 ) TYPE TYPE_3 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return METHOD_5 ( ) ;
MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE java.lang.String NAME name  name = TYPE_1 . METHOD_2 ( VAR_1 , name ) COND VAR_2 . METHOD_3 ( name )  return VAR_2 . get ( name ) ; TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_3 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( name ) )  VAR_2 . put ( name , repo )  return repo ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.ArrayList<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) COND ( TYPE_2 . METHOD_2 ( VAR_1 ) ) != null TYPE java.lang.String[] NAME VAR_3 INIT = VAR_1 . METHOD_3 ( STRING_1 ) TYPE java.lang.String NAME VAR_4 IN VAR_3  VAR_2 . add ( TYPE_3 . METHOD_4 ( VAR_5 class , VAR_4 . METHOD_5 ( ) ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  < com.google.gerrit.reviewdb.server.ReviewDb > schema = METHOD_2 ( VAR_1 class ) TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = METHOD_2 ( VAR_2 . ReviewDb class )  TYPE_2 . METHOD_3 ( schema . METHOD_4 ( ) ) . METHOD_5 ( db ) . METHOD_6 ( )  VAR_3 = new TYPE_3 ( VAR_4 , schema )  req = METHOD_2 ( VAR_5 class )  rsp = METHOD_2 ( VAR_6 . HttpServletResponse class )  TYPE_2 . METHOD_3 ( req . METHOD_7 ( ) ) . METHOD_5 ( TYPE_4 . toString ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  METHOD_2 ( STRING_2 , VAR_1 )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 ) ( VAR_2 . METHOD_3 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_3 ) ) ) ) ) . METHOD_4 ( )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_3 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 ) ) . toString ( ) ) . isEqualTo ( VAR_1 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = TYPE_3 . getChange ( VAR_1 ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = TYPE_3 . METHOD_2 ( VAR_1 ) TYPE TYPE_4 NAME VAR_2 INIT = ( ( TYPE_4 ) ( VAR_3 ) ) TYPE TYPE_5 NAME VAR_4 INIT = VAR_2 . METHOD_3 ( ) . METHOD_4 ( )  return VAR_4 . get ( change , ps ) ; TYPE TYPE_6 NAME e  throw new TYPE_7 ( e . getMessage ( ) ) ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME parseCommit TYPE org.eclipse.jgit.lib.ObjectId NAME id COND id instanceof org.eclipse.jgit.revwalk.RevCommit  return ( ( org.eclipse.jgit.revwalk.RevCommit ) ( id ) ) ; TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = walk . parseCommit ( id )  walk . METHOD_1 ( commit )  return commit ;  walk . METHOD_2 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event MODIFIER public RETURN void NAME onSuccess TYPE TYPE_4 NAME result  VAR_1 . update ( result ) MODIFIER public RETURN void NAME METHOD_2 TYPE TYPE_5 NAME VAR_2  b . METHOD_3 ( true )  new TYPE_2 ( patchSet . getId ( ) , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( TYPE_4 result ) { VAR_1 . update ( result ) ; } public void METHOD_2 ( TYPE_5 VAR_2 ) { b . METHOD_3 ( true ) ; } } ) . METHOD_4 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME project TYPE java.lang.String NAME path TYPE TYPE_3 NAME VAR_1 TYPE byte[] NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE java.lang.String NAME VAR_4  return TYPE_5 . METHOD_2 ( VAR_2 , VAR_1 ) . METHOD_3 ( VAR_3 . toString ( ) ) . METHOD_4 ( TYPE_5 . METHOD_5 ( path , VAR_4 ) ) ;
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME index TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_4 ( new TYPE_5 ( VAR_2 ) )  VAR_1 . METHOD_2 ( 2 ) TYPE TYPE_6 NAME VAR_3 INIT = TYPE_6 . METHOD_3 ( ) TYPE java.util.List<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_4  VAR_4 = METHOD_4 ( VAR_1 ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_5 . error ( STRING_1 , e )  return new TYPE_7 . Result ( VAR_3 , false , 0 , 0 ) ;  return METHOD_5 ( index , VAR_4 , VAR_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = METHOD_2 ( )  return METHOD_3 ( repo , db , rw , commit , repo . METHOD_4 ( ) ) ;  repo . close ( ) TYPE java.io.IOException NAME e TYPE java.lang.String NAME msg INIT = java.lang.String.format ( STRING_1 , commit . name ( ) , getProject ( ) . METHOD_5 ( ) )  VAR_1 . error ( msg , e )  return false ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME token TYPE java.lang.String NAME VAR_1 COND token . METHOD_2 ( STRING_1 )  return TYPE_1 . METHOD_3 ( group . METHOD_4 ( ) , VAR_1 ) ;  return TYPE_1 . METHOD_3 ( group . METHOD_5 ( ) , VAR_1 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME rsrc COND rsrc . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) MODIFIER public RETURN boolean NAME METHOD_5 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME account  return true ;  return new TYPE_1 ( ) { public boolean METHOD_5 ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { return true ; } } ; MODIFIER public RETURN boolean NAME METHOD_5 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME account TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . create ( account )  return rsrc . METHOD_2 ( ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( ) ;  return new TYPE_1 ( ) { public boolean METHOD_5 ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { TYPE_3 VAR_1 = VAR_2 . create ( account ) ; return rsrc . METHOD_2 ( ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( ) ; } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( VAR_1 ) TYPE TYPE_2 NAME c INIT = new TYPE_2 ( p , VAR_2 )  METHOD_2 ( p , c . getParentKey ( ) )  METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) != ( c . METHOD_4 ( ) ) ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE java.lang.String NAME name INIT = METHOD_1 ( VAR_1 )  return new TYPE_1 ( name , VAR_4 , VAR_3 . user , VAR_1 , VAR_2 , new TYPE_6 ( name ) , VAR_5 , VAR_6 , METHOD_2 ( ) . METHOD_3 ( ) , null , VAR_7 class , null ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME p IN VAR_1 . approvals ( VAR_2 ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . create ( VAR_2 , p . getAccountId ( ) ) COND VAR_3 . METHOD_2 ( ) . contains ( VAR_5 )  return true ;  return false ;
MODIFIER private RETURN void NAME set TYPE TYPE_1 NAME info  VAR_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( info . METHOD_3 ( ) ) ) COND ( info . message ( ) ) != null TYPE java.lang.String NAME msg INIT = info . message ( ) . METHOD_4 ( )  VAR_2 . METHOD_1 ( msg )  message . METHOD_5 ( VAR_3 . apply ( new TYPE_3 ( ) . append ( msg ) . METHOD_6 ( ) ) )  this . VAR_4 = info
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . put ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) , METHOD_2 ( STRING_3 ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) )  r . METHOD_4 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME key TYPE TYPE_3 NAME args COND VAR_1  return VAR_2 . get ( key , VAR_3 . create ( key , args ) ) ; TYPE TYPE_4|TYPE_5 NAME e  VAR_4 . METHOD_2 ( ( STRING_1 + key ) , e )  return new TYPE_1 ( VAR_5 ) ;  return new TYPE_1 ( VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1.HttpServletResponse NAME VAR_1 INIT = METHOD_3 ( VAR_2 . HttpServletResponse class )  servlet . METHOD_4 ( null , VAR_1 )  TYPE_2 . METHOD_5 ( VAR_1 ) . METHOD_6 ( VAR_3 )  METHOD_7 ( )  VAR_1 = METHOD_3 ( VAR_2 . HttpServletResponse class )  servlet . METHOD_4 ( null , VAR_1 )  TYPE_2 . METHOD_5 ( VAR_1 ) . METHOD_6 ( VAR_3 )  METHOD_7 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_1> NAME m INIT = TYPE_2 . METHOD_3 ( repo , c , VAR_1 ) TYPE java.util.List<java.lang.String> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE java.lang.String NAME VAR_3 IN VAR_1  VAR_2 . add ( ( STRING_1 + VAR_3 ) )  com.google.common.truth.Truth.assertThat ( TYPE_3 . METHOD_4 ( m ) ) . METHOD_5 ( VAR_2 )
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( VAR_3 ) TYPE java.lang.String NAME VAR_4 INIT = ( STRING_1 + ( VAR_5 ) ) + STRING_2 COND VAR_2 > 0  return ( TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_4 ( ( VAR_2 + 1 ) ) ) + VAR_4 ;  return VAR_4 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 COND ( ( path ) == null ) || ( VAR_1 == null )  return null ; TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( VAR_2 ) TYPE TYPE_5 NAME VAR_3 INIT = rw . METHOD_2 ( VAR_1 )  return TYPE_1 . METHOD_3 ( VAR_2 , path , VAR_3 ) ;
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  VAR_1 = new TYPE_5 ( repo . METHOD_2 ( ) , new TYPE_6 ( repo . METHOD_2 ( ) ) . METHOD_3 ( null ) , new TYPE_7 ( false , TYPE_8 . METHOD_4 ( ) . METHOD_5 ( 0 ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME req TYPE TYPE_2 NAME res INIT = new TYPE_2 ( )  servlet . METHOD_2 ( req , res )  assertEquals ( VAR_2 , res . getStatus ( ) )  assertEquals ( VAR_1 , res . METHOD_3 ( VAR_3 ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = new com.google.gerrit.reviewdb.client.Account ( VAR_1 , TYPE_2 . METHOD_2 ( ) ) TYPE TYPE_3<TYPE_4> NAME VAR_2 INIT = java.util.Collections . METHOD_3 ( ) TYPE java.util.Set<TYPE_5> NAME VAR_3 INIT = TYPE_6 . of ( VAR_4 )  return new TYPE_1 ( account , VAR_3 , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( STRING_1 , STRING_2 , INT_1 )  VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) , TYPE_1 . METHOD_5 ( VAR_3 . ReviewDb class ) )  TYPE_1 . METHOD_6 ( ) . METHOD_7 ( )  TYPE_1 . METHOD_8 ( VAR_1 )  VAR_4 . METHOD_9 ( STRING_1 , STRING_2 , INT_1 )  TYPE_1 . METHOD_10 ( VAR_1 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) TYPE TYPE_4 NAME VAR_3 IN VAR_4  TYPE_5 . METHOD_4 ( new TYPE_6 ( VAR_3 . METHOD_5 ( ) ) . METHOD_6 ( ) , STRING_1 , VAR_3 ) TYPE TYPE_7 NAME e  throw new TYPE_8 ( e ) ;  VAR_1 . add ( VAR_3 )  return VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) . METHOD_5 ( )  METHOD_6 ( ) TYPE TYPE_2.ChangeInfo NAME info INIT = METHOD_7 ( METHOD_8 ( VAR_1 ) ) TYPE java.lang.String NAME message INIT = VAR_2 . get ( VAR_3 ) . commit . message  com.google.common.truth.Truth.assertThat ( message ) . contains ( java.lang.String.format ( STRING_1 , VAR_4 , admin . METHOD_9 ( ) . METHOD_10 ( ) ) )
MODIFIER public RETURN java.lang.String NAME apply TYPE TYPE_1 NAME rsrc TYPE TYPE_2 NAME input TYPE java.lang.String NAME VAR_1 INIT = ( VAR_2 ) ? STRING_1 : STRING_2  return java.lang.String.format ( STRING_3 , VAR_1 , ( TYPE_3 . METHOD_1 ( input . message ) ? TYPE_4 . METHOD_2 ( user . get ( ) . METHOD_3 ( ) , STRING_4 ) : input . message ) , rsrc . getName ( ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME t TYPE TYPE_2 NAME VAR_1 COND t . METHOD_2 ( )  return ( ( TYPE_3 ) ( t ) ) . METHOD_1 ( this , VAR_1 ) ; COND ! ( t . METHOD_3 ( ) )  return false ;  return ( this . VAR_2 ) == ( ( ( TYPE_4 ) ( t ) ) . value ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME rp  VAR_1 = rp . METHOD_2 ( ) COND ( VAR_1 ) == null  VAR_1 = rp . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) TYPE java.io.IOException NAME e TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( e . getMessage ( ) )  VAR_3 . METHOD_6 ( e )  throw VAR_3 ;  rp . METHOD_7 ( VAR_1 , rp . METHOD_8 ( ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME req TYPE TYPE_3.HttpServletResponse NAME res TYPE java.lang.String NAME VAR_1 TYPE java.util.Map<java.lang.String,?> NAME VAR_2  req . METHOD_2 ( VAR_3 , true )  return VAR_4 . METHOD_3 ( res , VAR_1 , METHOD_4 ( req , res , VAR_2 ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME id COND id . METHOD_2 ( VAR_1 )  return METHOD_3 ( ) ; COND id . METHOD_2 ( VAR_2 )  return true ; COND id . METHOD_2 ( VAR_3 )  return true ; COND id . METHOD_2 ( VAR_4 )  return true ; TYPE TYPE_2 NAME p IN VAR_5 COND p . METHOD_4 ( id )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE TYPE_1 NAME VAR_2  METHOD_2 ( VAR_2 ) TYPE TYPE_4<TYPE_5> NAME VAR_3 INIT = METHOD_3 ( VAR_2 ) COND VAR_3 . METHOD_4 ( )  throw new TYPE_3 ( java.lang.String.format ( STRING_1 , VAR_2 . getId ( ) ) ) ; TYPE com.google.gerrit.reviewdb.client.PatchSet NAME VAR_4 INIT = METHOD_5 ( VAR_2 ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_5 INIT = TYPE_6 . METHOD_6 ( VAR_4 )  METHOD_7 ( VAR_1 , VAR_2 , VAR_4 , VAR_5 , TYPE_7 . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_2 , VAR_3 )  METHOD_4 ( VAR_1 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_5 ( STRING_1 , VAR_1 ) . to ( VAR_2 , VAR_4 ) . to ( VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_7 ( VAR_11 ) . METHOD_7 ( VAR_12 )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . to ( VAR_2 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )  install ( new TYPE_1 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME i INIT = 1 COND i < INT_1  i ++ TYPE java.lang.String NAME p INIT = STRING_1 + i  TYPE_2 . METHOD_2 ( VAR_1 , p )  TYPE_2 . METHOD_3 ( ( ( ( VAR_1 . METHOD_4 ( ) ) + STRING_2 ) + p ) )  return null ;
MODIFIER public RETURN void NAME METHOD_1  db . create ( ) TYPE TYPE_2 NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 )  assertEquals ( VAR_3 , VAR_4 )  assertEquals ( VAR_5 , VAR_6 )  assertEquals ( VAR_7 , VAR_8 )  assertEquals ( VAR_9 , VAR_10 )  assertEquals ( VAR_11 , VAR_12 )
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1  return ( ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) ) && ( METHOD_2 ( ) . equals ( ( ( TYPE_2 < ? > ) ( VAR_1 ) ) . METHOD_2 ( ) ) ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE boolean NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_2 INIT = VAR_3 . METHOD_1 ( project . METHOD_2 ( ) ) COND VAR_2 == null  throw new TYPE_1 ( STRING_1 ) ;  METHOD_3 ( VAR_2 ) COND ! VAR_1  METHOD_4 ( project . METHOD_2 ( ) , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_1 ) . METHOD_4 ( true ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = repo . METHOD_3 ( repo . commit ( ) . message ( STRING_2 ) . add ( STRING_3 , STRING_4 ) . add ( STRING_5 , STRING_6 ) . create ( ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = insert ( METHOD_4 ( repo , commit ) )  METHOD_5 ( STRING_7 )  METHOD_5 ( STRING_8 , change )
MODIFIER private RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME s IN VAR_2 TYPE boolean NAME VAR_3 INIT = false COND VAR_1 <= ( VAR_4 )  ( VAR_4 ) ++ COND VAR_1 < ( VAR_5 )  ( VAR_5 ) ++  return table . METHOD_1 ( VAR_1 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctl TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( VAR_3 . isEmpty ( ) )  VAR_4 . get ( ) . apply ( new TYPE_3 ( new TYPE_4 ( ctl ) , db . patchSets ( ) . get ( VAR_1 ) ) , VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME user TYPE java.lang.String NAME project INIT = VAR_2 . getProject ( ) . getName ( ) TYPE java.lang.String NAME VAR_3 INIT = ( TYPE_4 . METHOD_2 ( user . METHOD_3 ( ) ) ) ? STRING_1 : user . METHOD_3 ( )  VAR_4 . METHOD_4 ( java.lang.String.format ( STRING_2 , VAR_1 , VAR_3 , project ) )  throw new TYPE_3 ( VAR_1 , project ) ;
MODIFIER public static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , null , null , null , null , null , null , project , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_1 NAME c IN db . METHOD_3 ( ) . METHOD_4 ( rsrc . METHOD_5 ( ) . getId ( ) , rsrc . METHOD_6 ( ) )  VAR_1 . put ( c . getKey ( ) . get ( ) , c )  return VAR_1 ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo COND ( ( change ) != null ) && ( VAR_1 ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( change ) COND ( VAR_2 == null ) || ( ! ( VAR_2 . METHOD_3 ( new TYPE_3 ( repo ) , VAR_3 ) ) )  return METHOD_4 ( repo ) ;  return super . METHOD_1 ( repo ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,java.lang.String> NAME VAR_1 INIT = new TYPE_1 < > ( ) TYPE java.lang.String NAME VAR_2 INIT = STRING_1  VAR_1 . put ( STRING_2 , VAR_2 ) TYPE java.lang.String NAME query INIT = VAR_3 . METHOD_2 ( VAR_1 )  org.junit.Assert . METHOD_3 ( query . contains ( java.lang.String.format ( STRING_3 , VAR_2 ) ) )
MODIFIER public static RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE TYPE_1[] NAME VAR_1 TYPE TYPE_2<org.eclipse.jgit.lib.Repository> NAME repo TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = repo . METHOD_2 ( VAR_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = ( VAR_2 == null ) ? repo . commit ( VAR_3 ) : repo . commit ( VAR_3 , VAR_2 )  repo . METHOD_3 ( c )  return c ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2.NameKey> NAME VAR_1  METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . get ( )  VAR_2 . METHOD_1 ( db , VAR_1 , VAR_4 , VAR_5 )  METHOD_2 ( STRING_2 ) TYPE TYPE_4 NAME e  METHOD_3 ( ( STRING_3 + STRING_4 ) , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Id NAME VAR_1 COND ( VAR_2 ) != null TYPE TYPE_2 NAME p IN VAR_2  p . METHOD_2 ( VAR_1 ) COND p . METHOD_3 ( )  p . METHOD_1 ( )
MODIFIER protected RETURN void NAME METHOD_1 COND METHOD_2 ( VAR_1 )  TYPE_1 . info ( STRING_1 )  bind ( VAR_2 class ) . to ( VAR_3 class ) . in ( VAR_4 )  bind ( VAR_5 class ) . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_2 ) ) . METHOD_5 ( new TYPE_3 ( VAR_1 , VAR_6 ) )  install ( new TYPE_4 ( VAR_1 , VAR_6 ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME type  type = type . METHOD_2 ( ) COND ! ( VAR_1 class . getName ( ) . equals ( type . METHOD_3 ( ) ) ) COND ( TYPE_2 . METHOD_4 ( type ) . length ) > 0  return true ;  type = type . METHOD_2 ( )  return false ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( ( ! ( METHOD_2 ( VAR_1 ) ) ) && ( ! ( METHOD_2 ( VAR_2 ) ) ) ) && ( ! ( METHOD_3 ( ) ) )  return new TYPE_1 ( ( ( STRING_1 + ( VAR_3 . getName ( ) ) ) + STRING_2 ) ) ; COND VAR_3 . METHOD_4 ( )  return METHOD_5 ( ) ;  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( true )  METHOD_3 ( ) TYPE TYPE_1.Result NAME r INIT = METHOD_4 ( )  revision ( r ) . METHOD_5 ( TYPE_2 . reject ( ) )  METHOD_6 ( r , ( - 2 ) )  r = METHOD_7 ( r . getChangeId ( ) )  METHOD_6 ( r , ( - 2 ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r  revision ( r ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) )  revision ( r ) . submit ( ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_4 ( project )  com.google.common.truth.Truth.assertThat ( repo . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) ) . isEqualTo ( r . METHOD_7 ( ) )  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) + ( VAR_1 ) ) , METHOD_2 ( ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) + ( VAR_1 ) ) ) )  assertEquals ( ( ( STRING_1 + ( ( STRING_2 + STRING_5 ) + STRING_6 ) ) + ( VAR_1 ) ) , METHOD_2 ( ( ( STRING_1 + ( STRING_2 + STRING_5 ) ) + ( VAR_1 ) ) ) )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . to ( VAR_2 class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE TYPE_3.Id NAME VAR_2 TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = new java.util.ArrayList < TYPE_1 > ( VAR_1 . size ( ) ) TYPE TYPE_1 NAME VAR_4 IN VAR_1 COND ( TYPE_4 . METHOD_2 ( getRefName ( ) , VAR_4 . METHOD_3 ( ) ) ) && ( VAR_4 . METHOD_4 ( ) . equals ( VAR_2 ) )  VAR_3 . add ( VAR_4 )  return VAR_3 ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = ( VAR_2 . METHOD_2 ( ) ) + ( VAR_3 . METHOD_2 ( ) ) COND VAR_4 . METHOD_3 ( )  VAR_1 += VAR_4 . METHOD_2 ( ) COND VAR_5 . METHOD_3 ( )  VAR_1 += VAR_5 . METHOD_2 ( )  return VAR_1 ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME set TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < TYPE_1 > ( set . METHOD_2 ( ) ) MODIFIER public RETURN int NAME METHOD_3 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_1 NAME VAR_3  return VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 . METHOD_4 ( ) ) ;  java.util.Collections . METHOD_1 ( VAR_1 , new TYPE_3 < TYPE_1 > ( ) { public int METHOD_3 ( TYPE_1 VAR_2 , TYPE_1 VAR_3 ) { return VAR_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 . METHOD_4 ( ) ) ; } } )  return VAR_1 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1<java.lang.String> NAME c TYPE TYPE_1<java.lang.String> NAME p  assertEquals ( ( VAR_1 + STRING_1 ) , 1 , p . METHOD_2 ( ) )  METHOD_3 ( ( VAR_1 + STRING_1 ) , c , p . METHOD_4 ( 0 ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 COND VAR_1  return new TYPE_2 ( ) ; TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . METHOD_2 ( VAR_3 ) NAME VAR_2  return ( VAR_5 ) != null ? VAR_5 : new TYPE_5 ( ) ;  return new TYPE_6 ( ) ;  throw new TYPE_7 ( ( STRING_1 + VAR_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( new TYPE_3 ( ) ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( VAR_3 class )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_4 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_1 . METHOD_3 ( VAR_3 class )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . isEqualTo ( VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2  VAR_1 . append ( CHAR_1 ) TYPE boolean NAME VAR_3 INIT = true TYPE TYPE_2 NAME VAR_4 IN VAR_2 COND VAR_3  VAR_3 = false  VAR_1 . append ( CHAR_2 ) COND VAR_4 != null  VAR_5 . METHOD_1 ( VAR_1 , VAR_4 )  VAR_1 . append ( VAR_6 )  VAR_1 . append ( CHAR_3 )
MODIFIER protected RETURN Project.NameKey NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 TYPE boolean NAME VAR_3 TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  in . name = ( VAR_4 ) + VAR_1  VAR_5 = ( VAR_2 != null ) ? VAR_2 . get ( ) : null  VAR_6 = VAR_3  return METHOD_1 ( in ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE TYPE_1 NAME r INIT = VAR_1 . METHOD_2 ( ( ( STRING_1 + changeId ) + STRING_2 ) , new TYPE_2 ( ) . label ( STRING_3 , 2 ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) )  r . METHOD_4 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( new TYPE_2 ( VAR_1 ) , VAR_2 )  assertEquals ( STRING_3 , VAR_3 . toString ( ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( new TYPE_2 ( STRING_4 ) , STRING_4 )  VAR_4 . METHOD_2 ( VAR_3 . toString ( ) )  assertEquals ( VAR_3 , VAR_4 )
MODIFIER public RETURN PatchSet.Id NAME METHOD_1 COND magicBranch . edit  return METHOD_2 ( ) ; COND VAR_1 == ( TYPE_2 . METHOD_3 ( ) )  return METHOD_4 ( db ) ; TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_2 . METHOD_5 ( )  return METHOD_4 ( db ) ;  db . close ( )  VAR_3  VAR_3 . update ( 1 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE int NAME psId TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( TYPE_2 . METHOD_2 ( VAR_3 . get ( ) . METHOD_3 ( changeId ) ) . change ( ) ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_4 INIT = VAR_5 . METHOD_4 ( db , VAR_1 , new com.google.gerrit.reviewdb.client.PatchSet.Id ( VAR_1 . getChangeId ( ) , psId ) )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . METHOD_5 ( )
MODIFIER private RETURN TYPE_1.ChangeInfo NAME getChange TYPE TYPE_2.Result NAME VAR_1 TYPE TYPE_3 NAME r INIT = VAR_2 . get ( ( ( STRING_1 + ( VAR_1 . getChangeId ( ) ) ) + STRING_2 ) )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_1 ( ) )  return TYPE_4 . METHOD_2 ( ) . METHOD_3 ( r . METHOD_4 ( ) , VAR_4 . ChangeInfo class ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < TYPE_2 > ( ) COND sshd  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) ) COND ! ( VAR_3 )  modules.add ( new TYPE_3 ( ) ) COND VAR_4  modules.add ( new TYPE_4 ( ) )  modules.add ( new TYPE_5 ( ) )  modules.add ( new TYPE_6 ( ) )  return VAR_1 . METHOD_3 ( modules ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId  TYPE_2 . METHOD_2 ( ( ! ( VAR_1 . METHOD_3 ( ) ) ) , ( STRING_1 + STRING_2 ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = TYPE_1 . METHOD_4 ( db ) . changes ( ) . get ( changeId )  TYPE_2 . METHOD_5 ( change , STRING_3 , changeId )  return new TYPE_1 ( args , change . getProject ( ) , change ) . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( admin , VAR_2 )  METHOD_4 ( admin )  METHOD_5 ( VAR_1 , VAR_3 )  assertThat ( VAR_4 ) . METHOD_6 ( STRING_1 , VAR_1 ) . to ( VAR_5 ) . to ( VAR_6 ) . METHOD_7 ( VAR_7 , VAR_8 , admin , VAR_3 ) . METHOD_7 ( VAR_9 ) . METHOD_8 ( VAR_10 ) . METHOD_8 ( VAR_11 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( ) TYPE TYPE_4 NAME in INIT = new TYPE_5 ( new TYPE_2 ( new TYPE_2 ( VAR_1 , STRING_1 ) , STRING_2 ) )  VAR_2 . METHOD_2 ( in )  in . close ( )  return VAR_2 ;
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( VAR_1 . METHOD_2 ( ) , VAR_2 , VAR_3 ) TYPE TYPE_6 NAME u INIT = VAR_5 . create ( VAR_6 . get ( ) , VAR_1 . getProject ( ) . METHOD_3 ( ) , VAR_1 . METHOD_2 ( ) , TYPE_7 . METHOD_4 ( ) )  u . METHOD_5 ( VAR_1 . getId ( ) , VAR_4 ) . METHOD_6 ( )  return VAR_4 . change ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE org.eclipse.jgit.lib.ObjectId NAME id COND ! ( id . equals ( org.eclipse.jgit.lib.ObjectId . METHOD_2 ( ) ) ) TYPE TYPE_2 NAME p INIT = new TYPE_2 ( )  p . METHOD_3 ( walk . METHOD_4 ( ) , walk . METHOD_5 ( id ) )  return p ;  return new TYPE_3 ( ) ;
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_1 NAME out TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = cd . change ( ) . currentPatchSetId ( ) TYPE TYPE_4 NAME ctl INIT = cd . METHOD_1 ( ) . METHOD_2 ( VAR_1 . user ( ) )  return format ( out , VAR_1 , cd , VAR_2 . METHOD_3 ( db . get ( ) , ctl , psId , new com.google.gerrit.reviewdb.client.Account.Id ( VAR_3 ) ) ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> NAME p TYPE TYPE_5 NAME VAR_1 INIT = new TYPE_5 ( ) TYPE int NAME i INIT = 0 COND i < ( p . METHOD_2 ( ) )  i ++  VAR_1 . add ( TYPE_6 . METHOD_3 ( schema , p . METHOD_4 ( i ) ) , VAR_2 )  return VAR_1 ; TYPE TYPE_5 NAME e  throw new TYPE_4 ( ( STRING_1 + p ) , e ) ;
MODIFIER public static RETURN void NAME METHOD_1 COND ( VAR_1 ) != null TYPE TYPE_1 NAME p INIT = VAR_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( p . METHOD_4 ( ) )  VAR_2 . METHOD_5 ( p . METHOD_6 ( ) )  VAR_3 . METHOD_5 ( p . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 COND VAR_1 == null  VAR_1 = VAR_3 . METHOD_2 ( getProject ( ) . METHOD_3 ( ) , METHOD_4 ( ) . METHOD_5 ( ) )  VAR_2 = VAR_1  return VAR_4 . create ( VAR_1 ) ;
MODIFIER public RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( psId . getParentKey ( ) ) COND c == null  return null ; TYPE TYPE_1 NAME notes INIT = VAR_1 . create ( db , c ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = VAR_2 . get ( db , notes , psId )  return ps != null ? ps . METHOD_2 ( ) : null ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_7 NAME VAR_3 INIT = new TYPE_7 ( VAR_1 ) TYPE TYPE_1 NAME VAR_4 INIT = TYPE_1 . METHOD_2 ( STRING_1 ) TYPE TYPE_8 NAME VAR_5 INIT = TYPE_8 . METHOD_2 ( VAR_6 )  VAR_5 . METHOD_3 ( VAR_3 )  VAR_4 . METHOD_3 ( VAR_2 , key . get ( ) , VAR_5 )  return VAR_4 ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1  return this . apply ( new TYPE_4 ( VAR_2 . METHOD_1 ( VAR_1 , VAR_3 . get ( ) ) ) ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( VAR_1 . get ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 COND TYPE_1 . equals ( TYPE_2 . METHOD_2 ( VAR_1 . getValue ( VAR_1 . METHOD_3 ( ) ) ) )  VAR_2 . METHOD_4 ( false ) TYPE TYPE_3 NAME VAR_3 INIT = new TYPE_3 ( )  VAR_3 . METHOD_5 ( VAR_4 . FALSE )  TYPE_4 . METHOD_6 ( VAR_2 , VAR_3 )  VAR_2 . METHOD_4 ( VAR_1 . METHOD_7 ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<?> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ( ( java.lang.String ) ( VAR_1 ) ) )  return ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ? VAR_2 : null ; TYPE TYPE_2 NAME e  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME r INIT = VAR_2 . put ( ( STRING_2 + VAR_1 ) )  r . METHOD_2 ( ) TYPE java.lang.String NAME VAR_3 INIT = STRING_3 TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  VAR_4 = VAR_1  r = VAR_2 . put ( ( STRING_2 + VAR_3 ) , in ) TYPE com.google.gerrit.reviewdb.client.Project NAME project INIT = VAR_5 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_3 ) ) . getProject ( )  org.junit.Assert.assertEquals ( VAR_4 , project . METHOD_3 ( ) )
MODIFIER public RETURN TYPE_1.Change NAME update TYPE TYPE_1.Change NAME change COND ( ( change . getStatus ( ) ) == ( VAR_1 ) ) && ( change . currentPatchSetId ( ) . equals ( VAR_2 ) )  change . METHOD_1 ( VAR_3 )  TYPE_2 . METHOD_2 ( change )  return change ;  return null ;
MODIFIER private static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.lang.String NAME path TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length ( ) )  i ++  VAR_1 . get ( i ) . METHOD_2 ( path )  return TYPE_3 . METHOD_3 ( VAR_1 ) ;
MODIFIER private RETURN com.google.gerrit.reviewdb.client.AccountGroup NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . get ( STRING_1 ) COND VAR_2 == null  VAR_2 = VAR_1 . METHOD_2 ( ) . get ( STRING_2 ) TYPE TYPE_2 NAME VAR_3 INIT = new TYPE_2 ( VAR_2 . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) )  return VAR_4 . get ( VAR_3 ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME get TYPE TYPE_3<TYPE_2> NAME m INIT = new TYPE_3 < TYPE_2 > ( ) TYPE java.util.List<TYPE_4<TYPE_2>> NAME VAR_1 INIT = VAR_2 . METHOD_1 ( type ) COND VAR_1 != null TYPE TYPE_4<TYPE_2> NAME b IN VAR_1  m . put ( STRING_1 , b . getKey ( ) , b . METHOD_2 ( ) . get ( ) )  return m ;
MODIFIER protected RETURN void NAME METHOD_1 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result  VAR_2 . display ( result , VAR_1 ) COND VAR_3  VAR_3 = false  METHOD_3 ( )  TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_1 > ( this , new TYPE_3 < TYPE_1 > ( ) { public void onSuccess ( final TYPE_1 result ) { VAR_2 . display ( result , VAR_1 ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_3 ( ) ; } } } ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo COND VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( change ) TYPE TYPE_3 NAME refs INIT = ( ( this . refs ) != null ) ? this . refs : new TYPE_4 ( repo ) COND ( VAR_2 == null ) || ( ! ( VAR_2 . METHOD_3 ( refs ) ) )  return METHOD_4 ( repo ) ;  return super . METHOD_1 ( repo ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME path TYPE boolean NAME VAR_1 TYPE TYPE_2<TYPE_3,TYPE_4> NAME view COND VAR_1  view = VAR_2  view = VAR_3  view . apply ( VAR_4 . get ( ) . METHOD_2 ( revision , TYPE_5 . METHOD_3 ( path ) ) , new TYPE_4 ( ) ) TYPE java.lang.Exception NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME group TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( ) COND ( TYPE_3 . METHOD_2 ( group ) ) && ( ( ( TYPE_4 ) ( group ) ) . METHOD_3 ( ) )  VAR_2 = true  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 , VAR_9 ) . METHOD_6 ( VAR_10 ) . METHOD_7 ( VAR_11 ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.ChangeInfo NAME VAR_2 TYPE TYPE_3 NAME VAR_3  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_4 ) . isEqualTo ( VAR_5 )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_6 ) . isEqualTo ( 1 ) COND name . equals ( STRING_1 )  return false ; COND name . equals ( STRING_2 )  VAR_1 . label = STRING_3  return true ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) COND ( VAR_2 ) == null TYPE TYPE_2 NAME VAR_3 INIT = METHOD_5 ( ) COND ! ( METHOD_6 ( ) . METHOD_7 ( ) )  VAR_1 . METHOD_8 ( VAR_3 , VAR_4 . METHOD_9 ( ) )  METHOD_10 ( )
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE java.lang.String[] NAME projects INIT = config . METHOD_2 ( ) TYPE boolean NAME VAR_1 INIT = ( projects . length ) == 1 COND VAR_1 TYPE java.lang.String NAME VAR_2 INIT = projects [ 0 ] COND ( TYPE_1 . METHOD_3 ( VAR_2 ) ) != ( VAR_3 )  VAR_1 = false  return VAR_1 ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1.Account NAME account COND account != null TYPE java.lang.String NAME result INIT = ( ( account . METHOD_2 ( ) ) == null ) ? VAR_1 : account . METHOD_2 ( ) COND ( account . METHOD_3 ( ) ) != null  result += ( STRING_1 + ( account . METHOD_3 ( ) ) ) + STRING_2  return result ;  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME changeId TYPE java.lang.String NAME message TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( ( ( ( VAR_3 ) + changeId ) + STRING_1 ) ) TYPE TYPE_4 NAME msg INIT = new TYPE_4 ( )  msg . METHOD_2 ( message )  VAR_2 . METHOD_3 ( msg , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  VAR_2 = VAR_1  VAR_3 . apply ( rsrc , in ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_1.Change NAME change TYPE java.util.List<TYPE_1.PatchSetApproval> NAME approvals INIT = db . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) ) . METHOD_4 ( ) TYPE TYPE_1.PatchSetApproval NAME a IN approvals  a . METHOD_5 ( change )  db . METHOD_2 ( ) . update ( approvals )
MODIFIER public RETURN void NAME display TYPE TYPE_1 NAME VAR_1  METHOD_1 ( ) TYPE TYPE_2.PatchSet NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  currentPatchSetId = VAR_2 . METHOD_3 ( ) TYPE TYPE_2.PatchSet NAME ps IN VAR_1 . METHOD_4 ( ) COND ps == VAR_2  add ( new TYPE_3 ( VAR_3 , VAR_1 , VAR_1 . METHOD_5 ( ) ) )  add ( new TYPE_3 ( VAR_3 , VAR_1 , ps ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.Id NAME id TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_2.PatchSet NAME ps INIT = db . patchSets ( ) . get ( id ) COND ps == null  throw new TYPE_3 . OrmException ( ( ( STRING_1 + id ) + STRING_2 ) ) ;  return ps . METHOD_2 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME info TYPE java.lang.String NAME VAR_1 COND info . METHOD_2 ( ) . equals ( info . METHOD_3 ( ) )  VAR_1 = TYPE_2 . METHOD_4 ( )  VAR_1 = TYPE_2 . METHOD_5 ( )  VAR_2 . METHOD_6 ( VAR_1 )  VAR_3 . METHOD_6 ( TYPE_3 . METHOD_7 ( info . METHOD_3 ( ) ) )  METHOD_8 ( ( ( FLOAT_1 - ( VAR_4 ) ) - ( METHOD_9 ( VAR_5 ) ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME group COND group != null TYPE TYPE_1 NAME ref INIT = VAR_1 . get ( group . METHOD_2 ( ) ) COND ref != null  return ref ;  VAR_1 . put ( group . METHOD_2 ( ) , group )  return group ;
MODIFIER private synchronized RETURN TYPE_1 NAME get TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name TYPE TYPE_1 NAME repo INIT = VAR_1 . get ( name . get ( ) . METHOD_1 ( ) ) COND repo != null  return repo ;  throw new TYPE_2 ( name . get ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p TYPE TYPE_2<TYPE_3.PatchSetApproval> NAME VAR_1 COND ! ( VAR_1 . isEmpty ( ) )  p . approvals = new java.util.ArrayList < TYPE_4 > ( VAR_1 . size ( ) ) TYPE TYPE_3.PatchSetApproval NAME a IN VAR_1 COND ( a . getValue ( ) ) != 0  VAR_2 . add ( METHOD_2 ( a ) ) COND VAR_2 . isEmpty ( )  p . approvals = null
MODIFIER public RETURN long NAME METHOD_1 TYPE TYPE_1 NAME p TYPE long NAME VAR_1 INIT = METHOD_2 ( ) TYPE long NAME VAR_2 INIT = p . METHOD_2 ( ) COND ( VAR_1 > 0 ) && ( VAR_2 > 0 )  return TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 ) ;  return TYPE_2 . METHOD_4 ( VAR_1 , VAR_2 ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME project TYPE java.lang.String NAME ref TYPE TYPE_2 NAME VAR_1  VAR_2 TYPE TYPE_3 NAME e INIT = VAR_2 . get ( VAR_1 ) COND e == null  e = new TYPE_3 ( this , project . get ( ) , VAR_3 , VAR_1 )  VAR_4 . METHOD_1 ( e , VAR_5 , VAR_6 )  VAR_2 . put ( VAR_1 , e )  e . METHOD_2 ( ref )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user TYPE TYPE_3 NAME revision  return new TYPE_1 ( user . METHOD_2 ( ) , revision . METHOD_3 ( ) , TYPE_4 . of ( user . getAccountId ( ) ) , null , VAR_1 , VAR_2 , TYPE_5 . of ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = new TYPE_2 ( ) TYPE TYPE_3 NAME update INIT = METHOD_2 ( VAR_2 , VAR_1 )  VAR_3 . update ( VAR_4 )  org.junit.Assert . METHOD_3 ( STRING_1 ) TYPE TYPE_4.OrmException NAME e  org.junit.Assert . METHOD_4 ( e . METHOD_5 ( ) , VAR_1 )  METHOD_6 ( update , 1 )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME file TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_4 . get ( ) . METHOD_2 ( project . getName ( ) , VAR_1 , file ) COND ( ! ( TYPE_2 . METHOD_3 ( VAR_3 . name ) ) ) && ( ! ( TYPE_2 . METHOD_3 ( VAR_3 . url ) ) )  VAR_2 . add ( VAR_3 )  return VAR_2 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE TYPE_1 NAME VAR_1  VAR_2 . get ( ) . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) . revision ( patchSet . getRevision ( ) . get ( ) ) . METHOD_2 ( VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1  return ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_2 ( ) ) ) || ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_6 ) . METHOD_5 ( VAR_7 , VAR_8 ) . METHOD_5 ( VAR_9 ) . METHOD_6 ( VAR_10 , VAR_11 ) . METHOD_6 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , TYPE_2 . of ( STRING_1 , TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 , VAR_5 ) ) )  TYPE_1 . METHOD_2 ( VAR_1 , VAR_6 , VAR_7 . Collections < java.lang.String , java.util.ArrayList < TYPE_4 > > METHOD_4 ( ) )
MODIFIER private static RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_2 ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = VAR_1 . insert ( VAR_2 , new byte [ ] { } )  VAR_1 . METHOD_3 ( )  return id ;  METHOD_4 ( INT_1 ) TYPE TYPE_2.a NAME VAR_3 TYPE TYPE_3 NAME to TYPE TYPE_4 NAME revision
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res TYPE boolean NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = res . getAccountId ( ) TYPE TYPE_2.Key NAME VAR_2 INIT = res . METHOD_2 ( ) COND ( VAR_3 ) != null  VAR_4 . METHOD_3 ( key )  key = VAR_4 . METHOD_4 ( id )  VAR_3 = VAR_4 . METHOD_5 ( key , id , VAR_1 , VAR_2 , null )  METHOD_6 ( )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_2> NAME VAR_1 INIT = VAR_2 . get ( ) . apply ( new TYPE_3 ( ) ) TYPE TYPE_4<java.lang.String,TYPE_2> NAME VAR_3 IN VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_3 . getValue ( ) COND ( VAR_4 . type ) == null  VAR_4 . type = VAR_5  VAR_4 . name = VAR_3 . getKey ( )  return VAR_1 . values ( ) ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 class )  bind ( VAR_4 class ) . METHOD_3 ( VAR_5 class ) . in ( VAR_6 )  factory ( VAR_7 . Factory class )  factory ( VAR_8 . Factory class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_9 class ) . to ( VAR_10 class )  install ( VAR_11 )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) COND VAR_2 == null  return null ; TYPE TYPE_2 NAME VAR_3 IN VAR_2 COND VAR_3 . getName ( ) . METHOD_3 ( STRING_1 )  return VAR_3 . getValue ( ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME c INIT = METHOD_2 ( VAR_1 ) TYPE java.util.List<TYPE_1> NAME m INIT = TYPE_2 . METHOD_3 ( repo , c , VAR_2 ) TYPE java.util.List<java.lang.String> NAME VAR_3 INIT = new java.util.ArrayList < > ( ) TYPE java.lang.String NAME VAR_4 IN VAR_1  VAR_3 . add ( ( STRING_1 + VAR_4 ) )  com.google.common.truth.Truth.assertThat ( TYPE_3 . METHOD_4 ( m ) ) . METHOD_5 ( VAR_3 )
MODIFIER public RETURN TYPE_1 NAME revision TYPE java.lang.String NAME id  return VAR_1 . create ( VAR_2 . METHOD_1 ( change , TYPE_3 . METHOD_2 ( id ) ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME db  VAR_1 . METHOD_2 ( db . METHOD_3 ( ) . METHOD_4 ( changeId ) . METHOD_5 ( ) ) TYPE TYPE_3 NAME m IN VAR_1 . METHOD_6 ( )  VAR_2 . METHOD_7 ( m . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Factory NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_2 NAME user TYPE TYPE_3<TYPE_4> NAME VAR_2 TYPE java.lang.String NAME VAR_3  METHOD_1 ( VAR_1 , project , user , VAR_2 , VAR_3 , VAR_4 , TYPE_7 . of ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME r INIT = VAR_3 . get ( ( ( ( ( ( STRING_1 + changeId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) + VAR_2 ) )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_2 ( ) )  return METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , VAR_5 class ) ;
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_4.Id NAME VAR_1 INIT = getAccountId ( ) COND ! ( VAR_2 . getAccountId ( ) . equals ( getAccountId ( ) ) )  throw new TYPE_5 ( ( ( ( ( STRING_1 + ( VAR_2 . getAccountId ( ) ) ) + STRING_2 ) + STRING_3 ) + ( getAccountId ( ) ) ) ) ;  db . METHOD_1 ( ) . METHOD_2 ( java.util.Collections.singleton ( VAR_2 ) )  return VAR_3 ;
MODIFIER private static RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3 NAME p INIT = VAR_1 . METHOD_2 ( ) TYPE java.util.List<TYPE_2> NAME VAR_2 INIT = new java.util.ArrayList < TYPE_2 > ( 2 )  TYPE_4 . METHOD_3 ( VAR_2 , p , VAR_3 )  TYPE_4 . METHOD_3 ( VAR_2 , p , VAR_4 )  return java.util.Collections . METHOD_4 ( VAR_2 ) ;
MODIFIER public RETURN Account.Id NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = db . METHOD_3 ( ) . get ( new TYPE_2 . Key ( VAR_1 ) )  return VAR_2 != null ? VAR_2 . getAccountId ( ) : null ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( ( STRING_1 + VAR_1 ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 class ) TYPE com.google.gerrit.extensions.registration.DynamicSet<TYPE_2> NAME VAR_3 INIT = com.google.gerrit.extensions.registration.DynamicSet . METHOD_3 ( )  VAR_3 . add ( VAR_1 )  VAR_4 = new TYPE_3 ( null , VAR_3 , null , null , null )
MODIFIER public final RETURN void NAME onSuccess TYPE TYPE_1 NAME result COND METHOD_1 ( ) COND ( ( result . length ( ) ) == 1 ) && ( TYPE_2 . METHOD_2 ( query ) ) TYPE TYPE_3.ChangeInfo NAME c INIT = result . get ( 0 ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id INIT = c . METHOD_3 ( )  TYPE_4 . display ( TYPE_5 . METHOD_4 ( id ) , new TYPE_6 ( id ) )  display ( result )  this . display ( )
MODIFIER public RETURN void NAME index TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_1,TYPE_3> NAME i IN METHOD_1 ( ) TYPE TYPE_4<TYPE_3> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( VAR_1 ) COND VAR_2 . METHOD_3 ( )  i . METHOD_4 ( VAR_2 . get ( ) )  i . delete ( VAR_1 )  METHOD_5 ( VAR_1 . get ( ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_1<TYPE_2> NAME VAR_1  new TYPE_3 ( ( STRING_1 + ( TYPE_4 . METHOD_2 ( project . get ( ) ) . METHOD_3 ( STRING_2 , STRING_3 ) ) ) ) . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_1 ) )
MODIFIER public RETURN java.util.List<TYPE_1> NAME get TYPE java.util.Set<java.lang.String> NAME VAR_1 INIT = cfg . METHOD_1 ( VAR_2 ) TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = TYPE_2 . METHOD_2 ( VAR_1 . size ( ) ) TYPE java.lang.String NAME name IN VAR_1  VAR_3 . add ( TYPE_3 . METHOD_3 ( cfg , name ) )  return TYPE_4 . METHOD_4 ( VAR_3 ) ;
MODIFIER MODIFIER RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  METHOD_2 ( ) COND VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_3 ( VAR_3 )  return TYPE_2 . METHOD_1 ( repo , TYPE_2 . METHOD_4 ( repo ) ) ;  return TYPE_1 . METHOD_5 ( db . METHOD_6 ( ) . METHOD_1 ( ) . METHOD_7 ( ) ) ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_1 NAME t IN TYPE_3 . METHOD_1 ( ) . METHOD_2 ( ) COND ! ( VAR_2 . METHOD_3 ( t ) )  VAR_2 . METHOD_4 ( VAR_1 , false )  return ;  VAR_2 . METHOD_4 ( VAR_1 , true )
MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE java.lang.String NAME name COND VAR_1 . METHOD_2 ( name )  return VAR_1 . get ( name ) ;  name = TYPE_1 . METHOD_3 ( VAR_2 , name ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_3 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( name ) )  VAR_1 . put ( name , repo )  return repo ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME ctx INIT = VAR_2 . METHOD_2 ( VAR_3 , null ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_2 . set ( ctx )  VAR_5 . METHOD_3 ( )  VAR_2 . set ( VAR_4 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE java.util.List<TYPE_3> NAME VAR_2 INIT = db . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( )  return ! ( VAR_2 . isEmpty ( ) ) ;  db . close ( ) TYPE TYPE_4.OrmException NAME e  throw new TYPE_1 ( ( STRING_1 + VAR_1 ) , e ) ;
MODIFIER private static RETURN void NAME p TYPE TYPE_1 NAME r TYPE TYPE_2.NameKey NAME project TYPE java.lang.String NAME n INIT = project . get ( ) COND ! ( n . METHOD_1 ( STRING_1 ) )  n += STRING_1  TYPE_3 . METHOD_2 ( r , STRING_2 , n )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group INIT = VAR_2 . get ( VAR_1 ) COND group == null  throw new TYPE_3 ( VAR_1 ) ;  return new TYPE_1 ( VAR_2 , user . get ( ) , group ) ;
MODIFIER protected RETURN java.util.List<TYPE_1.ChangeInfo> NAME METHOD_1 TYPE TYPE_2 NAME query TYPE com.google.gerrit.reviewdb.client.Change NAME changes TYPE java.util.List<TYPE_1.ChangeInfo> NAME result INIT = query . get ( ) TYPE TYPE_3<TYPE_4> NAME VAR_1 INIT = TYPE_5 . METHOD_2 ( result )  com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_3 ( query . METHOD_4 ( ) ) . METHOD_5 ( TYPE_5 . METHOD_2 ( changes ) ) . METHOD_6 ( )  return result ;
MODIFIER public RETURN void NAME METHOD_1 COND VAR_1  throw new TYPE_1 ( STRING_1 ) ; TYPE TYPE_2 NAME VAR_2 IN VAR_3 TYPE TYPE_3 NAME args INIT = VAR_2 . args TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = VAR_4 . get ( VAR_5 . getAccountId ( ) ) . METHOD_2 ( )  VAR_6 . METHOD_3 ( VAR_7 , VAR_8 . METHOD_4 ( ) , VAR_8 . METHOD_5 ( ) , account )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = VAR_1 . create ( db , change . getProject ( ) , change.getId ( ) )  cd . METHOD_2 ( user ) COND TYPE_5 . METHOD_3 ( cfg )  return METHOD_4 ( db , new TYPE_1 ( cd ) , user ) ;  return METHOD_5 ( db , new TYPE_1 ( cd ) , user ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( )  this TYPE boolean NAME VAR_2 INIT = ! ( VAR_3 . isEmpty ( ) ) TYPE TYPE_1 NAME p IN VAR_3 . values ( )  p . METHOD_1 ( )  VAR_3 . METHOD_3 ( )  VAR_4 . METHOD_3 ( ) COND VAR_2  TYPE_2 . METHOD_4 ( )  METHOD_5 ( )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME info INIT = ( ( TYPE_4 ) ( VAR_1 ) ) . METHOD_1 ( project , revision , file ) TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( )  VAR_2 . name = info . name  VAR_3 = VAR_4  VAR_2 . url = info . url  VAR_5 = VAR_6  return VAR_2 ;
MODIFIER protected RETURN void NAME rpc TYPE java.lang.String NAME name TYPE TYPE_1<?extendsTYPE_2> NAME VAR_1 TYPE TYPE_3.Key<TYPE_4> NAME VAR_2 INIT = TYPE_5 . get ( VAR_3 class , TYPE_6 . create ( ) ) TYPE TYPE_7 NAME VAR_4 INIT = new TYPE_7 ( VAR_1 )  METHOD_1 ( ( ( VAR_5 ) + name ) ) . METHOD_2 ( VAR_2 )  bind ( VAR_2 ) . METHOD_3 ( VAR_4 ) . in ( VAR_6 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = name ( STRING_1 )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 INIT = METHOD_2 ( name , VAR_3 )  VAR_4 . METHOD_3 ( name , VAR_3 , null , VAR_2 )  VAR_4 . METHOD_3 ( name , STRING_3 , new java.lang.String [ ] { } )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME line COND VAR_1 == null  throw METHOD_2 ( STRING_1 , psId . get ( ) ) ; COND line . METHOD_3 ( STRING_2 )  METHOD_4 ( psId , VAR_1 , line )  METHOD_5 ( psId , VAR_1 , VAR_2 , line )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME res TYPE boolean NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = res . getAccountId ( ) TYPE TYPE_2.Key NAME VAR_2 INIT = res . METHOD_2 ( ) COND ( VAR_3 ) != null  VAR_4 . METHOD_3 ( key )  key = VAR_4 . METHOD_4 ( id )  VAR_3 = VAR_4 . METHOD_5 ( key , id , VAR_1 , VAR_2 )  METHOD_6 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME rsrc TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( rsrc . METHOD_3 ( ) ) COND ! ( repo . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) . isEmpty ( ) )  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , rsrc . getName ( ) ) ) ;  repo . close ( ) TYPE java.io.IOException NAME e  throw new TYPE_2 ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1.PatchSetApproval NAME VAR_2 IN VAR_3 . get ( ) . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) ) COND ( ! VAR_1 ) && ( ( VAR_2 . getValue ( ) ) == 0 )  continue ;  add ( VAR_4 , VAR_2 . getAccountId ( ) ) TYPE TYPE_2.OrmException NAME err BLOCK BLOCK
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ! ( VAR_1 . METHOD_1 ( ) )  throw new TYPE_4 ( ) ;  VAR_2 . METHOD_2 ( db . get ( ) , rsrc . getId ( ) ) TYPE TYPE_6 NAME e  throw new TYPE_4 ( TYPE_7 . METHOD_3 ( rsrc . getId ( ) . toString ( ) ) ) ;  return TYPE_1 . METHOD_4 ( ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e MODIFIER public RETURN void NAME onSuccess TYPE TYPE_4 NAME result TYPE TYPE_5 NAME p INIT = TYPE_6 . METHOD_3 ( ) COND p == null  p = TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_5 ( ) . getId ( ) )  result . METHOD_6 ( p )  TYPE_6 . METHOD_7 ( p )  TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( TYPE_4 result ) { TYPE_5 p = TYPE_6 . METHOD_3 ( ) ; if ( p == null ) { p = TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_5 ( ) . getId ( ) ) ; } result . METHOD_6 ( p ) ; TYPE_6 . METHOD_7 ( p ) ; } } )  close ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) )  return VAR_2 ; COND VAR_3 . equals ( ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_3 )  return VAR_4 ;  return ( VAR_3 . METHOD_3 ( ) ) - ( ( ( TYPE_2 ) ( VAR_1 ) ) . VAR_3 . METHOD_3 ( ) ) ;
MODIFIER public static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , null , null , null , null , null , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME e TYPE java.lang.String NAME VAR_1 INIT = e . getValue ( ) COND ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 )  VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( 1 , TYPE_3 . METHOD_4 ( VAR_1 ) ) )  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME view  VAR_1 = TYPE_2 . METHOD_2 ( ) TYPE java.lang.String NAME token INIT = view . METHOD_2 ( ) COND ! ( token . equals ( VAR_1 ) )  TYPE_2 . METHOD_3 ( token , false )  TYPE_3 . METHOD_4 ( token ) COND view instanceof TYPE_4  VAR_2 = token  super . METHOD_1 ( view )  view . METHOD_1 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.NameKey NAME VAR_1 TYPE TYPE_2 NAME event TYPE TYPE_3 NAME VAR_2 IN VAR_3 . values ( ) COND METHOD_2 ( VAR_1 , VAR_2 . user )  VAR_4 . METHOD_3 ( event )  METHOD_4 ( event )
MODIFIER public RETURN java.util.List NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE TYPE_2 NAME t INIT = this COND t . METHOD_2 ( )  VAR_1 . add ( ( ( TYPE_3 ) ( t ) ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_1 ( ) )  t = ( ( TYPE_3 ) ( t ) ) . METHOD_5 ( ) . METHOD_4 ( )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1  METHOD_2 ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2 . METHOD_3 ( VAR_1 )  METHOD_4 ( cd . change ( ) )  db . close ( )  db = null TYPE java.io.IOException|com.google.gwtorm.server.OrmException NAME e  METHOD_5 ( STRING_1 , e )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_8 ( STRING_2 , VAR_2 ) . METHOD_9 ( VAR_4 ) . to ( VAR_6 , VAR_7 ) . to ( VAR_8 ) . METHOD_10 ( VAR_9 ) . METHOD_11 ( VAR_10 ) . METHOD_11 ( VAR_3 )  assertThat ( VAR_5 ) . METHOD_12 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 ) . METHOD_4 ( )  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_2 ( VAR_4 , VAR_1 , VAR_3 , STRING_1 ) . METHOD_4 ( ) TYPE TYPE_2 NAME d INIT = util . user ( VAR_4 , VAR_3 )  METHOD_5 ( STRING_2 , d . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 class )  VAR_1 . METHOD_3 ( STRING_1 ) TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . account = user . email  VAR_3 = STRING_2  VAR_4 . projects ( ) . name ( VAR_5 . get ( ) ) . METHOD_4 ( in )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( )  VAR_1 = VAR_2 . METHOD_2 ( c , VAR_3 . create ( c . METHOD_3 ( ) ) )  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME user TYPE TYPE_1<TYPE_2> NAME VAR_1 TYPE TYPE_3 NAME input INIT = TYPE_3 . create ( )  input . METHOD_2 ( user )  TYPE_4 . change ( id ) . view ( STRING_1 ) . put ( user , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_3 ) . toString ( ) )  org.junit.Assert.assertEquals ( STRING_4 , TYPE_1 . METHOD_2 ( STRING_2 , STRING_5 ) . toString ( ) )  org.junit.Assert.assertEquals ( STRING_6 , TYPE_1 . METHOD_2 ( STRING_7 , STRING_8 ) . toString ( ) )
MODIFIER public RETURN AccountGroup.Id NAME METHOD_1 COND ! ( user . METHOD_2 ( ) . METHOD_3 ( ) )  throw new TYPE_2 ( java.lang.String.format ( STRING_1 , user . METHOD_4 ( ) ) ) ; TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . create ( ) TYPE TYPE_5.Id NAME me INIT = user . getAccountId ( )  return VAR_1 . METHOD_5 ( VAR_3 , null , false , null , java.util.Collections.singleton ( me ) , null ) ;
MODIFIER public static RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME message TYPE java.util.Map<TYPE_1,byte[]> NAME VAR_1 TYPE TYPE_3 NAME git INIT = new TYPE_3 ( repo ) COND VAR_1 != null  TYPE_4 . METHOD_2 ( git , VAR_1 )  return git . commit ( ) . METHOD_3 ( message ) . METHOD_4 ( ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE long NAME VAR_1 TYPE long NAME VAR_2 COND ( VAR_2 - VAR_1 ) < ( ( ( INT_1 * INT_2 ) * INT_2 ) * INT_3 )  return new TYPE_1 ( STRING_1 ) . format ( new TYPE_2 ( VAR_2 ) ) ;  return new TYPE_1 ( STRING_2 ) . format ( new TYPE_2 ( VAR_2 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( )  METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_2 INIT = query ( ( STRING_1 + ( VAR_1 . getChangeId ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , TYPE_3 . METHOD_3 ( VAR_2 ) . changeId )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME VAR_1  diff = VAR_1  VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 )  TYPE_3 . METHOD_2 ( VAR_3 . METHOD_3 ( ) , VAR_4 ) COND VAR_3 . METHOD_4 ( ) COND ( VAR_2 . METHOD_5 ( VAR_5 ) ) > 0  VAR_6 . onSuccess ( null )  METHOD_6 ( VAR_1 , VAR_6 )  VAR_6 . onSuccess ( null )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2.Id NAME VAR_1 TYPE java.util.ArrayList<TYPE_1> NAME r INIT = new java.util.ArrayList < TYPE_1 > ( VAR_2 . length ) TYPE TYPE_3 NAME e IN VAR_2  r . add ( e . METHOD_2 ( VAR_1 ) )  return r ;
MODIFIER public static RETURN void NAME put TYPE int NAME id TYPE java.lang.String NAME path TYPE java.lang.String NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2 COND TYPE_3 . equals ( path )  TYPE_4 . METHOD_1 ( id , VAR_1 , VAR_2 )  TYPE_4 . METHOD_2 ( id , path ) . put ( VAR_1 , VAR_2 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx COND ! ( patchSet . METHOD_2 ( ) )  throw new TYPE_3 ( STRING_1 ) ;  patchSet . METHOD_3 ( false ) COND ! ( VAR_1 )  TYPE_4 . METHOD_4 ( change )  ctx . METHOD_5 ( )  ctx . METHOD_6 ( ) . patchSets ( ) . update ( java.util.Collections.singleton ( patchSet ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( in , STRING_1 ) ) TYPE java.lang.String NAME line COND ( line = VAR_1 . METHOD_1 ( ) ) != null  VAR_2 . error ( ( STRING_2 + line ) )  VAR_1 . close ( ) TYPE java.io.IOException NAME e  VAR_2 . METHOD_2 ( STRING_3 , e )
MODIFIER private RETURN boolean NAME isEmpty  return ( ( ( ( ( ( ( approvals . isEmpty ( ) ) && ( ( VAR_1 ) == null ) ) && ( VAR_2 . isEmpty ( ) ) ) && ( reviewers . isEmpty ( ) ) ) && ( ( status ) == null ) ) && ( ( VAR_3 ) == null ) ) && ( ( VAR_4 ) == null ) ) && ( ( VAR_5 ) == null ) ;
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_1 ( ) COND VAR_3 == ( - 1 )  return VAR_2 . equals ( STRING_1 ) ? INT_1 : INT_2 ;  return VAR_3 ;
MODIFIER private RETURN TYPE_1<?extendsTYPE_1<?,java.lang.String,TYPE_2<java.lang.String>>,java.lang.String,TYPE_2<java.lang.String>> NAME METHOD_1 TYPE TYPE_3.Result NAME r  return com.google.common.truth.Truth.assertThat ( ( ( TYPE_2 < java.lang.String > ) ( VAR_1 . changes ( ) . id ( r . getChange ( ) . getId ( ) . get ( ) ) . METHOD_2 ( ) ) ) ) ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = ( VAR_1 != null ) ? VAR_1 . METHOD_2 ( ) : STRING_1 TYPE TYPE_4 NAME c INIT = new TYPE_4 ( VAR_3 , VAR_2 )  c . METHOD_3 ( STRING_2 )  c . METHOD_4 ( false )  c . METHOD_5 ( TYPE_5 . METHOD_6 ( req ) )  c . METHOD_7 ( ( VAR_1 != null ? - 1 : 0 ) )  rsp . METHOD_8 ( c )
MODIFIER public RETURN TYPE_1<java.lang.String,TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME query TYPE TYPE_4 NAME VAR_1 INIT = null TYPE TYPE_5 NAME VAR_2 INIT = null  VAR_1 = VAR_3 . METHOD_2 ( )  VAR_2 = VAR_1 . METHOD_3 ( )  return METHOD_4 ( VAR_2 , query ) ; TYPE TYPE_6 NAME e  throw new TYPE_3 ( STRING_1 , e ) ;  METHOD_5 ( VAR_2 )  METHOD_6 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  TYPE_3 . METHOD_3 ( VAR_1 ) TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( VAR_1 )  org.junit.Assert . METHOD_4 ( VAR_3 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_5 ( ) , VAR_4 )  TYPE_3 . delete ( VAR_1 )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<TYPE_3,TYPE_4> NAME VAR_1 TYPE TYPE_5 NAME p INIT = METHOD_2 ( ) COND ( VAR_2 ) != null  return new TYPE_6 ( VAR_1 , VAR_2 . METHOD_3 ( STRING_1 ) , false ) ;  return new TYPE_6 ( VAR_1 , METHOD_4 ( STRING_2 ) , true ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db COND ( ! ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) && ( METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ) ) || ( METHOD_7 ( db ) )  return false ; COND METHOD_8 ( )  return true ;  return VAR_1 . METHOD_1 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_2 NAME t INIT = METHOD_2 ( STRING_1 )  METHOD_3 ( t )  assertEquals ( VAR_1 , t . METHOD_4 ( ) )  assertEquals ( 1 , t . METHOD_5 ( ) )  TYPE_3 . METHOD_6 ( t . METHOD_7 ( 0 ) , STRING_2 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ( ( TYPE_2 . METHOD_4 ( ) ) || ( TYPE_2 . METHOD_5 ( ) ) ) ) . METHOD_6 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  VAR_1 . METHOD_7 ( name ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_3 , cfg )  VAR_2 . METHOD_8 ( )  VAR_2 . METHOD_7 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<java.lang.String,java.lang.String> NAME config TYPE TYPE_3 NAME req TYPE TYPE_4 NAME VAR_1 INIT = TYPE_5 . METHOD_2 ( ) . METHOD_3 ( VAR_2 )  TYPE_6 . METHOD_4 ( VAR_1 , config , req )  TYPE_6 . METHOD_5 ( VAR_1 , config )  return VAR_1 . create ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId INIT = METHOD_2 ( ) TYPE TYPE_3.ChangeInfo NAME c INIT = METHOD_3 ( ( STRING_1 + changeId ) )  org.junit.Assert . METHOD_4 ( VAR_1 )  org.junit.Assert.assertEquals ( 1 , VAR_1 . size ( ) )  org.junit.Assert.assertEquals ( STRING_2 , VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . message )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 TYPE TYPE_1 NAME ref INIT = VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 , changeId ) ) COND ref == null  return ! ( VAR_3 . METHOD_4 ( VAR_2 ) ) ;  return ref . METHOD_5 ( ) . equals ( VAR_3 . get ( VAR_2 ) ) ;
MODIFIER protected RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = new TYPE_2 < java.lang.String > ( )  VAR_1 . add ( STRING_1 )  VAR_1 . add ( STRING_2 )  VAR_1 . add ( STRING_3 ) TYPE TYPE_3 NAME c IN METHOD_2 ( )  VAR_1 . add ( c . getName ( ) )  return VAR_1 ;
MODIFIER public RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE TYPE_1 NAME db TYPE TYPE_3 NAME s INIT = db . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_1 INIT = s . METHOD_3 ( STRING_1 ) TYPE TYPE_5<java.lang.String> NAME VAR_2 INIT = new TYPE_5 < java.lang.String > ( ) COND VAR_1 . METHOD_4 ( )  VAR_2 . add ( VAR_1 . METHOD_5 ( 1 ) . METHOD_6 ( ) )  return VAR_2 ;  VAR_1 . close ( )  s . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = METHOD_2 ( STRING_2 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( METHOD_3 ( VAR_1 , null , null , null , null ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_4 INIT = insert ( METHOD_3 ( VAR_2 , null , null , null , null ) )  METHOD_4 ( STRING_3 )  METHOD_4 ( STRING_4 , VAR_3 )  METHOD_4 ( STRING_5 , VAR_4 )  METHOD_4 ( STRING_6 , VAR_4 , VAR_3 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE boolean NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2  new TYPE_3 ( ( STRING_1 + ( TYPE_4 . METHOD_2 ( project . get ( ) ) . METHOD_3 ( STRING_2 , STRING_3 ) ) ) ) . METHOD_4 ( STRING_4 ) . METHOD_5 ( TYPE_5 . METHOD_6 ( VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_6 , VAR_7 , VAR_8 ) . METHOD_6 ( VAR_2 ) . to ( VAR_9 ) . METHOD_6 ( VAR_10 ) . to ( VAR_3 )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . toString ( ) COND TYPE_2 . METHOD_3 ( VAR_2 )  return VAR_2 . METHOD_4 ( 0 , VAR_2 . METHOD_5 ( CHAR_1 ) ) ; COND VAR_3 . METHOD_6 ( VAR_1 )  return VAR_3 . METHOD_7 ( VAR_1 ) ;  return null ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME path TYPE TYPE_2 NAME diff COND ! ( path . equals ( STRING_1 ) )  diff . METHOD_2 ( TYPE_3 . create ( path ) )  diff . METHOD_3 ( repo )  diff . METHOD_4 ( true )  diff . format ( VAR_1 , VAR_2 )  diff . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx COND ( VAR_1 ) == null  return ;  METHOD_2 ( ctx . getProject ( ) , VAR_2 , VAR_3 , VAR_1 )  VAR_4 . METHOD_3 ( VAR_2 , VAR_5 , VAR_6 , ctx . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) , VAR_1 . getMessage ( ) , VAR_7 , VAR_8 , ctx . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 ) . METHOD_3 ( TYPE_1 . get ( VAR_1 class , TYPE_2 . METHOD_4 ( VAR_2 ) ) ) COND ( VAR_3 ) == null  METHOD_5 ( STRING_2 ) . METHOD_6 ( new TYPE_3 ( VAR_4 , VAR_5 ) )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . in ( VAR_2 )  bind ( VAR_3 class ) . in ( VAR_2 )  bind ( VAR_4 class ) . to ( VAR_3 class )  install ( new TYPE_1 ( ) )  install ( new TYPE_2 ( ) )  TYPE_3 . METHOD_2 ( binder ( ) , VAR_5 )  METHOD_3 ( VAR_6 , STRING_1 ) . to ( VAR_7 class )  get ( VAR_5 ) . to ( VAR_8 class )
MODIFIER protected RETURN void NAME METHOD_1  install ( new TYPE_1 ( ) )  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 class )  bind ( VAR_4 class ) . METHOD_3 ( VAR_5 class ) . in ( VAR_6 )  bind ( VAR_7 class ) . METHOD_3 ( VAR_8 class ) . in ( VAR_6 )  bind ( VAR_9 . String class ) . METHOD_2 ( VAR_10 class ) . METHOD_3 ( VAR_11 class )
MODIFIER private RETURN boolean NAME METHOD_1 COND VAR_1 . get ( ) . METHOD_2 ( ) TYPE TYPE_1 NAME ctl INIT = VAR_1 . get ( ) . METHOD_3 ( )  return ( ctl . METHOD_4 ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) ) ) || ( ctl . METHOD_5 ( ) ) ;  return false ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME to TYPE TYPE_1 NAME s INIT = ( ( TYPE_1 ) ( db ) ) TYPE TYPE_2 NAME e INIT = new TYPE_2 ( s )  s . METHOD_1 ( e , VAR_1 , to )  e . close ( )
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_1 NAME out TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = cd . change ( ) . currentPatchSetId ( ) TYPE TYPE_4 NAME ctl INIT = cd . METHOD_1 ( ) . METHOD_2 ( VAR_1 . user ( ) )  return format ( out , VAR_1 , cd , VAR_2 . METHOD_3 ( db . get ( ) , cd . notes ( ) , ctl . METHOD_4 ( ) , psId , new com.google.gerrit.reviewdb.client.Account.Id ( VAR_3 ) , null , null ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2  VAR_2 . METHOD_2 ( TYPE_5 )  return ; TYPE TYPE_3 NAME VAR_3 BLOCK BLOCK COND VAR_4 . METHOD_3 ( VAR_1 , repo , commit )  return ;  throw new TYPE_3 ( java.lang.String.format ( STRING_1 , TYPE_5 . METHOD_4 ( ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME id TYPE TYPE_2 NAME p INIT = VAR_2 . METHOD_1 ( VAR_3 , id ) TYPE TYPE_6 NAME VAR_4 IN p . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) COND VAR_1 . METHOD_5 ( ) . equals ( VAR_4 . getProject ( ) . METHOD_5 ( ) )  return new TYPE_1 ( VAR_1 , p . METHOD_3 ( ) ) ;  throw new TYPE_4 ( id ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 )  TYPE_1 . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME r INIT = create ( ) . METHOD_4 ( null )  METHOD_5 ( r )  assertEquals ( VAR_2 . getName ( ) , r . name )  assertEquals ( VAR_2 . METHOD_6 ( ) , r . email )  TYPE_1 . METHOD_7 ( VAR_1 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( ( VAR_2 ) != null ) && ( ( VAR_2 . METHOD_2 ( ) . get ( VAR_1 ) ) != null )  return TYPE_1 . of ( TYPE_2 . of ( VAR_2 . METHOD_2 ( ) . get ( VAR_1 ) ) ) ;  return TYPE_1 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME err INIT = new TYPE_1 ( name )  METHOD_2 ( ) . METHOD_3 ( err )  METHOD_4 ( )  new TYPE_2 ( VAR_1 , VAR_2 , name ) . METHOD_5 ( )  METHOD_6 ( STRING_1 ) TYPE TYPE_1 NAME VAR_3  METHOD_7 ( err , VAR_3 )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = TYPE_1 . METHOD_2 ( )  VAR_1 . add ( METHOD_3 ( STRING_1 , null ) )  changeId = VAR_1 . get ( 0 ) . getChangeId ( )  VAR_1 . add ( METHOD_3 ( STRING_2 , changeId ) )  VAR_1 . add ( METHOD_3 ( STRING_3 , changeId ) )
MODIFIER private static RETURN TYPE_1<java.lang.String,TYPE_2> NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME plugins TYPE TYPE_1<java.lang.String,TYPE_2> NAME VAR_1 INIT = TYPE_3 . create ( ) TYPE TYPE_2 NAME VAR_2 IN plugins  VAR_1 . put ( TYPE_4 . METHOD_2 ( VAR_2 ) , VAR_2 )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_1 )  METHOD_3 ( VAR_3 )  assertEquals ( VAR_1 , VAR_4 )  assertEquals ( new TYPE_1 ( VAR_1 , STRING_1 ) , VAR_5 )
MODIFIER public final RETURN java.lang.String NAME METHOD_1 COND ( METHOD_2 ( ) . METHOD_3 ( ) ) != null  return METHOD_2 ( ) . METHOD_3 ( ) ; COND ( METHOD_2 ( ) . METHOD_4 ( ) ) != ( - 1 )  return TYPE_1 . toString ( METHOD_2 ( ) . METHOD_4 ( ) ) ;  return STRING_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME git INIT = METHOD_2 ( ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = METHOD_3 ( ) TYPE TYPE_2.Result NAME change INIT = METHOD_4 ( git )  submit ( change . getChangeId ( ) ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 INIT = METHOD_3 ( )  org.junit.Assert.assertEquals ( change . METHOD_5 ( ) , VAR_2 . getId ( ) )  org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_6 ( 0 ) )  METHOD_7 ( change . getChangeId ( ) , 1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 TYPE int NAME i INIT = ( VAR_1 . size ( ) ) - 1 COND i >= 0  i --  VAR_2 = new TYPE_2 ( VAR_1 . get ( i ) , VAR_2 )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( event . METHOD_2 ( ) ) ) COND ( VAR_2 ) == VAR_1  METHOD_3 ( ) COND ( VAR_3 ) == VAR_1  VAR_4 = false  METHOD_4 ( )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( VAR_1 ) != null  return METHOD_2 ( VAR_1 ) ; NAME status  return STRING_1 ;  return STRING_2 ;  return ( ( ( ( ( STRING_3 + ( VAR_4 ) ) + STRING_4 ) + ( VAR_5 ) ) + STRING_5 ) + ( VAR_6 ) ) + STRING_6 ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE boolean NAME VAR_1 COND ! VAR_1  return VAR_2 . values ( ) ; TYPE java.util.List<TYPE_2> NAME plugins INIT = new java.util.ArrayList ( VAR_2 . values ( ) )  plugins . METHOD_2 ( VAR_3 . values ( ) )  return plugins ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) )  return ; TYPE TYPE_1[] NAME VAR_2 INIT = VAR_1 . METHOD_4 ( ) COND VAR_2 != null TYPE TYPE_1 NAME d IN VAR_2 COND d . METHOD_5 ( )  TYPE_2 . METHOD_1 ( d )  TYPE_2 . METHOD_6 ( d )  TYPE_2 . METHOD_6 ( VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME commit TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME message TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = TYPE_3 . create ( )  VAR_3 . METHOD_2 ( message )  VAR_3 . METHOD_3 ( VAR_1 )  TYPE_4 . METHOD_4 ( id , commit , STRING_1 ) . METHOD_5 ( VAR_3 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = repo . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) TYPE java.util.Map<java.lang.String,TYPE_1> NAME res INIT = METHOD_5 ( STRING_1 , VAR_1 )  com.google.common.truth.Truth.assertThat ( res ) . METHOD_6 ( 1 )  com.google.common.truth.Truth.assertThat ( res ) . METHOD_7 ( name ) TYPE TYPE_1 NAME d INIT = res . get ( name )  com.google.common.truth.Truth.assertThat ( d . name ) . isEqualTo ( name )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = null TYPE TYPE_3 NAME w IN this COND w instanceof TYPE_2 TYPE TYPE_2 NAME d INIT = ( ( TYPE_2 ) ( w ) ) COND VAR_2 == null  VAR_2 = d COND ( d . METHOD_2 ( ) ) == VAR_1  d . METHOD_1 ( )  return ; COND VAR_2 != null  VAR_2 . METHOD_1 ( )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME git TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) )  return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE org.eclipse.jgit.lib.Repository NAME repo  repo = VAR_1 . METHOD_2 ( change . getProject ( ) ) TYPE TYPE_4 NAME e  throw new TYPE_2 ( change . getProject ( ) , e ) ;  return new TYPE_1 ( repo , change ) ;  repo . close ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( db ) != null TYPE TYPE_2 NAME VAR_2 IN db . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) ) COND ( ! VAR_1 ) && ( ( VAR_2 . getValue ( ) ) == 0 )  continue ;  add ( VAR_3 , VAR_2 . getAccountId ( ) ) TYPE TYPE_3.OrmException NAME err BLOCK BLOCK
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 COND ( METHOD_2 ( VAR_1 ) ) != ( - 1 ) COND ! ( VAR_1 . equals ( VAR_2 ) )  METHOD_3 ( ) TYPE TYPE_1 NAME VAR_3 INIT = VAR_4 . get ( VAR_1 )  VAR_3 . METHOD_4 ( true )  VAR_3 . METHOD_5 ( true )  VAR_2 = VAR_1  TYPE_2 . display ( TYPE_3 . METHOD_6 ( VAR_1 . getParentKey ( ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 MODIFIER private TYPE int NAME VAR_2 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_2 NAME result COND ( ++ ( VAR_2 ) ) == ( VAR_3 . size ( ) )  METHOD_2 ( ) INIT = new TYPE_1 < TYPE_2 > ( ) { private int VAR_2 ; public void onSuccess ( final TYPE_2 result ) { if ( ( ++ ( VAR_2 ) ) == ( VAR_3 . size ( ) ) ) { METHOD_2 ( ) ; } } } TYPE TYPE_3 NAME p IN VAR_3  p . METHOD_3 ( VAR_1 )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . create ( VAR_3 , name , 0 ) COND ! ( VAR_1 . METHOD_2 ( VAR_4 , STRING_1 , VAR_2 ) )  METHOD_3 ( ( ( ( STRING_2 + ( VAR_3 ) ) + STRING_3 ) + name ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( value ( ) ) <= ( ( short ) ( 0 ) )  return ( ( label ( ) ) + CHAR_1 ) + ( value ( ) ) ;  return ( ( label ( ) ) + STRING_1 ) + ( value ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ ] { STRING_1 , STRING_1 , STRING_2 , STRING_2 , STRING_3 , STRING_3 , STRING_4 , STRING_4 , STRING_4 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 , STRING_9 , STRING_10 } TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i += 2  assertEquals ( TYPE_1 . METHOD_2 ( VAR_1 [ i ] ) , VAR_1 [ ( i + 1 ) ] )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group  METHOD_1 ( TYPE_1 . METHOD_2 ( group ) , METHOD_3 ( group , null ) ) . get ( ) TYPE TYPE_2|TYPE_3 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME changeId TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME c TYPE TYPE_3 NAME r INIT = VAR_2 . put ( ( ( ( ( STRING_1 + changeId ) + STRING_2 ) + VAR_1 ) + STRING_3 ) , c )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_2 ( ) )  return METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , VAR_4 class ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME group TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( VAR_2 )  VAR_3 . METHOD_1 ( repo , TYPE_2 . METHOD_3 ( db , group . getId ( ) ) ) TYPE TYPE_3 NAME VAR_4 INIT = TYPE_3 . METHOD_4 ( repo , group . METHOD_5 ( ) ) TYPE TYPE_4<TYPE_1> NAME result INIT = VAR_4 . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( result ) . METHOD_7 ( )  return result . get ( ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1  return new TYPE_4 ( args . rw , VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_5 , VAR_6 , args . repo ) . METHOD_1 ( VAR_1 ) ; TYPE java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER public RETURN java.util.Set<TYPE_1> NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME n IN METHOD_3 ( ) TYPE TYPE_3 NAME p INIT = VAR_2 . METHOD_4 ( n ) COND p != null  VAR_1 . METHOD_5 ( p . METHOD_6 ( ) . METHOD_7 ( ) )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = ctx . getChange ( ) COND METHOD_2 ( )  VAR_1 = VAR_2 . get ( )  VAR_1 . METHOD_3 ( ctx )  return ; COND c . currentPatchSetId ( ) . equals ( psId )  c . METHOD_4 ( METHOD_5 ( ctx ) )  ctx . METHOD_6 ( )
MODIFIER public RETURN TYPE_1<java.lang.String> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( rsrc . METHOD_1 ( ) ) || ( METHOD_2 ( rsrc . getChange ( ) ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;  VAR_1 . METHOD_4 ( rsrc )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = add ( TYPE_2 . METHOD_2 ( ) , user ) TYPE TYPE_1 NAME VAR_2 INIT = add ( TYPE_2 . METHOD_3 ( ) , METHOD_4 ( STRING_1 ) ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_4 . create ( ) . METHOD_5 ( user ) . METHOD_6 ( VAR_5 )  METHOD_7 ( VAR_3 . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) , VAR_6 , STRING_2 , ( ( STRING_3 + ( TYPE_4 . METHOD_10 ( VAR_2 . METHOD_9 ( ) ) ) ) + STRING_4 ) , STRING_5 )
MODIFIER public synchronized RETURN void NAME METHOD_1  VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) )  VAR_3 = VAR_4  METHOD_3 ( false )  VAR_3 = VAR_5 COND ( VAR_6 ) != null  VAR_6 . METHOD_1 ( )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME VAR_1  diff = VAR_1 COND VAR_2 . METHOD_1 ( )  VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) COND ( VAR_3 . METHOD_3 ( VAR_4 ) ) > 0  VAR_5 . onSuccess ( null )  METHOD_4 ( VAR_1 , VAR_5 )  VAR_5 . onSuccess ( null )
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE TYPE_1 NAME ctx  change = new com.google.gerrit.reviewdb.client.Change ( TYPE_2 . METHOD_2 ( commit ) , changeId , ctx . METHOD_3 ( ) . getAccountId ( ) , new TYPE_3 . NameKey ( ctx . getProject ( ) , VAR_1 ) , ctx . METHOD_4 ( ) )  change . METHOD_5 ( TYPE_4 . METHOD_6 ( status , VAR_2 ) )  change . METHOD_7 ( topic )  return change ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME group TYPE boolean NAME create  METHOD_2 ( ) TYPE TYPE_1 NAME r IN VAR_1 COND TYPE_3 . METHOD_3 ( r , group )  return r ; COND create TYPE TYPE_1 NAME r INIT = new TYPE_1 ( group )  VAR_1 . add ( r )  return r ;  return null ;
MODIFIER protected RETURN void NAME METHOD_1 COND ( ( ! ( VAR_1 ) ) && ( ( METHOD_2 ( ) ) != null ) ) && ( STRING_1 . equals ( super . METHOD_3 ( ) ) )  super . METHOD_4 ( METHOD_2 ( ) )  VAR_1 = true COND ( METHOD_5 ( ) ) != null  METHOD_6 ( METHOD_5 ( ) )
MODIFIER private static RETURN java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE java.util.Set<com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = TYPE_3 . METHOD_2 ( VAR_1 . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id IN VAR_1  r . add ( new TYPE_4 ( schema , id ) )  return r ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_2 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( repo ) . METHOD_3 ( ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_4 ( VAR_1 )  com.google.common.truth.Truth.assertThat ( repo ) . METHOD_3 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( VAR_2 . METHOD_5 ( ) ) ) ) . METHOD_6 ( VAR_1 )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE boolean NAME VAR_2 COND VAR_1 == null  return VAR_3 ; COND VAR_2  return TYPE_1 . METHOD_2 ( VAR_1 ) ; COND VAR_1 . equals ( STRING_1 )  return VAR_3 ; COND VAR_1 . equals ( STRING_2 )  return VAR_4 ;  throw new com.google.gwtorm.server.OrmException ( ( STRING_3 + VAR_1 ) ) ;
MODIFIER protected RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  servlet = new TYPE_5 ( new TYPE_6 ( repo . METHOD_2 ( ) ) , new TYPE_7 ( ) , new TYPE_8 ( VAR_1 < TYPE_9 > METHOD_3 ( ) ) , new TYPE_10 ( ) )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME t TYPE TYPE_2 NAME VAR_1  t = t . METHOD_2 ( ) COND t . METHOD_3 ( )  ( ( TYPE_3 ) ( t ) ) . bind ( this , VAR_1 )  return true ;  return TYPE_4 . METHOD_4 ( this , t ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND VAR_2 TYPE TYPE_5 NAME VAR_3 INIT = new TYPE_5 ( VAR_4 )  VAR_3 . METHOD_2 ( false )  VAR_3 . METHOD_3 ( VAR_1 ) COND ( VAR_3 . METHOD_4 ( ) ) && ( ! ( METHOD_5 ( ) ) )  METHOD_6 ( VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_1.ChangeInfo NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_3 NAME event INIT = new TYPE_3 ( change , VAR_1 , VAR_2 ) TYPE TYPE_4 NAME VAR_4 IN VAR_3  VAR_4 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_5 . log , e )
MODIFIER private static RETURN TYPE_1<java.lang.String> NAME METHOD_1 TYPE TYPE_2<TYPE_3> NAME m TYPE TYPE_1<java.lang.String> NAME VAR_1 INIT = new TYPE_1 < java.lang.String > ( m . METHOD_2 ( ) ) TYPE java.lang.String NAME id IN VAR_2  VAR_1 . METHOD_3 ( id )  return VAR_1 ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME r INIT = label ( VAR_1 . METHOD_2 ( ) . get ( ) ) COND ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 ) ) && ( r . isEmpty ( ) )  return false ;  return r . contains ( VAR_1 . value ( ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.PatchSet NAME patchSet TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . revision = patchSet . getRevision ( ) . get ( )  VAR_1 = TYPE_3 . toString ( patchSet . METHOD_2 ( ) )  p . ref = patchSet . getRefName ( )  VAR_2 = METHOD_3 ( patchSet . METHOD_4 ( ) )  VAR_3 = ( patchSet . METHOD_5 ( ) . METHOD_6 ( ) ) / INT_1  return p ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE TYPE_1<TYPE_2> NAME VAR_2 TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_4 INIT = cd . change ( ) . METHOD_4 ( ) TYPE TYPE_2 NAME cm IN VAR_3 COND VAR_1 . equals ( cm . METHOD_5 ( ) )  return true ; COND VAR_4 . equals ( cm . METHOD_5 ( ) )  return false ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_1 NAME VAR_2  METHOD_1 ( util . METHOD_2 ( change ) , util . METHOD_3 ( change . getProject ( ) , patchSet ) , util . METHOD_4 ( VAR_1 ) , VAR_2 ) TYPE TYPE_2|TYPE_3|java.io.IOException|com.google.gwtorm.server.OrmException NAME e  VAR_3 . error ( STRING_1 , e )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = METHOD_2 ( ) TYPE TYPE_1 NAME update INIT = METHOD_3 ( c , VAR_1 ) TYPE TYPE_2<java.lang.String> NAME VAR_2 INIT = new TYPE_2 < > ( )  VAR_2 . add ( STRING_1 )  VAR_2 . add ( STRING_2 )  update . METHOD_4 ( VAR_2 )  update . commit ( ) TYPE TYPE_3 NAME notes INIT = METHOD_5 ( c )  org.junit.Assert.assertEquals ( VAR_2 , notes . METHOD_6 ( ) )
MODIFIER public RETURN TYPE_1 NAME close TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_1 ( ( ( TYPE_3 . contains ( VAR_1 ) ) && ( ! ( TYPE_4 . equals ( VAR_1 ) ) ) ) , STRING_1 , VAR_1 )  METHOD_2 ( )  VAR_2 . append ( STRING_2 ) . append ( VAR_1 ) . append ( CHAR_1 )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + STRING_2  repo . branch ( STRING_3 ) . commit ( ) . add ( STRING_4 , VAR_1 ) . create ( ) TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( STRING_5 )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . contains ( ( STRING_6 + ( ( STRING_7 + STRING_7 ) + STRING_8 ) ) )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . contains ( ( STRING_6 + ( ( STRING_9 + STRING_10 ) + STRING_11 ) ) )
MODIFIER public RETURN PatchSet.Id NAME METHOD_1 COND VAR_1 == ( TYPE_1 . METHOD_2 ( ) )  return METHOD_3 ( db ) ; TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = VAR_2 . METHOD_4 ( )  return METHOD_3 ( db ) ;  db . close ( )  VAR_3  VAR_4 . update ( 1 )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . get ( TYPE_4 . create ( VAR_4 , VAR_1 ) ) COND VAR_2 == null  return TYPE_1 . METHOD_2 ( ) ;  return METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; TYPE java.io.IOException|TYPE_5 NAME e  VAR_5 . METHOD_5 ( ( STRING_1 + VAR_1 ) , e )  return null ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config TYPE TYPE_2 NAME VAR_1  TYPE_4 . sshd ( config , VAR_1 )  TYPE_4 . METHOD_2 ( config , VAR_1 )  TYPE_4 . user ( config , VAR_1 )  TYPE_4 . auth ( config , VAR_1 )  TYPE_4 . METHOD_3 ( config , VAR_1 )  TYPE_4 . repo ( config , VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME input INIT = new TYPE_1 ( ) TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 )  VAR_1 . add ( STRING_1 )  VAR_3 = VAR_1  project ( ) . METHOD_3 ( input )  org.junit.Assert . METHOD_4 ( STRING_2 ) TYPE TYPE_3 NAME e  com.google.common.truth.Truth.assertThat ( e ) . METHOD_5 ( ) . isEqualTo ( METHOD_6 ( TYPE_4 . of ( STRING_1 ) ) )  METHOD_7 ( )
MODIFIER MODIFIER RETURN TYPE_1 NAME create TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . METHOD_1 ( name ) COND ! ( VAR_1 . getProject ( ) . METHOD_2 ( ) . METHOD_3 ( ) )  throw new TYPE_3 ( name ) ;  return new TYPE_1 ( VAR_1 , VAR_3 . get ( ) , VAR_4 . METHOD_4 ( name ) , VAR_5 , VAR_6 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE boolean NAME on  VAR_1 = on COND VAR_1  VAR_2 . METHOD_2 ( getValue ( ) . METHOD_3 ( ) )  VAR_2 . METHOD_2 ( false )  METHOD_4 ( VAR_3 . METHOD_5 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . create ( db , admin . METHOD_2 ( ) ) TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME ps INIT = VAR_1 . to ( git , STRING_1 ) . METHOD_3 ( ) TYPE java.util.List<TYPE_2> NAME VAR_3 INIT = METHOD_4 ( ps )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . isEmpty ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<?extendsTYPE_3> NAME VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = VAR_2 . METHOD_2 ( VAR_4 class ) COND VAR_3 == null  throw new TYPE_5 ( STRING_1 ) ;  bind ( TYPE_6 . key ( VAR_1 , VAR_3 . name ( ) , TYPE_7 . METHOD_3 ( VAR_3 ) ) ) . to ( VAR_2 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e  e . METHOD_2 ( )  TYPE_2 . METHOD_3 ( VAR_1 . line ( ) ) TYPE java.lang.String NAME token INIT = TYPE_3 . METHOD_4 ( psId , VAR_1 . path ( ) ) COND ! ( TYPE_4 . METHOD_5 ( ) )  TYPE_4 . METHOD_6 ( token )  TYPE_4 . display ( token )
MODIFIER public RETURN TYPE_1 NAME METHOD_1  VAR_1 . METHOD_2 ( VAR_2 , VAR_3 . getAccountId ( ) )  return VAR_4 . create ( VAR_2 . getParentKey ( ) ) . METHOD_1 ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE TYPE_2.Key NAME key INIT = new TYPE_2 . Key ( VAR_1 , VAR_2 , VAR_3 )  return VAR_4 . get ( key , new TYPE_3 ( key , VAR_5 , project , repo ) ) ; TYPE TYPE_4 NAME e  VAR_6 . METHOD_2 ( ( ( ( STRING_1 + ( VAR_2 . name ( ) ) ) + STRING_2 ) + project ) , e )  return VAR_7 ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 )  bind ( VAR_4 class ) . METHOD_3 ( VAR_5 )  bind ( TYPE_1 . get ( VAR_6 class , TYPE_2 . METHOD_4 ( STRING_1 ) ) ) . METHOD_5 ( VAR_7 class ) . in ( VAR_8 )  METHOD_6 ( ) . to ( VAR_7 class )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1.Result NAME r INIT = METHOD_3 ( ) TYPE TYPE_2 NAME revision INIT = VAR_1 . changes ( ) . id ( r . getChangeId ( ) ) . METHOD_4 ( ) TYPE TYPE_3 NAME in INIT = new TYPE_3 ( )  VAR_2 = VAR_3 . toString ( )  VAR_4 = true  in . label ( STRING_1 , INT_1 )  VAR_5 . METHOD_5 ( VAR_6 class )  VAR_5 . METHOD_6 ( STRING_2 )  revision . METHOD_7 ( in )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_3 ( VAR_4 , VAR_2 , VAR_3 , STRING_2 ) TYPE TYPE_2 NAME u INIT = user ( VAR_4 )  METHOD_4 ( u )  METHOD_5 ( STRING_3 , u )  METHOD_5 ( STRING_4 , u )  METHOD_5 ( STRING_5 , u )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1.Result NAME VAR_2 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_3 INIT = VAR_4 . changes ( ) . query ( STRING_1 ) . get ( )  org.junit.Assert.assertEquals ( 2 , VAR_3 . size ( ) )  org.junit.Assert.assertEquals ( VAR_2 . getChangeId ( ) , VAR_3 . get ( 0 ) . changeId )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , VAR_3 . get ( 1 ) . changeId )
MODIFIER public RETURN void NAME run COND VAR_1 . METHOD_1 ( )  return ; TYPE TYPE_1 NAME VAR_2 INIT = cm . METHOD_2 ( ) TYPE int NAME size INIT = ( ( VAR_2 . METHOD_3 ( ) ) - ( VAR_2 . METHOD_4 ( ) ) ) + 1 COND ( cm . METHOD_5 ( ) ) == size  return ;  cm . METHOD_6 ( size )  VAR_3 . METHOD_7 ( VAR_4 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( id )  cm . METHOD_1 ( user . getAccountId ( ) )  cm . METHOD_2 ( VAR_2 , result . info )  cm . METHOD_3 ( ) TYPE java.lang.Exception NAME e TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_3 INIT = VAR_2 . getId ( )  VAR_4 . error ( ( STRING_1 + VAR_3 ) , e )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE TYPE_3 NAME VAR_1  METHOD_2 ( res , VAR_1 . type ) TYPE TYPE_4 NAME VAR_2 INIT = METHOD_3 ( req , res , null ) TYPE TYPE_5 NAME out INIT = TYPE_6 . METHOD_4 ( ) . METHOD_5 ( VAR_2 )  VAR_1 . METHOD_6 ( ) . METHOD_7 ( VAR_1 . id ) . METHOD_8 ( out )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 )  METHOD_4 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_5 ( STRING_1 , VAR_1 ) . METHOD_6 ( VAR_3 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_7 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_8 ( VAR_10 ) . METHOD_8 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_5 NAME VAR_4 INIT = VAR_5 . get ( ( ( TYPE_6 ) ( VAR_1 ) ) ) COND ! ( VAR_4 . METHOD_2 ( VAR_6 ) )  VAR_4 . METHOD_3 ( VAR_1 , VAR_2 , VAR_6 )  return ;  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_3 NAME VAR_3 COND ! ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_4 NAME event INIT = new TYPE_4 ( change , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_5 NAME VAR_5 IN VAR_4  VAR_5 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_6 . log , e )
MODIFIER private RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME ref TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE java.lang.String NAME changeId TYPE TYPE_3 NAME VAR_4 INIT = VAR_5 . create ( db , admin . METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , changeId )  return VAR_4 . to ( git , ref ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME req TYPE java.lang.String NAME VAR_1 INIT = req . METHOD_2 ( VAR_2 ) COND ( VAR_1 == null ) || ( ! ( VAR_1 . METHOD_3 ( TYPE_3 ) ) )  return null ;  return new java.lang.String ( TYPE_4 . METHOD_4 ( VAR_1 . METHOD_5 ( TYPE_3 . length ( ) ) ) , TYPE_5 . METHOD_6 ( req ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME rsrc  VAR_1 . METHOD_1 ( rsrc ) TYPE TYPE_3 NAME e  throw new TYPE_2 ( e . getMessage ( ) ) ;  VAR_2 . METHOD_1 ( rsrc . METHOD_2 ( ) . getProject ( ) ) TYPE TYPE_3 NAME e  throw new TYPE_2 ( e . getMessage ( ) ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2.Result NAME result INIT = TYPE_2 . METHOD_2 ( repo , VAR_1 )  org.junit.Assert.assertEquals ( INT_1 , result . METHOD_3 ( ) . getStatus ( ) )  return result . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1.Result NAME VAR_2 INIT = METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_3 INIT = query ( STRING_1 )  org.junit.Assert.assertEquals ( 2 , VAR_3 . size ( ) )  org.junit.Assert.assertEquals ( VAR_2 . getChangeId ( ) , VAR_3 . get ( 0 ) . changeId )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , VAR_3 . get ( 1 ) . changeId )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME token COND TYPE_1 . METHOD_2 ( STRING_1 , token )  return TYPE_2 . METHOD_3 ( STRING_2 , TYPE_1 . METHOD_4 ( token ) ) ; COND TYPE_1 . METHOD_2 ( STRING_3 , token )  return TYPE_2 . METHOD_3 ( STRING_4 , TYPE_1 . METHOD_4 ( token ) ) ; COND TYPE_1 . METHOD_2 ( STRING_5 , token )  return TYPE_2 . METHOD_3 ( STRING_6 , TYPE_1 . METHOD_4 ( token ) ) ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME event TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_2 . METHOD_3 ( )  VAR_4 . METHOD_4 ( ( ( java.lang.String.format ( STRING_1 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ) + ( java.lang.String.format ( STRING_2 , projectName , VAR_1 , event ) ) ) )
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( VAR_1 ) == null  throw new TYPE_5 ( STRING_1 ) ;  VAR_2 . METHOD_1 ( rsrc . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , TYPE_6 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) TYPE TYPE_7|java.io.IOException NAME e  throw new TYPE_5 ( e . getMessage ( ) ) ;  return TYPE_1 . METHOD_6 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME res INIT = METHOD_3 ( STRING_1 )  org.junit.Assert.assertEquals ( ( ( ( ( id ( STRING_2 ) ) + STRING_3 ) + ( METHOD_4 ( STRING_2 ) ) ) + STRING_4 ) , res . METHOD_5 ( ) )
MODIFIER public RETURN TYPE_1 NAME create COND ! ( VAR_1 )  VAR_1 = true TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME c INIT = METHOD_1 ( )  VAR_2 . create ( c ) TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( STRING_1 , e ) ; TYPE TYPE_2 NAME e  throw new com.google.gwtorm.server.OrmException ( STRING_1 , e ) ;  c . close ( )  return this ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME VAR_1 INIT = new TYPE_1 . ChangeInfo ( )  VAR_1 . project = project . get ( ) TYPE TYPE_2 NAME r INIT = VAR_2 . METHOD_2 ( STRING_1 , VAR_1 )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) )  org.junit.Assert . METHOD_4 ( r . METHOD_5 ( ) . contains ( STRING_2 ) )
MODIFIER public RETURN boolean NAME METHOD_1 COND ( VAR_1 ) != null  return true ; COND ! ( VAR_2 . METHOD_1 ( ) )  return false ; TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME r INIT = VAR_2 . METHOD_2 ( ) COND r . get ( ) . METHOD_3 ( VAR_3 )  VAR_1 = r  return true ;  VAR_2 = VAR_4 . Collections < com.google.gerrit.reviewdb.client.Project.NameKey > METHOD_4 ( ) . METHOD_5 ( )  return false ;
MODIFIER MODIFIER RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2.NameKey NAME branch TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE int NAME VAR_2 COND ( VAR_1 . size ( ) ) > VAR_2  return METHOD_2 ( repo , db , branch , VAR_1 ) ;  return METHOD_3 ( branch , VAR_1 ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = id TYPE java.util.List<TYPE_8> NAME VAR_3 INIT = put . get ( ) . apply ( VAR_1 , in ) COND ( VAR_3 . size ( ) ) == 1  return VAR_3 . get ( 0 ) ;  throw new TYPE_9 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_3 ( STRING_1 )  TYPE_3 . METHOD_4 ( VAR_1 )  TYPE_3 . METHOD_5 ( VAR_2 ) TYPE TYPE_4 NAME VAR_3 INIT = new TYPE_4 ( VAR_1 )  org.junit.Assert . METHOD_6 ( VAR_4 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_7 ( ) , VAR_5 )  TYPE_3 . delete ( VAR_2 )  TYPE_3 . delete ( VAR_1 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_2> NAME VAR_1 INIT = ( ( java.util.Map < java.lang.String , TYPE_2 > ) ( VAR_2 . get ( ) . apply ( new TYPE_3 ( ) ) ) ) TYPE TYPE_4<java.lang.String,TYPE_2> NAME VAR_3 IN VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_4 INIT = VAR_3 . getValue ( )  VAR_4 . name = VAR_3 . getKey ( )  return VAR_1 . values ( ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = VAR_1 . change ( ) COND c == null  return false ; TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_2 INIT = c . currentPatchSetId ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME p IN VAR_1 . approvals ( ) . values ( ) COND ( p . METHOD_2 ( ) . equals ( VAR_2 ) ) && ( ( p . getValue ( ) ) != 0 )  return true ;  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) . append ( TYPE_2 . ps ( ) ) . METHOD_6 ( ) . METHOD_3 ( ) . append ( TYPE_2 . commit ( ) ) . METHOD_6 ( ) . METHOD_3 ( ) . append ( TYPE_2 . METHOD_7 ( ) ) . METHOD_6 ( ) . METHOD_3 ( ) . append ( TYPE_2 . METHOD_8 ( ) ) . METHOD_6 ( ) . METHOD_9 ( )
MODIFIER public RETURN TYPE_1.Change NAME update TYPE TYPE_1.Change NAME change COND change . getStatus ( ) . METHOD_1 ( ) COND ( VAR_1 ) != null  change . METHOD_2 ( ( VAR_1 . isEmpty ( ) ? null : VAR_1 ) )  change . METHOD_3 ( VAR_2 )  change . METHOD_4 ( result . info )  TYPE_2 . METHOD_5 ( change )  return change ;  return null ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 , VAR_3 )  METHOD_3 ( VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_4 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_1 ( ) COND ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) && ( config . METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_4 INIT = new TYPE_1 ( new TYPE_2 ( VAR_5 , VAR_6 ) )  VAR_7 . set ( VAR_8 . create ( null , TYPE_3 . METHOD_4 ( ) , VAR_4 ) . METHOD_5 ( INT_1 , VAR_9 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2 NAME rsp TYPE TYPE_3 NAME VAR_1 TYPE TYPE_5 NAME s INIT = ( user . get ( ) . METHOD_2 ( ) ) ? VAR_2 . get ( ) : null  TYPE_6 . METHOD_3 ( ( ( TYPE_7 ) ( req ) ) , ( ( TYPE_8 . HttpServletResponse ) ( rsp ) ) , s )  VAR_1 . METHOD_1 ( req , rsp )
MODIFIER public RETURN AccountGroup.Id NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . create ( ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME me INIT = user . getAccountId ( )  return VAR_1 . METHOD_2 ( VAR_3 , null , VAR_4 , null , java.util.Collections.singleton ( me ) , null ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME ctl TYPE com.google.gerrit.reviewdb.client.PatchSet NAME in  VAR_1 = VAR_2 . create ( METHOD_2 ( VAR_3 ) ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_4 . METHOD_3 ( ctl . getProject ( ) . METHOD_4 ( ) ) TYPE TYPE_1 NAME VAR_5 INIT = METHOD_5 ( ctl , VAR_6 . create ( db . get ( ) , ctl ) , in , repo )  VAR_1 . METHOD_6 ( )  return VAR_5 ;
MODIFIER public RETURN boolean NAME METHOD_1 COND METHOD_2 ( VAR_1 , ( ( short ) ( 1 ) ) )  return true ; COND ( getRefName ( ) . equals ( TYPE_1 . METHOD_3 ( 0 , ( ( TYPE_1 . length ( ) ) - 1 ) ) ) ) && ( METHOD_4 ( ) . METHOD_1 ( ) )  return true ;  return false ;
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME project TYPE TYPE_3 NAME input COND ( ( input == null ) || ( ( VAR_1 ) == null ) ) || ( VAR_1 . isEmpty ( ) )  throw new TYPE_5 ( STRING_1 ) ;  VAR_2 . create ( project ) . refs ( VAR_1 ) . delete ( )  return TYPE_1 . METHOD_1 ( ) ;  METHOD_2 ( 2 ) TYPE TYPE_6 NAME VAR_3
MODIFIER private RETURN void NAME plugins TYPE TYPE_1 NAME w TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_1 ( ) TYPE TYPE_3 NAME u IN plugins  VAR_1 . add ( java.lang.String.format ( STRING_1 , u . METHOD_2 ( ) , u . METHOD_3 ( ) ) ) COND ! ( VAR_1 . isEmpty ( ) )  w . METHOD_4 ( ( ( VAR_2 ) + STRING_2 ) )  METHOD_5 ( VAR_1 , w )  w . METHOD_4 ( STRING_3 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( config . METHOD_3 ( ) ) . METHOD_4 ( VAR_1 )  TYPE_1 . METHOD_2 ( config . METHOD_5 ( ) ) . METHOD_4 ( VAR_1 )  TYPE_1 . METHOD_2 ( config . METHOD_6 ( ) ) . METHOD_4 ( VAR_1 )  TYPE_1 . METHOD_2 ( config . METHOD_7 ( ) ) . METHOD_4 ( VAR_2 )  TYPE_1 . METHOD_2 ( config . METHOD_8 ( ) ) . METHOD_4 ( VAR_2 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3<TYPE_2> NAME VAR_3 INIT = new TYPE_3 < TYPE_2 > ( METHOD_2 ( VAR_1 ) )  VAR_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_2 ) )  return new TYPE_5 < TYPE_2 > ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event COND event instanceof TYPE_2 TYPE TYPE_2 NAME VAR_1 INIT = ( ( TYPE_2 ) ( event ) )  VAR_2 . put ( VAR_3 , VAR_4 ) COND event instanceof TYPE_3 TYPE TYPE_3 NAME e INIT = ( ( TYPE_3 ) ( event ) ) TYPE TYPE_4 NAME r INIT = VAR_5  VAR_6 . put ( ( ( ( r . project ) + STRING_1 ) + ( VAR_7 ) ) , VAR_8 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( 0 , TYPE_1 . METHOD_2 ( TYPE_2 . r ( TYPE_2 . b ( 0 ) ) ) )  assertEquals ( INT_1 , TYPE_1 . METHOD_2 ( TYPE_2 . r ( TYPE_2 . b ( INT_1 ) ) ) )  assertEquals ( INT_2 , TYPE_1 . METHOD_2 ( TYPE_2 . r ( TYPE_2 . b ( ( INT_3 | INT_4 ) , 1 ) ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_1 )  org.junit.Assert . METHOD_3 ( VAR_3 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_4 ( ) , VAR_4 )  org.junit.Assert.assertEquals ( VAR_1 . METHOD_5 ( STRING_1 ) . METHOD_4 ( ) , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( project , VAR_1 , VAR_2 , STRING_1 ) TYPE org.eclipse.jgit.lib.ObjectId NAME id INIT = repo . branch ( STRING_2 ) . commit ( ) . create ( ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = repo . METHOD_4 ( )  org.junit.Assert . METHOD_5 ( VAR_3 . METHOD_6 ( db , rw , rw . parseCommit ( id ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  change = ctx . getChange ( ) TYPE TYPE_2 NAME update INIT = ctx . METHOD_2 ( )  VAR_1 = ( change . getStatus ( ) ) == ( VAR_2 ) COND VAR_1  change . METHOD_3 ( VAR_3 )  update . METHOD_3 ( change . getStatus ( ) )  TYPE_3 . METHOD_4 ( change )  ctx . METHOD_5 ( ) . changes ( ) . update ( java.util.Collections.singleton ( change ) )
MODIFIER public static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , null , null , null , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE boolean NAME VAR_1 COND ! ( TYPE_1 . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( id . get ( ) , VAR_1 ) COND VAR_3 . add ( VAR_2 )  VAR_4 . METHOD_3 ( VAR_2 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE java.lang.String NAME path INIT = VAR_2 . get ( VAR_1 ) . path ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  TYPE_4 . display ( TYPE_5 . METHOD_2 ( VAR_3 . getParentKey ( ) ) ) MODIFIER public RETURN void NAME METHOD_3 TYPE TYPE_6 NAME VAR_4 BLOCK BLOCK  TYPE_1 . delete ( VAR_3 . getParentKey ( ) . get ( ) , path , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( TYPE_3 result ) { TYPE_4 . display ( TYPE_5 . METHOD_2 ( VAR_3 . getParentKey ( ) ) ) ; } public void METHOD_3 ( TYPE_6 VAR_4 ) { } } )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.util.ArrayList<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( ) TYPE TYPE_2 NAME c IN VAR_1 COND c . METHOD_2 ( )  r . METHOD_3 ( c . METHOD_4 ( ) )  r . add ( c )  return r ;
MODIFIER private static RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE byte[] NAME data INIT = new byte [ VAR_2 . METHOD_2 ( ) . get ( ) . METHOD_3 ( ) ] TYPE TYPE_3 NAME in INIT = VAR_1 . METHOD_4 ( VAR_2 )  TYPE_4 . METHOD_5 ( in , data , 0 , data . length )  in . close ( )  return data ;
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_2 NAME user TYPE TYPE_1 NAME out TYPE TYPE_3 NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = cd . change ( ) . currentPatchSetId ( )  return format ( user , out , VAR_1 , cd , VAR_2 . METHOD_1 ( db . get ( ) , cd . notes ( ) , VAR_1 . user ( ) , psId , new com.google.gerrit.reviewdb.client.Account.Id ( VAR_3 ) , null , null ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( )  METHOD_3 ( VAR_1 . METHOD_4 ( ) ) TYPE TYPE_3 NAME VAR_2 INIT = new TYPE_3 ( VAR_1 )  METHOD_3 ( VAR_3 )  assertEquals ( VAR_1 , VAR_4 )  VAR_1 . delete ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( server , admin ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 )  METHOD_2 ( VAR_2 . get ( ) )  VAR_1 . close ( ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . projects ( ) . name ( VAR_5 . get ( ) ) . METHOD_3 ( VAR_2 . get ( ) ) . get ( )  TYPE_3 . METHOD_4 ( VAR_6 . get ( VAR_2 ) . getProject ( ) , VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME t TYPE TYPE_2 NAME VAR_1 COND t . METHOD_2 ( )  return ( ( TYPE_3 ) ( t ) ) . METHOD_1 ( this , VAR_1 ) ; COND ! ( t . METHOD_3 ( ) )  return false ;  return ( this . VAR_2 ) == ( ( ( TYPE_4 ) ( t ) ) . value ( ) ) ;
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 class )  bind ( VAR_3 class )  com.google.gerrit.extensions.registration.DynamicSet . bind ( binder ( ) , VAR_4 class ) . to ( VAR_5 class )  TYPE_1 . METHOD_2 ( binder ( ) , VAR_6 class )  TYPE_1 . bind ( binder ( ) , VAR_6 class ) . to ( VAR_7 class )
MODIFIER MODIFIER RETURN TYPE_1 NAME create TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3.NameKey NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5 NAME rw TYPE TYPE_6 NAME VAR_4 TYPE TYPE_7 NAME VAR_5 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_8 NAME VAR_6 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.util.Set<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_7 TYPE java.util.Set<TYPE_9> NAME VAR_8 TYPE TYPE_10 NAME VAR_9 TYPE TYPE_11 NAME VAR_10 TYPE TYPE_12<TYPE_13,com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_11 TYPE TYPE_14 NAME VAR_12 TYPE boolean NAME VAR_13
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( ) COND 0 <= VAR_1 TYPE java.lang.String NAME n INIT = VAR_2 . getValue ( VAR_1 )  VAR_2 . METHOD_3 ( false )  TYPE_2 . display ( TYPE_3 . METHOD_4 ( changeId , n ) , new TYPE_4 ( changeId , n ) )
MODIFIER public RETURN com.google.gerrit.reviewdb.client.PatchSet NAME METHOD_1 COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( ) COND c == null  return null ; TYPE com.google.gerrit.reviewdb.client.PatchSet NAME p IN METHOD_2 ( ) COND p . getId ( ) . equals ( c . currentPatchSetId ( ) )  VAR_1 = p  return p ;  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . put ( ( ( STRING_1 + ( VAR_2 . get ( ) ) ) + STRING_2 ) , METHOD_2 ( project . get ( ) ) )  org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) )  r . METHOD_4 ( )
MODIFIER protected RETURN void NAME METHOD_1  rpc ( VAR_1 class )  rpc ( VAR_2 class )  rpc ( VAR_3 class )  rpc ( VAR_4 class )  rpc ( VAR_5 class )  rpc ( VAR_6 class )  rpc ( VAR_7 class )  rpc ( VAR_8 class )  rpc ( VAR_9 class )  install ( new TYPE_1 ( ) )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE java.lang.String NAME cmd INIT = STRING_1 + VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_4 ( )  TYPE_4 . METHOD_5 ( VAR_1 , cmd , VAR_3 ) TYPE java.io.IOException NAME e  VAR_4 . error ( java.lang.String.format ( ( STRING_2 + ( ( STRING_3 + STRING_4 ) + STRING_5 ) ) , VAR_1 , e , cmd , VAR_3 ) , e )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND TYPE_2 . equals ( VAR_1 . METHOD_2 ( ) )  return true ;  return VAR_2 . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; TYPE TYPE_3 NAME e  VAR_3 . METHOD_4 ( STRING_1 , e )  return true ;
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME update TYPE com.google.gerrit.reviewdb.client.Change NAME c  c . METHOD_1 ( VAR_1 )  c . METHOD_2 ( VAR_2 ) COND ! ( VAR_3 . equals ( c . currentPatchSetId ( ) ) )  c . METHOD_3 ( VAR_4 . get ( db , VAR_3 ) ) TYPE TYPE_1 NAME VAR_5  METHOD_4 ( ( STRING_1 + VAR_3 ) , VAR_5 )  TYPE_2 . METHOD_5 ( c )  return c ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 INIT = change . getProject ( )  return VAR_2 . METHOD_1 ( VAR_1 , user ) . METHOD_1 ( change ) ; TYPE TYPE_4 NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ;
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) COND VAR_2 . METHOD_6 ( TYPE_3 )  return VAR_2 . METHOD_7 ( TYPE_3 . length ( ) ) ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  VAR_1 = TYPE_1 . METHOD_2 ( )  VAR_2 = this . METHOD_3 ( ) . METHOD_4 ( )  VAR_2 = VAR_2 . METHOD_5 ( 0 , ( ( VAR_2 . length ( ) ) - INT_1 ) )  VAR_3 = TYPE_2 . METHOD_6 ( VAR_2 , VAR_1 )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3.ProjectConfig NAME config TYPE TYPE_4 NAME VAR_2 TYPE boolean NAME VAR_3 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = config . commit ( VAR_2 )  VAR_4 . METHOD_2 ( config . getProject ( ) . METHOD_3 ( ) , VAR_5 , base , commit . getId ( ) , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) )  VAR_6 . METHOD_7 ( config . getProject ( ) )  return VAR_7 . create ( projectName ) . METHOD_8 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  VAR_1 = group ( STRING_1 )  VAR_2 = group ( STRING_2 )  VAR_3 = group ( STRING_3 )  METHOD_2 ( INT_1 ) TYPE TYPE_1 NAME VAR_4 TYPE TYPE_2 NAME to TYPE TYPE_3 NAME revision  VAR_5 = user ( STRING_4 , STRING_5 , VAR_1 )  VAR_6 = user ( STRING_6 , STRING_7 , VAR_2 )  VAR_7 = user ( STRING_8 , STRING_9 , VAR_1 , VAR_2 )
MODIFIER private RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME VAR_1 TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( VAR_1 ) COND ! ( TYPE_4 . METHOD_3 ( VAR_3 ) )  VAR_2 = VAR_2 . METHOD_4 ( new TYPE_5 ( VAR_3 ) ) COND ! ( TYPE_4 . METHOD_3 ( VAR_4 ) )  VAR_2 = VAR_2 . METHOD_4 ( new TYPE_6 ( VAR_4 ) )  return VAR_2 ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME n TYPE java.lang.String NAME VAR_1 COND TYPE_1 . equals ( VAR_1 )  return STRING_1 + ( n . toString ( ) ) ;  return ( ( STRING_1 + ( n . toString ( ) ) ) + STRING_2 ) + VAR_1 ;
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new java.util.ArrayList < TYPE_1 > ( values . size ( ) ) TYPE TYPE_2 NAME VAR_2 IN values  VAR_1 . add ( TYPE_1 . METHOD_2 ( VAR_2 . getValue ( ) ) )  java.util.Collections . METHOD_3 ( VAR_1 )  java.util.Collections . METHOD_4 ( VAR_1 )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey> NAME projects TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project IN projects  VAR_1 . METHOD_2 ( project , true ) TYPE TYPE_3 NAME VAR_2  METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . project ( ) ) ) + STRING_2 ) + STRING_3 ) )  METHOD_4 ( VAR_2 . project ( ) ) TYPE java.io.IOException NAME e  throw new TYPE_2 ( ( STRING_4 + project ) , e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME revision NAME type  throw new TYPE_3 ( java.lang.String.format ( STRING_1 , type ) ) ;  this . revision = TYPE_4 . METHOD_2 ( revision )  return this ;
MODIFIER public RETURN int NAME METHOD_1 TYPE TYPE_1 NAME key TYPE TYPE_2 NAME value TYPE int NAME size INIT = ( INT_1 + ( INT_2 * INT_3 ) ) + ( 2 * INT_4 ) TYPE java.lang.String NAME p IN value . METHOD_2 ( )  size += p . length ( )  size += ( value . METHOD_2 ( ) . size ( ) ) - 1  return size ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1.Account NAME result TYPE TYPE_1.Account NAME me INIT = TYPE_2 . METHOD_2 ( )  me . METHOD_3 ( result . METHOD_4 ( ) )  me . METHOD_5 ( result . METHOD_6 ( ) )  me . METHOD_7 ( result . METHOD_8 ( ) )  TYPE_2 . METHOD_9 ( ) COND ( VAR_1 ) != null  VAR_1 . display ( me )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 COND VAR_1 != null TYPE TYPE_3<TYPE_1> NAME VAR_3 IN TYPE_4 . METHOD_2 ( ) COND VAR_3 . METHOD_3 ( VAR_1 ) TYPE byte[] NAME VAR_4 INIT = METHOD_4 ( VAR_3 , VAR_1 ) COND ! ( METHOD_5 ( VAR_3 , VAR_2 , VAR_4 ) )  db . delete ( VAR_4 )
MODIFIER MODIFIER RETURN Project.NameKey NAME projectName TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 INIT = repo . METHOD_1 ( ) . METHOD_2 ( ) COND VAR_1 . METHOD_3 ( VAR_2 ) TYPE java.lang.String NAME p INIT = VAR_2 . METHOD_4 ( VAR_1 ) . toString ( ) TYPE java.lang.String NAME n INIT = p . METHOD_5 ( 0 , ( ( p . length ( ) ) - ( STRING_1 . length ( ) ) ) )  return new com.google.gerrit.reviewdb.client.Project.NameKey ( n ) ;  VAR_3 . METHOD_6 ( ( STRING_2 + VAR_1 ) )  return null ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME project TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2  return VAR_3 . get ( new TYPE_3 . Key ( project , repo , VAR_1 , VAR_2 , VAR_4 ) ) ; TYPE TYPE_4 NAME e  VAR_5 . METHOD_2 ( ( ( ( STRING_1 + ( VAR_2 . name ( ) ) ) + STRING_2 ) + ( project . getProject ( ) . getName ( ) ) ) , e )  return VAR_6 ;
MODIFIER public RETURN void NAME run COND ! ( VAR_1 . METHOD_1 ( ) ) TYPE int NAME VAR_2 INIT = ( TYPE_1 . METHOD_2 ( ) ) - ( ( TYPE_2 . METHOD_3 ( ) ) + INT_1 )  VAR_3 . METHOD_4 ( VAR_2 )  VAR_4 . METHOD_4 ( VAR_2 )  METHOD_5 ( diff )  VAR_5 . METHOD_5 ( VAR_6 , VAR_1 . METHOD_6 ( ) )  VAR_7 . METHOD_5 ( VAR_1 . METHOD_7 ( ) , diff )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) == 0  VAR_2 . METHOD_2 ( VAR_3 . get ( 0 ) )  METHOD_3 ( ) . METHOD_4 ( VAR_2 )  VAR_1 = VAR_2 . METHOD_5 ( )  VAR_4 = VAR_2 . METHOD_6 ( )  METHOD_3 ( ) . METHOD_7 ( VAR_2 )  METHOD_3 ( ) . METHOD_8 ( ) . METHOD_9 ( ( ( VAR_1 ) * ( VAR_3 . size ( ) ) ) , VAR_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE int NAME row TYPE TYPE_1 NAME s IN VAR_1 COND row < ( VAR_2 )  ( VAR_2 ) -- COND row < ( VAR_3 )  ( VAR_3 ) --  super . METHOD_1 ( row )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2 . METHOD_2 ( VAR_1 )  METHOD_3 ( cd . change ( ) ) TYPE java.io.IOException|com.google.gwtorm.server.OrmException NAME e  METHOD_4 ( STRING_1 , e )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( VAR_2 . get ( ) ) TYPE TYPE_1 NAME VAR_3 INIT = new TYPE_1 ( VAR_1 , VAR_4 ) COND VAR_3 . METHOD_3 ( )  return VAR_3 ;  throw new TYPE_2 ( STRING_1 ) ; TYPE java.io.IOException NAME VAR_5  throw new TYPE_2 ( STRING_2 ) ;
MODIFIER public RETURN TYPE_1 NAME format TYPE TYPE_1 NAME out TYPE TYPE_2 NAME ctl TYPE TYPE_3 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId INIT = ctl . getChange ( ) . currentPatchSetId ( )  return format ( out , ctl , VAR_2 . METHOD_1 ( db . get ( ) , ctl , psId , VAR_3 ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( VAR_2 . get ( ) ) )  VAR_3 . METHOD_3 ( )  VAR_3 . add ( VAR_1 )  METHOD_4 ( )
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 INIT = 0 COND ( VAR_2 ) != null TYPE TYPE_1 NAME r IN VAR_2 . METHOD_2 ( )  VAR_3 . METHOD_3 ( java.lang.String.format ( STRING_1 , r ) )  VAR_1 = VAR_2 . METHOD_4 ( ) . size ( )  VAR_2 . METHOD_5 ( )  VAR_2 = null  return VAR_1 ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME msg TYPE TYPE_3 NAME c TYPE TYPE_4 NAME err COND err != null  TYPE_5 . METHOD_2 ( req , err )  TYPE_6 . METHOD_3 ( req , res , null , c )  res . METHOD_4 ( VAR_1 )  TYPE_6 . METHOD_5 ( req , res , msg )
MODIFIER private RETURN boolean NAME METHOD_1 COND VAR_1 . get ( ) . METHOD_2 ( )  return ( VAR_2 . user ( VAR_1 ) . METHOD_3 ( new TYPE_1 ( VAR_3 , VAR_4 ) ) ) && ( VAR_2 . user ( VAR_1 ) . METHOD_3 ( VAR_5 ) ) ;  return false ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_4 NAME ctx INIT = VAR_2 . METHOD_2 ( ) TYPE TYPE_5 NAME schema INIT = VAR_2 . METHOD_3 ( ctx )  VAR_2 . METHOD_4 ( schema , ctx , VAR_1 , false )  return true ; TYPE TYPE_6 NAME e  return false ;  ctx . close ( ) TYPE TYPE_2 NAME e  VAR_3 . METHOD_5 ( STRING_1 , e )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME m  VAR_1 . set ( ( base != null ? new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , base . METHOD_1 ( ) ) : null ) , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , VAR_2 . METHOD_1 ( ) ) , VAR_3 , VAR_4 , VAR_5 )  VAR_1 . METHOD_2 ( m , VAR_6 , VAR_7 . get ( 0 ) , VAR_8 . get ( 0 ) , VAR_9 )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1  VAR_2 . METHOD_2 ( ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey> NAME n INIT = new TYPE_2 < com.google.gerrit.reviewdb.client.Project.NameKey > ( VAR_3 )  n . add ( VAR_1 )  VAR_3 = java.util.Collections . METHOD_3 ( n )  VAR_2 . METHOD_4 ( )
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME ctx TYPE TYPE_4 NAME VAR_1 INIT = new TYPE_4 ( ) TYPE TYPE_5<TYPE_6> NAME res TYPE TYPE_7 NAME VAR_2 INIT = ctx . METHOD_2 ( STRING_1 ) TYPE TYPE_8 NAME VAR_3 INIT = VAR_2 . get ( STRING_2 ) COND ( VAR_3 != null ) && ( VAR_3 . contains ( STRING_3 ) )  return new TYPE_9 ( VAR_2 ) ;  return VAR_4 ;
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm  cm = VAR_1 . create ( change )  cm . METHOD_1 ( me )  cm . METHOD_2 ( ps , info )  cm . METHOD_3 ( reviewers )  cm . METHOD_4 ( VAR_2 )  cm . METHOD_5 ( ) TYPE TYPE_2 NAME e  VAR_3 . error ( ( STRING_1 + ( change.getId ( ) ) ) , e )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 . getValue ( VAR_2 . METHOD_3 ( ) ) )  VAR_3 . METHOD_4 ( VAR_1 )  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 . name ( ) . METHOD_7 ( ) )
MODIFIER public RETURN TYPE_1<TYPE_2.NameKey,com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_3<TYPE_2.NameKey,com.google.gerrit.server.query.change.ChangeData> NAME VAR_1 INIT = TYPE_4 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2  VAR_1 . put ( cd . change ( ) . METHOD_2 ( ) , cd )  return VAR_1 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_2<?extendsTYPE_1> NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_1 NAME VAR_5 IN VAR_4 TYPE boolean NAME VAR_6 INIT = VAR_4 . METHOD_4 ( ) . equals ( VAR_5 )  METHOD_1 ( VAR_5 , ( VAR_2 + 1 ) , VAR_6 )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cfg  return TYPE_1 . create ( cfg . METHOD_2 ( STRING_1 , null , STRING_2 , 0 ) , cfg . METHOD_2 ( STRING_1 , null , STRING_3 , 0 ) , cfg . METHOD_2 ( STRING_1 , null , STRING_4 , 0 ) , cfg . METHOD_2 ( STRING_1 , null , STRING_5 , VAR_1 ) ) ;
MODIFIER public static RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> NAME VAR_1 TYPE java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = new java.util.ArrayList < > ( INT_1 ) TYPE com.google.gerrit.reviewdb.client.Change.Status NAME e IN TYPE_3 . values ( ) COND e . METHOD_2 ( )  r . add ( new TYPE_4 ( e ) )  return ( r . size ( ) ) == 1 ? r . get ( 0 ) : METHOD_3 ( r ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( db , VAR_4 . create ( db , c ) ) . values ( )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 ) ) )
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME r INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( ( ( TYPE_3 ) ( r ) ) ) COND VAR_2 == null  return null ;  return TYPE_4 . METHOD_4 ( VAR_3 , VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME git INIT = METHOD_2 ( ) TYPE TYPE_2.Result NAME change INIT = METHOD_3 ( git )  submit ( change . getChangeId ( ) )  METHOD_4 ( git , false )  com.google.common.truth.Truth.assertThat ( METHOD_5 ( ) . METHOD_6 ( 0 ) ) . isEqualTo ( change . METHOD_7 ( ) . METHOD_6 ( 0 ) )
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_2 ( VAR_2 )  return METHOD_1 ( repo , changeId ) ; TYPE java.io.IOException NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME id TYPE java.lang.String NAME VAR_2  return VAR_1 ? TYPE_2 . METHOD_2 ( id . getParentKey ( ) , VAR_2 ) : TYPE_3 . revision ( id ) . view ( STRING_1 ) . id ( VAR_2 ) . view ( STRING_2 ) ;
MODIFIER public RETURN java.util.List<com.google.gerrit.reviewdb.client.Change> NAME submit TYPE TYPE_1 NAME rsrc TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE java.lang.String NAME topic INIT = rsrc . getChange ( ) . METHOD_1 ( ) COND ( VAR_3 ) && ( ! ( TYPE_4 . METHOD_2 ( topic ) ) )  return METHOD_3 ( rsrc , VAR_1 , VAR_2 , topic ) ;  return TYPE_5 . METHOD_4 ( METHOD_5 ( rsrc , VAR_1 , VAR_2 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_2 NAME user TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = VAR_1 . create ( db , change . getProject ( ) , change.getId ( ) )  cd . METHOD_2 ( user ) COND TYPE_5 . METHOD_3 ( cfg )  return METHOD_4 ( db , new TYPE_1 ( cd ) , user ) ;  return METHOD_5 ( db , new TYPE_1 ( cd ) , user ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE boolean NAME VAR_3  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_2<?extendsTYPE_1> NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) TYPE int NAME i INIT = 0 TYPE TYPE_1 NAME VAR_5 IN VAR_4 TYPE boolean NAME VAR_6 INIT = ( ++ i ) == ( VAR_4 . size ( ) )  METHOD_1 ( VAR_5 , ( VAR_2 + 1 ) , VAR_6 )
MODIFIER public RETURN void NAME METHOD_1  db . create ( ) TYPE TYPE_2 NAME VAR_1 INIT = db . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = db . METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 )  assertEquals ( VAR_3 , VAR_4 )  assertEquals ( VAR_5 , VAR_6 )  assertEquals ( VAR_7 , VAR_8 )  assertEquals ( VAR_9 , VAR_10 )  assertEquals ( VAR_11 , VAR_12 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME cfg INIT = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( )  VAR_3 = TYPE_2 . METHOD_4 ( cfg . METHOD_5 ( ) . get ( STRING_1 ) )  VAR_3 . METHOD_6 ( false )  VAR_3 . METHOD_7 ( false )  VAR_3 . METHOD_8 ( false )  VAR_3 . METHOD_9 ( false )  VAR_3 . METHOD_10 ( false )  VAR_3 . METHOD_11 ( ( ( short ) ( - 1 ) ) )  METHOD_12 ( cfg )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME error TYPE boolean NAME VAR_1 TYPE java.lang.Exception NAME e COND VAR_1  this . VAR_1 . update ( 1 ) COND e != null  VAR_2 . METHOD_2 ( error , e )  VAR_2 . METHOD_2 ( error ) COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( error )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_5 , VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3 NAME git INIT = METHOD_2 ( false ) TYPE TYPE_4.Result NAME change INIT = METHOD_3 ( git )  submit ( change . getChangeId ( ) )  org.junit.Assert.assertEquals ( change . METHOD_4 ( ) , METHOD_5 ( ) . getId ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.ReceiveCommand NAME cmd IN VAR_1 . METHOD_2 ( ) COND ( cmd . METHOD_3 ( ) ) == ( VAR_2 )  METHOD_1 ( project , cmd . getRefName ( ) , cmd . METHOD_4 ( ) , cmd . METHOD_5 ( ) )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.Change NAME change TYPE TYPE_2 NAME user TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_4 NAME VAR_1 INIT = VAR_2 . get ( change . getProject ( ) ) COND VAR_1 == null  return false ; TYPE TYPE_5 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( user )  return VAR_3 . METHOD_2 ( change ) . METHOD_3 ( db ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) )  com.google.common.truth.Truth.assertThat ( repo . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) . getName ( ) ) . isEqualTo ( VAR_1 )  repo . close ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME user COND ( VAR_1 ) != null  throw new TYPE_3 ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) ) ; COND ( change ) != null  VAR_1 = VAR_2 . METHOD_3 ( change , user )  VAR_1 = VAR_2 . METHOD_3 ( project , VAR_3 , user ) TYPE TYPE_4 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return VAR_1 ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = TYPE_4 . get ( VAR_1 ) TYPE org.eclipse.jgit.lib.Repository NAME VAR_3 INIT = TYPE_5 . get ( VAR_1 ) TYPE TYPE_6 NAME VAR_4 INIT = ( ( TYPE_6 ) ( VAR_5 ) )  return new TYPE_1 ( VAR_6 , VAR_3 , VAR_2 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_7 ( e . getMessage ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE java.lang.String NAME b INIT = ( ( base ) != null ) ? java.lang.String . METHOD_2 ( base . get ( ) ) : null TYPE java.lang.String NAME VAR_2 INIT = java.lang.String . METHOD_2 ( revision . get ( ) )  TYPE_1 . display ( TYPE_2 . METHOD_3 ( changeId , VAR_2 ) , new TYPE_3 ( changeId , b , VAR_2 , VAR_1 ) )
MODIFIER public RETURN java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME METHOD_1 COND ( VAR_1 ) == null TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = change ( ) COND c == null  return java.util.Collections . METHOD_2 ( ) ;  VAR_1 = new TYPE_1 < > ( ) TYPE TYPE_2 NAME VAR_2 IN VAR_3 . METHOD_3 ( db , notes )  VAR_1 . add ( VAR_2 . METHOD_4 ( ) )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . delete ( METHOD_2 ( ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) TYPE TYPE_2<TYPE_3> NAME edit INIT = VAR_3 . METHOD_4 ( change )  VAR_4 . METHOD_5 ( edit . get ( ) . getChange ( ) . getProject ( ) , edit . get ( ) . getRevision ( ) . get ( ) , VAR_5 )  org.junit.Assert . METHOD_6 ( STRING_1 ) TYPE TYPE_4 NAME VAR_6 BLOCK BLOCK
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 COND ( ( VAR_2 ) == null ) || ( ! ( VAR_1 . equals ( VAR_2 . METHOD_2 ( ) ) ) )  VAR_2 = new TYPE_1 ( args , getChangeId ( ) , VAR_1 )  VAR_2 . METHOD_3 ( )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 ) TYPE TYPE_1 NAME VAR_3 INIT = METHOD_3 ( STRING_1 )  assertEquals ( 0 , METHOD_4 ( VAR_4 , VAR_3 , VAR_2 . METHOD_5 ( ) ) )  return METHOD_6 ( VAR_2 ) ;  VAR_2 . delete ( )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 )  METHOD_3 ( STRING_2 , VAR_1 , VAR_2 )  METHOD_4 ( user )  com.google.common.truth.Truth.assertThat ( METHOD_5 ( ) . METHOD_6 ( ) ) . METHOD_7 ( TYPE_1 . METHOD_8 ( VAR_3 , 1 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 )  METHOD_3 ( ( ( create ( ) ) instanceof TYPE_1 ) )  METHOD_2 ( STRING_2 )  METHOD_3 ( ( ( create ( ) ) instanceof TYPE_1 ) )  METHOD_2 ( STRING_3 )  METHOD_3 ( ( ( create ( ) ) instanceof TYPE_1 ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Key NAME key TYPE TYPE_1 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 INIT = VAR_1 . getAccountId ( ) TYPE boolean NAME VAR_3 INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_3.Key NAME VAR_4 INIT = VAR_1 . METHOD_3 ( ) TYPE java.lang.String NAME VAR_5 INIT = VAR_1 . METHOD_4 ( )  return METHOD_1 ( key , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ;
MODIFIER public RETURN TYPE_1 NAME get TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_1 ( change . getProject ( ) ) TYPE org.eclipse.jgit.revwalk.RevWalk NAME VAR_2 INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo )  return VAR_3 . METHOD_2 ( VAR_2 , patchSet ) ; TYPE java.io.IOException NAME e  throw TYPE_2 . METHOD_3 ( e ) ;
MODIFIER public RETURN TYPE_1 NAME diff TYPE java.lang.String NAME base  return VAR_1 . get ( ) . METHOD_1 ( base ) . apply ( file ) . value ( ) ; TYPE java.io.IOException|TYPE_3|com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group INIT = VAR_1 . METHOD_1 ( ) COND group == null  throw new TYPE_3 ( ) ; TYPE TYPE_4 NAME c INIT = VAR_2 . METHOD_2 ( group . METHOD_3 ( ) )  return VAR_3 . METHOD_4 ( VAR_4 ) . format ( c . METHOD_5 ( ) ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( ) ;
MODIFIER public RETURN void NAME run  ui . METHOD_1 ( STRING_1 )  METHOD_2 ( ) COND ( auth . METHOD_3 ( STRING_2 ) ) == null  auth . METHOD_4 ( STRING_2 , TYPE_1 . METHOD_5 ( ) ) COND ( auth . METHOD_3 ( STRING_3 ) ) == null  auth . METHOD_4 ( STRING_3 , TYPE_1 . METHOD_5 ( ) )  METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , STRING_2 , VAR_3 ) TYPE TYPE_2 NAME d INIT = util . user ( VAR_1 , STRING_3 , VAR_3 )  METHOD_3 ( STRING_4 , u . METHOD_4 ( STRING_5 ) . METHOD_5 ( ) )  METHOD_6 ( STRING_6 , d . METHOD_4 ( STRING_5 ) . METHOD_5 ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( VAR_2 . getValue ( VAR_2 . METHOD_3 ( ) ) )  VAR_3 . METHOD_4 ( VAR_1 ) COND ( view ) != null  view . METHOD_5 ( ) . METHOD_6 ( STRING_1 , VAR_1 . name ( ) . METHOD_7 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME VAR_2 INIT = rsrc . METHOD_2 ( ) . METHOD_3 ( ) TYPE java.lang.String NAME name IN TYPE_4 . METHOD_4 ( ) COND ( METHOD_5 ( name ) ) && ( VAR_2 . METHOD_6 ( name ) )  VAR_1 . put ( name , new TYPE_5 ( VAR_2 . METHOD_7 ( name ) ) )
MODIFIER private static synchronized RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1.ReviewDb NAME db COND ( VAR_2 ) == 0  VAR_3 = db . METHOD_2 ( )  VAR_2 = VAR_4  TYPE_3 . METHOD_3 ( VAR_1 , 0 , VAR_3 )  TYPE_3 . METHOD_3 ( VAR_1 , INT_1 , ( ( VAR_2 ) -- ) )
MODIFIER public RETURN TYPE_1 NAME get TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = change . getProject ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME a INIT = null COND ( patchSet . getRevision ( ) ) == null  throw new TYPE_2 ( ( STRING_1 + ( patchSet . getId ( ) ) ) ) ; TYPE org.eclipse.jgit.lib.ObjectId NAME b INIT = org.eclipse.jgit.lib.ObjectId . METHOD_1 ( patchSet . getRevision ( ) . get ( ) ) TYPE TYPE_3 NAME VAR_1 INIT = VAR_2  return get ( new TYPE_4 ( a , b , VAR_1 ) , project ) ;
MODIFIER private RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1 COND ( VAR_1 ) == null  VAR_1 = new TYPE_2 < java.lang.String , TYPE_1 > ( ) COND ( VAR_2 ) != null TYPE TYPE_1 NAME t IN VAR_2  VAR_1 . put ( t . getId ( ) , t )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME git INIT = METHOD_2 ( ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = METHOD_3 ( ) TYPE TYPE_2.Result NAME change INIT = METHOD_4 ( git )  submit ( change . getChangeId ( ) ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 INIT = METHOD_3 ( )  com.google.common.truth.Truth.assertThat ( VAR_2 . getId ( ) ) . isEqualTo ( change . METHOD_5 ( ) )  com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_6 ( 0 ) ) . isEqualTo ( VAR_1 )  METHOD_7 ( change . getChangeId ( ) , 1 )
MODIFIER public RETURN Account.Id NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = db . METHOD_3 ( ) . get ( new TYPE_2 . Key ( VAR_1 ) )  return VAR_2 != null ? VAR_2 . getAccountId ( ) : null ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( ( STRING_1 + VAR_1 ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME changes INIT = VAR_1 . get ( ) . METHOD_2 ( project . METHOD_3 ( ) )  METHOD_4 ( changes )  db . METHOD_5 ( ) . delete ( db . METHOD_5 ( ) . METHOD_2 ( project . METHOD_3 ( ) ) )  db . METHOD_6 ( ) . delete ( db . METHOD_6 ( ) . METHOD_7 ( project . METHOD_3 ( ) ) )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account NAME account COND account != null TYPE java.lang.String NAME result INIT = ( ( account . METHOD_2 ( ) ) == null ) ? VAR_1 : account . METHOD_2 ( ) COND ( account . METHOD_3 ( ) ) != null  result += ( STRING_1 + ( account . METHOD_3 ( ) ) ) + STRING_2  return result ;  return VAR_1 ;
MODIFIER public RETURN TYPE_1 NAME create TYPE TYPE_1.Id NAME id TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME key INIT = new TYPE_1 ( id , TYPE_3 . METHOD_1 ( VAR_1 ) )  TYPE_3 . METHOD_2 ( key )  return key ; TYPE TYPE_4 NAME e  throw new TYPE_2 ( ) ; TYPE TYPE_5 NAME e  throw new TYPE_2 ( ) ; TYPE TYPE_6 NAME e  VAR_2 . error ( STRING_1 , e )  throw new TYPE_2 ( ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_1 NAME event TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME VAR_1 IN VAR_2 COND METHOD_2 ( change , VAR_1 . METHOD_3 ( ) , db )  VAR_1 . METHOD_4 ( event )  METHOD_5 ( event )
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME user INIT = VAR_1 . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_2 INIT = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( user . METHOD_6 ( ) . contains ( getChange ( ) . getId ( ) ) )  METHOD_7 ( VAR_2 , user )  return VAR_2 . METHOD_8 ( ) . toString ( ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME VAR_1 TYPE int NAME n TYPE boolean NAME e TYPE TYPE_1 NAME api INIT = TYPE_2 . change ( id ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 , n ) . METHOD_2 ( STRING_3 , e ) COND VAR_1 != null  api . METHOD_2 ( STRING_4 , VAR_1 )  return api ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<java.util.List<TYPE_2>> NAME VAR_1 TYPE TYPE_3.ReviewDb NAME db INIT = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( )  VAR_1 . onSuccess ( db . METHOD_1 ( ) . METHOD_4 ( ) . METHOD_5 ( ) )  db . close ( ) TYPE TYPE_5.OrmException NAME e  VAR_1 . METHOD_6 ( e )
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( change , METHOD_3 ( changeId ) ) ) . isEqualTo ( VAR_2 ) TYPE TYPE_1<TYPE_2> NAME edit INIT = VAR_3 . METHOD_4 ( change )  METHOD_5 ( FLOAT_1 ) TYPE TYPE_3 NAME VAR_4 TYPE TYPE_4 NAME VAR_5  METHOD_6 ( VAR_6 )  VAR_7 . METHOD_7 ( VAR_8 class )  VAR_7 . METHOD_8 ( STRING_1 )  VAR_1 . METHOD_9 ( edit . get ( ) , edit . get ( ) . METHOD_10 ( ) . METHOD_11 ( ) )
MODIFIER public RETURN TYPE_1.ChangeInfo NAME format TYPE TYPE_2 NAME rsrc TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = VAR_1 . create ( db . get ( ) , rsrc . METHOD_1 ( ) )  return format ( cd , TYPE_3 . of ( rsrc . METHOD_2 ( ) . getId ( ) ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_1 NAME a INIT = new TYPE_1 ( )  a . METHOD_2 ( VAR_1 )  a . METHOD_3 ( TYPE_2 . METHOD_4 ( name ) ) TYPE TYPE_3 NAME VAR_2 INIT = a . METHOD_5 ( )  VAR_3 . METHOD_6 ( VAR_2 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group INIT = VAR_2 . get ( VAR_1 ) COND group == null  throw new TYPE_3 ( VAR_1 ) ;  return new TYPE_1 ( VAR_2 , user . get ( ) , group ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME out TYPE int NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND VAR_3 instanceof TYPE_3 TYPE TYPE_3 NAME VAR_4 INIT = ( ( TYPE_3 ) ( VAR_3 ) )  out . append ( STRING_1 ) . append ( VAR_5 ) . append ( STRING_2 ) . append ( VAR_6 ) . append ( STRING_3 ) COND ( VAR_7 ) != null  METHOD_2 ( out , VAR_1 , VAR_2 , VAR_3 )  METHOD_3 ( out , VAR_1 , VAR_2 , VAR_3 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = VAR_1 . get ( ) . changes ( ) . get ( id ) COND c == null  return null ;  return rsrc . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_1 ( c ) ;
MODIFIER public RETURN TYPE_1.ChangeInfo NAME apply TYPE TYPE_2 NAME req TYPE TYPE_3 NAME input TYPE TYPE_6 NAME VAR_1 INIT = req . METHOD_1 ( ) COND ! ( VAR_1 . METHOD_2 ( VAR_2 . get ( ) ) )  throw new TYPE_7 ( STRING_1 ) ; TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = METHOD_3 ( VAR_1 , input . message , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) )  return VAR_3 . create ( VAR_4 ) . format ( change ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = null TYPE TYPE_3.NameKey NAME VAR_2 INIT = new TYPE_3 . NameKey ( STRING_1 ) TYPE TYPE_4 NAME VAR_3 INIT = null TYPE TYPE_5.Project NAME project INIT = new TYPE_5 . Project ( )  project . METHOD_2 ( VAR_4 . get ( ) ) TYPE TYPE_1 NAME ps INIT = new TYPE_1 ( VAR_5 , VAR_1 , VAR_2 , VAR_3 , project , VAR_6 )  ps . METHOD_3 ( VAR_7 )  return ps ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b , b . append ( CHAR_1 ) )  METHOD_2 ( b , b . append ( CHAR_2 ) )  assertEquals ( STRING_1 , b . METHOD_3 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME key INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE java.lang.String NAME VAR_1 INIT = new TYPE_3 ( ) . create ( ) . METHOD_3 ( key )  TYPE_4 . METHOD_4 ( VAR_2 . METHOD_5 ( METHOD_6 ( VAR_3 ) , VAR_1 ) ) . METHOD_7 ( new TYPE_5 ( VAR_4 , VAR_5 ) )  com.google.common.truth.Truth.assertThat ( VAR_6 . METHOD_8 ( VAR_3 , key ) ) . METHOD_9 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( ) . METHOD_3 ( STRING_1 )  METHOD_4 ( VAR_1 )  assertEquals ( STRING_1 , VAR_1 . getName ( ) )  assertEquals ( STRING_2 , VAR_1 . METHOD_5 ( ) )  assertEquals ( STRING_3 , VAR_1 . METHOD_6 ( ) )  METHOD_7 ( VAR_1 . METHOD_8 ( ) )  METHOD_9 ( VAR_1 , 2 , 1 , 0 , ( - 1 ) , ( - 2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME changeId INIT = METHOD_2 ( admin ) TYPE java.util.List<TYPE_2> NAME reviewers INIT = METHOD_3 ( changeId , STRING_1 , INT_1 )  org.junit.Assert.assertEquals ( reviewers . size ( ) , INT_1 )  reviewers = METHOD_3 ( changeId , STRING_1 , INT_2 )  org.junit.Assert.assertEquals ( reviewers . size ( ) , INT_2 )  reviewers = METHOD_3 ( changeId , STRING_2 , INT_3 )  org.junit.Assert.assertEquals ( reviewers . size ( ) , 1 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE TYPE_2.Id NAME VAR_1 INIT = new TYPE_2 . Id ( INT_1 ) TYPE TYPE_3.Account NAME account INIT = new TYPE_3 . Account ( VAR_1 )  account . METHOD_2 ( name )  account . METHOD_3 ( email ) TYPE TYPE_1 NAME s INIT = new TYPE_1 ( account , VAR_2 . Collections < TYPE_4 . Id > METHOD_4 ( ) , VAR_2 . Collections < TYPE_5 > METHOD_4 ( ) )  return s ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  change = ctx . getChange ( ) TYPE TYPE_2 NAME update INIT = ctx . METHOD_2 ( psId )  VAR_1 = ( change . getStatus ( ) ) == ( VAR_2 ) COND VAR_1  change . METHOD_3 ( VAR_3 )  update . METHOD_3 ( change . getStatus ( ) )  TYPE_3 . METHOD_4 ( change )  ctx . METHOD_5 ( ) . changes ( ) . update ( java.util.Collections.singleton ( change ) )
MODIFIER private static RETURN boolean NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 INIT = walk . parseCommit ( VAR_2 . getId ( ) ) COND ( VAR_3 . METHOD_2 ( ) ) > 0  return TYPE_4 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . contains ( VAR_1 . getId ( ) ) ;  return VAR_1 == ( VAR_4 ) ;
MODIFIER MODIFIER RETURN void NAME display TYPE TYPE_1.ChangeInfo NAME info TYPE java.lang.String NAME revision TYPE boolean NAME VAR_1  this . revision = revision TYPE boolean NAME VAR_2 INIT = TYPE_2 . METHOD_1 ( ) TYPE TYPE_3 NAME VAR_3 INIT = info . revision ( revision ) TYPE TYPE_4 NAME commit INIT = VAR_3 . commit ( )  changeId = info . METHOD_2 ( )  project = info . project ( )  VAR_4 = commit . METHOD_3 ( )  message = commit . message ( )  METHOD_4 ( info , VAR_2 )  METHOD_5 ( info , VAR_3 , VAR_1 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1  VAR_1 . METHOD_2 ( STRING_1 , 2 ) TYPE java.lang.String NAME VAR_2 INIT = ( ( METHOD_3 ( ) ) + STRING_2 ) + ( METHOD_4 ( ) )  VAR_1 . update ( 1 )  VAR_3 . METHOD_5 ( METHOD_3 ( ) , VAR_4 , VAR_5 )  VAR_1 . update ( 1 )  VAR_3 . METHOD_6 ( METHOD_3 ( ) , ( ( VAR_6 ) + STRING_3 ) , VAR_2 )  VAR_1 . METHOD_7 ( )
MODIFIER public RETURN TYPE_1<?> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME in COND ( VAR_1 . get ( ) ) != ( rsrc . METHOD_1 ( ) )  throw new TYPE_4 ( STRING_1 ) ;  VAR_2 . METHOD_2 ( VAR_1 . get ( ) . getAccountId ( ) , change.getId ( ) ) TYPE TYPE_5 NAME e  return TYPE_1 . METHOD_3 ( ) ;  return TYPE_1 . METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_1 INIT = METHOD_2 ( ) TYPE TYPE_1.Result NAME change INIT = METHOD_3 ( ) TYPE TYPE_1.Result NAME VAR_2 INIT = METHOD_3 ( )  METHOD_4 ( VAR_2 . getChangeId ( ) ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_3 INIT = METHOD_2 ( )  com.google.common.truth.Truth.assertThat ( VAR_3 . getId ( ) ) . isEqualTo ( VAR_1 . getId ( ) )
MODIFIER MODIFIER RETURN void NAME add TYPE java.util.List<java.lang.String> NAME values INIT = new java.util.ArrayList < > ( ) TYPE TYPE_1 NAME input IN VAR_1 TYPE java.lang.String NAME VAR_2 INIT = input . getValue ( ) . METHOD_1 ( ) COND ! ( VAR_2 . isEmpty ( ) )  input . METHOD_2 ( STRING_1 )  values . add ( VAR_2 )  insert ( values )
MODIFIER public static RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2.Key NAME key TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_3 ( key . repo , key . path )  VAR_1 . METHOD_2 ( null , VAR_2 )  return TYPE_2 . METHOD_3 ( VAR_1 ) ;  VAR_1 . METHOD_4 ( )  key . repo = null
MODIFIER public RETURN void NAME run COND true COND VAR_1  break ;  VAR_2 . METHOD_1 ( )  VAR_3 . METHOD_1 ( )  this  METHOD_2 ( INT_1 ) TYPE TYPE_1 NAME e  VAR_4 . METHOD_3 ( STRING_1 , e )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME info TYPE boolean NAME r TYPE TYPE_2 NAME api INIT = TYPE_3 . revision ( VAR_1 ) . view ( STRING_1 ) . id ( info . path ( ) ) . view ( STRING_2 ) COND r  api . put ( VAR_2 < TYPE_4 > METHOD_2 ( ) )  api . delete ( VAR_2 < TYPE_4 > METHOD_2 ( ) )
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME config TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2  return new TYPE_3 ( ) . METHOD_2 ( TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( ) ) ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_4 ) . METHOD_7 ( config ) . METHOD_8 ( VAR_1 ) . METHOD_9 ( VAR_2 ) ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Project.NameKey,com.google.gerrit.reviewdb.client.Change.Id> NAME VAR_1 INIT = TYPE_3 . create ( ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd IN VAR_2  VAR_1 . put ( cd . change ( ) . getProject ( ) , cd . getId ( ) )  return VAR_1 ;
MODIFIER MODIFIER RETURN TYPE_1 NAME create TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3.NameKey NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5 NAME rw TYPE TYPE_6 NAME VAR_4 TYPE TYPE_7 NAME VAR_5 TYPE TYPE_8 NAME VAR_6 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_9 NAME VAR_7 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.util.Set<org.eclipse.jgit.revwalk.RevCommit> NAME VAR_8 TYPE java.util.Set<TYPE_10> NAME VAR_9 TYPE TYPE_11 NAME VAR_10 TYPE TYPE_12 NAME VAR_11 TYPE TYPE_13<TYPE_14,com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_12 TYPE TYPE_15 NAME VAR_13 TYPE boolean NAME VAR_14
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE byte[] NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new java.lang.String ( VAR_1 , VAR_3 ) ) TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . METHOD_4 ( VAR_2 , 0 , VAR_2 . length )  org.junit.Assert.assertEquals ( TYPE_3 . of ( ) , p . METHOD_5 ( ) )  return p ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 TYPE java.util.List<TYPE_1> NAME result INIT = new TYPE_2 < > ( ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( true ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_4 IN VAR_1  result . add ( VAR_2 . get ( VAR_4 ) )  VAR_2 . METHOD_2 ( )  return result ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME name INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String NAME t INIT = METHOD_3 ( ) TYPE java.lang.String NAME VAR_3 INIT = METHOD_4 ( ) TYPE java.lang.StringBuilder NAME r INIT = new java.lang.StringBuilder ( )  r . append ( STRING_1 ) COND VAR_1 . METHOD_5 ( )  r . append ( ( STRING_2 + VAR_3 ) )  r . append ( STRING_3 )  return r . toString ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . put ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( branch . METHOD_2 ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_2.Id NAME VAR_1 COND ! ( VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) )  throw new TYPE_3 ( new TYPE_4 ( ) ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( new TYPE_4 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , new TYPE_5 ( null ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME config TYPE TYPE_3 NAME VAR_1 COND ( VAR_2 ) != null  return VAR_2 ; TYPE int NAME VAR_3 INIT = config . METHOD_2 ( STRING_1 , null , STRING_2 , 0 ) COND VAR_3 <= 0  VAR_3 = config . METHOD_2 ( STRING_3 , null , STRING_4 , 0 ) COND VAR_3 <= 0  VAR_3 = TYPE_4 . METHOD_3 ( ) . METHOD_4 ( )  return TYPE_5 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_3 , STRING_5 ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 TYPE int NAME VAR_4  VAR_2 = VAR_2 . METHOD_3 ( ) COND ! ( VAR_2 . METHOD_4 ( ) )  throw new TYPE_4 ( this , 1 , STRING_1 , VAR_2 ) ;  VAR_4 = ( ( TYPE_5 ) ( VAR_2 ) ) . METHOD_5 ( )  VAR_5 . METHOD_6 ( VAR_4 )  return VAR_6 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ ] { STRING_1 , STRING_2 } TYPE java.util.List<TYPE_1> NAME m INIT = VAR_2 . METHOD_2 ( repo , METHOD_3 ( ) , VAR_1 , true )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_4 ( m ) ) . METHOD_5 ( STRING_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  new TYPE_1 ( ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( STRING_3 , VAR_1 )  METHOD_4 ( STRING_4 ) TYPE TYPE_2 NAME e  assertEquals ( ( STRING_5 + VAR_1 ) , e . getMessage ( ) )
MODIFIER private RETURN TYPE_1.Key<TYPE_2> NAME METHOD_1 MODIFIER private static final TYPE long NAME VAR_1 INIT = INT_1 MODIFIER MODIFIER TYPE TYPE_3 NAME VAR_3 BLOCK BLOCK MODIFIER protected RETURN void NAME METHOD_2 TYPE TYPE_4 NAME req TYPE TYPE_5.HttpServletResponse NAME rsp  TYPE_6 . METHOD_3 ( req . METHOD_4 ( ) . METHOD_5 ( req . METHOD_6 ( ) . length ( ) ) , req , rsp )  METHOD_7 ( VAR_4 ) TYPE TYPE_7 NAME VAR_5 TYPE TYPE_8 NAME VAR_6 TYPE TYPE_9.to NAME VAR_7  new TYPE_2 ( ) { private static final long VAR_1 = INT_1 ; VAR_2 ( TYPE_3 VAR_3 ) { } protected void METHOD_2 ( final TYPE_4 req , final TYPE_5 . HttpServletResponse rsp ) throws java.io.IOException { TYPE_6 . METHOD_3 ( req . METHOD_4 ( ) . METHOD_5 ( req . METHOD_6 ( ) . length ( ) ) , req , rsp ) ; METHOD_7 ( VAR_4 ) ; TYPE_7 VAR_5 ; TYPE_8 VAR_6 ; TYPE_9 . to VAR_7 ; } }
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx COND ! ( patchSet . METHOD_2 ( ) )  throw new TYPE_3 ( STRING_1 ) ;  VAR_1 . METHOD_3 ( ctx . METHOD_4 ( ) , ctx . METHOD_5 ( psId ) , patchSet ) COND ! ( VAR_2 )  ctx . METHOD_6 ( )
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( )  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , null , new TYPE_5 ( null , VAR_2 ) , new TYPE_6 ( null ) )
MODIFIER protected RETURN void NAME add TYPE TYPE_1 NAME r TYPE java.lang.String NAME n INIT = r . METHOD_1 ( )  METHOD_2 ( n ) COND ( VAR_1 . put ( n , r ) ) != null  throw new TYPE_2 . OrmException ( ( STRING_1 + n ) ) ;  VAR_2 . add ( n )
MODIFIER public RETURN TYPE_1.OrmException NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME err COND ( ( err . METHOD_2 ( ) ) == null ) && ( ( err . METHOD_3 ( ) ) != null )  err . METHOD_4 ( err . METHOD_3 ( ) )  return new TYPE_1 . OrmException ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) , err ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . projects ( ) . name ( VAR_1 ) . create ( ) TYPE TYPE_3 NAME p INIT = VAR_2 . get ( )  org.junit.Assert.assertEquals ( VAR_1 , p . name ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_5 . get ( new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 ) )  org.junit.Assert . METHOD_2 ( VAR_4 )  TYPE_5 . METHOD_3 ( VAR_4 . getProject ( ) , p )  METHOD_4 ( VAR_1 , STRING_2 )
MODIFIER private static RETURN Account.Id NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE com.google.gerrit.reviewdb.client.Account NAME a INIT = VAR_1 . METHOD_2 ( VAR_2 ) COND a == null  throw new TYPE_2 ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) ) ;  return a . getId ( ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) TYPE TYPE_1 NAME VAR_4 IN VAR_1  VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_4 ) ) TYPE java.lang.String NAME name IN VAR_2  VAR_5 . info ( java.lang.String.format ( STRING_1 , name ) )  VAR_3 . METHOD_4 ( name ) . METHOD_6 ( )  return ! ( VAR_2 . isEmpty ( ) ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE int NAME VAR_3 TYPE boolean NAME edit  VAR_4 . add ( new TYPE_2 ( VAR_5 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) , ( ( VAR_2 - VAR_3 ) + 1 ) , VAR_2 , edit ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE TYPE_1 NAME VAR_1 TYPE java.util.List<TYPE_2> NAME VAR_2 TYPE TYPE_3 NAME info TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME reviewers  METHOD_1 ( db , change , null , ps , commit , VAR_1 , VAR_2 , info , reviewers )
MODIFIER private static RETURN byte[] NAME METHOD_1 TYPE TYPE_1 NAME p TYPE TYPE_2 NAME in INIT = p . METHOD_2 ( ) . METHOD_3 ( p . getName ( ) ) TYPE TYPE_3 NAME VAR_1 INIT = new TYPE_3 ( )  TYPE_4 . METHOD_4 ( in , VAR_1 )  in . close ( )  VAR_1 . close ( )  return VAR_1 . METHOD_5 ( ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 ) . METHOD_4 ( )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_4 , STRING_1 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_3 , VAR_4 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER public RETURN void NAME METHOD_1  index = new TYPE_1 ( VAR_1 )  VAR_2 = new TYPE_2 ( )  VAR_2 . METHOD_2 ( index )  VAR_3 = new TYPE_3 ( VAR_2 )  VAR_4 = new TYPE_4 ( VAR_2 , null , new TYPE_5 ( null , VAR_2 ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 . get ( ) ) instanceof TYPE_2 THEN THEN COND ! ( VAR_2 )  throw new TYPE_1 ( 1 , STRING_1 ) ; COND ! ( VAR_1 . get ( ) . METHOD_2 ( ) . METHOD_3 ( ) )  throw new TYPE_1 ( 1 , STRING_2 ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND ( VAR_2 ) != null  VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) MODIFIER public RETURN void NAME METHOD_3 TYPE TYPE_4 NAME VAR_4 BLOCK BLOCK MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result BLOCK BLOCK  TYPE_1 . METHOD_1 ( VAR_3 , VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void METHOD_3 ( TYPE_4 VAR_4 ) { } public void onSuccess ( TYPE_3 result ) { } } )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( )  METHOD_3 ( ) TYPE TYPE_1 NAME r INIT = VAR_1 . put ( ( ( ( STRING_1 + ( project . get ( ) ) ) + STRING_2 ) + ( branch . METHOD_4 ( ) ) ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_5 ( ) )
MODIFIER protected RETURN TYPE_1.ReviewDb NAME METHOD_1 COND ( db ) == null  db = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) TYPE TYPE_3.OrmException NAME e  throw new TYPE_2 ( 1 , STRING_1 , e ) ;  return db ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_1 , VAR_2 , STRING_1 ) . METHOD_4 ( )  TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 , VAR_4 , STRING_1 ) . METHOD_5 ( true ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_3 , VAR_5 )  METHOD_6 ( STRING_2 , u . METHOD_7 ( STRING_3 ) . METHOD_8 ( ) )
MODIFIER public RETURN java.lang.String NAME diff TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 TYPE TYPE_3 NAME VAR_5 INIT = VAR_3 . diff ( VAR_6 , VAR_1 , VAR_2 ) TYPE TYPE_4 NAME VAR_7 INIT = new TYPE_4 ( ) TYPE TYPE_5 NAME VAR_8 INIT = new TYPE_5 ( VAR_7 )  VAR_8 . format ( VAR_5 , VAR_1 , VAR_2 )  return VAR_7 . toString ( VAR_9 ) ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = TYPE_2 . METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME projectName IN VAR_3 . METHOD_3 ( ) TYPE TYPE_3 NAME e INIT = VAR_3 . get ( projectName ) COND e == null  continue ; COND VAR_1 . equals ( e . getProject ( ) . METHOD_4 ( VAR_4 ) )  VAR_2 . add ( VAR_5 . format ( e . getProject ( ) ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_3 ( ) . METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( insert ( VAR_4 , VAR_1 ) ) . METHOD_5 ( VAR_5 ) . METHOD_6 ( ) TYPE TYPE_4 NAME result INIT = client . METHOD_7 ( VAR_2 ) COND ! ( result . METHOD_8 ( ) )  throw new java.io.IOException ( java.lang.String.format ( STRING_1 , VAR_1 . METHOD_9 ( ) . getId ( ) , VAR_3 , result . METHOD_10 ( ) ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 INIT = notes . getChange ( ) . METHOD_2 ( ) COND ( VAR_1 != null ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) TYPE com.google.gerrit.reviewdb.client.Account.Id NAME id INIT = METHOD_3 ( ) . getAccountId ( )  return id . equals ( VAR_1 ) ;  return false ;
MODIFIER public RETURN TYPE_1 NAME change TYPE TYPE_2 NAME notes TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = notes . getChange ( )  TYPE_3 . METHOD_1 ( METHOD_2 ( ) . getProject ( ) . METHOD_3 ( ) . equals ( change . getProject ( ) ) , STRING_1 )  return METHOD_2 ( ) . METHOD_4 ( notes ) . METHOD_5 ( ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME base TYPE java.lang.String NAME path TYPE TYPE_3 NAME VAR_2 TYPE byte[] NAME VAR_3 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_4 INIT = ( VAR_1 == ( VAR_5 ) ) ? VAR_2 . insert ( VAR_6 , VAR_3 ) : TYPE_5 . METHOD_2 ( repo , rw , base , path ) MODIFIER public RETURN void NAME apply TYPE TYPE_6 NAME VAR_7  VAR_7 . METHOD_3 ( VAR_8 )  VAR_7 . METHOD_4 ( VAR_4 )  return new TYPE_1 ( path ) { public void apply ( TYPE_6 VAR_7 ) { VAR_7 . METHOD_3 ( VAR_8 ) ; VAR_7 . METHOD_4 ( VAR_4 ) ; } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME a TYPE TYPE_2.Change NAME change  VAR_1 = ( change . METHOD_2 ( ) . METHOD_3 ( ) ) / INT_1  VAR_2 = ( change . METHOD_4 ( ) . METHOD_3 ( ) ) / INT_1  VAR_3 = change . METHOD_5 ( )  VAR_4 = change . getStatus ( ) . METHOD_6 ( )  a . status = change . getStatus ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( projectName ) )  org.junit.Assert.assertEquals ( VAR_1 , repo . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) . getName ( ) )  repo . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_2 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_3 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_4 ) ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME id TYPE TYPE_4 NAME user INIT = VAR_2 . get ( ) COND user instanceof TYPE_5  throw new TYPE_6 ( STRING_1 ) ; COND ! ( user instanceof TYPE_7 )  throw new TYPE_3 ( id ) ;  return TYPE_8 . METHOD_1 ( id , VAR_3 ) ;
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.reviewdb.client.Project NAME project TYPE boolean NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_2 INIT = VAR_3 . METHOD_1 ( project . METHOD_2 ( ) ) COND VAR_2 == null  throw new TYPE_1 ( STRING_1 ) ;  METHOD_3 ( VAR_2 ) COND ! VAR_1  METHOD_4 ( VAR_2 )
MODIFIER private RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME approvals TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME rsrc MODIFIER public RETURN boolean NAME apply TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME input  return input . getAccountId ( ) . equals ( rsrc . METHOD_4 ( ) . getAccountId ( ) ) ;  return TYPE_3 . METHOD_1 ( db . METHOD_2 ( ) . METHOD_3 ( rsrc . getChange ( ) . getId ( ) ) , new TYPE_4 < com.google.gerrit.reviewdb.client . PatchSetApproval > ( ) { public boolean apply ( com.google.gerrit.reviewdb.client . PatchSetApproval input ) { return input . getAccountId ( ) . equals ( rsrc . METHOD_4 ( ) . getAccountId ( ) ) ; } } ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE TYPE_3 NAME type  res . METHOD_2 ( type . METHOD_3 ( ) )  res . METHOD_4 ( TYPE_4 . name ( ) )  res . METHOD_5 ( VAR_1 , STRING_1 )  res . METHOD_5 ( VAR_2 , STRING_2 )  METHOD_6 ( req , res )
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) == null  METHOD_2 ( )  super . METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME r COND METHOD_4 ( )  display ( r )  TYPE_1 . METHOD_3 ( VAR_2 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 r ) { if ( METHOD_4 ( ) ) { display ( r ) ; } } } )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME file TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME set INIT = VAR_2 . get ( file ) COND set != null  set . METHOD_2 ( VAR_1 )  VAR_2 . put ( file , TYPE_1 . METHOD_3 ( VAR_1 ) )
MODIFIER protected RETURN void NAME METHOD_1 COND ( db ) != null TYPE TYPE_2 NAME w IN db . METHOD_2 ( ) . METHOD_3 ( change.getId ( ) )  add ( VAR_1 , w . getAccountId ( ) ) TYPE TYPE_3.OrmException NAME err BLOCK BLOCK
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME ref INIT = repo . METHOD_2 ( VAR_1 )  VAR_2 . run ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 COND ref == null  VAR_3 = org.eclipse.jgit.lib.ObjectId . METHOD_3 ( )  VAR_4 = VAR_5 . get ( )  VAR_3 = ref . METHOD_4 ( )  VAR_4 = METHOD_5 ( rw , VAR_3 )  return METHOD_6 ( repo , rw , VAR_3 , ( ( VAR_4 ) + ( VAR_6 ) ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( METHOD_2 ( ) ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) ) ) && ( ! ( METHOD_7 ( db ) ) ) ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE java.lang.String NAME p TYPE TYPE_1 NAME in INIT = VAR_1 class . METHOD_2 ( ) . METHOD_3 ( p ) COND in != null  METHOD_4 ( in , ( STRING_1 + p ) )  VAR_2 . error ( ( STRING_2 + p ) )
MODIFIER public RETURN int NAME length TYPE int NAME VAR_1 INIT = 0 TYPE TYPE_1 NAME t INIT = this COND t . METHOD_1 ( )  VAR_1 ++  t = ( ( TYPE_2 ) ( t ) ) . METHOD_2 ( ) . METHOD_3 ( )  return VAR_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.Change NAME change TYPE TYPE_2.PatchSet NAME patchSet TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . get ( change , patchSet ) TYPE TYPE_4 NAME patch IN VAR_2 . METHOD_2 ( ) COND ( VAR_4 ) == null  VAR_4 = new java.util.ArrayList < TYPE_5 > ( ) TYPE TYPE_5 NAME p INIT = new TYPE_5 ( )  p . file = patch . METHOD_3 ( )  p . type = patch . METHOD_4 ( )  VAR_4 . add ( p )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  VAR_2 . METHOD_2 ( VAR_1 )  commit . METHOD_2 ( ( VAR_1 && ( ! ( VAR_3 . METHOD_3 ( ) . isEmpty ( ) ) ) ) )  VAR_4 . METHOD_2 ( ( VAR_1 ? VAR_3 . METHOD_4 ( ) : false ) )  VAR_5 . METHOD_2 ( VAR_1 )  VAR_6 . METHOD_2 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1.ChangeInfo NAME info INIT = METHOD_3 ( METHOD_4 ( VAR_1 ) ) TYPE java.lang.String NAME message INIT = VAR_2 . get ( VAR_3 ) . commit . message  com.google.common.truth.Truth.assertThat ( message ) . contains ( java.lang.String.format ( STRING_1 , VAR_4 , admin . METHOD_5 ( ) . METHOD_6 ( ) ) )
MODIFIER public RETURN void NAME topic TYPE java.lang.String NAME topic TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  in . topic = topic  VAR_1 . apply ( change , in ) TYPE com.google.gwtorm.server.OrmException|java.io.IOException|TYPE_3 NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_2 IN index . METHOD_2 ( TYPE_1 . METHOD_3 ( new TYPE_2 ( db , VAR_1 . getId ( ) ) , this ) ) . METHOD_4 ( ) COND VAR_2 . getId ( ) . equals ( VAR_1 . getId ( ) )  return true ; TYPE TYPE_3 NAME e  throw new com.google.gwtorm.server.OrmException ( e ) ;  return false ;
MODIFIER private RETURN TYPE_1 NAME user TYPE TYPE_2.ProjectConfig NAME VAR_1 TYPE java.lang.String NAME name TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME VAR_2  return new TYPE_1 ( VAR_3 . Collections < TYPE_3 > METHOD_1 ( ) , VAR_3 . Collections < TYPE_3 > METHOD_1 ( ) , VAR_4 , VAR_5 , null , VAR_6 , VAR_7 , new TYPE_4 ( name , VAR_2 ) , METHOD_2 ( VAR_1 ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1.Result> NAME VAR_1 INIT = METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 )  METHOD_3 ( VAR_2 , VAR_3 , STRING_5 , project ) TYPE TYPE_2 NAME in INIT = METHOD_4 ( VAR_4 )  in . branch = STRING_3  VAR_5 = VAR_1 . get ( STRING_1 ) . getChangeId ( )  METHOD_5 ( in , VAR_6 class , ( STRING_6 + ( VAR_5 ) ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2<TYPE_1> NAME VAR_1 TYPE TYPE_3.Id NAME VAR_2 TYPE java.util.List<TYPE_1> NAME result INIT = new java.util.ArrayList < TYPE_1 > ( ) TYPE TYPE_1 NAME VAR_3 IN VAR_1 COND ( TYPE_4 . METHOD_2 ( change . METHOD_3 ( ) . get ( ) , VAR_3 . METHOD_4 ( ) ) ) && ( VAR_2 . equals ( VAR_3 . METHOD_5 ( ) ) )  result . add ( VAR_3 )  return result ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME a TYPE java.lang.String NAME b TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = TYPE_1 . METHOD_2 ( TYPE_2 . create ( a ) , TYPE_2 . create ( b ) ) . toString ( ) COND ! ( VAR_2 . equals ( VAR_1 ) )  org.junit.Assert . METHOD_3 ( java.lang.String.format ( STRING_1 , a , b , VAR_2 , VAR_1 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 . METHOD_3 ( db ) . isEmpty ( ) )  METHOD_4 ( STRING_1 )  METHOD_4 ( STRING_2 ) TYPE java.util.Set<java.lang.String> NAME s INIT = VAR_1 . METHOD_3 ( db )  assertEquals ( 1 , s . size ( ) )  METHOD_2 ( s . contains ( STRING_3 ) )  METHOD_5 ( s . contains ( STRING_4 ) )
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME s TYPE TYPE_3 NAME VAR_1 INIT = TYPE_4 . METHOD_2 ( ( s . METHOD_3 ( ) . METHOD_4 ( ) ? s . METHOD_3 ( ) . get ( ) : TYPE_4 . METHOD_2 ( s . METHOD_5 ( ) . getId ( ) ) ) )  return new TYPE_1 ( VAR_1 , TYPE_4 . METHOD_6 ( VAR_1 , s ) ) ;
MODIFIER private static RETURN boolean NAME METHOD_1 COND VAR_1  return true ; TYPE TYPE_1 NAME ui INIT = null COND TYPE_2 . METHOD_2 ( )  ui = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) COND ui == null  ui = TYPE_2 . METHOD_6 ( ) . METHOD_5 ( )  return ui == ( VAR_2 ) ;
MODIFIER private static RETURN java.util.List<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME METHOD_1 TYPE TYPE_2<?extendsTYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME VAR_1 TYPE java.util.ArrayList<TYPE_1<com.google.gerrit.server.query.change.ChangeData>> NAME r INIT = new java.util.ArrayList < TYPE_1 < com.google.gerrit.server.query.change.ChangeData > > ( VAR_1 )  java.util.Collections . METHOD_1 ( r , VAR_2 )  return r ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME ctx  user = ctx . METHOD_2 ( ) . METHOD_3 ( )  notes = ctx . METHOD_4 ( )  ps = VAR_1 . get ( ctx . METHOD_5 ( ) , ctx . METHOD_4 ( ) , psId ) TYPE boolean NAME VAR_2 INIT = false  VAR_2 |= METHOD_6 ( ctx )  VAR_2 |= METHOD_7 ( ctx )  VAR_2 |= METHOD_8 ( ctx ) COND VAR_2  ctx . METHOD_9 ( )  return VAR_2 ;
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME p TYPE java.util.List<TYPE_1> NAME VAR_1 INIT = TYPE_3 . METHOD_2 ( ) TYPE TYPE_2 NAME c IN p . METHOD_3 ( ) COND c . METHOD_4 ( )  VAR_1 . add ( VAR_2 . format ( c . getProject ( ) ) )  VAR_1 . METHOD_5 ( METHOD_1 ( c ) )  return VAR_1 ;
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( )  METHOD_2 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_3 ( )  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_4 ( ) . METHOD_5 ( )  VAR_2 = null COND ( VAR_3 ) != null  VAR_3 . METHOD_4 ( ) . METHOD_5 ( )  VAR_3 = null  TYPE_1 . METHOD_6 ( true )  TYPE_2 . METHOD_7 ( true )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME VAR_1 INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<TYPE_2> NAME VAR_2 INIT = METHOD_2 ( STRING_2 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_3 INIT = insert ( METHOD_3 ( VAR_1 ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_4 INIT = insert ( METHOD_3 ( VAR_2 ) )  METHOD_4 ( STRING_3 )  METHOD_4 ( STRING_4 )  METHOD_4 ( STRING_5 , VAR_3 )  METHOD_4 ( STRING_6 , VAR_4 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  r . METHOD_3 ( )  r . METHOD_4 ( true )  TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , STRING_1 ) . METHOD_4 ( true ) TYPE TYPE_3 NAME u INIT = util . user ( VAR_1 , VAR_4 )  METHOD_5 ( STRING_2 , u . METHOD_6 ( STRING_3 ) . METHOD_7 ( ) )
MODIFIER public static RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet TYPE TYPE_1.NameKey NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME git TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  TYPE_2 . METHOD_2 ( patchSet , VAR_1 , git , rw , db )  return true ; TYPE TYPE_3 NAME e  return false ; TYPE com.google.gwtorm.server.OrmException|java.io.IOException NAME e  VAR_2 . METHOD_3 ( java.lang.String.format ( STRING_1 , patchSet . getId ( ) , VAR_1 ) , e )  return false ;
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 COND VAR_1  METHOD_2 ( res . METHOD_3 ( ) . close ( ) )  METHOD_4 ( res . METHOD_3 ( ) . METHOD_5 ( ) )  METHOD_2 ( res . METHOD_3 ( ) . METHOD_5 ( ) )  METHOD_4 ( res . METHOD_3 ( ) . close ( ) )
MODIFIER public RETURN void NAME delete TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE java.lang.String NAME id INIT = cd . getId ( ) . toString ( ) COND cd . getChange ( ) . getStatus ( ) . METHOD_1 ( )  VAR_1 . METHOD_2 ( id )  commit ( VAR_1 )  VAR_2 . METHOD_2 ( id )  commit ( VAR_2 ) TYPE TYPE_1 NAME e  throw new java.io.IOException ( e ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_1.Factory NAME VAR_1  TYPE_2 . METHOD_2 ( ( ( db ) != null ) , STRING_1 ) COND ( update ) == null  update = VAR_1 . create ( db , METHOD_3 ( ) , VAR_2 , VAR_3 ) . METHOD_4 ( repo , rw , VAR_4 ) . METHOD_5 ( VAR_5 ) . METHOD_6 ( VAR_6 . create ( ) )  return update ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result  VAR_1 . METHOD_1 ( false ) TYPE TYPE_2.Account NAME me INIT = TYPE_3 . METHOD_2 ( )  me . METHOD_3 ( VAR_2 )  me . METHOD_4 ( VAR_3 )  me . METHOD_5 ( info )  TYPE_3 . METHOD_6 ( )  VAR_4 . display ( me )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String[] NAME args INIT = VAR_1 . METHOD_3 ( ) TYPE int NAME i INIT = 1 COND i < ( args . length )  i ++  VAR_2 = ( VAR_2 + STRING_1 ) + ( args [ i ] )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) )  assertEquals ( ( STRING_4 + ( STRING_2 + STRING_5 ) ) , METHOD_2 ( STRING_4 ) )  assertEquals ( ( STRING_6 + ( STRING_2 + STRING_7 ) ) , METHOD_2 ( STRING_6 ) )  assertEquals ( ( STRING_8 + ( STRING_2 + STRING_9 ) ) , METHOD_2 ( STRING_8 ) )  assertEquals ( ( STRING_10 + ( STRING_2 + STRING_11 ) ) , METHOD_2 ( STRING_10 ) )
MODIFIER private RETURN void NAME METHOD_1 COND VAR_1 . isEmpty ( )  METHOD_2 ( ) TYPE TYPE_1<TYPE_2> NAME VAR_2 MODIFIER private TYPE int NAME VAR_3 MODIFIER public RETURN void NAME onSuccess TYPE TYPE_2 NAME result COND ( ++ ( VAR_3 ) ) == ( VAR_1 . size ( ) )  METHOD_2 ( ) INIT = new TYPE_1 < TYPE_2 > ( ) { private int VAR_3 ; public void onSuccess ( final TYPE_2 result ) { if ( ( ++ ( VAR_3 ) ) == ( VAR_1 . size ( ) ) ) { METHOD_2 ( ) ; } } } TYPE TYPE_3 NAME p IN VAR_1  p . METHOD_3 ( VAR_2 )
MODIFIER protected RETURN TYPE_1<?> NAME METHOD_1 TYPE TYPE_2.Factory NAME VAR_1 TYPE TYPE_3 NAME rsrc TYPE TYPE_4 NAME input  return VAR_2 . apply ( VAR_1 , rsrc . METHOD_2 ( ) . METHOD_3 ( ) , rsrc . getChange ( ) , rsrc . getChange ( ) . currentPatchSetId ( ) , null ) ;
MODIFIER private RETURN org.eclipse.jgit.lib.Repository NAME METHOD_1 TYPE TYPE_1.Change NAME change TYPE TYPE_2.NameKey NAME name INIT = change . getProject ( )  return VAR_1 . METHOD_1 ( name . get ( ) ) ; TYPE TYPE_3 NAME err  VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err )  return null ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.PatchSet.Id,com.google.gerrit.reviewdb.client.PatchSetApproval> NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.reviewdb.server.ReviewDb> NAME db COND ( VAR_1 ) == null  VAR_1 = TYPE_3 . create ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME VAR_2 IN TYPE_4 . METHOD_2 ( db . get ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) )  VAR_1 . put ( VAR_2 . METHOD_5 ( ) , VAR_2 )  return VAR_1 ;
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1 NAME cm TYPE int NAME line TYPE int NAME VAR_1 TYPE int NAME i INIT = 0 COND i < VAR_1  i ++  cm . METHOD_2 ( ( line + i ) , VAR_2 , VAR_3 . diff ( ) )  return line + VAR_1 ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME VAR_1 TYPE boolean NAME VAR_2 INIT = VAR_1 . METHOD_1 ( STRING_1 )  display ( VAR_3 , VAR_4 . METHOD_2 ( ) , ( ( VAR_5 . METHOD_3 ( ) ) || VAR_2 ) , ( ( VAR_5 . METHOD_4 ( ) ) || VAR_2 ) , ( ( VAR_5 . METHOD_5 ( ) ) || VAR_2 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.util.Set<TYPE_2> NAME VAR_2  VAR_1 . append ( CHAR_1 ) TYPE boolean NAME VAR_3 INIT = true TYPE TYPE_2 NAME VAR_4 IN VAR_2 COND VAR_3  VAR_3 = false  VAR_1 . append ( CHAR_2 ) COND VAR_4 != null  VAR_5 . METHOD_1 ( VAR_1 , VAR_4 )  VAR_1 . append ( VAR_6 )  VAR_1 . append ( CHAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE TYPE_2 NAME c INIT = METHOD_2 ( branch ) COND c != null  ctx . METHOD_3 ( new TYPE_3 . ReceiveCommand ( c . METHOD_4 ( 0 ) , c , branch . get ( ) ) )  METHOD_5 ( branch , c )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e MODIFIER public RETURN void NAME onSuccess TYPE TYPE_4 NAME result TYPE TYPE_5 NAME p INIT = TYPE_6 . METHOD_3 ( )  result . METHOD_4 ( p )  TYPE_6 . METHOD_5 ( p )  TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( TYPE_4 result ) { TYPE_5 p = TYPE_6 . METHOD_3 ( ) ; result . METHOD_4 ( p ) ; TYPE_6 . METHOD_5 ( p ) ; } } )  close ( )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db  return ( ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_2 ( ) ) ) || ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ) || ( METHOD_3 ( ) . METHOD_1 ( ) ) ) && ( ! ( METHOD_8 ( db ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME schema INIT = METHOD_2 ( )  METHOD_3 ( schema . METHOD_4 ( ) )  assertEquals ( STRING_1 , schema . METHOD_4 ( ) . METHOD_5 ( ) )  assertEquals ( 1 , schema . METHOD_4 ( ) . METHOD_6 ( ) )
MODIFIER protected RETURN TYPE_1.Result NAME METHOD_1 TYPE java.lang.String NAME changeId  java.util.Collections . METHOD_2 ( VAR_1 ) TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( db , admin . METHOD_3 ( ) , VAR_4 , VAR_5 , new java.lang.String ( TYPE_4 . METHOD_4 ( VAR_1 ) ) , changeId )  return VAR_2 . to ( git , STRING_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out INIT = METHOD_3 ( in )  METHOD_4 ( VAR_1 class , out . METHOD_5 ( ) )  assertEquals ( TYPE_2 . of ( query ( in . METHOD_6 ( 1 ) ) , in . METHOD_6 ( 0 ) ) , out . METHOD_7 ( ) )
MODIFIER protected RETURN void NAME run TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  in . revision = revision  VAR_1 . projects ( ) . name ( project . getProject ( ) . METHOD_1 ( ) . get ( ) ) . branch ( name ) . create ( in ) TYPE TYPE_3 NAME e  throw METHOD_2 ( e ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE TYPE_3<TYPE_4.ReviewDb> NAME VAR_2 INIT = VAR_1 . METHOD_3 ( ) TYPE TYPE_5 NAME VAR_3 INIT = VAR_1 . METHOD_4 ( ) TYPE TYPE_6 NAME config INIT = VAR_1 . METHOD_5 ( )  return new TYPE_7 ( VAR_2 , VAR_3 , config ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME err TYPE java.lang.Exception NAME e COND VAR_1 COND e == null  VAR_2 . error ( err )  VAR_2 . error ( err , e )  return TYPE_2 . METHOD_2 ( ) ;  return TYPE_1 . error ( err ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME modules INIT = new java.util.ArrayList < > ( )  modules.add ( VAR_1 . METHOD_2 ( VAR_2 class ) )  modules.add ( new TYPE_3 ( ) )  modules.add ( new TYPE_4 ( false , VAR_1 . METHOD_2 ( VAR_3 class ) , VAR_1 . METHOD_2 ( VAR_4 class ) ) ) COND ( VAR_5 ) == ( VAR_6 )  modules.add ( new TYPE_5 ( ) )  return VAR_1 . METHOD_3 ( modules ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE short NAME VAR_2 TYPE short NAME VAR_3 TYPE int NAME n INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < n  i ++ COND ( TYPE_2 . METHOD_3 ( VAR_1 . getValue ( i ) ) ) == VAR_3  VAR_1 . METHOD_4 ( i )  return ; COND VAR_3 != VAR_2  METHOD_1 ( VAR_1 , VAR_2 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( ( STRING_2 + STRING_3 ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_5 ) ) ) + STRING_6 ) + STRING_7 ) , n . METHOD_6 ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) COND ( METHOD_2 ( ) ) && ( user . METHOD_3 ( ) . METHOD_4 ( ) )  new TYPE_3 ( VAR_2 , VAR_2 . toString ( ) ) . METHOD_5 ( )  VAR_3 . set ( VAR_4 . submit ( VAR_2 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE TYPE_1 NAME msg MODIFIER public RETURN boolean NAME apply TYPE TYPE_1 NAME input  return ( input . METHOD_8 ( ) ) == null ; INIT = TYPE_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 . get ( ) . METHOD_5 ( ) . METHOD_6 ( rsrc . getChange ( ) . getId ( ) ) . METHOD_7 ( ) ) , new TYPE_5 < TYPE_1 > ( ) { public boolean apply ( TYPE_1 input ) { return ( input . METHOD_8 ( ) ) == null ; } } ) , null )  return msg ;
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) COND ! ( METHOD_4 ( VAR_1 . METHOD_2 ( ) ) )  throw new TYPE_1 ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) ) ) ;  METHOD_6 ( VAR_2 , VAR_3 )
MODIFIER private static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_2 . METHOD_3 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_3 . METHOD_4 ( )  return VAR_4 . getValue ( VAR_5 ) ;  VAR_2 . close ( )
MODIFIER public RETURN void NAME METHOD_1  VAR_1 . METHOD_1 ( ) COND ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) && ( VAR_4 ) TYPE TYPE_1 NAME VAR_5 INIT = new TYPE_1 ( VAR_6 )  VAR_7 . set ( VAR_8 . create ( null , VAR_5 ) . METHOD_3 ( INT_1 , VAR_9 ) )
MODIFIER public RETURN TYPE_1<java.lang.String> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( rsrc . METHOD_1 ( ) ) || ( ! ( METHOD_2 ( rsrc . getChange ( ) ) ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;  VAR_1 . METHOD_4 ( VAR_2 . get ( ) . getAccountId ( ) , rsrc . getProject ( ) , rsrc . getChange ( ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND ( getChange ( ) . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( db , cd ) ) )  return false ; COND ( ( getChange ( ) . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( METHOD_4 ( db , cd ) ) )  return false ;  return METHOD_5 ( ) . METHOD_1 ( ) ;
MODIFIER private static RETURN TYPE_1 NAME type TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME VAR_2 COND ( VAR_1 . METHOD_1 ( VAR_2 ) ) != null  return VAR_1 . METHOD_1 ( VAR_2 ) ; TYPE TYPE_1 NAME VAR_3 IN VAR_1 . METHOD_2 ( ) COND VAR_2 . METHOD_3 ( VAR_3 . getName ( ) )  return VAR_3 ;  return null ;
MODIFIER public RETURN java.lang.String[] NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME name TYPE java.lang.String[] NAME VAR_3 INIT = VAR_4 . METHOD_2 ( VAR_1 , VAR_2 , name ) COND VAR_3 != null  return VAR_3 ;  return super . METHOD_1 ( VAR_1 , VAR_2 , name ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.Change NAME c TYPE TYPE_3 NAME commit INIT = VAR_1 . get ( c . getId ( ) ) TYPE TYPE_4 NAME s INIT = ( commit != null ) ? VAR_2 : null TYPE boolean NAME VAR_3 INIT = false COND ( s != null ) && ( ( ( s . equals ( VAR_4 ) ) || ( s . equals ( VAR_5 ) ) ) || ( s . equals ( VAR_6 ) ) )  VAR_3 = true  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 TYPE TYPE_1 NAME VAR_4 INIT = VAR_5 . METHOD_2 ( name . get ( ) ) COND VAR_4 != null TYPE TYPE_2 NAME VAR_6 INIT = VAR_7 COND VAR_6 != null TYPE TYPE_3 NAME VAR_8 INIT = VAR_6 . METHOD_3 ( ) COND VAR_8 != null  VAR_8 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_5 NAME group INIT = VAR_3 . get ( VAR_2 ) COND group == null  throw new TYPE_4 ( VAR_2 ) ;  return new TYPE_1 ( VAR_1 , group ) ;
MODIFIER private RETURN void NAME status TYPE int NAME VAR_1 COND VAR_1 == ( VAR_2 ) TYPE java.lang.StringBuilder NAME VAR_3 INIT = new java.lang.StringBuilder ( )  VAR_3 . append ( VAR_4 )  VAR_3 . append ( ( ( STRING_1 + ( VAR_5 ) ) + STRING_2 ) )  METHOD_1 ( VAR_6 , VAR_3 . toString ( ) ) COND METHOD_2 ( VAR_6 )  METHOD_1 ( VAR_6 , null )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( ) TYPE long NAME VAR_2 INIT = ( VAR_1 . METHOD_3 ( ) ) + 1 TYPE TYPE_2 NAME result INIT = VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_2 , VAR_1 . METHOD_6 ( ) )  org.junit.Assert.assertEquals ( TYPE_3 . METHOD_7 ( STRING_1 ) , result . METHOD_8 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME walk TYPE org.eclipse.jgit.lib.ObjectId NAME id  this . VAR_1 = walk . METHOD_2 ( )  revision = ( id != null ) ? walk . parseCommit ( id ) : null  METHOD_3 ( )  VAR_1 = null
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE TYPE_2 NAME p INIT = METHOD_2 ( name )  return VAR_1 . get ( p , METHOD_3 ( name , p ) ) ; TYPE TYPE_3 NAME e  VAR_2 . METHOD_4 ( java.lang.String.format ( STRING_1 , name ) , e )  return null ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1  VAR_2 = VAR_1  TYPE_1 . METHOD_1 ( ( VAR_1 && ( ! ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ) )  TYPE_2 . METHOD_4 ( VAR_4 , VAR_1 ) COND VAR_1  VAR_5 . METHOD_5 ( VAR_6 . METHOD_6 ( ) )  VAR_5 . METHOD_7 ( VAR_6 . METHOD_6 ( ) )  VAR_3 . METHOD_8 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.NameKey NAME branch TYPE TYPE_4 NAME p INIT = VAR_1 . get ( branch . getParentKey ( ) ) COND p == null  throw new TYPE_3 ( branch . getParentKey ( ) ) ;  return p . METHOD_1 ( ) ;
MODIFIER private RETURN TYPE_1[] NAME METHOD_1 TYPE TYPE_2 NAME cfg TYPE TYPE_1 NAME c INIT = new TYPE_3 ( )  c . METHOD_2 ( null )  c . METHOD_3 ( cfg . METHOD_4 ( STRING_1 , null , STRING_2 , INT_1 ) )  c . METHOD_5 ( false )  return new TYPE_1 [ ] { c } ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME change TYPE boolean NAME VAR_1 TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( db , change . change ( ) , user ( admin ) )  com.google.common.truth.Truth.assertThat ( submit . METHOD_3 ( VAR_2 ) . isEmpty ( ) ) . isEqualTo ( VAR_1 )
MODIFIER public static RETURN void NAME METHOD_1  VAR_1 = null  TYPE_1 . METHOD_2 ( VAR_2 )  TYPE_1 . METHOD_2 ( VAR_3 ) TYPE TYPE_2 NAME VAR_4 IN VAR_5  VAR_4 . METHOD_3 ( )  TYPE_3 . METHOD_4 ( ) COND ( VAR_6 ) != null  VAR_6 . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME reviewers INIT = VAR_1 . METHOD_2 ( db , TYPE_1 . of ( user . email , admin . email ) , project , change , VAR_2 . METHOD_3 ( ) . id ( VAR_3 . get ( ) ) . get ( ) )  com.google.common.truth.Truth.assertThat ( reviewers ) . METHOD_4 ( user . id )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Map<java.lang.String,TYPE_1> NAME res INIT = METHOD_2 ( STRING_1 , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } . METHOD_3 ( ) )  org.junit.Assert.assertEquals ( 1 , res . size ( ) ) TYPE TYPE_1 NAME d INIT = res . get ( STRING_2 )  METHOD_4 ( STRING_3 , d )  org.junit.Assert.assertEquals ( repo . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) , d . name )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME email TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE java.util.List<com.google.gerrit.reviewdb.client.Account> NAME VAR_1 INIT = db . METHOD_3 ( ) . METHOD_1 ( email ) . METHOD_4 ( )  return ( VAR_1 . size ( ) ) == 1 ? auth ( VAR_1 . get ( 0 ) ) : null ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  METHOD_5 ( ) . log ( STRING_1 , e )  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME info  VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . css ( ) . METHOD_4 ( ) ) COND ! ( TYPE_4 . equals ( info . path ( ) ) )  VAR_1 . append ( info . status ( ) )  VAR_1 . METHOD_5 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_2 ) TYPE TYPE_4 NAME out INIT = new TYPE_4 ( VAR_3 )  git . METHOD_3 ( VAR_1 ) . METHOD_4 ( out )  out . close ( )  return VAR_3 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE java.lang.String NAME path TYPE TYPE_2 NAME diff COND ! ( path . isEmpty ( ) )  diff . METHOD_2 ( TYPE_3 . create ( path ) )  diff . METHOD_3 ( repo )  diff . METHOD_4 ( true )  diff . format ( VAR_1 , VAR_2 )  diff . METHOD_5 ( )
MODIFIER private RETURN TYPE_1.ChangeInfo NAME METHOD_1 TYPE TYPE_2.Change NAME VAR_1 TYPE java.util.Map<TYPE_3.Id,TYPE_4.Id> NAME VAR_2  VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) TYPE TYPE_1.ChangeInfo NAME VAR_4 COND VAR_2 == null  VAR_4 = new TYPE_1 . ChangeInfo ( VAR_1 )  VAR_4 = new TYPE_1 . ChangeInfo ( VAR_1 , VAR_2 . get ( VAR_1 . getId ( ) ) )  VAR_4 . METHOD_4 ( METHOD_5 ( VAR_1 ) )  return VAR_4 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = ( ( VAR_3 ) + STRING_2 ) + ( VAR_4 )  org.junit.Assert.assertEquals ( VAR_5 . format ( null , null , null , null , cfg , VAR_1 ) , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_3 , VAR_1 . changeId , VAR_4 )  assertThat ( VAR_5 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . to ( VAR_6 ) . to ( VAR_7 ) . METHOD_6 ( VAR_8 ) . METHOD_6 ( VAR_9 ) . METHOD_7 ( VAR_10 ) . METHOD_7 ( VAR_2 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME p TYPE boolean NAME VAR_1 TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = ( VAR_1 ) ? VAR_2 . METHOD_2 ( p ) : VAR_2 . METHOD_3 ( p ) TYPE TYPE_2 NAME VAR_3 INIT = repo . METHOD_4 ( )  return new TYPE_1 ( repo , new org.eclipse.jgit.revwalk.RevWalk ( VAR_3 . METHOD_5 ( ) ) , VAR_3 , new TYPE_3 ( ) , true ) ;
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME info COND info . METHOD_1 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_3 . Factory ( ) , STRING_1 ) COND info . METHOD_3 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_4 . Factory ( ) , STRING_2 ) COND info . METHOD_4 ( )  TYPE_2 . get ( ) . METHOD_2 ( VAR_2 , new TYPE_5 . Factory ( ) , STRING_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME b INIT = new TYPE_1 ( )  METHOD_2 ( b . isEmpty ( ) )  METHOD_3 ( b . METHOD_4 ( ) )  assertEquals ( STRING_1 , b . METHOD_5 ( ) )  b . append ( STRING_2 )  METHOD_2 ( b . METHOD_4 ( ) )  assertEquals ( STRING_2 , b . METHOD_5 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME in TYPE TYPE_2<?extendsTYPE_3> NAME VAR_1  VAR_2 . projects ( ) . create ( in )  org.junit.Assert . METHOD_2 ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) )  com.google.common.truth.Truth.assertThat ( VAR_3 ) . METHOD_4 ( VAR_1 )  METHOD_5 ( INT_1 ) TYPE TYPE_4 NAME VAR_4
MODIFIER private final RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.reviewdb.client.PatchSet> NAME patchSets TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE com.google.gerrit.reviewdb.client.PatchSet NAME patchSet IN patchSets  db . METHOD_2 ( ) . delete ( db . METHOD_2 ( ) . METHOD_3 ( patchSet . getId ( ) ) )  db . METHOD_4 ( ) . delete ( db . METHOD_4 ( ) . METHOD_3 ( patchSet . getId ( ) ) )  db . patchSets ( ) . delete ( java.util.Collections.singleton ( patchSet ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = METHOD_2 ( VAR_1 )  METHOD_3 ( VAR_3 )  VAR_4 . changes ( ) . id ( VAR_2 . changeId ) . revision ( STRING_1 ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) )  VAR_5 . METHOD_6 ( )  return VAR_2 ;
MODIFIER public RETURN java.lang.String NAME toString TYPE java.lang.String NAME VAR_1 INIT = TYPE_1 . METHOD_1 ( user ) COND ( VAR_1 . METHOD_2 ( CHAR_1 ) ) < 0  return ( ( VAR_2 ) + STRING_1 ) + VAR_1 ;  return ( ( ( VAR_2 ) + STRING_2 ) + VAR_1 ) + STRING_3 ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE TYPE_3 NAME VAR_1 INIT = METHOD_2 ( req )  res . METHOD_3 ( VAR_2 )  res . METHOD_4 ( STRING_1 )  res . METHOD_5 ( ( ( int ) ( VAR_1 . length ( ) ) ) ) TYPE TYPE_4 NAME out INIT = res . METHOD_6 ( ) TYPE TYPE_5 NAME in INIT = new TYPE_6 ( VAR_1 )  TYPE_7 . METHOD_7 ( in , out )  in . close ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME rsp TYPE java.lang.StringBuilder NAME url INIT = new java.lang.StringBuilder ( )  url . append ( req . METHOD_2 ( ) )  url . append ( CHAR_1 )  url . append ( CHAR_2 )  url . append ( VAR_1 )  rsp . METHOD_3 ( url . toString ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME VAR_1  TYPE_2 . METHOD_2 ( ( ( VAR_2 ) != null ) , STRING_1 ) TYPE int NAME VAR_3 INIT = ( VAR_2 . isEmpty ( ) ) ? 1 : ( VAR_2 . size ( ) ) + 1 TYPE TYPE_1.Id NAME VAR_4 INIT = new TYPE_1 . Id ( VAR_5 , VAR_3 ) TYPE TYPE_1 NAME key INIT = new TYPE_3 ( ) . create ( VAR_4 , VAR_1 )  VAR_2 . add ( TYPE_4 . of ( key ) )  return key ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  METHOD_2 ( VAR_4 , VAR_2 , VAR_3 , STRING_1 ) . METHOD_3 ( true )  METHOD_2 ( VAR_4 , VAR_2 , VAR_3 , STRING_2 ) TYPE TYPE_1 NAME u INIT = user ( )  METHOD_4 ( STRING_3 , u . METHOD_5 ( STRING_4 ) . METHOD_6 ( ) )  METHOD_4 ( STRING_3 , u . METHOD_5 ( STRING_5 ) . METHOD_6 ( ) )  METHOD_7 ( STRING_6 , u . METHOD_5 ( STRING_7 ) . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 . METHOD_3 ( ) , STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 INIT = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = VAR_1 . METHOD_4 ( VAR_2 )  com.google.common.truth.Truth.assertThat ( repo ) . METHOD_5 ( )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( VAR_1 . METHOD_6 ( ) ) ) ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( project , STRING_1 ) TYPE java.lang.String NAME master INIT = METHOD_3 ( STRING_2 ) . METHOD_4 ( ) . name ( )  METHOD_3 ( STRING_1 )  METHOD_5 ( user )  TYPE_1 . METHOD_6 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_3 , STRING_4 , false ) , TYPE_3 . branch ( STRING_2 , master , false ) ) , METHOD_7 ( ) . get ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r TYPE int NAME VAR_1 TYPE TYPE_2.ChangeInfo NAME c INIT = get ( r . getChangeId ( ) , VAR_2 ) TYPE TYPE_3 NAME VAR_3 INIT = VAR_4 . get ( STRING_1 )  org.junit.Assert.assertEquals ( 1 , VAR_5 . size ( ) )  org.junit.Assert.assertEquals ( STRING_2 , VAR_5 . get ( 0 ) . name )  org.junit.Assert.assertEquals ( VAR_1 , VAR_5 . get ( 0 ) . value . METHOD_2 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( STRING_2 + STRING_3 ) + ( TYPE_2 . METHOD_5 ( STRING_4 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_5 ) ) ) + STRING_6 ) , n . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<TYPE_3> NAME VAR_2 TYPE TYPE_3 NAME VAR_3 IN VAR_2 COND ( VAR_4 ) == ( TYPE_4 . METHOD_2 ( VAR_5 ) ) COND ( VAR_6 ) == null  VAR_6 = new java.util.ArrayList < > ( )  VAR_6 . add ( METHOD_3 ( VAR_3 ) )
MODIFIER public RETURN void NAME run TYPE int NAME VAR_1 INIT = ( TYPE_1 . METHOD_1 ( ) ) - ( ( TYPE_2 . METHOD_2 ( ) ) + INT_1 )  VAR_2 . METHOD_3 ( VAR_1 )  VAR_3 . METHOD_3 ( VAR_1 )  METHOD_4 ( diff )  VAR_4 . METHOD_4 ( VAR_5 ) COND VAR_6 . METHOD_5 ( )  VAR_4 . METHOD_6 ( true )  VAR_7 . METHOD_4 ( VAR_6 . METHOD_7 ( ) , diff )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME notes TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.util.List<TYPE_3> NAME VAR_4 INIT = new java.util.ArrayList ( ( 1 + ( VAR_3 . length ) ) )  VAR_4 . add ( VAR_2 )  VAR_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_3 ) )  com.google.common.truth.Truth.assertThat ( VAR_5 . METHOD_4 ( METHOD_5 ( notes ) , VAR_1 ) . METHOD_6 ( ) ) . METHOD_7 ( VAR_4 ) . METHOD_8 ( )
MODIFIER private RETURN void NAME METHOD_1 COND ( 0 <= ( VAR_1 ) ) && ( ( VAR_1 ) < ( table . METHOD_2 ( ) ) ) TYPE TYPE_1 NAME VAR_2 INIT = METHOD_3 ( VAR_1 ) COND VAR_2 != null  METHOD_4 ( VAR_2 )
MODIFIER public RETURN TYPE_1.Result NAME METHOD_1 TYPE TYPE_2 NAME ref INIT = repo . METHOD_2 ( VAR_1 )  VAR_2 . run ( ) TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_3 COND ref == null  VAR_3 = org.eclipse.jgit.lib.ObjectId . METHOD_3 ( )  VAR_4 = VAR_5 . get ( )  VAR_3 = ref . METHOD_4 ( )  VAR_4 = METHOD_5 ( VAR_3 )  return METHOD_6 ( repo , rw , VAR_3 , ( ( VAR_4 ) + ( VAR_6 ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_5 NAME req INIT = ( ( TYPE_5 ) ( VAR_1 ) ) COND ! ( TYPE_6 . METHOD_2 ( req ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 )  return ; TYPE TYPE_7 NAME rsp INIT = new TYPE_7 ( ( ( TYPE_8 . HttpServletResponse ) ( VAR_2 ) ) ) COND METHOD_3 ( req , rsp )  VAR_3 . METHOD_1 ( req , rsp )
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME input TYPE TYPE_7 NAME in INIT = new TYPE_7 ( )  VAR_2 = id TYPE java.util.List<TYPE_1> NAME VAR_3 INIT = put . get ( ) . apply ( VAR_1 , in ) COND ( VAR_3 . size ( ) ) == 1  return VAR_3 . get ( 0 ) ;  throw new TYPE_8 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , STRING_2 )  assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  assertEquals ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) , a . METHOD_4 ( VAR_1 ) )
MODIFIER static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , null , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER static RETURN com.google.gerrit.server.query.change.ChangeData NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE int NAME currentPatchSetId TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , id )  VAR_1 = new com.google.gerrit.reviewdb.client.PatchSet ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , currentPatchSetId ) )  return cd ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = new TYPE_1 ( )  p . METHOD_2 ( STRING_1 , VAR_1 class . getName ( ) )  p . METHOD_2 ( STRING_2 , ( STRING_3 + ( ( VAR_2 ) ++ ) ) )  db = new TYPE_2 < TYPE_3 > ( new TYPE_4 ( p ) , VAR_3 class )  VAR_4 = new java.util.ArrayList < TYPE_3 > ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME r INIT = VAR_1 . get ( ( ( STRING_1 + ( admin . email ) ) + STRING_2 ) )  org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_3 ( ) . METHOD_4 ( r . METHOD_5 ( ) , VAR_4 class )  TYPE_3 . METHOD_6 ( new TYPE_4 ( admin . id ) , VAR_3 )
MODIFIER private RETURN org.eclipse.jgit.lib.ObjectId NAME METHOD_1 TYPE TYPE_3<TYPE_4> NAME edit INIT = VAR_1 . METHOD_2 ( change ) COND edit . METHOD_3 ( )  return edit . get ( ) . METHOD_4 ( ) . METHOD_5 ( ) ;  throw new TYPE_2 ( change.getId ( ) ) ;
MODIFIER public RETURN TYPE_1 NAME create TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME name TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE TYPE_2 NAME user TYPE TYPE_3 NAME VAR_2 TYPE TYPE_1 NAME VAR_3 INIT = factory . create ( name , VAR_1 , VAR_2 )  VAR_3 . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( user ) )  VAR_3 . METHOD_1 ( ) . METHOD_4 ( VAR_4 )  return VAR_3 ;
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE java.util.Map<TYPE_2,byte[]> NAME VAR_1 INIT = new TYPE_3 < > ( )  VAR_1 . put ( new TYPE_2 ( repo . METHOD_2 ( ) . METHOD_3 ( ) , STRING_1 ) , null )  return TYPE_4 . METHOD_4 ( repo , STRING_2 , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1  db . create ( ) TYPE TYPE_2 NAME config INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , VAR_2 , 1 , 2 )  METHOD_3 ( VAR_1 , VAR_3 , ( - 1 ) , 1 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) + ( VAR_1 ) ) , METHOD_2 ( ( ( STRING_1 + STRING_2 ) + ( VAR_1 ) ) ) )  assertEquals ( ( ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) + ( VAR_1 ) ) + ( VAR_2 ) ) , METHOD_2 ( ( ( ( STRING_1 + STRING_2 ) + ( VAR_1 ) ) + ( VAR_2 ) ) ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw INIT = new org.eclipse.jgit.revwalk.RevWalk ( repo ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rw . parseCommit ( VAR_2 ) COND ! ( VAR_1 . METHOD_2 ( db . get ( ) , repo , commit ) )  throw new TYPE_2 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.String NAME msg TYPE TYPE_1 NAME t COND VAR_1 . METHOD_2 ( ) COND t != null  VAR_1 . error ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t )  VAR_1 . error ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) )
MODIFIER public RETURN TYPE_1<TYPE_2> NAME get TYPE TYPE_3<TYPE_4> NAME VAR_1 TYPE java.util.ArrayList<TYPE_2> NAME r INIT = new java.util.ArrayList < TYPE_2 > ( ) TYPE TYPE_4 NAME key IN VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = get ( key ) COND VAR_2 != null  r . add ( VAR_2 )  return new TYPE_5 < TYPE_2 > ( r ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE java.lang.String NAME VAR_3 TYPE int NAME n INIT = VAR_1 . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < n  i ++ COND VAR_1 . getValue ( i ) . equals ( VAR_3 )  VAR_1 . METHOD_3 ( i )  return ; COND VAR_3 != VAR_2  METHOD_1 ( VAR_1 , VAR_2 , VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) )  VAR_1 = new TYPE_5 ( repo . METHOD_2 ( ) , new TYPE_6 ( repo . METHOD_2 ( ) ) . METHOD_3 ( null ) , new TYPE_7 ( false , TYPE_8 . METHOD_4 ( ) . METHOD_5 ( 0 ) ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME id TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = VAR_1 . get ( id ) COND c == null  c = db . changes ( ) . get ( id ) TYPE TYPE_2 NAME notes INIT = VAR_2 . METHOD_2 ( c ) TYPE TYPE_1 NAME ctx INIT = new TYPE_1 ( VAR_3 . METHOD_3 ( notes , user ) , new TYPE_3 ( db ) ) COND VAR_4 . METHOD_4 ( )  ctx . METHOD_5 ( ) . METHOD_6 ( )  return ctx ;
MODIFIER public RETURN void NAME METHOD_1 COND ( VAR_1 ) != null  TYPE_1 . METHOD_2 ( this , VAR_1 )  TYPE_1 . METHOD_3 ( this )  TYPE_2 . METHOD_4 ( new TYPE_3 ( this ) )  TYPE_1 . METHOD_5 ( null )  METHOD_6 ( ) COND ( VAR_2 ) != null  TYPE_4 . set ( VAR_2 )  VAR_3 = true  TYPE_4 . METHOD_7 ( )
MODIFIER public RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE java.util.List<java.lang.String> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) TYPE java.lang.String[] NAME VAR_2 INIT = METHOD_3 ( ) . METHOD_4 ( ) COND VAR_2 != null TYPE java.lang.String NAME VAR_3 IN VAR_2 TYPE java.lang.String NAME VAR_4 INIT = VAR_3 . METHOD_5 ( 0 , ( ( VAR_3 . length ( ) ) - ( TYPE_3 . length ( ) ) ) )  VAR_1 . add ( VAR_4 )  return VAR_1 ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2.NameKey NAME branch TYPE java.util.List<java.lang.String> NAME VAR_1 TYPE TYPE_3<com.google.gerrit.server.query.change.ChangeData> NAME schema INIT = TYPE_4 . schema ( VAR_2 ) COND schema . METHOD_2 ( VAR_3 )  return query ( TYPE_4 . METHOD_3 ( branch , TYPE_4 . METHOD_4 ( schema , VAR_1 ) ) ) ;  return METHOD_1 ( schema , branch , VAR_1 , VAR_4 . METHOD_5 ( ) ) ;
MODIFIER public final RETURN void NAME METHOD_1 TYPE int NAME line TYPE int NAME VAR_1 INIT = METHOD_2 ( ) COND ( METHOD_3 ( ( VAR_1 - INT_1 ) ) ) < line  METHOD_4 ( ( ( METHOD_5 ( line , STRING_1 ) ) - ( FLOAT_1 * VAR_1 ) ) )  METHOD_6 ( TYPE_1 . create ( line ) )
MODIFIER public RETURN void NAME update  schema = VAR_1 . METHOD_1 ( )  METHOD_2 ( )  METHOD_3 ( VAR_2 , rw , VAR_3 . getId ( ) . METHOD_4 ( ) , null ) TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ; COND ( schema ) != null  schema . close ( )  schema = null
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Status NAME status COND status == null  return STRING_1 ; NAME status  return TYPE_1 . METHOD_2 ( ) ;  return TYPE_1 . METHOD_3 ( ) ;  return TYPE_1 . METHOD_4 ( ) ;  return TYPE_1 . METHOD_5 ( ) ;  return TYPE_1 . METHOD_6 ( ) ;  return status . name ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2.HttpServletResponse NAME rsp TYPE byte[] NAME VAR_2 INIT = VAR_1 . METHOD_2 ( )  rsp . METHOD_3 ( VAR_3 , INT_1 )  rsp . METHOD_4 ( VAR_4 , STRING_1 )  rsp . METHOD_4 ( VAR_5 , STRING_2 )  rsp . METHOD_5 ( STRING_3 )  rsp . METHOD_6 ( VAR_2 . length ) TYPE TYPE_3 NAME out INIT = rsp . METHOD_7 ( )  out . METHOD_8 ( VAR_2 )  out . close ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Id NAME me TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_3 NAME c INIT = server . METHOD_2 ( ) TYPE TYPE_2.Account NAME a INIT = TYPE_4 . METHOD_3 ( ) . get ( me , db ) COND ( a != null ) && ( ( a . METHOD_4 ( ) ) != null )  c . METHOD_5 ( a . METHOD_4 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.util.Set<com.google.gerrit.reviewdb.client.Account.Id> NAME reviewers INIT = VAR_1 . METHOD_2 ( db , java.util.Collections.singleton ( user . email ) , project , change , VAR_2 . METHOD_3 ( ) . id ( VAR_3 . get ( ) ) . get ( ) )  com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME name INIT = name ( STRING_1 )  com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME VAR_2 INIT = METHOD_2 ( name , VAR_3 )  VAR_4 . METHOD_3 ( name , VAR_3 , null , VAR_2 )  VAR_4 . METHOD_3 ( name , STRING_2 , new java.lang.String [ ] { } )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME projectName TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME event TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . METHOD_2 ( ) TYPE TYPE_4 NAME VAR_4 INIT = VAR_2 . METHOD_3 ( )  VAR_4 . METHOD_4 ( ( ( java.lang.String.format ( STRING_1 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ) + ( java.lang.String.format ( STRING_2 , projectName , VAR_1 , event ) ) ) )  METHOD_5 ( VAR_4 )  METHOD_6 ( VAR_2 )
MODIFIER private RETURN boolean NAME METHOD_1 COND ! ( METHOD_2 ( ) )  return false ; COND METHOD_3 ( )  return true ; NAME METHOD_4 ( ) . METHOD_5 ( )  return false ;  return ( ( METHOD_6 ( ) ) && ( ! ( METHOD_7 ( VAR_7 ) ) ) ) || ( VAR_8 . METHOD_8 ( ) ) ;
MODIFIER protected RETURN TYPE_1 NAME METHOD_1 NAME status  return new TYPE_2 ( project , STRING_1 ) ;  return new TYPE_3 ( project , STRING_1 ) ;  return new TYPE_4 ( project , STRING_1 ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change  return new TYPE_2 ( null , change.getId ( ) , null , TYPE_3 . of ( ) , TYPE_3 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_5 . METHOD_1 ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_4 . of ( ) , TYPE_6 . of ( ) , TYPE_6 . of ( ) , null ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_1 NAME user TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . get ( change . getProject ( ) ) COND VAR_1 == null  return false ; TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( user )  return VAR_3 . METHOD_2 ( db , change ) . METHOD_3 ( db ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project TYPE java.util.List<com.google.gerrit.reviewdb.client.Change> NAME changes TYPE org.eclipse.jgit.lib.Repository NAME git  git = VAR_1 . METHOD_2 ( project ) TYPE TYPE_3 NAME e  return ; TYPE TYPE_4 NAME notes INIT = VAR_2 . create ( db , git )  notes . create ( changes , null , STRING_1 , VAR_3 )  git . close ( )
MODIFIER public RETURN TYPE_1<java.lang.String> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( rsrc . METHOD_1 ( ) ) || ( ! ( METHOD_2 ( rsrc . getChange ( ) ) ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;  VAR_1 . METHOD_4 ( rsrc )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_2 NAME VAR_3 TYPE TYPE_5 NAME VAR_4 INIT = new TYPE_5 ( VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_6 NAME u INIT = VAR_5 . create ( VAR_6 . get ( ) , VAR_1 . getProject ( ) . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) , TYPE_7 . METHOD_4 ( ) )  u . METHOD_5 ( VAR_1 . getId ( ) , VAR_4 ) . METHOD_6 ( )  return VAR_4 . change ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME notes TYPE TYPE_2 NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_2 TYPE int NAME value COND METHOD_2 ( notes , VAR_1 , VAR_2 , value )  return true ;  return VAR_3 . user ( VAR_1 ) . change ( notes ) . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_5 ) ;
MODIFIER public RETURN TYPE_1 NAME create TYPE TYPE_2 NAME req TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_5 NAME VAR_1 INIT = TYPE_6 . METHOD_1 ( req ) COND ! ( VAR_1 . METHOD_2 ( ) )  throw new TYPE_3 ( ) ; TYPE TYPE_1 NAME VAR_2 INIT = new TYPE_1 ( repo )  VAR_2 . METHOD_3 ( VAR_3 ) COND ! ( VAR_1 . METHOD_4 ( ) )  VAR_2 . METHOD_5 ( new TYPE_7 ( repo , VAR_1 , db . get ( ) ) )  return VAR_2 ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME VAR_3 COND VAR_2 > ( cfg . METHOD_2 ( ) )  return false ; COND ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) >= ( VAR_4 )  METHOD_5 ( VAR_1 . METHOD_3 ( ) . METHOD_6 ( ) )  return true ;  return false ;
MODIFIER public RETURN void NAME bind TYPE TYPE_1 NAME t TYPE TYPE_2 NAME VAR_1 COND t . METHOD_1 ( ) TYPE TYPE_3 NAME VAR_2 INIT = ( ( TYPE_3 ) ( t ) ) COND ( VAR_3 ) >= ( this . VAR_4 )  VAR_5 = this COND ( VAR_3 ) < ( VAR_6 )  VAR_1 . METHOD_2 ( VAR_2 )  return ;  VAR_7 = t COND ( VAR_4 ) < ( VAR_6 )  VAR_1 . METHOD_2 ( this )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . name = VAR_1  VAR_2 = true  VAR_3 . projects ( ) . create ( in )  METHOD_2 ( VAR_1 , STRING_2 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 INIT = METHOD_4 ( db , cd ) . reviewers ( ) . METHOD_5 ( )  return VAR_1 . contains ( METHOD_2 ( ) . getAccountId ( ) ) ;  return false ;
MODIFIER public RETURN boolean NAME METHOD_1 COND ! ( METHOD_2 ( ) )  return false ; COND METHOD_3 ( )  return true ; NAME METHOD_4 ( ) . METHOD_5 ( )  return false ;  return ( METHOD_4 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) || ( ( METHOD_8 ( ) ) && ( ! ( METHOD_9 ( VAR_7 ) ) ) ) ;
MODIFIER public RETURN TYPE_1<java.lang.String> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND ( rsrc . METHOD_1 ( ) ) || ( METHOD_2 ( rsrc . getChange ( ) ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;  VAR_1 . METHOD_4 ( VAR_2 . get ( ) . getAccountId ( ) , rsrc . getProject ( ) , rsrc . getChange ( ) )  return TYPE_1 . METHOD_3 ( STRING_1 ) ;
MODIFIER private static RETURN com.google.gerrit.server.query.change.ChangeData NAME change TYPE java.lang.String NAME VAR_1  TYPE_1 . METHOD_1 ( VAR_1 ) TYPE com.google.gerrit.server.query.change.ChangeData NAME cd INIT = com.google.gerrit.server.query.change.ChangeData . METHOD_2 ( new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) )  cd . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_1 ) )  return cd ;
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cfg INIT = new TYPE_1 ( )  cfg . METHOD_2 ( STRING_1 , null , STRING_2 , INT_1 )  cfg . METHOD_2 ( STRING_1 , null , STRING_3 , ( ( int ) ( FLOAT_1 ) ) )  bind ( VAR_1 class ) . METHOD_3 ( new TYPE_2 ( null , null , null , null , null , null , cfg ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE java.util.List<TYPE_2> NAME VAR_1 COND VAR_1 . isEmpty ( )  return null ;  return VAR_1 . METHOD_2 ( ) . METHOD_3 ( this : : METHOD_4 ) . collect ( TYPE_3 . METHOD_5 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( ) TYPE TYPE_2 NAME in INIT = new TYPE_2 ( )  VAR_1 = user . email  VAR_2 . changes ( ) . id ( r . getChangeId ( ) ) . METHOD_1 ( in )  com.google.common.truth.Truth.assertThat ( ( ( TYPE_3 < ? > ) ( METHOD_3 ( r . getChangeId ( ) ) ) ) ) . METHOD_4 ( TYPE_4 . of ( user . id ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 + STRING_2  repo . branch ( STRING_3 ) . commit ( ) . add ( STRING_4 , VAR_1 ) . create ( ) TYPE java.lang.String NAME VAR_2 INIT = METHOD_2 ( STRING_5 )  org.junit.Assert . METHOD_3 ( VAR_2 . contains ( ( STRING_6 + ( STRING_7 + STRING_8 ) ) ) )  org.junit.Assert . METHOD_3 ( VAR_2 . contains ( ( STRING_6 + ( STRING_9 + STRING_10 ) ) ) )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . in ( VAR_2 class )  bind ( VAR_3 . ReviewDb class ) . METHOD_2 ( VAR_4 class )  bind ( VAR_5 class ) . in ( VAR_6 )  bind ( VAR_7 class )  bind ( VAR_8 . Factory class ) . in ( VAR_6 )  bind ( VAR_9 . Factory class ) . in ( VAR_6 )  bind ( VAR_10 . Factory class ) . in ( VAR_6 )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_1 NAME VAR_1 MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME update TYPE com.google.gerrit.reviewdb.client.Change NAME change COND change . getStatus ( ) . METHOD_3 ( )  change . METHOD_4 ( VAR_2 )  change . METHOD_5 ( VAR_1 )  return change ;  return null ;  return db . changes ( ) . METHOD_2 ( change.getId ( ) , new TYPE_2 < com.google.gerrit.reviewdb.client.Change > ( ) { public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_3 ( ) ) { change . METHOD_4 ( VAR_2 ) ; change . METHOD_5 ( VAR_1 ) ; return change ; } return null ; } } ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_4 NAME VAR_1 INIT = METHOD_2 ( )  VAR_1 . put ( VAR_2 , VAR_3 )  VAR_1 . put ( VAR_4 , VAR_5 ) COND STRING_1 . equals ( VAR_3 )  return METHOD_3 ( VAR_1 ) ; COND ( VAR_6 ) != null  VAR_1 . put ( VAR_7 , VAR_6 )  VAR_1 . put ( VAR_8 , VAR_9 )  return new TYPE_5 ( VAR_1 ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change.Id NAME changeId TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . get ( ) . changes ( ) . get ( changeId ) COND c == null  throw TYPE_3 . error ( ( ( STRING_1 + changeId ) + STRING_2 ) ) ;  return VAR_1 . create ( db . get ( ) , c ) ;
MODIFIER static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<?> NAME VAR_2 TYPE java.lang.String NAME name TYPE TYPE_3 NAME in INIT = TYPE_4 . METHOD_2 ( VAR_2 , name ) COND in != null TYPE TYPE_5 NAME VAR_3 INIT = TYPE_6 . METHOD_3 ( in , INT_1 )  TYPE_4 . METHOD_4 ( VAR_1 , VAR_3 )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE TYPE_1 NAME e MODIFIER public RETURN void NAME onSuccess TYPE TYPE_4 NAME p  TYPE_5 . METHOD_3 ( p . METHOD_4 ( new TYPE_6 ( ) ) )  TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( TYPE_4 p ) { TYPE_5 . METHOD_3 ( p . METHOD_4 ( new TYPE_6 ( ) ) ) ; } } )  close ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE java.lang.String NAME b INIT = ( ( base ) != null ) ? java.lang.String . METHOD_2 ( base . get ( ) ) : null TYPE java.lang.String NAME VAR_2 INIT = java.lang.String . METHOD_2 ( revision . get ( ) )  TYPE_1 . display ( TYPE_2 . METHOD_3 ( changeId , VAR_2 ) , new TYPE_3 ( changeId , b , VAR_2 , VAR_1 , false ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( ) TYPE TYPE_1 NAME res INIT = METHOD_3 ( STRING_1 )  org.junit.Assert.assertEquals ( ( ( ( ( id ( STRING_2 ) ) + STRING_3 ) + ( id ( STRING_4 ) ) ) + STRING_5 ) , res . METHOD_4 ( ) )
MODIFIER public RETURN java.lang.String NAME METHOD_1 COND ( getValue ( ) ) < 0  return TYPE_1 . toString ( getValue ( ) ) ; COND ( getValue ( ) ) == 0  return STRING_1 ;  return STRING_2 + ( TYPE_1 . toString ( getValue ( ) ) ) ;
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1<?> NAME c TYPE java.lang.String NAME n INIT = c . getName ( )  n = n . METHOD_2 ( ( ( n . METHOD_3 ( CHAR_1 ) ) + 1 ) ) COND n . METHOD_4 ( STRING_1 )  n = n . METHOD_2 ( 1 )  return TYPE_2 . METHOD_5 ( n ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = VAR_1 . METHOD_2 ( )  TYPE_2 . METHOD_3 ( p . METHOD_4 ( ) ) COND ( VAR_2 ) != null  VAR_2 . METHOD_5 ( p . METHOD_6 ( ) ) COND ( VAR_3 ) != null  VAR_3 . METHOD_5 ( p . METHOD_6 ( ) )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE boolean NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE java.util.List<TYPE_4> NAME VAR_4  VAR_5 = db . METHOD_2 ( )  return METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ;  VAR_5 . METHOD_4 ( )
MODIFIER private RETURN int NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME i TYPE int NAME row TYPE int NAME VAR_1 TYPE boolean NAME VAR_2 COND i . METHOD_2 ( ) TYPE TYPE_2 NAME c INIT = i . METHOD_3 ( ) COND ( c . METHOD_4 ( ) ) == ( VAR_3 )  METHOD_5 ( row )  METHOD_6 ( row )  METHOD_7 ( row , VAR_1 , c , ( ! ( i . METHOD_2 ( ) ) ) , VAR_2 )  row ++  return row ;
MODIFIER public RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME input TYPE java.lang.String NAME VAR_1 INIT = VAR_2 . METHOD_1 ( input , VAR_3 ) COND ! ( TYPE_1 . METHOD_2 ( VAR_1 ) )  throw new TYPE_2 ( ( ( ( STRING_1 + ( toString ( ) ) ) + STRING_2 ) + VAR_1 ) ) ; TYPE java.lang.String NAME result INIT = new TYPE_3 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_3 , VAR_1 ) . append ( TYPE_4 . METHOD_5 ( input ) ) . METHOD_6 ( ) . METHOD_7 ( )  return result ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE int NAME VAR_3 INIT = VAR_1 . METHOD_2 ( )  return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( new TYPE_4 . NameKey ( VAR_2 . getName ( ) ) ) . METHOD_5 ( new TYPE_4 . Id ( VAR_3 ) ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) . METHOD_8 ( TYPE_5 . METHOD_9 ( ) ) . METHOD_10 ( ) ;
MODIFIER public RETURN TYPE_1<TYPE_2> NAME METHOD_1 TYPE TYPE_3<?extendsTYPE_1<TYPE_2>> NAME VAR_1 COND ( VAR_1 . size ( ) ) != 1  throw new TYPE_4 ( STRING_1 ) ;  return new TYPE_5 < TYPE_2 > ( getName ( ) , VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ;
MODIFIER public RETURN java.lang.String NAME apply TYPE TYPE_1 NAME rsrc TYPE TYPE_3 NAME VAR_1 INIT = VAR_2 . get ( ) COND VAR_1 == null  throw new TYPE_2 ( ) ; TYPE java.lang.String NAME url INIT = VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) ) COND TYPE_4 . METHOD_3 ( url )  throw new TYPE_2 ( ) ;  return url ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_1<TYPE_2> NAME VAR_3  new TYPE_3 ( ( STRING_1 + ( TYPE_4 . METHOD_2 ( VAR_1 ) . METHOD_3 ( STRING_2 , STRING_3 ) ) ) ) . METHOD_4 ( STRING_4 , STRING_5 ) . METHOD_5 ( STRING_6 , VAR_2 ) . METHOD_6 ( STRING_7 ) . METHOD_7 ( TYPE_5 . METHOD_8 ( VAR_3 ) )
MODIFIER public RETURN TYPE_1<java.util.List<TYPE_2>> NAME apply TYPE java.util.List<com.google.gerrit.reviewdb.client.Change> NAME changes TYPE java.util.List<TYPE_1<TYPE_2>> NAME result INIT = TYPE_3 . METHOD_1 ( changes . size ( ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME c IN changes  result . add ( VAR_1 . submit ( new TYPE_4 ( event , c . METHOD_2 ( ) , c . getId ( ) ) ) )  return TYPE_5 . METHOD_3 ( result ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME file TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( new TYPE_3 ( name ) ) TYPE TYPE_4 NAME input INIT = new TYPE_4 ( file )  TYPE_5 . METHOD_3 ( input , VAR_1 )  input . close ( )  VAR_1 . METHOD_4 ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.Id NAME me INIT = TYPE_2 . getAccountId ( ) TYPE java.util.Set<TYPE_3.Id> NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( me ) TYPE TYPE_4 NAME VAR_2 INIT = VAR_3 . get ( change . METHOD_4 ( ) . getParentKey ( ) )  METHOD_1 ( VAR_1 , VAR_2 . METHOD_5 ( ) )  METHOD_1 ( VAR_1 , VAR_3 . METHOD_6 ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = repo . METHOD_3 ( repo . commit ( ) . message ( STRING_2 ) . add ( STRING_3 , STRING_4 ) . add ( STRING_5 , STRING_6 ) . create ( ) ) TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = METHOD_4 ( repo , commit , null , null , null ) . insert ( )  METHOD_5 ( STRING_7 )  METHOD_5 ( STRING_8 )  METHOD_5 ( STRING_9 , change )
MODIFIER public RETURN void NAME METHOD_1  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( db , VAR_2 . METHOD_3 ( ) ) ) . METHOD_4 ( VAR_3 , VAR_4 , VAR_5 ) . METHOD_5 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_6 ( db , VAR_2 . METHOD_3 ( ) ) ) . METHOD_4 ( VAR_6 , VAR_7 ) . METHOD_5 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1  TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 , null , true ) TYPE TYPE_2 NAME r INIT = VAR_3 . put ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) , METHOD_3 ( VAR_1 ) )  org.junit.Assert.assertEquals ( VAR_4 , r . METHOD_4 ( ) )  r . METHOD_5 ( )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1<TYPE_2> NAME result TYPE java.util.List<TYPE_3> NAME r INIT = new java.util.ArrayList < TYPE_3 > ( result . length ( ) ) TYPE TYPE_2 NAME VAR_1 IN TYPE_4 . METHOD_1 ( result )  r . add ( new TYPE_3 ( VAR_1 ) )  VAR_2 . METHOD_2 ( req , new TYPE_5 ( r ) )
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME git TYPE TYPE_2 NAME VAR_1 TYPE java.lang.String NAME changeId TYPE TYPE_3 NAME VAR_2 INIT = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) , changeId )  return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ;
MODIFIER public RETURN TYPE_1 NAME apply TYPE TYPE_2 NAME rsrc TYPE org.eclipse.jgit.lib.Repository NAME git INIT = VAR_1 . METHOD_1 ( VAR_2 ) TYPE TYPE_4 NAME p INIT = TYPE_4 . METHOD_2 ( )  p . METHOD_3 ( git )  return new TYPE_1 ( null , p , git ) ;  git . close ( )
MODIFIER public static RETURN void NAME METHOD_1 TYPE int NAME id TYPE java.lang.String NAME msg TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_1 TYPE TYPE_3 NAME input INIT = TYPE_3 . create ( )  input . message ( TYPE_4 . METHOD_2 ( msg ) )  TYPE_4 . METHOD_3 ( id , STRING_1 ) . METHOD_4 ( input , VAR_1 )
MODIFIER MODIFIER RETURN void NAME display TYPE java.util.List<java.util.List<java.lang.String>> NAME values TYPE int NAME row INIT = 2 COND row < ( table . METHOD_1 ( ) )  row ++  table . METHOD_2 ( ( row -- ) ) TYPE int NAME row INIT = 2 TYPE java.util.List<java.lang.String> NAME VAR_1 IN values  METHOD_3 ( row , VAR_1 )  row ++
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_2.Change NAME change INIT = db . changes ( ) . get ( id ) COND change == null  throw new TYPE_3 ( new TYPE_5 ( ) ) ; TYPE TYPE_6 NAME VAR_1 INIT = new TYPE_6 ( db ) TYPE TYPE_1 NAME d INIT = new TYPE_1 ( )  d . METHOD_1 ( db , new TYPE_7 ( db ) , VAR_1 , change )  return d ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 INIT = null TYPE TYPE_3 NAME VAR_2 INIT = null  VAR_1 = VAR_3 . METHOD_2 ( )  VAR_2 = VAR_1 . METHOD_3 ( ) . METHOD_4 ( null , null , TYPE_4 . METHOD_5 ( ) , null )  return VAR_2 . METHOD_6 ( ) ;  METHOD_7 ( VAR_2 )  METHOD_8 ( VAR_1 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ( VAR_3 . size ( ) ) > 0 TYPE java.util.Set<TYPE_3> NAME VAR_4 INIT = new TYPE_4 < TYPE_3 > ( VAR_2 . METHOD_2 ( ) ) TYPE TYPE_3 NAME s IN VAR_2 . METHOD_2 ( ) COND VAR_3 . contains ( s . METHOD_3 ( ) )  VAR_4 . METHOD_4 ( s )  VAR_2 . METHOD_5 ( VAR_4 )  VAR_5 . METHOD_1 ( VAR_1 , VAR_2 )
MODIFIER public RETURN java.util.List<TYPE_1> NAME get COND ! ( TYPE_3 . METHOD_1 ( VAR_1 ) )  return METHOD_2 ( ) ; COND VAR_2  return METHOD_3 ( ( ( user ) != null ? VAR_3 . create ( user ) : VAR_4 . get ( ) ) ) ; COND ( user ) != null  return VAR_5 . get ( ) . apply ( new TYPE_4 ( VAR_3 . create ( user ) ) ) ;  return METHOD_4 ( ) ;
MODIFIER public RETURN TYPE_1<com.google.gerrit.reviewdb.client.AccountGroup> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( )  return java.util.Collections . METHOD_3 ( db . METHOD_4 ( ) . METHOD_1 ( ) . METHOD_5 ( ) ) ;  db . close ( ) TYPE com.google.gwtorm.server.OrmException NAME e  VAR_1 . METHOD_6 ( STRING_1 , e )  return java.util.Collections . METHOD_7 ( ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME get TYPE org.eclipse.jgit.lib.Repository NAME VAR_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_2 TYPE int NAME VAR_3 TYPE java.lang.String NAME branch INIT = VAR_2 . change ( ) . METHOD_1 ( ) . get ( ) TYPE java.lang.String NAME VAR_4 INIT = TYPE_2 . METHOD_2 ( VAR_2 . getId ( ) . get ( ) , VAR_3 , branch )  return get ( VAR_4 , VAR_1 , branch , VAR_2 . METHOD_3 ( ) ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  METHOD_2 ( VAR_4 , VAR_2 , VAR_3 , STRING_2 ) . METHOD_3 ( true ) TYPE TYPE_1 NAME u INIT = user ( )  METHOD_4 ( STRING_3 , u . METHOD_5 ( ) )  METHOD_4 ( STRING_3 , u . METHOD_6 ( STRING_4 ) . METHOD_5 ( ) )  METHOD_4 ( STRING_3 , u . METHOD_6 ( STRING_5 ) . METHOD_5 ( ) )  METHOD_4 ( STRING_6 , u . METHOD_6 ( STRING_7 ) . METHOD_5 ( ) )
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( ! ( super . equals ( VAR_1 ) ) ) || ( ! ( VAR_1 instanceof TYPE_2 ) )  return false ;  return new TYPE_3 < TYPE_4 > ( METHOD_1 ( ) ) . equals ( new TYPE_3 < TYPE_4 > ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_1 ( ) ) ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2.Change NAME change TYPE TYPE_4.NameKey NAME VAR_1 INIT = change . getProject ( )  return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_1 ( change ) ; TYPE TYPE_5 NAME e  throw new TYPE_3 ( change.getId ( ) , e ) ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_1 ) )  assertEquals ( STRING_2 , TYPE_1 . METHOD_2 ( STRING_2 ) )  assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( STRING_4 ) )  assertEquals ( STRING_3 , TYPE_1 . METHOD_2 ( STRING_5 ) )  assertEquals ( STRING_6 , TYPE_1 . METHOD_2 ( STRING_7 ) )  assertEquals ( STRING_8 , TYPE_1 . METHOD_2 ( STRING_9 ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME in  return VAR_1 . id ( VAR_2 . get ( ) . apply ( change , in ) . VAR_3 ) ; TYPE com.google.gwtorm.server.OrmException|TYPE_4|java.io.IOException NAME e  throw new TYPE_3 ( STRING_1 , e ) ;
MODIFIER private RETURN TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE TYPE_2.NameKey NAME branch TYPE java.util.List<java.lang.String> NAME VAR_1  return query ( TYPE_3 . METHOD_2 ( TYPE_4 . ref ( branch ) , TYPE_4 . project ( branch . getParentKey ( ) ) , TYPE_3 . not ( TYPE_4 . status ( VAR_2 ) ) , TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( TYPE_4 . schema ( VAR_3 ) , VAR_1 ) ) ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE java.util.Set<TYPE_1> NAME VAR_1 TYPE boolean NAME VAR_2 INIT = ( ( VAR_3 . equals ( VAR_1 ) ) && ( ( token ) != null ) ) && ( ( VAR_4 ) != null ) COND VAR_2  VAR_5 = VAR_4 . METHOD_2 ( ) TYPE TYPE_2 NAME e  VAR_6 . error ( STRING_1 , e )  METHOD_3 ( )  VAR_2 = false  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME p INIT = TYPE_2 . METHOD_2 ( STRING_1 )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_2 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_3 ) ) )  METHOD_3 ( p . METHOD_4 ( TYPE_2 . change ( STRING_2 , STRING_4 ) ) )  METHOD_5 ( p . METHOD_4 ( TYPE_2 . change ( STRING_5 ) ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME in INIT = new TYPE_1 ( )  in . name = VAR_1  VAR_2 = true  VAR_3 = TYPE_2 . METHOD_2 ( INT_1 )  VAR_3 . add ( STRING_2 )  VAR_3 . add ( STRING_3 )  VAR_3 . add ( STRING_4 )  VAR_4 . projects ( ) . create ( in )  METHOD_3 ( VAR_1 , STRING_2 )  METHOD_4 ( VAR_1 , STRING_2 , STRING_3 , STRING_5 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( )  METHOD_2 ( ) TYPE java.util.List<TYPE_2.ChangeInfo> NAME VAR_2 INIT = VAR_3 . changes ( ) . query ( ) . METHOD_3 ( 1 ) . get ( )  org.junit.Assert.assertEquals ( VAR_1 . getChangeId ( ) , TYPE_3 . METHOD_4 ( VAR_2 ) . changeId )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( STRING_1 ) TYPE TYPE_1 NAME n INIT = VAR_1 . METHOD_3 ( )  METHOD_4 ( VAR_1 , n )  assertEquals ( ( ( ( ( ( VAR_2 ) + ( TYPE_2 . METHOD_5 ( STRING_2 ) ) ) + ( TYPE_2 . METHOD_5 ( STRING_3 ) ) ) + ( VAR_3 ) ) + STRING_4 ) , n . METHOD_6 ( ) )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND ( cd . METHOD_2 ( ) ) != null  return cd . METHOD_2 ( ) ; TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = cd . METHOD_3 ( ) COND ps == null  return TYPE_2 . of ( ) ;  cd . METHOD_4 ( new TYPE_3 ( cd ) . METHOD_5 ( ps ) . METHOD_6 ( true ) . METHOD_7 ( true ) . METHOD_8 ( ) )  return cd . METHOD_2 ( ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE TYPE_2 NAME msg TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = ctx . getChange ( ) TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = ctx . METHOD_2 ( )  METHOD_3 ( STRING_1 , c . getId ( ) )  c . METHOD_4 ( VAR_1 )  c . METHOD_5 ( VAR_2 )  ctx . METHOD_6 ( ) COND msg != null  VAR_3 . METHOD_7 ( db , ctx . METHOD_8 ( msg . METHOD_9 ( ) ) , msg )
MODIFIER public RETURN TYPE_1 NAME get TYPE long NAME VAR_1 TYPE TYPE_2 NAME VAR_2 COND ! ( METHOD_1 ( ) )  VAR_3 . METHOD_2 ( VAR_4 , ( ( int ) ( TYPE_6 . METHOD_3 ( VAR_1 , VAR_2 ) ) ) )  set ( null )  return super . get ( VAR_1 , VAR_2 ) ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE TYPE_2 NAME res INIT = new TYPE_2 ( )  METHOD_2 ( VAR_1 , VAR_2 < TYPE_3 > METHOD_3 ( ) , res )  assertEquals ( INT_1 , res . getStatus ( ) )  return res . METHOD_4 ( VAR_3 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME change INIT = METHOD_2 ( git , true ) TYPE TYPE_1.Result NAME VAR_1 INIT = METHOD_2 ( git , true ) TYPE TYPE_1.Result NAME VAR_2 INIT = METHOD_2 ( git , true )  METHOD_2 ( git , false ) TYPE java.util.Set<java.lang.String> NAME changes INIT = METHOD_3 ( change )  METHOD_4 ( changes , VAR_1 , VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME name TYPE TYPE_2<?extendsTYPE_3> NAME VAR_2 TYPE TYPE_4 NAME VAR_3 INIT = VAR_2 . METHOD_2 ( VAR_4 class ) COND VAR_3 == null  throw new TYPE_5 ( STRING_1 ) ;  bind ( TYPE_6 . key ( VAR_1 , name , TYPE_7 . METHOD_3 ( VAR_3 ) ) ) . to ( VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result  VAR_1 = new TYPE_2 ( this , base , revision , path , result . METHOD_2 ( ) , METHOD_3 ( ) . METHOD_4 ( ) )  METHOD_5 ( result . METHOD_6 ( ) )  display ( VAR_2 )  VAR_3 . METHOD_7 ( VAR_2 )
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . in ( VAR_2 class )  bind ( VAR_3 class )  bind ( VAR_4 class ) . in ( VAR_5 )  bind ( VAR_6 class ) . in ( VAR_2 class )  bind ( VAR_7 . Factory class ) . in ( VAR_5 )  bind ( VAR_8 . Factory class ) . in ( VAR_5 )  factory ( VAR_9 . Factory class )  factory ( VAR_10 . Factory class )
MODIFIER protected RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE java.lang.String NAME table TYPE java.lang.String NAME VAR_1 TYPE java.lang.String NAME to TYPE TYPE_1 NAME s INIT = ( ( TYPE_1 ) ( db ) ) TYPE TYPE_2 NAME e INIT = new TYPE_2 ( s )  s . METHOD_2 ( e , table , VAR_1 , to )  e . close ( )
MODIFIER protected RETURN void NAME run TYPE TYPE_1 NAME input INIT = new TYPE_1 ( )  input . ref = VAR_1  VAR_2 . apply ( new TYPE_2 ( project . METHOD_1 ( ) , project . METHOD_2 ( ) ) , input ) TYPE TYPE_3 NAME e  throw METHOD_3 ( e ) ;
MODIFIER public RETURN int NAME METHOD_1 TYPE int NAME VAR_1 TYPE TYPE_1 NAME s IN VAR_2 TYPE boolean NAME VAR_3 INIT = false COND VAR_1 <= ( VAR_4 )  ( VAR_4 ) ++ COND VAR_1 < ( VAR_5 )  ( VAR_5 ) ++  return super . METHOD_1 ( VAR_1 ) ;
MODIFIER public static RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 COND ( VAR_1 . email ( ) ) != null  return VAR_1 . email ( ) ; COND ( VAR_1 . name ( ) ) != null  return VAR_1 . name ( ) ;  return STRING_1 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_1 INIT = METHOD_3 ( repo , null , null , null , null ) . insert ( ) TYPE com.google.gerrit.reviewdb.client.Change NAME VAR_2 INIT = METHOD_3 ( repo , null , null , null , null ) . insert ( )  METHOD_4 ( STRING_2 )  METHOD_4 ( VAR_1 . getId ( ) . get ( ) , VAR_1 )  METHOD_4 ( VAR_2 . getId ( ) . get ( ) , VAR_2 )
MODIFIER public RETURN TYPE_1 NAME get TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME ref INIT = TYPE_4 . METHOD_1 ( VAR_1 ) COND ref != null MODIFIER public RETURN java.lang.String NAME getName  return ref . getName ( ) ; MODIFIER public RETURN TYPE_6 NAME METHOD_2  return ref . METHOD_3 ( ) ; MODIFIER public RETURN java.lang.String NAME METHOD_4  return null ; MODIFIER public RETURN java.lang.String NAME METHOD_5  return null ;  return new TYPE_5 ( ) { public java.lang.String getName ( ) { return ref . getName ( ) ; } public TYPE_6 METHOD_2 ( ) { return ref . METHOD_3 ( ) ; } public java.lang.String METHOD_4 ( ) { return null ; } public java.lang.String METHOD_5 ( ) { return null ; } } ;  return null ;
MODIFIER private RETURN void NAME METHOD_1 TYPE java.lang.StringBuilder NAME VAR_1 TYPE TYPE_1 NAME VAR_2 TYPE short NAME VAR_3 TYPE int NAME line  VAR_1 . append ( ( STRING_1 + line ) ) TYPE java.lang.String NAME VAR_4 INIT = VAR_2 . METHOD_2 ( VAR_3 , line )  VAR_1 . append ( STRING_2 )  VAR_1 . append ( VAR_4 ) TYPE TYPE_2 NAME e BLOCK BLOCK  VAR_1 . append ( STRING_3 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME config TYPE TYPE_2 NAME VAR_1  TYPE_4 . sshd ( config , VAR_1 )  TYPE_4 . METHOD_2 ( config , VAR_1 )  TYPE_4 . user ( config , VAR_1 )  TYPE_4 . auth ( config , VAR_1 )  TYPE_4 . METHOD_3 ( config , VAR_1 )
MODIFIER private static RETURN void NAME METHOD_1 TYPE byte[] NAME VAR_1 TYPE TYPE_1 NAME out TYPE byte[] NAME VAR_2 INIT = out . METHOD_2 ( ) TYPE int NAME i INIT = 0 COND i < ( VAR_1 . length )  i ++  assertEquals ( VAR_1 [ i ] , VAR_2 [ i ] )
MODIFIER public RETURN java.util.List<java.lang.String> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( psId . getParentKey ( ) ) COND c == null  return null ; TYPE TYPE_1 NAME notes INIT = VAR_1 . create ( c ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps INIT = VAR_2 . get ( db , notes , psId )  return ps != null ? ps . METHOD_2 ( ) : null ;
MODIFIER public RETURN boolean NAME METHOD_1 COND ( ( VAR_1 ) == null ) && ( VAR_2 . METHOD_1 ( ) ) TYPE TYPE_1<TYPE_2> NAME p INIT = VAR_2 . METHOD_2 ( ) . get ( ) COND p != null  VAR_1 = p . get ( ) TYPE TYPE_3 NAME e  VAR_3 . error ( ( ( STRING_1 + p ) + STRING_2 ) , e )  return ( VAR_1 ) != null ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db COND ( ( getChange ( ) . getStatus ( ) ) == ( VAR_1 ) ) && ( ! ( METHOD_2 ( db , null ) ) )  return false ;  return METHOD_3 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = event . METHOD_2 ( ) TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME VAR_2 COND VAR_1 instanceof TYPE_3  VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_3 ( )  VAR_2 = TYPE_3 . METHOD_4 ( ) COND VAR_2 != null  METHOD_5 ( true )  METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 , VAR_3 ) )  METHOD_5 ( false )  super . METHOD_1 ( event )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( TYPE_3 . of ( db ) , VAR_1 ) MODIFIER public RETURN TYPE_2 NAME METHOD_2  return VAR_2 ; MODIFIER public RETURN TYPE_4<com.google.gerrit.reviewdb.server.ReviewDb> NAME METHOD_3  return TYPE_3 . of ( db ) ;  return new TYPE_1 ( ) { public TYPE_2 METHOD_2 ( ) { return VAR_2 ; } public TYPE_4 < com.google.gerrit.reviewdb.server.ReviewDb > METHOD_3 ( ) { return TYPE_3 . of ( db ) ; } } ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 , VAR_3 )  METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_4 ) . to ( VAR_7 ) . METHOD_5 ( VAR_8 , VAR_9 ) . METHOD_5 ( VAR_10 ) . METHOD_6 ( VAR_11 ) . METHOD_6 ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_3 NAME VAR_3 TYPE TYPE_5 NAME req INIT = ( ( TYPE_5 ) ( VAR_1 ) ) COND ! ( TYPE_6 . METHOD_2 ( req ) )  VAR_3 . METHOD_1 ( VAR_1 , VAR_2 )  return ; TYPE TYPE_7 NAME rsp INIT = new TYPE_7 ( ( ( TYPE_8 . HttpServletResponse ) ( VAR_2 ) ) ) COND METHOD_3 ( req , rsp )  VAR_3 . METHOD_1 ( req , VAR_2 )
MODIFIER private RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( )  VAR_1 . METHOD_2 ( new TYPE_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) )  VAR_1 . METHOD_5 ( TYPE_4 . METHOD_6 ( base , revision , path ) )  VAR_1 . METHOD_7 ( TYPE_5 . METHOD_4 ( ) )  return java.util.Collections . METHOD_8 ( VAR_1 ) ;
MODIFIER public RETURN TYPE_1<java.lang.String> NAME apply TYPE TYPE_2 NAME rsrc TYPE TYPE_3 NAME input COND rsrc . METHOD_1 ( )  throw new TYPE_5 ( STRING_1 ) ; COND ! ( METHOD_2 ( rsrc ) )  VAR_1 . METHOD_3 ( rsrc )  return TYPE_1 . METHOD_4 ( STRING_2 ) ; TYPE TYPE_6 NAME e  throw new TYPE_7 ( e . getMessage ( ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_4 ( STRING_3 , e ) ;
MODIFIER public RETURN TYPE_1 NAME run TYPE TYPE_2.ReviewDb NAME db TYPE TYPE_2.AccountGroup NAME group INIT = db . METHOD_1 ( ) . get ( VAR_1 )  METHOD_2 ( db , group )  group . METHOD_3 ( VAR_2 )  db . METHOD_1 ( ) . update ( java.util.Collections.singleton ( group ) )  VAR_3 . METHOD_4 ( VAR_1 )  return VAR_4 ;
MODIFIER private static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req COND ( ! ( STRING_1 . equals ( req . METHOD_2 ( ) ) ) ) && ( ! ( STRING_2 . equals ( req . METHOD_2 ( ) ) ) )  throw new TYPE_2 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Change . Id ( 1 ) , STRING_1 )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_3 ( ) ) . isEqualTo ( VAR_2 )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_7 ( ) . METHOD_5 ( ) ) . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE int NAME index TYPE TYPE_2 NAME VAR_1 TYPE int NAME VAR_2 INIT = METHOD_2 ( index , false , VAR_3 ) COND VAR_2 < 0  return null ; TYPE TYPE_1 NAME VAR_4 INIT = METHOD_3 ( VAR_2 , VAR_1 , null , TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( ) ) )  return VAR_4 ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME project TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_1 TYPE org.eclipse.jgit.lib.ObjectId NAME VAR_2  return new TYPE_3 ( ) . METHOD_2 ( new TYPE_4 . Key ( project , repo , VAR_1 , VAR_2 , VAR_3 ) ) ; TYPE java.io.IOException NAME e  VAR_4 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 . name ( ) ) ) + STRING_2 ) + ( project . getProject ( ) . getName ( ) ) ) , e )  return VAR_5 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME ctx  METHOD_2 ( ctx )  VAR_1 = VAR_2 . get ( ctx . METHOD_3 ( ) , commit , patchSet . getId ( ) )  change . METHOD_4 ( VAR_1 ) COND ! ( VAR_3 )  return ;  ctx . METHOD_5 ( new TYPE_3 . ReceiveCommand ( org.eclipse.jgit.lib.ObjectId . METHOD_6 ( ) , commit , patchSet . getRefName ( ) ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2  METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) COND VAR_1 < VAR_2 TYPE int NAME VAR_3 INIT = VAR_2 - VAR_1  METHOD_4 ( VAR_3 ) COND VAR_1 > VAR_2 TYPE int NAME VAR_4 INIT = VAR_1 - VAR_2  METHOD_5 ( VAR_4 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME rsrc TYPE java.lang.String NAME VAR_1 TYPE TYPE_4 NAME VAR_2 INIT = new TYPE_4 ( )  VAR_3 = VAR_1  VAR_4 = VAR_5  VAR_6 = true  VAR_7 = VAR_8  return VAR_9 . METHOD_2 ( rsrc , VAR_2 ) ;
MODIFIER static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME type  return new TYPE_3 ( VAR_1 , TYPE_4 . METHOD_2 ( type . getName ( ) ) , TYPE_4 . METHOD_2 ( type . getId ( ) ) , TYPE_4 . METHOD_2 ( type . METHOD_3 ( ) ) , new TYPE_5 ( type . METHOD_4 ( ) . getValue ( ) ) , new TYPE_5 ( type . METHOD_5 ( ) . getValue ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event TYPE TYPE_2 NAME VAR_1 INIT = table . METHOD_2 ( event ) COND VAR_1 == null  return ; COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 )  METHOD_4 ( VAR_1 . METHOD_5 ( ) ) COND ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) THEN THEN COND ( METHOD_6 ( VAR_1 . METHOD_5 ( ) ) ) != null  METHOD_7 ( VAR_1 . METHOD_5 ( ) )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE java.lang.String NAME name INIT = METHOD_2 ( TYPE_3 . METHOD_3 ( req ) , TYPE_4 . METHOD_4 ( req ) , req , res ) COND name == null  return ; TYPE TYPE_5 NAME out INIT = METHOD_5 ( req , res )  out . METHOD_6 ( TYPE_6 . METHOD_7 ( name ) )  out . close ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3<java.lang.String> NAME VAR_2 TYPE TYPE_3<java.lang.String> NAME VAR_3 TYPE TYPE_3<java.lang.String> NAME VAR_4 TYPE TYPE_4 NAME e INIT = new TYPE_4 ( change , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) COND ! ( VAR_5 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_5 NAME VAR_6 IN VAR_5  VAR_6 . METHOD_4 ( e )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME s TYPE java.lang.String NAME changeId TYPE int NAME VAR_1 TYPE TYPE_2 NAME r INIT = s . METHOD_2 ( ( ( STRING_1 + changeId ) + STRING_2 ) , new TYPE_3 ( ) . label ( STRING_3 , 2 ) )  org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_3 ( ) )  r . METHOD_4 ( )
MODIFIER static RETURN TYPE_1 NAME create TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 TYPE TYPE_5 NAME group INIT = ( ( VAR_3 != null ) && ( ( VAR_3 . METHOD_1 ( ) ) != null ) ) ? VAR_3 . METHOD_1 ( ) . METHOD_2 ( ) : null  return new TYPE_6 ( VAR_1 . getName ( ) , VAR_2 . getName ( ) , group ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cm COND cm . METHOD_2 ( ) TYPE TYPE_2 NAME VAR_1 INIT = cm . METHOD_3 ( )  cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) )  cm . METHOD_6 ( null )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) == null  VAR_1 = VAR_3 . get ( ) . METHOD_2 ( )  VAR_1 = VAR_2 MODIFIER public RETURN TYPE_2 NAME get  return VAR_1 ;  return new TYPE_1 ( VAR_3 . get ( ) , VAR_1 , VAR_4 . create ( VAR_5 , new TYPE_3 < TYPE_2 > ( ) { public TYPE_2 get ( ) { return VAR_1 ; } } , VAR_6 ) ) ;
MODIFIER private RETURN java.util.Set<java.lang.String> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 INIT = new TYPE_1 < java.lang.String > ( ) TYPE TYPE_2 NAME VAR_3 IN METHOD_2 ( ) TYPE TYPE_3 NAME VAR_4 INIT = VAR_3 . METHOD_3 ( VAR_1 ) COND VAR_4 != null  VAR_2 . add ( VAR_3 . METHOD_4 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME config INIT = STRING_1 + ( STRING_2 + STRING_3 ) TYPE TYPE_1 NAME VAR_1 INIT = new TYPE_1 ( new TYPE_2 ( projectName , config ) , new TYPE_3 ( STRING_4 ) , new TYPE_4 ( new com.google.gerrit.reviewdb.client . AccountGroup ( new TYPE_5 . NameKey ( STRING_5 ) , new TYPE_5 . Id ( 1 ) , new TYPE_6 ( STRING_4 ) ) ) )  com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( projectName , STRING_6 , STRING_7 ) ) . METHOD_3 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 , VAR_3 )  METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 )  assertThat ( VAR_6 ) . METHOD_4 ( STRING_1 , VAR_1 ) . to ( VAR_7 ) . to ( VAR_8 ) . METHOD_5 ( VAR_4 , VAR_9 ) . METHOD_5 ( VAR_10 ) . METHOD_6 ( VAR_11 ) . METHOD_6 ( VAR_2 , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME in INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME out  out = METHOD_3 ( in )  METHOD_4 ( ( ( out instanceof TYPE_2 ) || ( out instanceof TYPE_3 ) ) )  VAR_1 . METHOD_5 ( null )  out = METHOD_3 ( in )  METHOD_4 ( ( out instanceof TYPE_4 ) )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE java.util.List<TYPE_1> NAME VAR_2 INIT = new TYPE_4 < > ( ) TYPE TYPE_5 NAME VAR_3 IN VAR_4  VAR_2 . METHOD_2 ( VAR_3 . METHOD_1 ( VAR_1 ) ) TYPE TYPE_3 NAME e  VAR_2 . METHOD_2 ( e . METHOD_3 ( ) )  throw new TYPE_3 ( e . getMessage ( ) , VAR_2 ) ;  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( )  VAR_2 = new TYPE_2 ( ( ( TYPE_3 ) ( VAR_3 . METHOD_6 ( project ) ) ) )  VAR_4 = VAR_2 . METHOD_7 ( ) . parseCommit ( VAR_2 . METHOD_8 ( ) . METHOD_9 ( STRING_1 ) . METHOD_10 ( ) )  VAR_5 = admin . getId ( )  VAR_6 = VAR_7 . get ( )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit TYPE org.eclipse.jgit.lib.Repository NAME repo INIT = METHOD_2 ( )  return METHOD_3 ( repo , db , rw , commit , repo . METHOD_4 ( ) . values ( ) ) ; TYPE java.io.IOException NAME e TYPE java.lang.String NAME msg INIT = java.lang.String.format ( STRING_1 , commit . name ( ) , getProject ( ) . METHOD_5 ( ) )  VAR_1 . error ( msg , e )  return false ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 COND ( METHOD_2 ( ) ) != null  return new TYPE_1 ( METHOD_2 ( ) ) . METHOD_3 ( ) ; TYPE TYPE_2 NAME e BLOCK BLOCK  return TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ReviewDb NAME db TYPE TYPE_1.PatchSet NAME ps  patchSet = ps  info = db . METHOD_2 ( ) . get ( patchSet . getKey ( ) )  VAR_1 = db . METHOD_3 ( ) . METHOD_4 ( patchSet . getKey ( ) ) . METHOD_5 ( )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME cfg TYPE java.lang.String NAME revision TYPE TYPE_3 NAME out  return TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_4 ) . METHOD_7 ( METHOD_8 ( cfg , revision ) ) . METHOD_9 ( true ) . METHOD_10 ( out ) . get ( ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME revision TYPE TYPE_3 NAME VAR_1 TYPE TYPE_4 NAME VAR_2 TYPE TYPE_5 NAME VAR_3 COND ! ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_6 NAME event INIT = new TYPE_6 ( change , revision , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_7 NAME VAR_5 IN VAR_4  VAR_5 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_8 . log , e )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1  VAR_1 . METHOD_2 ( ) TYPE TYPE_3 NAME VAR_2 TYPE TYPE_4 NAME VAR_3  VAR_2 = VAR_4 . METHOD_3 ( ) COND ! ( VAR_2 . METHOD_4 ( ) )  return VAR_1 . METHOD_5 ( ) ;  VAR_3 = ( ( TYPE_5 ) ( VAR_2 ) ) . METHOD_6 ( )  VAR_5 = this . VAR_6  return VAR_3 ;
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) ) TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_3 ( ) . METHOD_4 ( )  VAR_1 . add ( file ( STRING_4 ) )  METHOD_5 ( VAR_1 . commit ( ) )  assertEquals ( ( STRING_1 + ( STRING_2 + STRING_5 ) ) , METHOD_2 ( STRING_1 ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME revision TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_4 NAME VAR_3 COND ! ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_5 NAME event INIT = new TYPE_5 ( change , revision , VAR_1 , VAR_2 , VAR_3 ) TYPE TYPE_6 NAME VAR_5 IN VAR_4  VAR_5 . METHOD_4 ( event ) TYPE java.lang.Exception NAME e  util . METHOD_5 ( TYPE_7 . log , e )
MODIFIER private RETURN double NAME METHOD_1 TYPE double NAME VAR_1 TYPE int NAME line INIT = VAR_2 . METHOD_2 ( VAR_1 , STRING_1 ) TYPE TYPE_1 NAME p INIT = VAR_3 . METHOD_1 ( VAR_4 , line ) TYPE double NAME VAR_5 INIT = VAR_2 . METHOD_3 ( VAR_6 , STRING_1 ) TYPE double NAME VAR_7 INIT = VAR_8 . METHOD_3 ( VAR_9 , STRING_1 )  return TYPE_2 . METHOD_4 ( 0 , ( VAR_7 + ( VAR_1 - VAR_5 ) ) ) ;
MODIFIER private RETURN int NAME insert TYPE java.util.List<TYPE_1> NAME in TYPE int NAME row TYPE TYPE_2<TYPE_1> NAME VAR_1 INIT = in . METHOD_1 ( ) COND VAR_1 . METHOD_2 ( ) TYPE TYPE_1 NAME c INIT = VAR_1 . METHOD_3 ( )  table . METHOD_4 ( row )  table . METHOD_5 ( ) . METHOD_6 ( row , 0 , VAR_2 )  METHOD_7 ( row , VAR_3 , c , ( ! ( VAR_1 . METHOD_2 ( ) ) ) )  row ++  return row ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME change TYPE TYPE_1 NAME user TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . get ( change . getProject ( ) ) COND VAR_1 == null  return false ; TYPE TYPE_3 NAME VAR_3 INIT = VAR_1 . METHOD_2 ( user )  return VAR_3 . METHOD_2 ( change ) . METHOD_3 ( db ) ;
MODIFIER public RETURN void NAME set TYPE TYPE_1 NAME VAR_1  set ( ( ( VAR_1 . css ( ) ) != null ? VAR_1 . css ( ) : VAR_2 ) , ( ( VAR_1 . METHOD_1 ( ) ) != null ? VAR_1 . METHOD_1 ( ) : VAR_3 ) , ( ( VAR_1 . METHOD_2 ( ) ) != null ? VAR_1 . METHOD_2 ( ) : VAR_4 ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME value COND true COND ( value & ( ~ INT_1 ) ) == 0  VAR_1 . METHOD_2 ( value )  return ;  VAR_1 . METHOD_2 ( ( ( value & INT_1 ) | INT_2 ) )  value >>>= INT_3
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1 NAME req TYPE TYPE_2.HttpServletResponse NAME res TYPE int NAME VAR_1 TYPE java.lang.String NAME msg TYPE TYPE_3 NAME c  res . METHOD_2 ( VAR_1 )  TYPE_4 . METHOD_3 ( req , res , c )  TYPE_4 . METHOD_4 ( null , res , msg )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 ) TYPE java.lang.String NAME name INIT = STRING_2 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME user INIT = user ( name , null )  TYPE_1 . METHOD_3 ( VAR_1 ) TYPE TYPE_2 NAME r INIT = create ( ) . METHOD_4 ( user )  METHOD_5 ( r )  assertEquals ( ( name + STRING_3 ) , r . name )  assertEquals ( VAR_2 . METHOD_6 ( ) , r . email )  TYPE_1 . METHOD_7 ( VAR_1 )
MODIFIER public RETURN void NAME onSuccess TYPE TYPE_1 NAME result  VAR_1 = result . config COND ( result . account ) != null  VAR_2 = result . account TYPE TYPE_2 NAME VAR_3 TYPE TYPE_3 NAME VAR_4  VAR_5 = VAR_6 COND ( VAR_7 ) != null  VAR_8 = VAR_7  METHOD_1 ( INT_1 ) TYPE TYPE_4 NAME VAR_9  diff ( VAR_10 )  METHOD_2 ( )
MODIFIER private static RETURN long NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE java.lang.String NAME path TYPE TYPE_3 NAME t COND ! ( TYPE_4 . METHOD_2 ( VAR_2 ) )  return 0 ; TYPE TYPE_5 NAME VAR_3 INIT = TYPE_5 . METHOD_3 ( VAR_1 , path , t )  return VAR_3 != null ? repo . METHOD_4 ( VAR_3 . METHOD_5 ( 0 ) , VAR_4 ) . METHOD_6 ( ) : 0 ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE int NAME VAR_1 TYPE int NAME VAR_2 INIT = VAR_3  VAR_3 += VAR_1 TYPE int NAME VAR_4 INIT = ( VAR_3 ) - ( VAR_5 )  VAR_6 . add ( new TYPE_1 ( VAR_2 , ( ( VAR_3 ) - 1 ) , ( - VAR_4 ) ) )  VAR_7 . add ( new TYPE_1 ( VAR_5 , VAR_5 , VAR_4 ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( VAR_1 ) == null COND config . METHOD_2 ( STRING_1 ) . contains ( STRING_2 )  VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , config , STRING_2 ) )  VAR_1 = new TYPE_1 ( )
MODIFIER protected RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = new TYPE_2 ( VAR_1 ) COND METHOD_2 ( )  new TYPE_3 ( VAR_2 , VAR_2 . toString ( ) ) . METHOD_3 ( )  VAR_3 . set ( VAR_4 . submit ( VAR_2 ) )
MODIFIER public RETURN com.google.gerrit.reviewdb.client.Change NAME METHOD_1 COND ( project ) == null  notes = VAR_1 . METHOD_2 ( db , VAR_2 )  notes = VAR_1 . create ( db , project , VAR_2 )  change = notes . getChange ( ) COND ( change ) == null  throw new com.google.gwtorm.server.OrmException ( ( STRING_1 + ( VAR_2 ) ) ) ;  METHOD_3 ( null )  return change ;
MODIFIER protected RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 class , VAR_2 )  METHOD_2 ( VAR_3 class , VAR_4 )  METHOD_3 ( )  METHOD_4 ( )  bind ( VAR_5 class ) . to ( VAR_6 class ) . in ( VAR_7 )  bind ( VAR_8 class ) . METHOD_5 ( VAR_9 class )  bind ( VAR_10 class ) . to ( VAR_11 class )  install ( new TYPE_1 ( ) )
MODIFIER static RETURN TYPE_1<java.lang.String,java.lang.String> NAME METHOD_1 TYPE java.util.Map<java.lang.String,java.util.Set<java.lang.String>> NAME VAR_1 TYPE TYPE_1<java.lang.String,java.lang.String> NAME result INIT = new TYPE_2 < > ( ) TYPE java.lang.String NAME key IN TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) )  result . put ( key , java.lang.String . METHOD_5 ( STRING_1 , TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . get ( key ) ) ) )  return result ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.Result NAME r INIT = METHOD_2 ( )  METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 )  METHOD_4 ( user )  com.google.common.truth.Truth.assertThat ( METHOD_5 ( r , user . email ) . VAR_3 ) . isEqualTo ( user . getId ( ) . get ( ) )
MODIFIER MODIFIER RETURN void NAME METHOD_1 COND ! ( TYPE_1 . METHOD_2 ( ) )  TYPE_1 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) COND ( VAR_1 ) == null  METHOD_7 ( )  METHOD_8 ( )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1<TYPE_2> NAME repo INIT = METHOD_2 ( STRING_1 ) TYPE TYPE_3 NAME VAR_1 INIT = METHOD_3 ( repo )  insert ( VAR_1 ) TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_4 ( ) . getRevision ( ) . get ( )  METHOD_5 ( STRING_2 ) TYPE int NAME i INIT = 0 COND i <= INT_1  i ++ TYPE java.lang.String NAME VAR_3 INIT = VAR_2 . METHOD_6 ( 0 , ( INT_2 - i ) )  METHOD_5 ( VAR_3 , VAR_1 . getChange ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME cfg INIT = VAR_1 . METHOD_2 ( TYPE_2 . get ( VAR_2 class , VAR_3 class ) ) TYPE boolean NAME VAR_4 INIT = cfg . METHOD_3 ( STRING_1 , STRING_2 , VAR_1 . METHOD_2 ( VAR_5 class ) . METHOD_4 ( ) ) TYPE int NAME VAR_6 INIT = cfg . METHOD_5 ( STRING_1 , STRING_3 , VAR_7 ) COND VAR_4 && ( ( VAR_8 ) > VAR_6 )  VAR_9 . METHOD_6 ( ( ( STRING_4 + VAR_6 ) + STRING_5 ) )  VAR_8 = VAR_6
MODIFIER public RETURN boolean NAME METHOD_1 COND getChange ( ) . getStatus ( ) . METHOD_2 ( )  return ( ( ( ( METHOD_3 ( ) ) || ( METHOD_4 ( ) . METHOD_3 ( ) ) ) || ( METHOD_5 ( ) . METHOD_3 ( ) ) ) || ( METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ;  return METHOD_4 ( ) . METHOD_9 ( ) ;
MODIFIER private RETURN TYPE_1 NAME file TYPE java.lang.String NAME name TYPE TYPE_2 NAME VAR_1 INIT = VAR_2 . METHOD_1 ( ) TYPE TYPE_1 NAME e INIT = new TYPE_1 ( name )  e . METHOD_2 ( VAR_3 )  e . METHOD_3 ( VAR_1 . insert ( VAR_4 , TYPE_3 . METHOD_4 ( name ) ) )  VAR_1 . METHOD_5 ( )  return e ;  METHOD_6 ( INT_1 ) TYPE TYPE_4.a NAME VAR_5 TYPE TYPE_5 NAME to TYPE TYPE_6 NAME revision
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME VAR_1 TYPE TYPE_2 NAME VAR_2 INIT = VAR_3 . create ( VAR_1 . getProject ( ) . METHOD_2 ( ) , user )  VAR_1 . commit ( VAR_2 )  VAR_4 . METHOD_3 ( VAR_1 . getProject ( ) . METHOD_2 ( ) )
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME event  VAR_1 COND ! ( VAR_2 . METHOD_1 ( event ) )  VAR_3 = true COND ( ( VAR_4 ) == null ) && ( ! ( VAR_5 ) )  VAR_4 = VAR_6 . submit ( VAR_7 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_1 NAME VAR_2 INIT = VAR_1 . METHOD_2 ( VAR_3 )  METHOD_3 ( VAR_4 )  VAR_5 . changes ( ) . id ( VAR_2 . changeId ) . revision ( STRING_1 ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) )  return VAR_2 ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1.ChangeInfo NAME change TYPE TYPE_2 NAME revision TYPE TYPE_3 NAME VAR_1 TYPE java.lang.String NAME VAR_2 TYPE TYPE_4 NAME e INIT = new TYPE_4 ( change , revision , VAR_1 , VAR_2 ) COND ! ( VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) )  return ; TYPE TYPE_5 NAME VAR_4 IN VAR_3  VAR_4 . METHOD_4 ( e )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND cd . METHOD_2 ( user )  return true ; TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = cd . change ( db ) COND c == null  return false ; TYPE TYPE_1 NAME VAR_1 INIT = VAR_2 . METHOD_3 ( c , user ) COND VAR_1 . METHOD_4 ( db . get ( ) )  cd . METHOD_5 ( VAR_1 )  return true ; TYPE TYPE_2 NAME e BLOCK BLOCK  return false ;
MODIFIER protected RETURN void NAME METHOD_1  bind ( VAR_1 class ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) )  install ( new TYPE_2 ( VAR_2 ) )  bind ( VAR_3 class ) . to ( VAR_4 class )  METHOD_4 ( ) . to ( VAR_4 class ) COND VAR_5  METHOD_4 ( ) . to ( VAR_6 class )
MODIFIER public RETURN java.util.List<TYPE_1> NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE java.util.ArrayList<TYPE_1> NAME r INIT = new java.util.ArrayList < TYPE_1 > ( VAR_2 . length ) TYPE TYPE_2 NAME e IN VAR_2  r . add ( e . METHOD_2 ( VAR_1 ) )  return r ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME p COND p instanceof TYPE_3 < ? >  return TYPE_4 . METHOD_2 ( p ) ;  return new TYPE_5 ( new TYPE_6 ( p . METHOD_3 ( ) . getName ( ) , p . getValue ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) . METHOD_5 ( ) TYPE TYPE_2 NAME VAR_2 INIT = METHOD_6 ( VAR_3 )  METHOD_7 ( VAR_2 , STRING_1 , VAR_4 )  assertThat ( VAR_5 ) . METHOD_8 ( STRING_2 , VAR_2 ) . METHOD_9 ( VAR_6 ) . to ( VAR_7 , VAR_4 ) . to ( VAR_8 ) . METHOD_10 ( VAR_9 ) . METHOD_10 ( VAR_10 ) . METHOD_11 ( VAR_11 ) . METHOD_11 ( VAR_3 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME t TYPE TYPE_2 NAME VAR_1 COND t . METHOD_2 ( )  return ( ( TYPE_3 ) ( t ) ) . METHOD_1 ( this , VAR_1 ) ; COND ! ( t . METHOD_3 ( ) )  return false ;  return VAR_2 . equals ( ( ( TYPE_4 ) ( t ) ) . VAR_2 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE org.eclipse.jgit.revwalk.RevWalk NAME rw TYPE org.eclipse.jgit.lib.ObjectId NAME id TYPE java.lang.String NAME VAR_1 TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit INIT = rw . parseCommit ( id )  rw . METHOD_2 ( commit )  this . commit = commit  VAR_2 = commit . METHOD_3 ( )  this . VAR_1 = VAR_1
MODIFIER MODIFIER RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME t COND ! ( t . METHOD_2 ( ) )  return false ; COND t . equals ( VAR_1 )  return true ;  return ( ( ( TYPE_2 ) ( t ) ) . name ( ) . length ( ) ) == 1 ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( project , STRING_1 )  METHOD_3 ( STRING_1 ) TYPE java.lang.String NAME VAR_1 INIT = METHOD_3 ( STRING_2 ) . METHOD_4 ( ) . name ( )  METHOD_5 ( user )  TYPE_1 . METHOD_6 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_2 , VAR_1 , false ) ) , METHOD_7 ( ) . get ( ) )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Account.Id NAME key TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db INIT = schema . METHOD_2 ( ) TYPE TYPE_1 NAME VAR_1 INIT = METHOD_1 ( db , key ) TYPE java.lang.String NAME user INIT = VAR_1 . METHOD_3 ( ) COND user != null  VAR_2 . put ( user , TYPE_2 . of ( VAR_1 . METHOD_4 ( ) . getId ( ) ) )  return VAR_1 ;  db . close ( )
MODIFIER public RETURN TYPE_1.ChangeInfo NAME get TYPE TYPE_2<TYPE_3> NAME s TYPE TYPE_5 NAME u INIT = user . get ( ) COND u . METHOD_1 ( )  ( ( TYPE_6 ) ( u ) ) . METHOD_2 ( )  return VAR_1 . get ( ) . METHOD_3 ( s ) . format ( change ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_4 ( STRING_1 , e ) ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 COND ( VAR_2 ) == null  VAR_1 = VAR_3 . get ( ) . METHOD_2 ( )  VAR_1 = VAR_2 TYPE TYPE_3 NAME VAR_4 INIT = VAR_5 . get ( ) COND VAR_4 instanceof TYPE_4  VAR_4 = null  return new TYPE_1 ( VAR_3 . get ( ) , VAR_1 , VAR_6 . METHOD_3 ( VAR_1 , VAR_7 , VAR_4 ) ) ;
MODIFIER protected RETURN void NAME add TYPE TYPE_1 NAME s TYPE java.lang.String NAME n INIT = s . METHOD_1 ( )  METHOD_2 ( n ) COND ( VAR_1 . put ( n , s ) ) != null  throw new TYPE_2 . OrmException ( ( STRING_1 + n ) ) ;  VAR_2 . add ( n )
MODIFIER public RETURN java.util.List<com.google.gerrit.server.query.change.ChangeData> NAME METHOD_1 TYPE java.lang.String NAME VAR_1 COND ( TYPE_1 . METHOD_2 ( VAR_1 ) ) || ( ! ( TYPE_2 . schema ( VAR_2 ) . METHOD_3 ( VAR_3 ) ) )  return java.util.Collections . METHOD_4 ( ) ;  return query ( new TYPE_3 ( VAR_1 ) ) ;
MODIFIER private static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE TYPE_3 NAME p TYPE long NAME VAR_1 INIT = p . METHOD_2 ( schema ) TYPE long NAME VAR_2 INIT = p . METHOD_3 ( schema )  return TYPE_4 . METHOD_4 ( p . METHOD_5 ( ) . getName ( ) , ( VAR_1 != ( VAR_3 ) ? VAR_1 : null ) , ( VAR_2 != ( VAR_4 ) ? VAR_2 : null ) , false , false ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME label TYPE TYPE_2 NAME status COND ( status . METHOD_2 ( ) ) && ( ( status . METHOD_3 ( ) ) == 1 ) TYPE TYPE_2 NAME VAR_1 INIT = status . METHOD_4 ( 0 ) COND TYPE_4 . METHOD_5 ( VAR_1 )  VAR_2 = new com.google.gerrit.reviewdb.client.Account.Id ( ( ( TYPE_5 ) ( VAR_1 . METHOD_4 ( 0 ) ) ) . METHOD_6 ( ) )  throw new TYPE_3 ( label ) ;
MODIFIER MODIFIER RETURN TYPE_1 NAME get TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE org.eclipse.jgit.lib.Repository NAME VAR_3 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_4 TYPE int NAME VAR_5 TYPE com.google.gerrit.reviewdb.client.Project.NameKey NAME project INIT = VAR_4 . change ( ) . getProject ( ) TYPE java.lang.String NAME branch INIT = VAR_4 . change ( ) . METHOD_1 ( ) . get ( ) TYPE java.lang.String NAME VAR_6 INIT = TYPE_4 . METHOD_2 ( VAR_4 . getId ( ) . get ( ) , VAR_5 , branch )  return get ( VAR_1 , VAR_2 , VAR_6 , VAR_3 , project , branch , VAR_4 . METHOD_3 ( ) ) ;
MODIFIER public RETURN boolean NAME METHOD_1  return ( ( ( ( ( ( VAR_1 ) >= 0 ) && ( ( VAR_2 ) >= 0 ) ) && ( ( VAR_3 ) >= 0 ) ) && ( ( VAR_4 ) >= 0 ) ) && ( ( VAR_1 ) <= ( VAR_3 ) ) ) && ( ( ( VAR_1 ) != ( VAR_3 ) ) || ( ( VAR_2 ) <= ( VAR_4 ) ) ) ;
MODIFIER public RETURN TYPE_1<?> NAME METHOD_1 TYPE int NAME id TYPE TYPE_1<?> NAME result INIT = null TYPE TYPE_2 NAME e IN VAR_1 TYPE TYPE_1<?> NAME t INIT = e . METHOD_1 ( id ) COND t != null COND result != null  return null ;  result = t  return result ;
MODIFIER private static RETURN TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.PatchSet> NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE TYPE_3<com.google.gerrit.reviewdb.client.PatchSet> NAME patchSets INIT = cd . METHOD_2 ( ) TYPE TYPE_1<TYPE_2,com.google.gerrit.reviewdb.client.PatchSet> NAME result INIT = TYPE_4 . METHOD_3 ( ) TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps IN patchSets  result . put ( ps . getId ( ) . get ( ) , ps )  return result ;
MODIFIER protected RETURN void NAME METHOD_1  super . METHOD_1 ( ) COND ( VAR_1 ) != null  VAR_1 . METHOD_2 ( )  VAR_1 = null COND ( VAR_2 ) != null  VAR_2 . METHOD_3 ( ) . METHOD_4 ( )  VAR_2 = null COND ( VAR_3 ) != null  VAR_3 . METHOD_3 ( ) . METHOD_4 ( )  VAR_3 = null  TYPE_1 . METHOD_5 ( true )  VAR_4 = null  VAR_5 = null  VAR_6 = null
MODIFIER public RETURN boolean NAME METHOD_1 TYPE TYPE_1 NAME ctx TYPE com.google.gerrit.reviewdb.client.Change NAME change INIT = ctx . getChange ( ) COND ( change . getStatus ( ) ) == ( VAR_1 )  throw new TYPE_2 ( STRING_1 ) ; TYPE TYPE_3 NAME update INIT = ctx . METHOD_2 ( change . currentPatchSetId ( ) )  change . METHOD_3 ( VAR_2 )  change . METHOD_4 ( ctx . METHOD_5 ( ) )  update . METHOD_3 ( VAR_2 )  METHOD_6 ( ctx , update )  return true ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE org.eclipse.jgit.lib.Repository NAME repo TYPE java.lang.String NAME name TYPE TYPE_2 NAME p INIT = new TYPE_2 ( ) TYPE TYPE_3 NAME VAR_1 INIT = repo . METHOD_2 ( )  p . METHOD_3 ( VAR_1 , new org.eclipse.jgit.revwalk.RevWalk ( repo ) . METHOD_4 ( repo . METHOD_5 ( name ) ) )  return p ;  VAR_1 . METHOD_6 ( )
MODIFIER public RETURN TYPE_1 NAME create TYPE TYPE_2 NAME req TYPE org.eclipse.jgit.lib.Repository NAME db TYPE TYPE_4 NAME VAR_1 INIT = ( ( TYPE_4 ) ( req . METHOD_1 ( VAR_2 ) ) ) COND ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) )  throw new TYPE_3 ( ) ; TYPE TYPE_5 NAME VAR_3 INIT = factory . create ( VAR_1 , db , TYPE_6 . of ( ) ) TYPE TYPE_1 NAME rp INIT = VAR_3 . METHOD_4 ( )  req . METHOD_5 ( VAR_4 , VAR_3 )  return rp ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME account TYPE TYPE_3 NAME VAR_1  return VAR_2 . create ( VAR_3 . METHOD_2 ( account , VAR_1 ) ) ; TYPE TYPE_6|com.google.gwtorm.server.OrmException|java.io.IOException NAME e  throw new TYPE_5 ( e ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE boolean NAME VAR_1 TYPE TYPE_1<TYPE_2.ChangeInfo> NAME VAR_2 TYPE TYPE_3 NAME VAR_3 INIT = TYPE_4 . METHOD_2 ( changeId . get ( ) )  TYPE_5 . METHOD_3 ( VAR_3 , TYPE_6 . of ( VAR_4 , VAR_5 , VAR_6 ) ) COND ! VAR_1  VAR_3 . METHOD_4 ( )  VAR_3 . get ( VAR_2 )
MODIFIER public static RETURN int NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE int NAME VAR_2 TYPE TYPE_2 NAME VAR_3 INIT = TYPE_3 . get ( VAR_1 ) TYPE TYPE_4 NAME VAR_4 INIT = TYPE_5 . get ( VAR_1 ) TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_5 INIT = TYPE_6 . get ( VAR_1 ) TYPE org.eclipse.jgit.lib.Repository NAME VAR_6 INIT = TYPE_7 . get ( VAR_1 )  return new TYPE_8 ( VAR_6 , VAR_5 , VAR_2 ) . METHOD_1 ( VAR_3 , VAR_4 ) ; TYPE com.google.gwtorm.server.OrmException NAME e  VAR_7 . error ( STRING_1 , e )  return 0 ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE java.lang.StringBuilder NAME m INIT = new java.lang.StringBuilder ( )  m . append ( METHOD_2 ( ) ) COND user . METHOD_3 ( ) TYPE TYPE_1 NAME u INIT = user . METHOD_4 ( ) COND u . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( )  m . append ( STRING_1 ) . append ( u . METHOD_5 ( ) . METHOD_6 ( ) . get ( ) ) . append ( STRING_2 )  return m . toString ( ) ;
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME edit TYPE boolean NAME VAR_1 TYPE TYPE_1 NAME out INIT = new TYPE_1 ( )  out . commit = TYPE_3 . METHOD_2 ( edit . METHOD_3 ( ) )  VAR_2 = edit . METHOD_4 ( ) . getRevision ( ) . get ( )  VAR_3 = TYPE_3 . METHOD_5 ( edit ) COND VAR_1  VAR_4 = METHOD_6 ( edit )  return out ;
MODIFIER private static RETURN long NAME METHOD_1 TYPE TYPE_1<com.google.gerrit.server.query.change.ChangeData> NAME schema TYPE java.lang.String NAME value TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData,?> NAME VAR_1 INIT = schema . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) COND VAR_1 == ( TYPE_4 )  return TYPE_5 . METHOD_1 ( value ) ;  return TYPE_6 . METHOD_3 ( value ) ;
MODIFIER public static RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME c TYPE java.lang.String NAME url INIT = c . METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1 NAME d IN VAR_1 COND d . METHOD_4 ( url , c )  return d . METHOD_5 ( c ) ;  throw new TYPE_3 . OrmException ( ( STRING_1 + url ) ) ;
MODIFIER MODIFIER RETURN void NAME METHOD_1 TYPE java.lang.String NAME token TYPE TYPE_2 NAME VAR_1 INIT = TYPE_2 . METHOD_2 ( token )  TYPE_3 . METHOD_3 ( VAR_1 . label ( ) )  TYPE_4 . METHOD_4 ( VAR_2 , VAR_1 . label ( ) , VAR_1 . value ( ) ) TYPE TYPE_5 NAME e  throw VAR_3 . reject ( e . getMessage ( ) ) ;  VAR_4 . put ( VAR_1 . label ( ) , VAR_1 . value ( ) )
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_3.Result NAME r INIT = METHOD_2 ( ) TYPE TYPE_4 NAME in INIT = new TYPE_4 ( )  VAR_1 = user . email TYPE TYPE_5 NAME VAR_2 INIT = VAR_3 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) )  VAR_2 . METHOD_1 ( in )  org.junit.Assert.assertEquals ( TYPE_6 . of ( user . id ) , TYPE_7 . METHOD_3 ( VAR_2 . get ( ) ) )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm INIT = VAR_1 . create ( change )  cm . METHOD_1 ( change . METHOD_2 ( ) )  cm . METHOD_3 ( patchSet , VAR_2 )  cm . METHOD_4 ( reviewers )  cm . METHOD_5 ( VAR_3 )  cm . METHOD_6 ( ) TYPE java.lang.Exception NAME e  VAR_4 . error ( ( STRING_1 + ( change.getId ( ) ) ) , e )
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) TYPE TYPE_2<?> NAME p INIT = ( ( TYPE_2 < ? > ) ( VAR_1 ) )  return ( TYPE_2 . METHOD_2 ( ) . equals ( p . METHOD_2 ( ) ) ) && ( ( METHOD_3 ( ) ) == ( p . METHOD_3 ( ) ) ) ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  super . METHOD_1 ( ) TYPE int NAME VAR_1 INIT = VAR_2 . METHOD_2 ( VAR_3 )  VAR_4 . METHOD_3 ( ( 0 <= VAR_1 ? VAR_1 : 0 ) )  display ( TYPE_1 . METHOD_4 ( ) )  display ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c TYPE TYPE_1 NAME VAR_1 TYPE TYPE_2<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_2 INIT = VAR_3 . METHOD_2 ( db , VAR_4 . create ( c ) ) . values ( )  com.google.common.truth.Truth.assertThat ( VAR_2 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_1 ) ) )
MODIFIER private RETURN org.eclipse.jgit.revwalk.RevCommit NAME METHOD_1 TYPE java.util.Set<TYPE_2> NAME VAR_1 INIT = new TYPE_3 < > ( ) TYPE java.lang.String NAME VAR_2 IN TYPE_4 . METHOD_2 ( )  VAR_1 . add ( new TYPE_2 ( repo . METHOD_3 ( ) . METHOD_4 ( ) , VAR_2 ) )  VAR_1 . add ( new TYPE_2 ( repo . METHOD_3 ( ) . METHOD_4 ( ) , STRING_1 ) )  return TYPE_5 . METHOD_1 ( repo , STRING_2 , VAR_1 ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 INIT = METHOD_2 ( VAR_2 )  METHOD_3 ( VAR_1 . changeId , VAR_3 )  assertThat ( VAR_4 ) . METHOD_4 ( STRING_1 , VAR_1 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_5 , VAR_6 ) . METHOD_6 ( VAR_7 , VAR_8 ) . METHOD_7 ( VAR_9 ) . METHOD_7 ( VAR_2 )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( VAR_1 , VAR_2 , STRING_1 )  METHOD_3 ( VAR_1 , VAR_2 , STRING_2 )  METHOD_4 ( user )  METHOD_5 ( ( ( VAR_3 ) + STRING_3 ) , ( ( VAR_3 ) + STRING_4 ) , ( ( VAR_4 ) + STRING_3 ) , ( ( VAR_4 ) + STRING_4 ) , STRING_2 , STRING_5 , STRING_6 )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 TYPE TYPE_3 NAME VAR_2 TYPE org.eclipse.jgit.lib.Repository NAME repo  return new TYPE_1 ( TYPE_4 . of ( new TYPE_5 ( VAR_1 ) , new TYPE_6 ( VAR_1 , VAR_3 ) , new TYPE_7 ( VAR_1 , VAR_4 ) , new TYPE_8 ( VAR_1 ) , new TYPE_9 ( VAR_1 , VAR_4 , VAR_5 , VAR_2 ) , new TYPE_10 ( VAR_1 , repo , VAR_6 ) , new TYPE_11 ( VAR_7 ) , new TYPE_12 ( VAR_6 ) ) ) ;
MODIFIER private RETURN boolean NAME METHOD_1 TYPE TYPE_1.ProjectConfig NAME config TYPE java.util.Set<java.lang.String> NAME VAR_1 TYPE TYPE_2 NAME VAR_2 TYPE TYPE_4 NAME VAR_3 IN VAR_2 . METHOD_2 ( ) TYPE TYPE_5 NAME VAR_4 IN VAR_3 . METHOD_3 ( )  METHOD_4 ( VAR_4 ) TYPE boolean NAME VAR_5 INIT = ! ( VAR_2 . equals ( config . METHOD_5 ( VAR_2 . getName ( ) ) ) )  config . METHOD_1 ( VAR_2 )  VAR_1 . METHOD_6 ( VAR_2 . getName ( ) )  return VAR_5 ;
MODIFIER protected RETURN void NAME METHOD_1  factory ( VAR_1 . Factory class )  factory ( VAR_2 . Factory class )  factory ( VAR_3 . Factory class )  factory ( VAR_4 . Factory class )  factory ( VAR_5 . Factory class )  factory ( VAR_6 . Factory class )  factory ( VAR_7 . Factory class )  factory ( VAR_8 . Factory class )  factory ( VAR_9 . Factory class )  factory ( VAR_10 . Factory class )
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String[] NAME VAR_1 INIT = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } TYPE java.util.List<TYPE_1> NAME m INIT = VAR_2 . METHOD_2 ( repo , METHOD_3 ( ) , VAR_1 , false )  com.google.common.truth.Truth.assertThat ( TYPE_2 . METHOD_4 ( m ) ) . METHOD_5 ( STRING_4 , STRING_5 , STRING_6 )
MODIFIER protected RETURN java.lang.String NAME METHOD_1 COND ( METHOD_2 ( ) ) != null  return new TYPE_1 ( METHOD_2 ( ) ) . METHOD_3 ( ) ; TYPE TYPE_2 NAME e BLOCK BLOCK  return TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME p IN VAR_1 . approvals ( ) TYPE TYPE_1 NAME VAR_2 INIT = VAR_3 . create ( VAR_4 , p . getAccountId ( ) ) COND VAR_2 . METHOD_2 ( ) . contains ( VAR_5 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( TYPE_1 . METHOD_3 ( STRING_1 ) )  METHOD_4 ( TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( VAR_2 ) . METHOD_8 ( STRING_2 ) . METHOD_9 ( ) , TYPE_1 . METHOD_3 ( STRING_3 ) )
MODIFIER private RETURN void NAME METHOD_1 COND ( ( VAR_1 ) != null ) && ( ( ( VAR_2 ) == null ) || ( ( VAR_2 ) != ( VAR_1 ) ) ) TYPE TYPE_2 NAME VAR_3 INIT = VAR_4 . create ( VAR_5 , VAR_1 , rw , db , VAR_6 , VAR_7 , VAR_8 )  VAR_3 . update ( ) TYPE TYPE_3 NAME e  VAR_9 . error ( ( STRING_1 + ( e . getMessage ( ) ) ) )
MODIFIER public static RETURN void NAME METHOD_1 TYPE TYPE_1<java.lang.String> NAME VAR_1 TYPE java.util.Set<java.lang.String> NAME VAR_2 TYPE java.lang.String NAME VAR_3 IN VAR_1  com.google.common.truth.Truth . METHOD_2 ( ) . METHOD_3 ( ( STRING_1 + VAR_3 ) ) . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_3 ) ) . METHOD_6 ( )  com.google.common.truth.Truth . METHOD_2 ( ) . METHOD_3 ( ( STRING_2 + VAR_2 ) ) . METHOD_4 ( ( ( TYPE_1 < ? > ) ( VAR_2 ) ) ) . isEmpty ( )
MODIFIER private RETURN void NAME METHOD_1 TYPE java.util.List<TYPE_1> NAME VAR_1 TYPE TYPE_2 NAME ui TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE TYPE_1 NAME VAR_2 IN VAR_1  ui . message ( java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) ) )  VAR_2 . METHOD_3 ( db ) TYPE TYPE_4 NAME s INIT = ( ( TYPE_4 ) ( db ) ) TYPE TYPE_5 NAME e INIT = new TYPE_5 ( s )  s . METHOD_1 ( e )  e . close ( )
MODIFIER public RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME value COND ( value != null ) && ( ( value . length ( ) ) > 0 ) TYPE java.lang.String NAME e INIT = METHOD_2 ( name )  return METHOD_3 ( name , ( ( e . length ( ) ) > 0 ? ( e + STRING_1 ) + value : e ) ) ;  return this ;
MODIFIER public RETURN java.util.Map<java.lang.String,TYPE_1> NAME METHOD_1  return ( ( java.util.Map < java.lang.String , TYPE_1 > ) ( VAR_1 . get ( ) . apply ( revision ) . value ( ) ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_2 ( STRING_1 , e ) ;
MODIFIER public RETURN java.util.Set<java.lang.String> NAME METHOD_1  return TYPE_2 . METHOD_2 ( ( ( TYPE_3 < java.lang.String > ) ( VAR_1 . get ( ) . METHOD_3 ( true ) . apply ( revision ) . value ( ) ) ) ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_1 ( STRING_1 , e ) ;
MODIFIER public RETURN TYPE_1.ChangeInfo NAME get TYPE TYPE_2<TYPE_3> NAME s TYPE TYPE_5 NAME u INIT = user . get ( ) COND u . METHOD_1 ( )  u . METHOD_2 ( ) . METHOD_3 ( )  return VAR_1 . create ( s ) . format ( change ) ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new TYPE_4 ( STRING_1 , e ) ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE java.lang.String NAME VAR_2 INIT = STRING_2 TYPE TYPE_1 NAME a INIT = new TYPE_1 ( VAR_1 , VAR_2 )  assertEquals ( VAR_1 , a . METHOD_2 ( ) . METHOD_3 ( ) )  assertEquals ( STRING_3 , a . METHOD_4 ( VAR_1 ) )  assertEquals ( ( ( ( STRING_4 + VAR_1 ) + STRING_5 ) + VAR_2 ) , a . toString ( ) )
MODIFIER private RETURN com.google.gerrit.reviewdb.client.PatchSetApproval NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = db . changes ( ) . get ( VAR_1 . getParentKey ( ) ) TYPE TYPE_1 NAME notes INIT = VAR_2 . create ( db , c ) . METHOD_2 ( )  return VAR_3 . METHOD_1 ( db , notes , VAR_1 ) ;
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND METHOD_2 ( ) . METHOD_3 ( ) TYPE TYPE_1<com.google.gerrit.reviewdb.client.Account.Id> NAME VAR_1 INIT = METHOD_4 ( db , cd ) . reviewers ( ) . values ( ) TYPE TYPE_2 NAME user INIT = ( ( TYPE_2 ) ( METHOD_2 ( ) ) )  return VAR_1 . contains ( user . getAccountId ( ) ) ;  return false ;
MODIFIER private RETURN void NAME METHOD_1  walk . METHOD_2 ( walk . parseCommit ( VAR_1 ) ) TYPE org.eclipse.jgit.revwalk.RevCommit NAME commit IN walk  walk . METHOD_3 ( commit )  METHOD_4 ( commit )  METHOD_5 ( ) TYPE TYPE_2<com.google.gerrit.reviewdb.client.PatchSetApproval> NAME VAR_2 IN approvals . METHOD_6 ( ) . values ( )  java.util.Collections . METHOD_7 ( ( ( java.util.List < com.google.gerrit.reviewdb.client . PatchSetApproval > ) ( VAR_2 ) ) , VAR_3 )
MODIFIER private RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.reviewdb.server.ReviewDb NAME db TYPE com.google.gerrit.server.query.change.ChangeData NAME cd COND ( getChange ( ) . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( db , cd ) ) )  return false ;  return ( VAR_1 . METHOD_1 ( ) ) && ( METHOD_4 ( ) . getProject ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ;
MODIFIER public RETURN boolean NAME equals TYPE TYPE_1 NAME VAR_1 COND ! ( VAR_1 instanceof TYPE_2 )  return false ; TYPE TYPE_2 NAME VAR_2 INIT = ( ( TYPE_2 ) ( VAR_1 ) ) COND ( ! ( name . equals ( VAR_2 . name ) ) ) || ( ( VAR_3 ) != ( VAR_4 ) )  return false ;  return new TYPE_3 < TYPE_4 > ( METHOD_1 ( ) ) . equals ( new TYPE_3 < TYPE_4 > ( VAR_2 . METHOD_1 ( ) ) ) ;
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( false )  VAR_1 . METHOD_3 ( false )  VAR_2 . METHOD_3 ( false )  super . METHOD_1 ( ) MODIFIER public RETURN void NAME onSuccess TYPE TYPE_3 NAME result  METHOD_2 ( true )  VAR_1 . METHOD_3 ( false )  VAR_2 . METHOD_3 ( false )  display ( result )  TYPE_1 . METHOD_4 ( VAR_3 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 . METHOD_3 ( false ) ; display ( result ) ; } } )
MODIFIER public RETURN java.lang.String NAME format COND ( value ) == ( ( short ) ( 0 ) )  return CHAR_1 + ( name ) ; COND ( value ) == ( ( short ) ( 1 ) )  return name ; COND ( value ) < 0  return ( name ) + ( value ) ;  return ( ( name ) + CHAR_2 ) + ( value ) ;
MODIFIER public static RETURN void NAME METHOD_1 TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME id TYPE java.lang.String NAME path TYPE TYPE_1<TYPE_2> NAME VAR_1 COND ( id . get ( ) ) != 0  throw new TYPE_3 ( STRING_1 ) ;  TYPE_4 . METHOD_2 ( id . getParentKey ( ) . get ( ) , path ) . view ( STRING_2 ) . get ( VAR_1 )
MODIFIER public RETURN boolean NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME VAR_1 TYPE com.google.gerrit.reviewdb.client.Change NAME c INIT = VAR_1 . change ( ) COND c == null  return false ; TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME VAR_2 INIT = c . currentPatchSetId ( ) TYPE com.google.gerrit.reviewdb.client.PatchSetApproval NAME p IN VAR_1 . approvals ( ) COND ( p . METHOD_2 ( ) . equals ( VAR_2 ) ) && ( ( p . getValue ( ) ) != 0 )  return true ;  return false ;
MODIFIER public RETURN void NAME METHOD_1 TYPE java.lang.String NAME VAR_1 INIT = STRING_1 TYPE TYPE_1 NAME r INIT = VAR_2 . put ( ( STRING_2 + VAR_1 ) ) TYPE TYPE_2 NAME VAR_3 INIT = METHOD_2 ( ) . METHOD_3 ( r . METHOD_4 ( ) , VAR_4 class )  com.google.common.truth.Truth.assertThat ( VAR_3 . name ) . isEqualTo ( VAR_1 ) TYPE com.google.gerrit.reviewdb.client.AccountGroup NAME group INIT = VAR_5 . get ( new TYPE_3 . NameKey ( VAR_1 ) )  com.google.common.truth.Truth.assertThat ( group ) . METHOD_5 ( )  TYPE_4 . METHOD_6 ( group , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , STRING_1 )  TYPE_1 . METHOD_2 ( util . METHOD_3 ( ) , VAR_2 , VAR_4 , STRING_2 ) TYPE TYPE_2 NAME u INIT = util . user ( VAR_1 , VAR_3 ) TYPE TYPE_2 NAME d INIT = util . user ( VAR_1 , VAR_3 )  METHOD_4 ( STRING_3 , u . METHOD_5 ( STRING_4 ) . METHOD_6 ( ) )  METHOD_4 ( STRING_5 , d . METHOD_5 ( STRING_4 ) . METHOD_6 ( ) )
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE com.google.gerrit.server.query.change.ChangeData NAME cd TYPE TYPE_1 NAME result INIT = new TYPE_1 ( ) TYPE TYPE_2<com.google.gerrit.server.query.change.ChangeData> NAME VAR_1 IN schema . METHOD_2 ( cd , VAR_2 ) COND ( VAR_1 . METHOD_3 ( ) ) != null  add ( result , VAR_1 )  return result ; TYPE com.google.gwtorm.server.OrmException NAME e  throw new java.io.IOException ( e ) ;
MODIFIER private RETURN void NAME METHOD_1 TYPE TYPE_1 NAME result TYPE TYPE_2.Id NAME VAR_1 TYPE TYPE_3.Id NAME VAR_2 TYPE TYPE_4.ReviewDb NAME db TYPE TYPE_5 NAME VAR_3  METHOD_1 ( result . change , VAR_4 . getId ( ) , VAR_1 , VAR_2 , db , VAR_3 )
MODIFIER public RETURN void NAME METHOD_1  assertEquals ( STRING_1 , TYPE_1 . METHOD_2 ( STRING_1 ) )  assertEquals ( STRING_2 , TYPE_1 . METHOD_2 ( STRING_3 ) )  assertEquals ( STRING_4 , TYPE_1 . METHOD_2 ( STRING_5 ) )  assertEquals ( STRING_6 , TYPE_1 . METHOD_2 ( STRING_7 ) )
MODIFIER public RETURN void NAME METHOD_1  METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 )  METHOD_3 ( VAR_1 , VAR_2 , STRING_5 , project ) TYPE TYPE_1 NAME in INIT = METHOD_4 ( VAR_3 )  in . branch = STRING_1  METHOD_5 ( in , VAR_4 class , STRING_6 )
MODIFIER public RETURN void NAME run TYPE TYPE_1 NAME cm  cm = VAR_1 . create ( change )  cm . METHOD_1 ( me )  cm . METHOD_2 ( ps , info )  cm . METHOD_3 ( reviewers )  cm . METHOD_4 ( VAR_2 )  cm . METHOD_5 ( ) TYPE java.lang.Exception NAME e  VAR_3 . error ( ( STRING_1 + ( change.getId ( ) ) ) , e )
MODIFIER public RETURN void NAME METHOD_1  TYPE_1 . METHOD_2 ( VAR_1 )  VAR_1 . METHOD_3 ( VAR_2  new TYPE_2 ( VAR_3 , false ) )  TYPE_1 . METHOD_4 ( ) . METHOD_5 ( )  METHOD_6 ( )  VAR_4 . METHOD_7 ( cd )  VAR_4 . METHOD_7 ( cd )  METHOD_8 ( )
MODIFIER MODIFIER RETURN TYPE_1 NAME METHOD_1 TYPE TYPE_2 NAME VAR_1 NAME VAR_1 MODIFIER public RETURN void NAME run  ( VAR_3 ? VAR_4 : VAR_5 ) . METHOD_2 ( )  return new TYPE_1 ( ) { public void run ( ) { ( VAR_3 ? VAR_4 : VAR_5 ) . METHOD_2 ( ) ; } } ; MODIFIER public RETURN void NAME run  ( VAR_7 ? VAR_8 : VAR_5 ) . METHOD_2 ( )  return new TYPE_1 ( ) { public void run ( ) { ( VAR_7 ? VAR_8 : VAR_5 ) . METHOD_2 ( ) ; } } ; MODIFIER public RETURN void NAME run BLOCK BLOCK  return new TYPE_1 ( ) { public void run ( ) { } } ;
MODIFIER public RETURN com.google.gerrit.reviewdb.client.PatchSet NAME patch TYPE com.google.gerrit.reviewdb.client.PatchSet.Id NAME psId COND ( ( VAR_1 ) != null ) && ( VAR_1 . getId ( ) . equals ( psId ) )  return VAR_1 ; TYPE com.google.gerrit.reviewdb.client.PatchSet NAME ps IN METHOD_1 ( ) COND ps . getId ( ) . equals ( psId )  return ps ;  return null ;
MODIFIER private RETURN java.lang.String NAME METHOD_1 TYPE TYPE_1 NAME VAR_1 TYPE java.lang.String NAME VAR_2 INIT = VAR_1 . METHOD_2 ( ) TYPE java.lang.String[] NAME args INIT = VAR_1 . METHOD_3 ( ) COND ( args . length ) > 1  return ( VAR_2 + STRING_1 ) + ( args [ 1 ] ) ;  return VAR_2 ;
MODIFIER private RETURN TYPE_1 NAME METHOD_1 TYPE java.lang.String NAME name TYPE java.lang.String NAME email TYPE com.google.gerrit.reviewdb.client.Account.Id NAME VAR_1 INIT = new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) TYPE com.google.gerrit.reviewdb.client.Account NAME account INIT = new com.google.gerrit.reviewdb.client.Account ( VAR_1 , TYPE_2 . METHOD_2 ( ) )  account . METHOD_3 ( name )  account . METHOD_4 ( email )  return new TYPE_1 ( new TYPE_3 ( VAR_2 ) , account , java.util.Collections . METHOD_5 ( ) , java.util.Collections . METHOD_5 ( ) , new TYPE_4 < > ( ) ) ;
( values long [ ] values ) ( VAR_3 VAR_3   TYPE_3.METHOD_2 ( VAR_1 ) ) ( VAR_1 java.lang.String [ ] VAR_1 ) ( METHOD_1_return private static TYPE_1 METHOD_1 ( java.lang.String [ ] VAR_1 long [ ] values TYPE_2 VAR_2 ) { java.util.List < java.lang.String > VAR_3   TYPE_3.METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_4 > VAR_4   new java.util.ArrayList < > ( ) ; for ( long value : values ) { VAR_4.METHOD_3 ( value ) ; } return new TYPE_1 ( TYPE_5.METHOD_4 ( VAR_5 STRING_1 ) STRING_2 0 VAR_2.METHOD_5 ( ) VAR_3 VAR_4 STRING_3 STRING_3 ) ; } ) ( VAR_4 VAR_4   new java.util.ArrayList < > ( ) ) ( VAR_2 TYPE_2 VAR_2 ) ( TYPE_3 TYPE_3 ) 
( VAR_2 TYPE_2 [ ] VAR_2 ) ( rule rule   METHOD_2 ( VAR_1.METHOD_3 ( ) ) ) ( VAR_5 boolean VAR_5 ) ( VAR_3 TYPE_3 VAR_3 ) ( VAR_6 boolean VAR_6 ) ( VAR_4 TYPE_4 VAR_4 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_1 VAR_1   METHOD_2 ( METHOD_3 ( ) ) ) ( Log android.util.Log ) 
( Log android.util.Log ) ( service service   VAR_2 ) ( METHOD_1_return public java.util.List < android.bluetooth.BluetoothDevice > METHOD_1 ( ) { android.util.Log.v ( VAR_1.TAG STRING_1 ) ; final TYPE_1 service   VAR_2 ; if ( service !   null ) { try { return service.METHOD_1 ( ) ; } catch ( android.os.RemoteException e ) { android.util.Log.e ( VAR_1.TAG e.toString ( ) ) ; } } else { android.util.Log.w ( VAR_1.TAG STRING_2 ) ; } return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( ) ; } ) ( VAR_2 VAR_2 ) 
( INT_1 INT_1 ) ( VAR_1 VAR_1   STRING_1 ) ( VAR_2 VAR_2   INT_1 ) ( TYPE_1 TYPE_1 ) ( VAR_4 VAR_4   TYPE_1.METHOD_2 ( 100 ) ) ( VAR_3 VAR_3   TYPE_1.METHOD_2 ( 10 ) ) ( STRING_1 STRING_1 ) ( TYPE_1 TYPE_1 ) ( VAR_5 VAR_5   METHOD_3 ( VAR_1 VAR_2 ) ) 
( VAR_1 java.lang.Object VAR_1 ) ( TYPE_4 TYPE_4 ) ( test TYPE_1 test ) ( VAR_2 TYPE_2 VAR_2 ) ( VAR_3 VAR_3   TYPE_4.METHOD_2 ( test STRING_2 ) ) ( VAR_2 VAR_2 ) 
( VAR_3 VAR_3   TYPE_4.METHOD_5 ( VAR_4 ) ) ( TYPE_2 TYPE_2 ) ( TYPE_4 TYPE_4 ) ( VAR_1 VAR_1 ) ( VAR_2 VAR_2   TYPE_2.METHOD_3 ( ) .METHOD_4 ( ) ) 
( test TYPE_1 test ) ( VAR_4 VAR_4 ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_1 VAR_1   METHOD_2 ( ) ) ( METHOD_1_return private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1   METHOD_2 ( ) ; if ( VAR_1 !   null ) { java.lang.String VAR_2   VAR_1.METHOD_3 ( VAR_3 VAR_4 ) ; if ( ( VAR_2.length ( ) ) > 0 ) { return VAR_2 ; } } return null ; } ) 
( equals_return public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this )    VAR_1 ) { return true ; } if ( ( VAR_1    null ) || ( ( METHOD_1 ( ) ) !   ( VAR_1.METHOD_1 ( ) ) ) ) { return false ; } if ( ! ( super.equals ( VAR_1 ) ) ) { return false ; } TYPE_1 VAR_2   ( ( TYPE_1 ) ( VAR_1 ) ) ; if ( ( VAR_3 ) !   ( VAR_4 ) ) { return false ; } return true ; } ) ( VAR_1 java.lang.Object VAR_1 ) ( VAR_2 VAR_2   ( ( TYPE_1 ) ( VAR_1 ) ) ) 
( VAR_4 VAR_4 ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) ( VAR_3 java.lang.String VAR_3 ) ( VAR_1 java.lang.String VAR_1 ) 
( METHOD_1_return public boolean METHOD_1 ( int subId ) { boolean VAR_1   false ; try { TYPE_1 telephony   METHOD_2 ( ) ; if ( telephony !   null ) VAR_1   telephony.METHOD_1 ( subId ) ; } catch ( android.os.RemoteException e ) { android.util.Log.e ( VAR_2.TAG STRING_1 e ) ; } catch ( java.lang.NullPointerException e ) { } android.util.Log.d ( VAR_2.TAG ( STRING_2 + VAR_1 ) ) ; return VAR_1 ; } ) ( Log android.util.Log ) ( subId int subId ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col394 return VAR_1 ; ) ( VAR_1 VAR_1   false ) 
( parent java.lang.String parent ) ( VAR_1 java.lang.String VAR_1 ) ( c c ) ( VAR_2 VAR_2   c.METHOD_2 ( ) ) ( c TYPE_1 c ) 
( context TYPE_1 context ) ( METHOD_1_return public boolean METHOD_1 ( TYPE_1 context ) { if ( TYPE_2.METHOD_2 ( context ) ) { if ( ( VAR_1 ) >   ( VAR_2 ) ) { return TYPE_2.METHOD_3 ( context ) .METHOD_4 ( ) ; } else { return TYPE_2.METHOD_3 ( context ) .METHOD_1 ( ) ; } } return false ; } ) 
( VAR_1 VAR_1   TYPE_2.METHOD_1 ( ) ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col308 return VAR_1 ; ) ( java.lang.String ) ( TYPE_2 TYPE_2 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.String ) { TYPE_1 VAR_1   TYPE_2.METHOD_1 ( ) ; if ( VAR_1    null ) { VAR_1   TYPE_3.METHOD_1 ( ) ; } if ( VAR_1    null ) { VAR_1   TYPE_4.METHOD_1 ( ) ; } if ( VAR_1    null ) { VAR_1   TYPE_5.METHOD_1 ( ) ; } return VAR_1 ; } ) 
( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   TYPE_2.METHOD_2 ( VAR_2 1 ) .METHOD_3 ( 2 1 ) .METHOD_4 ( ) ) 
( VAR_1 boolean VAR_1 ) 
( METHOD_1_return public java.lang.Object METHOD_1 ( ) { try { TYPE_1 e   ( ( TYPE_1 ) ( super.METHOD_1 ( ) ) ) ; VAR_1   ( ( VAR_2 )    null ) ? null : VAR_2.METHOD_1 ( ) ; return e ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( ) ; } } ) 
( VAR_2 int VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_3 android.os.Bundle VAR_3 ) ( METHOD_1_return public android.os.Bundle METHOD_1 ( TYPE_1 VAR_1 java.lang.String action int x int y int VAR_2 android.os.Bundle VAR_3 boolean VAR_4 ) { synchronized ( VAR_5 ) { long VAR_6   TYPE_2.METHOD_2 ( ) ; try { return METHOD_3 ( METHOD_4 ( this VAR_1 ) action x y VAR_2 VAR_3 VAR_4 ) ; } finally { TYPE_2.METHOD_5 ( VAR_6 ) ; } } } ) ( action java.lang.String action ) ( x int x ) ( y int y ) ( VAR_4 boolean VAR_4 ) 
( VAR_3 int VAR_3 ) ( VAR_4 java.util.List < java.lang.String > VAR_4 ) ( VAR_1 java.lang.String [ ] VAR_1 ) ( VAR_2 int VAR_2 ) 
( args args ) ( TYPE_2 TYPE_2 ) ( INT_1 INT_1 ) ( Mockito org.mockito.Mockito ) ( VAR_1 VAR_1   INT_1 ) ( args args   new android.os.Bundle ( ) ) ( args args ) ( args args ) ( TYPE_4 TYPE_4 ) 
( VAR_2 java.lang.String VAR_2 ) ( VAR_3 java.lang.String VAR_3 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 java.lang.String VAR_2 java.lang.String VAR_3 boolean VAR_4 ) { TYPE_2 VAR_5 ; if ( TYPE_3.METHOD_2 ( ) ) { VAR_5   TYPE_4.METHOD_1 ( VAR_1 VAR_2 VAR_3 VAR_4 null ) ; } else { VAR_5   TYPE_5.METHOD_1 ( VAR_1 VAR_2 VAR_3 VAR_4 ) ; } return new TYPE_1 ( VAR_5 ) ; } ) ( VAR_5 VAR_5 ) ( VAR_4 boolean VAR_4 ) ( VAR_1 java.lang.String VAR_1 ) 
( TYPE_5 TYPE_5 ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_3 TYPE_4.METHOD_2 ( VAR_1.METHOD_3 ( ) .METHOD_4 ( ) ) .METHOD_5 ( ) .VAR_3 ) ( VAR_2 VAR_2   TYPE_4.METHOD_2 ( VAR_1.METHOD_3 ( ) .METHOD_4 ( ) ) .METHOD_5 ( ) .VAR_3 ) ( METHOD_1_return public static java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { java.util.List < TYPE_3 > VAR_2   TYPE_4.METHOD_2 ( VAR_1.METHOD_3 ( ) .METHOD_4 ( ) ) .METHOD_5 ( ) .VAR_3 ; return TYPE_5.METHOD_6 ( TYPE_6.METHOD_7 ( VAR_2 true VAR_1 ) ) ; } ) 
( VAR_2 VAR_2   1 ) ( VAR_1 int VAR_1 ) ( METHOD_1_return public static java.util.Set < java.lang.Integer > METHOD_1 ( int VAR_1 ) { int VAR_2   1 ; java.util.Set < java.lang.Integer > result   null ; while ( VAR_1 !   0 ) { if ( ( VAR_1 & 1 ) !   0 ) { if ( result    null ) { result   new TYPE_1 < java.lang.Integer > ( ) ; } result.METHOD_2 ( TYPE_2.METHOD_3 ( VAR_2 ) ) ; } VAR_1 > > >   1 ; VAR_2 < <   1 ; } return result !   null ? result : VAR_3 < java.lang.Integer > METHOD_4 ( ) ; } ) ( result result   null ) 
( sb sb   new TYPE_1 ( 100 ) ) ( sb sb ) ( toString_return public java.lang.String toString ( ) { TYPE_1 sb   new TYPE_1 ( 100 ) ; sb.append ( METHOD_1 ( ) .getName ( ) ) ; sb.append ( CHAR_1 ) ; sb.append ( VAR_1.toString ( ) ) ; sb.append ( CHAR_2 ) ; sb.append ( type.METHOD_2 ( ) ) ; sb.append ( CHAR_3 ) ; return sb.toString ( ) ; } ) ( sb sb ) ( sb sb ) ( sb sb ) ( sb sb ) ( sb sb ) ( sb sb ) 
( VAR_3 VAR_3 ) ( VAR_1 VAR_1   method.METHOD_1 ( ) ) ( VAR_3 VAR_3   new TYPE_1 ( method ) ) ( method method ) ( method com.android.jack.ir.ast.JMethod method ) ( VAR_1 VAR_1 ) 
( METHOD_1_return private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_2 )    null ) { VAR_3   VAR_1 ; VAR_2   VAR_4.METHOD_2 ( VAR_5 VAR_1 ) ; } if ( ! ( VAR_2.METHOD_3 ( ) ) ) VAR_2.METHOD_4 ( ) ; return true ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1    null ) { TYPE_2.i ( STRING_1 STRING_2 ) ; throw new java.lang.NullPointerException ( STRING_3 ) ; } return ( ( ( ( VAR_2 ) >   ( VAR_3 ) ) & & ( ( VAR_2 ) <   ( VAR_4 ) ) ) & & ( ! ( TYPE_3.METHOD_2 ( ) ) ) ) & & ( VAR_1.METHOD_3 ( STRING_4 false ) ) ; } ) 
( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2 ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   new TYPE_1 ( ) ) ( VAR_2 VAR_2   TYPE_2.METHOD_2 ( ( ( VAR_3 ) + STRING_1 ) ) ) 
( config config ) ( config config   new TYPE_2 ( ) .addFeature ( VAR_1 ) .addFeature ( VAR_2 ) .build ( ) ) ( TYPE_3 TYPE_3 ) ( result result   VAR_4.METHOD_2 ( ) ) ( VAR_4 VAR_4 ) 
( METHOD_1_return public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device ) { if ( ! ( TYPE_1.METHOD_2 ( ) ) ) { android.util.Log.w ( TYPE_2.TAG STRING_1 ) ; return false ; } TYPE_2 service   METHOD_3 ( ) ; if ( service    null ) return false ; return service.METHOD_1 ( device ) ; } ) ( service service   METHOD_3 ( ) ) ( device android.bluetooth.BluetoothDevice device ) ( service service ) 
( METHOD_1_return public static java.lang.String METHOD_1 ( char [ ] s ) { TYPE_1 result   new TYPE_1 ( ) ; for ( int i   0 ; i < ( s.length ) ; ++i ) { if ( i !   0 ) result.append ( CHAR_1 ) ; result.append ( TYPE_2.METHOD_1 ( s [ i ] ) ) ; } return result.toString ( ) ; } ) ( result result   new TYPE_1 ( ) ) ( s char [ ] s ) ( result result ) 
( METHOD_1_return public java.lang.String METHOD_1 ( TYPE_1 VAR_1 boolean VAR_2 ) { java.lang.StringBuilder sb   new java.lang.StringBuilder ( ) ; for ( TYPE_2 VAR_3 : m.METHOD_2 ( VAR_2 ) ) { sb.append ( VAR_3.toString ( ) ) .append ( CHAR_1 ) ; for ( TYPE_3 item : VAR_3.METHOD_3 ( ) ) { sb.append ( STRING_1 ) .append ( item.toString ( ) ) .append ( CHAR_1 ) ; } } return sb.toString ( ) ; } ) ( nodeCall_toString_return sb.toString ( ) ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 boolean VAR_2 ) ( sb sb   new java.lang.StringBuilder ( ) ) ( sb sb ) ( METHOD_1_return_line1_col383 return sb.toString ( ) ; ) 
( VAR_1 java.lang.String VAR_1 ) ( VAR_2 int VAR_2 ) ( index int index ) ( VAR_5 VAR_5 ) 
( TYPE_5 TYPE_5 ) ( VAR_2 TYPE_3 < TYPE_4 > VAR_2 ) ( TYPE_5 TYPE_5 ) ( VAR_3 VAR_3   TYPE_5.METHOD_2 ( VAR_2 ) ) ( VAR_4 VAR_4   TYPE_5.METHOD_3 ( VAR_5 VAR_1.METHOD_4 ( ) ) ) ( VAR_3 VAR_3 ) ( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 < TYPE_4 > VAR_2 ) { java.util.List < TYPE_4 > VAR_3   TYPE_5.METHOD_2 ( VAR_2 ) ; TYPE_4 VAR_4   TYPE_5.METHOD_3 ( VAR_5 VAR_1.METHOD_4 ( ) ) ; VAR_3.METHOD_5 ( VAR_4 ) ; return new TYPE_6 ( TYPE_7.METHOD_6 ( VAR_1.METHOD_7 ( ) ) TYPE_8.METHOD_8 ( VAR_1.METHOD_9 ( ) ) VAR_3 ) ; } ) 
( VAR_2 TYPE_1 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) ( TYPE_2 TYPE_2 ) 
( VAR_2 VAR_2   new TYPE_3 < TYPE_2 > ( ) ) ( VAR_1 com.android.jack.ir.ast.JDefinedClassOrInterface VAR_1 ) ( METHOD_1_return private TYPE_1 < TYPE_2 > METHOD_1 ( com.android.jack.ir.ast.JDefinedClassOrInterface VAR_1 ) { java.util.Set < TYPE_2 > VAR_2   new TYPE_3 < TYPE_2 > ( ) ; assert ( VAR_3 ) !   null ; for ( com.android.jack.ir.ast.JDefinedClassOrInterface type : VAR_3 ) { if ( ( VAR_1.METHOD_2 ( type ) ) || ( type.METHOD_2 ( VAR_1 ) ) ) { for ( com.android.jack.ir.ast.JMethod method : type.METHOD_3 ( ) ) { VAR_2.METHOD_4 ( method.METHOD_5 ( ) ) ; } } } return VAR_2 ; } ) ( VAR_2 VAR_2 ) ( METHOD_1_return_line1_col470 return VAR_2 ; ) 
( s s ) ( VAR_1 TYPE_1 VAR_1 ) ( s s ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( s s ) ( s s ) ( s s   new TYPE_2 ( VAR_1 ) ) 
( VAR_5 VAR_5 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 boolean VAR_2 ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2   new TYPE_3 ( VAR_3 STRING_1 VAR_1 VAR_4 ( ( TYPE_4 ) ( VAR_5.METHOD_2 ( ) ) ) ) ; TYPE_1 VAR_6   new TYPE_1 ( VAR_3 VAR_7 < TYPE_5 > METHOD_3 ( VAR_1 ) VAR_2 ) ; return VAR_6 ; } ) ( VAR_6 VAR_6   new TYPE_1 ( VAR_3 VAR_7 < TYPE_5 > METHOD_3 ( VAR_1 ) VAR_2 ) ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_6 VAR_6 ) ( METHOD_1_return_line1_col254 return VAR_6 ; ) ( VAR_2 VAR_2   new TYPE_3 ( VAR_3 STRING_1 VAR_1 VAR_4 ( ( TYPE_4 ) ( VAR_5.METHOD_2 ( ) ) ) ) ) 
( VAR_3 VAR_3   METHOD_7 ( VAR_2 ) ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 TYPE_2 VAR_2 ) ( VAR_1 VAR_1 ) ( TYPE_3 TYPE_3 ) ( VAR_1 VAR_1 ) ( request request   METHOD_8 ( TYPE_8.with ( VAR_1 ) VAR_2 ) .METHOD_9 ( VAR_3 ) .METHOD_10 ( VAR_3 ) ) ( request request ) 
( VAR_2 java.lang.String VAR_2 ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_4 int VAR_4 ) ( VAR_3 long VAR_3 ) ( uri java.lang.String uri ) 
( VAR_9 VAR_9   METHOD_4 ( VAR_5 ) ) ( VAR_6 VAR_6   VAR_4 + ( VAR_7 ) ) ( VAR_3 VAR_3 ) ( VAR_8 VAR_8   METHOD_3 ( VAR_1 ) ) ( VAR_2 VAR_2   VAR_3 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_4 VAR_4   ( ( int ) ( METHOD_2 ( VAR_5 ) ) ) ) 
( VAR_2 VAR_2 ) ( b b ) ( VAR_1 VAR_1 ) ( VAR_2 VAR_2   VAR_1.get ( ( ( VAR_1.size ( ) ) - 1 ) ) ) ( b TYPE_1 b ) ( VAR_1 VAR_1   b.METHOD_2 ( ) ) ( VAR_3 VAR_3   VAR_2.METHOD_3 ( ) ) 
( m m   new java.util.HashMap < > ( ) ) ( m m ) 
( TYPE_2 TYPE_2 ) ( TYPE_3 TYPE_3 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   TYPE_2.METHOD_2 ( ) ) ( result result   TYPE_3.METHOD_6 ( VAR_1 INT_1 STRING_2 STRING_1 ) ) ( match match ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( VAR_1 int VAR_1 ) 
( VAR_1 TYPE_2 < TYPE_3 > VAR_1 ) ( VAR_2 TYPE_4 VAR_2 ) ( session TYPE_1 session ) 
( METHOD_1_return public synchronized TYPE_1 METHOD_1 ( java.lang.String ) throws TYPE_2 { try { return METHOD_2 ( ) ; } catch ( TYPE_3 e ) { TYPE_1 VAR_1   VAR_2.METHOD_1 ( this ) ; VAR_3.METHOD_3 ( VAR_1 ) ; return VAR_1 ; } catch ( TYPE_4 e ) { throw new TYPE_2 ( VAR_2.METHOD_4 ( this ) ) ; } } ) ( java.lang.String ) 
( equals_return public boolean equals ( java.lang.Object VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_1 ) ) { return false ; } TYPE_1 VAR_2   ( ( TYPE_1 ) ( VAR_1 ) ) ; for ( int i   0 ; i < ( VAR_3.length ) ; ++i ) { if ( ! ( VAR_3 [ i ] .equals ( VAR_4 [ i ] ) ) ) return false ; } return true ; } ) ( VAR_2 VAR_2   ( ( TYPE_1 ) ( VAR_1 ) ) ) ( VAR_1 java.lang.Object VAR_1 ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_4 VAR_4 ) ( VAR_3 VAR_3   VAR_4 ) ( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return public boolean METHOD_1 ( TYPE_1 VAR_1 TYPE_2 VAR_2 ) { TYPE_3 [ ] VAR_3   VAR_4 ; if ( METHOD_2 ( VAR_3 ) ) { TYPE_4 VAR_5   VAR_6 ; if ( VAR_5    null ) { return false ; } java.lang.String VAR_7   TYPE_5.METHOD_3 ( VAR_2 ) ; TYPE_6 item   TYPE_7.METHOD_4 ( VAR_7 VAR_5 ) ; if ( item !   null ) { assert VAR_7 !   null ; METHOD_5 ( VAR_7 item ) ; METHOD_6 ( VAR_3 item ) ; } } return false ; } ) 
( VAR_1 VAR_1 ) ( VAR_1 boolean VAR_1 ) 
( VAR_3 VAR_3   VAR_4.METHOD_4 ( VAR_5 ) ) ( Mockito org.mockito.Mockito ) ( VAR_1 VAR_1   METHOD_2 ( ) ) ( VAR_4 VAR_4 ) 
( VAR_1 int VAR_1 ) ( VAR_2 int VAR_2 ) 
(   TYPE_2.getName ( VAR_1 ) ) ( VAR_1 TYPE_1 VAR_1 ) ( ) ( METHOD_1_return public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String   TYPE_2.getName ( VAR_1 ) ; if (    null ) {   TYPE_3.getName ( VAR_1 ) ; if (    null ) {   TYPE_4.getName ( VAR_1 ) ; } if (    null ) {   TYPE_5.getName ( VAR_1 ) ; } if (    null ) {   TYPE_6.getName ( VAR_1 ) ; } } return ; } ) ( TYPE_2 TYPE_2 ) ( METHOD_1_return_line1_col372 return ; ) 
( b b   METHOD_2 ( STRING_2 ) ) ( a a   METHOD_2 ( STRING_1 ) ) ( VAR_3 VAR_3   new TYPE_2 ( new TYPE_1 [ ] { a VAR_1 } VAR_2 ) ) ( VAR_1 VAR_1   new TYPE_2 ( new TYPE_1 [ ] { a b } VAR_2 ) .METHOD_3 ( ) ) 
( TYPE_3 TYPE_3 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( TYPE_2 type ) { switch ( type.METHOD_2 ( ) ) { case VAR_1 : return VAR_2 ; case VAR_3 : return VAR_4 ; case VAR_5 : return VAR_6 ; case VAR_7 : return VAR_8 ; case VAR_9 : return VAR_10 ; case VAR_11 : return VAR_4 ; } return TYPE_3.METHOD_3 ( type ) ; } ) ( type TYPE_2 type ) 
( VAR_1 TYPE_1 VAR_1 ) 
( TYPE_1 TYPE_1 ) ( METHOD_1_return_line1_col409 return VAR_10 ; ) ( VAR_10 VAR_10 ) ( VAR_1 android.os.Message VAR_1 ) ( METHOD_1_return public boolean METHOD_1 ( android.os.Message VAR_1 ) { if ( VAR_2 ) log ( ( ( ( getName ( ) ) + ( VAR_1.toString ( ) ) ) + STRING_1 ) ) ; switch ( VAR_3 ) { case VAR_4 : if ( ( message.arg1 )    ( VAR_5 ) ) { METHOD_2 ( VAR_1 ) ; } break ; case VAR_6 : METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; transitionTo ( VAR_7 ) ; break ; default : return VAR_8 ; } TYPE_1.METHOD_4 ( VAR_9 VAR_3 ) ; return VAR_10 ; } ) 
( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   TYPE_2.METHOD_2 ( ) ) ( TYPE_3 TYPE_3 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( match match ) ( VAR_1 VAR_1 ) ( result result   TYPE_3.METHOD_6 ( VAR_1 INT_1 STRING_1 ) ) 
( path java.lang.String path ) 
( METHOD_1_return private static java.lang.String METHOD_1 ( java.lang.String [ ] VAR_1 int start int VAR_2 ) { java.lang.StringBuilder VAR_3   new java.lang.StringBuilder ( INT_1 ) ; for ( int i   start ; i < VAR_2 ; ++i ) { if ( i !   0 ) { VAR_3.append ( CHAR_1 ) ; } VAR_3.append ( VAR_1 [ i ] ) ; } return VAR_3.toString ( ) ; } ) ( VAR_3 VAR_3   new java.lang.StringBuilder ( INT_1 ) ) ( METHOD_1_return_line1_col314 return VAR_3.toString ( ) ; ) ( VAR_1 java.lang.String [ ] VAR_1 ) ( nodeCall_toString_return VAR_3.toString ( ) ) ( VAR_3 VAR_3 ) ( start int start ) ( VAR_2 int VAR_2 ) 
( VAR_2 VAR_2 ) ( VAR_1 VAR_1 ) ( TYPE_2 TYPE_2 ) ( Allocation android.renderscript.Allocation ) ( VAR_1 VAR_1   android.renderscript.Allocation.createSized ( mRS TYPE_1.METHOD_2 ( mRS ) android.renderscript.cts.INPUTSIZE ) ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   VAR_2.METHOD_2 ( ) ) ( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2 ) ( TYPE_3 TYPE_3 ) ( TYPE_2 TYPE_2 ) ( TYPE_2 TYPE_2 ) ( TYPE_3 TYPE_3 ) 
( VAR_1 VAR_1 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( res res   -1 ) ( METHOD_1_return public int METHOD_1 ( ) throws java.io.IOException { java.lang.Object VAR_1   TYPE_1.METHOD_2 ( path ) ; byte [ ] b   new byte [ 1 ] ; int res   -1 ; try { res   METHOD_1 ( b 0 1 ) ; } finally { TYPE_1.METHOD_3 ( VAR_1 res ) ; } return res !   ( -1 ) ? ( b [ 0 ] ) & INT_1 : -1 ; } ) ( TYPE_1 TYPE_1 ) ( b b   new byte [ 1 ] ) ( VAR_1 VAR_1   TYPE_1.METHOD_2 ( path ) ) 
( location TYPE_2 location ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_3 java.lang.Object ... VAR_3 ) 
( TYPE_1 TYPE_1 ) 
( VAR_1 int VAR_1 ) ( uid int uid ) ( TYPE_1 TYPE_1 ) ( METHOD_1_return public static int METHOD_1 ( int uid int VAR_1 int [ ] VAR_2 boolean VAR_3 int [ ] [ ] VAR_4 ) { int VAR_5   ( VAR_3 ) ? VAR_6 : 0 ; return TYPE_1.METHOD_1 ( uid VAR_1 VAR_2 VAR_5 VAR_4 ) ; } ) ( VAR_4 int [ ] [ ] VAR_4 ) ( VAR_2 int [ ] VAR_2 ) ( VAR_3 boolean VAR_3 ) ( VAR_5 VAR_5   ( VAR_3 ) ? VAR_6 : 0 ) 
( VAR_2 VAR_2 ) ( VAR_1 VAR_1   VAR_2.size ( ) ) 
( result result   0 ) ( METHOD_1_return_line1_col243 return result ; ) ( VAR_1 VAR_1   VAR_2.METHOD_2 ( VAR_3 null null null null ) ) ( result result ) ( VAR_2 VAR_2 ) ( METHOD_1_return public java.lang.Integer METHOD_1 ( ) { java.lang.Integer result   0 ; TYPE_1 VAR_1   VAR_2.METHOD_2 ( VAR_3 null null null null ) ; if ( VAR_1 !   null ) { result   VAR_1.METHOD_3 ( ) ; VAR_1.METHOD_4 ( ) ; } return result ; } ) 
( METHOD_1_return public TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1   null ; try { VAR_1   ( ( TYPE_1 < TYPE_2 > ) ( super.METHOD_1 ( ) ) ) ; VAR_1.METHOD_2 ( new TYPE_3 ( m ) ) ; } catch ( TYPE_4 e ) { throw new TYPE_5 ( ) ; } return VAR_1 ; } ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col248 return VAR_1 ; ) ( VAR_1 VAR_1   null ) 
( pm pm ) ( pm pm   ( ( TYPE_1 ) ( mContext.METHOD_2 ( VAR_3 ) ) ) ) 
( c c ) ( TYPE_3 TYPE_3 ) ( VAR_2 VAR_2   e.METHOD_4 ( ) ) ( e e   VAR_1.METHOD_3 ( ) ) ( TYPE_1 TYPE_1 ) ( e e ) ( c c   TYPE_1.METHOD_2 ( ) ) ( VAR_1 VAR_1 ) 
( context TYPE_1 context ) 
( sb java.lang.StringBuilder sb ) ( sb sb ) ( sb sb ) ( VAR_3 VAR_3 ) 
( VAR_1 VAR_1 ) ( TYPE_4 TYPE_4 ) ( VAR_1 VAR_1   TYPE_4.METHOD_2 ( ) ) ( in TYPE_1 in ) ( METHOD_1_return public static final java.util.HashMap METHOD_1 ( TYPE_1 in ) throws java.io.IOException TYPE_2 { TYPE_3 VAR_1   TYPE_4.METHOD_2 ( ) ; VAR_1.METHOD_3 ( in null ) ; return ( ( java.util.HashMap ) ( TYPE_5.METHOD_4 ( VAR_1 new java.lang.String [ 1 ] ) ) ) ; } ) 
( x x   ( ( char ) ( TYPE_2.METHOD_3 ( METHOD_4 ( i ) ( ! ( VAR_3 ) ) ) ) ) ) ( x x ) ( METHOD_1_return_line1_col216 return x ; ) ( METHOD_1_return public char METHOD_1 ( int i ) { if ( ! ( VAR_1 ) ) { throw new TYPE_1 ( STRING_1 ) ; } METHOD_2 ( i VAR_2 ) ; char x   ( ( char ) ( TYPE_2.METHOD_3 ( METHOD_4 ( i ) ( ! ( VAR_3 ) ) ) ) ) ; return x ; } ) ( i int i ) 
( listener TYPE_1 listener ) ( VAR_1 int VAR_1 ) 
( METHOD_1_return static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 VAR_2 ) { TYPE_1 VAR_3   new TYPE_1 ( VAR_1 ( ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) ) ; VAR_3.METHOD_2 ( new TYPE_4 [ ] { TYPE_5.METHOD_3 ( ) } ) ; VAR_3.METHOD_4 ( VAR_2 ) ; return VAR_3 ; } ) ( VAR_3 VAR_3 ) ( VAR_3 VAR_3   new TYPE_1 ( VAR_1 ( ( ( VAR_4 ) | ( VAR_5 ) ) | ( VAR_6 ) ) ) ) ( VAR_2 TYPE_3 VAR_2 ) ( VAR_3 VAR_3 ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_3 VAR_3 ) ( METHOD_1_return_line1_col252 return VAR_3 ; ) 
( context TYPE_1 context ) 
( VAR_1 int VAR_1 ) ( METHOD_1_return protected boolean METHOD_1 ( int VAR_1 int VAR_2 java.lang.String VAR_3 ) { TYPE_1 c   VAR_4.METHOD_2 ( ) ; if ( ( c !   null ) & & ( c.METHOD_3 ( VAR_1 ) ) ) { android.content.Intent VAR_5   METHOD_4 ( c VAR_2 VAR_3 ) ; METHOD_5 ( VAR_5 ) ; return true ; } return false ; } ) ( VAR_2 int VAR_2 ) ( VAR_4 VAR_4 ) ( VAR_3 java.lang.String VAR_3 ) ( c c   VAR_4.METHOD_2 ( ) ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_3 TYPE_2 VAR_3 ) ( VAR_4 java.lang.String VAR_4 ) ( VAR_2 TYPE_2 VAR_2 ) ( VAR_5 java.lang.Object ... VAR_5 ) 
( VAR_1 VAR_1   METHOD_2 ( STRING_1 VAR_2.METHOD_3 ( ) VAR_3 ) ) ( TYPE_2 TYPE_2 ) ( Mockito org.mockito.Mockito ) ( VAR_7 VAR_7 ) 
( VAR_1 TYPE_1 VAR_1 ) ( path path   METHOD_3 ( VAR_1.METHOD_4 ( ) ) ) ( VAR_1 VAR_1 ) 
( VAR_2 VAR_2 ) ( VAR_1 boolean VAR_1 ) ( VAR_2 TYPE_1 VAR_2 ) ( VAR_6 VAR_6 ) ( VAR_4 VAR_4   VAR_2.METHOD_3 ( ) ) ( VAR_5 VAR_5 ) ( VAR_3 VAR_3   VAR_2.METHOD_2 ( ) ) ( VAR_2 VAR_2 ) 
( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1 ) ( VAR_3 VAR_3 ) ( VAR_1 this.VAR_1 ) 
( VAR_1 TYPE_3 VAR_1 ) ( VAR_2 VAR_2 ) ( METHOD_1_return static TYPE_1 METHOD_1 ( TYPE_2 context TYPE_3 VAR_1 ) { TYPE_4 VAR_2   new TYPE_4 ( VAR_3 ) ; VAR_2.METHOD_2 ( new java.lang.String [ ] { context.METHOD_3 ( VAR_4 ) } ) ; return new TYPE_1 ( new TYPE_5 [ ] { VAR_2 VAR_1 } ) ; } ) ( context TYPE_2 context ) ( VAR_2 VAR_2   new TYPE_4 ( VAR_3 ) ) 
( VAR_2 TYPE_1 VAR_2 ) ( METHOD_1_return private static int METHOD_1 ( boolean VAR_1 TYPE_1 VAR_2 ) throws TYPE_2 { if ( VAR_1 ) { if ( ( ( VAR_3 )    ( VAR_4 ) ) || ( ( VAR_3 )    ( VAR_5 ) ) ) { return 0 ; } } else { if ( ( ( VAR_3 )    ( VAR_6 ) ) || ( ( VAR_3 )    ( VAR_7 ) ) ) { return 0 ; } } throw VAR_2.METHOD_2 ( ) ; } ) ( VAR_1 boolean VAR_1 ) 
( METHOD_1_return private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2   METHOD_2 ( ) ; if ( VAR_2    null ) { return false ; } boolean VAR_3   false ; for ( TYPE_1 VAR_4 : VAR_2.METHOD_3 ( ) ) { if ( VAR_4.METHOD_4 ( ) .equals ( VAR_1.METHOD_4 ( ) ) ) { VAR_3   true ; } } return VAR_3 ; } ) ( VAR_3 VAR_3   false ) ( VAR_2 VAR_2   METHOD_2 ( ) ) ( VAR_3 VAR_3 ) ( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return_line1_col287 return VAR_3 ; ) 
( VAR_2 VAR_2 ) ( VAR_1 VAR_1   android.renderscript.Allocation.createSized ( mRS TYPE_1.METHOD_2 ( mRS ) android.renderscript.cts.INPUTSIZE ) ) ( Allocation android.renderscript.Allocation ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1 ) 
( TYPE_1 TYPE_1 ) ( VAR_2 VAR_2 ) 
( VAR_1 VAR_1 ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 VAR_2   VAR_1.METHOD_2 ( ) ) ( context TYPE_1 context ) 
( sb sb ) ( sb sb ) ( sb sb ) ( sb sb ) ( sb sb   new TYPE_1 ( 100 ) ) ( toString_return public java.lang.String toString ( ) { TYPE_1 sb   new TYPE_1 ( 100 ) ; sb.append ( METHOD_1 ( ) .getName ( ) ) ; sb.append ( CHAR_1 ) ; sb.append ( VAR_1.METHOD_2 ( ) ) ; sb.append ( CHAR_2 ) ; return sb.toString ( ) ; } ) ( sb sb ) 
( x TYPE_1 x ) ( VAR_1 TYPE_2 VAR_1 ) 
( VAR_1 int VAR_1 ) ( VAR_4 VAR_4   METHOD_3 ( VAR_3 ) ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_3 VAR_3   METHOD_2 ( VAR_1 VAR_2 ) ) ( METHOD_1_return public int METHOD_1 ( int VAR_1 java.lang.String VAR_2 ) { TYPE_1 VAR_3   METHOD_2 ( VAR_1 VAR_2 ) ; if ( VAR_3    null ) { android.util.Log.d ( TYPE_2.TAG ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ; return -1 ; } TYPE_3 VAR_4   METHOD_3 ( VAR_3 ) ; if ( VAR_4 !   null ) { android.util.Log.d ( TYPE_2.TAG ( ( ( STRING_3 + VAR_1 ) + STRING_2 ) + VAR_2 ) ) ; METHOD_4 ( VAR_4 ) ; } return 1 ; } ) 
( request request   new TYPE_3 ( ) .METHOD_2 ( VAR_1 ) .METHOD_3 ( new TYPE_4 ( ) .METHOD_4 ( VAR_2 ) ) .build ( ) ) ( result result   METHOD_5 ( VAR_3 request ) ) ( VAR_1 VAR_1   new TYPE_1 [ 0 ] ) ( TYPE_6 TYPE_6 ) 
( VAR_22 VAR_22 ) ( METHOD_1_return_line1_col268 return VAR_2 ; ) ( VAR_6 VAR_6 ) ( VAR_10 VAR_10 ) ( VAR_18 VAR_18 ) ( VAR_8 VAR_8 ) ( VAR_20 VAR_20 ) ( VAR_16 VAR_16 ) ( VAR_4 VAR_4 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2   new TYPE_1 ( ) ; VAR_3   VAR_4 ; VAR_5   VAR_6 ; VAR_7   VAR_8 ; VAR_9   VAR_10 ; VAR_11   VAR_12 ; VAR_13   VAR_14 ; VAR_15   VAR_16 ; VAR_17   VAR_18 ; VAR_19   VAR_20 ; VAR_21   VAR_22 ; return VAR_2 ; } ) ( VAR_2 VAR_2   new TYPE_1 ( ) ) ( VAR_2 VAR_2 ) ( VAR_14 VAR_14 ) ( VAR_12 VAR_12 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_12 VAR_12 ) ( METHOD_1_return public boolean METHOD_1 ( android.os.Message VAR_1 ) { switch ( VAR_2 ) { case VAR_3 : VAR_4.METHOD_2 ( this ) ; case VAR_5 : transitionTo ( VAR_6 ) ; break ; case VAR_7 : METHOD_3 ( ) ; transitionTo ( VAR_8 ) ; break ; case VAR_9 : VAR_10.METHOD_4 ( VAR_11 this ) ; VAR_10.METHOD_5 ( VAR_11 this ) .METHOD_6 ( ) ; transitionTo ( VAR_8 ) ; break ; } return VAR_12 ; } ) ( METHOD_1_return_line1_col381 return VAR_12 ; ) ( VAR_1 android.os.Message VAR_1 ) 
( TYPE_4 TYPE_4 ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 java.lang.String VAR_2 ) throws TYPE_3 { if ( VAR_1    null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } TYPE_4 VAR_3   TYPE_4.METHOD_2 ( VAR_2 ) ; if ( VAR_3    null ) { throw new TYPE_3 ( ( STRING_2 + VAR_2 ) ) ; } return TYPE_5.METHOD_1 ( VAR_1 VAR_3 ) ; } ) ( VAR_3 VAR_3   TYPE_4.METHOD_2 ( VAR_2 ) ) ( TYPE_5 TYPE_5 ) 
( log final java.lang.String log ) 
( VAR_1 TYPE_1 VAR_1 ) ( TYPE_2 TYPE_2 ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 int VAR_2 ) 
( VAR_7 boolean VAR_7 ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_4 TYPE_3 < java.lang.String > VAR_4 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 java.lang.String VAR_2 java.lang.Class < ? > VAR_3 TYPE_3 < java.lang.String > VAR_4 TYPE_4 VAR_5 int VAR_6 boolean VAR_7 ) { if ( new TYPE_5 ( VAR_3 ) .METHOD_2 ( true void.class STRING_1 java.lang.String [ ] .class ) ) { return new TYPE_6 ( VAR_1 VAR_3 ) ; } else { return null ; } } ) ( VAR_5 TYPE_4 VAR_5 ) ( VAR_6 int VAR_6 ) ( VAR_3 java.lang.Class < ? > VAR_3 ) ( VAR_2 java.lang.String VAR_2 ) 
( res res   new java.lang.String [ ] { STRING_1 STRING_2 STRING_1 STRING_1 } ) ( TYPE_1 TYPE_1 ) ( VAR_3 VAR_3   0 ) ( VAR_2 VAR_2   VAR_1.METHOD_3 ( STRING_4 ) ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   TYPE_1.METHOD_2 ( STRING_3 ) ) 
( VAR_1 VAR_1   new java.util.ArrayList ( 5 ) ) 
( VAR_2 VAR_2   new TYPE_1 ( VAR_1 ) ) ( VAR_1 VAR_1 ) 
( VAR_2 VAR_2   TYPE_1.METHOD_3 ( VAR_3 ) ) ( VAR_1 VAR_1 ) ( TYPE_1 TYPE_1 ) ( VAR_1 VAR_1   TYPE_1.METHOD_2 ( new java.io.File ( STRING_1 ) ) ) ( TYPE_1 TYPE_1 ) 
( TYPE_2 TYPE_2 ) 
( TYPE_8 TYPE_8 ) ( VAR_3 VAR_3   TYPE_8.METHOD_3 ( VAR_2 VAR_1 ) ) ( VAR_1 java.lang.String VAR_1 ) ( key TYPE_1 key ) ( TYPE_7 TYPE_7 ) ( VAR_2 VAR_2   TYPE_7.METHOD_1 ( c.METHOD_2 ( ) ) ) 
( VAR_7 VAR_7 ) ( VAR_3 TYPE_1 VAR_3 ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_6 VAR_6 ) ( VAR_6 VAR_6   new TYPE_3 ( mContext VAR_1 null ) ) ( index int index ) ( VAR_2 int VAR_2 ) 
( VAR_1 VAR_1   element.METHOD_2 ( ) ) ( element TYPE_1 element ) ( METHOD_1_return public static java.lang.String METHOD_1 ( TYPE_1 element ) { TYPE_2 VAR_1   element.METHOD_2 ( ) ; for ( int j   0 ; j < ( VAR_1.METHOD_3 ( ) ) ; j++ ) { TYPE_3 VAR_2   VAR_1.item ( j ) ; if ( ( VAR_2.METHOD_4 ( ) )    ( VAR_3 ) ) { return VAR_2.METHOD_5 ( ) .METHOD_6 ( ) ; } } return null ; } ) ( element element ) 
( VAR_1 java.lang.String VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( int state java.lang.String VAR_1 ) { return new TYPE_1 ( state false VAR_2 new TYPE_2 ( VAR_3 ) null null null null null false false false false false false false 0 false false false true VAR_4 false VAR_1 ) ; } ) ( state int state ) 
( version int version ) ( VAR_4 int VAR_4 ) ( VAR_2 int VAR_2 ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_5 int VAR_5 ) ( METHOD_1_return public int METHOD_1 ( java.lang.String VAR_1 int VAR_2 int VAR_3 int version int VAR_4 int VAR_5 ) { if ( ( VAR_6 )    false ) { throw new java.lang.RuntimeException ( ( ( VAR_7.TAG ) + STRING_1 ) ) ; } return METHOD_2 ( VAR_1 VAR_2 VAR_3 version VAR_4 VAR_5 ) ; } ) ( VAR_3 int VAR_3 ) 
( VAR_1 java.lang.String VAR_1 ) ( METHOD_1_return public static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( ( ( ! ( VAR_1.METHOD_2 ( STRING_1 ) ) ) & & ( ! ( VAR_1.METHOD_2 ( STRING_2 ) ) ) ) & & ( ! ( VAR_1.METHOD_2 ( STRING_3 ) ) ) ) & & ( ! ( VAR_1.METHOD_2 ( STRING_4 ) ) ) ) & & ( ! ( VAR_1.METHOD_3 ( STRING_5 ) ) ) ; } ) 
( VAR_2 VAR_2   TYPE_1.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ) ( Assert org.junit.Assert ) ( VAR_1 java.lang.String VAR_1 ) ( TYPE_1 TYPE_1 ) ( expected java.lang.String [ ] expected ) 
( context TYPE_1 context ) ( STRING_1 STRING_1 ) ( msg msg ) ( METHOD_1_return_line1_col340 return msg ; ) ( msg msg   STRING_1 ) ( METHOD_1_return public static java.lang.String METHOD_1 ( TYPE_1 context ) { java.lang.String msg   STRING_1 ; try { TYPE_2 pm   context.METHOD_2 ( ) ; TYPE_3 VAR_1   pm.METHOD_3 ( context.METHOD_4 ( ) 0 ) ; msg   STRING_2 ; if ( ( VAR_2 ) !   null ) { msg   VAR_2 ; } } catch ( TYPE_4 e ) { TYPE_5.d ( VAR_3.TAG msg ) ; } return msg ; } ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_3 TYPE_3 VAR_3 ) ( VAR_4 VAR_4 ) ( key key   ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) + STRING_1 ) + VAR_3 ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_4 VAR_4   TYPE_5.get ( key ) ) ( METHOD_1_return_line1_col366 return VAR_4 ; ) ( METHOD_1_return private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 TYPE_2 VAR_2 TYPE_3 VAR_3 ) { java.lang.String key   ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) + STRING_1 ) + VAR_3 ; TYPE_4 VAR_4   TYPE_5.get ( key ) ; if ( VAR_4    null ) { VAR_4   TYPE_6.METHOD_2 ( new TYPE_7 ( VAR_1 ) null VAR_2 VAR_3 ) ; TYPE_5.METHOD_3 ( key VAR_4 ) ; } return VAR_4 ; } ) ( TYPE_5 TYPE_5 ) 
( status TYPE_1 status ) ( VAR_3 VAR_3 ) ( VAR_1 short VAR_1 ) 
( VAR_1 int VAR_1 ) ( VAR_3 int VAR_3 ) ( METHOD_1_return private boolean METHOD_1 ( int VAR_1 int VAR_2 int VAR_3 ) { if ( ( VAR_1    ( VAR_4 ) ) & & ( VAR_2 >   0 ) ) { if ( VAR_3    ( VAR_5 ) ) { if ( VAR_2 <   ( VAR_6 ) ) { return true ; } } else if ( ( VAR_3 < ( VAR_5 ) ) & & ( VAR_3 >   ( VAR_7 ) ) ) { return true ; } } return false ; } ) ( VAR_2 int VAR_2 ) 
( VAR_1 VAR_1 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( ) { TYPE_2.d ( STRING_1 STRING_2 ) ; TYPE_1 VAR_1   null ; try { VAR_1   TYPE_1.METHOD_2 ( TYPE_3.METHOD_3 ( ) ) ; VAR_1.METHOD_4 ( ) .METHOD_5 ( true ) ; } catch ( java.io.IOException e ) { } return VAR_1 ; } ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   null ) ( METHOD_1_return_line1_col250 return VAR_1 ; ) 
( VAR_1 VAR_1   new TYPE_1 ( VAR_2.METHOD_2 ( ) VAR_3.getName ( ) TYPE_2.METHOD_3 ( ) .METHOD_4 ( VAR_3.METHOD_5 ( ) ) VAR_4.METHOD_6 ( ) ) ) 
( path path ) ( METHOD_1_return static boolean METHOD_1 ( int VAR_1 int VAR_2 ) { TYPE_1 VAR_3   VAR_4.METHOD_2 ( VAR_1 ) ; if ( VAR_3    null ) { return false ; } TYPE_2 path   TYPE_2.METHOD_2 ( VAR_2 ) ; if ( path    null ) { return false ; } if ( VAR_5.METHOD_3 ( ) ) { path.METHOD_4 ( ) ; return false ; } path.METHOD_5 ( VAR_5.METHOD_6 ( new TYPE_3 ( ) ) ) ; return true ; } ) ( VAR_1 int VAR_1 ) ( VAR_4 VAR_4 ) ( path path   TYPE_2.METHOD_2 ( VAR_2 ) ) ( VAR_3 VAR_3   VAR_4.METHOD_2 ( VAR_1 ) ) ( TYPE_2 TYPE_2 ) ( VAR_2 int VAR_2 ) 
( VAR_1 VAR_1   new int [ ] { VAR_2 VAR_3 VAR_4 VAR_5 VAR_6 VAR_7 VAR_8 VAR_9 VAR_10 } ) 
( pkg pkg   super.METHOD_1 ( ) ) ( METHOD_1_return public TYPE_1 METHOD_1 ( ) { TYPE_1 pkg   super.METHOD_1 ( ) ; if ( pkg    null ) { try { pkg   TYPE_2.METHOD_2 ( null METHOD_3 ( ) 0 null STRING_1 null TYPE_3.METHOD_4 ( ) TYPE_4.METHOD_5 ( ) METHOD_6 ( ) .METHOD_7 ( ) ) ; METHOD_8 ( pkg ) ; } catch ( java.lang.Exception e ) { METHOD_9 ( STRING_2 e.toString ( ) ) ; } } return pkg ; } ) ( pkg pkg ) ( METHOD_1_return_line1_col369 return pkg ; ) 
( METHOD_1_return public static float METHOD_1 ( float a float b ) { if ( a !   a ) return a ; if ( ( ( a    FLOAT_1 ) & & ( b    FLOAT_1 ) ) & & ( ( TYPE_1.METHOD_2 ( a ) )    ( VAR_1 ) ) ) { return b ; } return a >   b ? a : b ; } ) ( a float a ) ( b float b ) 
( VAR_2 VAR_2 ) ( VAR_1 TYPE_2 [ ] VAR_1 ) ( METHOD_1_return public static TYPE_1 [ ] METHOD_1 ( TYPE_2 [ ] VAR_1 ) throws TYPE_3 { java.util.ArrayList < TYPE_1 > VAR_2   new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 p : VAR_1 ) { if ( ( p.METHOD_2 ( ) ) & & ( p.METHOD_3 ( VAR_3 ) ) ) { VAR_2.METHOD_4 ( TYPE_4.METHOD_5 ( p ) ) ; } } return VAR_2.METHOD_6 ( new TYPE_1 [ VAR_2.size ( ) ] ) ; } ) ( VAR_2 VAR_2   new java.util.ArrayList < TYPE_1 > ( ) ) 
( TYPE_1 TYPE_1 ) ( VAR_2 double ... VAR_2 ) ( VAR_1 java.lang.String VAR_1 ) 
( METHOD_1_return public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { synchronized ( VAR_1 ) { final int VAR_2   VAR_1.size ( ) ; java.util.ArrayList < TYPE_1 > VAR_3   new java.util.ArrayList < TYPE_1 > ( VAR_2 ) ; for ( int i   0 ; i < VAR_2 ; i++ ) { VAR_3.METHOD_2 ( VAR_1.METHOD_3 ( i ) ) ; } return VAR_3 ; } } ) 
( VAR_7 VAR_7 ) ( VAR_1 boolean VAR_1 ) ( VAR_7 VAR_7 ) ( VAR_1 VAR_1 ) ( m m   VAR_7.METHOD_5 ( VAR_8 ) ) ( METHOD_1_return public synchronized boolean METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( VAR_2 STRING_1 ) ; if ( VAR_3.METHOD_3 ( VAR_4 VAR_5 ) ) { METHOD_4 ( STRING_2 ) ; return false ; } METHOD_4 ( ( STRING_3 + VAR_1 ) ) ; VAR_6   VAR_1 ; android.os.Message m   VAR_7.METHOD_5 ( VAR_8 ) ; VAR_7.METHOD_6 ( m ) ; return true ; } ) 
( TYPE_1 TYPE_1 ) ( VAR_5 VAR_5 ) ( VAR_4 VAR_4   TYPE_1.METHOD_3 ( VAR_1 ) ) ( VAR_2 boolean VAR_2 ) ( VAR_1 java.lang.Class < ? > VAR_1 ) ( METHOD_1_return_line1_col383 return VAR_5 ; ) ( METHOD_1_return private int METHOD_1 ( java.lang.Class < ? > VAR_1 boolean VAR_2 ) throws java.io.IOException { output.METHOD_2 ( VAR_3 ) ; TYPE_1 VAR_4   TYPE_1.METHOD_3 ( VAR_1 ) ; if ( VAR_4.METHOD_4 ( ) ) { METHOD_5 ( VAR_1 VAR_4 VAR_2 ) ; } else { METHOD_6 ( VAR_4 VAR_2 ) ; } int VAR_5   METHOD_7 ( ) ; if ( ! VAR_2 ) { VAR_6.METHOD_8 ( VAR_1 VAR_5 ) ; } return VAR_5 ; } ) ( output output ) ( VAR_5 VAR_5   METHOD_7 ( ) ) 
( METHOD_1_return public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1    null ) { throw new java.lang.NullPointerException ( STRING_1 ) ; } METHOD_2 ( ) ; TYPE_2 item   VAR_2.get ( VAR_1 ) ; if ( item    null ) { throw new java.lang.IllegalArgumentException ( STRING_2 ) ; } return item.METHOD_3 ( ) ; } ) ( item item ) ( item item   VAR_2.get ( VAR_1 ) ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 VAR_2 ) 
( VAR_1 VAR_1   new TYPE_1 ( ( n - 1 ) ) ) ( METHOD_1_return public java.lang.Integer METHOD_1 ( ) { int n   number ; if ( n <   1 ) return n ; TYPE_1 VAR_1   new TYPE_1 ( ( n - 1 ) ) ; VAR_1.METHOD_2 ( ) ; return ( new TYPE_1 ( ( n - 2 ) ) .METHOD_1 ( ) ) + ( VAR_1.METHOD_3 ( ) ) ; } ) ( n n   number ) ( VAR_1 VAR_1 ) ( number number ) 
( VAR_1 TYPE_1 VAR_1 ) ( TYPE_2 TYPE_2 ) 
( VAR_1 VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( byte [ ] ) { TYPE_2 VAR_1 ; try { VAR_1   TYPE_2.METHOD_2 ( STRING_1 ) ; } catch ( TYPE_3 VAR_2 ) { throw new TYPE_4 ( STRING_2 ) ; } byte [ ] VAR_3   VAR_1.METHOD_3 ( ) ; VAR_3 [ 6 ] &   INT_1 ; VAR_3 [ 6 ] |  INT_2 ; VAR_3 [ 8 ] &   INT_3 ; VAR_3 [ 8 ] |  INT_4 ; return new TYPE_1 ( VAR_3 ) ; } ) ( VAR_3 VAR_3   VAR_1.METHOD_3 ( ) ) ( INT_1 INT_1 ) ( INT_3 INT_3 ) ( INT_2 INT_2 ) ( INT_4 INT_4 ) ( byte [ ] ) ( VAR_1 VAR_1 ) 
( METHOD_1_return private static int METHOD_1 ( int VAR_1 ) { switch ( VAR_1 ) { case VAR_2 : case VAR_3 : case VAR_4 : case VAR_5 : return VAR_6 ; case VAR_7 : case VAR_8 : case VAR_9 : case VAR_10 : return VAR_11 ; default : throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( TYPE_1.METHOD_2 ( ( VAR_1 & -1 ) ) ) ) ) ; } } ) ( VAR_1 int VAR_1 ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_3 byte [ ] VAR_3 ) ( METHOD_1_return public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device boolean VAR_1 int VAR_2 byte [ ] VAR_3 ) { if ( ! ( TYPE_1.METHOD_2 ( ) ) ) { android.util.Log.w ( TYPE_2.TAG STRING_1 ) ; return false ; } TYPE_2 service   METHOD_3 ( ) ; if ( service    null ) return false ; return service.METHOD_1 ( device VAR_1 VAR_2 VAR_3 ) ; } ) ( service service   METHOD_3 ( ) ) ( VAR_2 int VAR_2 ) ( service service ) ( device android.bluetooth.BluetoothDevice device ) ( VAR_1 boolean VAR_1 ) 
( VAR_1 TYPE_3 < ? super TYPE_1 TYPE_2 > VAR_1 ) ( set java.util.Set < TYPE_1 > set ) ( METHOD_1_return static < TYPE_1 TYPE_2 > java.util.Map < TYPE_1 TYPE_2 > METHOD_1 ( java.util.Set < TYPE_1 > set TYPE_3 < ? super TYPE_1 TYPE_2 > VAR_1 ) { if ( set instanceof TYPE_4 ) { return TYPE_5.METHOD_1 ( ( ( TYPE_4 < TYPE_1 > ) ( set ) ) VAR_1 ) ; } else { return new TYPE_6 < TYPE_1 TYPE_2 > ( set VAR_1 ) ; } } ) 
( METHOD_1_return protected java.lang.String METHOD_1 ( int VAR_1 TYPE_1 VAR_2 ) { final java.lang.String VAR_3 ; if ( VAR_1    16 ) { VAR_3   STRING_1 ; } else { VAR_3   STRING_2 ; } if ( VAR_2    ( VAR_4 ) ) { return VAR_3 ; } else { return ( VAR_3 + STRING_3 ) + ( VAR_2.toString ( ) .METHOD_2 ( VAR_5 ) ) ; } } ) ( VAR_2 TYPE_1 VAR_2 ) ( VAR_1 int VAR_1 ) ( VAR_3 VAR_3 ) 
( VAR_3 VAR_3   TYPE_6.METHOD_5 ( TYPE_3.METHOD_6 ( type ) ) ) ( TYPE_3 TYPE_3 ) ( TYPE_3 TYPE_3 ) ( METHOD_1_return public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2   TYPE_3.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ; TYPE_4 type   VAR_1.METHOD_4 ( ) ; TYPE_5 VAR_3   TYPE_6.METHOD_5 ( TYPE_3.METHOD_6 ( type ) ) ; TYPE_7 VAR_4   TYPE_3.METHOD_7 ( VAR_1 ) ; TYPE_8 VAR_5   new TYPE_9 ( VAR_3 VAR_4 VAR_6 METHOD_8 ( ) VAR_2 ) ; METHOD_9 ( VAR_5 ) ; METHOD_10 ( VAR_7 VAR_4 ) ; return false ; } ) ( VAR_4 VAR_4   TYPE_3.METHOD_7 ( VAR_1 ) ) ( TYPE_6 TYPE_6 ) ( VAR_2 VAR_2   TYPE_3.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ) ( VAR_5 VAR_5   new TYPE_9 ( VAR_3 VAR_4 VAR_6 METHOD_8 ( ) VAR_2 ) ) ( type type   VAR_1.METHOD_4 ( ) ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( METHOD_1_return_line1_col374 return VAR_2 ; ) ( VAR_2 VAR_2   VAR_3.get ( ) ) ( VAR_1 com.android.jack.ir.ast.JMethod VAR_1 ) ( VAR_2 VAR_2 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( com.android.jack.ir.ast.JMethod VAR_1 ) throws TYPE_2 TYPE_3 java.io.IOException { TYPE_1 VAR_2   VAR_3.get ( ) ; if ( ( VAR_2    null ) || ( ( VAR_2.METHOD_2 ( ) ) !   ( VAR_4 ) ) ) { TYPE_4 VAR_5   VAR_6.METHOD_1 ( VAR_4 VAR_1.METHOD_3 ( ) .METHOD_4 ( ) .METHOD_5 ( ) ) ; VAR_2   VAR_5.METHOD_6 ( VAR_1 ) ; } return VAR_2 ; } ) ( VAR_3 VAR_3 ) 
( VAR_2 VAR_2   TYPE_2.METHOD_2 ( ) ) ( TYPE_2 TYPE_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_1 TYPE_2 VAR_1 ) ( java.lang.String ) ( is TYPE_1 is ) 
( METHOD_1_return public static synchronized int METHOD_1 ( TYPE_1 provider int VAR_1 ) { java.lang.String VAR_2   provider.getName ( ) ; TYPE_2.METHOD_2 ( ( STRING_1 + VAR_2 ) ) ; TYPE_3 VAR_3   TYPE_4.METHOD_3 ( ) ; TYPE_3 VAR_4   TYPE_3.METHOD_4 ( VAR_3 provider ( VAR_1 - 1 ) ) ; if ( VAR_3    VAR_4 ) { return -1 ; } TYPE_2.METHOD_5 ( ) ; TYPE_4.METHOD_6 ( VAR_4 ) ; return ( VAR_4.METHOD_7 ( VAR_2 ) ) + 1 ; } ) ( TYPE_3 TYPE_3 ) ( VAR_4 VAR_4   TYPE_3.METHOD_4 ( VAR_3 provider ( VAR_1 - 1 ) ) ) ( TYPE_4 TYPE_4 ) ( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2   provider.getName ( ) ) ( provider TYPE_1 provider ) ( VAR_3 VAR_3   TYPE_4.METHOD_3 ( ) ) ( provider provider ) ( TYPE_4 TYPE_4 ) ( VAR_1 int VAR_1 ) ( TYPE_2 TYPE_2 ) 
( VAR_2 VAR_2   ( VAR_3.METHOD_2 ( ) ) * count ) ( d float [ ] d ) ( mRS mRS ) ( VAR_1 int VAR_1 ) ( count int count ) 
( VAR_1 VAR_1   new TYPE_4 ( is ) ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( TYPE_2 is ) throws TYPE_3 { final TYPE_4 VAR_1   new TYPE_4 ( is ) ; try { final long VAR_2   TYPE_5.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ; if ( VAR_2    INT_1 ) { return null ; } return new TYPE_1 ( VAR_2 ) ; } catch ( java.lang.Exception e ) { throw new TYPE_3 ( e ) ; } finally { VAR_1.METHOD_4 ( ) ; } } ) ( is TYPE_2 is ) 
( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2   TYPE_1.METHOD_4 ( this.VAR_3 s ) ) ( TYPE_1 TYPE_1 ) ( VAR_1 java.lang.String VAR_1 ) ( s s   METHOD_2 ( VAR_1 10 ) ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) { try { android.os.Bundle VAR_1   METHOD_2 ( ) .METHOD_1 ( ) ; TYPE_1 VAR_2   TYPE_1.METHOD_3 ( VAR_1 ) ; if ( VAR_2.METHOD_4 ( ) ) return null ; return VAR_2 ; } catch ( android.os.RemoteException ex ) { return null ; } catch ( java.lang.NullPointerException ex ) { return null ; } } ) 
( VAR_3 int VAR_3 ) ( h int h ) ( d byte [ ] d ) ( VAR_6 int VAR_6 ) ( id int id ) ( VAR_1 int VAR_1 ) ( VAR_5 int VAR_5 ) ( VAR_4 int VAR_4 ) ( w int w ) ( VAR_2 int VAR_2 ) 
( VAR_2 VAR_2 ) ( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2   new java.util.ArrayList < > ( ) ) ( VAR_1 VAR_1   TYPE_2.METHOD_2 ( ) ) 
( device TYPE_1 device ) ( device device ) ( VAR_2 VAR_2   device.METHOD_3 ( ) ) 
( uri TYPE_1 uri ) ( VAR_2 VAR_2 ) ( VAR_4 VAR_4   VAR_2.get ( uri ) ) ( uid int uid ) ( VAR_2 VAR_2   VAR_3.get ( uid ) ) ( VAR_3 VAR_3 ) ( VAR_1 int VAR_1 ) ( METHOD_1_return private final boolean METHOD_1 ( TYPE_1 uri int uid int VAR_1 ) { if ( ( uid    0 ) || ( ! ( TYPE_2.METHOD_2 ( ) ) ) ) { return true ; } java.util.HashMap < TYPE_1 TYPE_3 > VAR_2   VAR_3.get ( uid ) ; if ( VAR_2    null ) return false ; TYPE_3 VAR_4   VAR_2.get ( uri ) ; if ( VAR_4    null ) return false ; return ( VAR_1 & ( VAR_5 ) )    VAR_1 ; } ) 
( VAR_1 VAR_1   new TYPE_1 ( new TYPE_2 ( STRING_1 ) null null TYPE_3.of ( ) TYPE_3.of ( ) TYPE_3.of ( ) ) ) ( TYPE_4 TYPE_4 ) ( TYPE_4 TYPE_4 ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_3 VAR_3 ) ( rr rr   VAR_3.METHOD_2 ( VAR_1 ) ) ( VAR_2 java.lang.String VAR_2 ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 c ) { return new TYPE_1 ( VAR_1.METHOD_2 ( ) c.state VAR_2 VAR_3 VAR_4 VAR_1.METHOD_3 ( ) VAR_5 VAR_6 VAR_7 VAR_8 VAR_9 false false 0 VAR_10 VAR_11 VAR_12 VAR_13 ) ; } ) ( c TYPE_2 c ) 
( VAR_1 TYPE_1 VAR_1 ) ( device TYPE_2 device ) 
( VAR_2 TYPE_1 VAR_2 ) ( VAR_3 VAR_3 ) ( VAR_1 final java.lang.String VAR_1 ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_3 VAR_3 ) ( VAR_1 TYPE_1 VAR_1 ) ( rr rr   VAR_3.METHOD_2 ( VAR_1 ) ) 
( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( VAR_1 int VAR_1 ) ( VAR_5 java.lang.String VAR_5 ) ( VAR_1 VAR_1 ) ( VAR_2 VAR_2 ) ( config config ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( int VAR_1 int uid java.lang.String VAR_2 boolean VAR_3 boolean VAR_4 java.lang.String VAR_5 java.lang.String VAR_6 ) { final TYPE_1 config   new TYPE_1 ( ) ; VAR_7   VAR_2 ; VAR_8   VAR_1 ; VAR_9   uid ; VAR_10   VAR_3 ; config.status   ( VAR_4 ) ? VAR_11 : VAR_12 ; if ( VAR_5 !   null ) { VAR_13   VAR_5 ; VAR_14   VAR_6 ; VAR_15.METHOD_2 ( VAR_16 ) ; } return config ; } ) ( config config   new TYPE_1 ( ) ) ( uid int uid ) ( VAR_6 java.lang.String VAR_6 ) ( VAR_3 boolean VAR_3 ) ( VAR_4 boolean VAR_4 ) ( METHOD_1_return_line1_col423 return config ; ) ( uid uid ) ( VAR_3 VAR_3 ) ( VAR_2 java.lang.String VAR_2 ) 
( VAR_2 TYPE_4 VAR_2 ) ( VAR_3 byte VAR_3 ) ( TYPE_6 TYPE_6 ) ( VAR_1 TYPE_3 VAR_1 ) ( p TYPE_2 p ) ( a byte a ) ( VAR_4 VAR_4 ) ( TYPE_6 TYPE_6 ) ( VAR_9 VAR_9   TYPE_6.METHOD_3 ( VAR_3 VAR_1 VAR_8 TYPE_5.METHOD_4 ( VAR_10 ) VAR_7 VAR_4 ) ) ( VAR_7 VAR_7   TYPE_6.METHOD_2 ( VAR_3 VAR_8 ) ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 p TYPE_3 VAR_1 TYPE_4 VAR_2 byte a byte VAR_3 ) { TYPE_3 [ ] VAR_4 ; if ( a    0 ) { VAR_4   VAR_5 ; } else { VAR_4   VAR_6 ; } TYPE_5 VAR_7   TYPE_6.METHOD_2 ( VAR_3 VAR_8 ) ; byte [ ] VAR_9   TYPE_6.METHOD_3 ( VAR_3 VAR_1 VAR_8 TYPE_5.METHOD_4 ( VAR_10 ) VAR_7 VAR_4 ) ; return TYPE_7.METHOD_5 ( p VAR_9 VAR_2 ) ; } ) ( TYPE_7 TYPE_7 ) 
( src int [ ] src ) ( VAR_1 int [ ] VAR_1 ) ( METHOD_1_return public int [ ] METHOD_1 ( int [ ] src int [ ] VAR_1 ) { return new int [ ] { src [ 0 ] VAR_1 [ 1 ] VAR_1 [ 2 ] TYPE_1.METHOD_2 ( INT_1 ( ( src [ 3 ] ) + ( VAR_1 [ 3 ] ) ) ) } ; } ) 
( METHOD_1_return static int METHOD_1 ( int [ ] a int VAR_1 ) { int x   0 ; for ( int i   TYPE_1.METHOD_2 ( VAR_1 ) ; i < ( a.length ) ; i++ ) { x +  a [ i ] ; } return x ; } ) ( METHOD_1_return_line1_col171 return x ; ) ( VAR_1 int VAR_1 ) ( x x   0 ) ( x x ) ( a int [ ] a ) 
( method com.android.jack.ir.ast.JMethod method ) ( VAR_2 VAR_2 ) 
( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { try { TYPE_4 VAR_2   TYPE_4.METHOD_1 ( VAR_1.METHOD_2 ( ) ) ; TYPE_5 VAR_3   TYPE_5.METHOD_1 ( TYPE_6.METHOD_3 ( VAR_2.METHOD_4 ( ) ) VAR_2 VAR_1.METHOD_5 ( ) ) ; return new TYPE_1 ( TYPE_6.METHOD_6 ( VAR_2.METHOD_4 ( ) VAR_3.METHOD_4 ( ) null ) ) ; } catch ( java.lang.Exception e ) { throw new TYPE_3 ( e ) ; } } ) 
( VAR_1 boolean VAR_1 ) ( METHOD_1_return public java.lang.String METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2   METHOD_2 ( ) ; if ( VAR_2    null ) { return VAR_3 ; } return new java.lang.StringBuilder ( ) .append ( ( ( METHOD_3 ( ) ) !   null ? METHOD_3 ( ) .print ( VAR_1 ) : STRING_1 ) ) .append ( STRING_2 ) .append ( VAR_2.METHOD_4 ( ) ) .append ( STRING_2 ) .append ( VAR_2.METHOD_5 ( ) ) .toString ( ) ; } ) ( VAR_2 VAR_2   METHOD_2 ( ) ) 
( VAR_2 VAR_2 ) ( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2   METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 ) & & ( VAR_2 !   ( VAR_4 ) ) ) { return VAR_5 ; } if ( ( VAR_6.METHOD_3 ( ) ) & & ( ( VAR_2.METHOD_4 ( VAR_7 ) ) < 0 ) ) { VAR_2   VAR_8 ; } if ( ( VAR_6.METHOD_5 ( ) ) & & ( VAR_2    ( VAR_9 ) ) ) { VAR_2   VAR_5 ; } return VAR_2 ; } ) ( METHOD_1_return_line1_col332 return VAR_2 ; ) ( VAR_2 VAR_2   METHOD_2 ( VAR_1 ) ) 
( m m   VAR_2.METHOD_2 ( VAR_1 ) ) ( VAR_2 VAR_2 ) ( VAR_1 java.lang.String VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 m   VAR_2.METHOD_2 ( VAR_1 ) ; if ( m.METHOD_3 ( ) ) { java.lang.String v   m.METHOD_4 ( 1 ) ; int VAR_3   -1 ; try { VAR_3   java.lang.Integer.parseInt ( v ) ; } catch ( TYPE_3 e ) { return null ; } TYPE_1 VAR_4   new TYPE_1 ( VAR_3 ) ; return VAR_4 ; } return null ; } ) 
( count int count ) ( VAR_2 VAR_2   ( VAR_3.METHOD_2 ( ) ) * count ) ( VAR_1 int VAR_1 ) ( d byte [ ] d ) ( mRS mRS ) 
( VAR_3 VAR_3   VAR_2 * ( VAR_4 ) ) ( HashMap java.util.HashMap ) ( VAR_2 VAR_2   java.util.HashMap.METHOD_2 ( VAR_1 ) ) ( VAR_1 int VAR_1 ) 
( VAR_1 java.lang.String VAR_1 ) ( VAR_6 TYPE_1 VAR_6 ) ( VAR_5 java.lang.String VAR_5 ) ( VAR_3 int VAR_3 ) ( VAR_7 TYPE_1 VAR_7 ) ( VAR_8 java.lang.String VAR_8 ) ( VAR_9 VAR_9   new TYPE_2 ( VAR_8 VAR_1 VAR_2 VAR_3 VAR_4 VAR_5 VAR_6 VAR_7 ) ) ( VAR_2 int VAR_2 ) ( VAR_4 java.lang.String VAR_4 ) 
( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( size size   VAR_1.METHOD_3 ( fd ) .VAR_3 ) ( VAR_1 VAR_1 ) ( path java.lang.String path ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.String path ) throws TYPE_2 { TYPE_3 fd   VAR_1.METHOD_2 ( path VAR_2 0 ) ; long size   VAR_1.METHOD_3 ( fd ) .VAR_3 ; long address   VAR_1.METHOD_4 ( INT_1 size VAR_4 VAR_5 fd 0 ) ; VAR_1.METHOD_5 ( fd ) ; return new TYPE_1 ( address size ) ; } ) ( fd fd   VAR_1.METHOD_2 ( path VAR_2 0 ) ) ( VAR_3 VAR_1.METHOD_3 ( fd ) .VAR_3 ) ( address address   VAR_1.METHOD_4 ( INT_1 size VAR_4 VAR_5 fd 0 ) ) 
( METHOD_1_return_line1_col406 return VAR_4 ; ) ( VAR_1 java.util.List < TYPE_1 > VAR_1 ) ( VAR_3 TYPE_3 VAR_3 ) ( VAR_4 VAR_4   new TYPE_4 < java.lang.String > ( ) ) ( VAR_4 VAR_4 ) ( METHOD_1_return private static java.util.Set < java.lang.String > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 TYPE_2 VAR_2 TYPE_3 VAR_3 ) { java.util.Set < java.lang.String > VAR_4   new TYPE_4 < java.lang.String > ( ) ; if ( VAR_2.METHOD_2 ( VAR_3 ) ) { VAR_4.METHOD_3 ( TYPE_5.METHOD_4 ( VAR_1 VAR_5 ) ) ; } else { VAR_4.METHOD_3 ( TYPE_5.METHOD_5 ( VAR_2.METHOD_6 ( VAR_3 ) ) ) ; } return VAR_4 ; } ) ( VAR_2 TYPE_2 VAR_2 ) 
( VAR_3 VAR_3   VAR_1.METHOD_2 ( ) ) ( VAR_1 VAR_1 ) ( VAR_5 VAR_5   TYPE_5.METHOD_6 ( VAR_2 ) ) ( VAR_4 VAR_4   VAR_1.METHOD_3 ( STRING_1 ) ) ( VAR_5 VAR_5 ) ( VAR_3 VAR_3 ) ( VAR_2 final TYPE_2 VAR_2 ) ( TYPE_5 TYPE_5 ) ( VAR_1 VAR_1 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_2 VAR_2   false ) ( METHOD_1_return public boolean METHOD_1 ( int VAR_1 ) { boolean VAR_2   false ; VAR_3   VAR_1 ; if ( ! ( VAR_4 ) ) { METHOD_2 ( ) ; if ( VAR_5 ) TYPE_1.d ( VAR_6 ( STRING_1 + VAR_1 ) ) ; VAR_7.METHOD_3 ( ) .METHOD_4 ( this ) ; if ( ( VAR_8 ) !   null ) { VAR_2   VAR_8.METHOD_5 ( this ) ; } VAR_9   null ; } METHOD_6 ( ) ; METHOD_7 ( ) ; return VAR_2 ; } ) ( VAR_2 VAR_2 ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col350 return VAR_2 ; ) ( VAR_1 int VAR_1 ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_3 TYPE_3 VAR_3 ) ( VAR_1 int VAR_1 ) ( key TYPE_1 key ) 
( VAR_1 TYPE_2 VAR_1 ) ( VAR_1 VAR_1 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 e ) { if ( ( ! ( e.METHOD_2 ( TYPE_3.METHOD_3 ( VAR_1 ) ) ) ) & & ( ! ( e.METHOD_2 ( TYPE_3.METHOD_4 ( VAR_1 ) ) ) ) ) { throw new TYPE_4 ( STRING_1 ) ; } int id   VAR_1.METHOD_5 ( 5 e.METHOD_6 ( VAR_1 ) ) ; TYPE_1 VAR_2   new TYPE_1 ( id VAR_1 ) ; VAR_2.METHOD_7 ( FLOAT_1 ) ; return VAR_2 ; } ) ( id id   VAR_1.METHOD_5 ( 5 e.METHOD_6 ( VAR_1 ) ) ) ( VAR_2 VAR_2   new TYPE_1 ( id VAR_1 ) ) ( VAR_2 VAR_2 ) ( METHOD_1_return_line1_col369 return VAR_2 ; ) ( e TYPE_3 e ) ( VAR_2 VAR_2 ) 
( VAR_1 VAR_1   new TYPE_2 ( ) .build ( ) ) ( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) 
( VAR_1 java.lang.String VAR_1 ) ( TYPE_1 TYPE_1 ) ( expected java.lang.String [ ] expected ) ( VAR_2 VAR_2   TYPE_1.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ) 
( VAR_1 VAR_1   METHOD_2 ( STRING_1 ) ) 
( sb sb ) ( sb sb ) ( VAR_1 VAR_1   true ) ( METHOD_1_return public final java.lang.String METHOD_1 ( ) { TYPE_1 sb   new TYPE_1 ( 100 ) ; boolean VAR_1   true ; sb.append ( STRING_1 ) ; for ( TYPE_2 i : VAR_2 ) { if ( VAR_1 ) { VAR_1   false ; } else { sb.append ( STRING_2 ) ; } sb.append ( i.METHOD_1 ( ) ) ; } sb.append ( STRING_3 ) ; return sb.toString ( ) ; } ) ( sb sb ) ( sb sb   new TYPE_1 ( 100 ) ) 
( VAR_1 java.lang.String VAR_1 ) ( METHOD_1_return protected com.android.jack.ir.ast.JDefinedClassOrInterface METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { assert ! ( VAR_2.METHOD_2 ( VAR_1 ) ) ; for ( TYPE_2 VAR_3 : VAR_4 ) { try { return VAR_3.METHOD_1 ( this VAR_1 ) ; } catch ( TYPE_3 e ) { } } throw new TYPE_4 ( this VAR_1 ) ; } ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { throw new TYPE_2 ( STRING_1 ) ; } return new TYPE_3 ( VAR_2 this.METHOD_2 ( ) this.METHOD_3 ( ) this.METHOD_4 ( ) this.METHOD_5 ( ) offset true ) ; } ) 
( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_5 VAR_5   VAR_2.METHOD_6 ( ) ) ( VAR_3 VAR_3   VAR_2.METHOD_6 ( ) ) ( VAR_2 VAR_2 ) 
( Log android.util.Log ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_2 java.lang.String VAR_2 ) ( msg msg   ( ( ( ( ( ( STRING_1 + VAR_2 ) + STRING_2 ) + ( TYPE_1.METHOD_3 ( ) ) ) + STRING_3 ) + ( TYPE_1.METHOD_4 ( ) ) ) + STRING_4 ) + VAR_1 ) 
( METHOD_1_return private int METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : return VAR_3 ; case VAR_4 : case VAR_5 : case VAR_6 : case VAR_7 : return VAR_8 ; case VAR_9 : case VAR_10 : case VAR_11 : case VAR_12 : return VAR_13 ; case VAR_14 : return VAR_15 ; case VAR_16 : return VAR_17 ; case VAR_18 : return VAR_19 ; case VAR_20 : return VAR_21 ; default : return VAR_22 ; } } ) 
( VAR_3 VAR_3 ) ( VAR_3 VAR_3 ) ( VAR_2 VAR_2   new TYPE_2 ( STRING_2 ) ) ( VAR_1 VAR_1   new TYPE_2 ( STRING_1 ) ) 
( VAR_1 VAR_1   new TYPE_1 ( true ) ) 
( VAR_1 VAR_1   new TYPE_1 ( VAR_2 false ) ) ( VAR_3 VAR_3   new TYPE_1 ( VAR_2 false ) ) 
( VAR_4 VAR_4 ) 
( VAR_1 VAR_1   INT_1 ) ( Mockito org.mockito.Mockito ) ( args args ) ( INT_1 INT_1 ) ( args args ) ( TYPE_4 TYPE_4 ) ( args args   new android.os.Bundle ( ) ) ( TYPE_2 TYPE_2 ) 
( METHOD_1_return_line1_col357 return VAR_1 ; ) ( VAR_1 VAR_1 ) ( METHOD_1_return public java.lang.String METHOD_1 ( ) { if ( ( VAR_1 )    null ) { if ( ! ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) ) { throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( VAR_2 ) ) ) ; } if ( ( VAR_2.METHOD_4 ( 0 ) )    CHAR_1 ) { VAR_1   VAR_2 ; } else { VAR_1   VAR_2.METHOD_5 ( 1 ( ( VAR_2.length ( ) ) - 1 ) ) ; } } return VAR_1 ; } ) 
( VAR_1 int VAR_1 ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_1 VAR_1 ) ( VAR_6 VAR_6 ) 
( VAR_1 int VAR_1 ) 
( VAR_2 VAR_2   new TYPE_1 ( VAR_1 ) ) ( METHOD_1_return private boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1    null ) { return false ; } if ( ( VAR_1.METHOD_2 ( ) .length ( ) )    0 ) { return false ; } TYPE_1 VAR_2   new TYPE_1 ( VAR_1 ) ; return ( VAR_2.METHOD_3 ( ) )    ( VAR_3 ) ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( METHOD_1_return private static TYPE_1 METHOD_1 ( ) { for ( TYPE_2 VAR_1 : TYPE_3.METHOD_2 ( ) ) { TYPE_1 project   VAR_1.METHOD_3 ( ) ; TYPE_4 state   TYPE_5.METHOD_4 ( project ) ; if ( state.METHOD_5 ( ) ) { TYPE_6 VAR_2   TYPE_6.get ( project ) ; if ( VAR_2.METHOD_6 ( ) .equals ( STRING_1 ) ) { return project ; } } } return null ; } ) 
( VAR_1 VAR_1 ) ( METHOD_1_return public static int METHOD_1 ( int a int b int c int d int e int f ) { int [ ] values   new int [ ] { a b c d e f } ; VAR_1.println ( ( ( STRING_1 + ( TYPE_1.toString ( values ) ) ) + STRING_2 ) ) ; return a > b ? a : b ; } ) ( c int c ) ( f int f ) ( d int d ) ( values values   new int [ ] { a b c d e f } ) ( b int b ) ( a int a ) ( e int e ) 
( VAR_1 VAR_1   new TYPE_2 ( VAR_2 ) ) 
( context TYPE_1 context ) ( VAR_2 TYPE_2 VAR_2 ) ( VAR_1 java.lang.Object VAR_1 ) ( VAR_3 java.lang.String VAR_3 ) 
( count int count ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   ( VAR_2 ) + count ) 
( METHOD_1_return static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 context ) { if ( ! ( TYPE_4.get ( context ) .METHOD_2 ( VAR_1 false ) ) ) { return TYPE_1.METHOD_3 ( ) ; } java.lang.String VAR_2   TYPE_5.METHOD_4 ( context ) .METHOD_5 ( ) ; return TYPE_6.METHOD_6 ( VAR_2 ) ? TYPE_1.of ( TYPE_6.get ( VAR_2 ) ) : TYPE_1.METHOD_3 ( ) ; } ) ( context TYPE_3 context ) ( TYPE_5 TYPE_5 ) ( VAR_2 VAR_2   TYPE_5.METHOD_4 ( context ) .METHOD_5 ( ) ) 
( VAR_1 VAR_1 ) ( VAR_3 VAR_3 ) ( VAR_5 VAR_5   ( ( TYPE_1 ) ( VAR_6.METHOD_4 ( ) ) ) ) ( VAR_8 VAR_8 ) 
( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( server server   new TYPE_1 ( 0 ) ) ( VAR_1 VAR_1   new TYPE_2 ( TYPE_3.METHOD_2 ( ) server.METHOD_3 ( ) null 0 ) ) 
( VAR_1 short VAR_1 ) ( error error   new byte [ 2 ] ) ( VAR_4 java.lang.Exception VAR_4 ) ( VAR_3 java.lang.String VAR_3 ) ( VAR_2 short VAR_2 ) ( VAR_5 VAR_5 ) 
( VAR_2 VAR_2   METHOD_3 ( ) ) ( METHOD_1_return public java.lang.String METHOD_1 ( ) { int VAR_1   METHOD_2 ( ) ; TYPE_1 VAR_2   METHOD_3 ( ) ; return ( ( ( ( ( VAR_1    0 ? STRING_1 : ( TYPE_2.toString ( VAR_1 ) ) + STRING_2 ) + ( VAR_2 instanceof java.lang.Class ? TYPE_3.METHOD_4 ( ( ( java.lang.Class ) ( VAR_2 ) ) ) : VAR_2.toString ( ) ) ) + STRING_2 ) + ( TYPE_3.METHOD_4 ( METHOD_5 ( ) ) ) ) + STRING_3 ) + ( getName ( ) ) ; } ) ( VAR_1 VAR_1   METHOD_2 ( ) ) 
( method com.android.jack.ir.ast.JMethod method ) ( VAR_2 VAR_2   new TYPE_1 ( method ) ) ( VAR_2 VAR_2 ) 
( element element ) ( element TYPE_1 element ) ( METHOD_1_return private static boolean METHOD_1 ( TYPE_1 element ) { java.lang.String VAR_1   element.METHOD_2 ( VAR_2 VAR_3 ) ; if ( ( VAR_1 !   null ) & & ( ! ( VAR_1.METHOD_3 ( ) ) ) ) { return TYPE_2.METHOD_4 ( VAR_1 ) ; } else { for ( TYPE_1 VAR_4 : TYPE_3.METHOD_5 ( element ) ) { if ( VAR_4.METHOD_6 ( ) .equals ( VAR_5 ) ) { return true ; } } } return false ; } ) ( VAR_1 VAR_1   element.METHOD_2 ( VAR_2 VAR_3 ) ) 
( VAR_1 VAR_1   METHOD_2 ( ) ) ( Mockito org.mockito.Mockito ) ( VAR_3 VAR_3 ) ( VAR_2 VAR_2   VAR_3.METHOD_3 ( ) ) 
( VAR_3 byte [ ] VAR_3 ) ( VAR_2 int VAR_2 ) ( VAR_1 int VAR_1 ) ( format java.lang.String format ) 
( TYPE_1 TYPE_1 ) ( VAR_7 VAR_7 ) 
( VAR_3 VAR_3   new TYPE_2 ( ) { public boolean run ( ) throws TYPE_3 TYPE_4 java.io.IOException { METHOD_2 ( ) .METHOD_5 ( VAR_1 ) ; return true ; } } ) ( VAR_1 final java.lang.String VAR_1 ) 
( n n ) ( METHOD_1_return_line1_col323 return n ; ) ( METHOD_1_return public synchronized long METHOD_1 ( long n ) throws java.io.IOException { if ( VAR_1 ) { return 0 ; } if ( ( in ) instanceof TYPE_1 ) { n   in.METHOD_1 ( n ) ; } else { long VAR_2   ( n > ( ( expected ) - ( count ) ) ) ? ( expected ) - ( count ) : n ; n   in.METHOD_1 ( VAR_2 ) ; } METHOD_2 ( n ) ; return n ; } ) ( n long n ) 
( line int line ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_1 java.lang.String VAR_1 ) 
( TYPE_1 TYPE_1 ) ( c c   TYPE_1.METHOD_2 ( ) ) ( TYPE_1 TYPE_1 ) ( s s   TYPE_1.METHOD_3 ( c ) ) ( TYPE_1 TYPE_1 ) ( TYPE_1 TYPE_1 ) 
( VAR_2 java.lang.String VAR_2 ) ( uid uid   TYPE_3.METHOD_5 ( ) ) ( VAR_1 TYPE_1 VAR_1 ) ( TYPE_3 TYPE_3 ) ( TYPE_3 TYPE_3 ) ( VAR_6 VAR_6   TYPE_3.METHOD_6 ( ) ) 
( VAR_2 VAR_2 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( VAR_1 TYPE_3 VAR_1 ) ( VAR_3 VAR_3   new java.util.ArrayList < TYPE_2 > ( ) ) ( VAR_3 VAR_3 ) ( METHOD_1_return public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { if ( ! ( METHOD_2 ( VAR_1 ) ) ) { return VAR_2 < TYPE_2 > of ( ) .METHOD_1 ( ) ; } java.util.List < TYPE_2 > VAR_3   new java.util.ArrayList < TYPE_2 > ( ) ; METHOD_3 ( METHOD_4 ( VAR_1 ) .METHOD_5 ( ) VAR_1 VAR_3 ) ; return VAR_3.METHOD_6 ( ) ; } ) 
( TYPE_1 TYPE_1 ) ( TYPE_2 TYPE_2 ) ( TYPE_3 TYPE_3 ) 
( VAR_1 java.util.Set < java.lang.String > VAR_1 ) ( VAR_2 java.util.Set < java.lang.String > VAR_2 ) ( packageName java.lang.String packageName ) ( VAR_3 VAR_3 ) ( VAR_3 VAR_3   packageName + CHAR_1 ) ( VAR_4 VAR_4   VAR_3.METHOD_2 ( CHAR_1 CHAR_2 ) ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) { return new TYPE_2 < TYPE_3 TYPE_3 TYPE_4 > ( new TYPE_5 < TYPE_3 TYPE_3 TYPE_4 > ( ) { public TYPE_6 get ( TYPE_7 < TYPE_6 TYPE_8 > entry ) { return entry.key ; } } VAR_1 ) ; } ) 
( expected TYPE_2 expected ) ( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 expected TYPE_1 VAR_1 ) { if ( ! ( expected.METHOD_2 ( VAR_1.METHOD_3 ( ) ) ) ) { TYPE_3 VAR_2   ( ( TYPE_3 ) ( expected ) ) ; return new TYPE_4 ( VAR_1.METHOD_4 ( ) VAR_1 VAR_2 ) ; } else { return VAR_1 ; } } ) 
( event TYPE_1 event ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 VAR_2 ) { switch ( VAR_1 ) { case VAR_3 : return new TYPE_4 ( this ) ; case VAR_4 : case VAR_5 : case VAR_6 : return new TYPE_5 ( this VAR_1 VAR_2 ) ; case VAR_7 : case VAR_8 : case VAR_9 : case VAR_10 : return new TYPE_6 ( this VAR_1 VAR_2 ) ; case VAR_11 : return new TYPE_7 ( this ) ; default : throw new java.lang.IllegalArgumentException ( ( STRING_1 + VAR_1 ) ) ; } } ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 TYPE_3 VAR_2 ) 
( VAR_1 java.lang.Class < TYPE_1 > VAR_1 ) ( METHOD_1_return public < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( java.lang.Class < TYPE_1 > VAR_1 ) { synchronized ( VAR_2 ) { if ( ( VAR_3 )    null ) { return null ; } } return ( ( TYPE_1 ) ( VAR_3.get ( VAR_1 ) ) ) ; } ) 
( VAR_3 java.lang.String VAR_3 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( java.lang.String VAR_1 java.lang.String VAR_2 java.lang.String VAR_3 java.lang.String VAR_4 int VAR_5 ) { java.lang.String key   VAR_2 + VAR_3 ; TYPE_2 VAR_6   VAR_7.get ( key ) ; if ( VAR_6    null ) { return new TYPE_1 ( VAR_2 VAR_3 VAR_4 VAR_5 ) ; } return new TYPE_1 ( VAR_8 VAR_3 TYPE_3.METHOD_2 ( VAR_1 VAR_8 ) ( VAR_5 - ( VAR_9 ) ) ) ; } ) ( key key   VAR_2 + VAR_3 ) ( VAR_6 VAR_6   VAR_7.get ( key ) ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_4 java.lang.String VAR_4 ) ( VAR_7 VAR_7 ) ( VAR_5 int VAR_5 ) ( VAR_2 java.lang.String VAR_2 ) 
( VAR_1 VAR_1 ) ( VAR_3 VAR_3   VAR_1.METHOD_2 ( ) ) ( TYPE_3 TYPE_3 ) ( VAR_4 VAR_4   TYPE_3.METHOD_3 ( VAR_3 ) ) ( VAR_1 VAR_1   new TYPE_1 ( 1 1 VAR_2 1 ) ) ( CHAR_1 CHAR_1 ) 
( VAR_1 com.android.jack.ir.ast.JMethod VAR_1 ) 
( in in   new TYPE_1 ( new TYPE_2 ( METHOD_2 ( VAR_1 ) ) ) ) ( VAR_2 VAR_2   new byte [ INT_2 ] ) ( in in ) ( VAR_1 VAR_1   INT_1 * INT_1 ) 
( location TYPE_1 location ) ( VAR_1 java.io.File VAR_1 ) 
( obj java.lang.Object obj ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.Object obj ) { if ( ( obj    null ) || ( obj instanceof TYPE_2 ) ) { return ( ( TYPE_1 ) ( obj ) ) ; } if ( obj instanceof TYPE_3 ) { return new TYPE_1 ( ( ( TYPE_3 ) ( obj ) ) ) ; } throw new java.lang.IllegalArgumentException ( ( STRING_1 + ( obj.METHOD_2 ( ) .getName ( ) ) ) ) ; } ) 
( VAR_2 boolean VAR_2 ) ( length VAR_1.length ) ( VAR_3 VAR_3   VAR_1.length ) ( VAR_1 TYPE_1 [ ] VAR_1 ) 
( VAR_2 VAR_2 ) ( VAR_1 java.util.Map < ? extends TYPE_2 ? extends TYPE_3 > VAR_1 ) ( METHOD_1_return public TYPE_1 < TYPE_2 TYPE_3 > METHOD_1 ( java.util.Map < ? extends TYPE_2 ? extends TYPE_3 > VAR_1 ) { VAR_2.METHOD_2 ( ( ( VAR_2.size ( ) ) + ( VAR_1.size ( ) ) ) ) ; for ( TYPE_4 < ? extends TYPE_2 ? extends TYPE_3 > entry : VAR_1.METHOD_3 ( ) ) { METHOD_4 ( entry.METHOD_5 ( ) entry.METHOD_6 ( ) ) ; } return this ; } ) 
( VAR_2 VAR_2   VAR_1.METHOD_3 ( ) ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1   TYPE_3.METHOD_2 ( ) ; TYPE_4 VAR_2   VAR_1.METHOD_3 ( ) ; if ( VAR_2    null ) { TYPE_4 [ ] VAR_3   VAR_1.METHOD_4 ( ) ; if ( ( VAR_3.length ) > 0 ) { VAR_2   VAR_3 [ 0 ] ; } } if ( VAR_2 !   null ) { TYPE_5 VAR_4   VAR_2.METHOD_5 ( ) ; if ( VAR_4 !   null ) { return VAR_4.METHOD_1 ( ) ; } } return null ; } ) ( VAR_1 VAR_1 ) ( TYPE_3 TYPE_3 ) ( VAR_1 VAR_1   TYPE_3.METHOD_2 ( ) ) 
( value int value ) ( service service ) ( METHOD_1_return public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device int value ) { if ( ! ( TYPE_1.METHOD_2 ( ) ) ) { android.util.Log.w ( TYPE_2.TAG STRING_1 ) ; return false ; } TYPE_2 service   METHOD_3 ( ) ; if ( service    null ) return false ; return service.METHOD_1 ( device value ) ; } ) ( service service   METHOD_3 ( ) ) ( device android.bluetooth.BluetoothDevice device ) 
( VAR_1 boolean VAR_1 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( boolean VAR_1 ) { try { if ( VAR_1 ) { VAR_2.METHOD_2 ( VAR_3 ) ; } else { VAR_2.METHOD_2 ( VAR_4 ) ; } return this ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } ) 
( VAR_1 long VAR_1 ) ( VAR_6 VAR_6   VAR_1 - ( VAR_3 ) ) ( METHOD_1_return boolean METHOD_1 ( long VAR_1 ) { if ( VAR_2 ) { return false ; } if ( ( VAR_3 ) <   0 ) { return false ; } if ( ( ( VAR_4.size ( ) ) > 0 ) & & ( ( VAR_5 ) > VAR_1 ) ) { return false ; } long VAR_6   VAR_1 - ( VAR_3 ) ; return VAR_6 <   ( METHOD_2 ( VAR_1 ) ) ; } ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_3 TYPE_3 VAR_3 ) ( METHOD_1_return protected com.android.jack.ir.ast.JMethod METHOD_1 ( TYPE_1 VAR_1 TYPE_2 VAR_2 TYPE_3 VAR_3 ) { for ( com.android.jack.ir.ast.JMethod m : VAR_1.METHOD_2 ( ) ) { if ( ( m.METHOD_3 ( ) .equals ( VAR_2 ) ) & & ( m.METHOD_4 ( ) .equals ( VAR_3 ) ) ) { return m ; } } return null ; } ) ( VAR_2 TYPE_2 VAR_2 ) 
( TYPE_3 TYPE_3 ) ( VAR_4 VAR_4   METHOD_6 ( VAR_2 VAR_3 ) ) ( VAR_5 VAR_5   METHOD_6 ( VAR_2 VAR_3 ) ) 
( VAR_3 TYPE_2 VAR_3 ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_2 java.lang.String VAR_2 ) ( METHOD_1_return private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 java.lang.String VAR_2 java.lang.String java.lang.String VAR_3 boolean VAR_4 ) { return TYPE_2.METHOD_1 ( VAR_1 VAR_2 TYPE_3.on ( CHAR_1 ) .METHOD_2 ( ) .METHOD_3 ( VAR_3 ) VAR_4 ) ; } ) ( java.lang.String ) ( VAR_4 boolean VAR_4 ) ( TYPE_2 TYPE_2 ) ( VAR_3 java.lang.String VAR_3 ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_1 int VAR_1 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( int VAR_1 int index ) { if ( ! ( METHOD_2 ( ) ) ) { throw new TYPE_2 ( STRING_1 ) ; } int VAR_2   size ( ) ; for ( int i   0 ; i < VAR_2 ; i++ ) { TYPE_1 VAR_3   ( ( TYPE_1 ) ( METHOD_3 ( i ) ) ) ; if ( ( VAR_3 !   null ) & & ( VAR_3.METHOD_4 ( VAR_1 index ) ) ) { return VAR_3 ; } } return null ; } ) ( index int index ) ( VAR_2 VAR_2   size ( ) ) 
( VAR_1 VAR_1 ) ( VAR_3 VAR_3   new TYPE_2 ( ) ) ( TYPE_1 TYPE_1 ) ( VAR_1 VAR_1   5 ) ( VAR_3 VAR_3 ) 
( VAR_1 VAR_1 ) ( VAR_5 VAR_5   VAR_1.METHOD_4 ( VAR_3 ) ) ( VAR_1 TYPE_2 VAR_1 ) ( TYPE_6 TYPE_6 ) ( VAR_6 VAR_6   VAR_1.METHOD_5 ( VAR_3 ) ) ( METHOD_1_return private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 java.util.List < TYPE_3 > VAR_2 TYPE_4 VAR_3 ) { TYPE_5 VAR_4   VAR_3.METHOD_2 ( VAR_2 ) .METHOD_3 ( ) ; int VAR_5   VAR_1.METHOD_4 ( VAR_3 ) ; int VAR_6   VAR_1.METHOD_5 ( VAR_3 ) ; return TYPE_6.METHOD_6 ( VAR_4 VAR_5 VAR_6 ) ; } ) ( VAR_3 TYPE_4 VAR_3 ) ( VAR_1 VAR_1 ) ( VAR_2 java.util.List < TYPE_3 > VAR_2 ) ( VAR_4 VAR_4   VAR_3.METHOD_2 ( VAR_2 ) .METHOD_3 ( ) ) ( VAR_3 VAR_3 ) 
( VAR_1 int VAR_1 ) ( VAR_8 VAR_8 ) ( VAR_2 java.lang.String VAR_2 ) ( TYPE_1 TYPE_1 ) ( METHOD_1_return private int METHOD_1 ( int VAR_1 java.lang.String VAR_2 int VAR_3 ) throws java.lang.Exception { TYPE_1.when ( VAR_4.METHOD_2 ( org.mockito.Matchers.METHOD_3 ( ) org.mockito.Matchers.METHOD_3 ( ) org.mockito.Matchers.METHOD_4 ( ) org.mockito.Matchers.METHOD_4 ( ) org.mockito.Matchers.METHOD_3 ( ) ) ) .thenReturn ( VAR_3 ) ; TYPE_2 VAR_5   VAR_6.METHOD_5 ( VAR_1 TYPE_3.METHOD_6 ( VAR_2 ) .METHOD_7 ( ) VAR_7 new TYPE_4 ( ) ) ; return VAR_8 ; } ) ( METHOD_1_return_line1_col487 return VAR_8 ; ) ( VAR_3 int VAR_3 ) ( VAR_5 VAR_5   VAR_6.METHOD_5 ( VAR_1 TYPE_3.METHOD_6 ( VAR_2 ) .METHOD_7 ( ) VAR_7 new TYPE_4 ( ) ) ) ( VAR_6 VAR_6 ) 
( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return public boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 service   METHOD_2 ( ) ; if ( service !   null ) { try { return service.METHOD_1 ( VAR_1 ) ; } catch ( android.os.RemoteException e ) { android.util.Log.e ( VAR_2.TAG STRING_1 e ) ; } } return false ; } ) ( service service   METHOD_2 ( ) ) 
( VAR_1 java.lang.String VAR_1 ) ( uri java.lang.String uri ) ( VAR_4 int VAR_4 ) ( VAR_3 int VAR_3 ) ( VAR_2 java.lang.String VAR_2 ) 
( VAR_2 VAR_2 ) ( VAR_2 VAR_2 ) ( callback TYPE_2 callback ) ( callback callback ) ( msg msg   VAR_2.METHOD_2 ( VAR_3 ) ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 callback ) { if ( callback    null ) { android.util.Log.w ( VAR_1.TAG STRING_1 ) ; return null ; } android.os.Message msg   VAR_2.METHOD_2 ( VAR_3 ) ; msg.obj   callback ; VAR_2.METHOD_3 ( msg ) ; synchronized ( VAR_4 ) { return VAR_5 ; } } ) 
( METHOD_1_return protected boolean METHOD_1 ( ) { VAR_1   null ; if ( VAR_2 ) { METHOD_2 ( ) ; VAR_2   false ; } if ( ( VAR_3 ) !   null ) { VAR_3.METHOD_3 ( ) ; } if ( ( VAR_4 ) !   null ) { VAR_4.METHOD_3 ( ) ; } if ( ( VAR_5 ) !   null ) { VAR_5.METHOD_3 ( ) ; } return true ; } ) 
( VAR_3 TYPE_2 VAR_3 ) ( VAR_2 boolean VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_1 VAR_1   METHOD_2 ( VAR_2 ) ) 
( VAR_1 VAR_1 ) ( Mockito org.mockito.Mockito ) ( VAR_2 VAR_2   7 ) 
( args args ) ( args args ) ( TYPE_2 TYPE_2 ) ( args args ) ( Mockito org.mockito.Mockito ) ( args args   new android.os.Bundle ( ) ) ( INT_1 INT_1 ) ( TYPE_4 TYPE_4 ) ( VAR_1 VAR_1   INT_1 ) 
( method com.android.jack.ir.ast.JMethod method ) ( VAR_2 VAR_2 ) ( VAR_3 VAR_3   new TYPE_2 ( VAR_2 method ) ) ( VAR_3 VAR_3 ) ( VAR_2 VAR_2   new TYPE_1 ( method ) ) 
( out out ) ( VAR_2 VAR_2 ) ( TYPE_1 TYPE_1 ) ( out out ) ( out out   METHOD_3 ( VAR_1 ) ) ( VAR_3 VAR_3   new TYPE_4 ( VAR_1 ) ) ( VAR_1 VAR_1   TYPE_1.METHOD_2 ( ) ) ( VAR_2 VAR_2   new TYPE_3 ( STRING_1 ) ) 
( TYPE_2 TYPE_2 ) ( VAR_2 VAR_2 ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   VAR_2.METHOD_2 ( ) ) ( Assert org.junit.Assert ) ( VAR_5 VAR_5   METHOD_4 ( VAR_2 ) ) 
( request TYPE_1 request ) ( VAR_1 boolean VAR_1 ) ( VAR_2 VAR_2   ( VAR_1 ) ? +1 : -1 ) 
( METHOD_1_return_line1_col390 return VAR_2 ; ) ( METHOD_1_return public TYPE_1 METHOD_1 ( int VAR_1 ) throws TYPE_2 { if ( ( ( VAR_2 )    null ) || ( ! ( VAR_3.METHOD_2 ( ) ) ) ) { METHOD_3 ( ) ; try { TYPE_3 VAR_4   VAR_3.METHOD_4 ( VAR_1 ) ; if ( VAR_4    null ) { throw new TYPE_2 ( STRING_1 VAR_5 ) ; } VAR_2   new TYPE_4 ( VAR_4 ) ; } catch ( android.os.RemoteException e ) { throw new TYPE_2 ( STRING_1 e VAR_6 ) ; } } return VAR_2 ; } ) ( VAR_2 VAR_2 ) ( VAR_1 int VAR_1 ) 
( TYPE_1 TYPE_1 ) ( source source   ( ( ( ( ( ( ( STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) + VAR_1 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) + STRING_9 ) + STRING_10 ) + STRING_11 ) ( expected java.lang.Object expected ) ( VAR_1 java.lang.String VAR_1 ) 
( out java.lang.System.out ) ( out java.lang.System.out ) ( VAR_1 VAR_1 ) ( out java.lang.System.out ) 
( METHOD_1_return public boolean METHOD_1 ( ) throws TYPE_1 { if ( ( TYPE_2.METHOD_2 ( ) ) <   INT_1 ) { return device.METHOD_3 ( new TYPE_3 ( ) .METHOD_4 ( ( STRING_1 + VAR_1 ) ) ) .METHOD_5 ( ) ; } else { return device.METHOD_3 ( new TYPE_3 ( ) .text ( ( STRING_1 + VAR_1 ) ) ) .METHOD_5 ( ) ; } } ) 
( VAR_1 java.util.List < java.lang.Throwable > VAR_1 ) ( java.lang.String ) ( METHOD_1_return public java.lang.Class METHOD_1 ( java.lang.String java.util.List < java.lang.Throwable > VAR_1 ) { for ( TYPE_1 element : VAR_2 ) { TYPE_2 VAR_3   VAR_4 ; if ( VAR_3 !   null ) { java.lang.Class VAR_5   VAR_3.METHOD_2 ( VAR_6 VAR_1 ) ; if ( VAR_5 !   null ) { return VAR_5 ; } } } if ( ( VAR_7 ) !   null ) { VAR_1.METHOD_3 ( TYPE_3.METHOD_4 ( VAR_7 ) ) ; } return null ; } ) 
( VAR_3 VAR_3 ) ( METHOD_1_return_line1_col352 return VAR_3 ; ) ( VAR_2 boolean VAR_2 ) ( VAR_1 char VAR_1 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( char VAR_1 boolean VAR_2 ) { TYPE_1 VAR_3   VAR_4 ; if ( VAR_2 ) { if ( VAR_5.METHOD_2 ( VAR_1 ) ) { VAR_3   VAR_5 ; } else if ( VAR_6.METHOD_2 ( VAR_1 ) ) { VAR_3   VAR_6 ; } } else { if ( VAR_7.METHOD_2 ( VAR_1 ) ) { VAR_3   VAR_7 ; } else if ( VAR_8.METHOD_2 ( VAR_1 ) ) { VAR_3   VAR_8 ; } } return VAR_3 ; } ) ( VAR_4 VAR_4 ) ( VAR_3 VAR_3   VAR_4 ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 boolean VAR_2 ) ( VAR_5 VAR_5   ( ( float [ ] ) ( VAR_1.METHOD_2 ( VAR_6 ) ) ) ) ( VAR_3 float [ ] VAR_3 ) 
( VAR_3 TYPE_3 VAR_3 ) ( VAR_5 VAR_5   METHOD_3 ( VAR_1 ) ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_4 VAR_4   VAR_1.METHOD_2 ( ) ) ( VAR_1 VAR_1 ) ( VAR_6 VAR_6   new TYPE_5 ( VAR_2 new TYPE_6 ( VAR_4.METHOD_4 ( ) .METHOD_5 ( ) VAR_1.METHOD_6 ( ) ) VAR_1.METHOD_7 ( ) null VAR_3 ) ) ( VAR_5 VAR_5 ) ( VAR_2 TYPE_2 VAR_2 ) 
( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 VAR_2 ) ( service service ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 service   METHOD_2 ( ) ; if ( service    null ) return null ; TYPE_1 VAR_2   service.METHOD_1 ( VAR_1 ) ; if ( VAR_2    null ) { METHOD_3 ( STRING_1 ) ; return null ; } return VAR_2 ; } ) ( VAR_2 VAR_2   service.METHOD_1 ( VAR_1 ) ) ( METHOD_1_return_line1_col241 return VAR_2 ; ) ( service service   METHOD_2 ( ) ) 
( VAR_3 VAR_3 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_1 VAR_1 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 VAR_2   VAR_1.METHOD_2 ( ) ) 
( METHOD_1_return public java.lang.String METHOD_1 ( int VAR_1 ) { if ( VAR_1 < 0 ) { throw new TYPE_1 ( this VAR_1 ) ; } int VAR_2   ( count ) - VAR_1 ; if ( VAR_2 < 0 ) { throw new TYPE_1 ( this VAR_1 ) ; } return VAR_1    0 ? this : METHOD_2 ( VAR_1 VAR_2 ) ; } ) ( VAR_2 VAR_2   ( count ) - VAR_1 ) ( VAR_1 int VAR_1 ) 
( TYPE_1 TYPE_1 ) ( packageName java.lang.String packageName ) ( VAR_1 VAR_1   TYPE_1.METHOD_2 ( STRING_1 STRING_2 STRING_3 STRING_4 packageName ) ) ( args java.util.Map < java.lang.String java.lang.Object > args ) ( result result   METHOD_3 ( VAR_1.METHOD_4 ( VAR_2 ) ) ) ( TYPE_2 TYPE_2 ) ( METHOD_1_return protected java.util.Map < java.lang.String java.lang.Object > METHOD_1 ( java.lang.String packageName java.util.Map < java.lang.String java.lang.Object > args ) { java.util.List < java.lang.String > VAR_1   TYPE_1.METHOD_2 ( STRING_1 STRING_2 STRING_3 STRING_4 packageName ) ; java.lang.String result   METHOD_3 ( VAR_1.METHOD_4 ( VAR_2 ) ) ; return TYPE_2.METHOD_5 ( result ) ; } ) 
( VAR_4 VAR_4   new TYPE_4 ( TYPE_5.METHOD_5 ( msg.METHOD_6 ( ) VAR_5 VAR_6 ) VAR_2 ) ) ( TYPE_6 TYPE_6 ) ( Integer java.lang.Integer ) ( METHOD_1_return private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 msg ) { TYPE_3 VAR_1   TYPE_3.METHOD_2 ( msg.METHOD_3 ( 0 ) .METHOD_4 ( 0 ) ) ; java.lang.Integer VAR_2   java.lang.Integer.METHOD_2 ( ( ( VAR_1.value ) - ( VAR_3.value ) ) ) ; TYPE_1 VAR_4   new TYPE_4 ( TYPE_5.METHOD_5 ( msg.METHOD_6 ( ) VAR_5 VAR_6 ) VAR_2 ) ; return TYPE_6.METHOD_7 ( VAR_4 ) ; } ) ( VAR_1 VAR_1   TYPE_3.METHOD_2 ( msg.METHOD_3 ( 0 ) .METHOD_4 ( 0 ) ) ) ( TYPE_3 TYPE_3 ) ( msg TYPE_2 msg ) ( VAR_2 VAR_2   java.lang.Integer.METHOD_2 ( ( ( VAR_1.value ) - ( VAR_3.value ) ) ) ) 
( obj java.lang.Object obj ) ( VAR_1 VAR_1   ( ( TYPE_1 ) ( obj ) ) ) ( equals_return public boolean equals ( java.lang.Object obj ) { if ( ( obj    null ) || ( ! ( obj instanceof TYPE_1 ) ) ) { return false ; } TYPE_1 VAR_1   ( ( TYPE_1 ) ( obj ) ) ; if ( ( this )    VAR_1 ) { return true ; } return ( VAR_2.equals ( VAR_1.METHOD_1 ( ) ) ) & & ( VAR_3.equals ( VAR_1.METHOD_2 ( ) ) ) ; } ) 
( VAR_1 VAR_1 ) ( server server   new TYPE_1 ( 0 ) ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   new TYPE_2 ( TYPE_3.METHOD_2 ( ) server.METHOD_3 ( ) ) ) ( server server ) ( VAR_1 VAR_1 ) 
( METHOD_1_return public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( null    ( VAR_2 ) ) return true ; if ( null    ( VAR_3 ) ) return false ; for ( TYPE_2 VAR_4 : VAR_3 ) { if ( VAR_4.METHOD_2 ( VAR_5 ) ) return true ; if ( ! ( VAR_1.METHOD_3 ( VAR_4 ) ) ) { return false ; } } return true ; } ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_4 VAR_4   res.METHOD_2 ( ) .VAR_4 ) ( VAR_2 boolean VAR_2 ) ( VAR_4 res.METHOD_2 ( ) .VAR_4 ) ( VAR_3 VAR_3 ) ( res res   VAR_3 ) ( VAR_1 int VAR_1 ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 < TYPE_4 > > VAR_1 long key ) { synchronized ( VAR_2 ) { TYPE_3 < TYPE_4 > VAR_3   VAR_1.get ( key ) ; if ( VAR_3 !   null ) { TYPE_4 entry   VAR_3.get ( ) ; if ( entry !   null ) { return entry.METHOD_2 ( ) ; } else { VAR_1.METHOD_3 ( key ) ; } } } return null ; } ) ( VAR_1 TYPE_2 < TYPE_3 < TYPE_4 > > VAR_1 ) ( key long key ) 
( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) ( res TYPE_1 res ) ( VAR_2 VAR_2 ) ( VAR_3 VAR_3   VAR_2.METHOD_2 ( ) .METHOD_4 ( ) ) ( VAR_2 VAR_2 ) ( VAR_1 VAR_1   VAR_2.METHOD_2 ( ) .METHOD_3 ( ) ) 
( VAR_1 VAR_1   ( ( TYPE_2 ) ( server.METHOD_5 ( STRING_2 ) .METHOD_6 ( ) ) ) ) ( VAR_1 VAR_1 ) ( server server ) ( server server ) 
( VAR_3 VAR_3   METHOD_5 ( VAR_4 VAR_5 VAR_6 ) ) 
( s int s ) ( callback TYPE_3 callback ) ( TYPE_4 TYPE_4 ) ( session int session ) ( c int c ) ( VAR_1 TYPE_1 VAR_1 ) ( fd TYPE_2 fd ) 
( VAR_2 int VAR_2 ) ( VAR_4 VAR_4 ) ( response response   VAR_4.METHOD_6 ( ) ) ( Mockito org.mockito.Mockito ) ( VAR_4 VAR_4 ) ( VAR_1 java.lang.String VAR_1 ) 
( TYPE_1 TYPE_1 ) ( VAR_2 java.io.File [ ] VAR_2 ) ( VAR_1 java.io.File [ ] VAR_1 ) ( VAR_4 boolean VAR_4 ) ( VAR_3 java.io.File VAR_3 ) ( VAR_6 float VAR_6 ) ( VAR_5 boolean VAR_5 ) 
( VAR_3 VAR_3   new TYPE_1 ( mContext ) ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 device ) { try { java.lang.String VAR_1   device.METHOD_2 ( ) ; TYPE_3 VAR_2   VAR_3.METHOD_1 ( VAR_1 ) ; if ( VAR_2 !   null ) { TYPE_1 VAR_4   new TYPE_1 ( device ) ; boolean result   VAR_4.METHOD_3 ( VAR_1 VAR_2 ) ; VAR_2.METHOD_4 ( ) ; if ( result ) { return VAR_4 ; } } } catch ( java.lang.Exception e ) { android.util.Log.e ( VAR_5.TAG STRING_1 e ) ; } return null ; } ) ( device TYPE_2 device ) 
( VAR_2 VAR_2 ) ( VAR_2 VAR_2   new byte [ VAR_1.size ( ) ] ) ( METHOD_1_return_line1_col211 return VAR_2 ; ) ( i i   0 ) ( VAR_1 java.util.ArrayList < TYPE_1 > VAR_1 ) ( METHOD_1_return private static byte [ ] METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { byte [ ] VAR_2   new byte [ VAR_1.size ( ) ] ; int i   0 ; for ( TYPE_1 b : VAR_1 ) { VAR_2 [ ( i++ ) ]   b ; } return VAR_2 ; } ) 
( VAR_1 java.util.List < TYPE_1 > VAR_1 ) ( VAR_2 java.util.Set < java.lang.String > VAR_2 ) 
( VAR_1 VAR_1   ( METHOD_1 ( ) ) ? VAR_2.METHOD_2 ( false ) : METHOD_3 ( ) ) ( VAR_6 this.VAR_6 ) 
( METHOD_1_return public static boolean METHOD_1 ( TYPE_1 context ) { TYPE_2.METHOD_2 ( VAR_1 ) ; if ( TYPE_3.METHOD_3 ( context ) ) { return VAR_2.METHOD_4 ( VAR_3 ) ; } else { return TYPE_3.METHOD_5 ( context ) .METHOD_4 ( VAR_3 false ) ; } } ) ( TYPE_2 TYPE_2 ) ( context TYPE_1 context ) 
( ) ( METHOD_1_return static java.lang.String METHOD_1 ( TYPE_1 method TYPE_1 call ) { assert ( call instanceof TYPE_2 ) || ( call instanceof TYPE_3 ) ; TYPE_4 VAR_1   new TYPE_4 ( null method call 0 ) ; method.METHOD_2 ( VAR_1 ) ; java.lang.String   VAR_1.METHOD_3 ( ) ; return ; } ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col287 return ; ) ( call TYPE_1 call ) ( method TYPE_1 method ) ( method method ) (   VAR_1.METHOD_3 ( ) ) ( VAR_1 VAR_1   new TYPE_4 ( null method call 0 ) ) 
( VAR_2 boolean VAR_2 ) ( Mockito org.mockito.Mockito ) ( callback TYPE_3 callback ) ( call TYPE_2 call ) ( Mockito org.mockito.Mockito ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_4 java.lang.Class < ? > VAR_4 ) ( VAR_5 TYPE_3 < java.lang.String > VAR_5 ) ( VAR_6 TYPE_4 VAR_6 ) ( VAR_7 int VAR_7 ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_3 java.lang.String VAR_3 ) ( VAR_8 boolean VAR_8 ) ( VAR_2 java.lang.String VAR_2 ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 java.lang.String VAR_2 java.lang.String VAR_3 java.lang.Class < ? > VAR_4 TYPE_3 < java.lang.String > VAR_5 TYPE_4 VAR_6 int VAR_7 boolean VAR_8 ) { if ( new TYPE_5 ( VAR_4 ) .METHOD_2 ( true void.class STRING_1 java.lang.String [ ] .class ) ) { return new TYPE_6 ( VAR_1 VAR_4 ) ; } else { return null ; } } ) 
( VAR_7 VAR_7   TYPE_1.METHOD_4 ( this ( ( VAR_8 ) & VAR_6 ) ) ) ( METHOD_1_return public int METHOD_1 ( ) { if ( METHOD_2 ( ) ) { int VAR_1   METHOD_3 ( ) .METHOD_1 ( ) ; if ( ( VAR_1 & ( VAR_2 ) ) !   0 ) { VAR_1 &   ~ ( ( VAR_2 ) | ( VAR_3 ) ) ; } return ( ( VAR_4 ) | ( VAR_5 ) ) | VAR_1 ; } int VAR_6   INT_1 ; int VAR_7   TYPE_1.METHOD_4 ( this ( ( VAR_8 ) & VAR_6 ) ) ; return VAR_7 & VAR_6 ; } ) ( VAR_6 VAR_6   INT_1 ) ( TYPE_1 TYPE_1 ) ( INT_1 INT_1 ) 
( VAR_4 VAR_4   ! ( TYPE_4.METHOD_4 ( VAR_2.METHOD_2 ( ) .METHOD_5 ( ) ) ) ) ( VAR_2 TYPE_3 VAR_2 ) ( VAR_1 java.util.List < TYPE_2 > VAR_1 ) ( VAR_3 VAR_3   VAR_2.METHOD_2 ( ) .METHOD_3 ( ) ) ( context TYPE_1 context ) ( VAR_2 VAR_2 ) ( VAR_1 VAR_1 ) 
( VAR_1 final boolean VAR_1 ) ( VAR_2 final int VAR_2 ) ( VAR_5 VAR_5 ) ( VAR_3 final TYPE_1 VAR_3 ) 
( VAR_2 VAR_2 ) ( File java.io.File ) ( VAR_4 VAR_4   new TYPE_3 ( new TYPE_4 ( VAR_3 ) ) ) ( VAR_3 VAR_3 ) ( VAR_2 VAR_2   new TYPE_1 ( ) ) ( VAR_1 VAR_1   STRING_1 + ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) ) ( VAR_5 VAR_5   VAR_2.METHOD_5 ( new TYPE_6 ( VAR_3 ) ) ) ( VAR_3 VAR_3   java.io.File.METHOD_2 ( STRING_6 STRING_7 ) ) ( VAR_4 VAR_4 ) ( VAR_4 VAR_4 ) 
( device android.bluetooth.BluetoothDevice device ) ( VAR_1 TYPE_1 VAR_1 ) ( METHOD_1_return private synchronized boolean METHOD_1 ( android.bluetooth.BluetoothDevice device TYPE_1 VAR_1 ) { if ( VAR_2 ) android.util.Log.d ( TAG ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_3 ) ) ) ; if ( ( ( VAR_3 )    false ) & & ( ( VAR_4.METHOD_1 ( device VAR_1 ) )    true ) ) { VAR_3   true ; return true ; } return false ; } ) 
( VAR_2 java.lang.String VAR_2 ) ( VAR_3 java.lang.Throwable VAR_3 ) ( VAR_4 VAR_4   METHOD_2 ( VAR_1 VAR_2 ) ) ( VAR_1 java.lang.String VAR_1 ) ( TYPE_1 TYPE_1 ) 
( VAR_2 VAR_2 ) ( VAR_3 VAR_3   VAR_2.METHOD_2 ( ) ) ( TYPE_2 TYPE_2 ) ( VAR_2 TYPE_1 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( result result   TYPE_3.METHOD_5 ( VAR_1 INT_3 STRING_1 ) ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   TYPE_2.METHOD_2 ( ) ) ( TYPE_2 TYPE_2 ) ( TYPE_3 TYPE_3 ) ( VAR_1 VAR_1 ) 
( VAR_1 TYPE_1 VAR_1 ) 
( Assert org.junit.Assert ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1   VAR_2.METHOD_2 ( ) ) ( VAR_4 VAR_4   METHOD_4 ( VAR_2 ) ) ( VAR_2 VAR_2 ) ( TYPE_2 TYPE_2 ) 
( VAR_4 VAR_4   TYPE_5.of ( VAR_1 VAR_2 VAR_3 ) ) ( TYPE_5 TYPE_5 ) ( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 VAR_2 TYPE_4 VAR_3 ) { TYPE_5 < TYPE_6 > VAR_4   TYPE_5.of ( VAR_1 VAR_2 VAR_3 ) ; return new TYPE_1 ( ) { public TYPE_2 METHOD_2 ( ) { return VAR_1 ; } public TYPE_5 < TYPE_6 > METHOD_3 ( ) { return VAR_4 ; } public TYPE_5 < TYPE_6 > METHOD_4 ( ) { return VAR_4.METHOD_5 ( 1 VAR_4.size ( ) ) ; } } ; } ) ( VAR_2 TYPE_3 VAR_2 ) ( VAR_3 TYPE_4 VAR_3 ) 
( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 VAR_2   VAR_1.METHOD_2 ( VAR_3 ) ) ( VAR_1 VAR_1 ) ( VAR_4 VAR_4   new TYPE_3 ( VAR_2 ) ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String VAR_2   VAR_1.METHOD_2 ( VAR_3 ) ; TYPE_3 VAR_4   new TYPE_3 ( VAR_2 ) ; if ( VAR_4.METHOD_3 ( ) ) { TYPE_4 VAR_5   new TYPE_4 ( ) ; try { VAR_5.METHOD_4 ( VAR_4 ) ; VAR_5.METHOD_5 ( VAR_4 TYPE_5.METHOD_6 ( ) ) ; return VAR_5 ; } catch ( java.io.IOException e ) { } } return null ; } ) 
( VAR_3 VAR_3 ) ( VAR_1 final boolean VAR_1 ) 
( TYPE_1 TYPE_1 ) ( METHOD_1_return public boolean METHOD_1 ( android.bluetooth.BluetoothDevice device int VAR_1 ) { TYPE_1.METHOD_2 ( METHOD_3 ( ) TYPE_1.METHOD_4 ( device.METHOD_5 ( ) ) VAR_1 ) ; if ( VAR_2 ) { android.util.Log.v ( VAR_3.TAG ( ( ( STRING_1 + device ) + STRING_2 ) + VAR_1 ) ) ; } return true ; } ) ( VAR_1 int VAR_1 ) ( device android.bluetooth.BluetoothDevice device ) 
( context TYPE_1 context ) ( METHOD_1_return public static int METHOD_1 ( TYPE_1 context ) { TYPE_2.METHOD_2 ( VAR_1 ) ; if ( TYPE_3.METHOD_3 ( context ) ) { return VAR_2.METHOD_4 ( VAR_3 VAR_4 ) ; } else { return TYPE_3.METHOD_5 ( context ) .METHOD_4 ( VAR_3 VAR_4 ) ; } } ) ( TYPE_2 TYPE_2 ) 
( method TYPE_1 method ) (   VAR_2.METHOD_3 ( ) ) ( VAR_1 int VAR_1 ) ( VAR_2 VAR_2   new TYPE_4 ( method call VAR_1 ) ) ( METHOD_1_return_line1_col296 return ; ) ( METHOD_1_return static java.lang.String METHOD_1 ( TYPE_1 method TYPE_1 call int VAR_1 ) { assert ( call instanceof TYPE_2 ) || ( call instanceof TYPE_3 ) ; TYPE_4 VAR_2   new TYPE_4 ( method call VAR_1 ) ; method.METHOD_2 ( VAR_2 ) ; java.lang.String   VAR_2.METHOD_3 ( ) ; return ; } ) ( VAR_2 VAR_2 ) ( method method ) ( call TYPE_1 call ) ( ) 
( VAR_4 VAR_4   VAR_5.METHOD_2 ( VAR_1 ) ) ( VAR_6 VAR_6 ) ( VAR_5 VAR_5 ) ( VAR_3 int VAR_3 ) ( VAR_1 int VAR_1 ) ( VAR_2 float VAR_2 ) ( x float x ) ( y float y ) 
( METHOD_1_return_line1_col250 return config ; ) ( in in ) ( config config   new TYPE_1 ( ) ) ( in in ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 in ) { TYPE_1 config   new TYPE_1 ( ) ; VAR_1   in.METHOD_2 ( ) ; VAR_2   ( ( TYPE_3 ) ( in.METHOD_3 ( null ) ) ) ; VAR_3   in.METHOD_4 ( ) ; VAR_4   TYPE_4.METHOD_5 ( in.METHOD_2 ( ) ) ; return config ; } ) ( TYPE_4 TYPE_4 ) ( config config ) ( in TYPE_2 in ) 
( type TYPE_2 type ) ( VAR_3 VAR_3 ) ( METHOD_1_return_line1_col278 return VAR_2 ; ) ( java.lang.String ) ( METHOD_1_return private TYPE_1 METHOD_1 ( java.lang.String id java.lang.String TYPE_2 type java.lang.String VAR_1 ) { TYPE_1 VAR_2   VAR_3.get ( id ) ; if ( VAR_2    null ) { VAR_2   new TYPE_1 ( id type VAR_1 ) ; VAR_3.METHOD_2 ( id VAR_2 ) ; } return VAR_2 ; } ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_2 VAR_2 ) ( id java.lang.String id ) ( VAR_2 VAR_2   VAR_3.get ( id ) ) 

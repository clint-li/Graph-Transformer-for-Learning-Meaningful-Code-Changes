( repo TYPE_2 < TYPE_3 > repo ) ( METHOD_1_return protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.lang.Exception { return METHOD_2 ( repo null VAR_1 null null null ) ; } ) ( VAR_1 com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) 
( TYPE_1 TYPE_1 ) 
( query TYPE_1 query ) 
( TYPE_2 TYPE_2 ) ( event final TYPE_1 event ) 
( METHOD_1_return private TYPE_1.ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 true true ) ; } ) 
( VAR_1 VAR_1   VAR_2.METHOD_2 ( ) ) ( VAR_2 VAR_2 ) ( TYPE_2 TYPE_2 ) ( VAR_4 VAR_4 ) 
( user TYPE_2 user ) ( user_return public TYPE_1 user ( TYPE_2 user ) { return METHOD_1 ( ) .equals ( user ) ? this : METHOD_2 ( user ) .METHOD_3 ( cd db ) ; } ) 
( delete_return java.lang.String delete ( ) ; ) 
( req TYPE_1 < TYPE_2 > req ) 
( msg java.lang.String msg ) ( t TYPE_1 t ) 
( event final TYPE_1 event ) 
( VAR_1 final int VAR_1 ) ( VAR_2 VAR_2 ) ( VAR_4 VAR_4 ) ( VAR_3 VAR_3 ) 
( METHOD_1_return private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1.length ( ) ) < INT_1 ) { return VAR_1 ; } else { return ( VAR_1.METHOD_2 ( 0 INT_2 ) ) + STRING_1 ; } } ) ( VAR_1 java.lang.String VAR_1 ) 
( p p   new TYPE_1 ( id ) ) ( id id   INT_1 ) ( INT_1 INT_1 ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 TYPE_2 VAR_2 ) ( VAR_3 VAR_3 ) 
( VAR_1 int VAR_1 ) ( VAR_2 int VAR_2 ) ( VAR_4 TYPE_3 < TYPE_4.Result > VAR_4 ) ( VAR_3 TYPE_2 VAR_3 ) ( java.lang.String ) ( METHOD_1_return private TYPE_1 METHOD_1 ( java.lang.String int VAR_1 int VAR_2 TYPE_2 VAR_3 TYPE_3 < TYPE_4.Result > VAR_4 ) { return new TYPE_1 ( VAR_5 project VAR_1 VAR_2 VAR_3 VAR_4 ) ; } ) 
( VAR_1 java.lang.String VAR_1 ) 
( VAR_1 final java.lang.String VAR_1 ) 
( VAR_1 VAR_1 ) ( VAR_3 VAR_3 ) 
( VAR_2 VAR_2 ) ( VAR_3 VAR_3 ) 
( cfg cfg ) ( METHOD_1_return_line1_col271 return cfg ; ) ( VAR_1 org.eclipse.jgit.revwalk.RevCommit VAR_1 ) ( cfg cfg   new TYPE_1.ProjectConfig ( new TYPE_3.NameKey ( STRING_1 ) ) ) ( cfg cfg ) ( METHOD_1_return private TYPE_1.ProjectConfig METHOD_1 ( org.eclipse.jgit.revwalk.RevCommit VAR_1 ) throws java.io.IOException TYPE_2 { TYPE_1.ProjectConfig cfg   new TYPE_1.ProjectConfig ( new TYPE_3.NameKey ( STRING_1 ) ) ; cfg.METHOD_2 ( db VAR_1 ) ; return cfg ; } ) 
( VAR_2 VAR_2 ) 
( METHOD_1_return_line1_col149 return VAR_1 ; ) ( METHOD_1_return public static TYPE_1 < com.google.gerrit.reviewdb.client.Change com.google.gerrit.reviewdb.client.Change.Id > METHOD_1 ( ) { return VAR_1 ; } ) ( VAR_1 VAR_1 ) 
( VAR_1 VAR_1 ) ( msg msg ) ( msg java.lang.String msg ) ( p p   new TYPE_1 ( ) ) 
( METHOD_1_return public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return STRING_1 + VAR_1 ; } ) ( VAR_1 final java.lang.String VAR_1 ) 
( VAR_1 VAR_1   VAR_2 ) ( VAR_2 VAR_2 ) 
( VAR_1 TYPE_1 VAR_1 ) 
( VAR_2 VAR_2   VAR_1.METHOD_5 ( STRING_1 STRING_2 ) ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1   METHOD_4 ( ) ) 
( VAR_1 java.lang.String VAR_1 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( java.lang.String VAR_1 TYPE_2 ... args ) { return TYPE_3.METHOD_1 ( changeId VAR_1 args ) ; } ) ( TYPE_3 TYPE_3 ) ( args TYPE_2 ... args ) 
( VAR_1 final TYPE_1 VAR_1 ) 
( METHOD_1_return private static long METHOD_1 ( long n long VAR_1 ) { long VAR_2   ( n + ( VAR_1 / 2 ) ) / VAR_1 ; return VAR_2 ; } ) ( VAR_2 VAR_2   ( n + ( VAR_1 / 2 ) ) / VAR_1 ) ( VAR_1 long VAR_1 ) ( VAR_2 VAR_2 ) ( METHOD_1_return_line1_col120 return VAR_2 ; ) ( n long n ) 
( VAR_1 TYPE_2 VAR_1 ) ( p p   VAR_2.get ( id.get ( ) ) ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 TYPE_3 id ) throws TYPE_4 { TYPE_5 p   VAR_2.get ( id.get ( ) ) ; if ( p    null ) { throw new TYPE_4 ( id ) ; } return new TYPE_1 ( p ) ; } ) ( id TYPE_3 id ) ( VAR_2 VAR_2 ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return new TYPE_1 ( args change.getProject ( ) change ) ; } ) ( change com.google.gerrit.reviewdb.client.Change change ) 
( VAR_2 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( VAR_1 final com.google.gerrit.reviewdb.client.Account VAR_1 ) ( METHOD_1_return public boolean METHOD_1 ( final com.google.gerrit.reviewdb.client.Account VAR_1 ) { return METHOD_1 ( VAR_1.getId ( ) ) ; } ) 
( VAR_2 TYPE_2 VAR_2 ) ( VAR_2 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( view view ) ( view final TYPE_1 view ) ( VAR_2 VAR_2 ) 
( Truth com.google.common.truth.Truth ) 
( key TYPE_1 key ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 TYPE_3 VAR_2 ) 
( result TYPE_1 result ) 
( Assert org.junit.Assert ) ( r r   new TYPE_2 ( server user ) .put ( STRING_1 ) ) 
( METHOD_1_return private boolean METHOD_1 ( ) { return ( ( VAR_1 )    null ) || ( ( VAR_1.METHOD_2 ( ) ) <   ( VAR_2.METHOD_3 ( ) .METHOD_4 ( ) .METHOD_2 ( ) ) ) ; } ) 
( email java.lang.String email ) ( key TYPE_1.Key key ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_3 org.eclipse.jgit.lib.ObjectId VAR_3 ) ( VAR_1 com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ( create_return static TYPE_1 create ( TYPE_1.Key key com.google.gerrit.reviewdb.client.Account.Id VAR_1 java.lang.String email java.lang.String VAR_2 org.eclipse.jgit.lib.ObjectId VAR_3 ) { return new TYPE_2 ( key VAR_1 TYPE_3.METHOD_1 ( email ) TYPE_3.METHOD_1 ( VAR_2 ) VAR_3 ) ; } ) 
( path java.lang.String path ) ( id int id ) ( METHOD_1_return java.lang.String METHOD_1 ( int id java.lang.String path ) ; ) 
( Assert org.junit.Assert ) 
( input TYPE_1 input ) 
( METHOD_1_return private TYPE_1.ProjectConfig METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 true true ) ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_2 int VAR_2 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String TYPE_2 > VAR_1 int VAR_2 ) { return new TYPE_1 ( VAR_1 VAR_2 ) ; } ) ( VAR_1 java.util.Map < java.lang.String TYPE_2 > VAR_1 ) 
( TYPE_2 TYPE_2 ) ( type java.lang.String type ) ( id com.google.gerrit.reviewdb.client.PatchSet.Id id ) ( revision_return private static TYPE_1 revision ( com.google.gerrit.reviewdb.client.PatchSet.Id id java.lang.String type ) { return TYPE_2.revision ( id ) .view ( type ) ; } ) 
( req TYPE_1 req ) ( TYPE_4 TYPE_4 ) ( msg java.lang.String msg ) ( err TYPE_3 err ) ( VAR_1 int VAR_1 ) ( res TYPE_2.HttpServletResponse res ) 
( c c   METHOD_2 ( ) ) ( Assert org.junit.Assert ) ( m m   TYPE_2.METHOD_3 ( repo c ) ) ( TYPE_2 TYPE_2 ) 
( s short s ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( short s ) { switch ( s ) { case 0 : return VAR_1 ; case 1 : return VAR_2 ; } return null ; } ) 
( VAR_1 TYPE_1 < TYPE_2 > VAR_1 ) ( id int id ) ( commit java.lang.String commit ) ( TYPE_3 TYPE_3 ) 
( toString_return public java.lang.String toString ( ) { return ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ; } ) 
( METHOD_1_return public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( final TYPE_2 < TYPE_1 > ... VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } ) ( VAR_1 final TYPE_2 < TYPE_1 > ... VAR_1 ) 
( VAR_1 com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ( TYPE_1 TYPE_1 ) ( METHOD_1_return public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1.METHOD_2 ( VAR_2 VAR_1 ) .toString ( ) ; } ) 
( VAR_1 boolean VAR_1 ) ( METHOD_1_return boolean METHOD_1 ( boolean VAR_1 ) { if ( TYPE_1.equals ( VAR_2 ) ) { return VAR_3.METHOD_2 ( ) ; } return METHOD_3 ( VAR_4 VAR_1 ) ; } ) 
( METHOD_1_return public java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) .METHOD_3 ( ) .METHOD_4 ( VAR_1.length ( ) ) ; } ) 
( METHOD_1_return boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) & & ( METHOD_3 ( ) ) ; } ) 
( VAR_2 boolean VAR_2 ) ( VAR_1 TYPE_3 VAR_1 ) ( run_return public TYPE_1 run ( TYPE_2.ReviewDb db TYPE_3 VAR_1 boolean VAR_2 ) throws TYPE_4.OrmException { return METHOD_1 ( VAR_3 id db VAR_1 ) ; } ) ( db TYPE_2.ReviewDb db ) 
( METHOD_1_return protected TYPE_1 METHOD_1 ( TYPE_1 ctx ) { return ctx.METHOD_2 ( ctx.METHOD_3 ( ) ctx.METHOD_4 ( ) ) ; } ) ( ctx TYPE_1 ctx ) ( ctx ctx ) 
( VAR_1 VAR_1 ) ( METHOD_1_return public java.lang.String METHOD_1 ( ) { return VAR_1.METHOD_1 ( VAR_1.METHOD_2 ( TYPE_1.METHOD_3 ( config.METHOD_4 ( ) ) ) null ) ; } ) 
( VAR_1 final java.lang.String VAR_1 ) ( METHOD_1_return protected TYPE_1 < TYPE_2 > METHOD_1 ( final java.lang.String VAR_1 ) { return java.util.Collections.METHOD_2 ( ) ; } ) ( Collections java.util.Collections ) 
( METHOD_1_return protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo ) throws java.lang.Exception { return METHOD_1 ( repo null null null null null ) ; } ) ( repo TYPE_2 < TYPE_3 > repo ) 
( METHOD_1_return public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1.equals ( VAR_1 ) ) { return METHOD_2 ( ) ; } else { return ! ( METHOD_3 ( VAR_1 ) .isEmpty ( ) ) ; } } ) ( VAR_1 java.lang.String VAR_1 ) 
( values java.util.List < java.lang.String > values ) ( VAR_2 java.lang.String VAR_2 ) ( java.lang.String ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_1 long VAR_1 ) ( key TYPE_1 key ) ( VAR_2 java.lang.String VAR_2 ) ( VAR_3 java.util.List < java.lang.String > VAR_3 ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) throws java.io.IOException TYPE_2 { TYPE_3 path   METHOD_2 ( ) ; if ( path !   null ) { try ( org.eclipse.jgit.lib.Repository repo   new TYPE_4 ( path ) ) { METHOD_1 ( repo ) ; } } return this ; } ) ( path path   METHOD_2 ( ) ) 
( METHOD_1_return private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( type ( ) .METHOD_2 ( ) ) { return TYPE_1.METHOD_3 ( type ( ) .METHOD_4 ( VAR_1 ) ) ; } else { return VAR_1 ; } } ) ( VAR_1 java.lang.String VAR_1 ) 
( VAR_3 VAR_3 ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 TYPE_2 VAR_2 ) 
( METHOD_1_return_line1_col148 return VAR_1 ; ) ( METHOD_1_return private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 )    null ) { VAR_1   METHOD_2 ( TYPE_2.METHOD_3 ( ) TYPE_2.METHOD_4 ( ) ) ; } return VAR_1 ; } ) ( VAR_1 VAR_1 ) 
( TYPE_1 TYPE_1 ) 
( VAR_1 VAR_1 ) ( path java.lang.String path ) ( file_return public TYPE_1 file ( java.lang.String path ) { return VAR_1.create ( VAR_2.get ( ) .METHOD_1 ( revision TYPE_2.METHOD_2 ( path ) ) ) ; } ) 
( java.lang.String ) ( get_return protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > get ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 java.lang.String ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 VAR_2 ) ) ; } ) ( VAR_1 TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) 
( type final TYPE_5 < TYPE_6 < TYPE_1 TYPE_3 > > type ) ( METHOD_1_return protected < TYPE_1 extends TYPE_2 TYPE_3 extends TYPE_2 > TYPE_4 < TYPE_1 TYPE_3 > METHOD_1 ( final TYPE_5 < TYPE_6 < TYPE_1 TYPE_3 > > type ) { return METHOD_1 ( TYPE_7.get ( type ) ) ; } ) 
( VAR_3 VAR_3 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1   VAR_2.get ( ) ; return VAR_3.METHOD_2 ( VAR_1.METHOD_3 ( ) VAR_1.METHOD_4 ( ) ) ; } ) ( VAR_2 VAR_2 ) ( VAR_1 VAR_1   VAR_2.get ( ) ) 
( TYPE_2 TYPE_2 ) ( insert TYPE_1 insert ) 
( METHOD_1_return public int METHOD_1 ( ) { throw new TYPE_1 ( ) ; } ) 
( METHOD_1_return protected Project.NameKey METHOD_1 ( ) { return getChange ( ) .getProject ( ) ; } ) 
( METHOD_1_return protected static com.google.gerrit.server.query.change.ChangeData METHOD_1 ( TYPE_1 VAR_1 com.google.gerrit.reviewdb.client.Change.Id id ) { return VAR_2.create ( VAR_3.get ( ) id ) ; } ) ( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 VAR_2 ) ( id com.google.gerrit.reviewdb.client.Change.Id id ) 
( METHOD_1_return long METHOD_1 ( ) { return VAR_1 ; } ) ( VAR_1 VAR_1 ) ( METHOD_1_return_line1_col40 return VAR_1 ; ) 
( VAR_1 int VAR_1 ) ( METHOD_1_return private final native TYPE_1 METHOD_1 ( int VAR_1 ) ; ) 
( repo org.eclipse.jgit.lib.Repository repo ) ( commit org.eclipse.jgit.revwalk.RevCommit commit ) ( METHOD_1_return private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db org.eclipse.jgit.lib.Repository repo org.eclipse.jgit.revwalk.RevCommit commit ) { if ( METHOD_2 ( ) ) { return true ; } else if ( METHOD_3 ( db repo commit ) ) { return true ; } return false ; } ) ( db com.google.gerrit.reviewdb.server.ReviewDb db ) 
( view view ) ( e TYPE_1 < TYPE_2 > e ) ( VAR_1 VAR_1 ) 
( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1 ) ( cfg cfg   VAR_1.METHOD_2 ( project ) .METHOD_3 ( ) ) 
( c c ) ( c com.google.gerrit.reviewdb.client.Change c ) 
( result result ) ( result TYPE_1 result ) 
( cfg cfg ) ( METHOD_1_return public java.util.Set < java.lang.String > METHOD_1 ( ) { return cfg.METHOD_1 ( VAR_1 VAR_2 ) ; } ) 
( com.google.gerrit.reviewdb.client.Project.NameKey ) ( VAR_1 TYPE_1 < TYPE_2 > VAR_1 ) 
( Assert org.junit.Assert ) 
( METHOD_1_return public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 ) ; } ) 
( TYPE_3 TYPE_3 ) ( VAR_1 TYPE_2 VAR_1 ) ( METHOD_1_return public synchronized TYPE_1 METHOD_1 ( java.lang.String TYPE_2 VAR_1 ) { TYPE_3.METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; return METHOD_4 ( ) ; } ) ( java.lang.String ) 
( project java.lang.String project ) ( ref java.lang.String ref ) ( VAR_1 int VAR_1 ) ( event event   new TYPE_1 ( project ref VAR_1 ) ) 
( req TYPE_1 req ) ( METHOD_1_return java.lang.String METHOD_1 ( TYPE_1 req ) { if ( ( VAR_1 ) !   null ) { return TYPE_2.METHOD_2 ( req.METHOD_3 ( VAR_1 ) ) ; } else { return null ; } } ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( ) { return VAR_1.create ( TYPE_2.of ( VAR_2 ) ) ; } ) ( VAR_1 VAR_1 ) 
( VAR_1 VAR_1 ) ( key TYPE_2 key ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 key ) throws TYPE_3 { return VAR_1.get ( key ) ; } ) 
( getName_return public java.lang.String getName ( ) { return name.get ( ) ; } ) ( ) 
( getRefName_return protected java.lang.String getRefName ( ) { return TYPE_1.METHOD_1 ( getChangeId ( ) ) ; } ) ( TYPE_1 TYPE_1 ) 
( e TYPE_1 < TYPE_2 > e ) ( VAR_1 VAR_1 ) 
( VAR_1 java.lang.String VAR_1 ) 
( config final TYPE_1 config ) ( config config ) 
( TYPE_2 TYPE_2 ) ( event final TYPE_1 event ) 
( TYPE_1 TYPE_1 ) ( VAR_1 java.lang.Exception VAR_1 ) ( VAR_2 VAR_2 ) 
( result final java.util.List < TYPE_1.Branch > result ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( METHOD_1_return public boolean METHOD_1 ( ) { return METHOD_2 ( ) .METHOD_3 ( ) ; } ) 
( VAR_2 VAR_2 ) ( delete_return TYPE_1 delete ( java.lang.String VAR_1 ) throws java.io.IOException { return VAR_2.METHOD_1 ( new TYPE_2 ( ( ( VAR_3.METHOD_2 ( ) ) + VAR_1 ) ) new TYPE_3 ( ) ) ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( TYPE_3 TYPE_3 ) ( METHOD_1_return TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 ... data ) { java.util.List < TYPE_2 > VAR_1   TYPE_3.METHOD_2 ( data ) ; return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; } ) ( VAR_1 VAR_1   TYPE_3.METHOD_2 ( data ) ) ( data TYPE_2 ... data ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) { return VAR_1.METHOD_2 ( ) .METHOD_1 ( ) ; } ) ( VAR_1 VAR_1 ) 
( VAR_1 final java.lang.String VAR_1 ) ( VAR_2 VAR_2 ) ( METHOD_1_return public TYPE_1.AccountGroup METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_2.get ( new TYPE_2.NameKey ( VAR_1 ) ) ; } ) 
( update TYPE_1 update ) ( update update ) 
( METHOD_1_return protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { return new TYPE_1 ( VAR_2.METHOD_1 ( VAR_1 ) .METHOD_2 ( ) ) ; } ) ( VAR_1 TYPE_2 VAR_1 ) 
( TYPE_3 TYPE_3 ) ( r r   new TYPE_2 ( ) ) ( TYPE_3 TYPE_3 ) ( METHOD_1_return public java.lang.String METHOD_1 ( final TYPE_1.NameKey project ) { final TYPE_2 r   new TYPE_2 ( ) ; TYPE_3.p ( r project ) ; TYPE_3.a ( r STRING_1 ) ; return ( VAR_1 ) + r ; } ) ( project final TYPE_1.NameKey project ) 
( METHOD_1_return private static java.lang.String METHOD_1 ( TYPE_1 user ) { if ( user.METHOD_2 ( ) ) { return ( ( TYPE_2 ) ( user ) ) .getAccountId ( ) .toString ( ) ; } return user.toString ( ) ; } ) ( user user ) ( user TYPE_1 user ) 
( apply_return public TYPE_1 apply ( TYPE_2 input ) { return VAR_1.equals ( user.METHOD_1 ( ) ) ; } ) ( input TYPE_2 input ) ( VAR_1 VAR_1 ) 
( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 TYPE_3 VAR_2 ) ( METHOD_1_return protected abstract TYPE_1.Status METHOD_1 ( TYPE_2 VAR_1 TYPE_3 VAR_2 ) throws com.google.gwtorm.server.OrmException java.io.IOException ; ) 
( db final com.google.gerrit.reviewdb.server.ReviewDb db ) ( run_return public java.util.List < TYPE_1 > run ( final com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return METHOD_1 ( db query VAR_1 ) ; } ) 
( TYPE_1 TYPE_1 ) 
( TYPE_2 TYPE_2 ) ( result TYPE_1 result ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ( ( double ) ( this.VAR_1 ) ) ) ; } ) 
( info TYPE_1 info ) ( ps com.google.gerrit.reviewdb.client.PatchSet.Id ps ) ( url_return private static java.lang.String url ( com.google.gerrit.reviewdb.client.PatchSet.Id ps TYPE_1 info ) { return TYPE_2.METHOD_1 ( null ps info.path ( ) ) ; } ) ( TYPE_2 TYPE_2 ) 
( Assert org.junit.Assert ) ( VAR_1 VAR_1 ) ( in in   new TYPE_1 ( ) ) ( STRING_1 STRING_1 ) ( r r   VAR_1.put ( STRING_2 in ) ) 
( db com.google.gerrit.reviewdb.server.ReviewDb db ) ( event TYPE_1 event ) 
( id java.lang.String id ) ( change_return public static TYPE_1 change ( java.lang.String id ) { return new TYPE_1 ( STRING_1 ) .id ( id ) ; } ) 
( err java.lang.String err ) ( METHOD_1_return private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String err java.lang.Exception e ) { if ( VAR_1 ) { VAR_2.error ( err e ) ; return TYPE_2.METHOD_2 ( ) ; } else { return TYPE_2.METHOD_3 ( err ) ; } } ) ( e java.lang.Exception e ) 
( schema TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema ) ( create_return static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema ) { if ( ( TYPE_3.METHOD_1 ( schema ) )    ( VAR_1 ) ) { return new TYPE_4 ( ) ; } return TYPE_1.not ( new TYPE_3 ( VAR_2 ) ) ; } ) ( TYPE_1 TYPE_1 ) 
( ctx ctx ) ( ctx TYPE_1 ctx ) 
( METHOD_1_return protected com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) { return TYPE_1.METHOD_1 ( project VAR_1 ) ; } ) ( TYPE_1 TYPE_1 ) 
( METHOD_1_return public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 !   null ? TYPE_2.METHOD_1 ( VAR_1 ) : null ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( java.lang.String ) ( METHOD_1_return protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 java.lang.String ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 VAR_2 ) ) ; } ) ( VAR_1 TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) 
( get_return public TYPE_1 get ( TYPE_2 input TYPE_3 args ) throws com.google.gwtorm.server.OrmException { try { return VAR_1.get ( input args ) ; } catch ( java.io.IOException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } } ) ( args TYPE_3 args ) ( input TYPE_2 input ) 
( TYPE_2 TYPE_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( ps final TYPE_1.PatchSet ps ) ( ps ps ) 
( VAR_1 VAR_1 ) ( VAR_2 VAR_2 ) 
( VAR_2 VAR_2 ) ( METHOD_1_return private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) throws TYPE_3 TYPE_4 { return VAR_2.create ( VAR_1 db repo rw VAR_3 VAR_4 METHOD_2 ( VAR_5 ) VAR_6 VAR_7.METHOD_3 ( ) ) ; } ) ( VAR_1 final TYPE_2 VAR_1 ) 
( group TYPE_2 group ) ( line int line ) ( VAR_2 VAR_2   METHOD_2 ( VAR_1 ) ) ( VAR_1 TYPE_1 VAR_1 ) 
( METHOD_1_return private TYPE_1 METHOD_1 ( java.lang.String VAR_1 TYPE_2 ... args ) { return new TYPE_1 ( ( ( ( STRING_1 + ( change.getId ( ) ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 args ) ) ) ) ; } ) ( args TYPE_2 ... args ) ( VAR_1 java.lang.String VAR_1 ) 
( METHOD_1_return public final boolean METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; return METHOD_4 ( ) ; } ) 
( VAR_1 final TYPE_1.Account VAR_1 ) 
( create_return TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb VAR_1 org.eclipse.jgit.lib.Repository db ) ; ) ( VAR_1 com.google.gerrit.reviewdb.server.ReviewDb VAR_1 ) ( db org.eclipse.jgit.lib.Repository db ) 
( VAR_1 TYPE_1 VAR_1 ) ( VAR_2 VAR_2 ) 
( rw rw   new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) ( repo org.eclipse.jgit.lib.Repository repo ) ( VAR_1 TYPE_1 VAR_1 ) 
( in TYPE_1 in ) 
( VAR_1 VAR_1 ) ( toString_return_line1_col59 return VAR_1 ; ) ( toString_return public java.lang.String toString ( ) { return VAR_1 ; } ) 
( Collections java.util.Collections ) ( METHOD_1_return public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Collections.METHOD_2 ( TYPE_2.METHOD_3 ( VAR_1 ) ) ; } ) 
( change com.google.gerrit.reviewdb.client.Change change ) ( create_return public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change ) ; ) 
( projectName com.google.gerrit.reviewdb.client.Project.NameKey projectName ) ( METHOD_1_return public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) throws java.io.IOException ; ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { final com.google.gerrit.reviewdb.server.ReviewDb c   METHOD_2 ( ) ; try { return c.METHOD_3 ( ) .get ( new TYPE_1.Key ( ) ) ; } finally { c.close ( ) ; } } ) ( c c   METHOD_2 ( ) ) 
( VAR_1 VAR_1 ) ( msg java.lang.String msg ) 
( revision java.lang.String revision ) ( VAR_1 TYPE_1 < TYPE_2 > VAR_1 ) ( changeId int changeId ) ( TYPE_3 TYPE_3 ) 
( VAR_1 TYPE_2 VAR_1 ) ( res TYPE_1 res ) ( VAR_2 boolean VAR_2 ) 
( line int line ) ( cm TYPE_2 cm ) ( METHOD_1_return private TYPE_1 METHOD_1 ( TYPE_2 cm int line ) { TYPE_3 VAR_1   METHOD_2 ( cm ) ; TYPE_4 info   TYPE_4.create ( path VAR_1 ( line + 1 ) null null ) ; return METHOD_3 ( info false ) ; } ) ( TYPE_4 TYPE_4 ) ( info info   TYPE_4.create ( path VAR_1 ( line + 1 ) null null ) ) ( VAR_1 VAR_1   METHOD_2 ( cm ) ) 
( TYPE_1 TYPE_1 ) ( getRefName_return protected java.lang.String getRefName ( ) { return TYPE_1.METHOD_1 ( VAR_1 getChange ( ) .getId ( ) ) ; } ) 
( result TYPE_1 result ) 
( METHOD_1_return java.lang.String METHOD_1 ( int id java.lang.String file ) ; ) ( file java.lang.String file ) ( id int id ) 
( VAR_1 com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ( VAR_2 VAR_2 ) 
( VAR_1 TYPE_2 VAR_1 ) ( create_return public TYPE_1 create ( TYPE_2 VAR_1 com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 VAR_3 VAR_4 VAR_5 VAR_6 VAR_7 VAR_8 VAR_9 VAR_10 TYPE_3.of ( VAR_1 ) null id null ) ; } ) ( id com.google.gerrit.reviewdb.client.Account.Id id ) 
( base org.eclipse.jgit.lib.ObjectId base ) ( projectName TYPE_2.NameKey projectName ) ( VAR_1 java.util.List < TYPE_3 > VAR_1 ) ( message java.lang.String message ) ( create_return TYPE_1 create ( TYPE_2.NameKey projectName org.eclipse.jgit.lib.ObjectId base java.util.List < TYPE_3 > VAR_1 java.lang.String message ) ; ) 
( VAR_2 boolean VAR_2 ) ( VAR_1 TYPE_2 VAR_1 ) ( create_return TYPE_1 create ( TYPE_2 VAR_1 boolean VAR_2 ) ; ) 
( change com.google.gerrit.reviewdb.client.Change change ) ( TYPE_3 TYPE_3 ) ( METHOD_1_return public TYPE_1 < TYPE_2 java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return TYPE_3.METHOD_2 ( VAR_1.submit ( new TYPE_4 ( VAR_2 change ) ) VAR_3 ) ; } ) 
( VAR_2 VAR_2 ) ( VAR_1 TYPE_1 VAR_1 ) 
( TYPE_2 TYPE_2 ) ( METHOD_1_return public static TYPE_1 METHOD_1 ( ) { return TYPE_2.METHOD_2 ( VAR_1 ) ; } ) 
( TYPE_5 TYPE_5 ) 
( VAR_1 java.lang.String VAR_1 ) ( config config ) ( METHOD_1_return private int METHOD_1 ( java.lang.String java.lang.String VAR_1 int VAR_2 ) { return config.METHOD_1 ( STRING_1 VAR_1 VAR_2 ) ; } ) ( java.lang.String ) ( VAR_2 int VAR_2 ) 
( result final java.util.List < TYPE_1.AccountGroup > result ) ( VAR_1 VAR_1 ) ( VAR_1 VAR_1 ) 
( METHOD_1_return protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path TYPE_2 < TYPE_1 > VAR_1 ) throws java.lang.Exception { return new TYPE_3 ( ) .METHOD_2 ( METHOD_3 ( path STRING_1 ) VAR_1 ) ; } ) ( VAR_1 TYPE_2 < TYPE_1 > VAR_1 ) ( path java.lang.String path ) 
( TYPE_2 TYPE_2 ) ( result TYPE_1 result ) 
( ctx TYPE_1 ctx ) ( METHOD_1_return private static native java.lang.String METHOD_1 ( TYPE_1 ctx java.lang.String VAR_1 java.lang.String VAR_2 int VAR_3 ) ; ) ( VAR_1 java.lang.String VAR_1 ) ( VAR_3 int VAR_3 ) ( VAR_2 java.lang.String VAR_2 ) 
( event TYPE_1 event ) ( db com.google.gerrit.reviewdb.server.ReviewDb db ) 
( METHOD_1_return_line1_col132 return VAR_1 ; ) ( i TYPE_1 i ) ( METHOD_1_return private static TYPE_1 METHOD_1 ( TYPE_1 i ) { TYPE_1 VAR_1   new TYPE_1 ( ) ; TYPE_2.METHOD_2 ( i VAR_1 ) ; return VAR_1 ; } ) ( VAR_1 VAR_1   new TYPE_1 ( ) ) ( TYPE_2 TYPE_2 ) ( VAR_1 VAR_1 ) 
( Truth com.google.common.truth.Truth ) ( notes TYPE_1 notes ) ( VAR_1 TYPE_2 VAR_1 ) 
( b b   new TYPE_1 ( ) ) 
( VAR_3 TYPE_4.Repository VAR_3 ) ( VAR_6 boolean VAR_6 ) ( VAR_1 TYPE_2.ReviewDb VAR_1 ) ( create_return TYPE_1 create ( TYPE_2.ReviewDb VAR_1 TYPE_3.NameKey VAR_2 TYPE_4.Repository VAR_3 TYPE_5.RevCommit VAR_4 TYPE_2.PatchSet VAR_5 boolean VAR_6 ) ; ) ( VAR_2 TYPE_3.NameKey VAR_2 ) ( VAR_4 TYPE_5.RevCommit VAR_4 ) ( VAR_5 TYPE_2.PatchSet VAR_5 ) 
( METHOD_1_return private org.eclipse.jgit.revwalk.RevWalk METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } ) ( METHOD_1_return_line1_col118 return VAR_1 ; ) ( VAR_1 VAR_1 ) 
( event final TYPE_1 event ) 
( METHOD_1_return protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( TYPE_3.METHOD_2 ( ) ) ; } ) 
( Truth com.google.common.truth.Truth ) ( METHOD_1_return private TYPE_1 METHOD_1 ( int VAR_1 ) throws java.lang.Exception { TYPE_1 d   new TYPE_1 ( ) ; d.METHOD_1 ( repo ) ; com.google.common.truth.Truth.assertThat ( d.getValue ( ) ) .isEqualTo ( VAR_1 ) ; return d ; } ) ( d d   new TYPE_1 ( ) ) ( d d ) ( VAR_1 int VAR_1 ) ( d d ) ( METHOD_1_return_line1_col225 return d ; ) 
( VAR_1 VAR_1   VAR_2.get ( new TYPE_3 < TYPE_2 > ( key VAR_3 ) ) ) ( VAR_2 VAR_2 ) ( key TYPE_2 key ) ( get_return public TYPE_1 get ( TYPE_2 key ) { TYPE_3 < TYPE_1 > VAR_1   VAR_2.get ( new TYPE_3 < TYPE_2 > ( key VAR_3 ) ) ; return VAR_1 !   null ? VAR_1.METHOD_1 ( VAR_4 VAR_5 ) : null ; } ) 
( METHOD_1_return TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this.VAR_1   TYPE_3.METHOD_2 ( VAR_1 STRING_1 ) ; return this ; } ) ( VAR_1 TYPE_2 VAR_1 ) ( TYPE_3 TYPE_3 ) 
( METHOD_1_return private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw   new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit   rw.parseCommit ( VAR_1 ) ; return VAR_2.METHOD_2 ( db.get ( ) rw commit ) ; } } ) ( VAR_1 org.eclipse.jgit.lib.ObjectId VAR_1 ) 
( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 int VAR_2 ) ( VAR_4 java.util.Set < java.lang.String > VAR_4 ) ( TYPE_3 TYPE_3 ) ( VAR_3 int VAR_3 ) ( METHOD_1_return protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 int VAR_2 int VAR_3 java.util.Set < java.lang.String > VAR_4 ) { return TYPE_3.METHOD_1 ( VAR_1 VAR_2 ( VAR_3 + 1 ) VAR_4 ) ; } ) 
( t com.google.gerrit.reviewdb.client.PatchSetApproval t ) ( METHOD_1_return com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSetApproval t ) { return new com.google.gerrit.server.query.change.ChangeData ( t.METHOD_2 ( ) .getParentKey ( ) ) ; } ) 
( METHOD_1_return public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2.METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 METHOD_4 ( VAR_1 ) ) ; } return null ; } ) ( VAR_1 java.lang.String VAR_1 ) 
( b boolean b ) 
( METHOD_1_return private boolean METHOD_1 ( ) { if ( ( VAR_1 ) <   ( VAR_2 ) ) { VAR_3.METHOD_2 ( VAR_4.METHOD_3 ( ) ) ; VAR_5.METHOD_2 ( VAR_4.METHOD_3 ( ) ) ; return false ; } return true ; } ) 
( apply_return public TYPE_1 apply ( TYPE_2 VAR_1 ) throws TYPE_3 TYPE_4 TYPE_5 java.lang.Exception { return new TYPE_6 ( VAR_1.METHOD_1 ( ) .METHOD_2 ( ) ) ; } ) ( VAR_1 TYPE_2 VAR_1 ) 
( view TYPE_1 view ) ( view view ) ( VAR_1 TYPE_2 VAR_1 ) 
( VAR_1 int VAR_1 ) 
( VAR_1 VAR_1   TYPE_1.METHOD_2 ( null ) ) ( TYPE_1 TYPE_1 ) ( Assert org.junit.Assert ) 
( VAR_1 VAR_1   user.METHOD_2 ( ) ) ( METHOD_1_return public TYPE_1 METHOD_1 ( TYPE_2 user ) { java.lang.String VAR_1   user.METHOD_2 ( ) ; if ( TYPE_3.METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3.get ( VAR_1 ) ; } } ) ( user TYPE_2 user ) ( user user ) 
( VAR_1 java.lang.String VAR_1 ) ( TYPE_3 TYPE_3 ) ( in in   TYPE_3.METHOD_2 ( ) ) ( VAR_2 TYPE_1 < TYPE_2 > VAR_2 ) 
( user_return protected TYPE_1 user ( TYPE_2 VAR_1 ) { return VAR_2.create ( TYPE_3.of ( db ) VAR_1.getId ( ) ) ; } ) ( VAR_1 TYPE_2 VAR_1 ) ( VAR_2 VAR_2 ) 
( METHOD_1_return private boolean METHOD_1 ( TYPE_1 event ) { return ( ! ( METHOD_2 ( event ) ) ) & & ( ( event.getRefName ( ) .METHOD_3 ( VAR_1 ) ) || ( event.getRefName ( ) .METHOD_3 ( VAR_2 ) ) ) ; } ) ( event TYPE_1 event ) 
( METHOD_1_return public static java.lang.String METHOD_1 ( java.lang.String type TYPE_1 VAR_1 TYPE_2.Key id ) { return TYPE_3.METHOD_1 ( type VAR_1 id.getParentKey ( ) id.get ( ) null 0 ) ; } ) ( TYPE_3 TYPE_3 ) ( type java.lang.String type ) ( VAR_1 TYPE_1 VAR_1 ) ( id TYPE_2.Key id ) 

public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 user = METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_3 ( VAR_3 , user ) ; METHOD_4 ( ) ; METHOD_3 ( STRING_2 ) ; } } ; ) STRING_2 ( METHOD_3 ; ) ( METHOD_4 ; ) user , VAR_3 ( METHOD_3 ; ) VAR_2 , VAR_1 ( METHOD_3 ; ) STRING_2 ( METHOD_3 ; ) STRING_1 ( METHOD_2 = user TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void run ( ) throws java.lang.Exception { VAR_1 . METHOD_1 ( out , VAR_2 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . query ( TYPE_1 . METHOD_4 ( query , STRING_1 ) ) ; } } ; ) ) STRING_1 , query ( METHOD_4 . TYPE_1 ( query . VAR_1 ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) VAR_2 , out ( METHOD_1 . VAR_1 { java.lang.Exception throws ) ( run void public 
private void METHOD_1 ( final TYPE_1 . PatchSetApproval VAR_1 ) { if ( VAR_1 ! = null ) { VAR_2 . METHOD_1 ( VAR_3 . create ( VAR_1 . getAccountId ( ) ) . METHOD_2 ( ) ) ; } } } } ; ) ) ( METHOD_2 . ) ) ( getAccountId . VAR_1 ( create . VAR_3 ( METHOD_1 . VAR_2 { ) null = ! VAR_1 ( if { ) VAR_1 PatchSetApproval . TYPE_1 final ( METHOD_1 void private 
public void onSuccess ( final TYPE_1 result ) { METHOD_1 ( VAR_1 , VAR_2 , line , VAR_3 ) ; } } ; ) VAR_3 , line , VAR_2 , VAR_1 ( METHOD_1 { ) result TYPE_1 final ( onSuccess void public 
protected TYPE_1 . Result METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ; return VAR_1 . to ( git , STRING_1 ) ; } } ; ) STRING_1 , git ( to . VAR_1 return ; ) ) ( METHOD_2 . admin , db ( create . VAR_2 = VAR_1 TYPE_3 { TYPE_2 , java.io.IOException throws ) ( METHOD_1 Result . TYPE_1 protected 
public java.util.List < TYPE_1 . ChangeInfo > METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) throws TYPE_4 { throw new TYPE_5 ( ) ; } } ; ) ( TYPE_5 new throw { TYPE_4 throws ) VAR_1 > TYPE_3 < TYPE_2 ( METHOD_1 > ChangeInfo . TYPE_1 < java.util.List public 
TYPE_1 create ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 ) ; ; ) VAR_3 TYPE_2 , VAR_2 java.lang.String , VAR_1 java.lang.String ( create TYPE_1 
private static void METHOD_1 ( final TYPE_1 r , final TYPE_2 . PatchSet ps ) { TYPE_3 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) ; } } ; ) ) ( getRevision . ps , STRING_1 , r ( METHOD_2 . TYPE_3 { ) ps PatchSet . TYPE_2 final , r TYPE_1 final ( METHOD_1 void static private 
private static int METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 cfg , final java.lang.String name , final int VAR_2 ) { return TYPE_3 . METHOD_2 ( 0 , cfg . METHOD_3 ( STRING_1 , VAR_1 . getName ( ) , name , VAR_2 ) ) ; } } ; ) ) VAR_2 , name , ) ( getName . VAR_1 , STRING_1 ( METHOD_3 . cfg , 0 ( METHOD_2 . TYPE_3 return { ) VAR_2 int final , name java.lang.String final , cfg TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 int static private 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , cfg ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 . VAR_2 ; ) ( METHOD_3 . VAR_2 ; ) cfg , VAR_3 ( TYPE_1 new = VAR_2 TYPE_1 ; ) ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.reviewdb.client.PatchSet ps ) { TYPE_1 d = METHOD_2 ( c , ps ) ; VAR_1 = c . METHOD_3 ( ) . equals ( ps . getId ( ) ) ; return d ; } } ; d return ; ) ) ( getId . ps ( equals . ) ( METHOD_3 . c = VAR_1 ; ) ps , c ( METHOD_2 = d TYPE_1 { ) ps com.google.gerrit.reviewdb.client.PatchSet , c com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 private 
public java.lang.String format ( TYPE_1 cfg , java.lang.String VAR_1 ) { return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; } } ; STRING_2 + ) ) ) VAR_1 ( METHOD_1 . TYPE_2 ( + STRING_1 ( return { ) VAR_1 java.lang.String , cfg TYPE_1 ( format java.lang.String public 
protected org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 < ? > repo , java.lang.String branch ) throws java.lang.Exception { return METHOD_1 ( repo , branch , STRING_1 ) ; } } ; ) STRING_1 , branch , repo ( METHOD_1 return { java.lang.Exception throws ) branch java.lang.String , repo > ? < TYPE_1 ( METHOD_1 org.eclipse.jgit.lib.ObjectId protected 
TYPE_1 . Result METHOD_1 ( TYPE_2 index ) ; ; ) index TYPE_2 ( METHOD_1 Result . TYPE_1 
public org.eclipse.jgit.lib.ObjectId apply ( TYPE_1 ref ) { if ( ( ref . METHOD_1 ( ) ) ! = null ) { return ref . METHOD_1 ( ) ; } else { return ref . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . ref return { else } ; ) ( METHOD_1 . ref return { ) null = ! ) ) ( METHOD_1 . ref ( ( if { ) ref TYPE_1 ( apply org.eclipse.jgit.lib.ObjectId public 
public TYPE_1 . Key getKey ( ) { return key ; } } ; key return { ) ( getKey Key . TYPE_1 public 
void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { int VAR_2 = METHOD_3 ( ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( VAR_4 ) ; } } } } ; ) VAR_4 ( METHOD_5 . VAR_5 ; ) VAR_2 ( METHOD_4 . VAR_4 ; ) VAR_2 ( METHOD_4 . VAR_3 ; ) ( METHOD_3 = VAR_2 int { ) ) ) ( METHOD_2 . VAR_1 ( ! ( if { ) ( METHOD_1 void 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( false ) . METHOD_4 ( false ) . METHOD_5 ( false ) . METHOD_6 ( null ) ; } } ; ) null ( METHOD_6 . ) false ( METHOD_5 . ) false ( METHOD_4 . ) false ( METHOD_3 . ) ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( final org.eclipse.jgit.lib.ObjectId id , final java.lang.String message ) { VAR_1 . add ( id ) ; } } ; ) id ( add . VAR_1 { ) message java.lang.String final , id org.eclipse.jgit.lib.ObjectId final ( METHOD_1 void public 
public static void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; TYPE_2 . METHOD_1 ( ) ; TYPE_3 . METHOD_1 ( ) ; TYPE_4 . METHOD_1 ( ) ; TYPE_1 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . TYPE_1 ; ) ( METHOD_1 . TYPE_4 ; ) ( METHOD_1 . TYPE_3 ; ) ( METHOD_1 . TYPE_2 ; ) ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void static public 
public void METHOD_1 ( TYPE_1 . ReceiveCommand cmd ) throws java.io.IOException { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) . add ( cmd ) ; } } ; ) cmd ( add . ) ( METHOD_3 . VAR_1 ; ) ( METHOD_2 { java.io.IOException throws ) cmd ReceiveCommand . TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , project , STRING_1 , false ) ; METHOD_3 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_3 ; ) false , STRING_1 , project , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( ) . contains ( VAR_1 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_1 ( contains . ) ( METHOD_2 return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
void METHOD_1 ( ) { VAR_1 . append ( log ( ( STRING_1 + ( VAR_2 . get ( ) . METHOD_2 ( ) ) ) ) ) ; METHOD_3 ( VAR_3 . get ( ) , STRING_2 , STRING_3 , new java.lang.String [ ] { } ) ; } } ; ) } { ] [ java.lang.String new , STRING_3 , STRING_2 , ) ( get . VAR_3 ( METHOD_3 ; ) ) ) ) ) ( METHOD_2 . ) ( get . VAR_2 ( + STRING_1 ( ( log ( append . VAR_1 { ) ( METHOD_1 void 
private static void METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 , TYPE_2 value ) { VAR_1 . append ( VAR_2 . getName ( ) ) . append ( STRING_1 ) . append ( value ) . append ( CHAR_1 ) ; } } ; ) CHAR_1 ( append . ) value ( append . ) STRING_1 ( append . ) ) ( getName . VAR_2 ( append . VAR_1 { ) value TYPE_2 , VAR_2 TYPE_1 , VAR_1 java.lang.StringBuilder ( METHOD_1 void static private 
protected void run ( ) { for ( TYPE_1 d : config . METHOD_1 ( VAR_1 ) ) { if ( METHOD_2 ( d . METHOD_3 ( ) . getName ( ) ) ) { METHOD_4 ( d , VAR_2 ) ; } } } } } } ; ) VAR_2 , d ( METHOD_4 { ) ) ) ( getName . ) ( METHOD_3 . d ( METHOD_2 ( if { ) ) VAR_1 ( METHOD_1 . config : d TYPE_1 ( for { ) ( run void protected 
public void run ( ) { for ( ; ; ) { try { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { return ; } } catch ( TYPE_1 e ) { } VAR_4 . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . VAR_4 } { ) e TYPE_1 ( catch } } ; return { ) ) VAR_3 , VAR_2 ( METHOD_1 . VAR_1 ( if { try { ) ; ; ( for { ) ( run void public 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) ; } } ; ) ( METHOD_2 return { ) ( METHOD_1 boolean public 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . } { ) ( > > TYPE_1 , java.lang.String < java.util.Map < TYPE_2 new , path ( METHOD_2 return { java.lang.Exception throws ) path java.lang.String ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map private 
void METHOD_1 ( java.lang.String name , final java.lang.String VAR_1 ) { this . VAR_2 = TYPE_1 . METHOD_2 ( name ) ; } } ; ) name ( METHOD_2 . TYPE_1 = VAR_2 . this { ) VAR_1 java.lang.String final , name java.lang.String ( METHOD_1 void 
public void METHOD_1 ( final TYPE_1 event ) { if ( ( ++ ( VAR_1 ) ) == 1 ) { if ( ( VAR_2 ) == 0 ) { VAR_3 . METHOD_2 ( true ) ; } } } } } } ; ) true ( METHOD_2 . VAR_3 { ) 0 == ) VAR_2 ( ( if { ) 1 == ) ) VAR_1 ( ++ ( ( if { ) event TYPE_1 final ( METHOD_1 void public 
com.google.gerrit.server.query.change.ChangeData create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id id ) ; ; ) id Id . com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( create com.google.gerrit.server.query.change.ChangeData 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 , TYPE_3 . METHOD_3 ( STRING_2 ) ) ) ; org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . r , VAR_3 ( org.junit.Assert.assertEquals ; ) ) ) STRING_2 ( METHOD_3 . TYPE_3 , VAR_2 ( TYPE_2 new , STRING_1 ( METHOD_2 . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > p , final java.util.List < TYPE_1 < java.lang.String > > VAR_2 ) { org.junit.Assert.assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , VAR_2 , ) STRING_1 + VAR_1 ( ( org.junit.Assert.assertEquals { ) VAR_2 > > java.lang.String < TYPE_1 < java.util.List final , p > java.lang.String < TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void static private 
private void METHOD_1 ( java.lang.String VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit commit = parseCommit ( VAR_2 ) ; org.junit.Assert.assertEquals ( VAR_1 , commit . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . commit , VAR_1 ( org.junit.Assert.assertEquals ; ) VAR_2 ( parseCommit = commit org.eclipse.jgit.revwalk.RevCommit { java.lang.Exception throws ) VAR_2 org.eclipse.jgit.lib.ObjectId , VAR_1 java.lang.String ( METHOD_1 void private 
protected void METHOD_1 ( ) throws java.lang.Exception { try ( TYPE_1 server = METHOD_2 ( ) ) { org.junit.Assert . METHOD_3 ( STRING_1 ) ; } catch ( TYPE_1 e ) { } } } } { ) e TYPE_1 ( catch } ; ) STRING_1 ( METHOD_3 . org.junit.Assert { ) ) ( METHOD_2 = server TYPE_1 ( try { java.lang.Exception throws ) ( METHOD_1 void protected 
public static void METHOD_1 ( final TYPE_1 < ? > VAR_1 ) { new TYPE_2 ( VAR_1 ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) VAR_1 ( TYPE_2 new { ) VAR_1 > ? < TYPE_1 final ( METHOD_1 void static public 
public int METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 int public 
protected void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { VAR_1 . projects ( ) . create ( in ) ; } } ; ) in ( create . ) ( projects . VAR_1 { TYPE_2 throws ) in TYPE_1 ( METHOD_1 void protected 
public static native TYPE_1 create ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , TYPE_4 cfg ) ; ; ) cfg TYPE_4 , VAR_2 TYPE_3 , VAR_1 TYPE_2 ( create TYPE_1 native static public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , com.google.gerrit.reviewdb.client.Change . Id changeId ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) ; r . append ( changeId . get ( ) ) ; return r . toString ( ) ; } } ; ) ( toString . r return ; ) ) ( get . changeId ( append . r ; ) VAR_1 , VAR_2 ( METHOD_2 . TYPE_1 = r java.lang.StringBuilder { ) changeId Id . com.google.gerrit.reviewdb.client.Change , VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 java.lang.String static public 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId ) ) ; } } } } ; ) ) psId ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) ) ( METHOD_1 . VAR_1 ( if { ) result TYPE_1 ( onSuccess void public 
TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . ) ( METHOD_2 ( ) TYPE_1 ( ( return { ) ( METHOD_1 TYPE_1 
private boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ) . contains ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( ) . contains ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( contains . ) ( METHOD_2 . VAR_1 ( || ) ) VAR_2 ( contains . ) ( METHOD_2 . VAR_1 ( return { ) ( METHOD_1 boolean private 
public final void insert ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( METHOD_1 { OrmException . TYPE_3 throws ) VAR_1 > TYPE_2 < TYPE_1 final ( insert void final public 
public void METHOD_1 ( TYPE_1 . Factory VAR_1 , com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_2 user , TYPE_3 < TYPE_4 > VAR_2 ) throws TYPE_5 , TYPE_6 { METHOD_1 ( VAR_1 , project , user , VAR_2 , STRING_1 , VAR_3 , TYPE_7 . of ( ) ) ; } } ; ) ) ( of . TYPE_7 , VAR_3 , STRING_1 , VAR_2 , user , project , VAR_1 ( METHOD_1 { TYPE_6 , TYPE_5 throws ) VAR_2 > TYPE_4 < TYPE_3 , user TYPE_2 , project com.google.gerrit.reviewdb.client.Project.NameKey , VAR_1 Factory . TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 = true ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; true = VAR_1 { ) ( METHOD_1 void public 
public org.eclipse.jgit.revwalk.RevWalk METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 org.eclipse.jgit.revwalk.RevWalk public 
public java.lang.String apply ( TYPE_1 . ChangeInfo input ) { return ( input . changeId ) ! = null ? input . changeId : VAR_1 ; } } ; VAR_1 : changeId . input ? null = ! ) changeId . input ( return { ) input ChangeInfo . TYPE_1 ( apply java.lang.String public 
private void METHOD_1 ( final java.lang.String VAR_1 ) { if ( VAR_1 ! = null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) null = ! VAR_1 ( if { ) VAR_1 java.lang.String final ( METHOD_1 void private 
void METHOD_1 ( TYPE_1 e ) { e . METHOD_2 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_3 ( changeId ) ) ; } } ; ) ) changeId ( METHOD_3 . TYPE_3 ( display . TYPE_2 ; ) ( METHOD_2 . e { ) e TYPE_1 ( METHOD_1 void 
private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return METHOD_2 ( this : : METHOD_1 ) ; } } ; ) METHOD_1 : : this ( METHOD_2 return { java.lang.Exception throws ) ( METHOD_1 TYPE_1 private 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String VAR_1 ) { boolean VAR_2 = false ; for ( TYPE_1 VAR_3 : METHOD_2 ( project , VAR_4 ) ) { VAR_2 & = METHOD_1 ( VAR_3 , VAR_1 ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) VAR_1 , VAR_3 ( METHOD_1 = & VAR_2 { ) ) VAR_4 , project ( METHOD_2 : VAR_3 TYPE_1 ( for ; false = VAR_2 boolean { ) VAR_1 java.lang.String , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 boolean public 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_2 ( db , patchSet , null , false , true ) ; } } ; ) true , false , null , patchSet , db ( METHOD_2 return { ) patchSet com.google.gerrit.reviewdb.client.PatchSet , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 > TYPE_1 < java.util.List public 
public < TYPE_1 extends TYPE_2 < ? , ? > > TYPE_3 < TYPE_1 > create ( TYPE_4 VAR_1 , TYPE_5 VAR_2 ) throws TYPE_6 . OrmException { return new TYPE_7 ( VAR_1 , VAR_2 , VAR_3 ) . create ( ) ; } } ; ) ( create . ) VAR_3 , VAR_2 , VAR_1 ( TYPE_7 new return { OrmException . TYPE_6 throws ) VAR_2 TYPE_5 , VAR_1 TYPE_4 ( create > TYPE_1 < TYPE_3 > > ? , ? < TYPE_2 extends TYPE_1 < public 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null ) ; } } ; ) null ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static public 
protected java.lang.String getRefName ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( getRefName java.lang.String protected 
boolean METHOD_1 ( boolean VAR_1 ) { if ( TYPE_1 . equals ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } return ( METHOD_3 ( VAR_4 , VAR_1 ) ) & & ( METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 ( & & ) ) VAR_1 , VAR_4 ( METHOD_3 ( return } ; ) ( METHOD_2 . VAR_3 return { ) ) VAR_2 ( equals . TYPE_1 ( if { ) VAR_1 boolean ( METHOD_1 boolean 
TYPE_1 METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 TYPE_1 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( change , event , db ) ; } } ; ) db , event , change ( METHOD_2 { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , false , VAR_2 ) ; } } ; ) VAR_2 , false , null , VAR_1 ( METHOD_2 return { java.lang.Exception throws ) VAR_2 Status . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 java.lang.String private 
public java.lang.String getName ( ) { if ( ( VAR_1 ) ! = null ) { return VAR_1 ; } if ( ( VAR_2 ) ! = null ) { return VAR_2 ; } return STRING_1 + ( VAR_3 . get ( ) ) ; } } ; ) ) ( get . VAR_3 ( + STRING_1 return } ; VAR_2 return { ) null = ! ) VAR_2 ( ( if } ; VAR_1 return { ) null = ! ) VAR_1 ( ( if { ) ( getName java.lang.String public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . branch ( STRING_2 ) . create ( new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new ( create . ) STRING_2 ( branch . ) ) ( get . project ( name . ) ( projects . VAR_3 ; ) STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { try ( TYPE_1 VAR_1 = METHOD_2 ( commit ) ) { VAR_1 . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . VAR_1 { ) ) commit ( METHOD_2 = VAR_1 TYPE_1 ( try { java.lang.Exception throws ) commit org.eclipse.jgit.revwalk.RevCommit ( METHOD_1 void private 
public void onSuccess ( TYPE_1 < TYPE_2 > VAR_1 ) { display ( ) ; VAR_2 . display ( VAR_1 ) ; } } ; ) VAR_1 ( display . VAR_2 ; ) ( display { ) VAR_1 > TYPE_2 < TYPE_1 ( onSuccess void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 res = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , new java.lang.String ( res . METHOD_3 ( ) , VAR_1 ) ) ; } } ; ) ) VAR_1 , ) ( METHOD_3 . res ( java.lang.String new , STRING_2 ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 = res TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( final boolean VAR_1 ) { sshd = false ; } } ; false = sshd { ) VAR_1 boolean final ( METHOD_1 void 
private static void METHOD_1 ( java.lang.String token ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) ; } } ; ) ) token ( METHOD_3 . TYPE_1 ( METHOD_2 . VAR_1 { ) token java.lang.String ( METHOD_1 void static private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_2 ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_7 . TYPE_2 , ) ( METHOD_6 . ) VAR_2 ( METHOD_5 . ) VAR_1 ( METHOD_4 . ) ( METHOD_3 . TYPE_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res ) { TYPE_3 . METHOD_2 ( res ) ; } } ; ) res ( METHOD_2 . TYPE_3 { ) res HttpServletResponse . TYPE_2 , req TYPE_1 ( METHOD_1 void protected 
private static TYPE_1 METHOD_1 ( ) { try { return TYPE_1 . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( STRING_2 , e ) ; } finally { } } } } { finally } ; ) e , STRING_2 ( TYPE_3 new throw { ) e TYPE_2 ( catch } ; ) STRING_1 ( METHOD_2 . TYPE_1 return { try { ) ( METHOD_1 TYPE_1 static private 
public final TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > METHOD_1 ( ) { return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return { ) ( METHOD_1 > TYPE_4 , TYPE_3 , TYPE_2 < TYPE_1 final public 
public TYPE_1 create ( final TYPE_2 . Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , null , null , id ) ; } } ; ) id , null , null , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) id Id . TYPE_2 final ( create TYPE_1 public 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_1 = null ; } } ; null = VAR_1 ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 { ) result TYPE_1 ( METHOD_1 void protected 
public int METHOD_1 ( TYPE_1 a , TYPE_1 b ) { return METHOD_1 ( a . METHOD_2 ( ) , b . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . b , ) ( METHOD_2 . a ( METHOD_1 return { ) b TYPE_1 , a TYPE_1 ( METHOD_1 int public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( new TYPE_2 ( TYPE_3 . schema ( VAR_1 ) , topic ) , TYPE_4 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . TYPE_4 , ) topic , ) VAR_1 ( schema . TYPE_3 ( TYPE_2 new ( METHOD_2 . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) topic java.lang.String ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) ! = null ) { VAR_2 . METHOD_2 ( ) ; } else { cm . METHOD_3 ( 0 , VAR_3 , VAR_4 . METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 . VAR_4 , VAR_3 , 0 ( METHOD_3 . cm { else } ; ) ( METHOD_2 . VAR_2 { ) null = ! ) VAR_2 ( ( if ; ) ( METHOD_2 . VAR_1 { ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_2 cfg ) { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( 2 ) ; VAR_1 . METHOD_4 ( INT_1 ) ; VAR_1 . METHOD_5 ( INT_2 ) ; return VAR_1 ; } } ; VAR_1 return ; ) INT_2 ( METHOD_5 . VAR_1 ; ) INT_1 ( METHOD_4 . VAR_1 ; ) 2 ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 ; ) ( TYPE_3 new = VAR_1 TYPE_3 { ) cfg TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_4 . TYPE_3 ( METHOD_3 . ) ) ) ) VAR_1 ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat ; STRING_1 = VAR_1 java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_1 ( VAR_1 , false ) ; } } ; ) false , VAR_1 ( METHOD_1 return { ) VAR_1 java.lang.String ( METHOD_1 boolean 
void METHOD_1 ( int n ) { if ( n < 0 ) { VAR_1 = INT_1 ; } else if ( n == 0 ) { VAR_1 = VAR_2 ; } else { VAR_1 = TYPE_1 . METHOD_2 ( n , VAR_2 ) ; } } } } ; ) VAR_2 , n ( METHOD_2 . TYPE_1 = VAR_1 { else } ; VAR_2 = VAR_1 { ) 0 == n ( if else } ; INT_1 = VAR_1 { ) 0 < n ( if { ) n int ( METHOD_1 void 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 { ) event TYPE_1 final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws TYPE_2 , com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . METHOD_1 ( db , changeId ) ; } } ; ) changeId , db ( METHOD_1 . VAR_1 return { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_2 throws ) changeId Id . com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 TYPE_1 public 
private static java.lang.String format ( final java.lang.String name , final java.lang.String email ) { try { return new TYPE_1 ( name , email ) . METHOD_1 ( ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_3 new throw { ) e TYPE_2 ( catch } ; ) ( METHOD_1 . ) email , name ( TYPE_1 new return { try { ) email java.lang.String final , name java.lang.String final ( format java.lang.String static private 
protected TYPE_1 METHOD_1 ( TYPE_2 . HttpServletResponse res ) throws java.io.IOException { return TYPE_3 . METHOD_1 ( res . METHOD_2 ( ) , res ) ; } } ; ) res , ) ( METHOD_2 . res ( METHOD_1 . TYPE_3 return { java.io.IOException throws ) res HttpServletResponse . TYPE_2 ( METHOD_1 TYPE_1 protected 
public TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( METHOD_3 ( ) ) . METHOD_4 ( METHOD_4 ( ) ) . METHOD_5 ( METHOD_5 ( ) ) . METHOD_6 ( METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 ( METHOD_6 . ) ) ( METHOD_5 ( METHOD_5 . ) ) ( METHOD_4 ( METHOD_4 . ) ) ( METHOD_3 ( METHOD_3 . ) ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 VAR_1 , int row , int VAR_2 ) { if ( ( METHOD_2 ( row ) ) ! = null ) { METHOD_3 ( row ) ; } } } } ; ) row ( METHOD_3 { ) null = ! ) ) row ( METHOD_2 ( ( if { ) VAR_2 int , row int , VAR_1 TYPE_1 ( METHOD_1 void public 
public boolean apply ( TYPE_1 input ) { return ( input . getChange ( ) ) ! = null ; } } ; null = ! ) ) ( getChange . input ( return { ) input TYPE_1 ( apply boolean public 
private TYPE_1 METHOD_1 ( ) { final java.util.List < TYPE_2 > modules = new java.util.ArrayList < TYPE_2 > ( ) ; modules.add ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; return VAR_2 . METHOD_2 ( modules ) ; } } ; ) modules ( METHOD_2 . VAR_2 return ; ) ) ) VAR_1 ( TYPE_4 new ( TYPE_3 new ( modules.add ; ) ( > TYPE_2 < java.util.ArrayList new = modules > TYPE_2 < java.util.List final { ) ( METHOD_1 TYPE_1 private 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( VAR_1 ) ; return VAR_2 . METHOD_2 ( db , rw , commit ) ; } } } } ; ) commit , rw , db ( METHOD_2 . VAR_2 return ; ) VAR_1 ( parseCommit . rw = commit org.eclipse.jgit.revwalk.RevCommit { ) ) repo ( org.eclipse.jgit.revwalk.RevWalk new = rw org.eclipse.jgit.revwalk.RevWalk ( try { java.io.IOException throws ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 boolean private 
private void add ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { if ( ( VAR_2 ! = null ) & & ( ( VAR_2 . METHOD_1 ( ) ) ! = null ) ) { add ( VAR_1 , VAR_2 . METHOD_1 ( ) ) ; } } } } ; ) ) ( METHOD_1 . VAR_2 , VAR_1 ( add { ) ) null = ! ) ) ( METHOD_1 . VAR_2 ( ( & & ) null = ! VAR_2 ( ( if { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 final ( add void private 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( CHAR_1 ) ; VAR_1 . append ( VAR_2 . name ( ) ) ; VAR_1 . append ( CHAR_1 ) ; } } ; ) CHAR_1 ( append . VAR_1 ; ) ) ( name . VAR_2 ( append . VAR_1 ; ) CHAR_1 ( append . VAR_1 { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
private void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( true , java.util.Collections . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_1 ) ) , VAR_2 ) ) ; METHOD_2 ( TYPE_3 . METHOD_6 ( true ) ) ; METHOD_7 ( new TYPE_4 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( TYPE_4 new ( METHOD_7 ; ) ) true ( METHOD_6 . TYPE_3 ( METHOD_2 ; ) ) VAR_2 , ) ) VAR_1 ( METHOD_5 . TYPE_2 ( METHOD_4 . java.util.Collections , true ( METHOD_3 . TYPE_1 ( METHOD_2 { ) ( METHOD_1 void private 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) & & ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_3 ( & & ) ) db ( METHOD_2 ( return { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean private 
public void set ( final TYPE_1 value ) { VAR_1 = TYPE_2 . get ( ) ; super . set ( value ) ; VAR_1 = null ; } } ; null = VAR_1 ; ) value ( set . super ; ) ( get . TYPE_2 = VAR_1 { ) value TYPE_1 final ( set void public 
public static TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( TYPE_2 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_3 ( METHOD_1 . TYPE_2 return { ) VAR_1 ... TYPE_2 ( METHOD_1 > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 static public 
public void delete ( com.google.gerrit.server.query.change.ChangeData cd ) { throw new TYPE_1 ( ) ; } } ; ) ( TYPE_1 new throw { ) cd com.google.gerrit.server.query.change.ChangeData ( delete void public 
public static void METHOD_1 ( final TYPE_1 . NameKey branch ) { if ( TYPE_2 . METHOD_2 ( branch ) ) { try { TYPE_2 . METHOD_3 ( branch ) ; } finally { TYPE_2 . METHOD_4 ( branch ) ; } } } } } } ; ) branch ( METHOD_4 . TYPE_2 { finally } ; ) branch ( METHOD_3 . TYPE_2 { try { ) ) branch ( METHOD_2 . TYPE_2 ( if { ) branch NameKey . TYPE_1 final ( METHOD_1 void static public 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ? null : VAR_1 ; } } ; VAR_1 : null ? ) ) ( isEmpty . VAR_1 ( || ) null == VAR_1 ( return { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String static private 
Account . Id METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . getAccountId ( ) ; } } ; ) ( getAccountId . ) ) ) ( METHOD_3 . ) ( METHOD_2 ( ) TYPE_1 ( ( return { ) ( METHOD_1 Id . Account 
public static TYPE_1 base ( ) { return new TYPE_1 ( null ) ; } } ; ) null ( TYPE_1 new return { ) ( base TYPE_1 static public 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } } } } ; null = VAR_1 ; ) ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 ) { return TYPE_1 . METHOD_1 ( revision , VAR_1 , 0 ) ; } } ; ) 0 , VAR_1 , revision ( METHOD_1 . TYPE_1 return { ) VAR_1 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( ( ! ( e . getValue ( ) ) ) ) ; view . METHOD_3 ( ( ! ( e . getValue ( ) ) ) ) ; view . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . view ; ) ) ) ) ( getValue . e ( ! ( ( METHOD_3 . view ; ) ) ) ) ( getValue . e ( ! ( ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_2 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_2 { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( final com.google.gerrit.reviewdb.client . AccountGroup group ) { return new TYPE_1 ( VAR_1 , user . get ( ) , group ) ; } } ; ) group , ) ( get . user , VAR_1 ( TYPE_1 new return { ) group AccountGroup . com.google.gerrit.reviewdb.client final ( METHOD_1 TYPE_1 public 
protected com.google.gerrit.reviewdb.client.PatchSet METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( db , psId . getParentKey ( ) ) . patchSet ( psId ) ; } } ; ) psId ( patchSet . ) ) ( getParentKey . psId , db ( create . VAR_1 return { com.google.gwtorm.server.OrmException throws ) psId com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 com.google.gerrit.reviewdb.client.PatchSet protected 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id id ) ; ; ) id Id . com.google.gerrit.reviewdb.client.Change ( create TYPE_1 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { VAR_1 = true ; METHOD_1 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_2 ( result . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . result ( METHOD_2 . TYPE_3 ( display . TYPE_2 ; ) ( METHOD_1 ; true = VAR_1 { ) result ChangeInfo . TYPE_1 ( onSuccess void public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; METHOD_2 ( VAR_1 . get ( ) ) ; } } ; ) ) ( get . VAR_1 ( METHOD_2 ; ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; org.junit.Assert.assertEquals ( name , VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) ; } } ; ) name . ) ( get . ) ( create . ) name ( name . ) ( projects . VAR_1 , name ( org.junit.Assert.assertEquals ; STRING_1 = name java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 , false ) ; } } ; ) false , VAR_2 , VAR_1 , ) this ( of . TYPE_5 ( METHOD_1 . TYPE_4 { TYPE_3 , TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , java.lang.String VAR_1 , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; ; com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , VAR_1 java.lang.String , account com.google.gerrit.reviewdb.client.Account , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { return METHOD_1 ( null , null , null ) ; } } ; ) null , null , null ( METHOD_1 return { ) ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( TYPE_1 value ) { METHOD_2 ( ) . METHOD_1 ( value ) ; } } ; ) value ( METHOD_1 . ) ( METHOD_2 { ) value TYPE_1 ( METHOD_1 void public 
public final native void METHOD_1 ( int line ) ; ; ) line int ( METHOD_1 void native final public 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( VAR_1 ) ! = null ) { return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; } else { return true ; } } } } ; true return { else } ; ) ) ( getProject . change ( equals . ) ( METHOD_2 . ) ( getProject . VAR_1 return { ) null = ! ) VAR_1 ( ( if { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 boolean private 
public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_1 ; } } ; VAR_1 return { ) VAR_1 java.lang.String final ( METHOD_1 java.lang.String public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } } ; ) ) STRING_1 , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( METHOD_1 > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
private java.lang.String METHOD_1 ( int VAR_1 ) { if ( VAR_1 == 0 ) { return STRING_1 ; } else { return java.lang.String.format ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) , STRING_4 ) ; } } } } ; ) STRING_4 , ) STRING_3 + ) VAR_1 + STRING_2 ( ( ( java.lang.String.format return { else } ; STRING_1 return { ) 0 == VAR_1 ( if { ) VAR_1 int ( METHOD_1 java.lang.String private 
private static java.lang.String METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { for ( TYPE_2 id : VAR_1 ) { if ( id . METHOD_2 ( VAR_2 ) ) { return id . METHOD_3 ( ) ; } } return null ; } } ; null return } } ; ) ( METHOD_3 . id return { ) ) VAR_2 ( METHOD_2 . id ( if { ) VAR_1 : id TYPE_2 ( for { ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 java.lang.String static private 
public static TYPE_1 METHOD_1 ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email ) { return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_2 ( email ) , null ) ; } } ; ) null , ) email ( METHOD_2 . TYPE_3 , VAR_1 , key ( TYPE_2 new return { ) email java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.Account.Id , key Key . TYPE_1 ( METHOD_1 TYPE_1 static public 
protected void METHOD_1 ( final TYPE_1 result ) { projects . display ( result ) ; } } ; ) result ( display . projects { ) result TYPE_1 final ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( final TYPE_2 req , final TYPE_3 . HttpServletResponse VAR_1 ) { return new TYPE_1 ( server , req , VAR_1 ) ; } } ; ) VAR_1 , req , server ( TYPE_1 new return { ) VAR_1 HttpServletResponse . TYPE_3 final , req TYPE_2 final ( METHOD_1 TYPE_1 protected 
private static void reject ( final TYPE_1 . ReceiveCommand cmd , final java.lang.String VAR_1 ) { cmd . METHOD_1 ( VAR_2 , VAR_1 ) ; } } ; ) VAR_1 , VAR_2 ( METHOD_1 . cmd { ) VAR_1 java.lang.String final , cmd ReceiveCommand . TYPE_1 final ( reject void static private 
public java.lang.String METHOD_1 ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) throws java.io.IOException , TYPE_1 { final org.eclipse.jgit.lib.Repository e = METHOD_2 ( name ) ; try { return METHOD_1 ( e ) ; } finally { e . close ( ) ; } } } } ; ) ( close . e { finally } ; ) e ( METHOD_1 return { try ; ) name ( METHOD_2 = e org.eclipse.jgit.lib.Repository final { TYPE_1 , java.io.IOException throws ) name com.google.gerrit.reviewdb.client.Project.NameKey final ( METHOD_1 java.lang.String public 
public static final void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . METHOD_1 ( STRING_1 , VAR_1 ) ; } } ; ) VAR_1 , STRING_1 ( METHOD_1 . TYPE_1 { ) VAR_1 java.lang.String ( METHOD_1 void final static public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String VAR_1 ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( project ) , TYPE_2 . commit ( TYPE_2 . schema ( VAR_2 ) , VAR_1 ) ) ) ; } } ; ) ) ) VAR_1 , ) VAR_2 ( schema . TYPE_2 ( commit . TYPE_2 , ) project ( project . TYPE_2 ( METHOD_2 . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) VAR_1 java.lang.String , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . cd { ) changes : cd com.google.gerrit.server.query.change.ChangeData ( for { com.google.gwtorm.server.OrmException throws ) changes > com.google.gerrit.server.query.change.ChangeData < TYPE_1 ( METHOD_1 void static public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , STRING_1 ) ; assertEquals ( STRING_2 , VAR_2 ) ; } } ; ) VAR_2 , STRING_2 ( assertEquals ; ) STRING_1 , STRING_1 ( METHOD_5 . VAR_1 = VAR_2 java.lang.String ; ) ( METHOD_4 = VAR_1 TYPE_1 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
TYPE_1 METHOD_1 ( TYPE_2 cfg , byte [ ] VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ( VAR_1 . length ) > 0 ) ) { METHOD_2 ( cfg , TYPE_3 . METHOD_3 ( VAR_1 ) ) ; } return this ; } } ; this return } ; ) ) VAR_1 ( METHOD_3 . TYPE_3 , cfg ( METHOD_2 { ) ) 0 > ) length . VAR_1 ( ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 ] [ byte , cfg TYPE_2 ( METHOD_1 TYPE_1 
private PatchSet . Id METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . change ( ) . currentPatchSetId ( ) ; } } ; ) ( currentPatchSetId . ) ( change . ) c ( getChange return { com.google.gwtorm.server.OrmException throws ) c TYPE_1 ( METHOD_1 Id . PatchSet private 
public void onSuccess ( final TYPE_1 result ) { VAR_1 = false ; METHOD_1 ( ) ; } } ; ) ( METHOD_1 ; false = VAR_1 { ) result TYPE_1 final ( onSuccess void public 
private static void METHOD_1 ( java.lang.String token ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( token ) ) ; } TYPE_2 . METHOD_4 ( STRING_1 , token ) ; } } ; ) token , STRING_1 ( METHOD_4 . TYPE_2 } ; ) ) token ( METHOD_3 . TYPE_1 ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) token java.lang.String ( METHOD_1 void static private 
private void METHOD_1 ( final TYPE_1 VAR_1 , final short VAR_2 , final short VAR_3 ) { METHOD_1 ( VAR_1 , java.lang.String . METHOD_2 ( VAR_2 ) , java.lang.String . METHOD_2 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( METHOD_2 . java.lang.String , ) VAR_2 ( METHOD_2 . java.lang.String , VAR_1 ( METHOD_1 { ) VAR_3 short final , VAR_2 short final , VAR_1 TYPE_1 final ( METHOD_1 void private 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , null , null , true ) ; } } ; ) true , null , null , ) ( TYPE_1 new , changeId ( submit { java.lang.Exception throws ) changeId java.lang.String ( submit void protected 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; final TYPE_1 VAR_2 = METHOD_2 ( ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_4 ; ) VAR_2 ( METHOD_3 ; ) ( METHOD_2 = VAR_2 TYPE_1 final ; ) VAR_1 ( METHOD_3 ; ) ( METHOD_2 = VAR_1 TYPE_1 final { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 < TYPE_2 < TYPE_3 > > VAR_1 ) { new TYPE_4 ( TYPE_3 . base ( project ) ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 ( METHOD_2 . ) ) project ( base . TYPE_3 ( TYPE_4 new { ) VAR_1 > > TYPE_3 < TYPE_2 < TYPE_1 , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 void static public 
public void METHOD_1 ( final TYPE_1 < java.lang.String > event ) { TYPE_2 . display ( event . getValue ( ) ) ; } } ; ) ) ( getValue . event ( display . TYPE_2 { ) event > java.lang.String < TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( final java.lang.String name ) { VAR_1 = ( name ! = null ) ? name . METHOD_2 ( ) : null ; } } ; null : ) ( METHOD_2 . name ? ) null = ! name ( = VAR_1 { ) name java.lang.String final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_2 refs ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change . getProject ( ) , change , false , refs ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) refs , false , change , ) ( getProject . change , args ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) refs TYPE_2 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
private org.eclipse.jgit.lib.Repository METHOD_1 ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return VAR_1 . METHOD_1 ( name ) ; } catch ( java.io.IOException err ) { VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) ; return null ; } } } } ; null return ; ) err , ) ) ) ( get . name ( + STRING_1 ( ( METHOD_2 . VAR_2 { ) err java.io.IOException ( catch } ; ) name ( METHOD_1 . VAR_1 return { try { ) name com.google.gerrit.reviewdb.client.Project.NameKey final ( METHOD_1 org.eclipse.jgit.lib.Repository private 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( ( name + STRING_2 ) ) . create ( ) . get ( ) . name ) ; } } ; ) name . ) ( get . ) ( create . ) ) STRING_2 + name ( ( name . ) ( projects . VAR_1 ( isEqualTo . ) name ( com.google.common.truth.Truth.assertThat ; STRING_1 = name java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
boolean METHOD_1 ( int b ) { return ( b == 0 ) || ( ( METHOD_2 ( ( b - 1 ) ) ) == CHAR_1 ) ; } } ; ) CHAR_1 == ) ) ) 1 - b ( ( METHOD_2 ( ( || ) 0 == b ( return { ) b int ( METHOD_1 boolean 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 , VAR_1 ( METHOD_1 . ) ( METHOD_2 return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String m , java.lang.String t , java.lang.String r , java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String , r java.lang.String , t java.lang.String , m java.lang.String , e java.lang.String , d java.lang.String ( METHOD_1 void native final static private 
public java.lang.String id ( ) { return TYPE_1 . toString ( change . getChange ( ) . getId ( ) . get ( ) ) ; } } ; ) ) ( get . ) ( getId . ) ( getChange . change ( toString . TYPE_1 return { ) ( id java.lang.String public 
public void run ( ) { try { TYPE_1 . METHOD_1 ( VAR_1 . METHOD_2 ( ) , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { VAR_2 . METHOD_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( METHOD_3 . VAR_2 { ) e java.io.IOException ( catch } ; ) ) ( TYPE_2 new , ) ( METHOD_2 . VAR_1 ( METHOD_1 . TYPE_1 { try { ) ( run void public 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ; } } ; ) STRING_5 , STRING_4 ( METHOD_3 . VAR_1 ; ) STRING_3 , STRING_2 ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) VAR_1 TYPE_1 final ( METHOD_1 void private 
protected int METHOD_1 ( TYPE_1 e ) { return e . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . e return { ) e TYPE_1 ( METHOD_1 int protected 
private TYPE_1 . ProjectConfig METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , true ) ; } } ; ) true , VAR_1 ( METHOD_1 return { java.lang.Exception throws ) VAR_1 java.lang.String ( METHOD_1 ProjectConfig . TYPE_1 private 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) ; install ( new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new ( install ; ) VAR_3 ( in . ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , TYPE_1 . format ( INT_1 ) ) ; assertEquals ( STRING_2 , TYPE_1 . format ( - INT_2 ) ) ; assertEquals ( STRING_3 , TYPE_1 . format ( - INT_3 ) ) ; } } ; ) ) INT_3 - ( format . TYPE_1 , STRING_3 ( assertEquals ; ) ) INT_2 - ( format . TYPE_1 , STRING_2 ( assertEquals ; ) ) INT_1 ( format . TYPE_1 , STRING_1 ( assertEquals { ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( final com.google.gerrit.reviewdb.client.PatchSet.Id ps ) { return ( ( STRING_1 + ( ps . getParentKey ( ) ) ) + STRING_2 ) + ( ps . get ( ) ) ; } } ; ) ) ( get . ps ( + ) STRING_2 + ) ) ) ( getParentKey . ps ( + STRING_1 ( ( return { ) ps com.google.gerrit.reviewdb.client.PatchSet.Id final ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( TYPE_1 ctx ) throws java.io.IOException { ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 , VAR_2 , VAR_3 ) ) ; } } ; ) ) VAR_3 , VAR_2 , VAR_1 ( ReceiveCommand . TYPE_2 new ( METHOD_2 . ctx { java.io.IOException throws ) ctx TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { } } { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } } } ; null = VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
public final boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return true ; } else { METHOD_3 ( new java.lang.Exception ( VAR_1 ) ) ; return false ; } } } } ; false return ; ) ) VAR_1 ( java.lang.Exception new ( METHOD_3 { else } ; true return { ) ) ( METHOD_2 ( if { ) ( METHOD_1 boolean final public 
private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 ctl ) throws com.google.gwtorm.server.OrmException { return ctl . METHOD_2 ( VAR_1 . data ( ) . change ( ) ) . METHOD_3 ( VAR_1 . patchSet ( ) , VAR_1 . data ( ) ) ; } } ; ) ) ( data . VAR_1 , ) ( patchSet . VAR_1 ( METHOD_3 . ) ) ( change . ) ( data . VAR_1 ( METHOD_2 . ctl return { com.google.gwtorm.server.OrmException throws ) ctl TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 boolean static private 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 ( || ) ) VAR_1 ( METHOD_2 ( return { ) ( METHOD_1 boolean public 
public < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_4 < TYPE_1 , TYPE_2 > VAR_1 , TYPE_5 < TYPE_1 , TYPE_2 > VAR_2 ) { return TYPE_6 . METHOD_1 ( create ( VAR_1 , false ) , VAR_2 ) ; } } ; ) VAR_2 , ) false , VAR_1 ( create ( METHOD_1 . TYPE_6 return { ) VAR_2 > TYPE_2 , TYPE_1 < TYPE_5 , VAR_1 > TYPE_2 , TYPE_1 < TYPE_4 ( METHOD_1 > TYPE_2 , TYPE_1 < TYPE_3 > TYPE_2 , TYPE_1 < public 
private void METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 < TYPE_2 > > VAR_2 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . add ( VAR_3 ) ; if ( VAR_1 ) { VAR_2 . add ( VAR_4 ) ; } METHOD_3 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_3 } ; ) VAR_4 ( add . VAR_2 { ) VAR_1 ( if ; ) VAR_3 ( add . VAR_2 ; ) ( METHOD_2 . TYPE_3 = VAR_2 > > TYPE_2 < TYPE_1 < java.util.List { ) VAR_1 boolean ( METHOD_1 void private 
public void delete ( ) throws TYPE_1 { try { VAR_1 . get ( ) . apply ( revision , null ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_1 new throw { ) e java.io.IOException | com.google.gwtorm.server.OrmException ( catch } ; ) null , revision ( apply . ) ( get . VAR_1 { try { TYPE_1 throws ) ( delete void public 
public final void METHOD_1 ( ) throws java.lang.Exception { server . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . server { java.lang.Exception throws ) ( METHOD_1 void final public 
public void METHOD_1 ( ) throws java.lang.Exception { repo = TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( project ) ) ; METHOD_4 ( project , STRING_1 ) ; } } ; ) STRING_1 , project ( METHOD_4 ; ) ) project ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_1 = repo { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 = true ; VAR_3 . METHOD_2 ( info . METHOD_3 ( ) ) ; } else if ( ! ( VAR_1 . isEmpty ( ) ) ) { METHOD_4 ( true ) ; } } } } ; ) true ( METHOD_4 { ) ) ) ( isEmpty . VAR_1 ( ! ( if else } ; ) ) ( METHOD_3 . info ( METHOD_2 . VAR_3 ; true = VAR_2 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 void 
public TYPE_1 < ? > index ( com.google.gerrit.reviewdb.client.Change change ) ; ; ) change com.google.gerrit.reviewdb.client.Change ( index > ? < TYPE_1 public 
private static boolean METHOD_1 ( TYPE_1 b ) { if ( b == null ) { return false ; } return b . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . b return } ; false return { ) null == b ( if { ) b TYPE_1 ( METHOD_1 boolean static private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 , java.io.IOException { return new TYPE_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . get ( VAR_1 , id ) ) ; } } ; ) ) id , VAR_1 ( get . VAR_2 , ) ( METHOD_2 . VAR_1 ( TYPE_1 new return { java.io.IOException , TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
protected abstract int METHOD_1 ( TYPE_1 e ) ; ; ) e TYPE_1 ( METHOD_1 int abstract protected 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.client . AccountGroup VAR_1 , TYPE_1 VAR_2 ) throws com.google.gwtorm.server.OrmException { return VAR_3 . METHOD_2 ( VAR_4 . get ( ) , VAR_1 . getId ( ) , VAR_2 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_2 , ) ( getId . VAR_1 , ) ( get . VAR_4 ( METHOD_2 . VAR_3 return { com.google.gwtorm.server.OrmException throws ) VAR_2 TYPE_1 , VAR_1 AccountGroup . com.google.gerrit.reviewdb.client ( METHOD_1 boolean private 
public TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > get ( ) { try { return new TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > ( VAR_1 , VAR_2 . ReviewDb class ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) class ReviewDb . VAR_2 , VAR_1 ( > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 new return { try { ) ( get > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 public 
public void METHOD_1 ( java.lang.String query ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) ; } VAR_1 . add ( query ) ; } } ; ) query ( add . VAR_1 } ; ) ( METHOD_2 . TYPE_1 = VAR_1 { ) null == ) VAR_1 ( ( if { ) query java.lang.String ( METHOD_1 void public 
public java.lang.String METHOD_1 ( ) { return new TYPE_1 ( METHOD_2 ( ) ) . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . ) ) ( METHOD_2 ( TYPE_1 new return { ) ( METHOD_1 java.lang.String public 
public static TYPE_1 METHOD_1 ( int id , int VAR_1 , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_2 ( id , VAR_1 ) . view ( STRING_1 ) . id ( VAR_2 ) ; } } ; ) VAR_2 ( id . ) STRING_1 ( view . ) VAR_1 , id ( METHOD_2 . TYPE_2 return { ) VAR_2 java.lang.String , VAR_1 int , id int ( METHOD_1 TYPE_1 static public 
boolean METHOD_1 ( ) { return VAR_1 . METHOD_2 ( user ) ; } } ; ) user ( METHOD_2 . VAR_1 return { ) ( METHOD_1 boolean 
public static void METHOD_1 ( TYPE_1 . Factory VAR_1 , TYPE_2 . Change change ) { VAR_1 . create ( change . METHOD_2 ( ) ) . METHOD_3 ( change ) ; } } ; ) change ( METHOD_3 . ) ) ( METHOD_2 . change ( create . VAR_1 { ) change Change . TYPE_2 , VAR_1 Factory . TYPE_1 ( METHOD_1 void static public 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd ) ; } } ; ) cd ( TYPE_3 new return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > TYPE_2 < TYPE_1 public 
public java.lang.String METHOD_1 ( ) { return null ; } } ; null return { ) ( METHOD_1 java.lang.String public 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . Id patch , TYPE_4 . Id VAR_1 ) throws TYPE_5 . OrmException ; ; OrmException . TYPE_5 throws ) VAR_1 Id . TYPE_4 , patch Id . TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
public boolean METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_1 VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , args . rw , VAR_2 ) ; } } ; ) VAR_2 , rw . args , VAR_1 , repo . args , VAR_4 ( METHOD_2 . VAR_3 return { TYPE_2 throws ) VAR_2 TYPE_1 final , VAR_1 TYPE_1 final ( METHOD_1 boolean public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { return TYPE_1 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , VAR_5 , VAR_4 , VAR_3 ( METHOD_2 . TYPE_1 return { java.lang.Exception throws ) VAR_2 ... java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
protected final TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( this ) ; for ( TYPE_2 c : VAR_2 ) { VAR_1 . METHOD_2 ( c , c ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) c , c ( METHOD_2 . VAR_1 { ) VAR_2 : c TYPE_2 ( for ; ) this ( TYPE_1 new = VAR_1 TYPE_1 final { ) ( METHOD_1 TYPE_1 final protected 
public void METHOD_1 ( TYPE_1 . Change change , TYPE_1 . Account account , java.lang.String VAR_1 , TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException ; ; OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 , VAR_1 java.lang.String , account Account . TYPE_1 , change Change . TYPE_1 ( METHOD_1 void public 
public void close ( ) throws java.io.IOException { rw . METHOD_1 ( ) ; repo . close ( ) ; } } ; ) ( close . repo ; ) ( METHOD_1 . rw { java.io.IOException throws ) ( close void public 
public java.lang.String METHOD_1 ( int size ) throws TYPE_1 { TYPE_2 VAR_1 = VAR_2 . get ( ) ; VAR_1 . METHOD_2 ( size ) ; return VAR_1 . apply ( account ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) account ( apply . VAR_1 return ; ) size ( METHOD_2 . VAR_1 ; ) ( get . VAR_2 = VAR_1 TYPE_2 { TYPE_1 throws ) size int ( METHOD_1 java.lang.String public 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return VAR_1 . create ( change ) ; } } ; ) change ( create . VAR_1 return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 private 
public java.lang.String METHOD_1 ( ) throws TYPE_1 { throw new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new throw { TYPE_1 throws ) ( METHOD_1 java.lang.String public 
Project . NameKey METHOD_1 ( ) { return project . getProject ( ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) ( getProject . project return { ) ( METHOD_1 NameKey . Project 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 schema = METHOD_2 ( ) ; final int a = schema . METHOD_3 ( ) ; final int b = schema . METHOD_3 ( ) ; METHOD_4 ( ( a ! = b ) ) ; } } ; ) ) b = ! a ( ( METHOD_4 ; ) ( METHOD_3 . schema = b int final ; ) ( METHOD_3 . schema = a int final ; ) ( METHOD_2 = schema TYPE_1 final { java.lang.Exception throws ) ( METHOD_1 void public 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , VAR_2 ) ) ; } return null ; } } ; null return } ; ) ) VAR_2 , VAR_1 ( METHOD_4 , VAR_1 ( METHOD_3 return { ) ) VAR_1 ( METHOD_2 . TYPE_2 ( if { ) VAR_2 boolean , VAR_1 java.lang.String ( METHOD_1 TYPE_1 
private boolean METHOD_1 ( TYPE_1 config , java.lang.String ref ) { return METHOD_2 ( config , STRING_1 , ref , true ) ; } } ; ) true , ref , STRING_1 , config ( METHOD_2 return { ) ref java.lang.String , config TYPE_1 ( METHOD_1 boolean private 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 . METHOD_2 ( ) ) { if ( VAR_2 . getName ( ) . METHOD_3 ( VAR_3 ) ) { return VAR_2 ; } } return null ; } } ; null return } } ; VAR_2 return { ) ) VAR_3 ( METHOD_3 . ) ( getName . VAR_2 ( if { ) ) ( METHOD_2 . VAR_1 : VAR_2 TYPE_1 ( for { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . create ( user ) ; } } ; ) user ( create . VAR_1 return { ) ( METHOD_1 TYPE_1 public 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < com.google.gerrit.reviewdb.server.ReviewDb > db ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_2 ) == null ) { METHOD_2 ( VAR_1 , db ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) db , VAR_1 ( METHOD_2 { ) null == ) VAR_2 ( ( if { java.io.IOException , com.google.gwtorm.server.OrmException throws ) db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 java.lang.String public 
public void run ( ) { c . close ( ) ; } } ; ) ( close . c { ) ( run void public 
private final native void METHOD_1 ( int line ) ; ; ) line int ( METHOD_1 void native final private 
void METHOD_1 ( TYPE_1 cm ) { if ( VAR_1 . METHOD_2 ( ) ) { cm . METHOD_3 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_3 . cm { ) ) ( METHOD_2 . VAR_1 ( if { ) cm TYPE_1 ( METHOD_1 void 
private java.lang.String url ( TYPE_1 r ) { return TYPE_2 . METHOD_1 ( changeId , r . id ( ) ) ; } } ; ) ) ( id . r , changeId ( METHOD_1 . TYPE_2 return { ) r TYPE_1 ( url java.lang.String private 
public void METHOD_1 ( ) { VAR_1 . close ( ) ; db . close ( ) ; } } ; ) ( close . db ; ) ( close . VAR_1 { ) ( METHOD_1 void public 
protected static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_3 instanceof VAR_1 ( return } ; true return { ) TYPE_2 instanceof VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static protected 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_3 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_3 . VAR_3 ; ) STRING_1 ( METHOD_3 . VAR_2 ; ) ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( ) throws TYPE_1 { for ( final java.lang.String name : METHOD_2 ( ) ) { p . METHOD_3 ( name ) ; p . METHOD_3 ( CHAR_1 ) ; } p . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . p } ; ) CHAR_1 ( METHOD_3 . p ; ) name ( METHOD_3 . p { ) ) ( METHOD_2 : name java.lang.String final ( for { TYPE_1 throws ) ( METHOD_1 void private 
public static void delete ( int id , java.lang.String path , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_1 ( id , path ) . delete ( VAR_1 ) ; } } ; ) VAR_1 ( delete . ) path , id ( METHOD_1 . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , path java.lang.String , id int ( delete void static public 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; factory ( VAR_3 . Factory class ) ; factory ( VAR_4 . Factory class ) ; } } ; ) class Factory . VAR_4 ( factory ; ) class Factory . VAR_3 ( factory ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void protected 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( cd . METHOD_2 ( VAR_1 ) ) || ( VAR_2 . METHOD_1 ( cd ) ) ; } } ; ) ) cd ( METHOD_1 . VAR_2 ( || ) ) VAR_1 ( METHOD_2 . cd ( return { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
private static java.lang.String METHOD_1 ( java.lang.String branch ) { if ( branch . METHOD_2 ( VAR_1 ) ) { return branch ; } else { return ( VAR_2 ) + branch ; } } } } ; branch + ) VAR_2 ( return { else } ; branch return { ) ) VAR_1 ( METHOD_2 . branch ( if { ) branch java.lang.String ( METHOD_1 java.lang.String static private 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 . ChangeInfo > VAR_1 ) { TYPE_3 . METHOD_1 ( id ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) id ( METHOD_1 . TYPE_3 { ) VAR_1 > ChangeInfo . TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( final boolean VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super ; ) VAR_1 ( METHOD_2 . TYPE_1 { ) VAR_1 boolean final ( METHOD_1 void public 
private static boolean METHOD_1 ( java.lang.String name ) { return ( TYPE_1 . METHOD_2 ( name , STRING_1 ) ) || ( TYPE_1 . METHOD_2 ( name , STRING_2 ) ) ; } } ; ) ) STRING_2 , name ( METHOD_2 . TYPE_1 ( || ) ) STRING_1 , name ( METHOD_2 . TYPE_1 ( return { ) name java.lang.String ( METHOD_1 boolean static private 
public void METHOD_1 ( java.lang.String label , short value ) { approvals . put ( label . METHOD_2 ( ) , value ) ; } } ; ) value , ) ( METHOD_2 . label ( put . approvals { ) value short , label java.lang.String ( METHOD_1 void public 
private static boolean METHOD_1 ( java.lang.String VAR_1 ) { return ( ( STRING_1 . METHOD_2 ( VAR_1 ) ) || ( STRING_2 . METHOD_2 ( VAR_1 ) ) ) || ( STRING_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . STRING_3 ( || ) ) ) VAR_1 ( METHOD_2 . STRING_2 ( || ) ) VAR_1 ( METHOD_2 . STRING_1 ( ( return { ) VAR_1 java.lang.String ( METHOD_1 boolean static private 
public boolean equals ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { final TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return VAR_3 . equals ( VAR_2 . key ) ; } return false ; } } ; false return } ; ) key . VAR_2 ( equals . VAR_3 return ; ) ) VAR_1 ( ) TYPE_2 ( ( = VAR_2 TYPE_2 final { ) TYPE_2 instanceof VAR_1 ( if { ) VAR_1 TYPE_1 final ( equals boolean public 
public java.util.List < TYPE_1 > run ( TYPE_2 . ReviewDb db ) throws TYPE_3 . OrmException { return db . METHOD_1 ( ) . METHOD_2 ( TYPE_4 . getAccountId ( ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ( getAccountId . TYPE_4 ( METHOD_2 . ) ( METHOD_1 . db return { OrmException . TYPE_3 throws ) db ReviewDb . TYPE_2 ( run > TYPE_1 < java.util.List public 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 . METHOD_2 ( null ) , INT_1 , STRING_1 , VAR_1 , STRING_1 ) ; } } ; ) STRING_1 , VAR_1 , STRING_1 , INT_1 , ) null ( METHOD_2 . TYPE_2 ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static public 
private void METHOD_1 ( final int row , final int VAR_1 , final java.lang.String name ) { METHOD_2 ( ) . METHOD_1 ( row , VAR_1 , name ) ; } } ; ) name , VAR_1 , row ( METHOD_1 . ) ( METHOD_2 { ) name java.lang.String final , VAR_1 int final , row int final ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 t ) { VAR_1 . error ( ( STRING_1 + ( c . getId ( ) ) ) , t ) ; VAR_2 . set ( false ) ; VAR_3 . update ( 1 ) ; } } ; ) 1 ( update . VAR_3 ; ) false ( set . VAR_2 ; ) t , ) ) ) ( getId . c ( + STRING_1 ( ( error . VAR_1 { ) t TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 . VAR_1 , ) ) STRING_2 ( METHOD_2 ( query ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private boolean isEmpty ( ) { return ( VAR_1 . isEmpty ( ) ) & & ( VAR_2 . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . VAR_2 ( & & ) ) ( isEmpty . VAR_1 ( return { ) ( isEmpty boolean private 
private TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.lang.Exception { com.google.gerrit.reviewdb.client.Change c = METHOD_2 ( ) ; return new TYPE_1 ( c . getProject ( ) , c . getId ( ) , VAR_1 , walk , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , walk , VAR_1 , ) ( getId . c , ) ( getProject . c ( TYPE_1 new return ; ) ( METHOD_2 = c com.google.gerrit.reviewdb.client.Change { java.lang.Exception throws ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 TYPE_1 private 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) false , ) change ( com.google.gerrit.server.query.change.ChangeData new ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 return { TYPE_3 throws ) VAR_1 TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List static private 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( id ) ) ; } } ; ) ) id ( commit . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) id org.eclipse.jgit.lib.ObjectId ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 ) ; VAR_4 . put ( VAR_1 , VAR_3 ) ; return VAR_3 ; } } ; VAR_3 return ; ) VAR_3 , VAR_1 ( put . VAR_4 ; ) VAR_2 ( TYPE_1 new = VAR_3 TYPE_1 { ) VAR_2 int final , VAR_1 java.lang.String final ( METHOD_1 TYPE_1 public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return new TYPE_4 < TYPE_2 > ( TYPE_5 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_5 ( > TYPE_2 < TYPE_4 new return { TYPE_3 throws ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getKey ( ) ) ) ) ) ; this . psId = psId ; } } ; psId = psId . this ; ) ) ) ) ) ( getKey . ) ( getChange ( equals . ) ( getParentKey . psId ( || ) null == psId ( ( ( METHOD_2 . TYPE_1 { ) psId com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void public 
public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( > TYPE_2 < TYPE_1 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 > TYPE_2 < TYPE_1 static public 
public int METHOD_1 ( ) { return 1 ; } } ; 1 return { ) ( METHOD_1 int public 
void METHOD_1 ( ) { final TYPE_1 d = new TYPE_1 ( VAR_1 , new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { METHOD_2 ( ) ; } } ) ; d . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . d ; ) } } ; ) ( METHOD_2 { ) result TYPE_3 final ( onSuccess void public { ) ( > TYPE_3 < TYPE_2 new , VAR_1 ( TYPE_1 new = d TYPE_1 final { ) ( METHOD_1 void 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) throws java.io.IOException { if ( log . METHOD_2 ( ) ) { log . METHOD_3 ( STRING_1 , new TYPE_2 [ ] { VAR_1 , VAR_2 , VAR_3 } ) ; } } } } ; ) } VAR_3 , VAR_2 , VAR_1 { ] [ TYPE_2 new , STRING_1 ( METHOD_3 . log { ) ) ( METHOD_2 . log ( if { java.io.IOException throws ) VAR_3 java.lang.String , VAR_2 TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . ChangeInfo c = event . getChange ( ) ; METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) . email ) ; } } ; ) email . ) ( METHOD_3 . event , VAR_1 , ) project . c ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 ; ) ( getChange . event = c ChangeInfo . TYPE_2 { ) event TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 cm , boolean VAR_1 ) { VAR_2 = cm ; if ( VAR_1 ) { ( VAR_3 ) ++ ; } } } } ; ++ ) VAR_3 ( { ) VAR_1 ( if ; cm = VAR_2 { ) VAR_1 boolean , cm TYPE_1 final ( METHOD_1 void public 
public static long METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { return VAR_2 ; } return TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( 0 , INT_1 ) , INT_2 ) ; } } ; ) INT_2 , ) INT_1 , 0 ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_1 return } ; VAR_2 return { ) ) VAR_1 ( equals . STRING_1 ( if { ) VAR_1 java.lang.String ( METHOD_1 long static public 
private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( TYPE_2 . METHOD_1 ( VAR_1 ) ) || ( ( VAR_1 instanceof TYPE_3 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_3 instanceof VAR_1 ( ( || ) ) VAR_1 ( METHOD_1 . TYPE_2 ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean static private 
public TYPE_1 file ( java.lang.String path ) throws TYPE_2 { try { return VAR_1 . create ( VAR_2 . METHOD_1 ( revision , TYPE_3 . METHOD_2 ( path ) ) ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException ( catch } ; ) ) ) path ( METHOD_2 . TYPE_3 , revision ( METHOD_1 . VAR_2 ( create . VAR_1 return { try { TYPE_2 throws ) path java.lang.String ( file TYPE_1 public 
private TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 TYPE_1 private 
public void delete ( int id ) throws java.io.IOException ; ; java.io.IOException throws ) id int ( delete void public 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) VAR_1 ( METHOD_4 . TYPE_3 , ) VAR_1 ( METHOD_3 . TYPE_3 ( METHOD_2 . TYPE_2 return { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String static public 
private java.util.Map < java.lang.String , java.util.List < TYPE_1 > > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } ) ; } } ; ) } { ) ( > > > TYPE_1 < java.util.List , java.lang.String < java.util.Map < TYPE_2 new , path ( METHOD_2 return { java.lang.Exception throws ) path java.lang.String ( METHOD_1 > > TYPE_1 < java.util.List , java.lang.String < java.util.Map private 
boolean METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) instanceof TYPE_1 ) & & ( ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ) ) ( METHOD_2 ( ) TYPE_1 ( ( ( & & ) TYPE_1 instanceof ) ) ( METHOD_2 ( ( return { ) ( METHOD_1 boolean 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 ) ; } } ; ) VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_2 . TYPE_1 return { ) VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 , int line ) { return TYPE_1 . METHOD_2 ( STRING_1 , TYPE_2 . base ( ) , revision , VAR_1 , null , line ) ; } } ; ) line , null , VAR_1 , revision , ) ( base . TYPE_2 , STRING_1 ( METHOD_2 . TYPE_1 return { ) line int , VAR_1 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
public TYPE_1 get ( ) throws TYPE_2 , com.google.gwtorm.server.OrmException { final TYPE_3 < com.google.gerrit.reviewdb.client . AccountGroup > VAR_1 = VAR_2 . METHOD_1 ( ) ; return METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 ( METHOD_2 return ; ) ( METHOD_1 . VAR_2 = VAR_1 > AccountGroup . com.google.gerrit.reviewdb.client < TYPE_3 final { com.google.gwtorm.server.OrmException , TYPE_2 throws ) ( get TYPE_1 public 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( new TYPE_2 ( ( ( TYPE_3 ) ( event ) ) ) ) ; } } ; ) ) ) ) event ( ) TYPE_3 ( ( ( TYPE_2 new ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( final TYPE_1 result ) { projects . display ( result ) ; projects . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . projects ; ) result ( display . projects { ) result TYPE_1 final ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( final java.lang.String name ) { this . name = name ; return this ; } } ; this return ; name = name . this { ) name java.lang.String final ( METHOD_1 TYPE_1 public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) throws java.io.IOException { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; commit ( ) ; } } ; ) ( commit ; ) VAR_2 , VAR_1 ( METHOD_2 . VAR_3 { java.io.IOException throws ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
private boolean METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , TYPE_2 VAR_2 , byte [ ] VAR_3 ) { return ( VAR_1 . METHOD_2 ( VAR_2 ) ) & & ( TYPE_3 . equals ( VAR_3 , METHOD_3 ( VAR_1 , VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 , VAR_1 ( METHOD_3 , VAR_3 ( equals . TYPE_3 ( & & ) ) VAR_2 ( METHOD_2 . VAR_1 ( return { ) VAR_3 ] [ byte , VAR_2 TYPE_2 , VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 boolean private 
public synchronized void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; METHOD_3 ( false ) ; VAR_3 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_3 ; ) false ( METHOD_3 ; ) ) ) ) ( METHOD_2 . VAR_2 ( + STRING_1 ( ( info . VAR_1 { ) ( METHOD_1 void synchronized public 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) ( METHOD_2 { ) event TYPE_1 ( METHOD_1 void public 
public void onSuccess ( java.lang.String result ) { TYPE_1 edit = new TYPE_1 ( VAR_1 , result , path , VAR_2 , VAR_3 , VAR_4 ) ; edit . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . edit ; ) VAR_4 , VAR_3 , VAR_2 , path , result , VAR_1 ( TYPE_1 new = edit TYPE_1 { ) result java.lang.String ( onSuccess void public 
private void METHOD_1 ( TYPE_1 . ProjectConfig cfg ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . create ( project ) ; try { cfg . commit ( VAR_1 ) ; } finally { VAR_1 . close ( ) ; } } } } ; ) ( close . VAR_1 { finally } ; ) VAR_1 ( commit . cfg { try ; ) project ( create . VAR_2 = VAR_1 TYPE_2 { java.lang.Exception throws ) cfg ProjectConfig . TYPE_1 ( METHOD_1 void private 
private java.lang.String METHOD_1 ( java.lang.String project ) { int i = project . METHOD_2 ( CHAR_1 ) ; if ( i < 0 ) { return project ; } else { return project . METHOD_3 ( ( i + 1 ) ) ; } } } } ; ) ) 1 + i ( ( METHOD_3 . project return { else } ; project return { ) 0 < i ( if ; ) CHAR_1 ( METHOD_2 . project = i int { ) project java.lang.String ( METHOD_1 java.lang.String private 
void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , java.lang.String message , TYPE_1 < TYPE_2 > VAR_2 ) ; ; ) VAR_2 > TYPE_2 < TYPE_1 , message java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void 
TYPE_1 . Branch METHOD_1 ( TYPE_2 . NameKey name ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) name NameKey . TYPE_2 ( METHOD_1 Branch . TYPE_1 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_2 ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
public TYPE_1 create ( final TYPE_2 VAR_1 , final java.lang.String id ) throws TYPE_3 { return new TYPE_1 ( put , TYPE_4 . METHOD_1 ( id ) ) ; } } ; ) ) id ( METHOD_1 . TYPE_4 , put ( TYPE_1 new return { TYPE_3 throws ) id java.lang.String final , VAR_1 TYPE_2 final ( create TYPE_1 public 
public TYPE_1 create ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { return VAR_2 . create ( VAR_1 . getChange ( ) , id . get ( ) ) ; } } ; ) ) ( get . id , ) ( getChange . VAR_1 ( create . VAR_2 return { TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( create TYPE_1 public 
public final native TYPE_1 METHOD_1 ( ) ; ; ) ( METHOD_1 TYPE_1 native final public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) ( display ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd , false ) ; } } ; ) false , cd ( TYPE_3 new return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > TYPE_2 < TYPE_1 public 
protected java.lang.String METHOD_1 ( final java.lang.String query ) { return ( STRING_1 + ( TYPE_1 . METHOD_2 ( query ) ) ) + STRING_2 ; } } ; STRING_2 + ) ) ) query ( METHOD_2 . TYPE_1 ( + STRING_1 ( return { ) query java.lang.String final ( METHOD_1 java.lang.String protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_3 . VAR_1 , STRING_1 ( assertEquals ; ) null ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public com.google.gerrit.reviewdb.client.Change change ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db ) throws com.google.gwtorm.server.OrmException { if ( ( change ) == null ) { change = db . get ( ) . changes ( ) . get ( VAR_1 ) ; } return change ; } } ; change return } ; ) VAR_1 ( get . ) ( changes . ) ( get . db = change { ) null == ) change ( ( if { com.google.gwtorm.server.OrmException throws ) db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 ( change com.google.gerrit.reviewdb.client.Change public 
static boolean METHOD_1 ( java.lang.String s ) { return ( null ! = s ) & & ( ( ( s . equals ( STRING_1 ) ) || ( s . METHOD_2 ( STRING_2 ) ) ) || ( TYPE_1 . METHOD_1 ( s ) ) ) ; } } ; ) ) ) s ( METHOD_1 . TYPE_1 ( || ) ) ) STRING_2 ( METHOD_2 . s ( || ) ) STRING_1 ( equals . s ( ( ( & & ) s = ! null ( return { ) s java.lang.String ( METHOD_1 boolean static 
public void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) ; } if ( ( VAR_2 ) ! = null ) { VAR_2 . METHOD_3 ( true ) ; } } } } ; ) true ( METHOD_3 . VAR_2 { ) null = ! ) VAR_2 ( ( if } ; ) ( METHOD_2 { ) VAR_1 ( if { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return TYPE_2 . METHOD_2 ( TYPE_3 . getName ( ) , id . get ( ) ) ; } } ; ) ) ( get . id , ) ( getName . TYPE_3 ( METHOD_2 . TYPE_2 return { ) id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( ) { if ( ! ( m . METHOD_1 ( name . value ( ) , VAR_1 ) ) ) { throw new TYPE_1 ( java.lang.String.format ( STRING_1 , name . value ( ) ) ) ; } } } } ; ) ) ) ( value . name , STRING_1 ( java.lang.String.format ( TYPE_1 new throw { ) ) ) VAR_1 , ) ( value . name ( METHOD_1 . m ( ! ( if { ) ( METHOD_1 void public 
protected Project . NameKey METHOD_1 ( ) { return name ; } } ; name return { ) ( METHOD_1 NameKey . Project protected 
public TYPE_1 change ( com.google.gerrit.server.query.change.ChangeData cd ) { try { return cd . METHOD_1 ( ) . METHOD_2 ( METHOD_3 ( ) ) . METHOD_4 ( cd ) ; } catch ( com.google.gwtorm.server.OrmException e ) { return TYPE_2 . change ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( change . TYPE_2 return { ) e com.google.gwtorm.server.OrmException ( catch } ; ) cd ( METHOD_4 . ) ) ( METHOD_3 ( METHOD_2 . ) ( METHOD_1 . cd return { try { ) cd com.google.gerrit.server.query.change.ChangeData ( change TYPE_1 public 
public TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) { return TYPE_2 . METHOD_2 ( this , repo , cd , patch ) ; } } ; ) patch , cd , repo , this ( METHOD_2 . TYPE_2 return { ) patch com.google.gerrit.reviewdb.client.PatchSet , cd com.google.gerrit.server.query.change.ChangeData , repo org.eclipse.jgit.lib.Repository ( METHOD_1 TYPE_1 public 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return new TYPE_3 ( cd , true ) ; } } ; ) true , cd ( TYPE_3 new return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > TYPE_2 < TYPE_1 public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( ) ; } } ; ) ( METHOD_2 return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
private java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . getProject ( ) . getName ( ) ; } } ; ) ( getName . ) ( getProject . ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 return { ) ( METHOD_1 java.lang.String private 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 . getValue ( ) , VAR_1 . getName ( ) ) ; } } ; ) ) ( getName . VAR_1 , ) ( getValue . VAR_1 ( TYPE_1 new return { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( VAR_1 . getId ( ) , VAR_2 . getId ( ) , STRING_1 ) ) ; } } ; ) ) STRING_1 , ) ( getId . VAR_2 , ) ( getId . VAR_1 ( ReceiveCommand . TYPE_2 new ( METHOD_2 . ctx { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void public 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { r . add ( result ) ; VAR_1 = ! ( result . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . result ( ! = VAR_1 ; ) result ( add . r { ) result > > TYPE_3 < TYPE_2 < TYPE_1 ( onSuccess void public 
public Change . Key METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Change . Key ( change . id ) ; } } ; ) id . change ( Key . com.google.gerrit.reviewdb.client.Change new return { ) ( METHOD_1 Key . Change public 
private < TYPE_1 extends TYPE_2 < ? > > TYPE_3 < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } else { return TYPE_3 . METHOD_2 ( ) . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . ) ( METHOD_2 . TYPE_3 return { else } ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_3 return { ) VAR_1 ( if { ) ( METHOD_1 > TYPE_1 < TYPE_3 > > ? < TYPE_2 extends TYPE_1 < private 
void METHOD_1 ( ) { TYPE_1 . display ( TYPE_2 . METHOD_2 ( changeId ) ) ; } } ; ) ) changeId ( METHOD_2 . TYPE_2 ( display . TYPE_1 { ) ( METHOD_1 void 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ctl ) throws TYPE_3 { if ( ctl . METHOD_2 ( ) ) { return new TYPE_1 ( ctl ) ; } throw new TYPE_3 ( VAR_1 ) ; } } ; ) VAR_1 ( TYPE_3 new throw } ; ) ctl ( TYPE_1 new return { ) ) ( METHOD_2 . ctl ( if { TYPE_3 throws ) ctl TYPE_2 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
public static void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db , TYPE_2 < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . METHOD_2 ( db ) ; } } } } ; ) db ( METHOD_2 . cd { ) changes : cd com.google.gerrit.server.query.change.ChangeData ( for { com.google.gwtorm.server.OrmException throws ) changes > com.google.gerrit.server.query.change.ChangeData < TYPE_2 , db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 ( METHOD_1 void static public 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 , 0 ) ; } } ; ) 0 , 0 , 0 , ) ( METHOD_2 > TYPE_2 < Collections . VAR_5 , VAR_4 , VAR_1 , null , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String final ( METHOD_1 TYPE_1 static 
public TYPE_1 get ( final java.lang.String VAR_1 ) { final int index = METHOD_1 ( VAR_1 ) ; return 0 < = index ? VAR_2 [ index ] : TYPE_1 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . TYPE_1 : ] index [ VAR_2 ? index = < 0 return ; ) VAR_1 ( METHOD_1 = index int final { ) VAR_1 java.lang.String final ( get TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String query = VAR_1 . METHOD_2 ( TYPE_1 . of ( VAR_2 , STRING_1 , VAR_3 , STRING_2 ) ) ; com.google.common.truth.Truth.assertThat ( query ) . METHOD_3 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_3 . ) query ( com.google.common.truth.Truth.assertThat ; ) ) STRING_2 , VAR_3 , STRING_1 , VAR_2 ( of . TYPE_1 ( METHOD_2 . VAR_1 = query java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > create ( TYPE_3 < TYPE_1 > VAR_1 ) { return new TYPE_2 < TYPE_1 > ( new TYPE_4 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( TYPE_4 new ( > TYPE_1 < TYPE_2 new return { ) VAR_1 > TYPE_1 < TYPE_3 ( create > TYPE_1 < TYPE_2 > TYPE_1 < static public 
void close ( ) ; ; ) ( close void 
public void METHOD_1 ( TYPE_1 err ) { if ( TYPE_2 . METHOD_2 ( err ) ) { new TYPE_2 ( err . getMessage ( ) ) . METHOD_3 ( ) ; METHOD_4 ( ) ; } else { super . METHOD_1 ( err ) ; } } } } ; ) err ( METHOD_1 . super { else } ; ) ( METHOD_4 ; ) ( METHOD_3 . ) ) ( getMessage . err ( TYPE_2 new { ) ) err ( METHOD_2 . TYPE_2 ( if { ) err TYPE_1 ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 req , java.lang.String VAR_1 , java.lang.String path ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_3 return { ) path java.lang.String , VAR_1 java.lang.String , req TYPE_2 ( METHOD_1 TYPE_1 private 
private static TYPE_1 < TYPE_2 < ? > > METHOD_1 ( TYPE_1 < ? > e ) { TYPE_1 < TYPE_2 < ? > > b = ( ( TYPE_1 < TYPE_2 < ? > > ) ( e ) ) ; return b ; } } ; b return ; ) ) e ( ) > > ? < TYPE_2 < TYPE_1 ( ( = b > > ? < TYPE_2 < TYPE_1 { ) e > ? < TYPE_1 ( METHOD_1 > > ? < TYPE_2 < TYPE_1 static private 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) ; bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) ; bind ( VAR_5 class ) . to ( VAR_6 class ) ; bind ( VAR_7 class ) ; } } ; ) class VAR_7 ( bind ; ) class VAR_6 ( to . ) class VAR_5 ( bind ; ) VAR_4 ( METHOD_2 . ) class VAR_3 ( bind ; ) ui . VAR_2 ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected TYPE_1 . Result METHOD_1 ( TYPE_2 git ) throws java.io.IOException , TYPE_3 { TYPE_4 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ; return VAR_1 . to ( git , STRING_1 ) ; } } ; ) STRING_1 , git ( to . VAR_1 return ; ) ) ( METHOD_2 . admin , db ( create . VAR_2 = VAR_1 TYPE_4 { TYPE_3 , java.io.IOException throws ) git TYPE_2 ( METHOD_1 Result . TYPE_1 protected 
void METHOD_1 ( TYPE_1 e ) { if ( TYPE_2 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; } else { TYPE_2 . METHOD_3 ( METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 ( METHOD_3 . TYPE_2 { else } ; ) ( METHOD_1 . VAR_1 { ) ) ( METHOD_2 . TYPE_2 ( if { ) e TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; } } ; ) ( display ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 ) ; VAR_1 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) STRING_3 + ) ) ) ( get . project ( + STRING_2 ( ( ( get . VAR_1 ; ) STRING_1 , project ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public static TYPE_1 . Key < TYPE_2 > key ( final java.lang.String name ) { return TYPE_3 . get ( VAR_1 class , TYPE_4 . METHOD_1 ( name ) ) ; } } ; ) ) name ( METHOD_1 . TYPE_4 , class VAR_1 ( get . TYPE_3 return { ) name java.lang.String final ( key > TYPE_2 < Key . TYPE_1 static public 
public java.util.List < com.google.gerrit.reviewdb.client . PatchSetApproval > approvals ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_1 ( METHOD_2 ( db ) . values ( ) ) ; } } ; ) ) ( values . ) db ( METHOD_2 ( METHOD_1 . TYPE_2 return { com.google.gwtorm.server.OrmException throws ) db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 ( approvals > PatchSetApproval . com.google.gerrit.reviewdb.client < java.util.List public 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super ; ) true ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public final native int METHOD_1 ( ) ; ; ) ( METHOD_1 int native final public 
private TYPE_1 . Result METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ; return VAR_1 . to ( git , STRING_1 ) ; } } ; ) STRING_1 , git ( to . VAR_1 return ; ) ) ( METHOD_2 . admin , db ( create . VAR_2 = VAR_1 TYPE_3 { TYPE_2 , java.io.IOException throws ) ( METHOD_1 Result . TYPE_1 private 
private short METHOD_1 ( ) { final int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( 0 < = VAR_1 ) { return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; } return getValue ( ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ( getValue return } ; ) ) VAR_1 ( getValue . VAR_2 ( METHOD_3 . TYPE_1 return { ) VAR_1 = < 0 ( if ; ) ( METHOD_2 . VAR_2 = VAR_1 int final { ) ( METHOD_1 short private 
public static TYPE_1 METHOD_1 ( java.lang.String query ) { return TYPE_1 . METHOD_1 ( query , VAR_1 ) ; } } ; ) VAR_1 , query ( METHOD_1 . TYPE_1 return { ) query java.lang.String ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { METHOD_2 ( cd . getId ( ) , false ) ; } } ; ) false , ) ( getId . cd ( METHOD_2 { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { final int VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( 0 < = VAR_1 ) { return TYPE_1 . METHOD_3 ( VAR_2 . getValue ( VAR_1 ) ) ; } return value . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . value return } ; ) ) VAR_1 ( getValue . VAR_2 ( METHOD_3 . TYPE_1 return { ) VAR_1 = < 0 ( if ; ) ( METHOD_2 . VAR_2 = VAR_1 int final { ) ( METHOD_1 TYPE_1 private 
private static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , true ) ; } } ; ) true , STRING_2 , null , STRING_1 ( METHOD_2 . cfg return { ) cfg TYPE_1 ( METHOD_1 boolean static private 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , change ) ; } } ; ) change , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) change com.google.gerrit.reviewdb.client.Change ( create TYPE_1 public 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException , TYPE_3 { TYPE_4 config = new TYPE_4 ( TYPE_5 . METHOD_2 ( ) , VAR_2 ) ; config . METHOD_3 ( ) ; return config ; } } ; config return ; ) ( METHOD_3 . config ; ) VAR_2 , ) ( METHOD_2 . TYPE_5 ( TYPE_4 new = config TYPE_4 { TYPE_3 , java.io.IOException throws ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
public static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , name ) ; } } ; ) name , ) ( METHOD_2 . TYPE_3 ( TYPE_2 new return { ) name com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 TYPE_1 static public 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) > 0 ) { return TYPE_2 . METHOD_2 ( VAR_2 . METHOD_3 ( VAR_1 , STRING_1 ) ) ; } else { return TYPE_2 . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . TYPE_2 return { else } ; ) ) STRING_1 , VAR_1 ( METHOD_3 . VAR_2 ( METHOD_2 . TYPE_2 return { ) 0 > ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 private 
TYPE_1 . Project METHOD_1 ( TYPE_2 . NameKey name ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) name NameKey . TYPE_2 ( METHOD_1 Project . TYPE_1 
public void onSuccess ( final java.util.List < TYPE_1 > result ) { VAR_1 . display ( result ) ; VAR_1 . METHOD_1 ( true ) ; } } ; ) true ( METHOD_1 . VAR_1 ; ) result ( display . VAR_1 { ) result > TYPE_1 < java.util.List final ( onSuccess void public 
public final native boolean METHOD_1 ( ) ; ; ) ( METHOD_1 boolean native final public 
private void METHOD_1 ( TYPE_1 . Change c , TYPE_2 msg ) { METHOD_2 ( c , msg , true , true ) ; } } ; ) true , true , msg , c ( METHOD_2 { ) msg TYPE_2 , c Change . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { final TYPE_1 p = new TYPE_1 ( null ) ; assertEquals ( 0 , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , 0 ( assertEquals ; ) null ( TYPE_1 new = p TYPE_1 final { ) ( METHOD_1 void public 
public final TYPE_1 value ( ) { return value ; } } ; value return { ) ( value TYPE_1 final public 
private void METHOD_1 ( ) { approvals = TYPE_1 . of ( ) ; reviewers = TYPE_2 . of ( ) ; VAR_1 = TYPE_3 . of ( ) ; VAR_2 = TYPE_3 . of ( ) ; } } ; ) ( of . TYPE_3 = VAR_2 ; ) ( of . TYPE_3 = VAR_1 ; ) ( of . TYPE_2 = reviewers ; ) ( of . TYPE_1 = approvals { ) ( METHOD_1 void private 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) ; METHOD_5 ( VAR_2 , cfg ) ; } } ; ) cfg , VAR_2 ( METHOD_5 ; ) STRING_1 , VAR_4 , VAR_3 , cfg ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . ) VAR_2 ( METHOD_2 . VAR_1 = cfg ProjectConfig . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_2 cm , int line ) { return METHOD_2 ( TYPE_3 . METHOD_3 ( path , METHOD_4 ( cm ) , ( line + 1 ) , null , null ) ) ; } } ; ) ) null , null , ) 1 + line ( , ) cm ( METHOD_4 , path ( METHOD_3 . TYPE_3 ( METHOD_2 return { ) line int , cm TYPE_2 ( METHOD_1 TYPE_1 private 
protected java.util.Set < TYPE_1 . Id > METHOD_1 ( final java.lang.String key ) { return java.util.Collections . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . java.util.Collections return { ) key java.lang.String final ( METHOD_1 > Id . TYPE_1 < java.util.Set protected 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( id ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) id ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
public java.lang.String METHOD_1 ( ) { return METHOD_1 ( STRING_1 , STRING_2 , VAR_1 ) ; } } ; ) VAR_1 , STRING_2 , STRING_1 ( METHOD_1 return { ) ( METHOD_1 java.lang.String public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 res = METHOD_3 ( STRING_1 ) ; org.junit.Assert.assertEquals ( ( ( id ( STRING_2 ) ) + STRING_3 ) , res . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . res , ) STRING_3 + ) ) STRING_2 ( id ( ( ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_3 = res TYPE_1 ; ) ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( id ) . delete ( VAR_1 ) ; } } ; ) VAR_1 ( delete . ) id ( edit . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result patchSet = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( ) ; METHOD_5 ( patchSet ) ; METHOD_6 ( patchSet , 1 ) ; } } ; ) 1 , patchSet ( METHOD_6 ; ) patchSet ( METHOD_5 ; ) ( METHOD_4 ; ) true ( METHOD_3 . VAR_1 ; ) ( METHOD_2 = patchSet Result . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void delete ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { METHOD_1 ( cd ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) cd ( METHOD_1 { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( delete void public 
private static void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( STRING_4 , STRING_5 ) ; } } ; ) STRING_5 , STRING_4 ( METHOD_3 . VAR_1 ; ) STRING_3 , STRING_2 ( METHOD_3 . VAR_1 ; ) STRING_1 ( METHOD_2 . VAR_1 { ) VAR_1 TYPE_1 final ( METHOD_1 void static private 
void METHOD_1 ( com.google.gerrit.server.query.change.ChangeData change ) ; ; ) change com.google.gerrit.server.query.change.ChangeData ( METHOD_1 void 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . String class , VAR_3 class ) . METHOD_3 ( VAR_4 class ) ; bind ( VAR_5 class ) ; } } ; ) class VAR_5 ( bind ; ) class VAR_4 ( METHOD_3 . ) class VAR_3 , class String . VAR_2 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void protected 
public java.lang.String METHOD_1 ( ) { java.lang.String s = VAR_1 . METHOD_1 ( ) ; if ( ( s == null ) || ( s . equals ( TYPE_1 . METHOD_2 ( ) ) ) ) { s = STRING_1 ; } return s ; } } ; s return } ; STRING_1 = s { ) ) ) ) ( METHOD_2 . TYPE_1 ( equals . s ( || ) null == s ( ( if ; ) ( METHOD_1 . VAR_1 = s java.lang.String { ) ( METHOD_1 java.lang.String public 
public void METHOD_1 ( TYPE_1 event ) { if ( topic . METHOD_2 ( ) ) { topic . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . topic { ) ) ( METHOD_2 . topic ( if { ) event TYPE_1 ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { return TYPE_3 . METHOD_2 ( TYPE_4 . create ( ( STRING_1 + ( VAR_1 . METHOD_3 ( ) ) ) ) , VAR_2 . Collections < java.lang.String , java.lang.String > METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 > java.lang.String , java.lang.String < Collections . VAR_2 , ) ) ) ) ( METHOD_3 . VAR_1 ( + STRING_1 ( ( create . TYPE_4 ( METHOD_2 . TYPE_3 return { java.io.IOException throws ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static private 
public void run ( ) { try { synchronized ( VAR_1 ) { VAR_1 . add ( this ) ; } METHOD_1 ( ) ; } finally { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( this ) ; } } } } } } ; ) this ( METHOD_2 . VAR_1 { ) VAR_1 ( synchronized { finally } ; ) ( METHOD_1 } ; ) this ( add . VAR_1 { ) VAR_1 ( synchronized { try { ) ( run void public 
private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , args ) ; } } } } ; ) args , ) msg + ) STRING_2 + ) ) VAR_2 ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) args ... TYPE_1 , msg java.lang.String ( METHOD_1 void private 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change ) ; ; ) change com.google.gerrit.reviewdb.client.Change ( create TYPE_1 
public boolean METHOD_1 ( ) { return ( ! ( METHOD_2 ( ) ) ) || ( ( ( VAR_1 ) + 1 ) < ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( < ) 1 + ) VAR_1 ( ( ( || ) ) ) ( METHOD_2 ( ! ( return { ) ( METHOD_1 boolean public 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , c . getProject ( ) , c ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) c , ) ( getProject . c , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 protected 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return this . VAR_1 ; } } ; VAR_1 . this return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( final java.util.List < TYPE_1 > result ) { VAR_1 . display ( result ) ; } } ; ) result ( display . VAR_1 { ) result > TYPE_1 < java.util.List final ( METHOD_1 void public 
void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } VAR_1 = null ; VAR_3 = null ; } } } } ; null = VAR_3 ; null = VAR_1 } ; ) ( METHOD_2 . VAR_2 { ) VAR_1 : VAR_2 TYPE_1 ( for { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . create ( VAR_1 ) ; } } ; ) VAR_1 ( create . TYPE_1 return { ) ( METHOD_1 TYPE_1 static public 
public TYPE_1 METHOD_1 ( TYPE_2 revision ) { switch ( type ) { case VAR_1 : case VAR_2 : this . VAR_3 = TYPE_3 . METHOD_2 ( revision ) ; return this ; default : throw new TYPE_4 ( java.lang.String.format ( STRING_1 , type ) ) ; } } } } ; ) ) type , STRING_1 ( java.lang.String.format ( TYPE_4 new throw : default ; this return ; ) revision ( METHOD_2 . TYPE_3 = VAR_3 . this : VAR_2 case : VAR_1 case { ) type ( switch { ) revision TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( in ) , METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 , ) in ( query ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
TYPE_1 METHOD_1 ( final TYPE_2 cm ) { return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group ! = null ) { group . METHOD_1 ( ) ; } } } ; } } ; } } } ; ) ( METHOD_1 . group { ) null = ! group ( if ; ) cm ( METHOD_2 = group TYPE_3 { ) ( run void public { ) ( TYPE_1 new return { ) cm TYPE_2 final ( METHOD_1 TYPE_1 
public java.util.List < TYPE_1 > get ( ) throws TYPE_2 { return METHOD_1 ( ) ; } } ; ) ( METHOD_1 return { TYPE_2 throws ) ( get > TYPE_1 < java.util.List public 
public void METHOD_1 ( final boolean VAR_1 ) { TYPE_1 . METHOD_2 ( false ) ; super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super ; ) false ( METHOD_2 . TYPE_1 { ) VAR_1 boolean final ( METHOD_1 void public 
boolean METHOD_1 ( ) { return VAR_1 . isEmpty ( ) ; } } ; ) ( isEmpty . VAR_1 return { ) ( METHOD_1 boolean 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . NameKey class , new TYPE_1 < java.util.List < com.google.gerrit.reviewdb.client.Change > > ( ) { } ) . METHOD_3 ( INT_1 ) . METHOD_4 ( VAR_3 class ) ; } } ; ) class VAR_3 ( METHOD_4 . ) INT_1 ( METHOD_3 . ) } { ) ( > > com.google.gerrit.reviewdb.client.Change < java.util.List < TYPE_1 new , class NameKey . VAR_2 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void protected 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , project , STRING_1 ) ; } } ; ) STRING_1 , project , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . apply ( account ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) account ( apply . VAR_1 return { try { TYPE_2 throws ) ( METHOD_1 > TYPE_1 < java.util.List public 
public final void update ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( METHOD_1 { OrmException . TYPE_3 throws ) VAR_1 > TYPE_2 < TYPE_1 final ( update void final public 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < com.google.gerrit.reviewdb.server.ReviewDb > db ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_2 ) == null ) { METHOD_2 ( VAR_1 , db ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) db , VAR_1 ( METHOD_2 { ) null == ) VAR_2 ( ( if { java.io.IOException , com.google.gwtorm.server.OrmException throws ) db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List public 
public static org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( TYPE_1 [ ] VAR_1 , TYPE_2 < org.eclipse.jgit.lib.Repository > repo ) throws java.lang.Exception { return TYPE_3 . METHOD_1 ( VAR_1 , repo , ( ( org.eclipse.jgit.revwalk.RevCommit [ ] ) ( null ) ) ) ; } } ; ) ) ) null ( ) ] [ org.eclipse.jgit.revwalk.RevCommit ( ( , repo , VAR_1 ( METHOD_1 . TYPE_3 return { java.lang.Exception throws ) repo > org.eclipse.jgit.lib.Repository < TYPE_2 , VAR_1 ] [ TYPE_1 ( METHOD_1 org.eclipse.jgit.revwalk.RevCommit static public 
public void METHOD_1 ( java.lang.String label , short value ) { METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label , value ) ; } } ; ) value , label , ) ( getAccountId . ) ( METHOD_3 ( METHOD_2 { ) value short , label java.lang.String ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( final boolean VAR_1 ) { if ( VAR_1 ) { return ( ( TYPE_1 ) ( TYPE_1 . METHOD_2 ( ) ) ) ; } else { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; } } } } ; ) ) ) ( METHOD_2 . TYPE_2 ( ) TYPE_1 ( ( return { else } ; ) ) ) ( METHOD_2 . TYPE_1 ( ) TYPE_1 ( ( return { ) VAR_1 ( if { ) VAR_1 boolean final ( METHOD_1 TYPE_1 static private 
public void METHOD_1 ( final TYPE_1 . NameKey VAR_1 , final TYPE_2 VAR_2 , final com.google.gerrit.reviewdb.client.Account account ) { METHOD_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) , account ) ; } } ; ) account , ) ( METHOD_3 . VAR_2 , ) ( METHOD_2 . VAR_2 , VAR_1 ( METHOD_1 { ) account com.google.gerrit.reviewdb.client.Account final , VAR_2 TYPE_2 final , VAR_1 NameKey . TYPE_1 final ( METHOD_1 void public 
public final native java.lang.String name ( ) ; ; ) ( name java.lang.String native final public 
boolean METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 boolean 
< TYPE_1 extends TYPE_2 < ? , ? > > TYPE_3 < TYPE_1 > create ( TYPE_4 VAR_1 , TYPE_5 VAR_2 ) throws TYPE_6 . OrmException ; ; OrmException . TYPE_6 throws ) VAR_2 TYPE_5 , VAR_1 TYPE_4 ( create > TYPE_1 < TYPE_3 > > ? , ? < TYPE_2 extends TYPE_1 < 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 ) ; assertThat ( VAR_5 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_5 ( assertThat ; ) VAR_4 , VAR_3 , changeId . VAR_1 ( METHOD_3 ; ) VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.lang.String getName ( ) { return new TYPE_1 ( METHOD_1 ( ) ) . getName ( VAR_1 ) ; } } ; ) VAR_1 ( getName . ) ) ( METHOD_1 ( TYPE_1 new return { ) ( getName java.lang.String public 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( new TYPE_2 . ReceiveCommand ( edit . METHOD_3 ( ) . METHOD_4 ( ) , org.eclipse.jgit.lib.ObjectId . METHOD_5 ( ) , edit . getRefName ( ) ) ) ; } } ; ) ) ) ( getRefName . edit , ) ( METHOD_5 . org.eclipse.jgit.lib.ObjectId , ) ( METHOD_4 . ) ( METHOD_3 . edit ( ReceiveCommand . TYPE_2 new ( METHOD_2 . ctx { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 key , long VAR_1 , java.util.List < java.lang.String > VAR_2 ) { } } { ) VAR_2 > java.lang.String < java.util.List , VAR_1 long , key TYPE_1 ( METHOD_1 void public 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; } } ; ) ( getChangeId . ) STRING_1 , git ( to . VAR_2 return ; ) ) VAR_6 ( java.lang.String new , VAR_5 , VAR_4 , VAR_1 , db ( create . VAR_3 = VAR_2 TYPE_3 { java.lang.Exception throws ) VAR_1 TYPE_2 , git TYPE_1 ( METHOD_1 java.lang.String private 
private void METHOD_1 ( java.lang.String name , short value ) { VAR_1 . add ( new TYPE_1 ( name , value ) . format ( ) ) ; } } ; ) ) ( format . ) value , name ( TYPE_1 new ( add . VAR_1 { ) value short , name java.lang.String ( METHOD_1 void private 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , VAR_2 ) ; } } ; ) VAR_2 , revision , changeId , VAR_1 ( METHOD_2 . TYPE_2 { ) e TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) { if ( VAR_1 ) { install ( new TYPE_1 ( ) ) ; } else { bind ( VAR_2 class ) . METHOD_2 ( VAR_3 < TYPE_2 > of ( null ) ) ; } } } } ; ) ) null ( of > TYPE_2 < VAR_3 ( METHOD_2 . ) class VAR_2 ( bind { else } ; ) ) ( TYPE_1 new ( install { ) VAR_1 ( if { ) ( METHOD_1 void protected 
private boolean METHOD_1 ( final TYPE_1 . Change change ) { if ( ( VAR_1 ) == null ) { return true ; } return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( change . getProject ( ) ) ; } } ; ) ) ( getProject . change ( equals . ) ( METHOD_2 . ) ( getProject . VAR_1 return } ; true return { ) null == ) VAR_1 ( ( if { ) change Change . TYPE_1 final ( METHOD_1 boolean private 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_1 VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) { TYPE_4 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( put . ) STRING_1 , id ( revision . TYPE_4 { ) VAR_2 > TYPE_3 < TYPE_2 , VAR_1 TYPE_1 , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id id ) { return ( VAR_1 ) + ( id . toString ( ) ) ; } } ; ) ) ( toString . id ( + ) VAR_1 ( return { ) id Id . TYPE_1 final ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( ) throws java.lang.Exception { admin = VAR_1 . create ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_1 ( admin ) ; db = VAR_3 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_3 = db ; ) admin ( TYPE_1 new = VAR_2 ; ) STRING_2 , STRING_1 ( create . VAR_1 = admin { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( changeId , VAR_1 , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , VAR_1 , changeId ( METHOD_2 . TYPE_2 { ) e TYPE_1 ( METHOD_1 void 
static void METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id , TYPE_1 ... VAR_1 ) { TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( id , VAR_1 ) ) ; } } ; ) ) VAR_1 , id ( METHOD_2 . TYPE_3 , ) ( get . id ( METHOD_1 . TYPE_2 { ) VAR_1 ... TYPE_1 , id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 void static 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 > TYPE_2 < Collections . VAR_5 , VAR_4 , VAR_1 , null , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String final ( METHOD_1 TYPE_1 static 
public static void METHOD_1 ( final java.lang.String token ) { TYPE_1 . METHOD_2 ( token , false ) ; if ( ( VAR_1 ) ! = null ) { TYPE_2 . METHOD_3 ( token ) ; } } } } ; ) token ( METHOD_3 . TYPE_2 { ) null = ! ) VAR_1 ( ( if ; ) false , token ( METHOD_2 . TYPE_1 { ) token java.lang.String final ( METHOD_1 void static public 
public void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.client.Change . Id > VAR_1 ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 ( METHOD_2 { java.lang.Exception throws ) VAR_1 > Id . com.google.gerrit.reviewdb.client.Change < TYPE_1 ( METHOD_1 void public 
public void onSuccess ( TYPE_1 info ) { VAR_1 = info ; METHOD_1 ( result ) ; } } ; ) result ( METHOD_1 ; info = VAR_1 { ) info TYPE_1 ( onSuccess void public 
private boolean METHOD_1 ( ) { return ( this ) instanceof TYPE_1 ; } } ; TYPE_1 instanceof ) this ( return { ) ( METHOD_1 boolean private 
public org.eclipse.jgit.lib.Repository METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return repo ; } } ; repo return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 org.eclipse.jgit.lib.Repository public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) ) ) ) VAR_1 ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat ; STRING_1 = VAR_1 java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . close ( ) ; VAR_2 . close ( ) ; } } ; ) ( close . VAR_2 ; ) ( close . VAR_1 { ) ( METHOD_1 void public 
public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet VAR_1 ) { if ( VAR_1 . METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( false ) ; return VAR_1 ; } return null ; } } ; null return } ; VAR_1 return ; ) false ( METHOD_2 . VAR_1 { ) ) ( METHOD_1 . VAR_1 ( if { ) VAR_1 com.google.gerrit.reviewdb.client.PatchSet ( update com.google.gerrit.reviewdb.client.PatchSet public 
protected void METHOD_1 ( java.lang.String changeId , java.lang.String VAR_1 ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 , true ) ; } } ; ) true , VAR_1 , class VAR_2 , ) ( TYPE_1 new , changeId ( submit { java.lang.Exception throws ) VAR_1 java.lang.String , changeId java.lang.String ( METHOD_1 void protected 
protected void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res , java.lang.String VAR_1 , java.lang.String VAR_2 ) { res . METHOD_2 ( VAR_2 ) ; res . METHOD_3 ( VAR_3 , ( STRING_1 + VAR_1 ) ) ; METHOD_4 ( req , res ) ; } } ; ) res , req ( METHOD_4 ; ) ) VAR_1 + STRING_1 ( , VAR_3 ( METHOD_3 . res ; ) VAR_2 ( METHOD_2 . res { ) VAR_2 java.lang.String , VAR_1 java.lang.String , res HttpServletResponse . TYPE_2 , req TYPE_1 ( METHOD_1 void protected 
public void onSuccess ( ) { TYPE_1 . display ( this . token , new TYPE_2 ( TYPE_3 . METHOD_1 ( this . token ) ) ) ; } } ; ) ) ) token . this ( METHOD_1 . TYPE_3 ( TYPE_2 new , token . this ( display . TYPE_1 { ) ( onSuccess void public 
public void display ( final java.lang.String VAR_1 ) { display ( null , null , VAR_1 ) ; } } ; ) VAR_1 , null , null ( display { ) VAR_1 java.lang.String final ( display void public 
protected abstract TYPE_1 METHOD_1 ( ) ; ; ) ( METHOD_1 TYPE_1 abstract protected 
private java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Change c , TYPE_1 user ) throws com.google.gwtorm.server.OrmException , java.io.IOException { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c , user ) ; return VAR_1 . changes ( ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ( changes . VAR_1 return ; ) user , c , ) ( get . VAR_3 ( METHOD_2 . VAR_2 = VAR_1 TYPE_2 { java.io.IOException , com.google.gwtorm.server.OrmException throws ) user TYPE_1 , c com.google.gerrit.reviewdb.client.Change ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List private 
public void run ( ) throws java.lang.Exception { METHOD_1 ( ) ; this . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . this ; ) ( METHOD_1 { java.lang.Exception throws ) ( run void public 
public final native void METHOD_1 ( java.lang.String path ) ; ; ) path java.lang.String ( METHOD_1 void native final public 
static void delete ( com.google.gerrit.reviewdb.client.Change . Id id , TYPE_1 ... VAR_1 ) { TYPE_2 . METHOD_1 ( id . get ( ) , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_3 , ) ( get . id ( METHOD_1 . TYPE_2 { ) VAR_1 ... TYPE_1 , id Id . com.google.gerrit.reviewdb.client.Change ( delete void static 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 . ChangeInfo > VAR_1 ) { TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 , id ( METHOD_2 . TYPE_3 { ) VAR_1 > ChangeInfo . TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
protected void METHOD_1 ( final int row ) { if ( row > 0 ) { METHOD_2 ( row ) ; } TYPE_1 . METHOD_3 ( METHOD_4 ( METHOD_5 ( row ) ) ) ; } } ; ) ) ) row ( METHOD_5 ( METHOD_4 ( METHOD_3 . TYPE_1 } ; ) row ( METHOD_2 { ) 0 > row ( if { ) row int final ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; com.google.common.truth.Truth.assertThat ( reviewers ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) reviewers ( com.google.common.truth.Truth.assertThat ; ) INT_1 , STRING_1 , changeId ( METHOD_3 = reviewers > TYPE_1 < java.util.List ; ) ( getChangeId . ) ( METHOD_2 = changeId java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( final java.lang.String token ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( token ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; VAR_2 . put ( VAR_1 . METHOD_4 ( ) , VAR_1 . getValue ( ) ) ; } } ; ) ) ( getValue . VAR_1 , ) ( METHOD_4 . VAR_1 ( put . VAR_2 ; ) ) ( METHOD_4 . VAR_1 ( METHOD_3 . TYPE_2 ; ) token ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) token java.lang.String final ( METHOD_1 void 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { log . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 ) ; client ( ) . METHOD_3 ( VAR_2 , TYPE_1 . METHOD_4 ( VAR_1 ) ) ; log . METHOD_2 ( STRING_2 , VAR_1 , VAR_2 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_2 , VAR_1 , STRING_2 ( METHOD_2 . log ; ) ) VAR_1 ( METHOD_4 . TYPE_1 , VAR_2 ( METHOD_3 . ) ( client ; ) VAR_2 , VAR_1 , STRING_1 ( METHOD_2 . log { java.lang.Exception throws ) ( METHOD_1 java.lang.String public 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String r , java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String , r java.lang.String , e java.lang.String , d java.lang.String ( METHOD_1 void native final static private 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( db , project , VAR_2 ) ; } return notes ; } } ; notes return } ; ) VAR_2 , project , db ( create . VAR_1 = notes { ) null == ) notes ( ( if { com.google.gwtorm.server.OrmException throws ) ( notes TYPE_1 public 
TYPE_1 < com.google.gerrit.reviewdb.client.Change . Id , java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 > java.lang.String , Id . com.google.gerrit.reviewdb.client.Change < TYPE_1 
public TYPE_1 METHOD_1 ( final TYPE_2 . Change change ) throws TYPE_3 , TYPE_4 . OrmException { return TYPE_5 . METHOD_2 ( METHOD_3 ( change ) , db . get ( ) ) ; } } ; ) ) ( get . db , ) change ( METHOD_3 ( METHOD_2 . TYPE_5 return { OrmException . TYPE_4 , TYPE_3 throws ) change Change . TYPE_2 final ( METHOD_1 TYPE_1 public 
private static java.lang.String METHOD_1 ( short value ) { if ( value > 0 ) { return STRING_1 + value ; } else { return TYPE_1 . toString ( value ) ; } } } } ; ) value ( toString . TYPE_1 return { else } ; value + STRING_1 return { ) 0 > value ( if { ) value short ( METHOD_1 java.lang.String static private 
public org.eclipse.jgit.lib.ObjectId getRevision ( ) { return revision . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . revision return { ) ( getRevision org.eclipse.jgit.lib.ObjectId public 
protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 . ProjectConfig config , TYPE_4 VAR_2 , boolean VAR_3 ) throws TYPE_5 , TYPE_6 , TYPE_7 , com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_8 ; ; TYPE_8 , java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_7 , TYPE_6 , TYPE_5 throws ) VAR_3 boolean , VAR_2 TYPE_4 , config ProjectConfig . TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 abstract protected 
protected TYPE_1 . Result METHOD_1 ( java.lang.String ref ) throws java.io.IOException , TYPE_2 { TYPE_3 VAR_1 = VAR_2 . create ( db , admin . METHOD_2 ( ) ) ; return VAR_1 . to ( git , ref ) ; } } ; ) ref , git ( to . VAR_1 return ; ) ) ( METHOD_2 . admin , db ( create . VAR_2 = VAR_1 TYPE_3 { TYPE_2 , java.io.IOException throws ) ref java.lang.String ( METHOD_1 Result . TYPE_1 protected 
public static TYPE_1 < TYPE_2 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 < TYPE_2 > ( ) ; VAR_2 = new TYPE_3 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( TYPE_3 new = VAR_2 ; ) ( > TYPE_2 < TYPE_1 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 > TYPE_2 < TYPE_1 static public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ( change . getStatus ( ) ) == ( VAR_1 ) ) & & ( ! ( METHOD_2 ( db ) ) ) ) { return false ; } return METHOD_3 ( ) ; } } ; ) ( METHOD_3 return } ; false return { ) ) ) ) db ( METHOD_2 ( ! ( & & ) ) VAR_1 ( == ) ) ( getStatus . change ( ( ( if { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean public 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; return change ; } return null ; } } ; null return } ; change return ; ) ) VAR_1 ( METHOD_3 . TYPE_1 ( METHOD_2 . change { ) ) ( METHOD_1 . ) ( getStatus . change ( if { ) change com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
protected TYPE_1 METHOD_1 ( TYPE_2 p ) { try { return TYPE_3 . METHOD_1 ( p ) ; } catch ( java.io.IOException e ) { return TYPE_1 . METHOD_2 ( 0 ) ; } } } } ; ) 0 ( METHOD_2 . TYPE_1 return { ) e java.io.IOException ( catch } ; ) p ( METHOD_1 . TYPE_3 return { try { ) p TYPE_2 ( METHOD_1 TYPE_1 protected 
protected void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( METHOD_3 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_3 ( METHOD_2 { TYPE_1 throws ) ( METHOD_1 void protected 
public static java.lang.String METHOD_1 ( final TYPE_1 req ) { java.lang.String token = req . METHOD_2 ( ) ; if ( TYPE_2 . METHOD_3 ( token ) ) { return VAR_1 ; } else { return TYPE_3 . is ( CHAR_1 ) . METHOD_4 ( token ) ; } } } } ; ) token ( METHOD_4 . ) CHAR_1 ( is . TYPE_3 return { else } ; VAR_1 return { ) ) token ( METHOD_3 . TYPE_2 ( if ; ) ( METHOD_2 . req = token java.lang.String { ) req TYPE_1 final ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( final TYPE_1 . Id VAR_1 ) { if ( VAR_1 ! = null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) null = ! VAR_1 ( if { ) VAR_1 Id . TYPE_1 final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 . OrmException { return VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 return { OrmException . TYPE_2 throws ) ( METHOD_1 TYPE_1 public 
TYPE_1 create ( java.lang.String VAR_1 , java.util.Map < java.lang.String , TYPE_2 < TYPE_3 > > VAR_2 ) ; ; ) VAR_2 > > TYPE_3 < TYPE_2 , java.lang.String < java.util.Map , VAR_1 java.lang.String ( create TYPE_1 
private void group ( java.lang.String name ) throws java.io.IOException { TYPE_1 in = new TYPE_1 ( ) ; VAR_1 . put ( ( STRING_1 + name ) , in ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) in , ) name + STRING_1 ( ( put . VAR_1 ; ) ( TYPE_1 new = in TYPE_1 { java.io.IOException throws ) name java.lang.String ( group void private 
public boolean apply ( TYPE_1 input ) { return ( ( input . METHOD_1 ( ) ) == null ) & & ( ( input . METHOD_2 ( ) . METHOD_3 ( ) ) > = ( VAR_1 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . VAR_1 ( = > ) ) ( METHOD_3 . ) ( METHOD_2 . input ( ( & & ) null == ) ) ( METHOD_1 . input ( ( return { ) input TYPE_1 ( apply boolean public 
public static TYPE_1 METHOD_1 ( TYPE_2 type ) { TYPE_1 r = new TYPE_1 ( ) ; r . status = VAR_1 ; r . type = type ; return r ; } } ; r return ; type = type . r ; VAR_1 = status . r ; ) ( TYPE_1 new = r TYPE_1 { ) type TYPE_2 ( METHOD_1 TYPE_1 static public 
protected void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . repo ( org.eclipse.jgit.revwalk.RevWalk new = walk ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( char key ) { VAR_1 . METHOD_1 ( key ) ; } } ; ) key ( METHOD_1 . VAR_1 { ) key char ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( METHOD_3 . VAR_2 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
public final TYPE_1 < TYPE_2 , TYPE_3 , TYPE_4 > METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 > TYPE_4 , TYPE_3 , TYPE_2 < TYPE_1 final public 
public void onSuccess ( final java.util.List < TYPE_1 > result ) { VAR_1 . display ( result ) ; VAR_1 . METHOD_1 ( true ) ; if ( result . isEmpty ( ) ) { METHOD_2 ( true ) ; } } } } ; ) true ( METHOD_2 { ) ) ( isEmpty . result ( if ; ) true ( METHOD_1 . VAR_1 ; ) result ( display . VAR_1 { ) result > TYPE_1 < java.util.List final ( onSuccess void public 
public TYPE_1 < ? > apply ( TYPE_2 rsrc , TYPE_3 input ) throws java.io.IOException { VAR_1 . index ( rsrc . getChange ( ) ) ; return TYPE_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . TYPE_1 return ; ) ) ( getChange . rsrc ( index . VAR_1 { java.io.IOException throws ) input TYPE_3 , rsrc TYPE_2 ( apply > ? < TYPE_1 public 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String name ) { return ( STRING_1 + VAR_1 ) + name ; } } ; name + ) VAR_1 + STRING_1 ( return { ) name java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String static private 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return TYPE_3 . METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; } return null ; } } ; null return } ; ) ) VAR_1 ( METHOD_4 , VAR_1 ( METHOD_3 . TYPE_3 return { ) ) VAR_1 ( METHOD_2 . TYPE_2 ( if { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
private boolean METHOD_1 ( ) { VAR_1 . info ( STRING_1 ) ; try { VAR_2 . METHOD_2 ( ) ; return true ; } catch ( TYPE_1 e ) { VAR_1 . METHOD_3 ( STRING_2 , e ) ; return false ; } } } } ; false return ; ) e , STRING_2 ( METHOD_3 . VAR_1 { ) e TYPE_1 ( catch } ; true return ; ) ( METHOD_2 . VAR_2 { try ; ) STRING_1 ( info . VAR_1 { ) ( METHOD_1 boolean private 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) VAR_1 java.lang.String ( METHOD_1 void public 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( id ) ; } } } } ; ) id ( METHOD_2 . VAR_1 { ) VAR_1 ( synchronized { ) id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 void private 
TYPE_1 . Project METHOD_1 ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) id Id . TYPE_2 ( METHOD_1 Project . TYPE_1 
protected Project . NameKey METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( ctl ) ; } } ; ) ctl ( METHOD_1 . TYPE_1 return { ) ( METHOD_1 NameKey . Project protected 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 < TYPE_3 > ( this ) { protected void METHOD_3 ( final TYPE_3 result ) { display ( result ) ; } } ) ; } } ; ) } } ; ) result ( display { ) result TYPE_3 final ( METHOD_3 void protected { ) this ( > TYPE_3 < TYPE_2 new , VAR_1 ( METHOD_2 . TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public static boolean METHOD_1 ( final TYPE_1 . Id VAR_1 , final TYPE_2 . NameKey VAR_2 ) { final TYPE_3 e = TYPE_4 . METHOD_2 ( ) . get ( VAR_2 ) ; return TYPE_5 . METHOD_1 ( VAR_1 , e ) ; } } ; ) e , VAR_1 ( METHOD_1 . TYPE_5 return ; ) VAR_2 ( get . ) ( METHOD_2 . TYPE_4 = e TYPE_3 final { ) VAR_2 NameKey . TYPE_2 final , VAR_1 Id . TYPE_1 final ( METHOD_1 boolean static public 
private TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 , int line , java.lang.String message ) { TYPE_1 d = new TYPE_1 ( ) ; return TYPE_3 . METHOD_2 ( d , path , VAR_1 , line , message ) ; } } ; ) message , line , VAR_1 , path , d ( METHOD_2 . TYPE_3 return ; ) ( TYPE_1 new = d TYPE_1 { ) message java.lang.String , line int , VAR_1 TYPE_2 , path java.lang.String ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 cfg = METHOD_2 ( VAR_1 ) ; VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , cfg ) ; } } ; ) cfg , VAR_3 ( METHOD_3 . TYPE_3 = VAR_2 ; ) VAR_1 ( METHOD_2 = cfg TYPE_2 { TYPE_1 , java.io.IOException throws ) ( METHOD_1 void protected 
public void METHOD_1 ( TYPE_1 . ChangeInfo info ) throws java.lang.Exception { final TYPE_2 input = new TYPE_2 ( ) ; VAR_1 = true ; final TYPE_3 r = METHOD_2 ( info . project , VAR_2 ) ; VAR_3 . apply ( r , input ) ; } } ; ) input , r ( apply . VAR_3 ; ) VAR_2 , project . info ( METHOD_2 = r TYPE_3 final ; true = VAR_1 ; ) ( TYPE_2 new = input TYPE_2 final { java.lang.Exception throws ) info ChangeInfo . TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String ... VAR_3 ) { TYPE_3 result = VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_4 ) ; org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_3 ) , result . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . result , ) VAR_3 ( METHOD_4 . TYPE_4 ( org.junit.Assert.assertEquals ; ) VAR_4 , ) ( METHOD_3 . VAR_2 ( METHOD_2 . VAR_1 = result TYPE_3 { ) VAR_3 ... java.lang.String , VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void private 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) || ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) || ( VAR_1 . METHOD_2 ( VAR_4 ) ) ) { return true ; } return false ; } } ; false return } ; true return { ) ) ) VAR_4 ( METHOD_2 . VAR_1 ( || ) ) ) VAR_3 ( METHOD_2 . VAR_1 ( || ) ) VAR_2 ( METHOD_2 . VAR_1 ( ( ( if { ) VAR_1 java.lang.String ( METHOD_1 boolean static public 
public TYPE_1 create ( ) throws TYPE_2 { TYPE_3 . METHOD_1 ( ( ( VAR_1 ) ! = null ) , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , ) null = ! ) VAR_1 ( ( ( METHOD_1 . TYPE_3 { TYPE_2 throws ) ( create TYPE_1 public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; new TYPE_3 ( VAR_1 . getMessage ( ) ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) ) ( getMessage . VAR_1 ( TYPE_3 new ; ) VAR_3 ( METHOD_3 . TYPE_2 ; ) true ( METHOD_2 . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( ) { TYPE_1 . display ( TYPE_2 . METHOD_2 ( id ) ) ; } } ; ) ) id ( METHOD_2 . TYPE_2 ( display . TYPE_1 { ) ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String name ) { if ( STRING_1 . equals ( VAR_1 ) ) { return name ; } else { return ( VAR_1 + STRING_2 ) + name ; } } } } ; name + ) STRING_2 + VAR_1 ( return { else } ; name return { ) ) VAR_1 ( equals . STRING_1 ( if { ) name java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String static public 
private void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( VAR_1 ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException ( catch } ; ) VAR_1 ( METHOD_2 . TYPE_1 { try { ) ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( STRING_1 ) ; } METHOD_2 ( ( VAR_1 == ( VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 ( == VAR_1 ( ( METHOD_2 } ; ) STRING_1 ( TYPE_2 new throw { ) null == VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 < ? , ? , ? > VAR_1 ) throws TYPE_2 { if ( ( VAR_1 ! = null ) & & ( VAR_1 . METHOD_2 ( ) ) ) { throw new TYPE_2 ( ) ; } } } } ; ) ( TYPE_2 new throw { ) ) ) ( METHOD_2 . VAR_1 ( & & ) null = ! VAR_1 ( ( if { TYPE_2 throws ) VAR_1 > ? , ? , ? < TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . ChangeInfo c = event . getChange ( ) ; METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c . project ) , VAR_1 , event . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . event , VAR_1 , ) project . c ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 ; ) ( getChange . event = c ChangeInfo . TYPE_2 { ) event TYPE_1 ( METHOD_1 void public 
private TYPE_1 query ( ) { java.util.Set < java.lang.String > VAR_1 = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ; return VAR_2 . get ( ) . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . ) ( get . VAR_2 return ; ) ) ( getName . TYPE_5 , ) ( getName . TYPE_4 , ) ( getName . TYPE_3 ( of . TYPE_2 = VAR_1 > java.lang.String < java.util.Set { ) ( query TYPE_1 private 
public boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 boolean public 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , project , branch , topic , key ) ; } VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 } ; ) key , topic , branch , project , VAR_2 ( TYPE_2 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) e TYPE_1 ( METHOD_1 void 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_3 ( || ) ) ( METHOD_2 ( return { ) ( METHOD_1 boolean public 
private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . auth ( ) . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . ) ( auth . ) ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 boolean private 
private static TYPE_1 change ( int id ) { return new TYPE_1 ( STRING_1 ) . id ( java.lang.String . METHOD_1 ( id ) ) ; } } ; ) ) id ( METHOD_1 . java.lang.String ( id . ) STRING_1 ( TYPE_1 new return { ) id int ( change TYPE_1 static private 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { METHOD_2 ( new TYPE_2 ( ) { public void run ( ) throws java.lang.Exception { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } } ) ; } } ; ) } } ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 { java.lang.Exception throws ) ( run void public { ) ( TYPE_2 new ( METHOD_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
protected void METHOD_1 ( final TYPE_1 result ) { VAR_1 . METHOD_2 ( true ) ; display ( result ) ; } } ; ) result ( display ; ) true ( METHOD_2 . VAR_1 { ) result TYPE_1 final ( METHOD_1 void protected 
public TYPE_1 . Result METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws TYPE_2 , com.google.gwtorm.server.OrmException , java.io.IOException { return METHOD_1 ( db , changeId , true ) ; } } ; ) true , changeId , db ( METHOD_1 return { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_2 throws ) changeId Id . com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 Result . TYPE_1 public 
public void METHOD_1 ( final TYPE_1 event ) { if ( TYPE_2 . METHOD_2 ( ) ) { TYPE_2 . display ( VAR_1 , true ) ; } else { TYPE_2 . display ( VAR_2 , true ) ; } } } } ; ) true , VAR_2 ( display . TYPE_2 { else } ; ) true , VAR_1 ( display . TYPE_2 { ) ) ( METHOD_2 . TYPE_2 ( if { ) event TYPE_1 final ( METHOD_1 void public 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet t ) { return new com.google.gerrit.server.query.change.ChangeData ( t . getId ( ) . getParentKey ( ) ) ; } } ; ) ) ( getParentKey . ) ( getId . t ( com.google.gerrit.server.query.change.ChangeData new return { ) t com.google.gerrit.reviewdb.client.PatchSet ( METHOD_1 com.google.gerrit.server.query.change.ChangeData 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 , new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new , STRING_1 ( METHOD_2 { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) throws java.io.IOException { METHOD_2 ( req , res , VAR_1 ) ; return res . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . res return ; ) VAR_1 , res , req ( METHOD_2 { java.io.IOException throws ) res HttpServletResponse . TYPE_3 , req TYPE_2 ( METHOD_1 TYPE_1 protected 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 . get ( ) ) ; } } ; ) ) ( get . VAR_3 , null , VAR_2 ( METHOD_2 . VAR_1 return { ) ( METHOD_1 TYPE_1 protected 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_1 = ( VAR_2 == null ) ? VAR_1 : new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 . user , VAR_4 , VAR_5 , VAR_6 , VAR_2 . email ) ; return VAR_1 ; } } ; VAR_1 return ; ) email . VAR_2 , VAR_6 , VAR_5 , VAR_4 , user . VAR_2 , VAR_3 , VAR_1 ( TYPE_3 new : VAR_1 ? ) null == VAR_2 ( = VAR_1 { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( STRING_1 + key ) ) ; return new TYPE_1 ( key , VAR_2 , branch , VAR_3 ) ; } } ; ) VAR_3 , branch , VAR_2 , key ( TYPE_1 new return ; ) ) key + STRING_1 ( ( METHOD_2 . VAR_1 { ) ( METHOD_1 TYPE_1 public 
public Change . Id apply ( java.lang.String changeId ) { return TYPE_1 . METHOD_1 ( changeId ) ; } } ; ) changeId ( METHOD_1 . TYPE_1 return { ) changeId java.lang.String ( apply Id . Change public 
boolean get ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 . NameKey VAR_4 , org.eclipse.jgit.lib.Repository repo , com.google.gerrit.reviewdb.server.ReviewDb db ) ; ; ) db com.google.gerrit.reviewdb.server.ReviewDb , repo org.eclipse.jgit.lib.Repository , VAR_4 NameKey . TYPE_3 , VAR_3 java.lang.String , VAR_2 TYPE_2 , VAR_1 TYPE_1 , commit org.eclipse.jgit.lib.ObjectId ( get boolean 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ; } } ; ) ) ( get . VAR_1 , VAR_2 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result r = VAR_1 . create ( db , admin . METHOD_2 ( ) ) . to ( git , STRING_1 ) ; r . METHOD_3 ( ) ; METHOD_4 ( r . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . r ( METHOD_4 ; ) ( METHOD_3 . r ; ) STRING_1 , git ( to . ) ) ( METHOD_2 . admin , db ( create . VAR_1 = r Result . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public synchronized TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( name , VAR_1 ) ; return METHOD_4 ( name , VAR_1 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . VAR_1 , name ( METHOD_4 return ; ) VAR_1 , name ( METHOD_3 ; ) VAR_1 ( METHOD_2 . TYPE_3 { ) VAR_1 TYPE_2 , name java.lang.String ( METHOD_1 TYPE_1 synchronized public 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( false , VAR_1 ) ; } } ; ) VAR_1 , false ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 static public 
public TYPE_1 patch ( ) throws TYPE_2 { try { return VAR_1 . get ( ) . apply ( revision ) ; } catch ( java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException ( catch } ; ) revision ( apply . ) ( get . VAR_1 return { try { TYPE_2 throws ) ( patch TYPE_1 public 
protected void set ( java.lang.String VAR_1 ) { VAR_2 = VAR_1 ; } } ; VAR_1 = VAR_2 { ) VAR_1 java.lang.String ( set void protected 
public TYPE_1 < ? > apply ( TYPE_2 rsrc , TYPE_3 in ) throws TYPE_4 , TYPE_5 , TYPE_6 , com.google.gwtorm.server.OrmException , java.io.IOException { return VAR_1 . apply ( rsrc . METHOD_1 ( ) , path ) ; } } ; ) path , ) ( METHOD_1 . rsrc ( apply . VAR_1 return { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_6 , TYPE_5 , TYPE_4 throws ) in TYPE_3 , rsrc TYPE_2 ( apply > ? < TYPE_1 public 
void METHOD_1 ( boolean value ) throws TYPE_1 ; ; TYPE_1 throws ) value boolean ( METHOD_1 void 
public TYPE_1 apply ( TYPE_2 rsrc ) throws com.google.gwtorm.server.OrmException { return VAR_1 . format ( rsrc . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . rsrc ( format . VAR_1 return { com.google.gwtorm.server.OrmException throws ) rsrc TYPE_2 ( apply TYPE_1 public 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { return TYPE_3 . METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 . TYPE_3 return { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > TYPE_2 < TYPE_1 public 
public void index ( com.google.gerrit.reviewdb.client.Account.Id id ) throws java.io.IOException { for ( TYPE_1 < ? , TYPE_2 > i : VAR_1 . METHOD_1 ( ) ) { i . METHOD_2 ( VAR_2 . get ( id ) ) ; } } } } ; ) ) id ( get . VAR_2 ( METHOD_2 . i { ) ) ( METHOD_1 . VAR_1 : i > TYPE_2 , ? < TYPE_1 ( for { java.io.IOException throws ) id com.google.gerrit.reviewdb.client.Account.Id ( index void public 
public TYPE_1 METHOD_1 ( ) { return notes ; } } ; notes return { ) ( METHOD_1 TYPE_1 public 
public TYPE_1 create ( TYPE_2 VAR_1 , java.lang.String id ) throws TYPE_3 { return new TYPE_1 ( VAR_2 , TYPE_4 . METHOD_1 ( id ) ) ; } } ; ) ) id ( METHOD_1 . TYPE_4 , VAR_2 ( TYPE_1 new return { TYPE_3 throws ) id java.lang.String , VAR_1 TYPE_2 ( create TYPE_1 public 
protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 < TYPE_2 > VAR_2 ) throws TYPE_4 ; ; TYPE_4 throws ) VAR_2 > TYPE_2 < TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 abstract protected 
public final native java.lang.String METHOD_1 ( ) ; ; ) ( METHOD_1 java.lang.String native final public 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { return new TYPE_1 ( VAR_1 . getProject ( ) , VAR_1 . METHOD_2 ( ) . getName ( ) , id . get ( ) ) ; } } ; ) ) ( get . id , ) ( getName . ) ( METHOD_2 . VAR_1 , ) ( getProject . VAR_1 ( TYPE_1 new return { TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 . ProjectConfig config , TYPE_3 . AccountGroup group ) { return new TYPE_1 ( config . METHOD_2 ( group ) ) ; } } ; ) ) group ( METHOD_2 . config ( TYPE_1 new return { ) group AccountGroup . TYPE_3 , config ProjectConfig . TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , walk ( METHOD_2 . TYPE_2 = walk . this { ) walk org.eclipse.jgit.revwalk.RevWalk ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . add ( VAR_2 ) ; VAR_3 = TYPE_1 . add ( VAR_4 ) ; } } ; ) VAR_4 ( add . TYPE_1 = VAR_3 ; ) VAR_2 ( add . TYPE_1 = VAR_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { TYPE_2 p = TYPE_3 . METHOD_1 ( ) ; result . METHOD_2 ( p ) ; TYPE_3 . METHOD_3 ( p ) ; } } ; ) p ( METHOD_3 . TYPE_3 ; ) p ( METHOD_2 . result ; ) ( METHOD_1 . TYPE_3 = p TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public java.util.List < com.google.gerrit.reviewdb.client . PatchSetApproval > METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.server.ReviewDb > db ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . METHOD_2 ( METHOD_3 ( db ) . values ( ) ) ; } } ; ) ) ( values . ) db ( METHOD_3 ( METHOD_2 . TYPE_2 return { com.google.gwtorm.server.OrmException throws ) db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_1 ( METHOD_1 > PatchSetApproval . com.google.gerrit.reviewdb.client < java.util.List public 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ( ( id ) ! = null ? id : name ) ) ; } } ; ) ) name : id ? null = ! ) id ( ( ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; VAR_1 = null ; } } ; null = VAR_1 ; ) ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public final java.lang.String getName ( ) { return name ; } } ; name return { ) ( getName java.lang.String final public 
private TYPE_1 METHOD_1 ( ) { return user ; } } ; user return { ) ( METHOD_1 TYPE_1 private 
public TYPE_1 < TYPE_2 > METHOD_1 ( final TYPE_3 < ? extends TYPE_1 < TYPE_2 > > VAR_1 ) { return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; } } ; ) VAR_1 ( > TYPE_2 < TYPE_4 new return { ) VAR_1 > > TYPE_2 < TYPE_1 extends ? < TYPE_3 final ( METHOD_1 > TYPE_2 < TYPE_1 public 
boolean METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 , false ) ; } } ; ) false , VAR_1 ( METHOD_2 return { ) VAR_1 java.lang.String ( METHOD_1 boolean 
private static boolean METHOD_1 ( final java.lang.String a , final java.lang.String b ) { if ( ( a == null ) & & ( b == null ) ) { return true ; } return a ! = null ? a . equals ( b ) : false ; } } ; false : ) b ( equals . a ? null = ! a return } ; true return { ) ) null == b ( & & ) null == a ( ( if { ) b java.lang.String final , a java.lang.String final ( METHOD_1 boolean static private 
public com.google.gerrit.reviewdb.client.Change getChange ( ) { return notes . getChange ( ) ; } } ; ) ( getChange . notes return { ) ( getChange com.google.gerrit.reviewdb.client.Change public 
private java.util.List < com.google.gerrit.reviewdb.client.Change . Id > METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException , java.io.IOException { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . get ( ) , c ) ; return VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) ( METHOD_3 . VAR_1 return ; ) c , ) ( get . VAR_3 ( METHOD_2 . VAR_2 = VAR_1 TYPE_1 { java.io.IOException , com.google.gwtorm.server.OrmException throws ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 > Id . com.google.gerrit.reviewdb.client.Change < java.util.List private 
public void METHOD_1 ( final TYPE_1 . Project p ) { if ( p ! = null ) { VAR_1 . METHOD_2 ( p . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( p . getId ( ) ) ; } } } } ; ) ) ( getId . p ( METHOD_2 . VAR_1 ; ) ) ( METHOD_3 . p ( METHOD_2 . VAR_1 { ) null = ! p ( if { ) p Project . TYPE_1 final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { TYPE_2 user = VAR_1 . get ( ) ; if ( user instanceof TYPE_3 ) { return ( ( TYPE_3 ) ( user ) ) . getAccountId ( ) ; } else { return VAR_2 ; } } } } ; VAR_2 return { else } ; ) ( getAccountId . ) ) user ( ) TYPE_3 ( ( return { ) TYPE_3 instanceof user ( if ; ) ( get . VAR_1 = user TYPE_2 { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( false ) ; } } } } ; ) false ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , com.google.gerrit.reviewdb.client.Change . Status status ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , null , status , null ) ; } } ; ) null , status , null , null , null , repo ( METHOD_2 return { java.lang.Exception throws ) status Status . com.google.gerrit.reviewdb.client.Change , repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 { ) ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName , false ) ; } } } } ; ) false , projectName ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { java.io.IOException throws ) ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 ! = null ) { VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } } } } ; ) ) ( METHOD_2 . VAR_1 ( METHOD_1 . VAR_2 { ) null = ! VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private static java.lang.String METHOD_1 ( ) { return ( STRING_1 + ( VAR_1 ) ) + ( ( VAR_2 ) ++ ) ; } } ; ) ++ ) VAR_2 ( ( + ) ) VAR_1 ( + STRING_1 ( return { ) ( METHOD_1 java.lang.String static private 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return { ) ( METHOD_1 TYPE_1 public 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 ) ; } } ; ) VAR_1 , VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 static private 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } } ; this return ; VAR_1 = VAR_1 . this { ) VAR_1 java.lang.String final ( METHOD_1 TYPE_1 public 
public TYPE_1 apply ( TYPE_2 VAR_1 ) throws TYPE_3 { format = VAR_2 ; return display ( null ) ; } } ; ) null ( display return ; VAR_2 = format { TYPE_3 throws ) VAR_1 TYPE_2 ( apply TYPE_1 public 
public void METHOD_1 ( final TYPE_1 event ) { if ( ( event . METHOD_2 ( ) ) == ( VAR_1 ) ) { event . METHOD_3 ( ) ; event . METHOD_4 ( ) ; VAR_2 . submit ( ) ; } } } } ; ) ( submit . VAR_2 ; ) ( METHOD_4 . event ; ) ( METHOD_3 . event { ) ) VAR_1 ( == ) ) ( METHOD_2 . event ( ( if { ) event TYPE_1 final ( METHOD_1 void public 
public Change . Id getId ( ) { return notes . getChangeId ( ) ; } } ; ) ( getChangeId . notes return { ) ( getId Id . Change public 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id id , final java.lang.String VAR_1 ) { return ( ( STRING_1 + ( id . toString ( ) ) ) + STRING_2 ) + VAR_1 ; } } ; VAR_1 + ) STRING_2 + ) ) ) ( toString . id ( + STRING_1 ( ( return { ) VAR_1 java.lang.String final , id Id . TYPE_1 final ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_2 ; ) ( METHOD_2 . VAR_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
private java.util.List < TYPE_1 > METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) throws TYPE_2 { return VAR_3 . get ( getKey ( VAR_1 , VAR_2 ) ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ) VAR_2 , VAR_1 ( getKey ( get . VAR_3 return { TYPE_2 throws ) VAR_2 org.eclipse.jgit.lib.ObjectId , VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 > TYPE_1 < java.util.List private 
protected void METHOD_1 ( ) { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; super . METHOD_1 ( ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ( METHOD_1 . super ; ) false ( METHOD_3 . VAR_1 ; ) false ( METHOD_2 { ) ( METHOD_1 void protected 
public java.lang.String METHOD_1 ( int i ) { java.lang.String VAR_1 = STRING_1 ; if ( ( VAR_2 . length ) > i ) { VAR_1 = VAR_2 [ i ] ; } return VAR_1 ; } } ; VAR_1 return } ; ] i [ VAR_2 = VAR_1 { ) i > ) length . VAR_2 ( ( if ; STRING_1 = VAR_1 java.lang.String { ) i int ( METHOD_1 java.lang.String public 
private native void METHOD_1 ( java.lang.String i , TYPE_1 e ) ; ; ) e TYPE_1 , i java.lang.String ( METHOD_1 void native private 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( VAR_1 ) ; change . METHOD_3 ( VAR_2 ) ; TYPE_1 . METHOD_4 ( change ) ; return change ; } return null ; } } ; null return } ; change return ; ) change ( METHOD_4 . TYPE_1 ; ) VAR_2 ( METHOD_3 . change ; ) VAR_1 ( METHOD_2 . change { ) ) ( METHOD_1 . ) ( getStatus . change ( if { ) change com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
boolean METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = ( ( METHOD_2 ( ) . METHOD_3 ( ) ) || ( METHOD_4 ( VAR_2 ) ) ) & & ( METHOD_5 ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( METHOD_5 ( & & ) ) ) VAR_2 ( METHOD_4 ( || ) ) ( METHOD_3 . ) ( METHOD_2 ( ( = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 boolean 
public void onSuccess ( ) { TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ; } } ; ) ) ) line , VAR_2 , ) ( get . id , ) ( getParentKey . id , VAR_1 ( TYPE_3 new : ) id ( TYPE_2 new ? edit ( , token ( display . TYPE_1 { ) ( onSuccess void public 
public void put ( TYPE_1 user , TYPE_2 VAR_1 ) { VAR_2 . put ( TYPE_3 . METHOD_1 ( user . METHOD_2 ( ) ) , METHOD_3 ( TYPE_3 . METHOD_1 ( VAR_1 ) ) ) ; } } ; ) ) ) VAR_1 ( METHOD_1 . TYPE_3 ( METHOD_3 , ) ) ( METHOD_2 . user ( METHOD_1 . TYPE_3 ( put . VAR_2 { ) VAR_1 TYPE_2 , user TYPE_1 ( put void public 
private java.lang.String METHOD_1 ( ) { final java.lang.String url = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ; return url ; } } ; url return ; ) VAR_3 , null , VAR_2 ( METHOD_2 . VAR_1 = url java.lang.String final { ) ( METHOD_1 java.lang.String private 
private org.eclipse.jgit.lib.Repository METHOD_1 ( TYPE_1 project ) throws java.io.IOException , TYPE_2 { return VAR_1 . METHOD_1 ( project . getProject ( ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) ( getProject . project ( METHOD_1 . VAR_1 return { TYPE_2 , java.io.IOException throws ) project TYPE_1 ( METHOD_1 org.eclipse.jgit.lib.Repository private 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( ( ( TYPE_4 . base ( project ) ) + STRING_1 ) ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_2 ( METHOD_2 . ) ) STRING_1 + ) ) project ( base . TYPE_4 ( ( ( TYPE_3 new { ) VAR_1 > TYPE_2 < TYPE_1 , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 void static public 
public boolean METHOD_1 ( ) { return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) . METHOD_2 ( ) ) ) || ( METHOD_4 ( ) . METHOD_1 ( ) ) ) || ( METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 ( || ) ) ) ( METHOD_1 . ) ( METHOD_4 ( || ) ) ) ( METHOD_2 . ) ( METHOD_3 ( || ) ) ( METHOD_2 ( ( ( return { ) ( METHOD_1 boolean public 
protected void METHOD_1 ( final java.util.List < TYPE_1 . Project > result ) { VAR_1 . display ( result ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 ; false = VAR_2 { ) VAR_2 ( if ; ) result ( display . VAR_1 { ) result > Project . TYPE_1 < java.util.List final ( METHOD_1 void protected 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) , METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 , ) ( METHOD_4 , ) ( METHOD_3 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public TYPE_1 < TYPE_2 > apply ( java.util.List < ? > input ) throws java.lang.Exception { TYPE_3 . METHOD_1 ( VAR_1 , repo ) ; TYPE_3 . METHOD_1 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_2 ( ) ; return TYPE_4 . METHOD_3 ( null ) ; } } ; ) null ( METHOD_3 . TYPE_4 return ; ) ( METHOD_2 . VAR_4 ; ) VAR_3 , VAR_2 ( METHOD_1 . TYPE_3 ; ) repo , VAR_1 ( METHOD_1 . TYPE_3 { java.lang.Exception throws ) input > ? < java.util.List ( apply > TYPE_2 < TYPE_1 public 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; METHOD_2 ( ) . to ( VAR_4 class ) ; } } ; ) class VAR_4 ( to . ) ( METHOD_2 ; ) class VAR_3 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_1 ( to . ) ( METHOD_2 { ) ( METHOD_1 void protected 
public void METHOD_1 ( int size ) { if ( ( VAR_1 ) ! = null ) throw new TYPE_1 ( STRING_1 ) ; if ( ( VAR_2 ) ! = null ) VAR_3 = size ; else VAR_2 = new TYPE_2 ( size ) ; } } ; ) size ( TYPE_2 new = VAR_2 else ; size = VAR_3 ) null = ! ) VAR_2 ( ( if ; ) STRING_1 ( TYPE_1 new throw ) null = ! ) VAR_1 ( ( if { ) size int ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; assertEquals ( in , METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 , in ( assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps , java.util.Map < com.google.gerrit.reviewdb.client.PatchSet.Id , TYPE_2 < com.google.gerrit.reviewdb.client . PatchSetApproval > > approvals , TYPE_3 VAR_2 ) { METHOD_1 ( VAR_1 , ps , approvals , false , null , VAR_2 ) ; } } ; ) VAR_2 , null , false , approvals , ps , VAR_1 ( METHOD_1 { ) VAR_2 TYPE_3 , approvals > > PatchSetApproval . com.google.gerrit.reviewdb.client < TYPE_2 , com.google.gerrit.reviewdb.client.PatchSet.Id < java.util.Map , ps > com.google.gerrit.reviewdb.client.PatchSet < TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void public 
public Project . NameKey METHOD_1 ( ) { return null ; } } ; null return { ) ( METHOD_1 NameKey . Project public 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . set ( VAR_2 ) ; try { METHOD_2 ( VAR_3 ) ; } finally { TYPE_2 . set ( VAR_1 ) ; } } } } ; ) VAR_1 ( set . TYPE_2 { finally } ; ) VAR_3 ( METHOD_2 { try ; ) VAR_2 ( set . TYPE_2 = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( c ) ; VAR_1 . METHOD_3 ( c ) ; } } ; ) c ( METHOD_3 . VAR_1 ; ) c ( METHOD_2 { com.google.gwtorm.server.OrmException throws ) c TYPE_1 ( METHOD_1 void private 
void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 , VAR_3 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_3 , STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { ) VAR_2 int , VAR_1 TYPE_1 ( METHOD_1 void 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.Change t ) { return new com.google.gerrit.server.query.change.ChangeData ( t ) ; } } ; ) t ( com.google.gerrit.server.query.change.ChangeData new return { ) t com.google.gerrit.reviewdb.client.Change ( METHOD_1 com.google.gerrit.server.query.change.ChangeData 
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; METHOD_2 ( false ) ; } } ; ) false ( METHOD_2 ; ) ( METHOD_1 . VAR_2 ; ) ( METHOD_1 . VAR_1 { ) ( METHOD_1 void private 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( ) ; } } ; ) ( METHOD_2 { ) event TYPE_1 final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 . index ( VAR_2 ) ) . METHOD_3 ( true ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( cd ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) cd ( METHOD_5 . VAR_3 ; ) ( METHOD_4 ; ) true ( METHOD_3 . ) ) VAR_2 ( index . VAR_1 ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < ? > c = TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_1 = c . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( true ) ; VAR_1 . METHOD_5 ( c , false ) ; } } ; ) false , c ( METHOD_5 . VAR_1 ; ) true ( METHOD_4 . VAR_1 ; ) STRING_2 ( METHOD_3 . c = VAR_1 TYPE_2 ; ) STRING_1 ( METHOD_2 . TYPE_1 = c > ? < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { try { VAR_3 . apply ( VAR_4 . METHOD_2 ( ) , VAR_1 , VAR_2 ) ; } catch ( java.lang.Exception e ) { throw TYPE_3 . METHOD_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( METHOD_3 . TYPE_3 throw { ) e java.lang.Exception ( catch } ; ) VAR_2 , VAR_1 , ) ( METHOD_2 . VAR_4 ( apply . VAR_3 { try { TYPE_2 throws ) VAR_2 TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void public 
public void onSuccess ( ) { TYPE_1 . display ( token , ( edit ? new TYPE_2 ( VAR_1 , id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ; } } ; ) ) ) line , VAR_2 , ) ( get . id , ) ( getParentKey . id , VAR_1 ( TYPE_3 new : ) line , id , VAR_1 ( TYPE_2 new ? edit ( , token ( display . TYPE_1 { ) ( onSuccess void public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return VAR_1 ; } } ; VAR_1 return { TYPE_3 throws ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . METHOD_2 ( STRING_1 , new TYPE_2 ( VAR_2 ) ) ; org.junit.Assert.assertEquals ( VAR_3 , r . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . r , VAR_3 ( org.junit.Assert.assertEquals ; ) ) VAR_2 ( TYPE_2 new , STRING_1 ( METHOD_2 . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) ; METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_2 class ) ; } } ; ) class VAR_2 ( METHOD_3 . ) STRING_1 ( METHOD_2 ; ) class VAR_1 ( METHOD_3 . ) STRING_1 ( METHOD_2 { ) ( METHOD_1 void protected 
public int getId ( ) { return changeId . get ( ) ; } } ; ) ( get . changeId return { ) ( getId int public 
private static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 { TYPE_3 out = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( out , VAR_2 ) ; return out . toString ( TYPE_4 . name ( ) ) ; } } ; ) ) ( name . TYPE_4 ( toString . out return ; ) VAR_2 , out ( METHOD_2 . VAR_1 ; ) ( TYPE_3 new = out TYPE_3 { TYPE_2 throws ) VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 java.lang.String static private 
public void METHOD_1 ( ) { synchronized ( VAR_1 class ) { VAR_2 = TYPE_1 . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( STRING_1 ) ) ; format = new TYPE_2 ( STRING_2 ) ; } } } } ; ) STRING_2 ( TYPE_2 new = format ; ) ) STRING_1 ( METHOD_4 . TYPE_1 ( METHOD_3 . TYPE_1 ; ) ( METHOD_2 . TYPE_1 = VAR_2 { ) class VAR_1 ( synchronized { ) ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 type ) { VAR_1 = type . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . type = VAR_1 { ) type TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; java.util.List < TYPE_1 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) ; } } ; ) 0 , ) ( size . reviewers ( org.junit.Assert.assertEquals ; ) INT_1 , STRING_1 , changeId ( METHOD_3 = reviewers > TYPE_1 < java.util.List ; ) ( getChangeId . ) ( METHOD_2 = changeId java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 create ( int index ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_1 ( ) , VAR_3 , value , VAR_2 . METHOD_2 ( ) ) ; VAR_4 . insert ( VAR_1 , index ) ; return VAR_1 ; } } ; VAR_1 return ; ) index , VAR_1 ( insert . VAR_4 ; ) ) ( METHOD_2 . VAR_2 , value , VAR_3 , ) ( METHOD_1 . VAR_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) index int ( create TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { walk . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . walk { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 get ( ) { return VAR_1 . METHOD_1 ( new com.google.gerrit.reviewdb.client.Account.Id ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( com.google.gerrit.reviewdb.client.Account.Id new ( METHOD_1 . VAR_1 return { ) ( get TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 account ) { return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , account ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; } } ; ) ) ) ( getId . account , ) db ( of . TYPE_4 ( create . VAR_3 , ) account , server ( TYPE_3 new , VAR_2 ( METHOD_2 . VAR_1 return { ) account TYPE_2 ( METHOD_1 TYPE_1 private 
private TYPE_1 < com.google.gerrit.reviewdb.client.Project.NameKey , TYPE_2 > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return METHOD_1 ( cd . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . cd ( METHOD_1 return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > TYPE_2 , com.google.gerrit.reviewdb.client.Project.NameKey < TYPE_1 private 
public void METHOD_1 ( ) throws java.io.IOException { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; org.junit.Assert.assertEquals ( TYPE_1 . METHOD_2 ( VAR_3 . format ( null , null , null , null , cfg , VAR_1 ) , VAR_2 ) , 1 ) ; } } ; ) 1 , ) VAR_2 , ) VAR_1 , cfg , null , null , null , null ( format . VAR_3 ( METHOD_2 . TYPE_1 ( org.junit.Assert.assertEquals ; STRING_2 = VAR_2 java.lang.String ; STRING_1 = VAR_1 java.lang.String { java.io.IOException throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) ; METHOD_5 ( project , cfg ) ; } } ; ) cfg , project ( METHOD_5 ; ) STRING_1 , VAR_3 , VAR_2 , cfg ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . ) project ( METHOD_2 . VAR_1 = cfg ProjectConfig . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void private 
protected void METHOD_1 ( final java.util.List < TYPE_1 . Project > result ) { projects . display ( result ) ; projects . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . projects ; ) result ( display . projects { ) result > Project . TYPE_1 < java.util.List final ( METHOD_1 void protected 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null , 0 ) ; } } ; ) 0 , null ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static public 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 ) { return METHOD_1 ( VAR_1 , VAR_2 , null ) ; } } ; ) null , VAR_2 , VAR_1 ( METHOD_1 return { ) VAR_2 TYPE_2 , VAR_1 TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List private 
private static java.lang.String METHOD_1 ( java.lang.String project , java.lang.String query ) { return query . METHOD_1 ( STRING_1 , project ) ; } } ; ) project , STRING_1 ( METHOD_1 . query return { ) query java.lang.String , project java.lang.String ( METHOD_1 java.lang.String static private 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; factory ( VAR_2 . Factory class ) ; } } ; ) class Factory . VAR_2 ( factory ; ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( TYPE_4 < TYPE_1 , TYPE_2 > VAR_1 ) { return TYPE_5 . METHOD_1 ( create ( VAR_1 , false ) ) ; } } ; ) ) false , VAR_1 ( create ( METHOD_1 . TYPE_5 return { ) VAR_1 > TYPE_2 , TYPE_1 < TYPE_4 ( METHOD_1 > TYPE_2 , TYPE_1 < TYPE_3 > TYPE_2 , TYPE_1 < public 
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 class ) ; com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > VAR_3 = com.google.gerrit.extensions.registration.DynamicSet . METHOD_3 ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 = new TYPE_2 ( null , VAR_3 , null , null ) ; } } ; ) null , null , VAR_3 , null ( TYPE_2 new = VAR_4 ; ) VAR_1 ( add . VAR_3 ; ) ( METHOD_3 . com.google.gerrit.extensions.registration.DynamicSet = VAR_3 > TYPE_1 < com.google.gerrit.extensions.registration.DynamicSet ; ) class VAR_2 ( METHOD_2 = VAR_1 { ) ( METHOD_1 void public 
TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) { public void run ( ) { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } } ; } } ; } } ; ) ) ) ) ( METHOD_3 ( ! ( ( METHOD_2 { ) ( run void public { ) ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus ( ) ) == ( VAR_1 ) ) { change . METHOD_1 ( VAR_2 ) ; TYPE_1 . METHOD_2 ( change ) ; return change ; } else { return null ; } } } } ; null return { else } ; change return ; ) change ( METHOD_2 . TYPE_1 ; ) VAR_2 ( METHOD_1 . change { ) ) VAR_1 ( == ) ) ( getStatus . change ( ( if { ) change com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
public TYPE_1 reviewers ( ) throws com.google.gwtorm.server.OrmException { return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) . values ( ) ) ; } } ; ) ) ( values . ) ( approvals , ) ( notes ( METHOD_1 . VAR_1 return { com.google.gwtorm.server.OrmException throws ) ( reviewers TYPE_1 public 
public void METHOD_1 ( byte [ ] VAR_1 ) { rp . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . rp { ) VAR_1 ] [ byte ( METHOD_1 void public 
public com.google.gerrit.server.query.change.ChangeData getChange ( ) throws com.google.gwtorm.server.OrmException { return TYPE_1 . METHOD_1 ( VAR_1 . get ( ) . METHOD_2 ( commit . getChangeId ( ) ) ) ; } } ; ) ) ) ( getChangeId . commit ( METHOD_2 . ) ( get . VAR_1 ( METHOD_1 . TYPE_1 return { com.google.gwtorm.server.OrmException throws ) ( getChange com.google.gerrit.server.query.change.ChangeData public 
java.lang.String METHOD_1 ( ) ; ; ) ( METHOD_1 java.lang.String 
public void run ( ) { int w = cm . METHOD_1 ( ) . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( w , VAR_1 ) ; METHOD_6 ( true ) ; } } ; ) true ( METHOD_6 ; ) VAR_1 , w ( METHOD_5 . ) ( METHOD_4 . ) ( METHOD_3 ; ) ( METHOD_2 . ) ( METHOD_1 . cm = w int { ) ( run void public 
private static void METHOD_1 ( final TYPE_1 m , final java.lang.String VAR_1 , final java.lang.String VAR_2 ) { m . METHOD_2 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ; } } ; ) ) VAR_2 , VAR_1 ( TYPE_2 new ( METHOD_2 . m { ) VAR_2 java.lang.String final , VAR_1 java.lang.String final , m TYPE_1 final ( METHOD_1 void static private 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( id ) . view ( STRING_1 ) . METHOD_2 ( TYPE_4 . create ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( create . TYPE_4 ( METHOD_2 . ) STRING_1 ( view . ) id ( change . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , new java.lang.String ( VAR_6 ) ) ; return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; } } ; ) ( getChangeId . ) STRING_1 , git ( METHOD_2 . VAR_2 return ; ) ) VAR_6 ( java.lang.String new , VAR_5 , VAR_4 , VAR_1 , db ( create . VAR_3 = VAR_2 TYPE_3 { java.lang.Exception throws ) VAR_1 TYPE_2 , git TYPE_1 ( METHOD_1 java.lang.String private 
public void METHOD_1 ( ) { } } { ) ( METHOD_1 void public 
public boolean METHOD_1 ( ) { return METHOD_2 ( VAR_1 . Collections < java.lang.String > METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 > java.lang.String < Collections . VAR_1 ( METHOD_2 return { ) ( METHOD_1 boolean public 
public TYPE_1 METHOD_1 ( final TYPE_2 . Id id ) throws TYPE_3 , TYPE_4 . OrmException { return TYPE_5 . METHOD_2 ( METHOD_3 ( id ) , db . get ( ) ) ; } } ; ) ) ( get . db , ) id ( METHOD_3 ( METHOD_2 . TYPE_5 return { OrmException . TYPE_4 , TYPE_3 throws ) id Id . TYPE_2 final ( METHOD_1 TYPE_1 public 
TYPE_1 create ( TYPE_2 change ) ; ; ) change TYPE_2 ( create TYPE_1 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { try { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( STRING_2 , e ) ; } } } } ; ) e , STRING_2 ( TYPE_3 new throw { ) e TYPE_2 ( catch } ; ) STRING_1 , VAR_1 ( METHOD_1 . TYPE_1 return { try { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_2 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super ; ) true ( METHOD_2 . VAR_3 ; ) true ( METHOD_2 . VAR_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
private TYPE_1 auth ( final TYPE_2 . Account account ) { return account ! = null ? new TYPE_1 ( account . getId ( ) , false ) : null ; } } ; null : ) false , ) ( getId . account ( TYPE_1 new ? null = ! account return { ) account Account . TYPE_2 final ( auth TYPE_1 private 
public synchronized TYPE_1 METHOD_1 ( ) { TYPE_2 . METHOD_2 ( ( ( VAR_1 ) == null ) , STRING_1 ) ; if ( ( VAR_2 ) == null ) { VAR_2 = new TYPE_1 ( new TYPE_3 ( VAR_3 , VAR_4 ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) VAR_4 , VAR_3 ( TYPE_3 new ( TYPE_1 new = VAR_2 { ) null == ) VAR_2 ( ( if ; ) STRING_1 , ) null == ) VAR_1 ( ( ( METHOD_2 . TYPE_2 { ) ( METHOD_1 TYPE_1 synchronized public 
private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_3 instanceof VAR_1 ( return } ; true return { ) TYPE_2 instanceof VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static private 
private boolean METHOD_1 ( ) { TYPE_1 cfg = VAR_1 . METHOD_2 ( TYPE_2 . get ( VAR_2 class , VAR_3 class ) ) ; return new TYPE_3 ( ) . METHOD_3 ( cfg ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) cfg ( METHOD_3 . ) ( TYPE_3 new return ; ) ) class VAR_3 , class VAR_2 ( get . TYPE_2 ( METHOD_2 . VAR_1 = cfg TYPE_1 { ) ( METHOD_1 boolean private 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( VAR_2 ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_3 , VAR_4 , STRING_1 ) . METHOD_5 ( true ) ; METHOD_6 ( VAR_2 , cfg ) ; } } ; ) cfg , VAR_2 ( METHOD_6 ; ) true ( METHOD_5 . ) STRING_1 , VAR_4 , VAR_3 , cfg ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . ) VAR_2 ( METHOD_2 . VAR_1 = cfg ProjectConfig . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void private 
private java.lang.String METHOD_1 ( ) { final java.lang.String VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , null , VAR_4 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_4 , null , VAR_3 ( METHOD_2 . VAR_2 = VAR_1 java.lang.String final { ) ( METHOD_1 java.lang.String private 
void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( ) ; METHOD_2 ( ) ; cm . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . cm ; ) ( METHOD_2 ; ) ( METHOD_2 . VAR_1 { ) e TYPE_1 ( METHOD_1 void 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( ( token ) == null ) { return null ; } else { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return { else } ; null return { ) null == ) token ( ( if { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > commit ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema , java.lang.String id ) { return new TYPE_3 ( schema , id ) ; } } ; ) id , schema ( TYPE_3 new return { ) id java.lang.String , schema > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( commit > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
public org.eclipse.jgit.revwalk.RevCommit commit ( TYPE_1 update ) throws java.io.IOException { TYPE_2 VAR_1 = METHOD_1 ( update ) ; try { VAR_1 . METHOD_2 ( update . METHOD_3 ( ) ) ; return VAR_1 . commit ( ) ; } finally { VAR_1 . close ( ) ; } } } } ; ) ( close . VAR_1 { finally } ; ) ( commit . VAR_1 return ; ) ) ( METHOD_3 . update ( METHOD_2 . VAR_1 { try ; ) update ( METHOD_1 = VAR_1 TYPE_2 { java.io.IOException throws ) update TYPE_1 ( commit org.eclipse.jgit.revwalk.RevCommit public 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id , TYPE_2 VAR_1 ) ; ; ) VAR_1 TYPE_2 , id Id . com.google.gerrit.reviewdb.client.Change , project com.google.gerrit.reviewdb.client.Project.NameKey ( create TYPE_1 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 , STRING_1 , VAR_3 ) ; assertThat ( VAR_4 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_4 ( assertThat ; ) VAR_3 , STRING_1 , VAR_1 ( METHOD_3 ; ) VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 < java.lang.String > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_2 : : METHOD_1 ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . TYPE_1 ( METHOD_4 . ) METHOD_1 : : TYPE_2 ( METHOD_3 . ) VAR_1 ( METHOD_2 . VAR_2 return { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 > java.lang.String < TYPE_1 private 
public void METHOD_1 ( java.lang.String changeId ) { java.lang.String VAR_1 = ctl . getChange ( ) . getKey ( ) . get ( ) ; TYPE_1 . METHOD_2 ( VAR_1 . equals ( changeId ) , STRING_1 , VAR_1 , changeId ) ; this . changeId = changeId ; } } ; changeId = changeId . this ; ) changeId , VAR_1 , STRING_1 , ) changeId ( equals . VAR_1 ( METHOD_2 . TYPE_1 ; ) ( get . ) ( getKey . ) ( getChange . ctl = VAR_1 java.lang.String { ) changeId java.lang.String ( METHOD_1 void public 
public boolean METHOD_1 ( TYPE_1 user ) { return false ; } } ; false return { ) user TYPE_1 ( METHOD_1 boolean public 
private static org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { org.eclipse.jgit.lib.ObjectId id = VAR_1 . insert ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_2 ( ) ; return id ; } } ; id return ; ) ( METHOD_2 . VAR_1 ; ) ) ( TYPE_2 new ( insert . VAR_1 = id org.eclipse.jgit.lib.ObjectId { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 org.eclipse.jgit.lib.ObjectId static private 
private static TYPE_1 METHOD_1 ( int id , java.lang.String VAR_1 ) { return TYPE_2 . change ( id ) . view ( VAR_1 ) ; } } ; ) VAR_1 ( view . ) id ( change . TYPE_2 return { ) VAR_1 java.lang.String , id int ( METHOD_1 TYPE_1 static private 
TYPE_1 create ( TYPE_2 . NameKey VAR_1 , org.eclipse.jgit.revwalk.RevCommit VAR_2 , org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.Repository db , com.google.gerrit.reviewdb.client.Project VAR_3 , java.util.List < com.google.gerrit.reviewdb.client.Change > VAR_4 , java.util.Map < com.google.gerrit.reviewdb.client.Change . Id , TYPE_3 > VAR_5 ) ; ; ) VAR_5 > TYPE_3 , Id . com.google.gerrit.reviewdb.client.Change < java.util.Map , VAR_4 > com.google.gerrit.reviewdb.client.Change < java.util.List , VAR_3 com.google.gerrit.reviewdb.client.Project , db org.eclipse.jgit.lib.Repository , rw org.eclipse.jgit.revwalk.RevWalk , VAR_2 org.eclipse.jgit.revwalk.RevCommit , VAR_1 NameKey . TYPE_2 ( create TYPE_1 
public TYPE_1 . Result METHOD_1 ( TYPE_2 edit , java.lang.String file ) throws TYPE_3 , TYPE_4 , java.io.IOException { return METHOD_2 ( VAR_1 , edit , file , null ) ; } } ; ) null , file , edit , VAR_1 ( METHOD_2 return { java.io.IOException , TYPE_4 , TYPE_3 throws ) file java.lang.String , edit TYPE_2 ( METHOD_1 Result . TYPE_1 public 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; factory ( VAR_3 . Factory class ) ; } } ; ) class Factory . VAR_3 ( factory ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void protected 
private static java.util.Set < java.lang.String > METHOD_1 ( TYPE_1 . ChangeInfo change ) { return new TYPE_2 < java.lang.String > ( change . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . change ( > java.lang.String < TYPE_2 new return { ) change ChangeInfo . TYPE_1 ( METHOD_1 > java.lang.String < java.util.Set static private 
public java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( change . branch ) ; } } ; ) branch . change ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String public 
public java.lang.String METHOD_1 ( java.lang.String name ) { java.lang.String VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 ! = null ) { return VAR_1 ; } else { return super . METHOD_1 ( name ) ; } } } } ; ) name ( METHOD_1 . super return { else } ; VAR_1 return { ) null = ! VAR_1 ( if ; ) name ( get . VAR_2 = VAR_1 java.lang.String { ) name java.lang.String ( METHOD_1 java.lang.String public 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { return TYPE_2 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( VAR_1 ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) VAR_1 ( METHOD_4 . TYPE_3 , ) VAR_1 ( METHOD_3 ( METHOD_2 . TYPE_2 return { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { TYPE_2 result = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . result , ) VAR_2 ( METHOD_4 . TYPE_4 ( org.junit.Assert.assertEquals ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 . ) ( TYPE_3 new = result TYPE_2 { java.lang.Exception throws ) VAR_2 ... java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( ) { TYPE_2 u = user . get ( ) ; if ( u . METHOD_2 ( ) ) { return u . METHOD_3 ( ) . METHOD_1 ( ) ; } else { return VAR_1 . get ( ) ; } } } } ; ) ( get . VAR_1 return { else } ; ) ( METHOD_1 . ) ( METHOD_3 . u return { ) ) ( METHOD_2 . u ( if ; ) ( get . user = u TYPE_2 { ) ( METHOD_1 TYPE_1 private 
public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > refs , org.eclipse.jgit.lib.Repository repo , TYPE_2 VAR_1 ) throws TYPE_3 { return VAR_2 . create ( METHOD_2 ( ) , METHOD_3 ( ) ) . METHOD_1 ( refs , repo , VAR_1 ) ; } } ; ) VAR_1 , repo , refs ( METHOD_1 . ) ) ( METHOD_3 , ) ( METHOD_2 ( create . VAR_2 return { TYPE_3 throws ) VAR_1 TYPE_2 , repo org.eclipse.jgit.lib.Repository , refs > TYPE_1 , java.lang.String < java.util.Map ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_1 . VAR_3 { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ! ( VAR_1 . isEmpty ( ) ) ) ) { revision = VAR_1 ; } } } } ; VAR_1 = revision { ) ) ) ) ( isEmpty . VAR_1 ( ! ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( db ) ) & & ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_3 ( & & ) ) db ( METHOD_2 ( return { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean public 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id VAR_1 ) { return STRING_1 + ( VAR_1 . get ( ) ) ; } } ; ) ) ( get . VAR_1 ( + STRING_1 return { ) VAR_1 Id . TYPE_1 final ( METHOD_1 java.lang.String static public 
public static java.lang.String METHOD_1 ( final TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { final byte [ ] VAR_1 = new byte [ INT_1 ] ; TYPE_3 . METHOD_2 ( VAR_1 , db ) ; return TYPE_4 . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . TYPE_4 return ; ) db , VAR_1 ( METHOD_2 . TYPE_3 ; ] INT_1 [ byte new = VAR_1 ] [ byte final { OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 final ( METHOD_1 java.lang.String static public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . ) VAR_1 ( id . ) STRING_1 , id ( revision . TYPE_3 { ) VAR_2 > TYPE_2 < TYPE_1 , VAR_1 java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
public static TYPE_1 query ( TYPE_1 VAR_1 ) { java.util.Set < java.lang.String > VAR_2 = TYPE_2 . of ( TYPE_3 . getName ( ) , TYPE_4 . getName ( ) , TYPE_5 . getName ( ) ) ; return VAR_1 . METHOD_1 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_1 . VAR_1 return ; ) ) ( getName . TYPE_5 , ) ( getName . TYPE_4 , ) ( getName . TYPE_3 ( of . TYPE_2 = VAR_2 > java.lang.String < java.util.Set { ) VAR_1 TYPE_1 ( query TYPE_1 static public 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( ( METHOD_2 ( db ) ) & & ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ) & & ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . ) ( METHOD_6 . ) ( METHOD_5 ( & & ) ) ) VAR_2 ( METHOD_4 . ) ( METHOD_3 . VAR_1 ( & & ) ) db ( METHOD_2 ( ( return { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean private 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } } } } ; null = VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . get ( getAccountId ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( getAccountId ( get . VAR_2 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( TYPE_2 in ) throws TYPE_3 { try { return VAR_1 . get ( ) . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_3 new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) in , revision ( apply . ) ( get . VAR_1 return { try { TYPE_3 throws ) in TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 update = METHOD_2 ( METHOD_3 ( ) , VAR_1 ) ; update . METHOD_4 ( STRING_1 ) ; update . commit ( ) ; com.google.common.truth.Truth.assertThat ( update . getRevision ( ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) ( getRevision . update ( com.google.common.truth.Truth.assertThat ; ) ( commit . update ; ) STRING_1 ( METHOD_4 . update ; ) VAR_1 , ) ( METHOD_3 ( METHOD_2 = update TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean apply ( com.google.gerrit.reviewdb.client . PatchSetApproval input ) { return input . getAccountId ( ) . equals ( rsrc . METHOD_1 ( ) . getAccountId ( ) ) ; } } ; ) ) ( getAccountId . ) ( METHOD_1 . rsrc ( equals . ) ( getAccountId . input return { ) input PatchSetApproval . com.google.gerrit.reviewdb.client ( apply boolean public 
TYPE_1 < TYPE_2 . Account > METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) VAR_1 java.lang.String ( METHOD_1 > Account . TYPE_2 < TYPE_1 
public abstract boolean METHOD_1 ( ) ; ; ) ( METHOD_1 boolean abstract public 
private static boolean METHOD_1 ( TYPE_1 id ) { return ( STRING_1 . equals ( id . get ( ) ) ) || ( STRING_2 . METHOD_2 ( id . get ( ) ) ) ; } } ; ) ) ) ( get . id ( METHOD_2 . STRING_2 ( || ) ) ) ( get . id ( equals . STRING_1 ( return { ) id TYPE_1 ( METHOD_1 boolean static private 
public TYPE_1 base ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { VAR_1 . METHOD_1 ( STRING_1 , id . get ( ) ) ; return this ; } } ; this return ; ) ) ( get . id , STRING_1 ( METHOD_1 . VAR_1 { ) id com.google.gerrit.reviewdb.client.PatchSet.Id ( base TYPE_1 public 
void METHOD_1 ( TYPE_1 b ) { VAR_1 = b ; VAR_2 . METHOD_2 ( row , VAR_3 , ( ( b . value ) ! = 0 ? VAR_4 : STRING_1 ) ) ; } } ; ) ) STRING_1 : VAR_4 ? 0 = ! ) value . b ( ( , VAR_3 , row ( METHOD_2 . VAR_2 ; b = VAR_1 { ) b TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; new TYPE_1 ( ) . inject ( this ) ; } } ; ) this ( inject . ) ( TYPE_1 new ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void protected 
public void onSuccess ( java.lang.String result ) { TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId ) ) ; } } ; ) ) psId ( METHOD_1 . TYPE_2 ( display . TYPE_1 { ) result java.lang.String ( onSuccess void public 
public java.lang.String getName ( ) { return METHOD_1 ( ) . getName ( VAR_1 ) ; } } ; ) VAR_1 ( getName . ) ( METHOD_1 return { ) ( getName java.lang.String public 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) || ( METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 . ) ( METHOD_3 ( || ) ) VAR_1 ( METHOD_2 ( return { ) ( METHOD_1 boolean public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_2 ( STRING_2 ) ; TYPE_1 . METHOD_2 ( STRING_3 ) ; TYPE_1 . METHOD_2 ( STRING_4 ) ; TYPE_1 . METHOD_2 ( STRING_5 ) ; TYPE_1 . METHOD_2 ( STRING_6 ) ; } } ; ) STRING_6 ( METHOD_2 . TYPE_1 ; ) STRING_5 ( METHOD_2 . TYPE_1 ; ) STRING_4 ( METHOD_2 . TYPE_1 ; ) STRING_3 ( METHOD_2 . TYPE_1 ; ) STRING_2 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( final TYPE_1 result ) { VAR_1 . display ( result , VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 ; ) VAR_2 , result ( display . VAR_1 { ) result TYPE_1 final ( METHOD_1 void protected 
private void METHOD_1 ( ) { new TYPE_1 ( ) ; new TYPE_2 ( ) ; new TYPE_3 ( ) ; new TYPE_4 ( ) ; new TYPE_5 ( ) ; } } ; ) ( TYPE_5 new ; ) ( TYPE_4 new ; ) ( TYPE_3 new ; ) ( TYPE_2 new ; ) ( TYPE_1 new { ) ( METHOD_1 void private 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return METHOD_1 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; } } ; ) ) ( > TYPE_4 , java.lang.String < TYPE_3 new , VAR_1 ( METHOD_1 return { TYPE_2 throws ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 
private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_2 instanceof VAR_1 ( return { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static private 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ! ( VAR_1 . isEmpty ( ) ) ) ) { project = VAR_1 ; } } } } ; VAR_1 = project { ) ) ) ) ( isEmpty . VAR_1 ( ! ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; factory ( VAR_2 class ) ; bind ( VAR_3 class ) ; bind ( VAR_4 . Factory class ) ; } } ; ) class Factory . VAR_4 ( bind ; ) class VAR_3 ( bind ; ) class VAR_2 ( factory ; ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) ) id ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result ChangeInfo . TYPE_1 ( onSuccess void public 
private static java.lang.String METHOD_1 ( TYPE_1 user ) { if ( user . METHOD_2 ( ) ) { return user . getAccountId ( ) . toString ( ) ; } return user . toString ( ) ; } } ; ) ( toString . user return } ; ) ( toString . ) ( getAccountId . user return { ) ) ( METHOD_2 . user ( if { ) user TYPE_1 ( METHOD_1 java.lang.String static private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( in , METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 , in ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void onSuccess ( ) { TYPE_1 . display ( token , ( edit ? new TYPE_2 ( id , line ) : new TYPE_3 ( VAR_1 , id . getParentKey ( ) , id . get ( ) , VAR_2 , line ) ) ) ; } } ; ) ) ) line , VAR_2 , ) ( get . id , ) ( getParentKey . id , VAR_1 ( TYPE_3 new : ) line , id ( TYPE_2 new ? edit ( , token ( display . TYPE_1 { ) ( onSuccess void public 
private void METHOD_1 ( java.lang.String msg , TYPE_1 t ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) ; } } } } ; ) t , ) msg + ) STRING_2 + ) ) VAR_2 ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) t TYPE_1 , msg java.lang.String ( METHOD_1 void private 
public static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . METHOD_2 ( VAR_1 , id ) ; } } ; ) id , VAR_1 ( METHOD_2 . TYPE_2 return { ) id int ( METHOD_1 TYPE_1 static public 
TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } } ; ) VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 
public void run ( ) { for ( ; ; ) { try { if ( VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ) { return ; } } catch ( TYPE_1 e ) { } VAR_4 . METHOD_2 ( false ) ; } } } } ; ) false ( METHOD_2 . VAR_4 } { ) e TYPE_1 ( catch } } ; return { ) ) VAR_3 , VAR_2 ( METHOD_1 . VAR_1 ( if { try { ) ; ; ( for { ) ( run void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( CHAR_1 ) ; assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_4 . VAR_1 , STRING_1 ( assertEquals ; ) CHAR_1 ( METHOD_3 . VAR_1 ; ) null ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public int METHOD_1 ( ) { return 2 ; } } ; 2 return { ) ( METHOD_1 int public 
public boolean METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 boolean public 
protected void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { } } { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void protected 
public void METHOD_1 ( final java.lang.String message ) { this . message = message ; } } ; message = message . this { ) message java.lang.String final ( METHOD_1 void public 
protected void submit ( java.lang.String changeId , TYPE_1 input ) throws java.lang.Exception { submit ( changeId , input , null , null , true ) ; } } ; ) true , null , null , input , changeId ( submit { java.lang.Exception throws ) input TYPE_1 , changeId java.lang.String ( submit void protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( change , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; return null ; } } ; null return ; ) VAR_4 , VAR_3 , VAR_2 , VAR_1 , change ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 TYPE_1 public 
private static java.lang.String METHOD_1 ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { TYPE_1 VAR_2 = repo . METHOD_2 ( ) ; try { return VAR_2 . METHOD_3 ( VAR_1 ) . name ( ) ; } finally { VAR_2 . METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 . VAR_2 { finally } ; ) ( name . ) VAR_1 ( METHOD_3 . VAR_2 return { try ; ) ( METHOD_2 . repo = VAR_2 TYPE_1 { java.io.IOException throws ) VAR_1 org.eclipse.jgit.lib.ObjectId , repo org.eclipse.jgit.lib.Repository ( METHOD_1 java.lang.String static private 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . get ( ) . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e TYPE_3 | com.google.gwtorm.server.OrmException ( catch } ; ) in , revision ( apply . ) ( get . VAR_1 { try { TYPE_2 throws ) in TYPE_1 ( METHOD_1 void public 
public TYPE_1 < TYPE_2 . ReviewDb > get ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( get > ReviewDb . TYPE_2 < TYPE_1 public 
private void METHOD_1 ( TYPE_1 VAR_1 ) { for ( int i = ( TYPE_2 . METHOD_2 ( VAR_1 ) ) - 1 ; i > = 0 ; i -- ) { TYPE_2 . METHOD_3 ( VAR_1 , TYPE_2 . METHOD_4 ( VAR_1 , i ) ) ; } } } } ; ) ) i , VAR_1 ( METHOD_4 . TYPE_2 , VAR_1 ( METHOD_3 . TYPE_2 { ) -- i ; 0 = > i ; 1 - ) ) VAR_1 ( METHOD_2 . TYPE_2 ( = i int ( for { ) VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , java.lang.String VAR_1 , com.google.gerrit.reviewdb.server.ReviewDb db ) { } } { ) db com.google.gerrit.reviewdb.server.ReviewDb , VAR_1 java.lang.String , account com.google.gerrit.reviewdb.client.Account , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
void METHOD_1 ( ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; TYPE_1 . METHOD_2 ( VAR_3 , true ) ; input . METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; input . METHOD_5 ( true ) ; } } } } ; ) true ( METHOD_5 . input ; ) ) ( METHOD_4 . VAR_4 ( METHOD_3 . input ; ) true , VAR_3 ( METHOD_2 . TYPE_1 ; ) false ( METHOD_2 . VAR_2 { ) VAR_1 ( if { ) ( METHOD_1 void 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change ( VAR_1 ) ; return ( change ! = null ) & & ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) > 0 ) ; } } ; ) 0 > ) ) ) ( getValue ( METHOD_3 . ) ( METHOD_2 . change ( ( & & ) null = ! change ( return ; ) VAR_1 ( change . cd = change com.google.gerrit.reviewdb.client.Change { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( false ) ; } } ; ) false ( METHOD_2 ; ) VAR_1 ( METHOD_1 . super { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( METHOD_2 ( STRING_1 ) . name , VAR_1 ) ; } } ; ) VAR_1 , name . ) STRING_1 ( METHOD_2 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change ( VAR_1 ) ; return ( change ! = null ) & & ( ( change . METHOD_2 ( ) . METHOD_3 ( getValue ( ) ) ) < 0 ) ; } } ; ) 0 < ) ) ) ( getValue ( METHOD_3 . ) ( METHOD_2 . change ( ( & & ) null = ! change ( return ; ) VAR_1 ( change . cd = change com.google.gerrit.reviewdb.client.Change { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 , VAR_1 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 int public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > get ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } } ; ) ) STRING_1 , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( get > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( ( METHOD_2 ( ) ) || ( METHOD_3 ( db , cd ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 ( || ) ) ) cd , db ( METHOD_3 ( || ) ) ( METHOD_2 ( ( return { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean private 
public void METHOD_1 ( java.lang.String msg ) { VAR_1 . METHOD_2 ( msg ) ; VAR_1 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . VAR_1 ; ) msg ( METHOD_2 . VAR_1 { ) msg java.lang.String ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 == ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_3 . METHOD_1 ( ) ; } else { return VAR_4 . METHOD_1 ( ) ; } } } } ; ) ( METHOD_1 . VAR_4 return { else } ; ) ( METHOD_1 . VAR_3 return { ) ) ) ( METHOD_2 . VAR_2 ( == VAR_1 ( if { java.lang.Exception throws ) ( METHOD_1 TYPE_1 public 
private void display ( final TYPE_1 result ) { VAR_1 . display ( result , VAR_2 ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_1 ( ) ; } } } } ; ) ( METHOD_1 ; false = VAR_3 { ) VAR_3 ( if ; ) VAR_2 , result ( display . VAR_1 { ) result TYPE_1 final ( display void private 
void METHOD_1 ( TYPE_1 event ) { TYPE_2 ref = VAR_1 . getValue ( ) ; if ( ref ! = null ) { METHOD_2 ( ref ) ; } else { VAR_1 . METHOD_3 ( true ) ; } } } } ; ) true ( METHOD_3 . VAR_1 { else } ; ) ref ( METHOD_2 { ) null = ! ref ( if ; ) ( getValue . VAR_1 = ref TYPE_2 { ) event TYPE_1 ( METHOD_1 void 
public void onSuccess ( final TYPE_1 result ) { if ( ( ++ ( VAR_1 ) ) == ( VAR_2 . size ( ) ) ) { METHOD_1 ( ) ; } } } } ; ) ( METHOD_1 { ) ) ) ( size . VAR_2 ( == ) ) VAR_1 ( ++ ( ( if { ) result TYPE_1 final ( onSuccess void public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( final TYPE_2 < TYPE_1 > ... VAR_1 ) { if ( ( VAR_1 . length ) == 1 ) { return VAR_1 [ 0 ] ; } return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } } ; ) VAR_1 ( > TYPE_1 < TYPE_3 new return } ; ] 0 [ VAR_1 return { ) 1 == ) length . VAR_1 ( ( if { ) VAR_1 ... > TYPE_1 < TYPE_2 final ( METHOD_1 > TYPE_1 < TYPE_2 > TYPE_1 < static public 
void METHOD_1 ( int row ) { METHOD_2 ( ( row - 1 ) , row ) ; } } ; ) row , ) 1 - row ( ( METHOD_2 { ) row int ( METHOD_1 void 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; install ( new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new ( install ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public TYPE_1 . Change update ( TYPE_1 . Change change ) { if ( ( change . getStatus ( ) ) == ( VAR_1 ) ) { change . METHOD_1 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( change ) ; } return change ; } } ; change return } ; ) change ( METHOD_2 . TYPE_2 ; ) VAR_2 ( METHOD_1 . change { ) ) VAR_1 ( == ) ) ( getStatus . change ( ( if { ) change Change . TYPE_1 ( update Change . TYPE_1 public 
public void METHOD_1 ( TYPE_1 req , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( req , VAR_1 ) ; if ( ( query ) == null ) { VAR_2 . METHOD_2 ( ) ; } query = VAR_2 ; } } ; VAR_2 = query } ; ) ( METHOD_2 . VAR_2 { ) null == ) query ( ( if ; ) VAR_1 , req ( TYPE_3 new = VAR_2 TYPE_3 { ) VAR_1 TYPE_2 , req TYPE_1 ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) , this ) ; } } ; ) this , ) VAR_2 ( METHOD_3 ( METHOD_2 . TYPE_1 = VAR_1 { java.io.IOException throws ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; org.junit.Assert.assertEquals ( query ( in ) , VAR_1 . METHOD_3 ( in , 0 , VAR_2 ) ) ; } } ; ) ) VAR_2 , 0 , in ( METHOD_3 . VAR_1 , ) in ( query ( org.junit.Assert.assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 a , TYPE_2 < com.google.gerrit.reviewdb.client.PatchSet > ps , TYPE_3 VAR_1 ) { METHOD_1 ( a , ps , null , false , null , VAR_1 ) ; } } ; ) VAR_1 , null , false , null , ps , a ( METHOD_1 { ) VAR_1 TYPE_3 , ps > com.google.gerrit.reviewdb.client.PatchSet < TYPE_2 , a TYPE_1 ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( int changeId , java.lang.String VAR_1 ) { return TYPE_2 . change ( changeId ) . view ( STRING_1 ) . id ( VAR_1 ) ; } } ; ) VAR_1 ( id . ) STRING_1 ( view . ) changeId ( change . TYPE_2 return { ) VAR_1 java.lang.String , changeId int ( METHOD_1 TYPE_1 static public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id , TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id , VAR_1 ) ; } } ; ) VAR_1 , id , VAR_10 , VAR_9 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 TYPE_2 , id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 TYPE_1 public 
private TYPE_1 METHOD_1 ( ) { TYPE_1 in = new TYPE_1 ( ) ; in . branch = STRING_1 ; VAR_1 = STRING_2 ; in . project = project . get ( ) ; return in ; TYPE_2 VAR_2 ; TYPE_3 VAR_3 ; } } ; VAR_3 TYPE_3 ; VAR_2 TYPE_2 ; in return ; ) ( get . project = project . in ; STRING_2 = VAR_1 ; STRING_1 = branch . in ; ) ( TYPE_1 new = in TYPE_1 { ) ( METHOD_1 TYPE_1 private 
java.lang.String METHOD_1 ( ) throws TYPE_1 ; ; TYPE_1 throws ) ( METHOD_1 java.lang.String 
public java.lang.String METHOD_1 ( java.lang.String project ) { final java.lang.StringBuilder r = new java.lang.StringBuilder ( ) ; r . append ( STRING_1 ) ; r . append ( project ) ; return r . toString ( ) ; } } ; ) ( toString . r return ; ) project ( append . r ; ) STRING_1 ( append . r ; ) ( java.lang.StringBuilder new = r java.lang.StringBuilder final { ) project java.lang.String ( METHOD_1 java.lang.String public 
public static native void METHOD_1 ( java.lang.String t ) ; ; ) t java.lang.String ( METHOD_1 void native static public 
public void METHOD_1 ( int index ) { VAR_1 . METHOD_1 ( index ) ; } } ; ) index ( METHOD_1 . VAR_1 { ) index int ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) . METHOD_3 ( true ) ; } } ; ) true ( METHOD_3 . ) STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } } ; this return ; VAR_1 = VAR_1 . this { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 event ) { for ( TYPE_2 VAR_1 : METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( event . METHOD_3 ( ) ) , VAR_2 ) ) { METHOD_4 ( VAR_1 , event . METHOD_5 ( ) ) ; } } } } ; ) ) ( METHOD_5 . event , VAR_1 ( METHOD_4 { ) ) VAR_2 , ) ) ( METHOD_3 . event ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 : VAR_1 TYPE_2 ( for { ) event TYPE_1 ( METHOD_1 void public 
public boolean METHOD_1 ( int VAR_1 ) ; ; ) VAR_1 int ( METHOD_1 boolean public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return { ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
public TYPE_1 diff ( ) throws TYPE_2 { try { return VAR_1 . get ( ) . apply ( file ) . value ( ) ; } catch ( java.io.IOException | TYPE_3 | com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e com.google.gwtorm.server.OrmException | TYPE_3 | java.io.IOException ( catch } ; ) ( value . ) file ( apply . ) ( get . VAR_1 return { try { TYPE_2 throws ) ( diff TYPE_1 public 
private void METHOD_1 ( java.lang.String msg , TYPE_1 t ) { if ( ( ( VAR_1 ) ! = null ) & & ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , t ) ; } } } } ; ) t , ) msg + ) VAR_1 ( ( ( METHOD_3 . VAR_2 { ) ) ) ( METHOD_2 . VAR_2 ( & & ) null = ! ) VAR_1 ( ( ( if { ) t TYPE_1 , msg java.lang.String ( METHOD_1 void private 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info ) ; } } ; ) info ( METHOD_2 ; ) ( METHOD_1 . info { ) info ChangeInfo . TYPE_1 ( onSuccess void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_2 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } } ; ) 0 , null , VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_1 . TYPE_2 return { ) VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 TYPE_1 ( METHOD_1 java.lang.String static public 
protected void METHOD_1 ( final TYPE_1 result ) { VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) ; projects . display ( result . METHOD_4 ( ) ) ; projects . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . projects ; ) ) ( METHOD_4 . result ( display . projects ; ) ) ( METHOD_3 . result ( METHOD_2 . VAR_1 { ) result TYPE_1 final ( METHOD_1 void protected 
private void METHOD_1 ( ) { VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 { ) ( METHOD_1 void private 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; } } ; ) ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
private static boolean METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; return ( TYPE_2 . METHOD_3 ( VAR_2 ) ) || ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_4 . TYPE_2 ( || ) ) VAR_2 ( METHOD_3 . TYPE_2 ( return ; ) ( METHOD_2 . VAR_1 = VAR_2 int { ) VAR_1 TYPE_1 ( METHOD_1 boolean static private 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) ; } } } } ; ) ) changeId ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) ) ( METHOD_1 . VAR_1 ( if { ) result TYPE_1 ( onSuccess void public 
public void METHOD_1 ( TYPE_1 ctx ) { if ( ( change ) ! = null ) { VAR_1 . METHOD_2 ( change , ctx . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_2 , ctx . METHOD_6 ( ) ) ; } } } } ; ) ) ( METHOD_6 . ctx , VAR_2 , ) ( METHOD_5 . ) ( METHOD_4 . ) ( METHOD_3 . ctx , change ( METHOD_2 . VAR_1 { ) null = ! ) change ( ( if { ) ctx TYPE_1 ( METHOD_1 void public 
< TYPE_1 > TYPE_2 < TYPE_3 , TYPE_1 > delete ( TYPE_3 VAR_1 , TYPE_4 id ) throws TYPE_5 ; ; TYPE_5 throws ) id TYPE_4 , VAR_1 TYPE_3 ( delete > TYPE_1 , TYPE_3 < TYPE_2 > TYPE_1 < 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info ) ; METHOD_3 ( info , base ) ; } } ; ) base , info ( METHOD_3 ; ) info ( METHOD_2 ; ) ( METHOD_1 . info { ) info ChangeInfo . TYPE_1 ( onSuccess void public 
private void METHOD_1 ( ) { new TYPE_1 ( ) ; new TYPE_2 ( ) ; new TYPE_3 ( ) ; new TYPE_4 ( ) ; new TYPE_5 ( ) ; new TYPE_6 ( ) ; } } ; ) ( TYPE_6 new ; ) ( TYPE_5 new ; ) ( TYPE_4 new ; ) ( TYPE_3 new ; ) ( TYPE_2 new ; ) ( TYPE_1 new { ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( TYPE_3 . of ( new TYPE_4 ( VAR_1 ) , new TYPE_5 ( VAR_1 , VAR_2 ) , new TYPE_6 ( VAR_1 , VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 , VAR_1 ( TYPE_6 new , ) VAR_2 , VAR_1 ( TYPE_5 new , ) VAR_1 ( TYPE_4 new ( of . TYPE_3 ( TYPE_1 new return { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
void METHOD_1 ( TYPE_1 e ) { if ( TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ) { TYPE_4 . delete ( changeId , VAR_1 ) ; } } } } ; ) VAR_1 , changeId ( delete . TYPE_4 { ) ) ) ( METHOD_3 . TYPE_3 ( METHOD_2 . TYPE_2 ( if { ) e TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { } } { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; assertEquals ( query ( METHOD_2 ( STRING_2 ) ) , VAR_1 . METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 . VAR_1 , ) ) STRING_2 ( METHOD_2 ( query ( assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
static boolean METHOD_1 ( TYPE_1 args , TYPE_2 VAR_1 , TYPE_2 VAR_2 ) throws TYPE_3 { return ( ! ( VAR_3 . METHOD_2 ( VAR_4 , VAR_2 ) ) ) & & ( VAR_3 . METHOD_3 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ) ; } } ; ) ) VAR_2 , VAR_1 , repo . args , VAR_4 ( METHOD_3 . VAR_3 ( & & ) ) ) VAR_2 , VAR_4 ( METHOD_2 . VAR_3 ( ! ( return { TYPE_3 throws ) VAR_2 TYPE_2 , VAR_1 TYPE_2 , args TYPE_1 ( METHOD_1 boolean static 
public static TYPE_1 create ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email , java.lang.String VAR_2 ) { return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_1 . TYPE_3 , ) email ( METHOD_1 . TYPE_3 , VAR_1 , key ( TYPE_2 new return { ) VAR_2 java.lang.String , email java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.Account.Id , key Key . TYPE_1 ( create TYPE_1 static public 
protected java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { final java.lang.String VAR_2 = VAR_1 . getMessage ( ) ; if ( VAR_2 ! = null ) { return VAR_2 . METHOD_2 ( ) ; } } return STRING_1 ; } } ; STRING_1 return } } ; ) ( METHOD_2 . VAR_2 return { ) null = ! VAR_2 ( if ; ) ( getMessage . VAR_1 = VAR_2 java.lang.String final { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 java.lang.String protected 
protected final void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( this . VAR_2 ) ) + STRING_2 ) + msg ) , args ) ; } } } } ; ) args , ) msg + ) STRING_2 + ) ) VAR_2 . this ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) args ... TYPE_1 , msg java.lang.String ( METHOD_1 void final protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; bind ( VAR_3 class ) . to ( VAR_4 class ) ; } } ; ) class VAR_4 ( to . ) class VAR_3 ( bind ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 = cd . METHOD_2 ( ) ; return ! ( VAR_1 . isEmpty ( ) ) ? VAR_1 . contains ( id ) : ( id ) == ( VAR_2 ) ; } } ; ) VAR_2 ( == ) id ( : ) id ( contains . VAR_1 ? ) ) ( isEmpty . VAR_1 ( ! return ; ) ( METHOD_2 . cd = VAR_1 > com.google.gerrit.reviewdb.client.Account.Id < java.util.Set { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
public static TYPE_1 METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 TYPE_1 static public 
private void METHOD_1 ( TYPE_1 id ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( id ) ; } } } } ; ) id ( METHOD_2 . VAR_1 { ) VAR_1 ( synchronized { ) id TYPE_1 ( METHOD_1 void private 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = new TYPE_4 ( VAR_1 . METHOD_2 ( TYPE_5 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_3 . get ( ) . METHOD_4 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_4 . ) ( get . VAR_3 return ; ) ) ( METHOD_3 . ) ) ( getName . TYPE_5 ( METHOD_2 . VAR_1 ( TYPE_4 new = VAR_2 TYPE_4 { ) VAR_1 TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 private 
public void put ( final TYPE_1 VAR_1 , final TYPE_2 c ) { VAR_2 . put ( new TYPE_3 ( VAR_1 , c ) ) ; } } ; ) ) c , VAR_1 ( TYPE_3 new ( put . VAR_2 { ) c TYPE_2 final , VAR_1 TYPE_1 final ( put void public 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Key key ) throws java.io.IOException { return METHOD_2 ( key ) ; } } ; ) key ( METHOD_2 return { java.io.IOException throws ) key Key . TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 admin = VAR_1 . create ( STRING_1 , STRING_2 ) ; VAR_2 = new TYPE_2 ( admin ) ; } } ; ) admin ( TYPE_2 new = VAR_2 ; ) STRING_2 , STRING_1 ( create . VAR_1 = admin TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( db , notes ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) notes , db ( METHOD_2 . VAR_2 = VAR_1 { ) null == ) VAR_1 ( ( if { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 > TYPE_1 < java.util.List public 
public void METHOD_1 ( ) { install ( new TYPE_1 ( ) { public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; } } ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; } } ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) } } ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void public { ) ( TYPE_1 new ( install { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_1 , VAR_3 ) ; } } ; ) VAR_3 , VAR_1 ( METHOD_2 ; ) VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public final TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_1 ) ; METHOD_3 ( VAR_3 ) ; TYPE_2 VAR_4 ; METHOD_4 ( ( ( ( google ) - ( java ) ) - ( format ) ) ) ; } } ; ) ) ) format ( - ) ) java ( - ) google ( ( ( ( METHOD_4 ; VAR_4 TYPE_2 ; ) VAR_3 ( METHOD_3 ; ) VAR_1 , ) ( METHOD_2 . VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 final public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { if ( VAR_1 ! = null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) null = ! VAR_1 ( if { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
public void assertEquals ( java.lang.String VAR_1 ) { VAR_2 . METHOD_1 ( ) ; TYPE_1 . assertEquals ( VAR_3 . toString ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( toString . VAR_3 ( assertEquals . TYPE_1 ; ) ( METHOD_1 . VAR_2 { ) VAR_1 java.lang.String ( assertEquals void public 
void METHOD_1 ( java.lang.String id ) throws TYPE_1 ; ; TYPE_1 throws ) id java.lang.String ( METHOD_1 void 
public void onSuccess ( final java.util.List < TYPE_1 . ChangeInfo > result ) { VAR_1 . display ( result ) ; table . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . table ; ) result ( display . VAR_1 { ) result > ChangeInfo . TYPE_1 < java.util.List final ( onSuccess void public 
TYPE_1 . Account METHOD_1 ( TYPE_2 . Id key ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) key Id . TYPE_2 ( METHOD_1 Account . TYPE_1 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( null ) ) ) ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) ) ) ) null ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 . Result r , java.lang.String message ) throws java.lang.Exception { METHOD_1 ( r , message , false ) ; } } ; ) false , message , r ( METHOD_1 { java.lang.Exception throws ) message java.lang.String , r Result . TYPE_1 ( METHOD_1 void private 
public final boolean METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 boolean final public 
private void METHOD_1 ( java.lang.String path ) { METHOD_2 ( ) ; TYPE_1 . display ( TYPE_2 . METHOD_3 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , revision . METHOD_4 ( ) ) , path ) ) ; } } ; ) ) path , ) ) ( METHOD_4 . revision , changeId ( com.google.gerrit.reviewdb.client.PatchSet.Id new ( METHOD_3 . TYPE_2 ( display . TYPE_1 ; ) ( METHOD_2 { ) path java.lang.String ( METHOD_1 void private 
public boolean apply ( TYPE_1 input ) { return VAR_1 ; } } ; VAR_1 return { ) input TYPE_1 ( apply boolean public 
private PatchSet . Id METHOD_1 ( TYPE_1 c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . currentPatchSetId ( ) ; } } ; ) ( currentPatchSetId . ) c ( getChange return { com.google.gwtorm.server.OrmException throws ) c TYPE_1 ( METHOD_1 Id . PatchSet private 
public TYPE_1 METHOD_1 ( final TYPE_2 key ) throws java.lang.Exception { final org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( VAR_2 . get ( ) ) ; try { return METHOD_3 ( key , repo ) ; } finally { repo . close ( ) ; } } } } ; ) ( close . repo { finally } ; ) repo , key ( METHOD_3 return { try ; ) ) ( get . VAR_2 ( METHOD_2 . VAR_1 = repo org.eclipse.jgit.lib.Repository final { java.lang.Exception throws ) key TYPE_2 final ( METHOD_1 TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 account ) { return VAR_1 . METHOD_2 ( VAR_2 , new TYPE_3 ( server , admin ) , VAR_3 . create ( TYPE_4 . of ( db ) , account . getId ( ) ) ) ; } } ; ) ) ) ( getId . account , ) db ( of . TYPE_4 ( create . VAR_3 , ) admin , server ( TYPE_3 new , VAR_2 ( METHOD_2 . VAR_1 return { ) account TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) { this . VAR_1 = false ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; false = VAR_1 . this { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( new TYPE_1 ( ) ) ; bind ( VAR_3 class ) . METHOD_3 ( VAR_4 ) ; bind ( VAR_5 class ) ; bind ( VAR_6 class ) ; } } ; ) class VAR_6 ( bind ; ) class VAR_5 ( bind ; ) VAR_4 ( METHOD_3 . ) class VAR_3 ( bind ; ) ) ( TYPE_1 new ( METHOD_3 . ) class VAR_2 ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected final TYPE_1 METHOD_1 ( TYPE_2 type ) throws com.google.gwtorm.server.OrmException { TYPE_3 VAR_1 = new TYPE_3 ( args , project , VAR_2 , VAR_3 ) ; return VAR_1 . METHOD_1 ( type ) ; } } ; ) type ( METHOD_1 . VAR_1 return ; ) VAR_3 , VAR_2 , project , args ( TYPE_3 new = VAR_1 TYPE_3 { com.google.gwtorm.server.OrmException throws ) type TYPE_2 ( METHOD_1 TYPE_1 final protected 
private void METHOD_1 ( final TYPE_1 m ) { m . METHOD_2 ( ) ; m . METHOD_3 ( STRING_1 , STRING_2 ) ; m . METHOD_4 ( ) ; m . METHOD_5 ( VAR_1 ) ; m . METHOD_6 ( ) ; m . METHOD_7 ( ) ; } } ; ) ( METHOD_7 . m ; ) ( METHOD_6 . m ; ) VAR_1 ( METHOD_5 . m ; ) ( METHOD_4 . m ; ) STRING_2 , STRING_1 ( METHOD_3 . m ; ) ( METHOD_2 . m { ) m TYPE_1 final ( METHOD_1 void private 
public TYPE_1 apply ( TYPE_2 rsrc ) throws TYPE_3 , TYPE_4 , java.io.IOException { return VAR_1 . METHOD_1 ( rsrc . getProject ( ) . METHOD_2 ( ) , rsrc . METHOD_3 ( ) , rsrc . METHOD_4 ( ) , null ) ; } } ; ) null , ) ( METHOD_4 . rsrc , ) ( METHOD_3 . rsrc , ) ( METHOD_2 . ) ( getProject . rsrc ( METHOD_1 . VAR_1 return { java.io.IOException , TYPE_4 , TYPE_3 throws ) rsrc TYPE_2 ( apply TYPE_1 public 
public void METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) || ( ( VAR_2 ) == null ) ) { throw new TYPE_1 ( STRING_1 ) ; } VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . VAR_2 ; ) ( METHOD_2 . VAR_1 } ; ) STRING_1 ( TYPE_1 new throw { ) ) null == ) VAR_2 ( ( || ) null == ) VAR_1 ( ( ( if { ) ( METHOD_1 void public 
private java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( TYPE_1 ) ) { return METHOD_2 ( ) . METHOD_4 ( TYPE_1 . length ( ) ) ; } return METHOD_2 ( ) ; } } ; ) ( METHOD_2 return } ; ) ) ( length . TYPE_1 ( METHOD_4 . ) ( METHOD_2 return { ) ) TYPE_1 ( METHOD_3 . ) ( METHOD_2 ( if { ) ( METHOD_1 java.lang.String private 
TYPE_1 create ( TYPE_2 rsrc , com.google.gerrit.reviewdb.client.Account.Id id ) ; ; ) id com.google.gerrit.reviewdb.client.Account.Id , rsrc TYPE_2 ( create TYPE_1 
private void METHOD_1 ( TYPE_1 cm , int VAR_1 , int VAR_2 ) { METHOD_2 ( cm , VAR_3 . METHOD_3 ( ) , ( VAR_1 - 1 ) , VAR_2 , VAR_4 ) ; } } ; ) VAR_4 , VAR_2 , ) 1 - VAR_1 ( , ) ( METHOD_3 . VAR_3 , cm ( METHOD_2 { ) VAR_2 int , VAR_1 int , cm TYPE_1 ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) . toString ( ) ; } } ; ) ( toString . ) ) ( get . VAR_1 , VAR_2 ( METHOD_2 . TYPE_1 return { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 java.lang.String static public 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_2 . ) STRING_3 , STRING_2 ( TYPE_1 new , STRING_1 ( assertEquals { ) ( METHOD_1 void public 
TYPE_1 METHOD_1 ( ) ; ; ) ( METHOD_1 TYPE_1 
public TYPE_1 . Result METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change . Id changeId ) throws TYPE_2 , com.google.gwtorm.server.OrmException , java.io.IOException { return METHOD_2 ( db , changeId , false ) ; } } ; ) false , changeId , db ( METHOD_2 return { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_2 throws ) changeId Id . com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 Result . TYPE_1 public 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { return TYPE_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Account.Id ( INT_1 ) , STRING_1 , VAR_1 ) ; } } ; ) VAR_1 , STRING_1 , ) INT_1 ( com.google.gerrit.reviewdb.client.Account.Id new ( METHOD_2 . TYPE_1 return { TYPE_2 throws ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 static private 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change . getProject ( ) , change ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) change , ) ( getProject . change , args ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
private final native void METHOD_1 ( java.lang.String path ) ; ; ) path java.lang.String ( METHOD_1 void native final private 
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { return null ; } com.google.gerrit.reviewdb.client.Project.NameKey VAR_2 = getProject ( ) . METHOD_2 ( ) ; if ( VAR_2 == null ) { VAR_2 = VAR_3 ; } return VAR_4 . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . VAR_4 return } ; VAR_3 = VAR_2 { ) null == VAR_2 ( if ; ) ( METHOD_2 . ) ( getProject = VAR_2 com.google.gerrit.reviewdb.client.Project.NameKey } ; null return { ) VAR_1 ( if { ) ( METHOD_1 TYPE_1 public 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , TYPE_3 . of ( VAR_1 ) , null , id ) ; } } ; ) id , null , ) VAR_1 ( of . TYPE_3 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id , VAR_1 TYPE_2 ( create TYPE_1 public 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( id ) ) ; } } ; ) ) id ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public boolean METHOD_1 ( TYPE_1 r ) { return METHOD_1 ( r . getChange ( ) . getProject ( ) , r . METHOD_2 ( ) , r . getChange ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( getChange . r , ) ( METHOD_2 . r , ) ( getProject . ) ( getChange . r ( METHOD_1 return { ) r TYPE_1 ( METHOD_1 boolean public 
public com.google.gerrit.server.query.change.ChangeData apply ( TYPE_1 notes ) { return VAR_1 . create ( db , notes . getChange ( ) ) ; } } ; ) ) ( getChange . notes , db ( create . VAR_1 return { ) notes TYPE_1 ( apply com.google.gerrit.server.query.change.ChangeData public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 class ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_4 ( STRING_2 ) . get ( ) ; } } ; ) ( get . ) STRING_2 ( METHOD_4 . ) ) ( get . project ( name . ) ( projects . VAR_3 ; ) class VAR_2 ( METHOD_3 . VAR_1 ; ) STRING_1 , project ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 int public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( query , VAR_1 , VAR_2 , VAR_3 , METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 , VAR_3 , VAR_2 , VAR_1 , query ( METHOD_2 . TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public TYPE_1 change ( TYPE_2 cd ) { return new TYPE_3 ( message , VAR_1 ) ; } } ; ) VAR_1 , message ( TYPE_3 new return { ) cd TYPE_2 ( change TYPE_1 public 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = VAR_1 . METHOD_2 ( VAR_3 class ) ; VAR_4 = new TYPE_2 ( 1 ) ; VAR_5 = new TYPE_3 ( VAR_2 , VAR_4 ) ; } } ; ) VAR_4 , VAR_2 ( TYPE_3 new = VAR_5 ; ) 1 ( TYPE_2 new = VAR_4 ; ) class VAR_3 ( METHOD_2 . VAR_1 = VAR_2 ; ) ( TYPE_1 new = VAR_1 { ) ( METHOD_1 void public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > not ( final TYPE_2 < TYPE_1 > VAR_1 ) { if ( VAR_1 instanceof TYPE_3 ) { return VAR_1 . METHOD_1 ( 0 ) ; } return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } } ; ) VAR_1 ( > TYPE_1 < TYPE_3 new return } ; ) 0 ( METHOD_1 . VAR_1 return { ) TYPE_3 instanceof VAR_1 ( if { ) VAR_1 > TYPE_1 < TYPE_2 final ( not > TYPE_1 < TYPE_2 > TYPE_1 < static public 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , null , STRING_2 ) ; if ( VAR_1 == null ) { throw new TYPE_1 ( STRING_3 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) STRING_3 ( TYPE_1 new throw { ) null == VAR_1 ( if ; ) STRING_2 , null , STRING_1 ( METHOD_3 . ) ( METHOD_2 = VAR_1 java.lang.String { TYPE_1 throws ) ( METHOD_1 java.lang.String private 
private static long METHOD_1 ( long VAR_1 ) { long VAR_2 = VAR_1 + ( VAR_1 / 2 ) ; return VAR_2 ; } } ; VAR_2 return ; ) 2 / VAR_1 ( + VAR_1 = VAR_2 long { ) VAR_1 long ( METHOD_1 long static private 
public void METHOD_1 ( ) throws TYPE_1 { try { VAR_1 . get ( ) . apply ( revision , new TYPE_2 ( ) ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_1 new throw { ) e java.io.IOException | com.google.gwtorm.server.OrmException ( catch } ; ) ) ( TYPE_2 new , revision ( apply . ) ( get . VAR_1 { try { TYPE_1 throws ) ( METHOD_1 void public 
private TYPE_1 getKey ( org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) { return new TYPE_1 ( project , VAR_1 , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , VAR_1 , project ( TYPE_1 new return { ) VAR_2 org.eclipse.jgit.lib.ObjectId , VAR_1 org.eclipse.jgit.lib.ObjectId ( getKey TYPE_1 private 
private com.google.gerrit.reviewdb.server.ReviewDb db ( ) { return ( cd ) ! = null ? cd . db ( ) : null ; } } ; null : ) ( db . cd ? null = ! ) cd ( return { ) ( db com.google.gerrit.reviewdb.server.ReviewDb private 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 = VAR_3 ; } } ; VAR_3 = VAR_2 { ) VAR_1 boolean ( METHOD_1 void public 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 < TYPE_1 < TYPE_2 > > METHOD_3 ( new TYPE_3 . Factory ( ) , new TYPE_4 . Factory ( ) , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( ) ) ) ; } } ; ) ) ) ( TYPE_7 new , ) ( TYPE_6 new , ) ( TYPE_5 new , ) ( Factory . TYPE_4 new , ) ( Factory . TYPE_3 new ( METHOD_3 > > TYPE_2 < TYPE_1 < VAR_1 ( METHOD_2 { ) ( METHOD_1 void private 
protected TYPE_1 METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 TYPE_1 protected 
private static void METHOD_1 ( TYPE_1 VAR_1 , int ... VAR_2 ) throws TYPE_2 { for ( int id : VAR_2 ) { TYPE_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( 1 , id ) ; } } } } ; ) id , 1 ( METHOD_3 . ) VAR_1 ( METHOD_2 . TYPE_3 { ) VAR_2 : id int ( for { TYPE_2 throws ) VAR_2 ... int , VAR_1 TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( final java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) VAR_1 java.lang.String final ( METHOD_1 void public 
public void METHOD_1 ( java.lang.String label ) { METHOD_2 ( METHOD_3 ( ) . getAccountId ( ) , label ) ; } } ; ) label , ) ( getAccountId . ) ( METHOD_3 ( METHOD_2 { ) label java.lang.String ( METHOD_1 void public 
public boolean METHOD_1 ( ) { return VAR_1 . get ( ) . METHOD_1 ( revision ) ; } } ; ) revision ( METHOD_1 . ) ( get . VAR_1 return { ) ( METHOD_1 boolean public 
TYPE_1 create ( TYPE_2 user , com.google.gerrit.server.query.change.ChangeData cd ) ; ; ) cd com.google.gerrit.server.query.change.ChangeData , user TYPE_2 ( create TYPE_1 
private final native void METHOD_1 ( java.lang.String id ) ; ; ) id java.lang.String ( METHOD_1 void native final private 
TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = TYPE_2 . METHOD_2 ( walk , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , walk ( METHOD_2 . TYPE_2 = walk . this { ) walk org.eclipse.jgit.revwalk.RevWalk ( METHOD_1 TYPE_1 
private void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . error ( ( ( VAR_2 ) + msg ) ) ; } } } } ; ) ) msg + ) VAR_2 ( ( ( error . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) msg java.lang.String ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName , java.lang.String VAR_1 ) { return ( ( ( VAR_2 ) + ( projectName . get ( ) ) ) + ( VAR_3 ) ) + VAR_1 ; } } ; VAR_1 + ) ) VAR_3 ( + ) ) ) ( get . projectName ( + ) VAR_2 ( ( ( return { ) VAR_1 java.lang.String , projectName com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 java.lang.String static public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( ( user . METHOD_2 ( ) ) & & ( ( ( TYPE_1 ) ( user ) ) . getAccountId ( ) . equals ( id ) ) ) { return true ; } return METHOD_3 ( ) ; } } ; ) ( METHOD_3 return } ; true return { ) ) ) id ( equals . ) ( getAccountId . ) ) user ( ) TYPE_1 ( ( ( & & ) ) ( METHOD_2 . user ( ( if { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 boolean public 
public TYPE_1 < ? > index ( com.google.gerrit.reviewdb.client.Change change ) { return TYPE_2 . METHOD_1 ( null ) ; } } ; ) null ( METHOD_1 . TYPE_2 return { ) change com.google.gerrit.reviewdb.client.Change ( index > ? < TYPE_1 public 
private static void METHOD_1 ( final java.lang.StringBuilder r , final TYPE_1 . PatchSet ps ) { TYPE_2 . METHOD_2 ( r , STRING_1 , ps . getRevision ( ) ) ; } } ; ) ) ( getRevision . ps , STRING_1 , r ( METHOD_2 . TYPE_2 { ) ps PatchSet . TYPE_1 final , r java.lang.StringBuilder final ( METHOD_1 void static private 
public void METHOD_1 ( ) throws java.io.IOException , TYPE_1 { TYPE_2 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 ! = null ) { while ( ( VAR_1 . METHOD_3 ( ) ) ! = ( - 1 ) ) ; } } } } ; ) ) 1 - ( = ! ) ) ( METHOD_3 . VAR_1 ( ( while { ) null = ! VAR_1 ( if ; ) ( METHOD_2 = VAR_1 TYPE_2 { TYPE_1 , java.io.IOException throws ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 , java.io.IOException , TYPE_3 { try ( TYPE_4 VAR_3 = METHOD_2 ( VAR_1 ) ) { TYPE_1 key = VAR_3 . METHOD_1 ( VAR_2 ) ; commit ( VAR_3 ) ; return key ; } } } } ; key return ; ) VAR_3 ( commit ; ) VAR_2 ( METHOD_1 . VAR_3 = key TYPE_1 { ) ) VAR_1 ( METHOD_2 = VAR_3 TYPE_4 ( try { TYPE_3 , java.io.IOException , TYPE_2 throws ) VAR_2 java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 TYPE_1 public 
protected void submit ( java.lang.String changeId , TYPE_1 input ) throws java.lang.Exception { submit ( changeId , input , null , null ) ; } } ; ) null , null , input , changeId ( submit { java.lang.Exception throws ) input TYPE_1 , changeId java.lang.String ( submit void protected 
public java.lang.String getChangeId ( ) { return commit . getChangeId ( ) ; } } ; ) ( getChangeId . commit return { ) ( getChangeId java.lang.String public 
void METHOD_1 ( TYPE_1 . Factory VAR_1 , TYPE_2 . NameKey branch ) ; ; ) branch NameKey . TYPE_2 , VAR_1 Factory . TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { TYPE_1 . METHOD_2 ( ( ( psId == null ) || ( psId . getParentKey ( ) . equals ( getChange ( ) . getId ( ) ) ) ) ) ; this . psId = psId ; } } ; psId = psId . this ; ) ) ) ) ) ( getId . ) ( getChange ( equals . ) ( getParentKey . psId ( || ) null == psId ( ( ( METHOD_2 . TYPE_1 { ) psId com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void public 
public void onSuccess ( ) { TYPE_1 . display ( METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 ( display . TYPE_1 { ) ( onSuccess void public 
void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 { java.io.IOException throws ) ( METHOD_1 void 
private boolean error ( java.lang.String msg , TYPE_1 t ) { METHOD_1 ( msg ) ; VAR_1 . METHOD_2 ( ( STRING_1 + ( change.getId ( ) ) ) , t ) ; return false ; } } ; false return ; ) t , ) ) ) ( change.getId ( + STRING_1 ( ( METHOD_2 . VAR_1 ; ) msg ( METHOD_1 { ) t TYPE_1 , msg java.lang.String ( error boolean private 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 , true ) ; } } ; ) true , VAR_1 , STRING_1 ( METHOD_1 return { java.lang.Exception throws ) VAR_1 boolean ( METHOD_1 ProjectConfig . TYPE_1 private 
boolean contains ( int b , int e , char c ) { for ( ; b < e ; b ++ ) { if ( ( METHOD_1 ( b ) ) == c ) { return true ; } } return false ; } } ; false return } } ; true return { ) c == ) ) b ( METHOD_1 ( ( if { ) ++ b ; e < b ; ( for { ) c char , e int , b int ( contains boolean 
public void index ( com.google.gerrit.reviewdb.client.Change change ) throws java.io.IOException { METHOD_1 ( change ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) change ( METHOD_1 { java.io.IOException throws ) change com.google.gerrit.reviewdb.client.Change ( index void public 
public static TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( java.lang.String name ) { TYPE_2 id = TYPE_3 . METHOD_1 ( name ) ; return TYPE_1 . METHOD_2 ( id ) . METHOD_3 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; } } ; ) new : : com.google.gerrit.reviewdb.client.Account.Id ( METHOD_3 . ) id ( METHOD_2 . TYPE_1 return ; ) name ( METHOD_1 . TYPE_3 = id TYPE_2 { ) name java.lang.String ( METHOD_1 > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 static public 
TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_2 notes , com.google.gerrit.reviewdb.client.PatchSet patch ) ; ; ) patch com.google.gerrit.reviewdb.client.PatchSet , notes TYPE_2 , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 TYPE_1 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { } } { java.lang.Exception throws ) VAR_1 TYPE_1 ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 ) ) ; } } ; ) ) STRING_3 , STRING_2 ( METHOD_4 . TYPE_3 ( METHOD_3 . ) ) ) ) VAR_1 ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat ; STRING_1 = VAR_1 java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 key , java.lang.String VAR_1 ) { return TYPE_4 . METHOD_2 ( key . METHOD_3 ( VAR_1 ) , java.util.Collections . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . java.util.Collections , ) VAR_1 ( METHOD_3 . key ( METHOD_2 . TYPE_4 return { ) VAR_1 java.lang.String , key TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { new TYPE_2 ( VAR_1 . getMessage ( ) ) { public void METHOD_2 ( final java.lang.String t ) { } } . METHOD_3 ( ) ; METHOD_4 ( true ) ; } } ; ) true ( METHOD_4 ; ) ( METHOD_3 . } } { ) t java.lang.String final ( METHOD_2 void public { ) ) ( getMessage . VAR_1 ( TYPE_2 new { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public boolean METHOD_1 ( ) { return ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) || ( METHOD_4 ( ) ) ) || ( METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 ( || ) ) ) ( METHOD_4 ( || ) ) ) ( METHOD_3 ( || ) ) ( METHOD_2 ( ( ( return { ) ( METHOD_1 boolean public 
static com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { return new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , id ) ; } } ; ) id , null , null , null , null , null , null ( com.google.gerrit.server.query.change.ChangeData new return { ) id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 com.google.gerrit.server.query.change.ChangeData static 
public int METHOD_1 ( final TYPE_1 . PatchSetApproval a , final TYPE_1 . PatchSetApproval b ) { return a . METHOD_2 ( ) . METHOD_3 ( b . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . b ( METHOD_3 . ) ( METHOD_2 . a return { ) b PatchSetApproval . TYPE_1 final , a PatchSetApproval . TYPE_1 final ( METHOD_1 int public 
public final void METHOD_1 ( int line , TYPE_1 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_3 . ) ( name . VAR_1 , line ( METHOD_2 { ) VAR_2 java.lang.String , VAR_1 TYPE_1 , line int ( METHOD_1 void final public 
public void METHOD_1 ( java.lang.String id ) { this . id = ( id ! = null ) ? TYPE_1 . METHOD_2 ( id ) : null ; } } ; null : ) id ( METHOD_2 . TYPE_1 ? ) null = ! id ( = id . this { ) id java.lang.String ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 n ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( n , TYPE_3 . METHOD_3 ( n ) ) ; n . METHOD_4 ( VAR_2 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_2 ( METHOD_4 . n ; ) ) n ( METHOD_3 . TYPE_3 , n ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) n TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 , java.io.IOException { TYPE_1 rsrc = METHOD_2 ( id . get ( ) ) ; if ( rsrc == null ) { throw new TYPE_4 ( id ) ; } return rsrc ; } } ; rsrc return } ; ) id ( TYPE_4 new throw { ) null == rsrc ( if ; ) ) ( get . id ( METHOD_2 = rsrc TYPE_1 { java.io.IOException , TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
private static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; } } ; ) false , STRING_2 , null , STRING_1 ( METHOD_2 . cfg return { ) cfg TYPE_1 ( METHOD_1 boolean static private 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( STRING_1 ) ; } } ; ) STRING_1 ( append . VAR_1 { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
protected void METHOD_1 ( final TYPE_1 . ChangeInfo c ) { TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( c ) , false ) ; TYPE_4 . display ( new TYPE_5 ( c ) ) ; } } ; ) ) c ( TYPE_5 new ( display . TYPE_4 ; ) false , ) c ( METHOD_3 . TYPE_3 ( METHOD_2 . TYPE_2 { ) c ChangeInfo . TYPE_1 final ( METHOD_1 void protected 
public TYPE_1 . ChangeInfo format ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return format ( cd , VAR_1 < com.google.gerrit.reviewdb.client.PatchSet.Id > METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 > com.google.gerrit.reviewdb.client.PatchSet.Id < VAR_1 , cd ( format return { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( format ChangeInfo . TYPE_1 public 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) . METHOD_5 ( true ) ; METHOD_6 ( project , cfg ) ; } } ; ) cfg , project ( METHOD_6 ; ) true ( METHOD_5 . ) STRING_1 , VAR_3 , VAR_2 , cfg ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . ) project ( METHOD_2 . VAR_1 = cfg ProjectConfig . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void private 
private void METHOD_1 ( TYPE_1 . ProjectConfig cfg ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . create ( VAR_3 ) ; try { cfg . commit ( VAR_1 ) ; } finally { VAR_1 . close ( ) ; } } } } ; ) ( close . VAR_1 { finally } ; ) VAR_1 ( commit . cfg { try ; ) VAR_3 ( create . VAR_2 = VAR_1 TYPE_2 { java.lang.Exception throws ) cfg ProjectConfig . TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 , STRING_2 ) ; group ( STRING_3 , STRING_2 ) ; METHOD_2 ( STRING_4 ) ; METHOD_2 ( STRING_5 ) ; org.junit.Assert.assertEquals ( METHOD_3 ( STRING_4 ) . name , STRING_1 ) ; } } ; ) STRING_1 , name . ) STRING_4 ( METHOD_3 ( org.junit.Assert.assertEquals ; ) STRING_5 ( METHOD_2 ; ) STRING_4 ( METHOD_2 ; ) STRING_2 , STRING_3 ( group ; ) STRING_2 , STRING_1 ( group { java.lang.Exception throws ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( java.lang.String name ) { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , name ) ; } } ; ) name , VAR_3 , VAR_2 ( METHOD_2 . VAR_1 return { ) name java.lang.String ( METHOD_1 java.lang.String public 
public abstract java.lang.String METHOD_1 ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( METHOD_1 java.lang.String abstract public 
protected java.lang.String METHOD_1 ( final java.lang.String name ) { return VAR_1 < TYPE_1 > METHOD_2 ( ) . METHOD_1 ( name ) ; } } ; ) name ( METHOD_1 . ) ( METHOD_2 > TYPE_1 < VAR_1 return { ) name java.lang.String final ( METHOD_1 java.lang.String protected 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_1 . changeId , VAR_4 , VAR_5 ) ; assertThat ( VAR_6 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_6 ( assertThat ; ) VAR_5 , VAR_4 , changeId . VAR_1 ( METHOD_3 ; ) VAR_3 , VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void error ( TYPE_1 error ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( INT_1 ) ; } VAR_1 . add ( error ) ; } } ; ) error ( add . VAR_1 } ; ) INT_1 ( > < java.util.ArrayList new = VAR_1 { ) null == ) VAR_1 ( ( if { ) error TYPE_1 ( error void private 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( VAR_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } } ; ) repo ( create . TYPE_5 = servlet ; ) ) ) VAR_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void public 
private boolean METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.Project project ) { if ( VAR_1 ! = null ) { return VAR_1 . getProject ( ) . METHOD_2 ( ) . equals ( project . METHOD_2 ( ) ) ; } else { return true ; } } } } ; true return { else } ; ) ) ( METHOD_2 . project ( equals . ) ( METHOD_2 . ) ( getProject . VAR_1 return { ) null = ! VAR_1 ( if { ) project com.google.gerrit.reviewdb.client.Project , VAR_1 TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( ) . get ( ) ; } } ; ) ( get . ) ( METHOD_3 . ) ) ( get . project ( name . ) ( projects . VAR_3 ; ) class VAR_2 ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . name ( name ) . create ( ) . get ( ) . name ) ; } } ; ) name . ) ( get . ) ( create . ) name ( name . ) ( projects . VAR_1 ( isEqualTo . ) name ( com.google.common.truth.Truth.assertThat ; STRING_1 = name java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( VAR_2 , project , branch , key ) ; } VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 } ; ) key , branch , project , VAR_2 ( TYPE_2 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) e TYPE_1 ( METHOD_1 void 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_1 class ) ; install ( new TYPE_1 ( VAR_2 ) { protected void METHOD_1 ( ) { rpc ( VAR_3 class ) ; } } ) ; } } ; ) } } ; ) class VAR_3 ( rpc { ) ( METHOD_1 void protected { ) VAR_2 ( TYPE_1 new ( install ; ) class VAR_1 ( METHOD_3 . ) STRING_1 ( METHOD_2 { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
protected static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( TYPE_2 : : METHOD_2 , TYPE_2 : : METHOD_3 , VAR_1 ) ; } } ; ) VAR_1 , METHOD_3 : : TYPE_2 , METHOD_2 : : TYPE_2 ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static protected 
public void submit ( ) throws TYPE_1 { TYPE_2 in = new TYPE_2 ( ) ; VAR_1 = true ; submit ( in ) ; } } ; ) in ( submit ; true = VAR_1 ; ) ( TYPE_2 new = in TYPE_2 { TYPE_1 throws ) ( submit void public 
private static TYPE_1 [ ] METHOD_1 ( TYPE_2 err ) { TYPE_3 . METHOD_2 ( err ) ; return err . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . err return ; ) err ( METHOD_2 . TYPE_3 { ) err TYPE_2 ( METHOD_1 ] [ TYPE_1 static private 
public TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3 . create ( change . METHOD_2 ( ) ) ; } } } } ; ) ) ( METHOD_2 . change ( create . VAR_3 return { else } ; VAR_2 return { ) ) VAR_1 ( ! ( if { ) ( METHOD_1 TYPE_1 public 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) ? VAR_1 : null ; } } ; null : VAR_1 ? ) ( METHOD_3 . ) VAR_1 ( METHOD_2 . TYPE_1 return { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String static private 
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { this . VAR_1 = VAR_1 ; return this ; } } ; this return ; VAR_1 = VAR_1 . this { ) VAR_1 boolean ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 update , TYPE_2 VAR_1 ) throws com.google.gwtorm.server.OrmException { if ( VAR_1 ! = null ) { update . METHOD_2 ( VAR_1 . getMessage ( ) ) ; db . METHOD_3 ( ) . insert ( java.util.Collections.singleton ( VAR_1 ) ) ; } } } } ; ) ) VAR_1 ( java.util.Collections.singleton ( insert . ) ( METHOD_3 . db ; ) ) ( getMessage . VAR_1 ( METHOD_2 . update { ) null = ! VAR_1 ( if { com.google.gwtorm.server.OrmException throws ) VAR_1 TYPE_2 , update TYPE_1 , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 . ) ) STRING_1 ( NameKey . TYPE_1 new ( get . VAR_2 = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 < TYPE_2 . ChangeInfo > apply ( TYPE_3 rsrc ) throws TYPE_4 , com.google.gwtorm.server.OrmException { METHOD_1 ( ) ; return TYPE_1 . METHOD_2 ( METHOD_3 ( ) . format ( rsrc ) ) ; } } ; ) ) rsrc ( format . ) ( METHOD_3 ( METHOD_2 . TYPE_1 return ; ) ( METHOD_1 { com.google.gwtorm.server.OrmException , TYPE_4 throws ) rsrc TYPE_3 ( apply > ChangeInfo . TYPE_2 < TYPE_1 public 
public void METHOD_1 ( java.lang.String project ) throws TYPE_1 { try ( TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_1 . METHOD_3 ( ) ) { VAR_3 . METHOD_4 ( java.lang.String.format ( STRING_1 , VAR_4 , project ) ) ; } } } } ; ) ) project , VAR_4 , STRING_1 ( java.lang.String.format ( METHOD_4 . VAR_3 { ) ) ( METHOD_3 . VAR_1 = VAR_3 TYPE_3 ; ) ( METHOD_2 . VAR_2 = VAR_1 TYPE_2 ( try { TYPE_1 throws ) project java.lang.String ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . VAR_1 ( METHOD_4 . ) ( METHOD_3 . view ; ) ) ( getValue . e ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( changeId ) ) ; } } ; ) ) changeId ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) event TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( final java.lang.String name ) { final TYPE_1 c = new TYPE_1 ( name , STRING_1 ) ; c . METHOD_2 ( 0 ) ; TYPE_2 . METHOD_3 ( ) . VAR_1 . METHOD_4 ( c ) ; } } ; ) c ( METHOD_4 . VAR_1 . ) ( METHOD_3 . TYPE_2 ; ) 0 ( METHOD_2 . c ; ) STRING_1 , name ( TYPE_1 new = c TYPE_1 final { ) name java.lang.String final ( METHOD_1 void protected 
public java.lang.String toString ( ) { try { return METHOD_1 ( ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e TYPE_1 ( catch } ; ) ( METHOD_1 return { try { ) ( toString java.lang.String public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result c = METHOD_2 ( ) ; java.util.Map < java.lang.String , TYPE_2 > VAR_1 = METHOD_3 ( c ) ; com.google.common.truth.Truth.assertThat ( VAR_1 ) . METHOD_4 ( 0 ) ; } } ; ) 0 ( METHOD_4 . ) VAR_1 ( com.google.common.truth.Truth.assertThat ; ) c ( METHOD_3 = VAR_1 > TYPE_2 , java.lang.String < java.util.Map ; ) ( METHOD_2 = c Result . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return ( STRING_1 + VAR_1 ) + STRING_2 ; } } ; STRING_2 + ) VAR_1 + STRING_1 ( return { ) VAR_1 java.lang.String final ( METHOD_1 java.lang.String public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { VAR_2 = new TYPE_1 ( this ) ; } } } } ; ) this ( TYPE_1 new = VAR_2 { ) VAR_1 ( if ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
protected Project . NameKey METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 NameKey . Project protected 
private void METHOD_1 ( TYPE_1 input , TYPE_2 VAR_1 ) throws TYPE_3 , java.io.IOException { VAR_1 . METHOD_2 ( STRING_1 , 1 ) ; api . getProject ( VAR_2 . get ( ) ) ; TYPE_4 . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . TYPE_4 ; ) ) ( get . VAR_2 ( getProject . api ; ) 1 , STRING_1 ( METHOD_2 . VAR_1 { java.io.IOException , TYPE_3 throws ) VAR_1 TYPE_2 , input TYPE_1 ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( ) throws java.io.IOException { return TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 ) , TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 . log ) ) ; } } ; ) ) log . VAR_2 , VAR_1 ( METHOD_4 . TYPE_1 , ) VAR_1 ( METHOD_3 ( METHOD_2 . TYPE_1 return { java.io.IOException throws ) ( METHOD_1 TYPE_1 private 
java.util.Set < TYPE_1 > METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { METHOD_2 ( ) ; try ( org.eclipse.jgit.lib.Repository repo = VAR_2 . METHOD_3 ( VAR_3 ) ) { return TYPE_2 . METHOD_1 ( repo , VAR_1 ) ; } } } } ; ) VAR_1 , repo ( METHOD_1 . TYPE_2 return { ) ) VAR_3 ( METHOD_3 . VAR_2 = repo org.eclipse.jgit.lib.Repository ( try ; ) ( METHOD_2 { java.io.IOException throws ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 > TYPE_1 < java.util.Set 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 . METHOD_1 ( TYPE_5 . of ( this ) , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , ) this ( of . TYPE_5 ( METHOD_1 . TYPE_4 { TYPE_3 , TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( this ) ; VAR_1 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_1 ; ) this ( METHOD_3 . ) VAR_1 ( METHOD_2 . TYPE_2 ; ) ( TYPE_1 new = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 auth ( final TYPE_2 account ) { if ( account ! = null ) { return new TYPE_1 ( account . getAccountId ( ) , null , false ) ; } return null ; } } ; null return } ; ) false , null , ) ( getAccountId . account ( TYPE_1 new return { ) null = ! account ( if { ) account TYPE_2 final ( auth TYPE_1 private 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; ; com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( null ) { private static final long VAR_1 = INT_1 ; public void METHOD_2 ( TYPE_2 req , TYPE_3 . HttpServletResponse res ) { res . METHOD_3 ( VAR_2 ) ; } } ; } } ; } } ; ) VAR_2 ( METHOD_3 . res { ) res HttpServletResponse . TYPE_3 , req TYPE_2 ( METHOD_2 void public ; INT_1 = VAR_1 long final static private { ) null ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static public 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . METHOD_2 ( ) . id ( STRING_1 ) . get ( ) ; org.junit.Assert . METHOD_3 ( STRING_2 ) ; } catch ( TYPE_1 VAR_2 ) { } } } } { ) VAR_2 TYPE_1 ( catch } ; ) STRING_2 ( METHOD_3 . org.junit.Assert ; ) ( get . ) STRING_1 ( id . ) ( METHOD_2 . VAR_1 { try { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( project , STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( ( ( STRING_2 + ( project . get ( ) ) ) + STRING_3 ) ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ) STRING_3 + ) ) ) ( get . project ( + STRING_2 ( ( ( get . VAR_2 , VAR_1 ( org.junit.Assert.assertEquals ; ) STRING_1 , project ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String changeId = METHOD_2 ( ) . getChangeId ( ) ; METHOD_3 ( project , STRING_1 ) ; VAR_1 . METHOD_4 ( ( ( STRING_2 + changeId ) + STRING_3 ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) STRING_3 + ) changeId + STRING_2 ( ( ( METHOD_4 . VAR_1 ; ) STRING_1 , project ( METHOD_3 ; ) ( getChangeId . ) ( METHOD_2 = changeId java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( ) { final java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 = new TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > ( this . VAR_1 ) ; VAR_1 . METHOD_2 ( reviewers ) ; return java.util.Collections . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . java.util.Collections return ; ) reviewers ( METHOD_2 . VAR_1 ; ) VAR_1 . this ( > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 new = VAR_1 > com.google.gerrit.reviewdb.client.Account.Id < java.util.Set final { ) ( METHOD_1 > com.google.gerrit.reviewdb.client.Account.Id < java.util.Set public 
protected void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { VAR_1 . changes ( ) . id ( id ) . revision ( STRING_1 ) . METHOD_2 ( new TYPE_1 ( ) . label ( STRING_2 , 2 ) ) ; } } ; ) ) 2 , STRING_2 ( label . ) ( TYPE_1 new ( METHOD_2 . ) STRING_1 ( revision . ) id ( id . ) ( changes . VAR_1 { java.lang.Exception throws ) id java.lang.String ( METHOD_1 void protected 
public Project . NameKey METHOD_1 ( ) { com.google.gerrit.reviewdb.client.Project project = VAR_1 . METHOD_2 ( ) . getProject ( ) ; return project . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . project return ; ) ( getProject . ) ( METHOD_2 . VAR_1 = project com.google.gerrit.reviewdb.client.Project { ) ( METHOD_1 NameKey . Project public 
void METHOD_1 ( ) throws java.io.IOException { cfg . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . cfg { java.io.IOException throws ) ( METHOD_1 void 
public void run ( ) { METHOD_1 ( commands ) ; } } ; ) commands ( METHOD_1 { ) ( run void public 
private TYPE_1 query ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( index , p , VAR_1 ) ; } } ; ) VAR_1 , p , index ( TYPE_1 new return { TYPE_3 throws ) VAR_1 int , p > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( query TYPE_1 private 
private static TYPE_1 create ( com.google.gerrit.reviewdb.client.PatchSet.Id psId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String label , java.lang.String VAR_2 ) { return new TYPE_2 ( psId , VAR_1 , label , VAR_2 ) ; } } ; ) VAR_2 , label , VAR_1 , psId ( TYPE_2 new return { ) VAR_2 java.lang.String , label java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.Account.Id , psId com.google.gerrit.reviewdb.client.PatchSet.Id ( create TYPE_1 static private 
protected void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res , java.lang.String VAR_1 , java.util.Map < java.lang.String , ? > VAR_2 ) throws java.io.IOException { VAR_3 . METHOD_2 ( res , VAR_1 , METHOD_3 ( req , res , VAR_2 ) ) ; } } ; ) ) VAR_2 , res , req ( METHOD_3 , VAR_1 , res ( METHOD_2 . VAR_3 { java.io.IOException throws ) VAR_2 > ? , java.lang.String < java.util.Map , VAR_1 java.lang.String , res HttpServletResponse . TYPE_2 , req TYPE_1 ( METHOD_1 void protected 
protected org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( ) throws java.io.IOException { org.eclipse.jgit.lib.Repository repo = VAR_1 . METHOD_2 ( project ) ; try { return METHOD_3 ( repo , STRING_1 ) ; } finally { repo . close ( ) ; } } } } ; ) ( close . repo { finally } ; ) STRING_1 , repo ( METHOD_3 return { try ; ) project ( METHOD_2 . VAR_1 = repo org.eclipse.jgit.lib.Repository { java.io.IOException throws ) ( METHOD_1 org.eclipse.jgit.revwalk.RevCommit protected 
protected boolean METHOD_1 ( final TYPE_1 project , final TYPE_2 . Id VAR_1 , final short VAR_2 ) { return TYPE_3 . METHOD_1 ( METHOD_2 ( ) , project , VAR_1 , VAR_2 , false ) ; } } ; ) false , VAR_2 , VAR_1 , project , ) ( METHOD_2 ( METHOD_1 . TYPE_3 return { ) VAR_2 short final , VAR_1 Id . TYPE_2 final , project TYPE_1 final ( METHOD_1 boolean protected 
public java.util.Set < java.lang.String > METHOD_1 ( ) throws java.io.IOException { if ( METHOD_2 ( ) ) { return METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; } else { return java.util.Collections . METHOD_6 ( ) ; } } } } ; ) ( METHOD_6 . java.util.Collections return { else } ; ) ( METHOD_5 . ) ( METHOD_4 . ) ( METHOD_3 return { ) ) ( METHOD_2 ( if { java.io.IOException throws ) ( METHOD_1 > java.lang.String < java.util.Set public 
public void METHOD_1 ( ) throws java.lang.Exception { db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; } } ; ) ( > TYPE_2 < java.util.ArrayList new = VAR_2 ; ) class VAR_1 ( > TYPE_2 < TYPE_1 new = db { java.lang.Exception throws ) ( METHOD_1 void public 
protected void display ( final TYPE_1 result ) { table . METHOD_1 ( result . METHOD_2 ( ) ) ; VAR_1 . display ( result . METHOD_3 ( ) ) ; table . METHOD_4 ( true ) ; } } ; ) true ( METHOD_4 . table ; ) ) ( METHOD_3 . result ( display . VAR_1 ; ) ) ( METHOD_2 . result ( METHOD_1 . table { ) result TYPE_1 final ( display void protected 
public static void edit ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( id ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) id ( edit . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( edit void static public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 . Status VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , true , VAR_3 ) ; } } ; ) VAR_3 , true , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) VAR_3 Status . TYPE_2 , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; ; com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void 
public void METHOD_1 ( final TYPE_1 . Id id , final TYPE_2 < TYPE_3 > VAR_1 ) { run ( VAR_1 , VAR_2 . create ( id ) ) ; } } ; ) ) id ( create . VAR_2 , VAR_1 ( run { ) VAR_1 > TYPE_3 < TYPE_2 final , id Id . TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( java.util.List < TYPE_1 > in ) throws TYPE_2 { try { VAR_1 . apply ( account , in ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) in , account ( apply . VAR_1 { try { TYPE_2 throws ) in > TYPE_1 < java.util.List ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( METHOD_2 . TYPE_3 ( TYPE_2 new return { java.lang.Exception throws ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ; } } ; ) ) ( toString . ) ) STRING_3 , STRING_2 ( METHOD_2 . TYPE_2 ( not . TYPE_1 , STRING_1 ( assertEquals { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ( ( create ( ) ) instanceof TYPE_1 ) ) ; } } ; ) ) TYPE_1 instanceof ) ) ( create ( ( ( METHOD_2 { ) ( METHOD_1 void public 
private synchronized TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_2 . METHOD_2 ( ( ( VAR_2 ) ! = null ) , STRING_1 ) ; VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_2 ( TYPE_1 new = VAR_1 ; ) STRING_1 , ) null = ! ) VAR_2 ( ( ( METHOD_2 . TYPE_2 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 synchronized private 
public java.lang.String METHOD_1 ( ) throws TYPE_1 , com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( METHOD_2 { ) null == ) VAR_1 ( ( if { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_1 throws ) ( METHOD_1 java.lang.String public 
TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 , TYPE_4 > VAR_1 ) { return new TYPE_5 ( VAR_1 , METHOD_2 ( ) . METHOD_3 ( STRING_1 ) , METHOD_4 ( ) . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . ) ( METHOD_4 , ) STRING_1 ( METHOD_3 . ) ( METHOD_2 , VAR_1 ( TYPE_5 new return { ) VAR_1 > TYPE_4 , TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_1 VAR_1 , TYPE_2 < TYPE_1 > VAR_2 ) { TYPE_3 . revision ( id , STRING_1 ) . put ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( put . ) STRING_1 , id ( revision . TYPE_3 { ) VAR_2 > TYPE_1 < TYPE_2 , VAR_1 TYPE_1 , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
public boolean METHOD_1 ( final com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = VAR_1 . change ( VAR_2 ) ; return ( change ! = null ) & & ( ( change . METHOD_2 ( ) . METHOD_3 ( ) ) < ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( < ) ) ( METHOD_3 . ) ( METHOD_2 . change ( ( & & ) null = ! change ( return ; ) VAR_2 ( change . VAR_1 = change com.google.gerrit.reviewdb.client.Change { com.google.gwtorm.server.OrmException throws ) VAR_1 com.google.gerrit.server.query.change.ChangeData final ( METHOD_1 boolean public 
public boolean METHOD_1 ( ) { return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; } } ; ) VAR_1 ( equals . ) ( METHOD_2 . ) ( getProject return { ) ( METHOD_1 boolean public 
public TYPE_1 get ( ) { try { return create ( ) ; } catch ( TYPE_2 . OrmException e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_3 new throw { ) e OrmException . TYPE_2 ( catch } ; ) ( create return { try { ) ( get TYPE_1 public 
private static void METHOD_1 ( TYPE_1 . HttpServletResponse res ) { res . METHOD_2 ( STRING_1 , STRING_2 ) ; res . METHOD_2 ( STRING_3 , STRING_4 ) ; res . METHOD_2 ( STRING_5 , STRING_6 ) ; res . METHOD_2 ( STRING_7 , STRING_8 ) ; } } ; ) STRING_8 , STRING_7 ( METHOD_2 . res ; ) STRING_6 , STRING_5 ( METHOD_2 . res ; ) STRING_4 , STRING_3 ( METHOD_2 . res ; ) STRING_2 , STRING_1 ( METHOD_2 . res { ) res HttpServletResponse . TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( ) . run ( ) ; } } ; ) ( run . ) ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { METHOD_1 ( VAR_1 . name ( ) , TYPE_3 . METHOD_2 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_2 . TYPE_3 , ) ( name . VAR_1 ( METHOD_1 { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void public 
static TYPE_1 create ( ) { return ( ( TYPE_1 ) ( TYPE_2 . METHOD_1 ( ) ) ) ; } } ; ) ) ) ( METHOD_1 . TYPE_2 ( ) TYPE_1 ( ( return { ) ( create TYPE_1 static 
org.eclipse.jgit.lib.ObjectId METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 org.eclipse.jgit.lib.ObjectId 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_1 ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) STRING_1 ( METHOD_3 ( METHOD_2 . org.junit.Assert { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( final short VAR_1 ) { value = VAR_1 ; VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . TYPE_2 ( TYPE_1 new = VAR_2 ; VAR_1 = value { ) VAR_1 short final ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { return ; } VAR_1 . METHOD_5 ( new TYPE_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( TYPE_3 new ( METHOD_5 . VAR_1 } ; return { ) ) ( METHOD_4 . VAR_2 ( if ; ) ( METHOD_3 . ) VAR_3 ( METHOD_2 . VAR_1 = VAR_2 TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( TYPE_1 . project ( name . get ( ) ) ) ; } } ; ) ) ) ( get . name ( project . TYPE_1 ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } } ; ) class VAR_3 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_1 ( to . ) ( METHOD_2 { ) ( METHOD_1 void protected 
private static void reject ( final TYPE_1 . ReceiveCommand cmd ) { TYPE_2 . reject ( cmd , STRING_1 ) ; } } ; ) STRING_1 , cmd ( reject . TYPE_2 { ) cmd ReceiveCommand . TYPE_1 final ( reject void static private 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( cd , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) true , cd ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
public static TYPE_1 METHOD_1 ( int id , int VAR_1 ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( VAR_1 ) ; } } ; ) VAR_1 ( id . ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) VAR_1 int , id int ( METHOD_1 TYPE_1 static public 
public TYPE_1 get ( ) { final TYPE_2 . Id id = VAR_1 . getAccountId ( ) ; return id ! = null ? VAR_2 . create ( id ) : VAR_3 ; } } ; VAR_3 : ) id ( create . VAR_2 ? null = ! id return ; ) ( getAccountId . VAR_1 = id Id . TYPE_2 final { ) ( get TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( ) . get ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) ) ; return VAR_2 . get ( id ) ; } } ; ) id ( get . VAR_2 return ; ) ) ( METHOD_3 . ) ) ( getName . TYPE_3 ( get . ) ( METHOD_2 . VAR_1 ( com.google.gerrit.reviewdb.client.Account.Id new = id com.google.gerrit.reviewdb.client.Account.Id { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( result . METHOD_3 ( ) ) ; VAR_2 . display ( result . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . VAR_2 ; ) ) ( METHOD_4 . result ( display . VAR_2 ; ) ) ( METHOD_3 . result ( METHOD_2 . VAR_1 { ) result TYPE_1 ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { TYPE_1 ctl = VAR_1 ; if ( ctl == null ) { ctl = VAR_2 . create ( this ) ; VAR_1 = ctl ; } return ctl ; } } ; ctl return } ; ctl = VAR_1 ; ) this ( create . VAR_2 = ctl { ) null == ctl ( if ; VAR_1 = ctl TYPE_1 { ) ( METHOD_1 TYPE_1 public 
public TYPE_1 . Change update ( TYPE_1 . Change change ) { change . METHOD_1 ( VAR_1 . get ( VAR_2 , ps . getId ( ) ) ) ; return change ; } } ; change return ; ) ) ) ( getId . ps , VAR_2 ( get . VAR_1 ( METHOD_1 . change { ) change Change . TYPE_1 ( update Change . TYPE_1 public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ) ! = null ) & & ( METHOD_4 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_4 ( & & ) null = ! ) ) ) STRING_1 ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_2 ( ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
public static TYPE_1 METHOD_1 ( int VAR_1 ) { return new TYPE_1 ( VAR_2 < java.lang.String , TYPE_2 > of ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( of > TYPE_2 , java.lang.String < VAR_2 ( TYPE_1 new return { ) VAR_1 int ( METHOD_1 TYPE_1 static public 
public boolean METHOD_1 ( java.util.Set < java.lang.String > VAR_1 ) { return ( user . METHOD_2 ( ) ) || ( METHOD_3 ( VAR_2 , VAR_1 ) ) ; } } ; ) ) VAR_1 , VAR_2 ( METHOD_3 ( || ) ) ( METHOD_2 . user ( return { ) VAR_1 > java.lang.String < java.util.Set ( METHOD_1 boolean public 
private static long METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { return c . METHOD_2 ( ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ( METHOD_2 . c return { ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 long static private 
public java.lang.String METHOD_1 ( ) { final java.lang.String n = getName ( ) ; if ( n . METHOD_2 ( STRING_1 ) ) { return n . METHOD_3 ( STRING_1 . length ( ) ) ; } return n ; } } ; n return } ; ) ) ( length . STRING_1 ( METHOD_3 . n return { ) ) STRING_1 ( METHOD_2 . n ( if ; ) ( getName = n java.lang.String final { ) ( METHOD_1 java.lang.String public 
public static TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 < java.lang.String > ( VAR_1 ) { public java.lang.String apply ( java.lang.String in ) { return in ; } } ; } } ; } } ; in return { ) in java.lang.String ( apply java.lang.String public { ) VAR_1 ( > java.lang.String < TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 > java.lang.String < TYPE_1 static public 
private boolean METHOD_1 ( ) { return getProject ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ; } } ; ) VAR_1 ( equals . ) ( METHOD_2 . ) ( getProject return { ) ( METHOD_1 boolean private 
public TYPE_1 METHOD_1 ( java.lang.String id ) throws TYPE_2 , java.io.IOException { TYPE_1 rsrc = METHOD_2 ( id ) ; if ( rsrc == null ) { throw new TYPE_2 ( java.lang.String.format ( STRING_1 , id ) ) ; } return rsrc ; } } ; rsrc return } ; ) ) id , STRING_1 ( java.lang.String.format ( TYPE_2 new throw { ) null == rsrc ( if ; ) id ( METHOD_2 = rsrc TYPE_1 { java.io.IOException , TYPE_2 throws ) id java.lang.String ( METHOD_1 TYPE_1 public 
private org.eclipse.jgit.lib.ObjectId METHOD_1 ( TYPE_1 me , TYPE_2 VAR_1 , org.eclipse.jgit.revwalk.RevCommit VAR_2 , org.eclipse.jgit.revwalk.RevCommit base , org.eclipse.jgit.lib.ObjectId VAR_3 ) throws java.io.IOException { return METHOD_1 ( me , VAR_1 , VAR_2 , base , VAR_3 , VAR_2 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . VAR_2 , VAR_3 , base , VAR_2 , VAR_1 , me ( METHOD_1 return { java.io.IOException throws ) VAR_3 org.eclipse.jgit.lib.ObjectId , base org.eclipse.jgit.revwalk.RevCommit , VAR_2 org.eclipse.jgit.revwalk.RevCommit , VAR_1 TYPE_2 , me TYPE_1 ( METHOD_1 org.eclipse.jgit.lib.ObjectId private 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 m ) { return VAR_2 ? new TYPE_1 ( m ) : new TYPE_1 ( m , VAR_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . VAR_3 , m ( TYPE_1 new : ) m ( TYPE_1 new ? VAR_2 return { ) m TYPE_2 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
void METHOD_1 ( final boolean VAR_1 ) { httpd = false ; } } ; false = httpd { ) VAR_1 boolean final ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ! ( METHOD_2 ( VAR_1 ) ) ) & & ( ( VAR_2 ) == VAR_3 ) ) { super . METHOD_1 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_1 . super { ) ) VAR_3 == ) VAR_2 ( ( & & ) ) ) VAR_1 ( METHOD_2 ( ! ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { org.eclipse.jgit.lib.Repository git = VAR_1 . METHOD_2 ( project ) ; try { return new TYPE_1 ( TYPE_2 . METHOD_3 ( git . METHOD_4 ( ) ) ) ; } finally { git . close ( ) ; } } } } ; ) ( close . git { finally } ; ) ) ) ( METHOD_4 . git ( METHOD_3 . TYPE_2 ( TYPE_1 new return { try ; ) project ( METHOD_2 . VAR_1 = git org.eclipse.jgit.lib.Repository { java.io.IOException throws ) project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 TYPE_1 public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 , com.google.gerrit.reviewdb.client.Change . Id changeId ) { java.lang.StringBuilder r = TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 . get ( ) ) ; r . append ( changeId . get ( ) ) ; return r . toString ( ) ; } } ; ) ( toString . r return ; ) ) ( get . changeId ( append . r ; ) ) ( get . VAR_1 , VAR_2 ( METHOD_2 . TYPE_1 = r java.lang.StringBuilder { ) changeId Id . com.google.gerrit.reviewdb.client.Change , VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 java.lang.String static public 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_5 . TYPE_4 ( METHOD_4 . ) STRING_5 ( METHOD_3 . ) STRING_4 ( METHOD_3 . ) STRING_3 , STRING_2 ( METHOD_2 . ) STRING_1 ( TYPE_3 new { ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 void static public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( TYPE_2 . METHOD_2 ( id ) ) ) ; } } ; ) ) ) id ( METHOD_2 . TYPE_2 ( commit . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) id org.eclipse.jgit.lib.ObjectId ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
public boolean apply ( TYPE_1 info ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( ( ( info . name ) ! = null ? info . name : TYPE_2 . METHOD_1 ( info . id ) ) ) . equals ( p ) ; } } ; ) p ( equals . ) ) ) id . info ( METHOD_1 . TYPE_2 : name . info ? null = ! ) name . info ( ( ( com.google.gerrit.reviewdb.client.Project.NameKey new return { ) info TYPE_1 ( apply boolean public 
private static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { VAR_1 . METHOD_2 ( ( STRING_1 + ( ( ( ( ( ( STRING_2 + STRING_3 ) + STRING_4 ) + STRING_5 ) + STRING_6 ) + STRING_7 ) + STRING_8 ) ) ) ; } } ; ) ) ) STRING_8 + ) STRING_7 + ) STRING_6 + ) STRING_5 + ) STRING_4 + ) STRING_3 + STRING_2 ( ( ( ( ( ( + STRING_1 ( ( METHOD_2 . VAR_1 { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void static private 
private static TYPE_1 value ( final TYPE_2 VAR_1 , final int value , final java.lang.String name ) { return new TYPE_1 ( new TYPE_1 . Key ( VAR_1 . getId ( ) , ( ( short ) ( value ) ) ) , name ) ; } } ; ) name , ) ) ) value ( ) short ( ( , ) ( getId . VAR_1 ( Key . TYPE_1 new ( TYPE_1 new return { ) name java.lang.String final , value int final , VAR_1 TYPE_2 final ( value TYPE_1 static private 
private void log ( final int VAR_1 ) { if ( VAR_2 . METHOD_1 ( false , true ) ) { log . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . log { ) ) true , false ( METHOD_1 . VAR_2 ( if { ) VAR_1 int final ( log void private 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_2 ) ! = null ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 = VAR_1 . length ( ) ; } } } } ; ) ( length . VAR_1 = VAR_3 ; ) VAR_1 ( METHOD_2 . VAR_2 { ) null = ! ) VAR_2 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { return java.util.Collections . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . java.util.Collections return { ) VAR_1 java.lang.String ( METHOD_1 > java.lang.String < java.util.List public 
protected void METHOD_1 ( ) throws java.lang.Exception { walk . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . walk { java.lang.Exception throws ) ( METHOD_1 void protected 
TYPE_1 METHOD_1 ( ) throws java.io.IOException { TYPE_1 VAR_1 = TYPE_2 . get ( config . METHOD_2 ( ) . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_1 ( METHOD_4 . TYPE_3 ; ) ) ( METHOD_3 . ) ( METHOD_2 . config ( get . TYPE_2 = VAR_1 TYPE_1 { java.io.IOException throws ) ( METHOD_1 TYPE_1 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ; return VAR_2 . METHOD_2 ( git , STRING_1 ) . getChangeId ( ) ; } } ; ) ( getChangeId . ) STRING_1 , git ( METHOD_2 . VAR_2 return ; ) VAR_6 , VAR_5 , VAR_4 , VAR_1 , db ( create . VAR_3 = VAR_2 TYPE_3 { java.lang.Exception throws ) VAR_1 TYPE_2 , git TYPE_1 ( METHOD_1 java.lang.String private 
public void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { if ( VAR_2 ! = null ) { VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ; } else { VAR_1 . append ( VAR_3 ) ; } } } } ; ) VAR_3 ( append . VAR_1 { else } ; ) ) VAR_2 ( METHOD_2 ( append . VAR_1 { ) null = ! VAR_2 ( if { ) VAR_2 java.lang.String final , VAR_1 TYPE_1 final ( METHOD_1 void public 
public TYPE_1 < TYPE_2 , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return TYPE_3 . METHOD_1 ( METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 ( METHOD_1 . TYPE_3 return { com.google.gwtorm.server.OrmException throws ) ( reviewers > com.google.gerrit.reviewdb.client.Account.Id , TYPE_2 < TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; } } ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { return METHOD_2 ( ) ; } } ; ) ( METHOD_2 return { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 boolean public 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id change ) ; ; ) change Id . com.google.gerrit.reviewdb.client.Change ( create TYPE_1 
public final native java.lang.String projectName ( ) ; ; ) ( projectName java.lang.String native final public 
public static TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) VAR_3 TYPE_3 , VAR_2 TYPE_2 , VAR_1 int ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( ) throws TYPE_1 { boolean VAR_1 = ( VAR_2 . METHOD_2 ( VAR_3 class ) ) == null ; METHOD_3 ( TYPE_2 . config ( VAR_2 ) , VAR_1 ) ; base . METHOD_1 ( ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ( METHOD_1 . base ; ) VAR_1 , ) VAR_2 ( config . TYPE_2 ( METHOD_3 ; null == ) ) class VAR_3 ( METHOD_2 . VAR_2 ( = VAR_1 boolean { TYPE_1 throws ) ( METHOD_1 void public 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 info , TYPE_2 < com.google.gerrit.reviewdb.client.Account > VAR_3 ) ; ; ) VAR_3 > com.google.gerrit.reviewdb.client.Account < TYPE_2 , info TYPE_1 , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 void 
public void METHOD_1 ( boolean VAR_1 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_2 , schema . METHOD_3 ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( METHOD_3 . schema , VAR_2 ( METHOD_2 . TYPE_1 { java.io.IOException throws ) VAR_1 boolean ( METHOD_1 void public 
protected final < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( ) { return TYPE_3 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . TYPE_3 return { ) ( METHOD_1 > TYPE_1 < TYPE_2 > TYPE_1 < final protected 
protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 < TYPE_1 > VAR_1 ) throws java.lang.Exception { return METHOD_1 ( path , VAR_1 , STRING_1 ) ; } } ; ) STRING_1 , VAR_1 , path ( METHOD_1 return { java.lang.Exception throws ) VAR_1 > TYPE_1 < TYPE_2 , path java.lang.String ( METHOD_1 TYPE_1 > TYPE_1 < protected 
public TYPE_1 METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( FLOAT_1 ) ; } } ; ) FLOAT_1 ( METHOD_2 { ) VAR_1 boolean ( METHOD_1 TYPE_1 public 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , TYPE_1 > > ( ) { } ) ; } } ; ) } { ) ( > > TYPE_1 , java.lang.String < java.util.Map < TYPE_2 new , path ( METHOD_2 return { java.lang.Exception throws ) path java.lang.String ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map private 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , project , STRING_1 , true , VAR_2 ) ; } } ; ) VAR_2 , true , STRING_1 , project , VAR_1 ( METHOD_3 ; ) ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
public static TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( java.lang.String name ) { TYPE_2 id = TYPE_3 . METHOD_2 ( name ) ; return TYPE_1 . METHOD_3 ( id ) . METHOD_4 ( com.google.gerrit.reviewdb.client.Account.Id : : new ) ; } } ; ) new : : com.google.gerrit.reviewdb.client.Account.Id ( METHOD_4 . ) id ( METHOD_3 . TYPE_1 return ; ) name ( METHOD_2 . TYPE_3 = id TYPE_2 { ) name java.lang.String ( METHOD_1 > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 static public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . in ( VAR_3 ) ; bind ( VAR_4 class ) . in ( VAR_3 ) ; } } ; ) VAR_3 ( in . ) class VAR_4 ( bind ; ) VAR_3 ( in . ) class VAR_2 ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . add ( table ) ; table . METHOD_3 ( false ) ; } } ; ) false ( METHOD_3 . table ; ) table ( add . VAR_1 ; ) ( METHOD_2 . VAR_1 { ) ( METHOD_1 void 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) ( METHOD_1 . TYPE_1 = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , TYPE_1 e ) { METHOD_2 ( change , e ) ; throw e ; } } ; e throw ; ) e , change ( METHOD_2 { ) e TYPE_1 , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 void private 
public static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; } } ; ) STRING_1 , id ( METHOD_2 . TYPE_2 return { ) id int ( METHOD_1 TYPE_1 static public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId , TYPE_2 user ) throws TYPE_3 , com.google.gwtorm.server.OrmException { TYPE_1 ctl = VAR_1 . METHOD_2 ( changeId , user ) ; return METHOD_1 ( ctl . getChange ( ) , user ) ; } } ; ) user , ) ( getChange . ctl ( METHOD_1 return ; ) user , changeId ( METHOD_2 . VAR_1 = ctl TYPE_1 { com.google.gwtorm.server.OrmException , TYPE_3 throws ) user TYPE_2 , changeId Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
private void index ( com.google.gerrit.reviewdb.client . AccountGroup group ) throws java.io.IOException { if ( ( VAR_1 . METHOD_1 ( ) ) ! = null ) { VAR_1 . METHOD_1 ( ) . METHOD_2 ( group ) ; } } } } ; ) group ( METHOD_2 . ) ( METHOD_1 . VAR_1 { ) null = ! ) ) ( METHOD_1 . VAR_1 ( ( if { java.io.IOException throws ) group AccountGroup . com.google.gerrit.reviewdb.client ( index void private 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , project , STRING_1 , true ) ; METHOD_3 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_3 ; ) true , STRING_1 , project , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 event ) { if ( ( -- ( VAR_1 ) ) == 0 ) { VAR_2 . METHOD_2 ( false ) ; } } } } ; ) false ( METHOD_2 . VAR_2 { ) 0 == ) ) VAR_1 ( -- ( ( if { ) event TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 in = new TYPE_2 ( ) ; in . name = STRING_1 ; VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) ; } } ; ) in ( create . ) STRING_2 ( name . ) ( projects . VAR_1 ; STRING_1 = name . in ; ) ( TYPE_2 new = in TYPE_2 { TYPE_1 throws ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( java.lang.String lang ) { return VAR_1 ? new TYPE_2 ( lang ) : new TYPE_3 ( ) ; } } ; ) ( TYPE_3 new : ) lang ( TYPE_2 new ? VAR_1 return { ) lang java.lang.String ( METHOD_1 TYPE_1 static public 
int METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { return ( ( int ) ( TYPE_2 . METHOD_3 ( VAR_2 ) ) ) ; } else { return - 1 ; } } } } ; 1 - return { else } ; ) ) ) VAR_2 ( METHOD_3 . TYPE_2 ( ) int ( ( return { ) ) ( METHOD_2 . VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 int 
public TYPE_1 get ( ) { return new TYPE_1 ( VAR_1 , METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 , VAR_1 ( TYPE_1 new return { ) ( get TYPE_1 public 
private static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) & & ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_2 . ) ( getMessage . VAR_1 ( & & ) TYPE_2 instanceof VAR_1 ( return { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static private 
public final native void METHOD_1 ( int VAR_1 ) ; ; ) VAR_1 int ( METHOD_1 void native final public 
public TYPE_1 create ( final com.google.gerrit.reviewdb.client.Account.Id id ) { return create ( ( ( TYPE_2 ) ( null ) ) , id ) ; } } ; ) id , ) ) null ( ) TYPE_2 ( ( ( create return { ) id com.google.gerrit.reviewdb.client.Account.Id final ( create TYPE_1 public 
public void message ( java.lang.String msg ) { } } { ) msg java.lang.String ( message void public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 , 0 , VAR_3 ) ; } } ; ) VAR_3 , 0 , VAR_1 ( METHOD_2 . VAR_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
private void display ( final TYPE_1 result ) { table . METHOD_1 ( result . METHOD_2 ( ) ) ; VAR_1 . display ( result . METHOD_3 ( ) ) ; table . METHOD_4 ( true ) ; } } ; ) true ( METHOD_4 . table ; ) ) ( METHOD_3 . result ( display . VAR_1 ; ) ) ( METHOD_2 . result ( METHOD_1 . table { ) result TYPE_1 final ( display void private 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId ) ) ; } } ; ) ) psId ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public TYPE_1 METHOD_1 ( ) { return ( ( TYPE_1 ) ( ctl . METHOD_2 ( ) ) ) ; } } ; ) ) ) ( METHOD_2 . ctl ( ) TYPE_1 ( ( return { ) ( METHOD_1 TYPE_1 public 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , VAR_1 , null ( TYPE_1 new return { ) VAR_2 TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
java.lang.String METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 java.lang.String 
public void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; if ( VAR_3 ) { METHOD_2 ( ) . to ( VAR_4 class ) ; } } } } ; ) class VAR_4 ( to . ) ( METHOD_2 { ) VAR_3 ( if ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 . Status VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , false , VAR_3 ) ; } } ; ) VAR_3 , false , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) VAR_3 Status . TYPE_2 , VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
int METHOD_1 ( ) { return ( VAR_1 . length ( ) ) * 2 ; } } ; 2 * ) ) ( length . VAR_1 ( return { ) ( METHOD_1 int 
public void METHOD_1 ( final java.lang.String url ) { this . VAR_1 = url ; } } ; url = VAR_1 . this { ) url java.lang.String final ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; VAR_1 . projects ( ) . name ( STRING_2 ) . create ( in ) ; } } ; ) in ( create . ) STRING_2 ( name . ) ( projects . VAR_1 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { TYPE_2 result = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; org.junit.Assert.assertEquals ( TYPE_4 . METHOD_4 ( VAR_2 ) , result . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . result , ) VAR_2 ( METHOD_4 . TYPE_4 ( org.junit.Assert.assertEquals ; ) VAR_3 , ) ( METHOD_3 . VAR_1 ( METHOD_2 . ) ( TYPE_3 new = result TYPE_2 { java.lang.Exception throws ) VAR_2 ... java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( ) ; } } ; ) ( METHOD_2 = VAR_1 ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void protected 
public void onSuccess ( java.lang.String result ) { TYPE_1 . display ( TYPE_2 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) ; } } ; ) ) ) ) ( get . psId ( METHOD_2 . java.lang.String , ) ( getParentKey . psId ( METHOD_1 . TYPE_2 ( display . TYPE_1 { ) result java.lang.String ( onSuccess void public 
TYPE_1 METHOD_1 ( ) { return ( ) - > { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } ; } } ; } ; ) ) ) ) ( METHOD_3 ( ! ( ( METHOD_2 { > - ) ( return { ) ( METHOD_1 TYPE_1 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( STRING_1 , null , revision , VAR_1 , null , 0 ) ; } } ; ) 0 , null , VAR_1 , revision , null , STRING_1 ( METHOD_2 . TYPE_1 return { ) VAR_1 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_2 notes , com.google.gerrit.reviewdb.client.PatchSet patch ) { return TYPE_3 . METHOD_2 ( this , db , notes , patch , VAR_1 , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , VAR_1 , patch , notes , db , this ( METHOD_2 . TYPE_3 return { ) patch com.google.gerrit.reviewdb.client.PatchSet , notes TYPE_2 , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( TYPE_1 c ) { METHOD_2 ( c ) ; VAR_1 . METHOD_3 ( c ) ; } } ; ) c ( METHOD_3 . VAR_1 ; ) c ( METHOD_2 { ) c TYPE_1 ( METHOD_1 void private 
private void METHOD_1 ( ) throws java.io.IOException { if ( VAR_1 ) { METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 { ) VAR_1 ( if { java.io.IOException throws ) ( METHOD_1 void private 
private static TYPE_1 METHOD_1 ( org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.ObjectId id ) throws java.io.IOException , TYPE_2 , TYPE_3 { return ( ( TYPE_1 ) ( rw . parseCommit ( id ) ) ) ; } } ; ) ) ) id ( parseCommit . rw ( ) TYPE_1 ( ( return { TYPE_3 , TYPE_2 , java.io.IOException throws ) id org.eclipse.jgit.lib.ObjectId , rw org.eclipse.jgit.revwalk.RevWalk ( METHOD_1 TYPE_1 static private 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData , ? > ... VAR_1 ) { return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( false , TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_3 , false ( > com.google.gerrit.server.query.change.ChangeData < TYPE_1 new return { ) VAR_1 ... > ? , com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
public static boolean METHOD_1 ( TYPE_1 cfg ) { return cfg . METHOD_2 ( STRING_1 , null , STRING_2 , false ) ; } } ; ) false , STRING_2 , null , STRING_1 ( METHOD_2 . cfg return { ) cfg TYPE_1 ( METHOD_1 boolean static public 
public void METHOD_1 ( ) { final long id = INT_1 ; final TYPE_1 p = new TYPE_1 ( id ) ; assertEquals ( ( ( int ) ( id ) ) , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , ) ) id ( ) int ( ( ( assertEquals ; ) id ( TYPE_1 new = p TYPE_1 final ; INT_1 = id long final { ) ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 , int line , java.lang.String message ) { TYPE_1 c = new TYPE_1 ( ) ; return TYPE_3 . METHOD_2 ( c , path , VAR_1 , line , message ) ; } } ; ) message , line , VAR_1 , path , c ( METHOD_2 . TYPE_3 return ; ) ( TYPE_1 new = c TYPE_1 { ) message java.lang.String , line int , VAR_1 TYPE_2 , path java.lang.String ( METHOD_1 TYPE_1 static private 
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; return this ; } } ; this return ; ) VAR_1 ( METHOD_2 . VAR_2 { ) VAR_1 > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) { final TYPE_1 b = new TYPE_1 ( ) ; METHOD_2 ( b , b . append ( FLOAT_1 ) ) ; assertEquals ( STRING_1 , b . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . b , STRING_1 ( assertEquals ; ) ) FLOAT_1 ( append . b , b ( METHOD_2 ; ) ( TYPE_1 new = b TYPE_1 final { ) ( METHOD_1 void public 
public Change . Key METHOD_1 ( ) { return null ; } } ; null return { ) ( METHOD_1 Key . Change public 
public TYPE_1 METHOD_1 ( TYPE_2 input ) throws TYPE_3 { try { return VAR_1 . apply ( change , input ) . value ( ) ; } catch ( TYPE_4 e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_3 new throw { ) e TYPE_4 ( catch } ; ) ( value . ) input , change ( apply . VAR_1 return { try { TYPE_3 throws ) input TYPE_2 ( METHOD_1 TYPE_1 public 
private org.eclipse.jgit.lib.Repository METHOD_1 ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return VAR_1 . METHOD_1 ( name ) ; } catch ( TYPE_1 err ) { VAR_2 . METHOD_2 ( ( STRING_1 + ( name . get ( ) ) ) , err ) ; return null ; } } } } ; null return ; ) err , ) ) ) ( get . name ( + STRING_1 ( ( METHOD_2 . VAR_2 { ) err TYPE_1 ( catch } ; ) name ( METHOD_1 . VAR_1 return { try { ) name com.google.gerrit.reviewdb.client.Project.NameKey final ( METHOD_1 org.eclipse.jgit.lib.Repository private 
public static native void METHOD_1 ( ) ; ; ) ( METHOD_1 void native static public 
protected void METHOD_1 ( ) { rpc ( VAR_1 class ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_2 ( ) ) ; } } ; ) ) ( TYPE_2 new ( install ; ) ) ( TYPE_1 new ( install ; ) class VAR_1 ( rpc { ) ( METHOD_1 void protected 
static TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return null ; } return VAR_1 . METHOD_2 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_2 ( STRING_3 ) . METHOD_2 ( STRING_4 ) ; } } ; ) STRING_4 ( METHOD_2 . ) STRING_3 ( METHOD_2 . ) STRING_2 ( METHOD_2 . ) STRING_1 ( METHOD_2 . VAR_1 return } ; null return { ) null == VAR_1 ( if { ) VAR_1 TYPE_1 ( METHOD_1 TYPE_1 static 
public static TYPE_1 revision ( int id , java.lang.String revision ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( revision ) ; } } ; ) revision ( id . ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) revision java.lang.String , id int ( revision TYPE_1 static public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { c . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( c ) ; } } ; ) c ( METHOD_4 . TYPE_2 ; ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 . c { ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 void static public 
public void METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 ; } } ; VAR_1 = VAR_1 . this { ) VAR_1 java.lang.String final ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 . Id id ) ; ; ) id Id . TYPE_2 ( create TYPE_1 
public void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { VAR_1 . append ( METHOD_2 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_2 ( append . VAR_1 { ) VAR_2 java.lang.String final , VAR_1 TYPE_1 final ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 . getChangeId ( ) ) ) ; } } } } ; ) ) ) ( getChangeId . VAR_1 ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) ) ( METHOD_1 . VAR_1 ( if { ) result TYPE_1 ( onSuccess void public 
public void METHOD_1 ( TYPE_1 event ) { if ( STRING_1 . equals ( VAR_1 . METHOD_2 ( ) ) ) { VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( TYPE_3 . css ( ) . METHOD_6 ( ) ) ; } } } } ; ) ) ( METHOD_6 . ) ( css . TYPE_3 ( METHOD_5 . VAR_1 ; ) ) ( METHOD_4 . TYPE_2 ( METHOD_3 . VAR_1 { ) ) ) ( METHOD_2 . VAR_1 ( equals . STRING_1 ( if { ) event TYPE_1 ( METHOD_1 void public 
public TYPE_1 . Change update ( TYPE_1 . Change c ) { if ( c . getStatus ( ) . METHOD_1 ( ) ) { c . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( c ) ; } return c ; } } ; c return } ; ) c ( METHOD_3 . TYPE_2 ; ) VAR_1 ( METHOD_2 . c { ) ) ( METHOD_1 . ) ( getStatus . c ( if { ) c Change . TYPE_1 ( update Change . TYPE_1 public 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . delete ( ) ; repo = TYPE_2 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) VAR_1 ( METHOD_3 . TYPE_2 = repo ; ) ( delete . VAR_1 ; ) STRING_2 , STRING_1 ( METHOD_2 . TYPE_1 = VAR_1 { java.io.IOException throws ) ( METHOD_1 void public 
public TYPE_1 . Change update ( TYPE_1 . Change change ) { change . METHOD_1 ( ) ; return change ; } } ; change return ; ) ( METHOD_1 . change { ) change Change . TYPE_1 ( update Change . TYPE_1 public 
public void run ( ) throws java.lang.Exception { METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) ( METHOD_1 { java.lang.Exception throws ) ( run void public 
public boolean METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_1 VAR_2 ) throws TYPE_2 { return VAR_3 . METHOD_2 ( VAR_4 , args . repo , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , repo . args , VAR_4 ( METHOD_2 . VAR_3 return { TYPE_2 throws ) VAR_2 TYPE_1 final , VAR_1 TYPE_1 final ( METHOD_1 boolean public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , TYPE_1 < TYPE_2 < TYPE_3 < TYPE_4 > > > VAR_1 ) { TYPE_5 . revision ( id , STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 , id ( revision . TYPE_5 { ) VAR_1 > > > TYPE_4 < TYPE_3 < TYPE_2 < TYPE_1 , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
public void onSuccess ( TYPE_1 . ChangeInfo c ) { project . METHOD_1 ( c . project ( ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , TYPE_3 . METHOD_3 ( path , null , null ) ) ; } } ; ) ) null , null , path ( METHOD_3 . TYPE_3 , VAR_1 ( METHOD_2 . TYPE_2 ; ) ) ( project . c ( METHOD_1 . project { ) c ChangeInfo . TYPE_1 ( onSuccess void public 
private java.lang.String METHOD_1 ( TYPE_1 r ) throws java.io.IOException { TYPE_2 VAR_1 = new TYPE_2 ( r . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( true ) ; return METHOD_4 ( ) . METHOD_5 ( VAR_1 , VAR_2 . String class ) ; } } ; ) class String . VAR_2 , VAR_1 ( METHOD_5 . ) ( METHOD_4 return ; ) true ( METHOD_3 . VAR_1 ; ) ) ( METHOD_2 . r ( TYPE_2 new = VAR_1 TYPE_2 { java.io.IOException throws ) r TYPE_1 ( METHOD_1 java.lang.String private 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) . get ( ) ) ; } } ; ) ) ( get . ) ( METHOD_3 , VAR_1 ( METHOD_2 . TYPE_2 { ) event TYPE_1 ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( int id , java.lang.String path ) { return TYPE_2 . edit ( id ) . id ( path ) ; } } ; ) path ( id . ) id ( edit . TYPE_2 return { ) path java.lang.String , id int ( METHOD_1 TYPE_1 static private 
TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) ; ; ) patch com.google.gerrit.reviewdb.client.PatchSet , cd com.google.gerrit.server.query.change.ChangeData , repo org.eclipse.jgit.lib.Repository ( METHOD_1 TYPE_1 
public TYPE_1 < com.google.gerrit.reviewdb.client.PatchSet.Id , com.google.gerrit.reviewdb.client . PatchSetApproval > METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { if ( ( VAR_1 ) == null ) { VAR_1 = VAR_2 . METHOD_2 ( db , notes ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( notes , db ( METHOD_2 . VAR_2 = VAR_1 { ) null == ) VAR_1 ( ( if { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 > PatchSetApproval . com.google.gerrit.reviewdb.client , com.google.gerrit.reviewdb.client.PatchSet.Id < TYPE_1 public 
public void close ( ) { walk ( ) . close ( ) ; } } ; ) ( close . ) ( walk { ) ( close void public 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ( METHOD_2 return { ) ( METHOD_1 TYPE_1 public 
private boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) & & ( METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 ( & & ) ) VAR_3 ( METHOD_3 . ) ) ) VAR_2 ( + STRING_1 ( ( METHOD_2 . VAR_1 ( return { ) ( METHOD_1 boolean private 
TYPE_1 create ( java.lang.String url , java.lang.String user , java.lang.String VAR_1 ) { if ( url == null ) { return VAR_2 ; } else { return new TYPE_2 ( url , user , VAR_1 ) ; } } } } ; ) VAR_1 , user , url ( TYPE_2 new return { else } ; VAR_2 return { ) null == url ( if { ) VAR_1 java.lang.String , user java.lang.String , url java.lang.String ( create TYPE_1 
public void close ( ) { TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; try { VAR_4 . close ( ) ; } finally { VAR_5 . close ( ) ; } } } } ; ) ( close . VAR_5 { finally } ; ) ( close . VAR_4 { try ; ) VAR_3 , VAR_2 , VAR_1 ( METHOD_1 . TYPE_1 { ) ( close void public 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; } } ; ) STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
protected void METHOD_1 ( int row , int VAR_1 ) { if ( ( VAR_1 == 1 ) || ( VAR_1 == INT_1 ) ) { METHOD_2 ( row , VAR_1 ) ; } } } } ; ) VAR_1 , row ( METHOD_2 { ) ) INT_1 == VAR_1 ( || ) 1 == VAR_1 ( ( if { ) VAR_1 int , row int ( METHOD_1 void protected 
boolean METHOD_1 ( ) { VAR_1 = true ; ( VAR_2 ) ++ ; return ( VAR_2 ) < = ( VAR_3 ) ; } } ; ) VAR_3 ( = < ) VAR_2 ( return ; ++ ) VAR_2 ( ; true = VAR_1 { ) ( METHOD_1 boolean 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . METHOD_2 ( null ) ) ; } } ; ) ) null ( METHOD_2 . VAR_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 . ChangeInfo METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { try { return VAR_2 . apply ( change , VAR_1 ) . value ( ) ; } catch ( com.google.gwtorm.server.OrmException | TYPE_4 e ) { throw new TYPE_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_3 new throw { ) e TYPE_4 | com.google.gwtorm.server.OrmException ( catch } ; ) ( value . ) VAR_1 , change ( apply . VAR_2 return { try { TYPE_3 throws ) VAR_1 TYPE_2 ( METHOD_1 ChangeInfo . TYPE_1 public 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 . get ( ) ) == null ) { return super . METHOD_1 ( ) ; } else { return VAR_1 . get ( ) ; } } } } ; ) ( get . VAR_1 return { else } ; ) ( METHOD_1 . super return { ) null == ) ) ( get . VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 public 
private boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 boolean private 
private static TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( ) ; return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return ; ) ( TYPE_3 new = VAR_1 TYPE_3 { TYPE_2 throws ) ( METHOD_1 TYPE_1 static private 
protected abstract void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 out ) ; ; ) out TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void abstract protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( project ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_2 ( STRING_2 ) . get ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( get . ) STRING_2 ( METHOD_2 . VAR_1 , STRING_1 ( org.junit.Assert.assertEquals ; ) project ( get . VAR_2 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return ( VAR_1 instanceof TYPE_2 ) & & ( VAR_1 . getMessage ( ) . equals ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( equals . ) ( getMessage . VAR_1 ( & & ) TYPE_2 instanceof VAR_1 ( return { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . TYPE_2 return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
private int METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String p ) { int r = java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , this ) , p ) ; return r < 0 ? - ( r + 1 ) : r ; } } ; r : ) 1 + r ( - ? 0 < r return ; ) p , ) this , VAR_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . java.util.Collections = r int { ) p java.lang.String , VAR_1 > TYPE_1 < java.util.List ( METHOD_1 int private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Result change = METHOD_2 ( git ) ; submit ( change . getChangeId ( ) ) ; com.google.common.truth.Truth.assertThat ( METHOD_3 ( ) . getId ( ) ) . isEqualTo ( change . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . change ( isEqualTo . ) ) ( getId . ) ( METHOD_3 ( com.google.common.truth.Truth.assertThat ; ) ) ( getChangeId . change ( submit ; ) git ( METHOD_2 = change Result . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( java.lang.String msg ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) ) ; } } } } ; ) ) msg + ) STRING_2 + ) ) VAR_2 ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) msg java.lang.String ( METHOD_1 void private 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public void onSuccess ( final TYPE_3 result ) { VAR_1 . display ( result ) ; } } ) ; } } ; ) } } ; ) result ( display . VAR_1 { ) result TYPE_3 final ( onSuccess void public { ) ( > TYPE_3 < TYPE_2 new ( METHOD_2 . TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_2 ) ; if ( VAR_3 ! = null ) { plugins . put ( VAR_2 . getName ( ) , VAR_3 ) ; } } } } ; ) VAR_3 , ) ( getName . VAR_2 ( put . plugins { ) null = ! VAR_3 ( if ; ) VAR_2 ( METHOD_2 = VAR_3 TYPE_2 { ) VAR_2 TYPE_1 , VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 . Key VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 Key . TYPE_1 final ( METHOD_1 void public 
void METHOD_1 ( ) { this . VAR_1 = false ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; false = VAR_1 . this { ) ( METHOD_1 void 
private java.util.List < TYPE_1 > METHOD_1 ( ) throws java.lang.Exception { return VAR_1 . projects ( ) . name ( project . get ( ) ) . METHOD_1 ( ) . get ( ) ; } } ; ) ( get . ) ( METHOD_1 . ) ) ( get . project ( name . ) ( projects . VAR_1 return { java.lang.Exception throws ) ( METHOD_1 > TYPE_1 < java.util.List private 
private static java.lang.String METHOD_1 ( java.lang.String type , com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , TYPE_1 . Key id ) { return TYPE_2 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) ) ; } } ; ) ) ( get . id , ) ( getParentKey . id , VAR_1 , type ( METHOD_1 . TYPE_2 return { ) id Key . TYPE_1 , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id , type java.lang.String ( METHOD_1 java.lang.String static private 
public TYPE_1 get ( ) { final TYPE_2 . Id id = VAR_1 . getAccountId ( ) ; return id ! = null ? new TYPE_3 ( id ) : VAR_2 ; } } ; VAR_2 : ) id ( TYPE_3 new ? null = ! id return ; ) ( getAccountId . VAR_1 = id Id . TYPE_2 final { ) ( get TYPE_1 public 
void METHOD_1 ( TYPE_1 cmd ) { VAR_1 = cmd ; update ( ) ; } } ; ) ( update ; cmd = VAR_1 { ) cmd TYPE_1 ( METHOD_1 void 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) VAR_3 TYPE_3 , VAR_2 TYPE_2 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static public 
private TYPE_1 METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p ) { try { return new TYPE_1 ( index , p ) ; } catch ( TYPE_3 e ) { throw new TYPE_4 ( ( ( STRING_1 + p ) + STRING_2 ) , e ) ; } } } } ; ) e , ) STRING_2 + ) p + STRING_1 ( ( ( TYPE_4 new throw { ) e TYPE_3 ( catch } ; ) p , index ( TYPE_1 new return { try { ) p > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( METHOD_1 TYPE_1 private 
void METHOD_1 ( TYPE_1 . Id VAR_1 , TYPE_2 . Id VAR_2 , java.lang.String VAR_3 , short VAR_4 , short VAR_5 , TYPE_3 < TYPE_4 > VAR_6 ) ; ; ) VAR_6 > TYPE_4 < TYPE_3 , VAR_5 short , VAR_4 short , VAR_3 java.lang.String , VAR_2 Id . TYPE_2 , VAR_1 Id . TYPE_1 ( METHOD_1 void 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . Id id ) throws TYPE_4 . OrmException ; ; OrmException . TYPE_4 throws ) id Id . TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 
public boolean get ( org.eclipse.jgit.lib.ObjectId commit , TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 , TYPE_3 . NameKey VAR_4 , org.eclipse.jgit.lib.Repository repo , com.google.gerrit.reviewdb.server.ReviewDb db ) { throw new TYPE_4 ( STRING_1 ) ; } } ; ) STRING_1 ( TYPE_4 new throw { ) db com.google.gerrit.reviewdb.server.ReviewDb , repo org.eclipse.jgit.lib.Repository , VAR_4 NameKey . TYPE_3 , VAR_3 java.lang.String , VAR_2 TYPE_2 , VAR_1 TYPE_1 , commit org.eclipse.jgit.lib.ObjectId ( get boolean public 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . format = VAR_1 ; return this ; } } ; this return ; VAR_1 = format . this { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } } ; ) ( METHOD_8 ; ) ( METHOD_7 ; ) ( METHOD_6 ; ) ( METHOD_5 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { return db . changes ( ) . get ( update . getChange ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( getChange . update ( get . ) ( changes . db return { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 com.google.gerrit.reviewdb.client.Change public 
private void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( id ) ; } } } } ; ) id ( METHOD_2 . VAR_1 { ) VAR_1 ( synchronized { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void private 
public boolean apply ( com.google.gerrit.reviewdb.client.Project.NameKey in ) { return a . run ( in . get ( ) ) ; } } ; ) ) ( get . in ( run . a return { ) in com.google.gerrit.reviewdb.client.Project.NameKey ( apply boolean public 
public java.lang.String METHOD_1 ( ) throws java.lang.Exception { if ( VAR_1 . equals ( VAR_2 ) ) return METHOD_2 ( ) ; else return METHOD_3 ( ) ; } } ; ) ( METHOD_3 return else ; ) ( METHOD_2 return ) ) VAR_2 ( equals . VAR_1 ( if { java.lang.Exception throws ) ( METHOD_1 java.lang.String public 
public final void delete ( final TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { METHOD_1 ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( METHOD_1 { OrmException . TYPE_3 throws ) VAR_1 > TYPE_2 < TYPE_1 final ( delete void final public 
public int getStatus ( ) { return status ; } } ; status return { ) ( getStatus int public 
protected void display ( final TYPE_1 result ) { projects . display ( result ) ; projects . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . projects ; ) result ( display . projects { ) result TYPE_1 final ( display void protected 
public void display ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { display ( null , null , false , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , false , null , null ( display { ) VAR_2 TYPE_1 , VAR_1 java.lang.String ( display void public 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 , com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( VAR_1 ) == null ) { METHOD_2 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( METHOD_2 { ) null == ) VAR_1 ( ( if { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_2 throws ) ( METHOD_1 > TYPE_1 < java.util.List public 
public TYPE_1 create ( TYPE_2 < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , null , db , id ) ; } } ; ) id , db , null , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id , db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_2 ( create TYPE_1 public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet ps , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ps . METHOD_2 ( ) ) & & ( ! ( METHOD_3 ( db ) ) ) ) { return false ; } return METHOD_4 ( db ) ; } } ; ) db ( METHOD_4 return } ; false return { ) ) ) ) db ( METHOD_3 ( ! ( & & ) ) ( METHOD_2 . ps ( ( if { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , ps com.google.gerrit.reviewdb.client.PatchSet ( METHOD_1 boolean public 
public void METHOD_1 ( ) { VAR_1 = VAR_2 . create ( user ) ; } } ; ) user ( create . VAR_2 = VAR_1 { ) ( METHOD_1 void public 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; } } ; ) ) db ( METHOD_3 ( || ) ) ( METHOD_2 ( return { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean private 
void METHOD_1 ( TYPE_1 e ) { VAR_1 . add ( e ) ; } } ; ) e ( add . VAR_1 { ) e TYPE_1 ( METHOD_1 void 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { java.io.IOException throws ) ( METHOD_1 void private 
public final boolean METHOD_1 ( ) { return get ( STRING_1 , true ) ; } } ; ) true , STRING_1 ( get return { ) ( METHOD_1 boolean final public 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { org.junit.Assert . METHOD_2 ( VAR_2 , VAR_2 . contains ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( contains . VAR_2 , VAR_2 ( METHOD_2 . org.junit.Assert { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 i , java.lang.String msg ) throws java.io.IOException , TYPE_3 { return TYPE_4 . METHOD_1 ( git , i , msg , true ) ; } } ; ) true , msg , i , git ( METHOD_1 . TYPE_4 return { TYPE_3 , java.io.IOException throws ) msg java.lang.String , i TYPE_2 , git TYPE_1 ( METHOD_1 java.lang.String static public 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , c . getProject ( ) , c ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) c , ) ( getProject . c , args ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 protected 
private void METHOD_1 ( final TYPE_1 req , final TYPE_2 . HttpServletResponse rsp ) throws java.io.IOException { METHOD_2 ( req , rsp ) ; } } ; ) rsp , req ( METHOD_2 { java.io.IOException throws ) rsp HttpServletResponse . TYPE_2 final , req TYPE_1 final ( METHOD_1 void private 
void message ( java.lang.String msg ) ; ; ) msg java.lang.String ( message void 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 [ ] VAR_1 ) { return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . java.util.Collections return { ) VAR_1 ] [ TYPE_1 ( METHOD_1 > TYPE_1 < java.util.List static private 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { TYPE_4 . METHOD_2 ( ) ; return new TYPE_1 ( ) ; } } ; ) ( TYPE_1 new return ; ) ( METHOD_2 . TYPE_4 { TYPE_3 , TYPE_2 throws ) ( METHOD_1 TYPE_1 public 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { return VAR_1 . METHOD_2 ( ( VAR_2 + ( VAR_3 ) ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ) VAR_3 ( + VAR_2 ( ( METHOD_2 . VAR_1 return { ) VAR_2 java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public java.util.List < TYPE_1 > apply ( TYPE_2 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_1 ( ) ; for ( TYPE_4 VAR_3 : extensions ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; } return VAR_2 ; } } ; VAR_2 return } ; ) ) ( METHOD_3 . VAR_3 ( METHOD_2 . VAR_2 { ) extensions : VAR_3 TYPE_4 ( for ; ) ( METHOD_1 . TYPE_3 = VAR_2 > TYPE_1 < java.util.List { ) VAR_1 TYPE_2 ( apply > TYPE_1 < java.util.List public 
private java.util.Set < TYPE_1 > METHOD_1 ( ) { TYPE_2 p = VAR_1 ; if ( ! ( p . METHOD_2 ( ) ) ) { p = p . METHOD_3 ( ) ; VAR_1 = p ; } return VAR_2 ; METHOD_4 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_4 ; VAR_2 return } ; p = VAR_1 ; ) ( METHOD_3 . p = p { ) ) ) ( METHOD_2 . p ( ! ( if ; VAR_1 = p TYPE_2 { ) ( METHOD_1 > TYPE_1 < java.util.Set private 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id c ) { return STRING_1 + ( c . get ( ) ) ; } } ; ) ) ( get . c ( + STRING_1 return { ) c Id . TYPE_1 final ( METHOD_1 java.lang.String static public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_1 ) , id . name ( ) ) ) ; } } ; ) ) ) ( name . id , ) VAR_1 ( schema . TYPE_1 ( commit . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) id org.eclipse.jgit.lib.ObjectId ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
public void METHOD_1 ( ) { install ( VAR_1 . METHOD_2 ( VAR_2 class ) ) ; install ( new TYPE_1 ( ) ) ; install ( new TYPE_2 ( ) ) ; bind ( VAR_3 class ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . TYPE_3 ( METHOD_3 . ) class VAR_3 ( bind ; ) ) ( TYPE_2 new ( install ; ) ) ( TYPE_1 new ( install ; ) ) class VAR_2 ( METHOD_2 . VAR_1 ( install { ) ( METHOD_1 void public 
PatchSet . Id METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 == ( VAR_2 ) ) & & ( ( base ) ! = null ) ? base : revision ; } } ; revision : base ? ) null = ! ) base ( ( & & ) ) VAR_2 ( == VAR_1 ( return { ) VAR_1 TYPE_1 ( METHOD_1 Id . PatchSet 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , new TYPE_1 ( STRING_2 , STRING_3 ) . METHOD_2 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_2 . ) STRING_3 , STRING_2 ( TYPE_1 new , STRING_1 ( org.junit.Assert.assertEquals { ) ( METHOD_1 void public 
TYPE_1 . Branch METHOD_1 ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) id Id . TYPE_2 ( METHOD_1 Branch . TYPE_1 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; bind ( VAR_2 class ) . to ( VAR_3 class ) ; METHOD_2 ( STRING_1 ) . METHOD_3 ( VAR_4 class ) ; METHOD_4 ( STRING_2 ) . METHOD_5 ( VAR_5 class ) ; } } ; ) class VAR_5 ( METHOD_5 . ) STRING_2 ( METHOD_4 ; ) class VAR_4 ( METHOD_3 . ) STRING_1 ( METHOD_2 ; ) class VAR_3 ( to . ) class VAR_2 ( bind ; ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
void METHOD_1 ( int line ) { VAR_1 . METHOD_1 ( line , VAR_2 . METHOD_2 ( line ) ) ; } } ; ) ) line ( METHOD_2 . VAR_2 , line ( METHOD_1 . VAR_1 { ) line int ( METHOD_1 void 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( change , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) true , change ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return VAR_1 . getChange ( ) . METHOD_2 ( ) ? VAR_2 : VAR_3 ; } } ; VAR_3 : VAR_2 ? ) ( METHOD_2 . ) ( getChange . VAR_1 return { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public int METHOD_1 ( ) { return ( VAR_1 ) * INT_1 ; } } ; INT_1 * ) VAR_1 ( return { ) ( METHOD_1 int public 
void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( true , true ) ; if ( VAR_1 ) { commit ( ) ; } } } } ; ) ( commit { ) VAR_1 ( if ; ) true , true ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 void 
public TYPE_1 . NameKey METHOD_1 ( ) { return new TYPE_1 . NameKey ( projectName ) ; } } ; ) projectName ( NameKey . TYPE_1 new return { ) ( METHOD_1 NameKey . TYPE_1 public 
public TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_1 result = VAR_1 . create ( changeId , VAR_2 ) . METHOD_1 ( ) ; result . METHOD_2 ( VAR_3 . create ( changeId ) . METHOD_1 ( ) ) ; return result ; } } ; result return ; ) ) ( METHOD_1 . ) changeId ( create . VAR_3 ( METHOD_2 . result ; ) ( METHOD_1 . ) VAR_2 , changeId ( create . VAR_1 = result TYPE_1 { java.lang.Exception throws ) ( METHOD_1 TYPE_1 public 
public boolean METHOD_1 ( java.lang.String project ) { return true ; } } ; true return { ) project java.lang.String ( METHOD_1 boolean public 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( true ) ; } } ; ) true ( METHOD_1 return { java.lang.Exception throws ) ( METHOD_1 ProjectConfig . TYPE_1 private 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > put ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } } ; ) ) STRING_1 , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( put > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > p , final java.util.List < TYPE_1 < java.lang.String > > VAR_2 ) { assertEquals ( ( VAR_1 + STRING_1 ) , VAR_2 , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , VAR_2 , ) STRING_1 + VAR_1 ( ( assertEquals { ) VAR_2 > > java.lang.String < TYPE_1 < java.util.List final , p > java.lang.String < TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void static private 
public void METHOD_1 ( ) { synchronized ( VAR_1 ) { if ( ( VAR_2 ) ! = null ) { VAR_2 . METHOD_2 ( ) ; } } } } } } ; ) ( METHOD_2 . VAR_2 { ) null = ! ) VAR_2 ( ( if { ) VAR_1 ( synchronized { ) ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( changeId ) ) ; } } ; ) ) changeId ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , null , true , VAR_2 ) ; } } ; ) VAR_2 , true , null , VAR_1 ( METHOD_2 return { java.lang.Exception throws ) VAR_2 Status . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 java.lang.String private 
java.lang.String METHOD_1 ( ) { return METHOD_2 ( ) ? key . token : null ; } } ; null : token . key ? ) ( METHOD_2 return { ) ( METHOD_1 java.lang.String 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( id ) ; return result ; } } ; result return ; ) id ( + ) result * VAR_1 ( = result ; 1 = result int ; INT_1 = VAR_1 int final { ) ( METHOD_1 int public 
public TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( db , VAR_1 , VAR_2 , VAR_3 , change ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) change , VAR_3 , VAR_2 , VAR_1 , db ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change , db com.google.gerrit.reviewdb.server.ReviewDb ( create TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . apply ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( apply . TYPE_1 , STRING_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public void run ( ) { VAR_1 . METHOD_1 ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) ; } } ; ) ) ) ) ( METHOD_2 . VAR_1 ( ! ( ( METHOD_1 . VAR_1 { ) ( run void public 
public final boolean METHOD_1 ( ) { switch ( getStatus ( ) ) { case VAR_1 : case VAR_2 : case VAR_3 : return true ; default : return false ; } } } } ; false return : default ; true return : VAR_3 case : VAR_2 case : VAR_1 case { ) ) ( getStatus ( switch { ) ( METHOD_1 boolean final public 
private TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in ) throws TYPE_2 { return VAR_1 . METHOD_1 ( in ) ; } } ; ) in ( METHOD_1 . VAR_1 return { TYPE_2 throws ) in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < TYPE_1 private 
private static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , e ) ; org.junit.Assert.assertEquals ( VAR_2 , e . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . e , VAR_2 ( org.junit.Assert.assertEquals ; ) e , VAR_1 ( METHOD_2 . TYPE_2 { ) e TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void static private 
public static TYPE_1 edit ( int id ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) ; } } ; ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) id int ( edit TYPE_1 static public 
public void METHOD_1 ( ) { final java.lang.String VAR_1 = STRING_1 ; final TYPE_1 p = new TYPE_1 ( VAR_1 ) ; assertEquals ( VAR_1 . METHOD_2 ( ) , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , ) ( METHOD_2 . VAR_1 ( assertEquals ; ) VAR_1 ( TYPE_1 new = p TYPE_1 final ; STRING_1 = VAR_1 java.lang.String final { ) ( METHOD_1 void public 
private void METHOD_1 ( java.lang.String msg , TYPE_1 ... args ) { if ( ( ( VAR_1 ) ! = null ) & & ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_3 ( ( ( VAR_1 ) + msg ) , args ) ; } } } } ; ) args , ) msg + ) VAR_1 ( ( ( METHOD_3 . VAR_2 { ) ) ) ( METHOD_2 . VAR_2 ( & & ) null = ! ) VAR_1 ( ( ( if { ) args ... TYPE_1 , msg java.lang.String ( METHOD_1 void private 
public final java.lang.String METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 java.lang.String final public 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , VAR_1 ) ; } } ; ) VAR_1 , changeId ( submit { java.lang.Exception throws ) changeId java.lang.String ( submit void protected 
public TYPE_1 . gwtorm [ ] METHOD_1 ( ) { return new TYPE_2 . Key < ? > [ ] { VAR_1 } ; } } ; } VAR_1 { ] [ > ? < Key . TYPE_2 new return { ) ( METHOD_1 ] [ gwtorm . TYPE_1 public 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( c . getStatus ( ) . METHOD_1 ( ) ) { if ( VAR_1 ) { c . METHOD_2 ( VAR_2 ) ; } TYPE_1 . METHOD_3 ( c ) ; } return c ; } } ; c return } ; ) c ( METHOD_3 . TYPE_1 } ; ) VAR_2 ( METHOD_2 . c { ) VAR_1 ( if { ) ) ( METHOD_1 . ) ( getStatus . c ( if { ) c com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_2 = new TYPE_1 ( ) ; VAR_1 = TYPE_2 . METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_2 ) ; } } } } ; ) VAR_2 , VAR_2 ( METHOD_3 ; ) ( METHOD_2 . TYPE_2 = VAR_1 ; ) ( TYPE_1 new = VAR_2 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; db = new TYPE_1 < TYPE_2 > ( VAR_1 class ) ; VAR_2 = new java.util.ArrayList < TYPE_2 > ( ) ; } } ; ) ( > TYPE_2 < java.util.ArrayList new = VAR_2 ; ) class VAR_1 ( > TYPE_2 < TYPE_1 new = db ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( changeId , VAR_1 ) ; } } ; ) VAR_1 , changeId ( METHOD_2 . TYPE_2 { ) e TYPE_1 ( METHOD_1 void 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( name ) ; } } ; ) name ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 > java.lang.String < TYPE_1 public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 . C ) ; bind ( VAR_3 class ) . to ( VAR_4 class ) ; } } ; ) class VAR_4 ( to . ) class VAR_3 ( bind ; ) C . VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected TYPE_1 . ReviewDb METHOD_1 ( ) throws TYPE_2 { try { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( TYPE_4 . OrmException e ) { throw new TYPE_2 ( 1 , STRING_1 ) ; } } } } ; ) STRING_1 , 1 ( TYPE_2 new throw { ) e OrmException . TYPE_4 ( catch } ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_3 return { try { TYPE_2 throws ) ( METHOD_1 ReviewDb . TYPE_1 protected 
public org.eclipse.jgit.lib.ObjectId METHOD_1 ( ) { return commit . METHOD_2 ( ) . getId ( ) ; } } ; ) ( getId . ) ( METHOD_2 . commit return { ) ( METHOD_1 org.eclipse.jgit.lib.ObjectId public 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 { ) event TYPE_1 final ( METHOD_1 void public 
public abstract java.lang.String METHOD_1 ( java.lang.String url ) ; ; ) url java.lang.String ( METHOD_1 java.lang.String abstract public 
public TYPE_1 < java.lang.String > apply ( TYPE_2 rsrc , TYPE_3 input ) throws TYPE_4 , com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_5 { return VAR_1 . METHOD_1 ( rsrc . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . rsrc ( METHOD_1 . VAR_1 return { TYPE_5 , java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_4 throws ) input TYPE_3 , rsrc TYPE_2 ( apply > java.lang.String < TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 . display ( METHOD_2 ( ) , METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 , ) ( METHOD_2 ( display . TYPE_1 { ) ( METHOD_1 void public 
public static boolean METHOD_1 ( java.lang.String id ) { return ( id ! = null ) & & ( id . equals ( TYPE_1 ) ) ; } } ; ) ) TYPE_1 ( equals . id ( & & ) null = ! id ( return { ) id java.lang.String ( METHOD_1 boolean static public 
public static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . edit ( id ) . METHOD_2 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_2 . ) id ( edit . TYPE_2 return { ) id int ( METHOD_1 TYPE_1 static public 
public static boolean METHOD_1 ( final TYPE_1 VAR_1 ) { if ( VAR_1 instanceof TYPE_2 ) { return true ; } return ( VAR_1 instanceof TYPE_3 ) & & ( VAR_1 . getMessage ( ) . METHOD_2 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( METHOD_2 . ) ( getMessage . VAR_1 ( & & ) TYPE_3 instanceof VAR_1 ( return } ; true return { ) TYPE_2 instanceof VAR_1 ( if { ) VAR_1 TYPE_1 final ( METHOD_1 boolean static public 
protected void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; db = TYPE_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . TYPE_1 = db ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 = VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public static TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 ... VAR_1 ) { return TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_3 ( METHOD_1 . TYPE_2 return { ) VAR_1 ... TYPE_2 ( METHOD_1 > java.lang.String < TYPE_1 static public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > delete ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , STRING_1 ) ) ; } } ; ) ) STRING_1 , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( delete > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( this , VAR_2 ) ; VAR_2 . METHOD_3 ( ) ; METHOD_3 ( ) ; cm . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . cm ; ) ( METHOD_3 ; ) ( METHOD_3 . VAR_2 ; ) VAR_2 , this ( METHOD_2 . VAR_1 { ) e TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 , null ) ; } } ; ) null , 0 , null , false , 0 , id ( TYPE_2 new = VAR_1 ; ) ) id + STRING_1 ( ( Key . TYPE_1 new = key { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
private final native TYPE_1 METHOD_1 ( int line ) ; ; ) line int ( METHOD_1 TYPE_1 native final private 
public void METHOD_1 ( ) { factory ( VAR_1 class ) ; factory ( VAR_2 class ) ; } } ; ) class VAR_2 ( factory ; ) class VAR_1 ( factory { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( int changeId ) { return TYPE_2 . change ( changeId ) . view ( STRING_1 ) ; } } ; ) STRING_1 ( view . ) changeId ( change . TYPE_2 return { ) changeId int ( METHOD_1 TYPE_1 static public 
private static int METHOD_1 ( java.lang.String [ ] VAR_1 , java.lang.String p ) { int r = TYPE_1 . METHOD_2 ( VAR_1 , p ) ; return r < 0 ? - ( r + 1 ) : r ; } } ; r : ) 1 + r ( - ? 0 < r return ; ) p , VAR_1 ( METHOD_2 . TYPE_1 = r int { ) p java.lang.String , VAR_1 ] [ java.lang.String ( METHOD_1 int static private 
public boolean apply ( TYPE_1 input ) { return ( input . change ) ! = null ; } } ; null = ! ) change . input ( return { ) input TYPE_1 ( apply boolean public 
private TYPE_1 query ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p , int VAR_1 ) throws TYPE_3 { return new TYPE_1 ( null , index , p , VAR_1 ) ; } } ; ) VAR_1 , p , index , null ( TYPE_1 new return { TYPE_3 throws ) VAR_1 int , p > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( query TYPE_1 private 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 , id ( METHOD_2 . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = result . METHOD_2 ( ref ) ; com.google.common.truth.Truth.assertThat ( message ( VAR_2 ) . METHOD_3 ( ) ) . METHOD_4 ( message ( VAR_2 ) ) . contains ( VAR_1 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_1 ( contains . ) ) VAR_2 ( message ( METHOD_4 . ) ) ( METHOD_3 . ) VAR_2 ( message ( com.google.common.truth.Truth.assertThat ; ) ref ( METHOD_2 . result = VAR_2 TYPE_1 { ) VAR_1 java.lang.String ( METHOD_1 void public 
TYPE_1 . AccountGroup METHOD_1 ( TYPE_2 . Id id ) throws TYPE_3 . OrmException ; ; OrmException . TYPE_3 throws ) id Id . TYPE_2 ( METHOD_1 AccountGroup . TYPE_1 
public static < TYPE_1 > com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > METHOD_1 ( ) { return new com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > ( VAR_1 . Collections < TYPE_2 < TYPE_3 < TYPE_1 > > > METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 > > > TYPE_1 < TYPE_3 < TYPE_2 < Collections . VAR_1 ( > TYPE_1 < com.google.gerrit.extensions.registration.DynamicSet new return { ) ( METHOD_1 > TYPE_1 < com.google.gerrit.extensions.registration.DynamicSet > TYPE_1 < static public 
private TYPE_1 file ( java.lang.String path ) { return new TYPE_1 ( TYPE_2 . METHOD_1 ( ) . METHOD_2 ( view ) . METHOD_3 ( path ) . METHOD_4 ( ) , config ) ; } } ; ) config , ) ( METHOD_4 . ) path ( METHOD_3 . ) view ( METHOD_2 . ) ( METHOD_1 . TYPE_2 ( TYPE_1 new return { ) path java.lang.String ( file TYPE_1 private 
public TYPE_1 get ( TYPE_2 key ) throws TYPE_3 ; ; TYPE_3 throws ) key TYPE_2 ( get TYPE_1 public 
public boolean METHOD_1 ( final java.lang.String VAR_1 ) throws java.io.IOException { return METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public TYPE_2 METHOD_3 ( ) throws java.lang.Exception { return client ( ) . METHOD_4 ( VAR_1 ) ; } } ) ; } } ; ) } } ; ) VAR_1 ( METHOD_4 . ) ( client return { java.lang.Exception throws ) ( METHOD_3 TYPE_2 public { ) ( > TYPE_2 < TYPE_1 new ( METHOD_2 return { java.io.IOException throws ) VAR_1 java.lang.String final ( METHOD_1 boolean public 
public boolean METHOD_1 ( ) { return true ; } } ; true return { ) ( METHOD_1 boolean public 
private void METHOD_1 ( TYPE_1 . Change c , TYPE_2 msg ) { METHOD_2 ( c , msg , true ) ; } } ; ) true , msg , c ( METHOD_2 { ) msg TYPE_2 , c Change . TYPE_1 ( METHOD_1 void private 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String type ) { return TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_1 , type , VAR_3 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . VAR_3 , type , VAR_1 , ) ( METHOD_3 . VAR_2 ( METHOD_2 . TYPE_1 return { ) type java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String protected 
public boolean METHOD_1 ( ) { return METHOD_2 ( new TYPE_1 < com.google.gerrit.reviewdb.client.Project , TYPE_2 > ( ) { public TYPE_2 apply ( com.google.gerrit.reviewdb.client.Project input ) { return input . METHOD_3 ( ) ; } } ) ; } } ; ) } } ; ) ( METHOD_3 . input return { ) input com.google.gerrit.reviewdb.client.Project ( apply TYPE_2 public { ) ( > TYPE_2 , com.google.gerrit.reviewdb.client.Project < TYPE_1 new ( METHOD_2 return { ) ( METHOD_1 boolean public 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { METHOD_1 ( result ) ; METHOD_2 ( result ) ; VAR_1 . METHOD_3 ( true ) ; } } ; ) true ( METHOD_3 . VAR_1 ; ) result ( METHOD_2 ; ) result ( METHOD_1 { ) result > > TYPE_3 < TYPE_2 < TYPE_1 ( onSuccess void public 
public boolean METHOD_1 ( ) { return false ; } } ; false return { ) ( METHOD_1 boolean public 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info ) ; METHOD_3 ( info ) ; METHOD_4 ( info , base ) ; } } ; ) base , info ( METHOD_4 ; ) info ( METHOD_3 ; ) info ( METHOD_2 ; ) ( METHOD_1 . info { ) info ChangeInfo . TYPE_1 ( onSuccess void public 
synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 ) { TYPE_1 ctx = new TYPE_1 ( this , VAR_1 , VAR_2 ) ; VAR_3 . add ( VAR_4 ) ; return ctx ; } } ; ctx return ; ) VAR_4 ( add . VAR_3 ; ) VAR_2 , VAR_1 , this ( TYPE_1 new = ctx TYPE_1 { ) VAR_2 java.lang.String , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 synchronized 
static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String ref = VAR_1 . getName ( ) ; if ( TYPE_2 . METHOD_2 ( ref ) ) { return TYPE_1 . METHOD_1 ( ref , VAR_1 ) ; } else { return null ; } } } } ; null return { else } ; ) VAR_1 , ref ( METHOD_1 . TYPE_1 return { ) ) ref ( METHOD_2 . TYPE_2 ( if ; ) ( getName . VAR_1 = ref java.lang.String { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 static 
private native < TYPE_1 > void METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > r , TYPE_2 VAR_1 ) ; ; ) VAR_1 TYPE_2 , r > TYPE_1 , java.lang.String < java.util.Map ( METHOD_1 void > TYPE_1 < native private 
public void METHOD_1 ( TYPE_1 a , TYPE_2 < TYPE_3 . PatchSet > ps ) { METHOD_1 ( a , ps , null ) ; } } ; ) null , ps , a ( METHOD_1 { ) ps > PatchSet . TYPE_3 < TYPE_2 , a TYPE_1 ( METHOD_1 void public 
public TYPE_1 notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = VAR_1 . create ( change ( ) ) ; } return notes ; } } ; notes return } ; ) ) ( change ( create . VAR_1 = notes { ) null == ) notes ( ( if { com.google.gwtorm.server.OrmException throws ) ( notes TYPE_1 public 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_2 ( base , TYPE_3 . patchSet ( id . getParentKey ( ) ) , id . get ( ) , VAR_1 , line ) ) ; } } ; ) ) line , VAR_1 , ) ( get . id , ) ) ( getParentKey . id ( patchSet . TYPE_3 , base ( TYPE_2 new , token ( display . TYPE_1 { ) ( onSuccess void public 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , STRING_3 ) . METHOD_3 ( STRING_4 ) . METHOD_3 ( STRING_5 ) . get ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_4 . TYPE_4 ( get . ) STRING_5 ( METHOD_3 . ) STRING_4 ( METHOD_3 . ) STRING_3 , STRING_2 ( METHOD_2 . ) STRING_1 ( TYPE_3 new { ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 void static public 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.io.IOException { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( repo ) ; VAR_2 = new TYPE_2 ( null , null , null ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 . VAR_2 ; ) null , null , null ( TYPE_2 new = VAR_2 ; ) repo ( TYPE_1 new = VAR_1 ; ) ( METHOD_1 . super { java.io.IOException throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 . patch ( METHOD_2 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; } } ; ) VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 , ) ( METHOD_2 ( patch . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . Change change = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( VAR_2 , VAR_3 ) ) ; METHOD_7 ( change ) ; } } ; ) change ( METHOD_7 ; ) ) VAR_3 , VAR_2 ( METHOD_6 ( METHOD_5 ; ) ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 = change Change . TYPE_2 ; ) VAR_1 ( METHOD_1 . super { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_2 ( ) ) ; org.junit.Assert.assertEquals ( TYPE_1 . of ( ) , METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 , ) ( of . TYPE_1 ( org.junit.Assert.assertEquals ; ) ) ( METHOD_2 , ) ( of . TYPE_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return VAR_2 ; } } ; VAR_2 return { ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String public 
public static void METHOD_1 ( TYPE_1 group , TYPE_2 < TYPE_3 > VAR_1 ) { new TYPE_4 ( STRING_1 ) . id ( group . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_2 ( view . ) ) ( get . group ( id . ) STRING_1 ( TYPE_4 new { ) VAR_1 > TYPE_3 < TYPE_2 , group TYPE_1 ( METHOD_1 void static public 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 < TYPE_3 . ReceiveCommand > commands ) { METHOD_2 ( commands ) ; METHOD_3 ( rp ) ; METHOD_4 ( rp . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . rp ( METHOD_4 ; ) rp ( METHOD_3 ; ) commands ( METHOD_2 { ) commands > ReceiveCommand . TYPE_3 < TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws TYPE_2 { return VAR_1 . get ( ) . changes ( ) . id ( patchSet . getId ( ) . getParentKey ( ) . get ( ) ) ; } } ; ) ) ( get . ) ( getParentKey . ) ( getId . patchSet ( id . ) ( changes . ) ( get . VAR_1 return { TYPE_2 throws ) patchSet com.google.gerrit.reviewdb.client.PatchSet ( METHOD_1 TYPE_1 private 
java.lang.String ps ( ) ; ; ) ( ps java.lang.String 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_3 . PatchSet > ps , java.util.Map < TYPE_4 . Id , TYPE_2 < TYPE_3 . PatchSetApproval > > approvals ) { METHOD_1 ( VAR_1 , ps , approvals , false , null ) ; } } ; ) null , false , approvals , ps , VAR_1 ( METHOD_1 { ) approvals > > PatchSetApproval . TYPE_3 < TYPE_2 , Id . TYPE_4 < java.util.Map , ps > PatchSet . TYPE_3 < TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( final TYPE_2 . Account account ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . name = account . METHOD_2 ( ) ; VAR_1 . email = account . METHOD_3 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_3 . account = email . VAR_1 ; ) ( METHOD_2 . account = name . VAR_1 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) account Account . TYPE_2 final ( METHOD_1 TYPE_1 public 
public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { c . METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( c ) ; return c ; } } ; c return ; ) c ( METHOD_2 . TYPE_1 ; ) VAR_1 ( METHOD_1 . c { ) c com.google.gerrit.reviewdb.client.Change ( update com.google.gerrit.reviewdb.client.Change public 
public void METHOD_1 ( TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 ) { this . VAR_1 = VAR_1 ; } } ; VAR_1 = VAR_1 . this { ) VAR_1 > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . close ( ) ; VAR_3 . close ( ) ; } } ; ) ( close . VAR_3 ; ) ( close . VAR_2 ; ) ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , null , null ) ; } } ; ) null , null , ) ( TYPE_1 new , changeId ( submit { java.lang.Exception throws ) changeId java.lang.String ( submit void protected 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { return VAR_1 . create ( user . METHOD_2 ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( METHOD_2 . user ( create . VAR_1 return { ) user TYPE_2 ( METHOD_1 TYPE_1 public 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.lang.String changeId ) throws java.lang.Exception { return VAR_1 . changes ( ) . id ( changeId ) . get ( TYPE_2 . of ( VAR_2 ) ) . VAR_3 ; } } ; VAR_3 . ) ) VAR_2 ( of . TYPE_2 ( get . ) changeId ( id . ) ( changes . VAR_1 return { java.lang.Exception throws ) changeId java.lang.String ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map private 
TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ; ; ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 > TYPE_2 < TYPE_1 
TYPE_1 METHOD_1 ( ) { return ( ) - > { VAR_1 . METHOD_2 ( ( ! ( VAR_1 . getValue ( ) ) ) , true ) ; } ; } } ; } ; ) true , ) ) ) ( getValue . VAR_1 ( ! ( ( METHOD_2 . VAR_1 { > - ) ( return { ) ( METHOD_1 TYPE_1 
private void METHOD_1 ( int VAR_1 , java.lang.String ... VAR_2 ) throws java.lang.Exception { TYPE_1 d = METHOD_2 ( VAR_1 ) ; com.google.common.truth.Truth.assertThat ( log ( d ) ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) VAR_2 ( METHOD_4 . TYPE_2 ( METHOD_3 . ) ) d ( log ( com.google.common.truth.Truth.assertThat ; ) VAR_1 ( METHOD_2 = d TYPE_1 { java.lang.Exception throws ) VAR_2 ... java.lang.String , VAR_1 int ( METHOD_1 void private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( true ) ; new TYPE_2 ( VAR_1 . getMessage ( ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ( getMessage . VAR_1 ( TYPE_2 new ; ) true ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( final TYPE_1 result ) { METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( false ) ; VAR_2 . METHOD_3 ( false ) ; VAR_3 . METHOD_3 ( false ) ; display ( result ) ; } } ; ) result ( display ; ) false ( METHOD_3 . VAR_3 ; ) false ( METHOD_3 . VAR_2 ; ) false ( METHOD_3 . VAR_1 ; ) true ( METHOD_2 { ) result TYPE_1 final ( METHOD_1 void protected 
protected void METHOD_1 ( ) { com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_1 class ) ; com.google.gerrit.extensions.registration.DynamicSet.setOf ( binder ( ) , VAR_2 class ) ; factory ( VAR_3 . Factory class ) ; install ( new TYPE_1 ( ) ) ; } } ; ) ) ( TYPE_1 new ( install ; ) class Factory . VAR_3 ( factory ; ) class VAR_2 , ) ( binder ( com.google.gerrit.extensions.registration.DynamicSet.setOf ; ) class VAR_1 , ) ( binder ( com.google.gerrit.extensions.registration.DynamicSet.setOf { ) ( METHOD_1 void protected 
private static void METHOD_1 ( ) { for ( java.lang.String s : new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 , STRING_8 } ) { TYPE_1 . METHOD_2 ( STRING_9 , s ) ; } } } } ; ) s , STRING_9 ( METHOD_2 . TYPE_1 { ) } STRING_8 , STRING_7 , STRING_6 , STRING_5 , STRING_4 , STRING_3 , STRING_2 , STRING_1 { ] [ java.lang.String new : s java.lang.String ( for { ) ( METHOD_1 void static private 
private void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_1 ( ) ; } else { TYPE_1 . METHOD_3 ( METHOD_4 ( ) ) ; } } } } ; ) ) ( METHOD_4 ( METHOD_3 . TYPE_1 { else } ; ) ( METHOD_1 . VAR_1 { ) ) ( METHOD_2 . TYPE_1 ( if { ) ( METHOD_1 void private 
public void display ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { display ( null , null , null , false , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , false , null , null , null ( display { ) VAR_2 TYPE_1 , VAR_1 java.lang.String ( display void public 
public TYPE_1 create ( final TYPE_2 VAR_1 , final java.lang.String ref ) { return new TYPE_1 ( VAR_2 , VAR_1 , ref ) ; } } ; ) ref , VAR_1 , VAR_2 ( TYPE_1 new return { ) ref java.lang.String final , VAR_1 TYPE_2 final ( create TYPE_1 public 
public void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_1 ( METHOD_2 ( VAR_1 ) , VAR_2 ) ; log ( VAR_1 ) ; } } ; ) VAR_1 ( log ; ) VAR_2 , ) VAR_1 ( METHOD_2 ( METHOD_1 . VAR_3 { ) VAR_2 java.lang.String , VAR_1 int ( METHOD_1 void public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id , TYPE_1 VAR_1 ) ; ; ) VAR_1 TYPE_1 , id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { if ( VAR_1 . METHOD_1 ( ) ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( psId . getParentKey ( ) , java.lang.String . METHOD_3 ( psId . get ( ) ) ) ) ; } } } } ; ) ) ) ) ( get . psId ( METHOD_3 . java.lang.String , ) ( getParentKey . psId ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) ) ( METHOD_1 . VAR_1 ( if { ) result TYPE_1 ( onSuccess void public 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) ; } } ; ) class VAR_1 ( to . ) STRING_1 ( METHOD_2 { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { for ( char c : TYPE_1 . METHOD_2 ( ) ) { METHOD_3 ( ( STRING_1 + c ) , TYPE_2 . METHOD_4 ( c ) ) ; } } } } ; ) ) c ( METHOD_4 . TYPE_2 , ) c + STRING_1 ( ( METHOD_3 { ) ) ( METHOD_2 . TYPE_1 : c char ( for { ) ( METHOD_1 void public 
public int METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { return ( line ) - ( VAR_1 . line ) ; } else { throw new TYPE_2 ( STRING_1 ) ; } } } } ; ) STRING_1 ( TYPE_2 new throw { else } ; ) line . VAR_1 ( - ) line ( return { ) ) VAR_3 ( == ) VAR_2 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 int public 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) VAR_1 ( METHOD_1 . super { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public TYPE_1 apply ( final TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 , TYPE_5 , java.lang.Exception { return TYPE_6 . METHOD_1 ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 ( METHOD_1 . TYPE_6 return { java.lang.Exception , TYPE_5 , TYPE_4 , TYPE_3 throws ) VAR_1 TYPE_2 final ( apply TYPE_1 public 
public TYPE_1 METHOD_1 ( TYPE_1 t ) { throw new TYPE_2 ( STRING_1 , this ) ; } } ; ) this , STRING_1 ( TYPE_2 new throw { ) t TYPE_1 ( METHOD_1 TYPE_1 public 
abstract TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 abstract 
private java.lang.String METHOD_1 ( ) { final java.lang.String user = VAR_1 . METHOD_2 ( VAR_2 , null , VAR_3 ) ; return user ; } } ; user return ; ) VAR_3 , null , VAR_2 ( METHOD_2 . VAR_1 = user java.lang.String final { ) ( METHOD_1 java.lang.String private 
protected TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( null , VAR_1 , VAR_2 , VAR_3 , c ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) c , VAR_3 , VAR_2 , VAR_1 , null ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 protected 
private TYPE_1 METHOD_1 ( final TYPE_2 key ) throws TYPE_3 { return VAR_1 . get ( key ) ; } } ; ) key ( get . VAR_1 return { TYPE_3 throws ) key TYPE_2 final ( METHOD_1 TYPE_1 private 
public java.lang.String METHOD_1 ( ) { return branch . getName ( ) ; } } ; ) ( getName . branch return { ) ( METHOD_1 java.lang.String public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > type , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( type , VAR_1 , name ) ) ; } } ; ) ) name , VAR_1 , type ( view ( > TYPE_1 < TYPE_3 new return { ) name java.lang.String , type > > TYPE_1 < TYPE_5 < TYPE_4 ( METHOD_1 > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
protected void METHOD_1 ( final TYPE_1 r ) { if ( ( VAR_1 ) ! = null ) { METHOD_2 ( r . METHOD_3 ( ) ) ; } display ( r ) ; } } ; ) r ( display } ; ) ) ( METHOD_3 . r ( METHOD_2 { ) null = ! ) VAR_1 ( ( if { ) r TYPE_1 final ( METHOD_1 void protected 
public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; } } ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; METHOD_3 ( 1 , VAR_4 ) ; } } ; ) VAR_4 , 1 ( METHOD_3 ; ) VAR_3 , VAR_2 , VAR_1 ( METHOD_2 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 event ) { cm . METHOD_2 ( TYPE_2 . create ( line ) ) ; cm . METHOD_3 ( TYPE_3 . METHOD_4 ( 0 , ( VAR_1 - ( FLOAT_1 * VAR_2 ) ) ) ) ; cm . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . cm ; ) ) ) ) VAR_2 * FLOAT_1 ( - VAR_1 ( , 0 ( METHOD_4 . TYPE_3 ( METHOD_3 . cm ; ) ) line ( create . TYPE_2 ( METHOD_2 . cm { ) event TYPE_1 ( METHOD_1 void public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( TYPE_2 . topic ( topic ) , TYPE_3 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . TYPE_3 , ) topic ( topic . TYPE_2 ( METHOD_2 . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) topic java.lang.String ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( true ) . METHOD_5 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_6 ( ) ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) VAR_2 ( METHOD_4 . ) ) ( METHOD_6 . VAR_1 ( METHOD_2 . TYPE_1 ; ) ( METHOD_5 . ) true ( METHOD_4 . ) ) ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void private 
public TYPE_1 create ( TYPE_2 < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , null , db , id ) ; } } ; ) id , db , null , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id , db > com.google.gerrit.reviewdb.server.ReviewDb < TYPE_2 ( create TYPE_1 public 
private void METHOD_1 ( TYPE_1 event ) { for ( TYPE_2 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( event ) ; } } } } ; ) event ( METHOD_2 . VAR_1 { ) VAR_2 : VAR_1 TYPE_2 ( for { ) event TYPE_1 ( METHOD_1 void private 
public void index ( ) throws TYPE_1 { try { index . apply ( change , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_1 new throw { ) e java.io.IOException ( catch } ; ) ) ( TYPE_2 new , change ( apply . index { try { TYPE_1 throws ) ( index void public 
public static TYPE_1 diff ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path ) { return new TYPE_1 ( TYPE_2 . revision ( id ) . view ( STRING_1 ) . id ( path ) . view ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( view . ) path ( id . ) STRING_1 ( view . ) id ( revision . TYPE_2 ( TYPE_1 new return { ) path java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( diff TYPE_1 static public 
public boolean METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( cd . change ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) < = ( VAR_1 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_1 ( = < ) ) ( METHOD_3 . ) ( METHOD_2 . ) ( change . cd ( return { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 boolean public 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , getId ( ) ) ; } } ; ) ) ( getId , VAR_1 ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ! ( VAR_1 . isEmpty ( ) ) ) ) { branch = VAR_1 ; } } } } ; VAR_1 = branch { ) ) ) ) ( isEmpty . VAR_1 ( ! ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { this . VAR_1 = VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , VAR_2 ( METHOD_2 . VAR_1 = VAR_1 . this { ) VAR_1 java.lang.String final ( METHOD_1 TYPE_1 public 
public TYPE_1 < TYPE_2 , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return VAR_1 . METHOD_1 ( notes ( ) , approvals ( ) ) ; } } ; ) ) ( approvals , ) ( notes ( METHOD_1 . VAR_1 return { com.google.gwtorm.server.OrmException throws ) ( reviewers > com.google.gerrit.reviewdb.client.Account.Id , TYPE_2 < TYPE_1 public 
public TYPE_1 METHOD_1 ( TYPE_2 . AccountGroup group ) { return METHOD_1 ( TYPE_1 . METHOD_2 ( group ) ) ; } } ; ) ) group ( METHOD_2 . TYPE_1 ( METHOD_1 return { ) group AccountGroup . TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId ) { this . changeId = changeId ; } } ; changeId = changeId . this { ) changeId Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
protected void METHOD_1 ( java.lang.String changeId , java.lang.String VAR_1 ) throws java.lang.Exception { submit ( changeId , new TYPE_1 ( ) , VAR_2 class , VAR_1 ) ; } } ; ) VAR_1 , class VAR_2 , ) ( TYPE_1 new , changeId ( submit { java.lang.Exception throws ) VAR_1 java.lang.String , changeId java.lang.String ( METHOD_1 void protected 
private java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { TYPE_5 VAR_2 = VAR_1 . METHOD_2 ( ) ; try { return VAR_2 . METHOD_3 ( ) ; } finally { VAR_2 . close ( ) ; } } } } ; ) ( close . VAR_2 { finally } ; ) ( METHOD_3 . VAR_2 return { try ; ) ( METHOD_2 . VAR_1 = VAR_2 TYPE_5 { TYPE_4 , TYPE_3 throws ) VAR_1 TYPE_2 ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map private 
private void log ( final int VAR_1 ) { synchronized ( this ) { if ( ! ( VAR_2 ) ) { VAR_3 = TYPE_1 . METHOD_1 ( ) ; log . METHOD_2 ( ctx , VAR_4 , VAR_1 ) ; VAR_2 = true ; } } } } } } ; true = VAR_2 ; ) VAR_1 , VAR_4 , ctx ( METHOD_2 . log ; ) ( METHOD_1 . TYPE_1 = VAR_3 { ) ) VAR_2 ( ! ( if { ) this ( synchronized { ) VAR_1 int final ( log void private 
protected TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.Repository repo ) throws java.io.IOException { return TYPE_1 . create ( TYPE_2 . METHOD_2 ( repo ) , METHOD_3 ( repo ) ) ; } } ; ) ) repo ( METHOD_3 , ) repo ( METHOD_2 . TYPE_2 ( create . TYPE_1 return { java.io.IOException throws ) repo org.eclipse.jgit.lib.Repository ( METHOD_1 TYPE_1 protected 
char METHOD_1 ( int VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 return { ) VAR_1 int ( METHOD_1 char 
TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId VAR_1 , org.eclipse.jgit.lib.ObjectId VAR_2 ) ; ; ) VAR_2 org.eclipse.jgit.lib.ObjectId , VAR_1 org.eclipse.jgit.lib.ObjectId , repo org.eclipse.jgit.lib.Repository , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 TYPE_1 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account.Id id ) throws TYPE_2 { return VAR_1 . METHOD_2 ( change , VAR_2 . create ( id ) ) ; } } ; ) ) id ( create . VAR_2 , change ( METHOD_2 . VAR_1 return { TYPE_2 throws ) id com.google.gerrit.reviewdb.client.Account.Id , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change ) ; } } ; ) change , ) ) ( METHOD_3 . change ( METHOD_2 ( create . VAR_1 return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
public com.google.gerrit.reviewdb.client . PatchSetApproval apply ( com.google.gerrit.reviewdb.client . PatchSetApproval in ) { if ( in . METHOD_1 ( ) . equals ( psId ) ) { return in ; } else { return new com.google.gerrit.reviewdb.client . PatchSetApproval ( psId , in ) ; } } } } ; ) in , psId ( PatchSetApproval . com.google.gerrit.reviewdb.client new return { else } ; in return { ) ) psId ( equals . ) ( METHOD_1 . in ( if { ) in PatchSetApproval . com.google.gerrit.reviewdb.client ( apply PatchSetApproval . com.google.gerrit.reviewdb.client public 
void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void 
public static void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } TYPE_1 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . TYPE_1 } ; null = VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { java.lang.Exception throws ) ( METHOD_1 void static public 
public boolean METHOD_1 ( ) { } } { ) ( METHOD_1 boolean public 
public final boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) & & ( ( METHOD_3 ( ) ) == ( VAR_1 ) ) ) { return false ; } return true ; } } ; true return } ; false return { ) ) ) VAR_1 ( == ) ) ( METHOD_3 ( ( & & ) ) ( METHOD_2 ( ( if { ) ( METHOD_1 boolean final public 
void METHOD_1 ( TYPE_1 e ) { TYPE_2 . METHOD_2 ( VAR_1 , changeId , revision , project , VAR_2 ) ; } } ; ) VAR_2 , project , revision , changeId , VAR_1 ( METHOD_2 . TYPE_2 { ) e TYPE_1 ( METHOD_1 void 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , java.lang.String topic ) throws java.lang.Exception { return METHOD_2 ( repo , null , null , null , null , topic ) ; } } ; ) topic , null , null , null , null , repo ( METHOD_2 return { java.lang.Exception throws ) topic java.lang.String , repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
public int run ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = TYPE_1 . METHOD_1 ( false ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . close ( ) ; VAR_2 . METHOD_4 ( STRING_1 ) ; return 0 ; } } ; 0 return ; ) STRING_1 ( METHOD_4 . VAR_2 ; ) ( close . ) ( METHOD_3 . ) ( METHOD_2 . VAR_1 ; ) false ( METHOD_1 . TYPE_1 = VAR_1 TYPE_1 final { java.lang.Exception throws ) ( run int public 
private static PatchSet . Id METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id , java.lang.String VAR_1 ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , ( VAR_1 . equals ( STRING_1 ) ? 0 : TYPE_1 . METHOD_2 ( VAR_1 ) ) ) ; } } ; ) ) ) VAR_1 ( METHOD_2 . TYPE_1 : 0 ? ) STRING_1 ( equals . VAR_1 ( , id ( com.google.gerrit.reviewdb.client.PatchSet.Id new return { ) VAR_1 java.lang.String , id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 Id . PatchSet static private 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , char VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) > = 0 ) { VAR_1 = VAR_1 . METHOD_3 ( 0 , VAR_1 . METHOD_2 ( VAR_2 ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) VAR_2 ( METHOD_2 . VAR_1 , 0 ( METHOD_3 . VAR_1 = VAR_1 { ) 0 = > ) ) VAR_2 ( METHOD_2 . VAR_1 ( ( if { ) VAR_2 char , VAR_1 java.lang.String ( METHOD_1 java.lang.String private 
private java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 . Id VAR_1 ) { return METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_1 ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( METHOD_1 . ) ( METHOD_3 . VAR_2 ( METHOD_2 return { ) VAR_1 Id . TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List private 
private static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_1 ( VAR_1 . getName ( ) ) ; } } ; ) ) ( getName . VAR_1 ( METHOD_1 . TYPE_2 return { ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String static private 
public com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > get ( ) { return new com.google.gerrit.extensions.registration.DynamicSet < TYPE_1 > ( TYPE_2 . METHOD_1 ( VAR_1 , type ) ) ; } } ; ) ) type , VAR_1 ( METHOD_1 . TYPE_2 ( > TYPE_1 < com.google.gerrit.extensions.registration.DynamicSet new return { ) ( get > TYPE_1 < com.google.gerrit.extensions.registration.DynamicSet public 
public static java.lang.String METHOD_1 ( final TYPE_1 . Id id ) { return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; } } ; ) id , STRING_1 ( METHOD_2 . TYPE_2 return { ) id Id . TYPE_1 final ( METHOD_1 java.lang.String static public 
public static void METHOD_1 ( final TYPE_1 . Change c ) { c . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( c ) ; } } ; ) c ( METHOD_3 . TYPE_2 ; ) ( METHOD_2 . c { ) c Change . TYPE_1 final ( METHOD_1 void static public 
protected void add ( final TYPE_1 VAR_1 , final TYPE_2 . Id to ) { if ( ( ! ( VAR_2 ) ) || ( VAR_3 . contains ( to ) ) ) { super . add ( VAR_1 , to ) ; } } } } ; ) to , VAR_1 ( add . super { ) ) ) to ( contains . VAR_3 ( || ) ) VAR_2 ( ! ( ( if { ) to Id . TYPE_2 final , VAR_1 TYPE_1 final ( add void protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( false ) ) ; } } ; ) ) false ( TYPE_1 new ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , VAR_2 . get ( STRING_1 ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) STRING_1 ( get . VAR_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . repo ( org.eclipse.jgit.revwalk.RevWalk new = walk ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 . Id VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) ; ; ) VAR_2 > TYPE_3 < TYPE_2 , VAR_1 Id . TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 event ) { if ( event instanceof TYPE_2 ) { VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( event ) ) ) ; } } } } ; ) ) ) event ( ) TYPE_2 ( ( ( METHOD_2 . VAR_1 { ) TYPE_2 instanceof event ( if { ) event TYPE_1 ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Id VAR_2 , TYPE_2 . NameKey VAR_3 ) throws java.io.IOException ; ; java.io.IOException throws ) VAR_3 NameKey . TYPE_2 , VAR_2 Id . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { return ! ( METHOD_2 ( VAR_1 , true ) ) ; } } ; ) ) true , VAR_1 ( METHOD_2 ( ! return { ) VAR_1 java.lang.String ( METHOD_1 boolean public 
public synchronized void METHOD_1 ( ) { VAR_1 . info ( ( STRING_1 + ( VAR_2 . METHOD_2 ( ) ) ) ) ; METHOD_3 ( ) ; VAR_3 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_3 ; ) ( METHOD_3 ; ) ) ) ) ( METHOD_2 . VAR_2 ( + STRING_1 ( ( info . VAR_1 { ) ( METHOD_1 void synchronized public 
public void delete ( int id ) throws java.io.IOException { } } { java.io.IOException throws ) id int ( delete void public 
protected void METHOD_1 ( final int VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . run ( ) ; } } ; ) ( run . VAR_3 ; ) VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 int final ( METHOD_1 void protected 
private static final native void METHOD_1 ( java.lang.String d , java.lang.String e , java.lang.String t , java.lang.String r , java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String , r java.lang.String , t java.lang.String , e java.lang.String , d java.lang.String ( METHOD_1 void native final static private 
public static java.lang.String METHOD_1 ( final TYPE_1 . Key id ) { return TYPE_2 . METHOD_2 ( STRING_1 , id ) ; } } ; ) id , STRING_1 ( METHOD_2 . TYPE_2 return { ) id Key . TYPE_1 final ( METHOD_1 java.lang.String static public 
public TYPE_1 < TYPE_2 . ChangeInfo > METHOD_1 ( ) { if ( ( info ) == null ) { info = new TYPE_1 < TYPE_2 . ChangeInfo > ( ) ; } return info ; } } ; info return } ; ) ( > ChangeInfo . TYPE_2 < TYPE_1 new = info { ) null == ) info ( ( if { ) ( METHOD_1 > ChangeInfo . TYPE_2 < TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( ( name + STRING_2 ) ) . get ( ) . name ) ; } } ; ) name . ) ( get . ) ) STRING_2 + name ( ( create . ) ( projects . VAR_1 ( isEqualTo . ) name ( com.google.common.truth.Truth.assertThat ; STRING_1 = name java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , null , 0 ) ; } } ; ) 0 , null , VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_2 . TYPE_1 return { ) VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 , TYPE_1 VAR_3 , int line ) { return TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; } } ; ) line , VAR_3 , VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_2 . TYPE_2 return { ) line int , VAR_3 TYPE_1 , VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 java.lang.String static public 
java.lang.String METHOD_1 ( int id ) ; ; ) id int ( METHOD_1 java.lang.String 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) throws TYPE_3 . OrmException { for ( TYPE_2 VAR_2 : VAR_1 ) { METHOD_2 ( VAR_2 ) ; } } } } ; ) VAR_2 ( METHOD_2 { ) VAR_1 : VAR_2 TYPE_2 ( for { OrmException . TYPE_3 throws ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 void public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { METHOD_2 ( ) ; return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return ; ) ( METHOD_2 { TYPE_3 throws ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; index = new TYPE_1 ( VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( index ) ; VAR_3 = new TYPE_3 ( VAR_2 ) ; } } ; ) VAR_2 ( TYPE_3 new = VAR_3 ; ) index ( METHOD_2 . VAR_2 ; ) ( TYPE_2 new = VAR_2 TYPE_2 ; ) VAR_1 ( TYPE_1 new = index ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { assertEquals ( TYPE_1 . METHOD_2 ( STRING_1 ) , STRING_2 ) ; } } ; ) STRING_2 , ) STRING_1 ( METHOD_2 . TYPE_1 ( assertEquals { ) ( METHOD_1 void public 
private void METHOD_1 ( final int VAR_1 , final java.lang.String VAR_2 ) { METHOD_2 ( 0 , VAR_1 , VAR_2 ) ; METHOD_3 ( 0 , VAR_1 , STRING_1 ) ; } } ; ) STRING_1 , VAR_1 , 0 ( METHOD_3 ; ) VAR_2 , VAR_1 , 0 ( METHOD_2 { ) VAR_2 java.lang.String final , VAR_1 int final ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . get ( ) . apply ( revision ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException | com.google.gwtorm.server.OrmException ( catch } ; ) revision ( apply . ) ( get . VAR_1 return { try { TYPE_2 throws ) ( METHOD_1 TYPE_1 public 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { return java.util.Collections . METHOD_2 ( VAR_1 ) ; } else { return java.util.Collections . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . java.util.Collections return { else } ; ) VAR_1 ( METHOD_2 . java.util.Collections return { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 > TYPE_1 < java.util.List public 
private java.lang.String METHOD_1 ( short value ) { if ( value > 0 ) { return STRING_1 + value ; } else { return TYPE_1 . toString ( value ) ; } } } } ; ) value ( toString . TYPE_1 return { else } ; value + STRING_1 return { ) 0 > value ( if { ) value short ( METHOD_1 java.lang.String private 
protected < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > core ( final TYPE_4 < TYPE_5 < TYPE_1 , TYPE_2 > > type ) { return core ( TYPE_6 . get ( type ) ) ; } } ; ) ) type ( get . TYPE_6 ( core return { ) type > > TYPE_2 , TYPE_1 < TYPE_5 < TYPE_4 final ( core > TYPE_2 , TYPE_1 < TYPE_3 > TYPE_2 , TYPE_1 < protected 
public TYPE_1 < ? > apply ( TYPE_2 VAR_1 , TYPE_3 input ) throws TYPE_4 , TYPE_5 , TYPE_6 , com.google.gwtorm.server.OrmException , java.io.IOException { VAR_2 . apply ( VAR_1 . METHOD_1 ( ) , path , VAR_3 ) ; return TYPE_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . TYPE_1 return ; ) VAR_3 , path , ) ( METHOD_1 . VAR_1 ( apply . VAR_2 { java.io.IOException , com.google.gwtorm.server.OrmException , TYPE_6 , TYPE_5 , TYPE_4 throws ) input TYPE_3 , VAR_1 TYPE_2 ( apply > ? < TYPE_1 public 
private long METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { org.eclipse.jgit.lib.Repository git = VAR_1 . METHOD_2 ( project ) ; try { TYPE_1 VAR_2 = git . METHOD_3 ( ) ; return METHOD_1 ( VAR_2 ) ; } finally { git . close ( ) ; } } } } ; ) ( close . git { finally } ; ) VAR_2 ( METHOD_1 return ; ) ( METHOD_3 . git = VAR_2 TYPE_1 { try ; ) project ( METHOD_2 . VAR_1 = git org.eclipse.jgit.lib.Repository { java.io.IOException throws ) project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 long private 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . METHOD_2 ( ) ) & & ( VAR_1 . getName ( ) . METHOD_3 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_3 . ) ( getName . VAR_1 ( & & ) ) ( METHOD_2 . VAR_1 ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
void METHOD_1 ( int status , java.lang.String message ) throws java.io.IOException { VAR_1 . error ( message ) ; res . METHOD_2 ( status ) ; VAR_2 . METHOD_3 ( new TYPE_1 ( message ) , METHOD_4 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ( METHOD_4 ; ) ) ( METHOD_4 , ) message ( TYPE_1 new ( METHOD_3 . VAR_2 ; ) status ( METHOD_2 . res ; ) message ( error . VAR_1 { java.io.IOException throws ) message java.lang.String , status int ( METHOD_1 void 
public void onSuccess ( TYPE_1 result ) { TYPE_2 < TYPE_1 > VAR_1 = TYPE_2 . METHOD_1 ( 1 ) . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( result ) ; VAR_2 . onSuccess ( VAR_1 ) ; } } ; ) VAR_1 ( onSuccess . VAR_2 ; ) result ( METHOD_3 . VAR_1 ; ) ( METHOD_2 . ) 1 ( METHOD_1 . TYPE_2 = VAR_1 > TYPE_1 < TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public void index ( ) throws TYPE_1 { try { index . apply ( account , new TYPE_2 ( ) ) ; } catch ( java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new TYPE_1 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_1 new throw { ) e com.google.gwtorm.server.OrmException | java.io.IOException ( catch } ; ) ) ( TYPE_2 new , account ( apply . index { try { TYPE_1 throws ) ( index void public 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . METHOD_1 ( true ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; display ( result ) ; } } ; ) result ( display ; ) STRING_1 ( METHOD_2 . VAR_3 ; ) STRING_1 ( METHOD_2 . VAR_2 ; ) true ( METHOD_1 . VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_3 ( true ) ; VAR_6 . METHOD_3 ( true ) ; super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super ; ) true ( METHOD_3 . VAR_6 ; ) true ( METHOD_3 . VAR_5 ; ) VAR_4 ( METHOD_3 . VAR_3 ; ) false ( METHOD_2 . VAR_2 { ) VAR_1 TYPE_1 final ( METHOD_1 void public 
private static < TYPE_1 , TYPE_2 > TYPE_3 < TYPE_1 , TYPE_2 > METHOD_1 ( ) { TYPE_3 VAR_1 = TYPE_3 . METHOD_2 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_2 . TYPE_3 = VAR_1 TYPE_3 { ) ( METHOD_1 > TYPE_2 , TYPE_1 < TYPE_3 > TYPE_2 , TYPE_1 < static private 
java.lang.String METHOD_1 ( TYPE_1 req ) { java.lang.String VAR_1 = TYPE_2 . METHOD_1 ( req , VAR_2 ) ; return VAR_3 ? VAR_1 . METHOD_2 ( VAR_4 ) : VAR_1 ; } } ; VAR_1 : ) VAR_4 ( METHOD_2 . VAR_1 ? VAR_3 return ; ) VAR_2 , req ( METHOD_1 . TYPE_2 = VAR_1 java.lang.String { ) req TYPE_1 ( METHOD_1 java.lang.String 
public void onSuccess ( TYPE_1 result ) { VAR_1 . onSuccess ( result . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . result ( onSuccess . VAR_1 { ) result TYPE_1 ( onSuccess void public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return VAR_1 . create ( METHOD_2 ( change . METHOD_3 ( ) ) , change . getProject ( ) , change.getId ( ) ) ; } } ; ) ) ( change.getId , ) ( getProject . change , ) ) ( METHOD_3 . change ( METHOD_2 ( create . VAR_1 return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { VAR_1 . append ( CHAR_1 ) ; VAR_1 . append ( VAR_2 ) ; VAR_1 . append ( CHAR_1 ) ; } } ; ) CHAR_1 ( append . VAR_1 ; ) VAR_2 ( append . VAR_1 ; ) CHAR_1 ( append . VAR_1 { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void public 
TYPE_1 < TYPE_2 > METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 . TYPE_3 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 > TYPE_2 < TYPE_1 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
private static TYPE_1 METHOD_1 ( ) { try { return TYPE_2 . METHOD_1 ( ) ; } catch ( TYPE_3 e ) { return null ; } } } } ; null return { ) e TYPE_3 ( catch } ; ) ( METHOD_1 . TYPE_2 return { try { ) ( METHOD_1 TYPE_1 static private 
protected Account . Id getAccountId ( ) { TYPE_1 u = VAR_1 . get ( ) ; if ( u . METHOD_1 ( ) ) { return ( ( TYPE_2 ) ( u ) ) . getAccountId ( ) ; } return null ; } } ; null return } ; ) ( getAccountId . ) ) u ( ) TYPE_2 ( ( return { ) ) ( METHOD_1 . u ( if ; ) ( get . VAR_1 = u TYPE_1 { ) ( getAccountId Id . Account protected 
void METHOD_1 ( boolean VAR_1 ) { if ( ( VAR_2 ) == ( VAR_3 ) ) { METHOD_2 ( ( ! VAR_1 ) ) ; } else if ( ( VAR_2 ) == ( VAR_4 ) ) { METHOD_3 ( ( ! VAR_1 ) ) ; } } } } ; ) ) VAR_1 ! ( ( METHOD_3 { ) ) VAR_4 ( == ) VAR_2 ( ( if else } ; ) ) VAR_1 ! ( ( METHOD_2 { ) ) VAR_3 ( == ) VAR_2 ( ( if { ) VAR_1 boolean ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 user ) { if ( user ! = null ) { VAR_1 . METHOD_2 ( user . METHOD_3 ( ) ) ; } } } } ; ) ) ( METHOD_3 . user ( METHOD_2 . VAR_1 { ) null = ! user ( if { ) user TYPE_1 ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_1 ( METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 ( TYPE_1 new return { java.lang.Exception throws ) ( METHOD_1 TYPE_1 protected 
private void METHOD_1 ( final TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { VAR_1 . METHOD_2 ( db . patchSets ( ) . METHOD_3 ( changeId ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) changeId ( METHOD_3 . ) ( patchSets . db ( METHOD_2 . VAR_1 { OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 final ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; try { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; } finally { VAR_2 . close ( ) ; } } } } ; ) ( close . VAR_2 { finally } ; ) STRING_1 ( getValue . ) ( METHOD_3 . ) ( METHOD_2 . VAR_2 return { try ; ) VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String static public 
private java.util.List < com.google.gerrit.server.query.change.ChangeData > query ( TYPE_1 < com.google.gerrit.server.query.change.ChangeData > p ) throws com.google.gwtorm.server.OrmException { try { return VAR_1 . METHOD_1 ( p ) . changes ( ) ; } catch ( TYPE_2 e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } } } } ; ) e ( com.google.gwtorm.server.OrmException new throw { ) e TYPE_2 ( catch } ; ) ( changes . ) p ( METHOD_1 . VAR_1 return { try { com.google.gwtorm.server.OrmException throws ) p > com.google.gerrit.server.query.change.ChangeData < TYPE_1 ( query > com.google.gerrit.server.query.change.ChangeData < java.util.List private 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { VAR_1 = true ; METHOD_1 ( ) ; TYPE_2 . display ( TYPE_3 . METHOD_2 ( id ) ) ; } } ; ) ) id ( METHOD_2 . TYPE_3 ( display . TYPE_2 ; ) ( METHOD_1 ; true = VAR_1 { ) result ChangeInfo . TYPE_1 ( onSuccess void public 
public static TYPE_1 create ( int line , int VAR_1 ) { TYPE_1 VAR_2 = METHOD_1 ( ) . METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( line ) . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . ) line ( METHOD_3 . VAR_2 return ; ) ( METHOD_2 . ) ( METHOD_1 = VAR_2 TYPE_1 { ) VAR_1 int , line int ( create TYPE_1 static public 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( CHAR_1 ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_4 . VAR_1 , STRING_1 ( org.junit.Assert.assertEquals ; ) CHAR_1 ( METHOD_3 . VAR_1 ; ) null ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public int METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 return { ) ( METHOD_1 int public 
public void METHOD_1 ( TYPE_1 . Change change , TYPE_1 . PatchSet patchSet , TYPE_1 . ReviewDb db ) { } } { ) db ReviewDb . TYPE_1 , patchSet PatchSet . TYPE_1 , change Change . TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_2 . of ( TYPE_3 . branch ( STRING_1 , null , false ) , TYPE_3 . branch ( STRING_2 , null , false ) ) , METHOD_3 ( ) . get ( ) ) ; } } ; ) ) ( get . ) ( METHOD_3 , ) ) false , null , STRING_2 ( branch . TYPE_3 , ) false , null , STRING_1 ( branch . TYPE_3 ( of . TYPE_2 ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 . Result to ( TYPE_2 git , java.lang.String ref ) throws java.io.IOException , TYPE_3 { TYPE_4 . add ( git , VAR_1 , VAR_2 ) ; return METHOD_1 ( git , ref ) ; } } ; ) ref , git ( METHOD_1 return ; ) VAR_2 , VAR_1 , git ( add . TYPE_4 { TYPE_3 , java.io.IOException throws ) ref java.lang.String , git TYPE_2 ( to Result . TYPE_1 public 
protected Project . NameKey METHOD_1 ( java.lang.String VAR_1 , com.google.gerrit.reviewdb.client.Project.NameKey VAR_2 ) throws TYPE_1 { return METHOD_1 ( VAR_1 , VAR_2 , true ) ; } } ; ) true , VAR_2 , VAR_1 ( METHOD_1 return { TYPE_1 throws ) VAR_2 com.google.gerrit.reviewdb.client.Project.NameKey , VAR_1 java.lang.String ( METHOD_1 NameKey . Project protected 
public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.String VAR_1 ) { return VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 return { ) VAR_1 java.lang.String ( METHOD_1 > TYPE_2 < TYPE_1 public 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , true , VAR_2 ) ; } } ; ) VAR_2 , true , VAR_1 ( METHOD_2 return { java.lang.Exception throws ) VAR_2 Status . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 java.lang.String private 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( new TYPE_1 ( config , false , false ) ) ; } } ; ) ) false , false , config ( TYPE_1 new ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( TYPE_1 . ReceiveCommand cmd ) throws java.io.IOException { METHOD_2 ( ) . METHOD_3 ( cmd ) ; } } ; ) cmd ( METHOD_3 . ) ( METHOD_2 { java.io.IOException throws ) cmd ReceiveCommand . TYPE_1 ( METHOD_1 void public 
TYPE_1 METHOD_1 ( final TYPE_2 cm ) { return new TYPE_1 ( ) { public void run ( ) { TYPE_3 group = METHOD_2 ( cm ) ; if ( group ! = null ) { group . METHOD_3 ( ) ; } } } ; } } ; } } } ; ) ( METHOD_3 . group { ) null = ! group ( if ; ) cm ( METHOD_2 = group TYPE_3 { ) ( run void public { ) ( TYPE_1 new return { ) cm TYPE_2 final ( METHOD_1 TYPE_1 
private static boolean METHOD_1 ( java.lang.String value , java.lang.String VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_1 ) . METHOD_1 ( value , null ) ; } else { return TYPE_2 . METHOD_3 ( VAR_1 , value ) ; } } } } ; ) value , VAR_1 ( METHOD_3 . TYPE_2 return { else } ; ) null , value ( METHOD_1 . ) VAR_1 ( METHOD_2 . TYPE_1 return { ) VAR_2 ( if { ) VAR_2 boolean , VAR_1 java.lang.String , value java.lang.String ( METHOD_1 boolean static private 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 n = VAR_1 . METHOD_3 ( ) ; METHOD_4 ( VAR_1 , n ) ; assertEquals ( STRING_2 , n . METHOD_5 ( ) ) ; } } ; ) ) ( METHOD_5 . n , STRING_2 ( assertEquals ; ) n , VAR_1 ( METHOD_4 ; ) ( METHOD_3 . VAR_1 = n TYPE_1 final ; ) STRING_1 ( METHOD_2 . TYPE_2 = VAR_1 TYPE_1 final { ) ( METHOD_1 void public 
public void run ( ) throws java.lang.Exception { try { METHOD_1 ( ) ; METHOD_2 ( ) ; this . run ( ) ; } finally { METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 { finally } ; ) ( run . this ; ) ( METHOD_2 ; ) ( METHOD_1 { try { java.lang.Exception throws ) ( run void public 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . Status VAR_2 ) throws java.lang.Exception { return METHOD_2 ( VAR_1 , false , VAR_2 ) ; } } ; ) VAR_2 , false , VAR_1 ( METHOD_2 return { java.lang.Exception throws ) VAR_2 Status . TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 java.lang.String private 
private TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; user = VAR_3 . create ( TYPE_2 . of ( db ) , VAR_2 ) ; return user ; } } ; user return ; ) VAR_2 , ) db ( of . TYPE_2 ( create . VAR_3 = user ; ) VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 TYPE_1 private 
private static TYPE_1 group ( TYPE_2 group ) { return new TYPE_1 ( STRING_1 ) . id ( group . get ( ) ) ; } } ; ) ) ( get . group ( id . ) STRING_1 ( TYPE_1 new return { ) group TYPE_2 ( group TYPE_1 static private 
TYPE_1 create ( TYPE_2 ctl , com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.reviewdb.client.PatchSet ps , org.eclipse.jgit.revwalk.RevCommit VAR_1 , TYPE_3 VAR_2 ) ; ; ) VAR_2 TYPE_3 , VAR_1 org.eclipse.jgit.revwalk.RevCommit , ps com.google.gerrit.reviewdb.client.PatchSet , c com.google.gerrit.reviewdb.client.Change , ctl TYPE_2 ( create TYPE_1 
public final void METHOD_1 ( TYPE_1 line , TYPE_2 VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( line , VAR_1 . name ( ) . METHOD_3 ( ) , VAR_2 ) ; } } ; ) VAR_2 , ) ( METHOD_3 . ) ( name . VAR_1 , line ( METHOD_2 { ) VAR_2 java.lang.String , VAR_1 TYPE_2 , line TYPE_1 ( METHOD_1 void final public 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id id ) { METHOD_2 ( id , true ) ; } } ; ) true , id ( METHOD_2 { ) id Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( final java.lang.String url ) { this . VAR_1 = url ; return this ; } } ; this return ; url = VAR_1 . this { ) url java.lang.String final ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( final java.lang.String email ) { if ( ( email ! = null ) & & ( ! ( email . isEmpty ( ) ) ) ) { VAR_1 . METHOD_2 ( email ) ; } } } } ; ) email ( METHOD_2 . VAR_1 { ) ) ) ) ( isEmpty . email ( ! ( & & ) null = ! email ( ( if { ) email java.lang.String final ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
private java.util.Set < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account account ) { return VAR_1 . create ( account . getId ( ) ) . METHOD_2 ( ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ( METHOD_2 . ) ) ( getId . account ( create . VAR_1 return { ) account com.google.gerrit.reviewdb.client.Account ( METHOD_1 > TYPE_1 < java.util.Set private 
private TYPE_1 METHOD_1 ( java.lang.String err ) { if ( VAR_1 ) { VAR_2 . error ( err ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } } } ; ) err ( METHOD_3 . TYPE_2 return { else } ; ) ( METHOD_2 . TYPE_2 return ; ) err ( error . VAR_2 { ) VAR_1 ( if { ) err java.lang.String ( METHOD_1 TYPE_1 private 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , char VAR_2 ) { if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) > = 0 ) { VAR_1 = VAR_1 . METHOD_3 ( ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) + 1 ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) 1 + ) ) VAR_2 ( METHOD_2 . VAR_1 ( ( ( METHOD_3 . VAR_1 = VAR_1 { ) 0 = > ) ) VAR_2 ( METHOD_2 . VAR_1 ( ( if { ) VAR_2 char , VAR_1 java.lang.String ( METHOD_1 java.lang.String private 
void close ( ) { VAR_1 . close ( ) ; rw . close ( ) ; repo . close ( ) ; } } ; ) ( close . repo ; ) ( close . rw ; ) ( close . VAR_1 { ) ( close void 
public void METHOD_1 ( ) { index . close ( ) ; } } ; ) ( close . index { ) ( METHOD_1 void public 
public static void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 ) . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_4 . TYPE_4 ( METHOD_3 . ) STRING_2 ( METHOD_2 . ) STRING_1 ( TYPE_3 new { ) VAR_1 > TYPE_2 < TYPE_1 ( METHOD_1 void static public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } } ; ) class VAR_3 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { for ( TYPE_2 i : METHOD_2 ( ) ) { i . delete ( id ) ; } METHOD_3 ( id ) ; return null ; } } ; null return ; ) id ( METHOD_3 } ; ) id ( delete . i { ) ) ( METHOD_2 : i TYPE_2 ( for { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( id ) . view ( STRING_1 ) . delete ( VAR_1 ) ; } } ; ) VAR_1 ( delete . ) STRING_1 ( view . ) id ( change . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
TYPE_1 create ( org.eclipse.jgit.lib.Repository db , TYPE_2 VAR_1 ) ; ; ) VAR_1 TYPE_2 , db org.eclipse.jgit.lib.Repository ( create TYPE_1 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return ( VAR_1 == ( VAR_2 ) ) & & ( ( base ) == null ) ? VAR_3 : VAR_4 ; } } ; VAR_4 : VAR_3 ? ) null == ) base ( ( & & ) ) VAR_2 ( == VAR_1 ( return { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 
public java.lang.String apply ( TYPE_1 rsrc ) throws TYPE_2 , TYPE_3 { return rsrc . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_4 : : new ) ; } } ; ) new : : TYPE_4 ( METHOD_4 . ) ( METHOD_3 . ) ( METHOD_2 . ) ( METHOD_1 . rsrc return { TYPE_3 , TYPE_2 throws ) rsrc TYPE_1 ( apply java.lang.String public 
private com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval VAR_1 , TYPE_1 ctl ) { return new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; } } ; ) VAR_1 , ) ( METHOD_2 . VAR_1 ( PatchSetApproval . com.google.gerrit.reviewdb.client new return { ) ctl TYPE_1 , VAR_1 PatchSetApproval . com.google.gerrit.reviewdb.client ( METHOD_1 PatchSetApproval . com.google.gerrit.reviewdb.client private 
TYPE_1 METHOD_1 ( TYPE_1 . Factory factory , TYPE_2 VAR_1 ) { TYPE_3 < com.google.gerrit.server.query.change.ChangeData > schema = ( ( VAR_2 ) ! = null ) ? TYPE_4 . get ( VAR_2 ) : TYPE_4 . METHOD_2 ( ) ; return factory . create ( schema , base ) ; } } ; ) base , schema ( create . factory return ; ) ( METHOD_2 . TYPE_4 : ) VAR_2 ( get . TYPE_4 ? ) null = ! ) VAR_2 ( ( = schema > com.google.gerrit.server.query.change.ChangeData < TYPE_3 { ) VAR_1 TYPE_2 , factory Factory . TYPE_1 ( METHOD_1 TYPE_1 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( true ) ; new TYPE_1 ( TYPE_2 . METHOD_3 ( ) ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) ) ( METHOD_3 . TYPE_2 ( TYPE_1 new ; ) true ( METHOD_2 . VAR_1 { ) ( METHOD_1 void 
private TYPE_1 . Gerrit METHOD_1 ( ) { if ( ( gerrit ) == null ) { gerrit = new TYPE_1 . Gerrit ( METHOD_2 ( ) ) ; } return gerrit ; } } ; gerrit return } ; ) ) ( METHOD_2 ( Gerrit . TYPE_1 new = gerrit { ) null == ) gerrit ( ( if { ) ( METHOD_1 Gerrit . TYPE_1 private 
private static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 ) ; java.util.Collections . METHOD_2 ( VAR_2 , VAR_3 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_3 , VAR_2 ( METHOD_2 . java.util.Collections ; ) VAR_1 ( > TYPE_1 < java.util.ArrayList new = VAR_2 > TYPE_1 < java.util.ArrayList { ) VAR_1 > TYPE_1 < TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List static private 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( this ) ; } } ; ) this ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , 0 ) ; METHOD_2 ( TYPE_2 . create ( 0 , 0 ) , VAR_1 . METHOD_3 ( 0 ) ) ; } } ; ) ) 0 ( METHOD_3 . VAR_1 , ) 0 , 0 ( create . TYPE_2 ( METHOD_2 ; ) 0 , VAR_2 ( TYPE_1 new = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 event ) { VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) ; } } ; ) ) ( getName . ) row ( METHOD_3 ( METHOD_2 . VAR_1 { ) event TYPE_1 ( METHOD_1 void public 
private static java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) throws java.io.IOException { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; try { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( STRING_1 ) ; } finally { VAR_2 . close ( ) ; } } } } ; ) ( close . VAR_2 { finally } ; ) STRING_1 ( getValue . ) ( METHOD_3 . ) ( METHOD_2 . VAR_2 return { try ; ) VAR_1 ( TYPE_2 new = VAR_2 TYPE_2 { java.io.IOException throws ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String static private 
TYPE_1 create ( com.google.gerrit.reviewdb.client.Change . Id changeId , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) ; ; ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id , changeId Id . com.google.gerrit.reviewdb.client.Change ( create TYPE_1 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { if ( id . equals ( STRING_1 ) ) { return new TYPE_1 ( ) ; } throw new TYPE_4 ( id ) ; } } ; ) id ( TYPE_4 new throw } ; ) ( TYPE_1 new return { ) ) STRING_1 ( equals . id ( if { TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
private static org.eclipse.jgit.revwalk.RevCommit METHOD_1 ( org.eclipse.jgit.lib.Repository VAR_1 , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws java.io.IOException { org.eclipse.jgit.lib.ObjectId VAR_2 = TYPE_1 . METHOD_2 ( patchSet ) ; try ( org.eclipse.jgit.revwalk.RevWalk VAR_3 = new org.eclipse.jgit.revwalk.RevWalk ( VAR_1 ) ) { return VAR_3 . parseCommit ( VAR_2 ) ; } } } } ; ) VAR_2 ( parseCommit . VAR_3 return { ) ) VAR_1 ( org.eclipse.jgit.revwalk.RevWalk new = VAR_3 org.eclipse.jgit.revwalk.RevWalk ( try ; ) patchSet ( METHOD_2 . TYPE_1 = VAR_2 org.eclipse.jgit.lib.ObjectId { java.io.IOException throws ) patchSet com.google.gerrit.reviewdb.client.PatchSet , VAR_1 org.eclipse.jgit.lib.Repository ( METHOD_1 org.eclipse.jgit.revwalk.RevCommit static private 
public void METHOD_1 ( ) { com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) . isEqualTo ( new java.lang.String [ ] { } ) ; } } ; ) } { ] [ java.lang.String new ( isEqualTo . ) ) ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 . VAR_1 ( com.google.common.truth.Truth.assertThat { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; install ( new TYPE_1 ( ) { protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_3 class ) ; } } ) ; } } ; ) } } ; ) class VAR_3 ( to . ) ( METHOD_2 { ) ( METHOD_1 void protected { ) ( TYPE_1 new ( install ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
void METHOD_1 ( boolean VAR_1 ) { submit . METHOD_2 ( ( VAR_1 & & ( VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 ( & & VAR_1 ( ( METHOD_2 . submit { ) VAR_1 boolean ( METHOD_1 void 
public void onSuccess ( final TYPE_1 result ) { METHOD_1 ( true ) ; display ( result ) ; VAR_1 . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . VAR_1 ; ) result ( display ; ) true ( METHOD_1 { ) result TYPE_1 final ( onSuccess void public 
protected void METHOD_1 ( ) { install ( new TYPE_1 ( ) { protected void METHOD_2 ( ) { factory ( VAR_1 . Factory class ) ; } } ) ; rpc ( VAR_2 class ) ; } } ; ) class VAR_2 ( rpc ; ) } } ; ) class Factory . VAR_1 ( factory { ) ( METHOD_2 void protected { ) ( TYPE_1 new ( install { ) ( METHOD_1 void protected 
private static PatchSet . Id METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id . getParentKey ( ) , ( ( id . get ( ) ) + 1 ) ) ; } } ; ) ) 1 + ) ) ( get . id ( ( , ) ( getParentKey . id ( com.google.gerrit.reviewdb.client.PatchSet.Id new return { ) id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 Id . PatchSet static private 
public static void query ( java.lang.String query , java.util.Set < TYPE_1 > VAR_1 , TYPE_2 < TYPE_3 > VAR_2 ) { TYPE_4 VAR_3 = TYPE_3 . METHOD_1 ( query ) ; TYPE_3 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_3 . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . VAR_3 ; ) VAR_1 , VAR_3 ( METHOD_2 . TYPE_3 ; ) query ( METHOD_1 . TYPE_3 = VAR_3 TYPE_4 { ) VAR_2 > TYPE_3 < TYPE_2 , VAR_1 > TYPE_1 < java.util.Set , query java.lang.String ( query void static public 
protected abstract TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) ; ; ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 abstract protected 
public void METHOD_1 ( final TYPE_1 < TYPE_2 > VAR_1 ) { VAR_1 . onSuccess ( TYPE_3 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . TYPE_3 ( onSuccess . VAR_1 { ) VAR_1 > TYPE_2 < TYPE_1 final ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 . Project project , TYPE_3 < TYPE_4 > VAR_1 , TYPE_5 VAR_2 ) ; ; ) VAR_2 TYPE_5 , VAR_1 > TYPE_4 < TYPE_3 , project Project . TYPE_2 ( create TYPE_1 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { return TYPE_1 . METHOD_2 ( VAR_2 ) . METHOD_1 ( VAR_1 , METHOD_3 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_3 , VAR_1 ( METHOD_1 . ) VAR_2 ( METHOD_2 . TYPE_1 return { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 boolean private 
private TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; } } ; ) ) ( METHOD_7 . TYPE_3 ( METHOD_6 . ) VAR_3 ( METHOD_5 . ) VAR_2 ( METHOD_4 . ) VAR_1 ( METHOD_3 . ) ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 TYPE_1 private 
public abstract Change . Key METHOD_1 ( ) ; ; ) ( METHOD_1 Key . Change abstract public 
public void METHOD_1 ( java.lang.String id ) throws TYPE_1 { throw new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new throw { TYPE_1 throws ) id java.lang.String ( METHOD_1 void public 
public void run ( ) throws java.lang.Exception { METHOD_1 ( VAR_1 ) ; final TYPE_1 VAR_2 = METHOD_2 ( out ) ; try { VAR_1 . display ( VAR_2 ) ; } finally { VAR_2 . METHOD_3 ( ) ; } } } } ; ) ( METHOD_3 . VAR_2 { finally } ; ) VAR_2 ( display . VAR_1 { try ; ) out ( METHOD_2 = VAR_2 TYPE_1 final ; ) VAR_1 ( METHOD_1 { java.lang.Exception throws ) ( run void public 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) { return TYPE_1 . METHOD_2 ( name ) ? ( TYPE_1 . METHOD_3 ( name ) . METHOD_4 ( VAR_1 ) ) == 0 : false ; } } ; false : 0 == ) ) VAR_1 ( METHOD_4 . ) name ( METHOD_3 . TYPE_1 ( ? ) name ( METHOD_2 . TYPE_1 return { ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 boolean private 
public java.lang.String METHOD_1 ( TYPE_1 input ) { return java.lang.String.format ( STRING_1 , TYPE_2 . METHOD_2 ( VAR_1 , input . getChange ( ) ) ) ; } } ; ) ) ) ( getChange . input , VAR_1 ( METHOD_2 . TYPE_2 , STRING_1 ( java.lang.String.format return { ) input TYPE_1 ( METHOD_1 java.lang.String public 
private static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . METHOD_2 ( id , STRING_1 ) ; } } ; ) STRING_1 , id ( METHOD_2 . TYPE_2 return { ) id int ( METHOD_1 TYPE_1 static private 
protected Project . NameKey METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( getChange ( ) ) ; } } ; ) ) ( getChange ( METHOD_1 . TYPE_1 return { ) ( METHOD_1 NameKey . Project protected 
public TYPE_1 get ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = super . get ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; } } ; VAR_2 return ; ) VAR_1 ( METHOD_1 . VAR_2 ; ) VAR_1 ( get . super = VAR_2 TYPE_1 { ) VAR_1 TYPE_2 ( get TYPE_1 public 
private void METHOD_1 ( ) throws java.io.IOException { TYPE_1 . HttpServletResponse VAR_1 = METHOD_2 ( VAR_2 . HttpServletResponse class ) ; servlet . METHOD_3 ( null , VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_5 . ) VAR_1 ( METHOD_4 . TYPE_2 ; ) VAR_1 , null ( METHOD_3 . servlet ; ) class HttpServletResponse . VAR_2 ( METHOD_2 = VAR_1 HttpServletResponse . TYPE_1 { java.io.IOException throws ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_2 req , java.lang.String VAR_1 , java.lang.String path ) { return TYPE_3 . refs ( ) . METHOD_2 ( VAR_1 ) . METHOD_3 ( path ) ; } } ; ) path ( METHOD_3 . ) VAR_1 ( METHOD_2 . ) ( refs . TYPE_3 return { ) path java.lang.String , VAR_1 java.lang.String , req TYPE_2 ( METHOD_1 TYPE_1 private 
TYPE_1 create ( com.google.gerrit.reviewdb.client.PatchSet.Id VAR_1 , java.lang.String VAR_2 ) ; ; ) VAR_2 java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.PatchSet.Id ( create TYPE_1 
public java.lang.String METHOD_1 ( java.lang.String project ) { return STRING_1 + project ; } } ; project + STRING_1 return { ) project java.lang.String ( METHOD_1 java.lang.String public 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( result ) ; if ( VAR_2 ) { VAR_2 = false ; METHOD_1 ( ) ; } } } } ; ) ( METHOD_1 ; false = VAR_2 { ) VAR_2 ( if ; ) result ( display . VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ( - 1 ) ) ; } } ; ) ) 1 - ( ( METHOD_2 { ) event TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , TYPE_1 ctl , com.google.gerrit.reviewdb.client.PatchSet.Id psId ) throws com.google.gwtorm.server.OrmException { db . METHOD_2 ( ) . insert ( METHOD_3 ( db , ctl , psId ) ) ; } } ; ) ) psId , ctl , db ( METHOD_3 ( insert . ) ( METHOD_2 . db { com.google.gwtorm.server.OrmException throws ) psId com.google.gerrit.reviewdb.client.PatchSet.Id , ctl TYPE_1 , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_1 ( db , patchSet , null , false , false ) ; } } ; ) false , false , null , patchSet , db ( METHOD_1 return { ) patchSet com.google.gerrit.reviewdb.client.PatchSet , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 > TYPE_1 < java.util.List public 
private void METHOD_1 ( java.lang.String ref , TYPE_1 u ) { com.google.common.truth.Truth.assertThat ( u . METHOD_2 ( ref ) . METHOD_3 ( ) ) . METHOD_4 ( ( STRING_1 + ref ) ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) ) ref + STRING_1 ( ( METHOD_4 . ) ) ( METHOD_3 . ) ref ( METHOD_2 . u ( com.google.common.truth.Truth.assertThat { ) u TYPE_1 , ref java.lang.String ( METHOD_1 void private 
protected abstract java.lang.String METHOD_1 ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( METHOD_1 java.lang.String abstract protected 
public Project . NameKey METHOD_1 ( ) { return getChange ( ) . getProject ( ) ; } } ; ) ( getProject . ) ( getChange return { ) ( METHOD_1 NameKey . Project public 
public void METHOD_1 ( TYPE_1 . NameKey VAR_1 , TYPE_2 event ) { } } { ) event TYPE_2 , VAR_1 NameKey . TYPE_1 ( METHOD_1 void public 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( new com.google.gerrit.server.query.change.ChangeData ( change ) , true ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) true , ) change ( com.google.gerrit.server.query.change.ChangeData new ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
private static void METHOD_1 ( java.lang.String VAR_1 ) { org.junit.Assert . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 . TYPE_1 ( METHOD_2 . org.junit.Assert { ) VAR_1 java.lang.String ( METHOD_1 void static private 
private boolean METHOD_1 ( TYPE_1 config , java.lang.String VAR_1 ) { return METHOD_2 ( config , STRING_1 , VAR_1 , false ) ; } } ; ) false , VAR_1 , STRING_1 , config ( METHOD_2 return { ) VAR_1 java.lang.String , config TYPE_1 ( METHOD_1 boolean private 
public void onSuccess ( final TYPE_1 . Account result ) { if ( result ! = null ) { TYPE_2 . METHOD_1 ( result ) ; } else { TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( ) ; } METHOD_4 ( ) ; } } ; ) ( METHOD_4 } ; ) ( METHOD_3 . TYPE_2 ; ) VAR_1 ( METHOD_2 . TYPE_3 { else } ; ) result ( METHOD_1 . TYPE_2 { ) null = ! result ( if { ) result Account . TYPE_1 final ( onSuccess void public 
private static java.lang.String id ( final TYPE_1 id ) { return id ! = null ? TYPE_2 . format ( id ) : STRING_1 ; } } ; STRING_1 : ) id ( format . TYPE_2 ? null = ! id return { ) id TYPE_1 final ( id java.lang.String static private 
public TYPE_1 < TYPE_2 > apply ( TYPE_3 VAR_1 ) throws java.lang.Exception { if ( ! VAR_1 ) { return ( ( TYPE_1 < TYPE_2 > ) ( VAR_2 . METHOD_1 ( change ) ) ) ; } return TYPE_4 . METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 . TYPE_4 return } ; ) ) ) change ( METHOD_1 . VAR_2 ( ) > TYPE_2 < TYPE_1 ( ( return { ) VAR_1 ! ( if { java.lang.Exception throws ) VAR_1 TYPE_3 ( apply > TYPE_2 < TYPE_1 public 
public java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 > refs ) { return METHOD_1 ( refs , false ) ; } } ; ) false , refs ( METHOD_1 return { ) refs > TYPE_1 , java.lang.String < java.util.Map ( METHOD_1 > TYPE_1 , java.lang.String < java.util.Map public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . edit ( id ) . METHOD_2 ( STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 ( METHOD_2 . ) id ( edit . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new TYPE_1 ( ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) ( TYPE_1 new = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 ( METHOD_2 . TYPE_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
private void METHOD_1 ( java.lang.String group ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_1 . METHOD_2 ( ) . id ( group ) . METHOD_3 ( ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) ( METHOD_3 . ) group ( id . ) ( METHOD_2 . VAR_1 ( com.google.common.truth.Truth.assertThat { java.lang.Exception throws ) group java.lang.String ( METHOD_1 void private 
private void METHOD_1 ( java.lang.String changeId , com.google.gerrit.reviewdb.client.PatchSet ps ) throws java.lang.Exception { VAR_1 . changes ( ) . id ( changeId ) . revision ( ps . getId ( ) . get ( ) ) . delete ( ) ; } } ; ) ( delete . ) ) ( get . ) ( getId . ps ( revision . ) changeId ( id . ) ( changes . VAR_1 { java.lang.Exception throws ) ps com.google.gerrit.reviewdb.client.PatchSet , changeId java.lang.String ( METHOD_1 void private 
public void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; bind ( VAR_3 class ) . METHOD_2 ( user ) ; } } ; ) user ( METHOD_2 . ) class VAR_3 ( bind ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.String email ) { this . email = email ; this . VAR_1 = METHOD_2 ( email ) ; } } ; ) email ( METHOD_2 = VAR_1 . this ; email = email . this { ) email java.lang.String ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_1 . changeId , VAR_5 , VAR_6 ) ; assertThat ( VAR_7 ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) VAR_7 ( assertThat ; ) VAR_6 , VAR_5 , changeId . VAR_1 ( METHOD_4 ; ) VAR_4 , VAR_3 ( METHOD_3 ; ) VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 . ChangeInfo info , java.lang.String revision ) { VAR_1 = new TYPE_2 ( info . METHOD_2 ( ) , info . project ( ) , info . revision ( revision ) , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , ) revision ( revision . info , ) ( project . info , ) ( METHOD_2 . info ( TYPE_2 new = VAR_1 { ) revision java.lang.String , info ChangeInfo . TYPE_1 ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 t = METHOD_2 ( ) . get ( VAR_1 . get ( ) ) ; return t ! = null ? t : METHOD_1 ( ) . get ( VAR_1 . get ( ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ( get . VAR_1 ( get . ) ( METHOD_1 : t ? null = ! t return ; ) ) ( get . VAR_1 ( get . ) ( METHOD_2 = t TYPE_1 { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 ) ; METHOD_2 ( STRING_2 ) . METHOD_3 ( ) ; org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_2 ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) STRING_2 ( METHOD_2 , VAR_1 ( org.junit.Assert.assertEquals ; ) ( METHOD_3 . ) STRING_2 ( METHOD_2 ; ) STRING_1 ( group { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.Set < com.google.gerrit.reviewdb.client.Change . Id > METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = null ; return VAR_1 ; } } ; VAR_1 return ; null = VAR_1 ; ) ( METHOD_2 { ) ( METHOD_1 > Id . com.google.gerrit.reviewdb.client.Change < java.util.Set public 
java.util.List < TYPE_1 . ChangeInfo > METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) throws TYPE_4 ; ; TYPE_4 throws ) VAR_1 > TYPE_3 < TYPE_2 ( METHOD_1 > ChangeInfo . TYPE_1 < java.util.List 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 , TYPE_4 VAR_2 ) throws com.google.gwtorm.server.OrmException { TYPE_5 VAR_3 = VAR_4 . METHOD_2 ( ) ; if ( VAR_3 ! = null ) { return METHOD_3 ( VAR_1 ) ; } return METHOD_4 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_4 return } ; ) VAR_1 ( METHOD_3 return { ) null = ! VAR_3 ( if ; ) ( METHOD_2 . VAR_4 = VAR_3 TYPE_5 { com.google.gwtorm.server.OrmException throws ) VAR_2 TYPE_4 , VAR_1 TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 private 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , STRING_1 ( METHOD_1 return { java.lang.Exception throws ) VAR_2 boolean , VAR_1 boolean ( METHOD_1 ProjectConfig . TYPE_1 private 
public boolean METHOD_1 ( ) { for ( TYPE_1 group : VAR_1 ) { if ( METHOD_2 ( group ) ) { return true ; } } return false ; } } ; false return } } ; true return { ) ) group ( METHOD_2 ( if { ) VAR_1 : group TYPE_1 ( for { ) ( METHOD_1 boolean public 
public void METHOD_1 ( TYPE_1 . Factory VAR_1 , TYPE_2 . NameKey branch ) { if ( METHOD_2 ( branch ) ) { METHOD_3 ( VAR_1 , branch ) ; } } } } ; ) branch , VAR_1 ( METHOD_3 { ) ) branch ( METHOD_2 ( if { ) branch NameKey . TYPE_2 , VAR_1 Factory . TYPE_1 ( METHOD_1 void public 
public java.lang.String format ( java.lang.String projectName , TYPE_1 cfg , java.lang.String VAR_1 ) { return ( STRING_1 + ( TYPE_2 . METHOD_1 ( VAR_1 ) ) ) + STRING_2 ; } } ; STRING_2 + ) ) ) VAR_1 ( METHOD_1 . TYPE_2 ( + STRING_1 ( return { ) VAR_1 java.lang.String , cfg TYPE_1 , projectName java.lang.String ( format java.lang.String public 
public static TYPE_1 . Id METHOD_1 ( final java.lang.String VAR_1 ) { final TYPE_1 . Id r = new TYPE_1 . Id ( ) ; r . METHOD_2 ( VAR_1 ) ; return r ; } } ; r return ; ) VAR_1 ( METHOD_2 . r ; ) ( Id . TYPE_1 new = r Id . TYPE_1 final { ) VAR_1 java.lang.String final ( METHOD_1 Id . TYPE_1 static public 
private java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return TYPE_1 . query ( VAR_1 . get ( ) ) . METHOD_1 ( topic ) ; } } ; ) topic ( METHOD_1 . ) ) ( get . VAR_1 ( query . TYPE_1 return { com.google.gwtorm.server.OrmException throws ) topic java.lang.String ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List private 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . get ( ) . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | TYPE_3 | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException | TYPE_3 | com.google.gwtorm.server.OrmException ( catch } ; ) in , change ( apply . ) ( get . VAR_1 { try { TYPE_2 throws ) in TYPE_1 ( METHOD_1 void public 
private static void METHOD_1 ( final TYPE_1 req , final TYPE_2 . HttpServletResponse rsp ) throws java.io.IOException { TYPE_3 . METHOD_2 ( req , rsp ) ; } } ; ) rsp , req ( METHOD_2 . TYPE_3 { java.io.IOException throws ) rsp HttpServletResponse . TYPE_2 final , req TYPE_1 final ( METHOD_1 void static private 
void METHOD_1 ( TYPE_1 e ) { VAR_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_2 . getValue ( VAR_2 . METHOD_4 ( ) ) ) ) ; view . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . view ; ) ) ) ) ( METHOD_4 . VAR_2 ( getValue . VAR_2 ( METHOD_3 . TYPE_2 ( METHOD_2 . VAR_1 { ) e TYPE_1 ( METHOD_1 void 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 { return VAR_3 . create ( VAR_1 , db , repo , rw , VAR_4 , VAR_5 , VAR_2 , METHOD_2 ( VAR_6 ) , VAR_7 ) ; } } ; ) VAR_7 , ) VAR_6 ( METHOD_2 , VAR_2 , VAR_5 , VAR_4 , rw , repo , db , VAR_1 ( create . VAR_3 return { TYPE_5 , TYPE_4 throws ) VAR_2 TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( TYPE_1 a , TYPE_2 < TYPE_3 . PatchSet > ps ) { METHOD_1 ( a , ps , null , false , null ) ; } } ; ) null , false , null , ps , a ( METHOD_1 { ) ps > PatchSet . TYPE_3 < TYPE_2 , a TYPE_1 ( METHOD_1 void public 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_2 . METHOD_2 ( ) ) & & ( VAR_1 . get ( ) . METHOD_3 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( METHOD_3 . ) ( get . VAR_1 ( & & ) ) ( METHOD_2 . VAR_2 ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean private 
void METHOD_1 ( TYPE_1 apply ) { VAR_1 . METHOD_1 ( ( ) - > { VAR_2 . METHOD_1 ( apply : : run ) ; } ) ; } } ; ) } ; ) run : : apply ( METHOD_1 . VAR_2 { > - ) ( ( METHOD_1 . VAR_1 { ) apply TYPE_1 ( METHOD_1 void 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( psId . getParentKey ( ) , java.lang.String . METHOD_2 ( psId . get ( ) ) ) ) ; } } ; ) ) ) ) ( get . psId ( METHOD_2 . java.lang.String , ) ( getParentKey . psId ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public void METHOD_1 ( ) { final TYPE_1 p = new TYPE_1 ( 0 ) ; assertEquals ( 0 , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , 0 ( assertEquals ; ) 0 ( TYPE_1 new = p TYPE_1 final { ) ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account account ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 ) , account , TYPE_3 . of ( ) , TYPE_3 . of ( ) , new TYPE_4 < > ( ) ) ; } } ; ) ) ( > < TYPE_4 new , ) ( of . TYPE_3 , ) ( of . TYPE_3 , account , ) VAR_1 ( TYPE_2 new ( TYPE_1 new return { ) account com.google.gerrit.reviewdb.client.Account ( METHOD_1 TYPE_1 static private 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; METHOD_2 ( VAR_1 . get ( ) ) ; VAR_2 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_2 ) ; METHOD_2 ( VAR_2 . get ( ) ) ; } } ; ) ) ( get . VAR_2 ( METHOD_2 ; ) STRING_2 ( com.google.gerrit.reviewdb.client.Project.NameKey new = VAR_2 ; ) ) ( get . VAR_1 ( METHOD_2 ; ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( java.lang.String project , java.lang.String ref , int VAR_1 ) { TYPE_1 event = new TYPE_1 ( project , ref , VAR_1 ) ; METHOD_2 ( project , ref , event ) ; } } ; ) event , ref , project ( METHOD_2 ; ) VAR_1 , ref , project ( TYPE_1 new = event TYPE_1 { ) VAR_1 int , ref java.lang.String , project java.lang.String ( METHOD_1 void 
private void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) { final TYPE_3 [ ] VAR_3 = VAR_4 . METHOD_2 ( ) ; for ( final TYPE_3 m : VAR_3 ) { METHOD_3 ( VAR_1 , m , VAR_2 ) ; } } } } ; ) VAR_2 , m , VAR_1 ( METHOD_3 { ) VAR_3 : m TYPE_3 final ( for ; ) ( METHOD_2 . VAR_4 = VAR_3 ] [ TYPE_3 final { ) VAR_2 TYPE_2 final , VAR_1 TYPE_1 final ( METHOD_1 void private 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( java.lang.String VAR_1 ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . commit ( TYPE_1 . schema ( VAR_2 ) , VAR_1 ) ) ; } } ; ) ) VAR_1 , ) VAR_2 ( schema . TYPE_1 ( commit . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) VAR_1 java.lang.String ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
private void METHOD_1 ( TYPE_1 cm ) { if ( cm . METHOD_2 ( ) ) { TYPE_2 VAR_1 = cm . METHOD_3 ( ) ; cm . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 . METHOD_5 ( ) ) ; cm . METHOD_6 ( null ) ; } } } } ; ) null ( METHOD_6 . cm ; ) ) ( METHOD_5 . VAR_3 , VAR_2 , VAR_1 ( METHOD_4 . cm ; ) ( METHOD_3 . cm = VAR_1 TYPE_2 { ) ) ( METHOD_2 . cm ( if { ) cm TYPE_1 ( METHOD_1 void private 
public void add ( final TYPE_1 VAR_1 ) { assert ! ( VAR_2 . METHOD_1 ( VAR_3 ) ) ; VAR_2 . put ( VAR_3 , VAR_1 ) ; } } ; ) VAR_1 , VAR_3 ( put . VAR_2 ; ) ) VAR_3 ( METHOD_1 . VAR_2 ( ! assert { ) VAR_1 TYPE_1 final ( add void public 
public int METHOD_1 ( ) { return 0 ; } } ; 0 return { ) ( METHOD_1 int public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . get ( ( STRING_1 + ( METHOD_2 ( ) ) ) ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) ) ) ) ( METHOD_2 ( + STRING_1 ( ( get . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
< TYPE_1 > TYPE_2 < TYPE_3 , TYPE_1 > create ( TYPE_3 VAR_1 , TYPE_4 id ) throws TYPE_5 ; ; TYPE_5 throws ) id TYPE_4 , VAR_1 TYPE_3 ( create > TYPE_1 , TYPE_3 < TYPE_2 > TYPE_1 < 
public TYPE_1 apply ( TYPE_2 VAR_1 , TYPE_3 input ) throws com.google.gwtorm.server.OrmException { return get . get ( ) . apply ( VAR_1 ) ; } } ; ) VAR_1 ( apply . ) ( get . get return { com.google.gwtorm.server.OrmException throws ) input TYPE_3 , VAR_1 TYPE_2 ( apply TYPE_1 public 
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { TYPE_2 . METHOD_2 ( event . getValue ( ) ) ; } } ; ) ) ( getValue . event ( METHOD_2 . TYPE_2 { ) event > java.lang.String < TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 { ) VAR_1 boolean ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( int id , java.lang.String commit , java.lang.String VAR_1 ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) . id ( commit ) . view ( VAR_1 ) ; } } ; ) VAR_1 ( view . ) commit ( id . ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) VAR_1 java.lang.String , commit java.lang.String , id int ( METHOD_1 TYPE_1 static private 
public boolean apply ( TYPE_1 input ) { return input . getProject ( ) . METHOD_1 ( ) . equals ( rsrc . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . rsrc ( equals . ) ( METHOD_1 . ) ( getProject . input return { ) input TYPE_1 ( apply boolean public 
TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) throws java.lang.Exception ; ; java.lang.Exception throws ) VAR_1 ... TYPE_2 ( METHOD_1 TYPE_1 
private static final native void METHOD_1 ( java.lang.String e , java.lang.String r , java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String , r java.lang.String , e java.lang.String ( METHOD_1 void native final static private 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( cd , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) false , cd ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
public static TYPE_1 < TYPE_2 > name ( java.lang.String name ) { return new TYPE_3 ( VAR_1 , VAR_2 , name . METHOD_1 ( VAR_3 ) ) ; } } ; ) ) VAR_3 ( METHOD_1 . name , VAR_2 , VAR_1 ( TYPE_3 new return { ) name java.lang.String ( name > TYPE_2 < TYPE_1 static public 
public java.lang.String METHOD_1 ( ) { return ( STRING_1 + ( VAR_1 ) ) + STRING_2 ; } } ; STRING_2 + ) ) VAR_1 ( + STRING_1 ( return { ) ( METHOD_1 java.lang.String public 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( 1 ) ; } } ; ) 1 ( METHOD_2 { ) event TYPE_1 ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.lang.Exception { return new TYPE_1 ( METHOD_2 ( ) , VAR_1 , walk , VAR_2 ) ; } } ; ) VAR_2 , walk , VAR_1 , ) ( METHOD_2 ( TYPE_1 new return { java.lang.Exception throws ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( ) throws TYPE_1 { super . METHOD_1 ( ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_4 ( VAR_2 ) ; } } ; ) VAR_2 ( METHOD_4 ; ) VAR_1 ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 ; ) ( METHOD_1 . super { TYPE_1 throws ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( new TYPE_2 ( ) ) ; } } ; ) ) ( TYPE_2 new ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void protected 
public final native void METHOD_1 ( boolean s ) ; ; ) s boolean ( METHOD_1 void native final public 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) ) . METHOD_3 ( TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 , STRING_4 ) ) ; } } ; ) ) STRING_4 , STRING_3 , STRING_2 ( METHOD_4 . TYPE_3 ( METHOD_3 . ) ) ) ) VAR_1 ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat ; STRING_1 = VAR_1 java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( ) ; } } ; ) ( TYPE_2 new return { java.lang.Exception throws ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , java.lang.String . METHOD_3 ( revision . get ( ) ) ) ) ; } } ; ) ) ) ) ( get . revision ( METHOD_3 . java.lang.String , ) ( getParentKey . revision ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) event TYPE_1 final ( METHOD_1 void public 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( ctl . getId ( ) ) ; } } ; ) ) ( getId . ctl ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
public void METHOD_1 ( final java.lang.String name ) { this . name = name ; } } ; name = name . this { ) name java.lang.String final ( METHOD_1 void public 
public boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( getRefName ( ) ) ) ) . METHOD_3 ( VAR_2 ) ) & & ( METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 ( & & ) ) VAR_2 ( METHOD_3 . ) ) ) ) ( getRefName ( + STRING_1 ( ( METHOD_2 . VAR_1 ( return { ) ( METHOD_1 boolean public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; METHOD_3 ( in , METHOD_4 ( in ) ) ; } } ; ) ) in ( METHOD_4 , in ( METHOD_3 ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 , int row , int VAR_2 ) { METHOD_2 ( row ) ; } } ; ) row ( METHOD_2 { ) VAR_2 int , row int , VAR_1 TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_2 , VAR_3 ) ; VAR_2 = null ; VAR_3 = null ; } } ; null = VAR_3 ; null = VAR_2 ; ) VAR_3 , VAR_2 ( METHOD_3 ; ) VAR_1 ( METHOD_2 { ) result TYPE_1 ( METHOD_1 void protected 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String VAR_2 , TYPE_2 VAR_3 , int line ) { return TYPE_3 . METHOD_1 ( STRING_1 , VAR_1 , revision , VAR_2 , VAR_3 , line ) ; } } ; ) line , VAR_3 , VAR_2 , revision , VAR_1 , STRING_1 ( METHOD_1 . TYPE_3 return { ) line int , VAR_3 TYPE_2 , VAR_2 java.lang.String , revision com.google.gerrit.reviewdb.client.PatchSet.Id , VAR_1 TYPE_1 ( METHOD_1 java.lang.String static public 
public void onSuccess ( TYPE_1 . ChangeInfo info ) { info . METHOD_1 ( ) ; METHOD_2 ( info , base ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) base , info ( METHOD_2 ; ) ( METHOD_1 . info { ) info ChangeInfo . TYPE_1 ( onSuccess void public 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account account ) throws com.google.gwtorm.server.OrmException { TYPE_1 VAR_1 = VAR_2 . create ( VAR_3 , account . getId ( ) ) ; return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_1 ( METHOD_3 . ) ( METHOD_2 . rsrc return ; ) ) ( getId . account , VAR_3 ( create . VAR_2 = VAR_1 TYPE_1 { com.google.gwtorm.server.OrmException throws ) account com.google.gerrit.reviewdb.client.Account ( METHOD_1 boolean public 
public TYPE_1 METHOD_1 ( TYPE_2 rsrc ) { return new TYPE_3 ( ) . METHOD_2 ( STRING_1 ) . METHOD_3 ( STRING_2 ) . METHOD_4 ( ( ( ! ( rsrc . METHOD_5 ( ) ) ) & & ( METHOD_6 ( rsrc ) ) ) ) ; } } ; ) ) ) ) rsrc ( METHOD_6 ( & & ) ) ) ( METHOD_5 . rsrc ( ! ( ( ( METHOD_4 . ) STRING_2 ( METHOD_3 . ) STRING_1 ( METHOD_2 . ) ( TYPE_3 new return { ) rsrc TYPE_2 ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( final TYPE_1 event ) { TYPE_2 change = VAR_1 . get ( ) ; if ( ! ( VAR_2 . METHOD_2 ( change ) ) ) { return ; } METHOD_3 ( change ) ; } } ; ) change ( METHOD_3 } ; return { ) ) ) change ( METHOD_2 . VAR_2 ( ! ( if ; ) ( get . VAR_1 = change TYPE_2 { ) event TYPE_1 final ( METHOD_1 void private 
public int METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return { ) ( METHOD_1 int public 
public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 . get ( ) . METHOD_2 ( STRING_1 ) ) || ( VAR_1 . get ( ) . METHOD_3 ( STRING_2 ) ) ; } } ; ) ) STRING_2 ( METHOD_3 . ) ( get . VAR_1 ( || ) ) STRING_1 ( METHOD_2 . ) ( get . VAR_1 ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean static public 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_3 > s ) { VAR_1 . METHOD_2 ( STRING_1 , TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_4 ( s ) ) ) ; } } ; ) ) ) s ( METHOD_4 . TYPE_3 ( METHOD_3 . TYPE_4 , STRING_1 ( METHOD_2 . VAR_1 { ) s > TYPE_3 < TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void static public 
public void METHOD_1 ( boolean value ) { throw new TYPE_1 ( ) ; } } ; ) ( TYPE_1 new throw { ) value boolean ( METHOD_1 void public 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 == null ? STRING_1 : VAR_1 ; } } ; VAR_1 : STRING_1 ? null == VAR_1 return { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String public 
java.lang.String METHOD_1 ( int VAR_1 , int VAR_2 ) ; ; ) VAR_2 int , VAR_1 int ( METHOD_1 java.lang.String 
private java.lang.String url ( TYPE_1 r ) { return TYPE_2 . METHOD_1 ( changeId , java.lang.String . METHOD_2 ( r . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . r ( METHOD_2 . java.lang.String , changeId ( METHOD_1 . TYPE_2 return { ) r TYPE_1 ( url java.lang.String private 
TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Change change ) { return create ( VAR_1 , VAR_2 . create ( db , change ) ) ; } } ; ) ) change , db ( create . VAR_2 , VAR_1 ( create return { ) change com.google.gerrit.reviewdb.client.Change , VAR_1 TYPE_2 ( create TYPE_1 
public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { return null ; } TYPE_2 . NameKey VAR_2 = getProject ( ) . METHOD_2 ( ) ; if ( VAR_2 == null ) { VAR_2 = VAR_3 ; } return VAR_4 . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . VAR_4 return } ; VAR_3 = VAR_2 { ) null == VAR_2 ( if ; ) ( METHOD_2 . ) ( getProject = VAR_2 NameKey . TYPE_2 } ; null return { ) VAR_1 ( if { ) ( METHOD_1 TYPE_1 public 
private static void METHOD_1 ( TYPE_1 label , TYPE_2 VAR_1 ) { if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_3 . METHOD_2 ( ) ; } VAR_2 . add ( VAR_1 ) ; } } ; ) VAR_1 ( add . VAR_2 } ; ) ( METHOD_2 . TYPE_3 = VAR_2 { ) null == ) VAR_2 ( ( if { ) VAR_1 TYPE_2 , label TYPE_1 ( METHOD_1 void static private 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) STRING_1 ( METHOD_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; } } ; ) STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
public final java.lang.String [ ] METHOD_1 ( ) { return new java.lang.String [ 0 ] ; } } ; ] 0 [ java.lang.String new return { ) ( METHOD_1 ] [ java.lang.String final public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; VAR_1 = java.util.Collections . METHOD_2 ( STRING_2 ) ; METHOD_3 ( in , VAR_2 class ) ; } } ; ) class VAR_2 , in ( METHOD_3 ; ) STRING_2 ( METHOD_2 . java.util.Collections = VAR_1 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { if ( 0 < = VAR_1 ) { return STRING_1 + VAR_1 ; } else { return java.lang.String . METHOD_2 ( VAR_1 ) ; } } } } ; ) VAR_1 ( METHOD_2 . java.lang.String return { else } ; VAR_1 + STRING_1 return { ) VAR_1 = < 0 ( if { ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String public 
public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 args , TYPE_4 VAR_1 ) { return new TYPE_5 ( args . db , VAR_2 , VAR_3 , VAR_1 ) ; } } ; ) VAR_1 , VAR_3 , VAR_2 , db . args ( TYPE_5 new return { ) VAR_1 TYPE_4 , args TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 static public 
public TYPE_1 . Account run ( TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { return db . METHOD_1 ( ) . METHOD_2 ( TYPE_3 . getAccountId ( ) ) ; } } ; ) ) ( getAccountId . TYPE_3 ( METHOD_2 . ) ( METHOD_1 . db return { OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 ( run Account . TYPE_1 public 
public void METHOD_1 ( ) { if ( message . getValue ( ) . METHOD_2 ( STRING_1 ) ) { for ( TYPE_1 r : VAR_1 ) { r . run ( ) ; } } } } } } ; ) ( run . r { ) VAR_1 : r TYPE_1 ( for { ) ) STRING_1 ( METHOD_2 . ) ( getValue . message ( if { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) { VAR_1 = null ; VAR_2 = null ; return this ; } } ; this return ; null = VAR_2 ; null = VAR_1 { ) ( METHOD_1 TYPE_1 public 
public void run ( ) { VAR_1 . info ( STRING_1 ) ; if ( ( VAR_2 ) ! = null ) { VAR_3 . delete ( ) ; } VAR_4 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_4 } ; ) ( delete . VAR_3 { ) null = ! ) VAR_2 ( ( if ; ) STRING_1 ( info . VAR_1 { ) ( run void public 
private java.util.Map < java.lang.String , java.util.List < TYPE_1 > > METHOD_1 ( java.lang.String path ) throws java.lang.Exception { return METHOD_2 ( path , new TYPE_2 < java.util.Map < java.lang.String , java.util.List < TYPE_1 > > > ( ) { } . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . } { ) ( > > > TYPE_1 < java.util.List , java.lang.String < java.util.Map < TYPE_2 new , path ( METHOD_2 return { java.lang.Exception throws ) path java.lang.String ( METHOD_1 > > TYPE_1 < java.util.List , java.lang.String < java.util.Map private 
public static void query ( java.lang.String query , TYPE_1 < TYPE_2 > VAR_1 , TYPE_3 < TYPE_4 > VAR_2 ) { TYPE_5 VAR_3 = TYPE_4 . METHOD_1 ( query ) ; TYPE_4 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_3 . get ( VAR_2 ) ; } } ; ) VAR_2 ( get . VAR_3 ; ) VAR_1 , VAR_3 ( METHOD_2 . TYPE_4 ; ) query ( METHOD_1 . TYPE_4 = VAR_3 TYPE_5 { ) VAR_2 > TYPE_4 < TYPE_3 , VAR_1 > TYPE_2 < TYPE_1 , query java.lang.String ( query void static public 
public static TYPE_1 . Change METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; } } ; ) topic . VAR_1 , VAR_2 , project . VAR_1 ( Change . TYPE_1 new return { ) VAR_1 TYPE_2 ( METHOD_1 Change . TYPE_1 static public 
private static TYPE_1 METHOD_1 ( int id ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) ; } } ; ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) id int ( METHOD_1 TYPE_1 static private 
void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , int line ) { METHOD_1 ( VAR_1 , VAR_2 , java.lang.String . METHOD_2 ( line ) , VAR_3 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_3 , ) line ( METHOD_2 . java.lang.String , VAR_2 , VAR_1 ( METHOD_1 { ) line int , VAR_2 int , VAR_1 TYPE_1 ( METHOD_1 void 
private boolean METHOD_1 ( ) { return ( VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) . METHOD_3 ( VAR_3 ) ) & & ( METHOD_4 ( ) . getProject ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; } } ; ) ) ( METHOD_6 . ) ( METHOD_5 . ) ( getProject . ) ( METHOD_4 ( & & ) ) VAR_3 ( METHOD_3 . ) ) ) VAR_2 ( + STRING_1 ( ( METHOD_2 . VAR_1 ( return { ) ( METHOD_1 boolean private 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 . ProjectConfig ( VAR_2 ) ; VAR_1 . METHOD_2 ( ) ; util . add ( VAR_1 ) ; } } ; ) VAR_1 ( add . util ; ) ( METHOD_2 . VAR_1 ; ) VAR_2 ( ProjectConfig . TYPE_1 new = VAR_1 ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
private static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String token ) { if ( token . METHOD_2 ( VAR_1 ) ) { VAR_2 = VAR_1 . length ( ) ; return true ; } else { return false ; } } } } ; false return { else } ; true return ; ) ( length . VAR_1 = VAR_2 { ) ) VAR_1 ( METHOD_2 . token ( if { ) token java.lang.String , VAR_1 java.lang.String ( METHOD_1 boolean static private 
public java.util.List < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return METHOD_1 ( db , patchSet , null ) ; } } ; ) null , patchSet , db ( METHOD_1 return { ) patchSet com.google.gerrit.reviewdb.client.PatchSet , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 > TYPE_1 < java.util.List public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; VAR_1 = new TYPE_1 ( false ) ; add ( VAR_1 ) ; } } ; ) VAR_1 ( add ; ) false ( TYPE_1 new = VAR_1 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( ( ( STRING_1 + ( VAR_2 . get ( ) ) ) + STRING_2 ) ) . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . ) ) STRING_2 + ) ) ) ( get . VAR_2 ( + STRING_1 ( ( ( METHOD_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 . Change update ( TYPE_1 . Change change ) { if ( change . getStatus ( ) . METHOD_1 ( ) ) { change . METHOD_2 ( ) ; change . METHOD_3 ( null ) ; return change ; } else { return null ; } } } } ; null return { else } ; change return ; ) null ( METHOD_3 . change ; ) ( METHOD_2 . change { ) ) ( METHOD_1 . ) ( getStatus . change ( if { ) change Change . TYPE_1 ( update Change . TYPE_1 public 
protected void METHOD_1 ( ) { METHOD_2 ( ) . to ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; } } ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_1 ( to . ) ( METHOD_2 { ) ( METHOD_1 void protected 
public boolean METHOD_1 ( TYPE_1 . Id VAR_1 ) { return ( METHOD_2 ( VAR_1 ) ) ! = ( VAR_2 ) ; } } ; ) VAR_2 ( = ! ) ) VAR_1 ( METHOD_2 ( return { ) VAR_1 Id . TYPE_1 ( METHOD_1 boolean public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > create ( ) { return new TYPE_2 < TYPE_1 > ( new TYPE_3 ( new TYPE_4 ( ) ) ) ; } } ; ) ) ) ( TYPE_4 new ( TYPE_3 new ( > TYPE_1 < TYPE_2 new return { ) ( create > TYPE_1 < TYPE_2 > TYPE_1 < static public 
protected TYPE_1 METHOD_1 ( java.lang.String path ) throws java.lang.Exception { TYPE_1 res = METHOD_2 ( path , STRING_1 , VAR_1 ) ; org.junit.Assert.assertEquals ( STRING_2 , res . METHOD_3 ( VAR_2 ) ) ; return res ; } } ; res return ; ) ) VAR_2 ( METHOD_3 . res , STRING_2 ( org.junit.Assert.assertEquals ; ) VAR_1 , STRING_1 , path ( METHOD_2 = res TYPE_1 { java.lang.Exception throws ) path java.lang.String ( METHOD_1 TYPE_1 protected 
public java.lang.String format ( TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_2 . create ( VAR_2 class . METHOD_1 ( ) ) . METHOD_2 ( VAR_1 , new TYPE_3 < java.lang.String , TYPE_4 > ( ) ) ; } } ; ) ) ( > TYPE_4 , java.lang.String < TYPE_3 new , VAR_1 ( METHOD_2 . ) ) ( METHOD_1 . class VAR_2 ( create . TYPE_2 return { java.io.IOException throws ) VAR_1 java.lang.String , cfg TYPE_1 ( format java.lang.String public 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String changeId ) throws TYPE_2 , TYPE_3 { return VAR_1 . get ( getKey ( null , METHOD_2 ( changeId ) ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ) changeId ( METHOD_2 , null ( getKey ( get . VAR_1 return { TYPE_3 , TYPE_2 throws ) changeId java.lang.String ( METHOD_1 > TYPE_1 < java.util.List private 
protected void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( db ) ; super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super ; ) db ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void protected 
public void METHOD_1 ( ) { VAR_1 . METHOD_1 ( VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 ( METHOD_1 . VAR_1 { ) ( METHOD_1 void public 
public org.eclipse.jgit.revwalk.RevCommit commit ( ) throws java.io.IOException { return commit ( TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) . create ( change . getProject ( ) ) ) ; } } ; ) ) ) ( getProject . change ( create . ) STRING_1 , VAR_1 ( METHOD_1 . TYPE_1 ( commit return { java.io.IOException throws ) ( commit org.eclipse.jgit.revwalk.RevCommit public 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String id , java.lang.String email ) throws java.lang.Exception { VAR_2 . create ( ) . insert ( db , TYPE_1 . METHOD_2 ( VAR_1 , id , user . getAccountId ( ) , email ) ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) ) email , ) ( getAccountId . user , id , VAR_1 ( METHOD_2 . TYPE_1 , db ( insert . ) ( create . VAR_2 { java.lang.Exception throws ) email java.lang.String , id java.lang.String , VAR_1 java.lang.String ( METHOD_1 void private 
public abstract TYPE_1 get ( TYPE_2 input , TYPE_3 args ) throws com.google.gwtorm.server.OrmException ; ; com.google.gwtorm.server.OrmException throws ) args TYPE_3 , input TYPE_2 ( get TYPE_1 abstract public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . in ( VAR_2 class ) ; bind ( VAR_3 class ) ; bind ( VAR_4 class ) . in ( VAR_5 ) ; bind ( VAR_6 class ) . in ( VAR_2 class ) ; } } ; ) class VAR_2 ( in . ) class VAR_6 ( bind ; ) VAR_5 ( in . ) class VAR_4 ( bind ; ) class VAR_3 ( bind ; ) class VAR_2 ( in . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected void METHOD_1 ( final int row ) { super . METHOD_1 ( row ) ; VAR_1 . METHOD_2 ( METHOD_3 ( row ) . getName ( ) ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ) ( getName . ) row ( METHOD_3 ( METHOD_2 . VAR_1 ; ) row ( METHOD_1 . super { ) row int final ( METHOD_1 void protected 
public void METHOD_1 ( final TYPE_1 VAR_1 , final boolean VAR_2 ) { VAR_3 . put ( TYPE_2 . id ( VAR_1 ) , VAR_2 ) ; } } ; ) VAR_2 , ) VAR_1 ( id . TYPE_2 ( put . VAR_3 { ) VAR_2 boolean final , VAR_1 TYPE_1 final ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( false ) ; METHOD_3 ( ) ; } } ; ) ( METHOD_3 ; ) false ( METHOD_2 { ) e TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName , TYPE_1 event ) ; ; ) event TYPE_1 , projectName com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 void public 
public void METHOD_1 ( ) { set ( VAR_1 , VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 , VAR_1 ( set { ) ( METHOD_1 void public 
public Project . NameKey METHOD_1 ( ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( VAR_1 . project ) ; } } ; ) project . VAR_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new return { ) ( METHOD_1 NameKey . Project public 
public TYPE_1 create ( TYPE_2 change ) ; ; ) change TYPE_2 ( create TYPE_1 public 
private void METHOD_1 ( TYPE_1 p ) throws com.google.gwtorm.server.OrmException , java.io.IOException , TYPE_2 { METHOD_2 ( p ) ; TYPE_3 . Result r = METHOD_3 ( STRING_1 ) ; r . METHOD_4 ( ) ; r . METHOD_5 ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( METHOD_5 . r ; ) ( METHOD_4 . r ; ) STRING_1 ( METHOD_3 = r Result . TYPE_3 ; ) p ( METHOD_2 { TYPE_2 , java.io.IOException , com.google.gwtorm.server.OrmException throws ) p TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String name = STRING_1 ; com.google.common.truth.Truth.assertThat ( name ) . isEqualTo ( VAR_1 . projects ( ) . create ( name ) . get ( ) . name ) ; } } ; ) name . ) ( get . ) name ( create . ) ( projects . VAR_1 ( isEqualTo . ) name ( com.google.common.truth.Truth.assertThat ; STRING_1 = name java.lang.String { java.lang.Exception throws ) ( METHOD_1 void public 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { throw new TYPE_3 ( VAR_2 ) ; } } ; ) VAR_2 ( TYPE_3 new throw { TYPE_3 throws ) VAR_1 TYPE_2 ( METHOD_1 > TYPE_1 < java.util.List public 
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , TYPE_2 > VAR_2 ) { VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_4 , null , VAR_5 , VAR_2 , false ) ) ; } } ; ) ) false , VAR_2 , VAR_5 , null , VAR_4 , VAR_1 ( METHOD_3 ( METHOD_2 . VAR_3 ; ) ( TYPE_3 new = VAR_3 { ) VAR_2 > TYPE_2 , java.lang.String < java.util.Map , VAR_1 TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) throws java.lang.Exception { assertEquals ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) , METHOD_2 ( STRING_1 ) ) ; METHOD_3 ( ) ; assertEquals ( ( STRING_1 + ( STRING_2 + STRING_4 ) ) , METHOD_2 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_2 , ) ) STRING_4 + STRING_2 ( + STRING_1 ( ( assertEquals ; ) ( METHOD_3 ; ) ) STRING_1 ( METHOD_2 , ) ) STRING_3 + STRING_2 ( + STRING_1 ( ( assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String VAR_2 ) { final TYPE_1 r = new TYPE_1 ( VAR_1 , VAR_2 ) ; r . METHOD_2 ( false ) ; r . METHOD_3 ( false ) ; VAR_3 . add ( r ) ; return r ; } } ; r return ; ) r ( add . VAR_3 ; ) false ( METHOD_3 . r ; ) false ( METHOD_2 . r ; ) VAR_2 , VAR_1 ( TYPE_1 new = r TYPE_1 final { ) VAR_2 java.lang.String , VAR_1 int ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( final TYPE_1 . NameKey branch ) { if ( METHOD_2 ( branch ) ) { try { METHOD_3 ( branch ) ; } finally { METHOD_4 ( branch ) ; } } } } } } ; ) branch ( METHOD_4 { finally } ; ) branch ( METHOD_3 { try { ) ) branch ( METHOD_2 ( if { ) branch NameKey . TYPE_1 final ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName , true ) ; } } } } ; ) true , projectName ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { java.io.IOException throws ) ( METHOD_1 void private 
public boolean METHOD_1 ( ) { return ( METHOD_2 ( ) ) & & ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ) ( METHOD_3 ( & & ) ) ( METHOD_2 ( return { ) ( METHOD_1 boolean public 
public void run ( ) { if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; } VAR_2 . METHOD_3 ( ) ; VAR_4 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . VAR_4 ; ) ( METHOD_3 . VAR_2 } ; ) VAR_3 ( METHOD_2 . VAR_4 ; ) VAR_3 ( METHOD_2 . VAR_2 { ) ) ) ( METHOD_1 . VAR_1 ( ! ( if { ) ( run void public 
public TYPE_1 . Id getKey ( ) { return changeId ; } } ; changeId return { ) ( getKey Id . TYPE_1 public 
public java.util.List < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) throws com.google.gwtorm.server.OrmException { return query ( TYPE_1 . METHOD_2 ( TYPE_2 . project ( projectName ) , TYPE_3 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . TYPE_3 , ) projectName ( project . TYPE_2 ( METHOD_2 . TYPE_1 ( query return { com.google.gwtorm.server.OrmException throws ) projectName com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < java.util.List public 
private java.lang.String METHOD_1 ( TYPE_1 git , TYPE_2 VAR_1 ) throws java.lang.Exception { TYPE_3 VAR_2 = VAR_3 . create ( db , VAR_1 , VAR_4 , VAR_5 , VAR_6 ) ; return VAR_2 . to ( git , STRING_1 ) . getChangeId ( ) ; } } ; ) ( getChangeId . ) STRING_1 , git ( to . VAR_2 return ; ) VAR_6 , VAR_5 , VAR_4 , VAR_1 , db ( create . VAR_3 = VAR_2 TYPE_3 { java.lang.Exception throws ) VAR_1 TYPE_2 , git TYPE_1 ( METHOD_1 java.lang.String private 
private void METHOD_1 ( TYPE_1 c , TYPE_2 msg ) { METHOD_2 ( c . notes , msg , true ) ; } } ; ) true , msg , notes . c ( METHOD_2 { ) msg TYPE_2 , c TYPE_1 ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { java.lang.String VAR_1 = user . METHOD_2 ( ) ; if ( TYPE_3 . METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } return VAR_3 . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . VAR_3 return } ; VAR_2 return { ) ) VAR_1 ( METHOD_3 . TYPE_3 ( if ; ) ( METHOD_2 . user = VAR_1 java.lang.String { ) user TYPE_2 ( METHOD_1 TYPE_1 public 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( VAR_2 , result . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . result , VAR_2 ( display . VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public static TYPE_1 METHOD_1 ( java.lang.String message , TYPE_2 log ) { return new TYPE_1 ( ) { public void error ( TYPE_3 error ) { log . error ( ( message + ( error . getMessage ( ) ) ) ) ; } } ; } } ; } } ; ) ) ) ) ( getMessage . error ( + message ( ( error . log { ) error TYPE_3 ( error void public { ) ( TYPE_1 new return { ) log TYPE_2 , message java.lang.String ( METHOD_1 TYPE_1 static public 
public void message ( java.lang.String msg ) { VAR_1 . METHOD_1 ( msg ) ; VAR_1 . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . VAR_1 ; ) msg ( METHOD_1 . VAR_1 { ) msg java.lang.String ( message void public 
public void METHOD_1 ( ) throws java.io.IOException , java.lang.Exception , TYPE_1 { java.lang.String changeId = METHOD_2 ( admin ) ; java.util.List < TYPE_2 > reviewers = METHOD_3 ( changeId , STRING_1 , INT_1 ) ; org.junit.Assert.assertEquals ( reviewers . size ( ) , 0 ) ; } } ; ) 0 , ) ( size . reviewers ( org.junit.Assert.assertEquals ; ) INT_1 , STRING_1 , changeId ( METHOD_3 = reviewers > TYPE_2 < java.util.List ; ) admin ( METHOD_2 = changeId java.lang.String { TYPE_1 , java.lang.Exception , java.io.IOException throws ) ( METHOD_1 void public 
public TYPE_1 < TYPE_2 > METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.lang.Exception { return TYPE_1 . METHOD_2 ( VAR_2 . get ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( get . VAR_2 ( METHOD_2 . TYPE_1 return { java.lang.Exception throws ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 > TYPE_2 < TYPE_1 public 
protected TYPE_1 METHOD_1 ( ) { return ( info ) ! = null ? new TYPE_2 ( info ) : new TYPE_2 ( id ) ; } } ; ) id ( TYPE_2 new : ) info ( TYPE_2 new ? null = ! ) info ( return { ) ( METHOD_1 TYPE_1 protected 
private org.eclipse.jgit.lib.Repository METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return repo ; } } ; repo return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 org.eclipse.jgit.lib.Repository private 
public TYPE_1 apply ( TYPE_2 rsrc , TYPE_3 input ) throws TYPE_4 , TYPE_5 { VAR_1 . index ( rsrc . getChange ( ) ) . get ( ) ; return TYPE_6 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . TYPE_6 return ; ) ( get . ) ) ( getChange . rsrc ( index . VAR_1 { TYPE_5 , TYPE_4 throws ) input TYPE_3 , rsrc TYPE_2 ( apply TYPE_1 public 
java.lang.String METHOD_1 ( int change , int ps ) ; ; ) ps int , change int ( METHOD_1 java.lang.String 
TYPE_1 create ( TYPE_2 project , java.lang.String name ) ; ; ) name java.lang.String , project TYPE_2 ( create TYPE_1 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) id ( get . VAR_1 ( METHOD_1 return { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( this ) ; } } ; ) this ( METHOD_3 . VAR_2 ; ) ( METHOD_2 = VAR_2 TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { input . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( true ) ; TYPE_2 . METHOD_3 ( VAR_2 , false ) ; } } ; ) false , VAR_2 ( METHOD_3 . TYPE_2 ; ) true ( METHOD_3 . VAR_1 ; ) false ( METHOD_2 . input { ) e TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( ps . getId ( ) ) . METHOD_3 ( magicBranch . topic ) ; } } ; ) topic . magicBranch ( METHOD_3 . ) ) ( getId . ps ( METHOD_2 . ctx { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void public 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 . NameKey VAR_1 ) throws java.lang.Exception { return TYPE_4 . METHOD_2 ( repo , VAR_1 . get ( ) ) ; } } ; ) ) ( get . VAR_1 , repo ( METHOD_2 . TYPE_4 return { java.lang.Exception throws ) VAR_1 NameKey . TYPE_3 ( METHOD_1 > TYPE_2 < TYPE_1 private 
public void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 ReceiveCommits ; java.util.Set VAR_2 ; on ( VAR_3 ) ; VAR_4 = VAR_1 ; } } ; VAR_1 = VAR_4 ; ) VAR_3 ( on ; VAR_2 java.util.Set ; ReceiveCommits TYPE_1 { ) VAR_1 java.lang.String ( METHOD_1 void public 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 args , java.lang.String label , int VAR_1 ) { if ( VAR_1 ! = 0 ) { return TYPE_3 . METHOD_2 ( args , label , VAR_1 ) ; } return TYPE_3 . METHOD_3 ( args , label ) ; } } ; ) label , args ( METHOD_3 . TYPE_3 return } ; ) VAR_1 , label , args ( METHOD_2 . TYPE_3 return { ) 0 = ! VAR_1 ( if { ) VAR_1 int , label java.lang.String , args TYPE_2 ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
public void METHOD_1 ( ) throws java.io.IOException { VAR_1 . METHOD_1 ( ) ; VAR_2 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_2 ; ) ( METHOD_1 . VAR_1 { java.io.IOException throws ) ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 event ) { event . METHOD_2 ( ) ; if ( ( event . METHOD_3 ( ) ) == ( VAR_1 ) ) { METHOD_4 ( ) ; } } } } ; ) ( METHOD_4 { ) ) VAR_1 ( == ) ) ( METHOD_3 . event ( ( if ; ) ( METHOD_2 . event { ) event TYPE_1 final ( METHOD_1 void public 
private void METHOD_1 ( TYPE_1 req ) throws java.lang.Exception { TYPE_2 res = new TYPE_2 ( ) ; servlet . METHOD_2 ( req , res ) ; org.junit.Assert.assertEquals ( VAR_1 , res . getStatus ( ) ) ; } } ; ) ) ( getStatus . res , VAR_1 ( org.junit.Assert.assertEquals ; ) res , req ( METHOD_2 . servlet ; ) ( TYPE_2 new = res TYPE_2 { java.lang.Exception throws ) req TYPE_1 ( METHOD_1 void private 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_1 ) ; VAR_1 = TYPE_2 . METHOD_3 ( VAR_1 ) ; return VAR_1 . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . VAR_1 return ; ) VAR_1 ( METHOD_3 . TYPE_2 = VAR_1 ; ) VAR_1 ( METHOD_2 . TYPE_1 = VAR_1 { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String static public 
public short METHOD_1 ( ) throws TYPE_1 { return ( ( short ) ( METHOD_2 ( ) . METHOD_3 ( STRING_1 , STRING_2 , 1 ) ) ) ; } } ; ) ) ) 1 , STRING_2 , STRING_1 ( METHOD_3 . ) ( METHOD_2 ( ) short ( ( return { TYPE_1 throws ) ( METHOD_1 short public 
public TYPE_1 < TYPE_2 > insert ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { return TYPE_3 . METHOD_1 ( null ) ; } } ; ) null ( METHOD_1 . TYPE_3 return { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( insert > TYPE_2 < TYPE_1 public 
protected void METHOD_1 ( TYPE_1 line ) throws java.io.IOException { VAR_1 . METHOD_2 ( line ) ; } } ; ) line ( METHOD_2 . VAR_1 { java.io.IOException throws ) line TYPE_1 ( METHOD_1 void protected 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > commit ( org.eclipse.jgit.lib.ObjectId id ) { return new TYPE_2 ( id ) ; } } ; ) id ( TYPE_2 new return { ) id org.eclipse.jgit.lib.ObjectId ( commit > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
public java.lang.String format ( java.lang.String projectName , TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException ; ; java.io.IOException throws ) VAR_1 java.lang.String , cfg TYPE_1 , projectName java.lang.String ( format java.lang.String public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 . changeId , VAR_3 , VAR_4 , VAR_5 ) ; assertThat ( VAR_6 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_6 ( assertThat ; ) VAR_5 , VAR_4 , VAR_3 , changeId . VAR_1 ( METHOD_3 ; ) VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) ! = null ) throw new TYPE_2 ( STRING_1 ) ; VAR_3 = VAR_1 ; } } ; VAR_1 = VAR_3 ; ) STRING_1 ( TYPE_2 new throw ) null = ! ) VAR_2 ( ( if { ) VAR_1 TYPE_1 ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 e ) { java.lang.String VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { METHOD_3 ( VAR_1 , false ) ; } } } } ; ) false , VAR_1 ( METHOD_3 { ) ) ) ( isEmpty . VAR_1 ( ! ( if ; ) ( METHOD_2 . VAR_2 = VAR_1 java.lang.String { ) e TYPE_1 ( METHOD_1 void 
public void onSuccess ( ) { TYPE_1 . display ( token , new TYPE_2 ( id , line ) ) ; } } ; ) ) line , id ( TYPE_2 new , token ( display . TYPE_1 { ) ( onSuccess void public 
private void METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 , STRING_1 , VAR_5 , VAR_6 ) ; } } ; ) VAR_6 , VAR_5 , STRING_1 , VAR_4 , VAR_3 ( TYPE_1 new = VAR_2 ; ) VAR_1 ( METHOD_2 { java.lang.Exception throws ) VAR_1 java.lang.String ( METHOD_1 void private 
public boolean METHOD_1 ( ) { return METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 return { ) ( METHOD_1 boolean public 
private java.lang.String METHOD_1 ( final int s , int e ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , null ) ; } return TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , s , e ) ; } } ; ) e , s , VAR_2 , VAR_1 ( METHOD_1 . TYPE_2 return } ; ) null , VAR_2 ( METHOD_2 . TYPE_1 = VAR_1 { ) null == ) VAR_1 ( ( if { ) e int , s int final ( METHOD_1 java.lang.String private 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( ( ! ( isEmpty ( ) ) ) , STRING_1 ) ; for ( TYPE_3 . ReceiveCommand cmd : commands . values ( ) ) { VAR_1 . METHOD_3 ( cmd ) ; } } } } ; ) cmd ( METHOD_3 . VAR_1 { ) ) ( values . commands : cmd ReceiveCommand . TYPE_3 ( for ; ) STRING_1 , ) ) ) ( isEmpty ( ! ( ( METHOD_2 . TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( ) { METHOD_2 ( ( ( VAR_1 ) + 1 ) , VAR_2 , VAR_3 , VAR_4 ) ; return ; } } ; return ; ) VAR_4 , VAR_3 , VAR_2 , ) 1 + ) VAR_1 ( ( ( METHOD_2 { ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; final TYPE_1 VAR_1 = new TYPE_1 ( repo ) ; VAR_1 . METHOD_3 ( in , out , err ) ; } } ; ) err , out , in ( METHOD_3 . VAR_1 ; ) repo ( TYPE_1 new = VAR_1 TYPE_1 final ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 void protected 
protected TYPE_1 < ? > METHOD_1 ( java.lang.String name , com.google.gerrit.reviewdb.client.Project.NameKey VAR_1 ) throws java.lang.Exception { return METHOD_1 ( name , VAR_1 , METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 , VAR_1 , name ( METHOD_1 return { java.lang.Exception throws ) VAR_1 com.google.gerrit.reviewdb.client.Project.NameKey , name java.lang.String ( METHOD_1 > ? < TYPE_1 protected 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Collections . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . java.util.Collections return { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName , java.lang.String VAR_1 ) throws TYPE_2 { return METHOD_2 ( projectName , VAR_1 ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) VAR_1 , projectName ( METHOD_2 return { TYPE_2 throws ) VAR_1 java.lang.String , projectName com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException , TYPE_2 { TYPE_3 . Result r = METHOD_2 ( ) ; VAR_1 . changes ( ) . id ( ( STRING_1 + ( r . getChangeId ( ) ) ) ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ) ) ) ( getChangeId . r ( + STRING_1 ( ( id . ) ( changes . VAR_1 ; ) ( METHOD_2 = r Result . TYPE_3 { TYPE_2 , java.io.IOException , TYPE_1 throws ) ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Change . Id id ) ; ; ) id Id . com.google.gerrit.reviewdb.client.Change , VAR_1 TYPE_2 ( create TYPE_1 
public void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new TYPE_1 . Key ( ( STRING_1 + id ) ) ; VAR_1 = new TYPE_2 ( id , 0 , false , null , 0 ) ; } } ; ) 0 , null , false , 0 , id ( TYPE_2 new = VAR_1 ; ) ) id + STRING_1 ( ( Key . TYPE_1 new = key { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void public 
void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( true , true ) ; } } ; ) true , true ( METHOD_2 . VAR_2 { ) VAR_1 boolean ( METHOD_1 void 
public void METHOD_1 ( ) throws java.lang.Exception { org.junit.Assert.assertEquals ( VAR_1 , METHOD_2 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_2 , VAR_1 ( org.junit.Assert.assertEquals { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 apply ( TYPE_2 VAR_1 ) { return ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_1 ( project , commit ) ; } } ; ) commit , project ( METHOD_1 . ) ) VAR_1 ( ) TYPE_3 ( ( return { ) VAR_1 TYPE_2 ( apply TYPE_1 public 
java.lang.String METHOD_1 ( int changeId ) { } } { ) changeId int ( METHOD_1 java.lang.String 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return new TYPE_1 ( VAR_1 , config ) . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . ) config , VAR_1 ( TYPE_1 new return { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { if ( METHOD_2 ( ) ) { return METHOD_3 ( ) . METHOD_1 ( ) ; } else { return null ; } } } } ; null return { else } ; ) ( METHOD_1 . ) ( METHOD_3 return { ) ) ( METHOD_2 ( if { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . change ( id ) . delete ( VAR_1 ) ; } } ; ) VAR_1 ( delete . ) id ( change . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; VAR_1 . projects ( ) . create ( in ) ; VAR_1 . projects ( ) . create ( in ) ; } } ; ) in ( create . ) ( projects . VAR_1 ; ) in ( create . ) ( projects . VAR_1 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { try { new TYPE_1 ( STRING_1 , STRING_2 ) . METHOD_2 ( STRING_1 ) ; METHOD_3 ( STRING_3 ) ; } catch ( TYPE_2 VAR_1 ) { } } } } { ) VAR_1 TYPE_2 ( catch } ; ) STRING_3 ( METHOD_3 ; ) STRING_1 ( METHOD_2 . ) STRING_2 , STRING_1 ( TYPE_1 new { try { ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws TYPE_1 , java.io.IOException , TYPE_2 { java.lang.String changeId = METHOD_2 ( ) ; METHOD_3 ( changeId , STRING_1 ) ; TYPE_3 . ChangeInfo c = getChange ( ( STRING_2 + changeId ) ) ; org.junit.Assert . METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 . org.junit.Assert ; ) ) changeId + STRING_2 ( ( getChange = c ChangeInfo . TYPE_3 ; ) STRING_1 , changeId ( METHOD_3 ; ) ( METHOD_2 = changeId java.lang.String { TYPE_2 , java.io.IOException , TYPE_1 throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; db . close ( ) ; } } ; ) ( close . db ; ) ( METHOD_2 . TYPE_1 { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; } super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super } ; null = VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 VAR_1 ) throws java.lang.Exception { return new TYPE_3 ( ) . < TYPE_1 > METHOD_2 ( METHOD_3 ( path , STRING_1 ) , VAR_1 ) ; } } ; ) VAR_1 , ) STRING_1 , path ( METHOD_3 ( METHOD_2 > TYPE_1 < . ) ( TYPE_3 new return { java.lang.Exception throws ) VAR_1 TYPE_2 , path java.lang.String ( METHOD_1 TYPE_1 > TYPE_1 < protected 
private void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( change , db ) ; } catch ( TYPE_2 . OrmException e ) { } } } } { ) e OrmException . TYPE_2 ( catch } ; ) db , change ( METHOD_2 . TYPE_1 { try { ) ( METHOD_1 void private 
public TYPE_1 notes ( ) { return METHOD_1 ( ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) ( METHOD_1 return { ) ( notes TYPE_1 public 
protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 ( ) ) ; super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super ; ) ) ( TYPE_1 new ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( id == null ) { return null ; } return METHOD_1 ( VAR_1 . get ( id ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) id ( get . VAR_1 ( METHOD_1 return } ; null return { ) null == id ( if { ) id com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 TYPE_1 public 
protected abstract Project . NameKey METHOD_1 ( ) ; ; ) ( METHOD_1 NameKey . Project abstract protected 
public void METHOD_1 ( ) throws TYPE_1 { METHOD_2 ( METHOD_3 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_3 ( METHOD_2 { TYPE_1 throws ) ( METHOD_1 void public 
private static TYPE_1 METHOD_1 ( int VAR_1 , java.lang.String id , java.lang.String name , TYPE_2 ... values ) { TYPE_1 type = new TYPE_1 ( name , TYPE_3 . METHOD_2 ( values ) ) ; type . METHOD_3 ( id ) ; return type ; } } ; type return ; ) id ( METHOD_3 . type ; ) ) values ( METHOD_2 . TYPE_3 , name ( TYPE_1 new = type TYPE_1 { ) values ... TYPE_2 , name java.lang.String , id java.lang.String , VAR_1 int ( METHOD_1 TYPE_1 static private 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( null , null , VAR_1 ) ; } } ; ) VAR_1 , null , null ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 static private 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 < ? > ) ( TYPE_2 . METHOD_2 ( STRING_1 ) ) ) ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) ) ) ) STRING_1 ( METHOD_2 . TYPE_2 ( ) > ? < TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat { java.lang.Exception throws ) ( METHOD_1 void public 
public boolean apply ( TYPE_1 in ) { com.google.gerrit.reviewdb.client.PatchSet.Id psId = VAR_1 . apply ( in ) ; return ( VAR_2 . apply ( psId ) ) & & ( patchSets . METHOD_1 ( psId ) ) ; } } ; ) ) psId ( METHOD_1 . patchSets ( & & ) ) psId ( apply . VAR_2 ( return ; ) in ( apply . VAR_1 = psId com.google.gerrit.reviewdb.client.PatchSet.Id { ) in TYPE_1 ( apply boolean public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > put ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } } ; ) ) name , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) name java.lang.String , VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( put > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
public final native void METHOD_1 ( TYPE_1 VAR_1 ) ; ; ) VAR_1 TYPE_1 ( METHOD_1 void native final public 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = - 1 ; super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super ; 1 - = VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void protected 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; display ( ) ; METHOD_2 ( false ) ; } } ; ) false ( METHOD_2 ; ) ( display ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( user ) ; } } ; ) user ( METHOD_3 . ) ( METHOD_2 return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( git , ( ( VAR_1 ) + STRING_1 ) ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; } } ; ) STRING_2 ( METHOD_3 . VAR_2 ; ) ) STRING_1 + ) VAR_1 ( ( , git ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private static void METHOD_1 ( int changeId , java.lang.String VAR_1 ) { org.junit.Assert.assertEquals ( new com.google.gerrit.reviewdb.client.Change . Id ( changeId ) , TYPE_1 . METHOD_2 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_2 . TYPE_1 , ) changeId ( Id . com.google.gerrit.reviewdb.client.Change new ( org.junit.Assert.assertEquals { ) VAR_1 java.lang.String , changeId int ( METHOD_1 void static private 
public static TYPE_1 assertThat ( TYPE_2 VAR_1 ) { return com.google.common.truth.Truth . METHOD_1 ( VAR_2 ) . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . ) VAR_2 ( METHOD_1 . com.google.common.truth.Truth return { ) VAR_1 TYPE_2 ( assertThat TYPE_1 static public 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( VAR_1 . METHOD_2 ( TYPE_3 . getName ( ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; return VAR_2 . get ( id ) ; } } ; ) id ( get . VAR_2 return ; ) ) ( METHOD_4 . ) ( METHOD_3 . ) ) ( getName . TYPE_3 ( METHOD_2 . VAR_1 ( com.google.gerrit.reviewdb.client.Account.Id new = id com.google.gerrit.reviewdb.client.Account.Id { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 private 
public TYPE_1 < TYPE_2 > delete ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { return TYPE_3 . METHOD_1 ( null ) ; } } ; ) null ( METHOD_1 . TYPE_3 return { java.io.IOException throws ) cd com.google.gerrit.server.query.change.ChangeData ( delete > TYPE_2 < TYPE_1 public 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; factory ( VAR_3 . Factory class ) ; factory ( VAR_4 . Factory class ) ; factory ( VAR_5 . Factory class ) ; } } ; ) class Factory . VAR_5 ( factory ; ) class Factory . VAR_4 ( factory ; ) class Factory . VAR_3 ( factory ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( ) throws TYPE_2 { try { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } catch ( TYPE_4 . OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e OrmException . TYPE_4 ( catch } ; ) ( METHOD_3 . ) ( METHOD_2 . TYPE_3 return { try { TYPE_2 throws ) ( METHOD_1 TYPE_1 protected 
public void METHOD_1 ( ) { servlet = new TYPE_1 ( VAR_1 ) ; id = TYPE_2 . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) . METHOD_5 ( ( STRING_1 + ( VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 ( + STRING_1 ( ( METHOD_5 . ) ) ( METHOD_4 . VAR_3 ( METHOD_3 . TYPE_3 ; ) VAR_2 ( METHOD_2 . TYPE_2 = id ; ) VAR_1 ( TYPE_1 new = servlet { ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 . Id project , java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_2 < java.util.List < TYPE_3 . Branch > > VAR_3 ) ; ; ) VAR_3 > > Branch . TYPE_3 < java.util.List < TYPE_2 , VAR_2 java.lang.String , VAR_1 java.lang.String , project Id . TYPE_1 ( METHOD_1 void 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . view ; ) ) ( getValue . e ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
public TYPE_1 . Result METHOD_1 ( TYPE_2 edit , java.lang.String file , TYPE_3 VAR_1 ) throws TYPE_4 , TYPE_5 , java.io.IOException { return METHOD_2 ( VAR_2 , edit , file , VAR_1 ) ; } } ; ) VAR_1 , file , edit , VAR_2 ( METHOD_2 return { java.io.IOException , TYPE_5 , TYPE_4 throws ) VAR_1 TYPE_3 , file java.lang.String , edit TYPE_2 ( METHOD_1 Result . TYPE_1 public 
private int METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { TYPE_1 r = VAR_2 . METHOD_2 ( VAR_1 ) ; r . METHOD_3 ( ) ; return r . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . r return ; ) ( METHOD_3 . r ; ) VAR_1 ( METHOD_2 . VAR_2 = r TYPE_1 { java.io.IOException throws ) VAR_1 java.lang.String ( METHOD_1 int private 
public TYPE_1 user ( TYPE_2 user ) { return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd ) ; } } ; ) cd ( METHOD_3 . ) user ( METHOD_2 : this ? ) user ( equals . ) ( METHOD_1 return { ) user TYPE_2 ( user TYPE_1 public 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) VAR_2 TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 
public void onSuccess ( TYPE_1 < TYPE_2 < TYPE_3 > > result ) { VAR_1 = TYPE_4 . METHOD_1 ( result . get ( path ) ) ; } } ; ) ) path ( get . result ( METHOD_1 . TYPE_4 = VAR_1 { ) result > > TYPE_3 < TYPE_2 < TYPE_1 ( onSuccess void public 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ( ! VAR_1 ? VAR_4 : VAR_5 ) ) ; } } ; ) ) VAR_5 : VAR_4 ? VAR_1 ! ( ( METHOD_4 . ) ( METHOD_3 . VAR_3 ; ) ) VAR_1 ! ( ( METHOD_2 . VAR_2 { ) VAR_1 boolean ( METHOD_1 void private 
public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet VAR_1 ) { if ( VAR_1 . METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( false ) ; } return null ; } } ; null return } ; ) false ( METHOD_2 . VAR_1 { ) ) ( METHOD_1 . VAR_1 ( if { ) VAR_1 com.google.gerrit.reviewdb.client.PatchSet ( update com.google.gerrit.reviewdb.client.PatchSet public 
private static TYPE_1 METHOD_1 ( java.lang.String name , int value ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; TYPE_3 . METHOD_2 ( value , 0 , VAR_1 ) ; return new TYPE_1 ( name , VAR_1 . get ( ) ) ; } } ; ) ) ( get . VAR_1 , name ( TYPE_1 new return ; ) VAR_1 , 0 , value ( METHOD_2 . TYPE_3 ; ) ( TYPE_2 new = VAR_1 TYPE_2 { ) value int , name java.lang.String ( METHOD_1 TYPE_1 static private 
public TYPE_1 changes ( ) { return changes . get ( ) ; } } ; ) ( get . changes return { ) ( changes TYPE_1 public 
public void run ( ) { if ( METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; } METHOD_4 ( ) ; } } ; ) ( METHOD_4 } ; ) ) ) ) ( METHOD_3 ( ! ( ( METHOD_2 . VAR_1 { ) ) ( METHOD_1 ( if { ) ( run void public 
public void onSuccess ( TYPE_1 . ChangeInfo result ) { TYPE_2 . display ( TYPE_3 . METHOD_1 ( new com.google.gerrit.reviewdb.client.PatchSet.Id ( result . METHOD_2 ( ) , 1 ) , STRING_1 ) ) ; } } ; ) ) STRING_1 , ) 1 , ) ( METHOD_2 . result ( com.google.gerrit.reviewdb.client.PatchSet.Id new ( METHOD_1 . TYPE_3 ( display . TYPE_2 { ) result ChangeInfo . TYPE_1 ( onSuccess void public 
public void METHOD_1 ( ) throws TYPE_1 . OrmException { db . create ( ) ; final TYPE_2 config = METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 , 1 , 1 ) ; } } ; ) 1 , 1 , VAR_2 , VAR_1 ( METHOD_3 ; ) ( METHOD_2 = config TYPE_2 final ; ) ( create . db { OrmException . TYPE_1 throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { final TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; final TYPE_1 r ; r = new TYPE_1 ( VAR_1 , new TYPE_3 ( this ) ) ; VAR_2 . METHOD_3 ( VAR_1 , r ) ; return r ; } } ; r return ; ) r , VAR_1 ( METHOD_3 . VAR_2 ; ) ) this ( TYPE_3 new , VAR_1 ( TYPE_1 new = r ; r TYPE_1 final ; ) STRING_1 ( METHOD_2 . VAR_2 = VAR_1 TYPE_2 final { ) ( METHOD_1 TYPE_1 private 
private void METHOD_1 ( TYPE_1 . HttpServletResponse res , TYPE_2 VAR_1 ) throws java.io.IOException { try ( TYPE_3 out = res . METHOD_2 ( ) ; TYPE_2 in = VAR_1 ) { TYPE_4 . METHOD_3 ( in , out ) ; } } } } ; ) out , in ( METHOD_3 . TYPE_4 { ) VAR_1 = in TYPE_2 ; ) ( METHOD_2 . res = out TYPE_3 ( try { java.io.IOException throws ) VAR_1 TYPE_2 , res HttpServletResponse . TYPE_1 ( METHOD_1 void private 
public final java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 ... args ) { if ( ( VAR_1 ! = null ) & & ( VAR_1 . isEmpty ( ) ) ) { VAR_1 = null ; } return METHOD_2 ( VAR_1 , VAR_2 , args ) ; } } ; ) args , VAR_2 , VAR_1 ( METHOD_2 return } ; null = VAR_1 { ) ) ) ( isEmpty . VAR_1 ( & & ) null = ! VAR_1 ( ( if { ) args ... TYPE_1 , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 java.lang.String final public 
java.util.Set < TYPE_1 > METHOD_1 ( com.google.gerrit.reviewdb.client.Change . Id changeId , java.lang.String query , java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > VAR_1 ) ; ; ) VAR_1 > com.google.gerrit.reviewdb.client.Account.Id < java.util.Set , query java.lang.String , changeId Id . com.google.gerrit.reviewdb.client.Change ( METHOD_1 > TYPE_1 < java.util.Set 
public void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_1 ( ) ; VAR_2 = null ; VAR_3 = null ; VAR_1 = null ; } } } } ; null = VAR_1 ; null = VAR_3 ; null = VAR_2 ; ) ( METHOD_1 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void public 
private static void METHOD_1 ( java.lang.StringBuilder VAR_1 , TYPE_1 VAR_2 , TYPE_2 value ) { TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 ) . append ( value ) . append ( CHAR_1 ) ; } } ; ) CHAR_1 ( append . ) value ( append . ) VAR_2 , VAR_1 ( METHOD_1 . TYPE_3 { ) value TYPE_2 , VAR_2 TYPE_1 , VAR_1 java.lang.StringBuilder ( METHOD_1 void static private 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 { return VAR_1 . get ( ) ; } } ; ) ( get . VAR_1 return { TYPE_3 throws ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( VAR_2 , true ) ; } } } } ; ) true , VAR_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { java.io.IOException throws ) ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( METHOD_5 . VAR_1 ; ) ) ( METHOD_4 . TYPE_2 , ) ( METHOD_3 . TYPE_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 private 
public TYPE_1 get ( ) { return new TYPE_1 ( VAR_1 , ui , VAR_2 ) ; } } ; ) VAR_2 , ui , VAR_1 ( TYPE_1 new return { ) ( get TYPE_1 public 
public final java.lang.String name ( ) { return name ; } } ; name return { ) ( name java.lang.String final public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new TYPE_1 ( args , change ) . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . ) change , args ( TYPE_1 new return { com.google.gwtorm.server.OrmException throws ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
public static boolean METHOD_1 ( java.lang.String ref ) { return ( ref . METHOD_2 ( VAR_1 ) ) & & ( ref . contains ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( contains . ref ( & & ) ) VAR_1 ( METHOD_2 . ref ( return { ) ref java.lang.String ( METHOD_1 boolean static public 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , id ) ; } } ; ) id , VAR_9 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 , VAR_1 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id ( create TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_5 ) ; METHOD_4 ( VAR_1 . changeId , VAR_4 , VAR_6 ) ; assertThat ( VAR_7 ) . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . ) VAR_7 ( assertThat ; ) VAR_6 , VAR_4 , changeId . VAR_1 ( METHOD_4 ; ) VAR_5 , VAR_4 ( METHOD_3 ; ) VAR_3 , VAR_2 ( METHOD_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( true ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) true ( METHOD_6 . VAR_1 ; ) ( METHOD_5 . VAR_1 ; ) ) ( METHOD_4 . TYPE_2 , ) ( METHOD_3 . TYPE_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 private 
private static void METHOD_1 ( final java.lang.String [ ] VAR_1 ) throws TYPE_1 , TYPE_2 . OrmException { TYPE_3 . METHOD_2 ( false ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) ; VAR_2 . METHOD_5 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_5 . VAR_2 ; ) ( close . ) ( METHOD_4 . ) ( METHOD_3 . TYPE_4 ; ) false ( METHOD_2 . TYPE_3 { OrmException . TYPE_2 , TYPE_1 throws ) VAR_1 ] [ java.lang.String final ( METHOD_1 void static private 
public boolean equals ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 instanceof TYPE_2 ) ) { return false ; } TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 ) ) ; return ( VAR_3 ) == ( VAR_4 ) ; } } ; ) VAR_4 ( == ) VAR_3 ( return ; ) ) VAR_1 ( ) TYPE_2 ( ( = VAR_2 TYPE_2 } ; false return { ) ) TYPE_2 instanceof VAR_1 ( ! ( if { ) VAR_1 TYPE_1 ( equals boolean public 
protected TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) { return view . get ( ) ; } } ; ) ( get . view return { ) ( METHOD_1 > TYPE_3 , TYPE_2 < TYPE_1 protected 
public static void get ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . get ( id , path , false , VAR_1 ) ; } } ; ) VAR_1 , false , path , id ( get . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , path java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( get void static public 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) { return java.util.Collections . METHOD_2 ( VAR_1 . values ( ) ) ; } } ; ) ) ( values . VAR_1 ( METHOD_2 . java.util.Collections return { ) ( METHOD_1 > TYPE_2 < TYPE_1 public 
private void METHOD_1 ( TYPE_1 . Result r , java.lang.String message ) throws java.lang.Exception { METHOD_1 ( r , message , false , false ) ; } } ; ) false , false , message , r ( METHOD_1 { java.lang.Exception throws ) message java.lang.String , r Result . TYPE_1 ( METHOD_1 void private 
private java.lang.String format ( java.lang.String s ) { if ( ( s . length ( ) ) < ( VAR_1 ) ) { return s ; } else { return s . METHOD_1 ( 0 , VAR_1 ) ; } } } } ; ) VAR_1 , 0 ( METHOD_1 . s return { else } ; s return { ) ) VAR_1 ( < ) ) ( length . s ( ( if { ) s java.lang.String ( format java.lang.String private 
public void METHOD_1 ( TYPE_1 c ) { METHOD_2 ( c ) ; TYPE_2 . METHOD_3 ( ( ( c . getStatus ( ) ) == ( VAR_1 ) ) , STRING_1 ) ; put . put ( TYPE_3 . key ( c ) , c ) ; } } ; ) c , ) c ( key . TYPE_3 ( put . put ; ) STRING_1 , ) ) VAR_1 ( == ) ) ( getStatus . c ( ( ( METHOD_3 . TYPE_2 ; ) c ( METHOD_2 { ) c TYPE_1 ( METHOD_1 void public 
private TYPE_1 . ChangeInfo METHOD_1 ( TYPE_2 . Result r ) throws java.lang.Exception { return get ( r . getChangeId ( ) , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , ) ( getChangeId . r ( get return { java.lang.Exception throws ) r Result . TYPE_2 ( METHOD_1 ChangeInfo . TYPE_1 private 
public TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( ) ; } } ; ) ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 public 
public static TYPE_1 create ( ) { final TYPE_1 r = new TYPE_1 ( ) ; r . singleton = new TYPE_1 . Key ( ) ; VAR_1 = ( INT_1 * INT_2 ) * INT_2 ; return r ; } } ; r return ; INT_2 * ) INT_2 * INT_1 ( = VAR_1 ; ) ( Key . TYPE_1 new = singleton . r ; ) ( TYPE_1 new = r TYPE_1 final { ) ( create TYPE_1 static public 
public static java.lang.String METHOD_1 ( final java.lang.String type , final TYPE_1 . Id id ) { return ( ( STRING_1 + type ) + STRING_2 ) + ( id . toString ( ) ) ; } } ; ) ) ( toString . id ( + ) STRING_2 + ) type + STRING_1 ( ( return { ) id Id . TYPE_1 final , type java.lang.String final ( METHOD_1 java.lang.String static public 
private void METHOD_1 ( final java.lang.String in ) throws java.lang.Exception { assertEquals ( in , METHOD_2 ( in ) ) ; } } ; ) ) in ( METHOD_2 , in ( assertEquals { java.lang.Exception throws ) in java.lang.String final ( METHOD_1 void private 
void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { VAR_1 . METHOD_3 ( STRING_1 ) ; } VAR_2 . METHOD_4 ( VAR_1 , this ) ; } } ; ) this , VAR_1 ( METHOD_4 . VAR_2 } ; ) STRING_1 ( METHOD_3 . VAR_1 { ) null == ) ) ( METHOD_2 . VAR_1 ( ( if { ) ( METHOD_1 void 
void insert ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; commit ( ) ; } } ; ) ( commit ; ) VAR_1 ( METHOD_1 . VAR_2 { java.io.IOException throws ) VAR_1 TYPE_1 ( insert void 
public TYPE_1 get ( ) { return METHOD_1 ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ; } } ; ) ) ) ( METHOD_3 . VAR_1 ( METHOD_2 ( METHOD_1 return { ) ( get TYPE_1 public 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . VAR_1 return { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . get ( ) . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException | com.google.gwtorm.server.OrmException ( catch } ; ) in , change ( apply . ) ( get . VAR_1 { try { TYPE_2 throws ) in TYPE_1 ( METHOD_1 void public 
protected void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; } } ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void protected 
public void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; ) VAR_1 ( METHOD_1 . super { ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > p = METHOD_2 ( STRING_1 ) ; METHOD_3 ( p , TYPE_2 . METHOD_4 ( p , STRING_2 ) ) ; } } ; ) ) STRING_2 , p ( METHOD_4 . TYPE_2 , p ( METHOD_3 ; ) STRING_1 ( METHOD_2 = p > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { try { VAR_2 . apply ( VAR_3 . METHOD_2 ( ) , VAR_1 ) ; } catch ( java.lang.Exception e ) { throw TYPE_2 . METHOD_3 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( METHOD_3 . TYPE_2 throw { ) e java.lang.Exception ( catch } ; ) VAR_1 , ) ( METHOD_2 . VAR_3 ( apply . VAR_2 { try { TYPE_1 throws ) VAR_1 java.lang.String ( METHOD_1 void public 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { org.junit.Assert.assertEquals ( ( STRING_1 + VAR_1 ) , VAR_2 ) ; } } ; ) VAR_2 , ) VAR_1 + STRING_1 ( ( org.junit.Assert.assertEquals { ) VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 void private 
private static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > METHOD_1 ( TYPE_2 < TYPE_3 < com.google.gerrit.server.query.change.ChangeData , ? > > VAR_1 ) { return new TYPE_1 < com.google.gerrit.server.query.change.ChangeData > ( true , VAR_1 ) ; } } ; ) VAR_1 , true ( > com.google.gerrit.server.query.change.ChangeData < TYPE_1 new return { ) VAR_1 > > ? , com.google.gerrit.server.query.change.ChangeData < TYPE_3 < TYPE_2 ( METHOD_1 > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static private 
private TYPE_1 METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : return TYPE_2 . METHOD_2 ( ) ; case VAR_3 : return TYPE_3 . METHOD_2 ( ) ; default : throw new TYPE_4 ( ( STRING_1 + ( VAR_1 ) ) ) ; } } } } ; ) ) ) VAR_1 ( + STRING_1 ( ( TYPE_4 new throw : default ; ) ( METHOD_2 . TYPE_3 return : VAR_3 case ; ) ( METHOD_2 . TYPE_2 return : VAR_2 case { ) VAR_1 ( switch { ) ( METHOD_1 TYPE_1 private 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_2 { TYPE_1 config = new TYPE_1 ( new TYPE_3 ( projectName , VAR_1 ) , new TYPE_4 ( ) , new TYPE_5 ( ) ) ; return config ; } } ; config return ; ) ) ( TYPE_5 new , ) ( TYPE_4 new , ) VAR_1 , projectName ( TYPE_3 new ( TYPE_1 new = config TYPE_1 { TYPE_2 throws ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 , TYPE_3 { return METHOD_2 ( METHOD_3 ( project ) ) ; } } ; ) ) project ( METHOD_3 ( METHOD_2 return { TYPE_3 , TYPE_2 throws ) ( METHOD_1 TYPE_1 public 
private static java.lang.String METHOD_1 ( java.lang.String project , java.lang.String input ) { return input . METHOD_1 ( STRING_1 , project ) ; } } ; ) project , STRING_1 ( METHOD_1 . input return { ) input java.lang.String , project java.lang.String ( METHOD_1 java.lang.String static private 
public void onSuccess ( final TYPE_1 result ) { TYPE_2 . display ( VAR_1 , true ) ; } } ; ) true , VAR_1 ( display . TYPE_2 { ) result TYPE_1 final ( onSuccess void public 
private void METHOD_1 ( ) throws java.io.IOException { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( projectName ) ; } } } } ; ) projectName ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { java.io.IOException throws ) ( METHOD_1 void private 
protected abstract void METHOD_1 ( ) ; ; ) ( METHOD_1 void abstract protected 
private TYPE_1 METHOD_1 ( java.lang.String name ) throws java.lang.Exception { TYPE_2 req = TYPE_2 . METHOD_2 ( name ) ; com.google.gerrit.reviewdb.client.Account.Id id = VAR_1 . METHOD_3 ( req ) . getAccountId ( ) ; return VAR_2 . create ( TYPE_3 . of ( db ) , id ) ; } } ; ) id , ) db ( of . TYPE_3 ( create . VAR_2 return ; ) ( getAccountId . ) req ( METHOD_3 . VAR_1 = id com.google.gerrit.reviewdb.client.Account.Id ; ) name ( METHOD_2 . TYPE_2 = req TYPE_2 { java.lang.Exception throws ) name java.lang.String ( METHOD_1 TYPE_1 private 
static TYPE_1 METHOD_1 ( final java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , null , VAR_1 , VAR_4 , VAR_5 . Collections < TYPE_2 > METHOD_2 ( ) , 0 , 0 ) ; } } ; ) 0 , 0 , ) ( METHOD_2 > TYPE_2 < Collections . VAR_5 , VAR_4 , VAR_1 , null , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String final ( METHOD_1 TYPE_1 static 
public boolean METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { TYPE_1 VAR_1 = VAR_2 . create ( VAR_3 , account ) ; return rsrc . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; } } ; ) ( METHOD_4 . ) VAR_1 ( METHOD_3 . ) ( METHOD_2 . rsrc return ; ) account , VAR_3 ( create . VAR_2 = VAR_1 TYPE_1 { com.google.gwtorm.server.OrmException throws ) account com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 boolean public 
public void onSuccess ( java.lang.String result ) { TYPE_1 edit = new TYPE_1 ( id , result , path , VAR_1 . METHOD_1 ( ) , VAR_2 , VAR_3 ) ; edit . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . edit ; ) VAR_3 , VAR_2 , ) ( METHOD_1 . VAR_1 , path , result , id ( TYPE_1 new = edit TYPE_1 { ) result java.lang.String ( onSuccess void public 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) { VAR_1 = repo . METHOD_3 ( ) . METHOD_4 ( ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ( METHOD_4 . ) ( METHOD_3 . repo = VAR_1 { ) null == ) VAR_1 ( ( if ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( ) { if ( ( VAR_1 ) ! = ( - 1 ) ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; VAR_2 . METHOD_2 ( false ) ; VAR_1 = - 1 ; } } } } ; 1 - = VAR_1 ; ) false ( METHOD_2 . VAR_2 ; ) VAR_1 ( get . VAR_3 = VAR_2 TYPE_1 { ) ) 1 - ( = ! ) VAR_1 ( ( if { ) ( METHOD_1 void private 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( TYPE_3 . css ( ) . METHOD_3 ( ) ) ; VAR_2 . add ( VAR_1 ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) VAR_1 ( add . VAR_2 ; ) ) ( METHOD_3 . ) ( css . TYPE_3 ( METHOD_2 . VAR_1 ; ) ( TYPE_2 new = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 protected 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { VAR_1 . METHOD_2 ( STRING_1 ) ; return VAR_1 . apply ( revision ) ; } } ; ) revision ( apply . VAR_1 return ; ) STRING_1 ( METHOD_2 . VAR_1 { TYPE_2 throws ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_3 . getKey ( ) . get ( ) ) ; TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 , null , STRING_1 ) ; } } ; ) STRING_1 , null , VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 ; ) ) ( get . ) ( getKey . VAR_3 , VAR_3 , VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Change change ) ; ; ) change com.google.gerrit.reviewdb.client.Change , VAR_1 TYPE_2 ( create TYPE_1 public 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = new TYPE_2 ( new TYPE_3 ( STRING_1 ) ) ; repo = new TYPE_4 < TYPE_1 > ( r ) ; servlet = TYPE_5 . create ( repo ) ; } } ; ) repo ( create . TYPE_5 = servlet ; ) r ( > TYPE_1 < TYPE_4 new = repo ; ) ) STRING_1 ( TYPE_3 new ( TYPE_2 new = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( ) { VAR_1 = true ; if ( ( table ) ! = null ) { table . METHOD_2 ( true ) ; } } } } ; ) true ( METHOD_2 . table { ) null = ! ) table ( ( if ; true = VAR_1 { ) ( METHOD_1 void 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_2 return { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String protected 
TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) ; ; ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 TYPE_1 
public void METHOD_1 ( TYPE_1 in ) throws TYPE_2 { try { VAR_1 . apply ( account , in ) ; } catch ( java.io.IOException | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e TYPE_3 | java.io.IOException ( catch } ; ) in , account ( apply . VAR_1 { try { TYPE_2 throws ) in TYPE_1 ( METHOD_1 void public 
java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) ; ; ) VAR_1 TYPE_1 ( METHOD_1 java.lang.String 
public java.lang.String format ( TYPE_1 cfg , java.lang.String VAR_1 ) throws java.io.IOException ; ; java.io.IOException throws ) VAR_1 java.lang.String , cfg TYPE_1 ( format java.lang.String public 
private com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval VAR_1 , TYPE_1 ctl ) { com.google.gerrit.reviewdb.client . PatchSetApproval VAR_2 = new com.google.gerrit.reviewdb.client . PatchSetApproval ( VAR_1 . METHOD_2 ( ) , VAR_1 ) ; VAR_2 . METHOD_3 ( ctl . getChange ( ) ) ; return VAR_2 ; } } ; VAR_2 return ; ) ) ( getChange . ctl ( METHOD_3 . VAR_2 ; ) VAR_1 , ) ( METHOD_2 . VAR_1 ( PatchSetApproval . com.google.gerrit.reviewdb.client new = VAR_2 PatchSetApproval . com.google.gerrit.reviewdb.client { ) ctl TYPE_1 , VAR_1 PatchSetApproval . com.google.gerrit.reviewdb.client ( METHOD_1 PatchSetApproval . com.google.gerrit.reviewdb.client private 
private static final native void METHOD_1 ( java.lang.String r , java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String , r java.lang.String ( METHOD_1 void native final static private 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { return METHOD_2 ( repo , commit , null , null , null , null ) ; } } ; ) null , null , null , null , commit , repo ( METHOD_2 return { java.lang.Exception throws ) commit org.eclipse.jgit.revwalk.RevCommit , repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
private static TYPE_1 METHOD_1 ( final TYPE_2 cfg ) { if ( TYPE_3 . METHOD_2 ( ) ) { return VAR_1 ; } return TYPE_4 . METHOD_3 ( cfg , STRING_1 , null , STRING_2 , VAR_2 ) ; } } ; ) VAR_2 , STRING_2 , null , STRING_1 , cfg ( METHOD_3 . TYPE_4 return } ; VAR_1 return { ) ) ( METHOD_2 . TYPE_3 ( if { ) cfg TYPE_2 final ( METHOD_1 TYPE_1 static private 
protected void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } } ; ) repo ( create . TYPE_5 = servlet ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void protected 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_3 , change , VAR_1 ) ; } } ; ) VAR_1 , change , VAR_3 , VAR_2 ( TYPE_1 new return { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id , change com.google.gerrit.reviewdb.client.Change ( create TYPE_1 public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String VAR_1 , TYPE_1 VAR_2 , TYPE_2 < TYPE_1 > VAR_3 ) { TYPE_3 . revision ( id , STRING_1 ) . id ( VAR_1 ) . put ( VAR_2 , VAR_3 ) ; } } ; ) VAR_3 , VAR_2 ( put . ) VAR_1 ( id . ) STRING_1 , id ( revision . TYPE_3 { ) VAR_3 > TYPE_1 < TYPE_2 , VAR_2 TYPE_1 , VAR_1 java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( METHOD_1 void static public 
private boolean METHOD_1 ( TYPE_1 . ReviewDb db ) throws TYPE_2 . OrmException { return ( METHOD_2 ( ) ) || ( METHOD_3 ( db ) ) ; } } ; ) ) db ( METHOD_3 ( || ) ) ( METHOD_2 ( return { OrmException . TYPE_2 throws ) db ReviewDb . TYPE_1 ( METHOD_1 boolean private 
TYPE_1 METHOD_1 ( TYPE_2 cfg ) throws java.io.IOException { TYPE_1 VAR_1 = TYPE_3 . get ( cfg . METHOD_2 ( ) . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( VAR_1 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_1 ( METHOD_4 . TYPE_4 ; ) ) ( METHOD_3 . ) ( METHOD_2 . cfg ( get . TYPE_3 = VAR_1 TYPE_1 { java.io.IOException throws ) cfg TYPE_2 ( METHOD_1 TYPE_1 
private static void a ( final TYPE_1 r , final java.lang.String VAR_1 ) { TYPE_2 . METHOD_1 ( r , STRING_1 , VAR_1 ) ; } } ; ) VAR_1 , STRING_1 , r ( METHOD_1 . TYPE_2 { ) VAR_1 java.lang.String final , r TYPE_1 final ( a void static private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < com.google.gerrit.server.query.change.ChangeData > in = METHOD_2 ( STRING_1 ) ; assertEquals ( query ( in ) , METHOD_3 ( in ) ) ; } } ; ) ) in ( METHOD_3 , ) in ( query ( assertEquals ; ) STRING_1 ( METHOD_2 = in > com.google.gerrit.server.query.change.ChangeData < TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 , STRING_1 ) ; METHOD_2 ( VAR_1 , VAR_2 , STRING_2 ) ; METHOD_3 ( STRING_3 , STRING_4 , STRING_5 , STRING_6 , STRING_7 ) ; } } ; ) STRING_7 , STRING_6 , STRING_5 , STRING_4 , STRING_3 ( METHOD_3 ; ) STRING_2 , VAR_2 , VAR_1 ( METHOD_2 ; ) STRING_1 , VAR_2 , VAR_1 ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( ) . to ( VAR_3 class ) ; } } ; ) class VAR_3 ( to . ) ( METHOD_2 ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_2 , project , STRING_1 , false , VAR_3 ) ; } } ; ) VAR_3 , false , STRING_1 , project , VAR_2 ( METHOD_2 { java.lang.Exception throws ) VAR_1 TYPE_1 ( METHOD_1 void private 
private TYPE_1 METHOD_1 ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > p ) throws TYPE_3 { return new TYPE_1 ( index , p ) ; } } ; ) p , index ( TYPE_1 new return { TYPE_3 throws ) p > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( METHOD_1 TYPE_1 private 
public static java.lang.String METHOD_1 ( java.lang.String query , java.lang.String VAR_1 ) { query = TYPE_1 . METHOD_2 ( query ) . METHOD_3 ( STRING_1 , STRING_2 ) ; return ( ( STRING_3 + query ) + STRING_4 ) + VAR_1 ; } } ; VAR_1 + ) STRING_4 + ) query + STRING_3 ( ( return ; ) STRING_2 , STRING_1 ( METHOD_3 . ) query ( METHOD_2 . TYPE_1 = query { ) VAR_1 java.lang.String , query java.lang.String ( METHOD_1 java.lang.String static public 
public void onSuccess ( final TYPE_1 result ) { VAR_1 = result . config ; if ( ( VAR_2 ) ! = null ) { VAR_3 = VAR_2 ; TYPE_2 . METHOD_1 ( ) ; } METHOD_2 ( VAR_4 ) ; } } ; ) VAR_4 ( METHOD_2 } ; ) ( METHOD_1 . TYPE_2 ; VAR_2 = VAR_3 { ) null = ! ) VAR_2 ( ( if ; config . result = VAR_1 { ) result TYPE_1 final ( onSuccess void public 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( VAR_1 == ( VAR_2 ) ) || ( VAR_3 . contains ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( contains . VAR_3 ( || ) ) VAR_2 ( == VAR_1 ( return { ) VAR_1 TYPE_1 ( METHOD_1 boolean public 
private boolean METHOD_1 ( final TYPE_1 . Change VAR_1 ) { return VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) . contains ( VAR_1 . getId ( ) ) ; } } ; ) ) ( getId . VAR_1 ( contains . ) ( METHOD_3 . ) ( METHOD_2 . VAR_2 return { ) VAR_1 Change . TYPE_1 final ( METHOD_1 boolean private 
public void METHOD_1 ( ) { this . VAR_1 = true ; METHOD_2 ( ) ; } } ; ) ( METHOD_2 ; true = VAR_1 . this { ) ( METHOD_1 void public 
public static void METHOD_1 ( int id , TYPE_1 < TYPE_2 < TYPE_3 > > VAR_1 ) { TYPE_4 . METHOD_2 ( id , STRING_1 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_1 , id ( METHOD_2 . TYPE_4 { ) VAR_1 > > TYPE_3 < TYPE_2 < TYPE_1 , id int ( METHOD_1 void static public 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = new TYPE_3 ( ) ; } this . VAR_1 = VAR_1 ; return this ; } } ; this return ; VAR_1 = VAR_1 . this } ; ) ( TYPE_3 new = VAR_1 { ) null == VAR_1 ( if { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
private void METHOD_1 ( final java.lang.String n ) throws TYPE_1 . OrmException { if ( VAR_1 . contains ( n ) ) { throw new TYPE_1 . OrmException ( ( ( STRING_1 + n ) + STRING_2 ) ) ; } } } } ; ) ) STRING_2 + ) n + STRING_1 ( ( ( OrmException . TYPE_1 new throw { ) ) n ( contains . VAR_1 ( if { OrmException . TYPE_1 throws ) n java.lang.String final ( METHOD_1 void private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , VAR_1 ( METHOD_2 . TYPE_3 = VAR_1 . this { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public boolean METHOD_1 ( TYPE_1 ui , java.lang.String url ) { return ui . METHOD_2 ( false , STRING_1 , url ) ; } } ; ) url , STRING_1 , false ( METHOD_2 . ui return { ) url java.lang.String , ui TYPE_1 ( METHOD_1 boolean public 
public abstract TYPE_1 < ? > METHOD_1 ( com.google.gerrit.server.query.change.ChangeData cd ) ; ; ) cd com.google.gerrit.server.query.change.ChangeData ( METHOD_1 > ? < TYPE_1 abstract public 
public java.util.List < TYPE_1 > METHOD_1 ( ) throws TYPE_2 { try { return VAR_1 . apply ( change ) . value ( ) ; } catch ( java.lang.Exception e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.lang.Exception ( catch } ; ) ( value . ) change ( apply . VAR_1 return { try { TYPE_2 throws ) ( METHOD_1 > TYPE_1 < java.util.List public 
public static TYPE_1 METHOD_1 ( ) { return TYPE_1 . create ( 0 , 0 , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , 0 , 0 ( create . TYPE_1 return { ) ( METHOD_1 TYPE_1 static public 
private TYPE_1 . ProjectConfig METHOD_1 ( boolean VAR_1 ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , VAR_1 ) ; } } ; ) VAR_1 , STRING_1 ( METHOD_1 return { java.lang.Exception throws ) VAR_1 boolean ( METHOD_1 ProjectConfig . TYPE_1 private 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . VAR_2 , ) ( METHOD_3 . VAR_2 , VAR_1 ( METHOD_2 . TYPE_1 return { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String protected 
public static TYPE_1 reviewers ( int id ) { return TYPE_2 . change ( id ) . view ( STRING_1 ) ; } } ; ) STRING_1 ( view . ) id ( change . TYPE_2 return { ) id int ( reviewers TYPE_1 static public 
public TYPE_1 create ( final TYPE_2 VAR_1 , final com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_1 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , id ) ; } } ; ) id , VAR_10 , VAR_9 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_1 , VAR_2 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id final , VAR_1 TYPE_2 final ( create TYPE_1 public 
public void onSuccess ( TYPE_1 result ) { VAR_1 . display ( result ) ; } } ; ) result ( display . VAR_1 { ) result TYPE_1 ( onSuccess void public 
public static TYPE_1 create ( java.lang.String VAR_1 , java.lang.String id , com.google.gerrit.reviewdb.client.Account.Id VAR_2 ) { return new TYPE_2 ( TYPE_3 . create ( VAR_1 , id ) , VAR_2 , null , null ) ; } } ; ) null , null , VAR_2 , ) id , VAR_1 ( create . TYPE_3 ( TYPE_2 new return { ) VAR_2 com.google.gerrit.reviewdb.client.Account.Id , id java.lang.String , VAR_1 java.lang.String ( create TYPE_1 static public 
private void METHOD_1 ( ) { TYPE_1 . HttpServletResponse VAR_1 = METHOD_2 ( VAR_2 . HttpServletResponse class ) ; servlet . METHOD_3 ( null , VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_5 . ) VAR_1 ( METHOD_4 . TYPE_2 ; ) VAR_1 , null ( METHOD_3 . servlet ; ) class HttpServletResponse . VAR_2 ( METHOD_2 = VAR_1 HttpServletResponse . TYPE_1 { ) ( METHOD_1 void private 
private static void METHOD_1 ( final java.lang.String [ ] VAR_1 ) throws TYPE_1 , TYPE_2 . OrmException { TYPE_3 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( ) . close ( ) ; VAR_2 . METHOD_5 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_5 . VAR_2 ; ) ( close . ) ( METHOD_4 . ) ( METHOD_3 . TYPE_4 ; ) ( METHOD_2 . TYPE_3 { OrmException . TYPE_2 , TYPE_1 throws ) VAR_1 ] [ java.lang.String final ( METHOD_1 void static private 
public void METHOD_1 ( ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( TYPE_1 . METHOD_2 ( null ) ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) ) null ( METHOD_2 . TYPE_1 ( com.google.common.truth.Truth.assertThat { java.lang.Exception throws ) ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 rsrc , TYPE_3 user ) ; ; ) user TYPE_3 , rsrc TYPE_2 ( create TYPE_1 
public static TYPE_1 . Change METHOD_1 ( TYPE_2 . ChangeInfo VAR_1 ) { return new TYPE_1 . Change ( VAR_1 . project , VAR_2 , VAR_1 . topic ) ; } } ; ) topic . VAR_1 , VAR_2 , project . VAR_1 ( Change . TYPE_1 new return { ) VAR_1 ChangeInfo . TYPE_2 ( METHOD_1 Change . TYPE_1 static public 
public TYPE_1 < TYPE_2 , ? > create ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { if ( id . equals ( STRING_1 ) ) { return VAR_2 . get ( ) ; } throw new TYPE_5 ( id ) ; } } ; ) id ( TYPE_5 new throw } ; ) ( get . VAR_2 return { ) ) STRING_1 ( equals . id ( if { TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( create > ? , TYPE_2 < TYPE_1 public 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 r = label ( VAR_1 . METHOD_2 ( ) . get ( ) ) ; return ( ( r . METHOD_3 ( ) ) < 0 ) || ( ( r . METHOD_4 ( ) ) > 0 ) ; } } ; ) 0 > ) ) ( METHOD_4 . r ( ( || ) 0 < ) ) ( METHOD_3 . r ( ( return ; ) ) ( get . ) ( METHOD_2 . VAR_1 ( label = r TYPE_2 { ) VAR_1 TYPE_1 ( METHOD_1 boolean private 
public void METHOD_1 ( ) { METHOD_2 ( STRING_1 ) . to ( VAR_1 class ) ; } } ; ) class VAR_1 ( to . ) STRING_1 ( METHOD_2 { ) ( METHOD_1 void public 
public void onSuccess ( final TYPE_1 result ) { VAR_1 . display ( result ) ; VAR_1 . METHOD_1 ( true ) ; } } ; ) true ( METHOD_1 . VAR_1 ; ) result ( display . VAR_1 { ) result TYPE_1 final ( onSuccess void public 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; factory ( VAR_2 . Factory class ) ; } } ; ) class Factory . VAR_2 ( factory ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void protected 
protected void METHOD_1 ( int row , int VAR_1 ) { if ( ( TYPE_1 . METHOD_2 ( row ) ) ! = null ) { METHOD_3 ( row ) ; } } } } ; ) row ( METHOD_3 { ) null = ! ) ) row ( METHOD_2 . TYPE_1 ( ( if { ) VAR_1 int , row int ( METHOD_1 void protected 
public TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { return VAR_2 . create ( METHOD_2 ( ) , VAR_1 ) . METHOD_3 ( ) ; } throw new TYPE_2 ( STRING_1 ) ; } } ; ) STRING_1 ( TYPE_2 new throw } ; ) ( METHOD_3 . ) VAR_1 , ) ( METHOD_2 ( create . VAR_2 return { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( TYPE_1 event ) { METHOD_2 ( ( ! ( METHOD_3 ( ) ) ) ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ) ) ) ( METHOD_3 ( ! ( ( METHOD_2 { ) event TYPE_1 ( METHOD_1 void public 
com.google.gerrit.reviewdb.client . PatchSetApproval METHOD_1 ( TYPE_1 c ) { return VAR_1 . METHOD_1 ( db . get ( ) , c . notes , VAR_2 ) ; } } ; ) VAR_2 , notes . c , ) ( get . db ( METHOD_1 . VAR_1 return { ) c TYPE_1 ( METHOD_1 PatchSetApproval . com.google.gerrit.reviewdb.client 
public static java.lang.String METHOD_1 ( java.lang.String ref ) { return ( ref . METHOD_2 ( VAR_1 ) ? STRING_1 : VAR_2 ) + ref ; } } ; ref + ) VAR_2 : STRING_1 ? ) VAR_1 ( METHOD_2 . ref ( return { ) ref java.lang.String ( METHOD_1 java.lang.String static public 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return new TYPE_1 ( VAR_2 , VAR_1 ) ; } } ; ) VAR_1 , VAR_2 ( TYPE_1 new return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) . in ( VAR_3 ) ; bind ( VAR_4 class ) ; factory ( VAR_5 class ) ; bind ( VAR_6 class ) ; bind ( VAR_7 . Factory class ) ; } } ; ) class Factory . VAR_7 ( bind ; ) class VAR_6 ( bind ; ) class VAR_5 ( factory ; ) class VAR_4 ( bind ; ) VAR_3 ( in . ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( getChange ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( getChange ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; factory ( VAR_3 . Factory class ) ; factory ( VAR_4 . Factory class ) ; } } ; ) class Factory . VAR_4 ( factory ; ) class Factory . VAR_3 ( factory ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected TYPE_1 METHOD_1 ( com.google.gerrit.server.query.change.ChangeData VAR_1 ) throws com.google.gwtorm.server.OrmException { return TYPE_2 . get ( VAR_1 , null ) ; } } ; ) null , VAR_1 ( get . TYPE_2 return { com.google.gwtorm.server.OrmException throws ) VAR_1 com.google.gerrit.server.query.change.ChangeData ( METHOD_1 TYPE_1 protected 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . create ( ) ; VAR_3 . METHOD_2 ( new TYPE_4 ( VAR_2 ) , VAR_1 ) ; } } ; ) VAR_1 , ) VAR_2 ( TYPE_4 new ( METHOD_2 . VAR_3 ; ) ( create . TYPE_3 = VAR_3 TYPE_2 { ) VAR_2 java.lang.String , VAR_1 TYPE_1 ( METHOD_1 void private 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > delete ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } } ; ) ) name , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) name java.lang.String , VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( delete > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = VAR_1 . put ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) STRING_1 ( put . VAR_1 = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { commands = VAR_1 ; } } ; VAR_1 = commands { ) VAR_1 > TYPE_1 < java.util.List ( METHOD_1 void public 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( ( VAR_1 == ( VAR_2 ) ) & & ( base . METHOD_2 ( ) ) ) || ( base . METHOD_3 ( ) ) ) { return VAR_3 ; } return VAR_4 ; } } ; VAR_4 return } ; VAR_3 return { ) ) ) ( METHOD_3 . base ( || ) ) ) ( METHOD_2 . base ( & & ) ) VAR_2 ( == VAR_1 ( ( ( if { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 
private TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { TYPE_2 r = new TYPE_3 ( cd ) . METHOD_1 ( ) ; if ( ( r . status ) ! = ( VAR_1 ) ) { return null ; } return r . type ; } } ; type . r return } ; null return { ) ) VAR_1 ( = ! ) status . r ( ( if ; ) ( METHOD_1 . ) cd ( TYPE_3 new = r TYPE_2 { com.google.gwtorm.server.OrmException throws ) cd com.google.gerrit.server.query.change.ChangeData , change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 private 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( METHOD_2 ( VAR_1 ) ) ? 1 : 0 ; int r = ( METHOD_2 ( VAR_2 ) ) ? 1 : 0 ; return VAR_3 - r ; } } ; r - VAR_3 return ; 0 : 1 ? ) ) VAR_2 ( METHOD_2 ( = r int ; 0 : 1 ? ) ) VAR_1 ( METHOD_2 ( = VAR_3 int { ) VAR_2 TYPE_1 , VAR_1 TYPE_1 ( METHOD_1 int public 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( VAR_1 , true ) ; } } ; ) true , VAR_1 ( display . TYPE_2 { ) event TYPE_1 final ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 . NameKey VAR_1 , TYPE_1 . NameKey VAR_2 ) throws java.io.IOException ; ; java.io.IOException throws ) VAR_2 NameKey . TYPE_1 , VAR_1 NameKey . TYPE_1 ( METHOD_1 void 

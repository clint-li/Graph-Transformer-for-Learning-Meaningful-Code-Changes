protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo , com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) throws java.lang.Exception { return METHOD_2 ( repo , null , VAR_1 , null , null , null ) ; } } ; ) null , null , null , VAR_1 , null , repo ( METHOD_2 return { java.lang.Exception throws ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id , repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
private void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , VAR_1 . METHOD_3 ( ) , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; } } ; ) STRING_6 , STRING_5 , STRING_4 , STRING_3 , ) ( METHOD_3 . VAR_1 , STRING_2 , STRING_1 ( METHOD_2 . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void private 
protected void METHOD_1 ( TYPE_1 query ) throws java.lang.Exception { try { METHOD_2 ( query ) . get ( ) ; org.junit.Assert . METHOD_3 ( ( STRING_1 + query ) ) ; } catch ( TYPE_2 e ) { } } } } { ) e TYPE_2 ( catch } ; ) ) query + STRING_1 ( ( METHOD_3 . org.junit.Assert ; ) ( get . ) query ( METHOD_2 { try { java.lang.Exception throws ) query TYPE_1 ( METHOD_1 void protected 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( VAR_1 ) , new TYPE_4 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( TYPE_4 new , ) VAR_1 ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) event TYPE_1 final ( METHOD_1 void public 
private TYPE_1 . ProjectConfig METHOD_1 ( ) throws java.lang.Exception { return METHOD_1 ( STRING_1 , true , true ) ; } } ; ) true , true , STRING_1 ( METHOD_1 return { java.lang.Exception throws ) ( METHOD_1 ProjectConfig . TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_4 . METHOD_8 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_8 . VAR_4 ; ) ) ( METHOD_7 . VAR_1 ( METHOD_6 . ) ) ( METHOD_5 . ) ( METHOD_4 . VAR_3 ( METHOD_3 . TYPE_2 ; ) ( METHOD_2 . VAR_2 = VAR_1 TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { factory ( VAR_1 . Factory class ) ; bind ( VAR_2 class ) . METHOD_2 ( VAR_3 ) ; } } ; ) VAR_3 ( METHOD_2 . ) class VAR_2 ( bind ; ) class Factory . VAR_1 ( factory { ) ( METHOD_1 void protected 
public TYPE_1 user ( TYPE_2 user ) { return METHOD_1 ( ) . equals ( user ) ? this : METHOD_2 ( user ) . METHOD_3 ( cd , db ) ; } } ; ) db , cd ( METHOD_3 . ) user ( METHOD_2 : this ? ) user ( equals . ) ( METHOD_1 return { ) user TYPE_2 ( user TYPE_1 public 
java.lang.String delete ( ) ; ; ) ( delete java.lang.String 
private void METHOD_1 ( TYPE_1 < TYPE_2 > req ) throws java.lang.Exception { try { req . get ( ) ; org.junit.Assert . METHOD_2 ( STRING_1 ) ; } catch ( TYPE_3 e ) { } } } } { ) e TYPE_3 ( catch } ; ) STRING_1 ( METHOD_2 . org.junit.Assert ; ) ( get . req { try { java.lang.Exception throws ) req > TYPE_2 < TYPE_1 ( METHOD_1 void private 
protected final void METHOD_1 ( java.lang.String msg , TYPE_1 t ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_2 ) ) + STRING_2 ) + msg ) , t ) ; } } } } ; ) t , ) msg + ) STRING_2 + ) ) VAR_2 ( + STRING_1 ( ( ( ( METHOD_3 . VAR_1 { ) ) ( METHOD_2 . VAR_1 ( if { ) t TYPE_1 , msg java.lang.String ( METHOD_1 void final protected 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( 1 ) ; } } ; ) 1 ( METHOD_2 { ) event TYPE_1 final ( METHOD_1 void public 
protected void METHOD_1 ( final int VAR_1 ) { TYPE_1 VAR_2 ; TYPE_2 VAR_3 ; TYPE_3 VAR_4 ; METHOD_2 ( ( -- ( VAR_5 ) ) ) ; METHOD_3 ( ) ; synchronized ( VAR_6 ) { VAR_7 = true ; } super . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . super } ; true = VAR_7 { ) VAR_6 ( synchronized ; ) ( METHOD_3 ; ) ) ) VAR_5 ( -- ( ( METHOD_2 ; VAR_4 TYPE_3 ; VAR_3 TYPE_2 ; VAR_2 TYPE_1 { ) VAR_1 int final ( METHOD_1 void protected 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 . length ( ) ) < INT_1 ) { return VAR_1 ; } else { return ( VAR_1 . METHOD_2 ( 0 , INT_2 ) ) + STRING_1 ; } } } } ; STRING_1 + ) ) INT_2 , 0 ( METHOD_2 . VAR_1 ( return { else } ; VAR_1 return { ) INT_1 < ) ) ( length . VAR_1 ( ( if { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String static private 
public void METHOD_1 ( ) { final int id = INT_1 ; final TYPE_1 p = new TYPE_1 ( id ) ; assertEquals ( id , p . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . p , id ( assertEquals ; ) id ( TYPE_1 new = p TYPE_1 final ; INT_1 = id int final { ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_2 . VAR_3 { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
private TYPE_1 METHOD_1 ( java.lang.String name , int VAR_1 , int VAR_2 , TYPE_2 VAR_3 , TYPE_3 < TYPE_4 . Result > VAR_4 ) { return new TYPE_1 ( VAR_5 , project , name , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } ; ) VAR_4 , VAR_3 , VAR_2 , VAR_1 , name , project , VAR_5 ( TYPE_1 new return { ) VAR_4 > Result . TYPE_4 < TYPE_3 , VAR_3 TYPE_2 , VAR_2 int , VAR_1 int , name java.lang.String ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( java.lang.String VAR_1 ) { METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_4 ; ) ) ( METHOD_3 . VAR_2 ( METHOD_2 { ) VAR_1 java.lang.String ( METHOD_1 void protected 
public void METHOD_1 ( final java.lang.String VAR_1 ) { if ( ( VAR_1 ! = null ) & & ( ! ( VAR_1 . isEmpty ( ) ) ) ) { VAR_2 = VAR_1 ; } } } } ; VAR_1 = VAR_2 { ) ) ) ) ( isEmpty . VAR_1 ( ! ( & & ) null = ! VAR_1 ( ( if { ) VAR_1 java.lang.String final ( METHOD_1 void public 
void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } METHOD_3 ( ) . METHOD_4 ( ) ; VAR_1 = null ; VAR_3 = null ; } } } } ; null = VAR_3 ; null = VAR_1 ; ) ( METHOD_4 . ) ( METHOD_3 } ; ) ( METHOD_2 . VAR_2 { ) VAR_1 : VAR_2 TYPE_1 ( for { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ( STRING_1 + ( VAR_2 ) ) ) ; VAR_3 . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . VAR_3 ; ) ) ) VAR_2 ( + STRING_1 ( ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = VAR_2 . get ( new TYPE_1 . NameKey ( STRING_1 ) ) . METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; } } ; ) ( METHOD_5 . VAR_3 ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ( METHOD_2 . ) ) STRING_1 ( NameKey . TYPE_1 new ( get . VAR_2 = VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 . ProjectConfig METHOD_1 ( org.eclipse.jgit.revwalk.RevCommit VAR_1 ) throws java.io.IOException , TYPE_2 { TYPE_1 . ProjectConfig cfg = new TYPE_1 . ProjectConfig ( new TYPE_3 . NameKey ( STRING_1 ) ) ; cfg . METHOD_2 ( db , VAR_1 ) ; return cfg ; } } ; cfg return ; ) VAR_1 , db ( METHOD_2 . cfg ; ) ) STRING_1 ( NameKey . TYPE_3 new ( ProjectConfig . TYPE_1 new = cfg ProjectConfig . TYPE_1 { TYPE_2 , java.io.IOException throws ) VAR_1 org.eclipse.jgit.revwalk.RevCommit ( METHOD_1 ProjectConfig . TYPE_1 private 
private void METHOD_1 ( ) { if ( ( VAR_1 ) ! = null ) { VAR_1 . METHOD_2 ( ) ; VAR_1 = null ; METHOD_3 ( ) ; } VAR_2 . METHOD_4 ( cm . METHOD_5 ( ) , line ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) line , ) ( METHOD_5 . cm ( METHOD_4 . VAR_2 } ; ) ( METHOD_3 ; null = VAR_1 ; ) ( METHOD_2 . VAR_1 { ) null = ! ) VAR_1 ( ( if { ) ( METHOD_1 void private 
public static TYPE_1 < com.google.gerrit.reviewdb.client.Change , com.google.gerrit.reviewdb.client.Change . Id > METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 > Id . com.google.gerrit.reviewdb.client.Change , com.google.gerrit.reviewdb.client.Change < TYPE_1 static public 
private void METHOD_1 ( java.lang.String msg ) { TYPE_1 p = new TYPE_1 ( ) ; p . message = msg ; VAR_1 . add ( p ) ; } } ; ) p ( add . VAR_1 ; msg = message . p ; ) ( TYPE_1 new = p TYPE_1 { ) msg java.lang.String ( METHOD_1 void private 
public java.lang.String METHOD_1 ( final java.lang.String VAR_1 ) { return STRING_1 + VAR_1 ; } } ; VAR_1 + STRING_1 return { ) VAR_1 java.lang.String final ( METHOD_1 java.lang.String public 
void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = VAR_2 ; if ( VAR_1 ! = null ) { VAR_2 = null ; VAR_1 . onSuccess ( result ) ; result = null ; } } } } ; null = result ; ) result ( onSuccess . VAR_1 ; null = VAR_2 { ) null = ! VAR_1 ( if ; VAR_2 = VAR_1 > TYPE_2 < TYPE_1 { ) ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { VAR_2 . apply ( rsrc , VAR_1 ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e com.google.gwtorm.server.OrmException ( catch } ; ) VAR_1 , rsrc ( apply . VAR_2 { try { TYPE_2 throws ) VAR_1 TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_5 ( STRING_1 , STRING_2 ) ; assertEquals ( STRING_3 , VAR_2 ) ; } } ; ) VAR_2 , STRING_3 ( assertEquals ; ) STRING_2 , STRING_1 ( METHOD_5 . VAR_1 = VAR_2 java.lang.String ; ) ( METHOD_4 = VAR_1 TYPE_1 ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return TYPE_3 . METHOD_1 ( changeId , VAR_1 , args ) ; } } ; ) args , VAR_1 , changeId ( METHOD_1 . TYPE_3 return { ) args ... TYPE_2 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { for ( final TYPE_2 . Id id : VAR_2 ) { add ( VAR_1 , id ) ; } } } } ; ) id , VAR_1 ( add { ) VAR_2 : id Id . TYPE_2 final ( for { ) VAR_1 TYPE_1 final ( METHOD_1 void protected 
private static long METHOD_1 ( long n , long VAR_1 ) { long VAR_2 = ( n + ( VAR_1 / 2 ) ) / VAR_1 ; return VAR_2 ; } } ; VAR_2 return ; VAR_1 / ) ) 2 / VAR_1 ( + n ( = VAR_2 long { ) VAR_1 long , n long ( METHOD_1 long static private 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 id ) throws TYPE_4 { TYPE_5 p = VAR_2 . get ( id . get ( ) ) ; if ( p == null ) { throw new TYPE_4 ( id ) ; } return new TYPE_1 ( p ) ; } } ; ) p ( TYPE_1 new return } ; ) id ( TYPE_4 new throw { ) null == p ( if ; ) ) ( get . id ( get . VAR_2 = p TYPE_5 { TYPE_4 throws ) id TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return new TYPE_1 ( args , change . getProject ( ) , change ) ; } } ; ) change , ) ( getProject . change , args ( TYPE_1 new return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 TYPE_1 public 
void delete ( TYPE_1 VAR_1 ) throws java.io.IOException { VAR_2 . METHOD_1 ( VAR_1 ) ; commit ( ) ; } } ; ) ( commit ; ) VAR_1 ( METHOD_1 . VAR_2 { java.io.IOException throws ) VAR_1 TYPE_1 ( delete void 
public boolean METHOD_1 ( final com.google.gerrit.reviewdb.client.Account VAR_1 ) { return METHOD_1 ( VAR_1 . getId ( ) ) ; } } ; ) ) ( getId . VAR_1 ( METHOD_1 return { ) VAR_1 com.google.gerrit.reviewdb.client.Account final ( METHOD_1 boolean public 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; db = METHOD_2 ( ) ; util = new TYPE_1 < org.eclipse.jgit.lib.Repository > ( db ) ; } } ; ) db ( > org.eclipse.jgit.lib.Repository < TYPE_1 new = util ; ) ( METHOD_2 = db ; ) ( METHOD_1 . super { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; } } ; VAR_2 = VAR_2 . this ; VAR_1 = VAR_1 . this { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( METHOD_1 void 
public static void display ( final TYPE_1 view ) { if ( ( VAR_1 ) ! = null ) { VAR_2 . METHOD_1 ( VAR_1 ) ; } VAR_1 = view ; VAR_2 . add ( VAR_1 , VAR_3 ) ; } } ; ) VAR_3 , VAR_1 ( add . VAR_2 ; view = VAR_1 } ; ) VAR_1 ( METHOD_1 . VAR_2 { ) null = ! ) VAR_1 ( ( if { ) view TYPE_1 final ( display void static public 
public void METHOD_1 ( ) { com.google.common.truth.Truth.assertThat ( ( ( TYPE_1 ) ( VAR_1 . METHOD_2 ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ) ) ) ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ) ) ) ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new ( METHOD_2 . VAR_1 ( ) TYPE_1 ( ( ( com.google.common.truth.Truth.assertThat { ) ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 key , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws TYPE_4 { if ( ( ( VAR_3 ) ! = ( VAR_4 ) ) & & ( ( VAR_5 ) == null ) ) { throw new TYPE_4 ( ) ; } } } } ; ) ( TYPE_4 new throw { ) ) null == ) VAR_5 ( ( & & ) ) VAR_4 ( = ! ) VAR_3 ( ( ( if { TYPE_4 throws ) VAR_2 TYPE_3 , VAR_1 TYPE_2 , key TYPE_1 ( METHOD_1 void static private 
protected void METHOD_1 ( TYPE_1 result ) { METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_2 = null ; } } ; null = VAR_2 ; ) ) ( METHOD_5 . VAR_2 ( METHOD_4 ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 { ) result TYPE_1 ( METHOD_1 void protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) ; METHOD_2 ( ) . to ( VAR_2 class ) ; factory ( VAR_3 . Factory class ) ; } } ; ) class Factory . VAR_3 ( factory ; ) class VAR_2 ( to . ) ( METHOD_2 ; ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 . ui ) ; bind ( VAR_3 class ) . METHOD_2 ( VAR_4 ) ; bind ( VAR_5 class ) . to ( VAR_6 class ) ; } } ; ) class VAR_6 ( to . ) class VAR_5 ( bind ; ) VAR_4 ( METHOD_2 . ) class VAR_3 ( bind ; ) ui . VAR_2 ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 r = new TYPE_2 ( server , user ) . put ( STRING_1 ) ; org.junit.Assert.assertEquals ( VAR_1 , r . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . r , VAR_1 ( org.junit.Assert.assertEquals ; ) STRING_1 ( put . ) user , server ( TYPE_2 new = r TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private boolean METHOD_1 ( ) { return ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) < = ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_2 ( ) ) ) ; } } ; ) ) ) ( METHOD_2 . ) ( METHOD_4 . ) ( METHOD_3 . VAR_2 ( = < ) ) ( METHOD_2 . VAR_1 ( ( || ) null == ) VAR_1 ( ( return { ) ( METHOD_1 boolean private 
static TYPE_1 create ( TYPE_1 . Key key , com.google.gerrit.reviewdb.client.Account.Id VAR_1 , java.lang.String email , java.lang.String VAR_2 , org.eclipse.jgit.lib.ObjectId VAR_3 ) { return new TYPE_2 ( key , VAR_1 , TYPE_3 . METHOD_1 ( email ) , TYPE_3 . METHOD_1 ( VAR_2 ) , VAR_3 ) ; } } ; ) VAR_3 , ) VAR_2 ( METHOD_1 . TYPE_3 , ) email ( METHOD_1 . TYPE_3 , VAR_1 , key ( TYPE_2 new return { ) VAR_3 org.eclipse.jgit.lib.ObjectId , VAR_2 java.lang.String , email java.lang.String , VAR_1 com.google.gerrit.reviewdb.client.Account.Id , key Key . TYPE_1 ( create TYPE_1 static 
java.lang.String METHOD_1 ( int id , java.lang.String path ) ; ; ) path java.lang.String , id int ( METHOD_1 java.lang.String 
public void METHOD_1 ( ) throws java.lang.Exception { group ( STRING_1 , STRING_2 ) ; org.junit.Assert . METHOD_2 ( METHOD_3 ( STRING_3 ) . isEmpty ( ) ) ; } } ; ) ) ( isEmpty . ) STRING_3 ( METHOD_3 ( METHOD_2 . org.junit.Assert ; ) STRING_2 , STRING_1 ( group { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 input ) throws TYPE_2 { try { VAR_1 . apply ( change , input ) ; } catch ( TYPE_2 | TYPE_3 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e TYPE_3 | TYPE_2 ( catch } ; ) input , change ( apply . VAR_1 { try { TYPE_2 throws ) input TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) ! = null ) { for ( TYPE_1 schema : VAR_1 ) { schema . close ( ) ; } VAR_1 = null ; } super . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . super } ; null = VAR_1 } ; ) ( close . schema { ) VAR_1 : schema TYPE_1 ( for { ) null = ! ) VAR_1 ( ( if { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 . ProjectConfig METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return METHOD_1 ( VAR_1 , true , true ) ; } } ; ) true , true , VAR_1 ( METHOD_1 return { java.lang.Exception throws ) VAR_1 java.lang.String ( METHOD_1 ProjectConfig . TYPE_1 private 
public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , TYPE_2 > VAR_1 , int VAR_2 ) { return new TYPE_1 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( TYPE_1 new return { ) VAR_2 int , VAR_1 > TYPE_2 , java.lang.String < java.util.Map ( METHOD_1 TYPE_1 static public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( db ) ; } } ; ) db ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
private static TYPE_1 revision ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String type ) { return TYPE_2 . revision ( id ) . view ( type ) ; } } ; ) type ( view . ) id ( revision . TYPE_2 return { ) type java.lang.String , id com.google.gerrit.reviewdb.client.PatchSet.Id ( revision TYPE_1 static private 
public static void METHOD_1 ( TYPE_1 req , TYPE_2 . HttpServletResponse res , int VAR_1 , java.lang.String msg , TYPE_3 err ) throws java.io.IOException { TYPE_4 . METHOD_1 ( req , res , VAR_1 , msg , VAR_2 , err ) ; } } ; ) err , VAR_2 , msg , VAR_1 , res , req ( METHOD_1 . TYPE_4 { java.io.IOException throws ) err TYPE_3 , msg java.lang.String , VAR_1 int , res HttpServletResponse . TYPE_2 , req TYPE_1 ( METHOD_1 void static public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . METHOD_2 ( VAR_2 class ) . METHOD_3 ( VAR_3 ) ; bind ( VAR_4 class ) ; } } ; ) class VAR_4 ( bind ; ) VAR_3 ( METHOD_3 . ) class VAR_2 ( METHOD_2 . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit c = METHOD_2 ( ) ; java.util.List < TYPE_1 > m = TYPE_2 . METHOD_3 ( repo , c ) ; org.junit.Assert.assertEquals ( 0 , m . size ( ) ) ; } } ; ) ) ( size . m , 0 ( org.junit.Assert.assertEquals ; ) c , repo ( METHOD_3 . TYPE_2 = m > TYPE_1 < java.util.List ; ) ( METHOD_2 = c org.eclipse.jgit.revwalk.RevCommit { java.lang.Exception throws ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( short s ) { switch ( s ) { case 0 : return VAR_1 ; case 1 : return VAR_2 ; } return null ; } } ; null return } ; VAR_2 return : 1 case ; VAR_1 return : 0 case { ) s ( switch { ) s short ( METHOD_1 TYPE_1 static public 
public static void METHOD_1 ( int id , java.lang.String commit , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . revision ( id , commit ) . delete ( VAR_1 ) ; } } ; ) VAR_1 ( delete . ) commit , id ( revision . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , commit java.lang.String , id int ( METHOD_1 void static public 
public java.lang.String toString ( ) { return ( STRING_1 + ( METHOD_1 ( ) ) ) + STRING_2 ; } } ; STRING_2 + ) ) ) ( METHOD_1 ( + STRING_1 ( return { ) ( toString java.lang.String public 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change . Id id ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( project , id ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) id , project ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) id Id . com.google.gerrit.reviewdb.client.Change , project com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( final TYPE_2 < TYPE_1 > ... VAR_1 ) { return new TYPE_3 < TYPE_1 > ( VAR_1 ) ; } } ; ) VAR_1 ( > TYPE_1 < TYPE_3 new return { ) VAR_1 ... > TYPE_1 < TYPE_2 final ( METHOD_1 > TYPE_1 < TYPE_2 > TYPE_1 < static public 
public static java.lang.String METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { return TYPE_1 . METHOD_2 ( VAR_2 , VAR_1 ) . toString ( ) ; } } ; ) ( toString . ) VAR_1 , VAR_2 ( METHOD_2 . TYPE_1 return { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 java.lang.String static public 
boolean METHOD_1 ( boolean VAR_1 ) { if ( TYPE_1 . equals ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } return METHOD_3 ( VAR_4 , VAR_1 ) ; } } ; ) VAR_1 , VAR_4 ( METHOD_3 return } ; ) ( METHOD_2 . VAR_3 return { ) ) VAR_2 ( equals . TYPE_1 ( if { ) VAR_1 boolean ( METHOD_1 boolean 
public java.lang.String METHOD_1 ( ) { return ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . length ( ) ) ; } } ; ) ) ( length . VAR_1 ( METHOD_4 . ) ( METHOD_3 . ) ) ) ( METHOD_2 ( ) TYPE_1 ( ( return { ) ( METHOD_1 java.lang.String public 
public void METHOD_1 ( ) { new TYPE_1 ( VAR_1 , new TYPE_2 ( ) , METHOD_2 ( VAR_2 class ) ) ; } } ; ) ) class VAR_2 ( METHOD_2 , ) ( TYPE_2 new , VAR_1 ( TYPE_1 new { ) ( METHOD_1 void public 
boolean METHOD_1 ( ) { return ( METHOD_2 ( VAR_1 ) ) & & ( METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 ( & & ) ) VAR_1 ( METHOD_2 ( return { ) ( METHOD_1 boolean 
public TYPE_1 run ( TYPE_2 . ReviewDb db , TYPE_3 VAR_1 , boolean VAR_2 ) throws TYPE_4 . OrmException { return METHOD_1 ( VAR_3 , id , db , VAR_1 ) ; } } ; ) VAR_1 , db , id , VAR_3 ( METHOD_1 return { OrmException . TYPE_4 throws ) VAR_2 boolean , VAR_1 TYPE_3 , db ReviewDb . TYPE_2 ( run TYPE_1 public 
protected TYPE_1 METHOD_1 ( TYPE_1 ctx ) { return ctx . METHOD_2 ( ctx . METHOD_3 ( ) , ctx . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . ctx , ) ( METHOD_3 . ctx ( METHOD_2 . ctx return { ) ctx TYPE_1 ( METHOD_1 TYPE_1 protected 
public java.lang.String METHOD_1 ( ) { return VAR_1 . METHOD_1 ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( config . METHOD_4 ( ) ) ) , null ) ; } } ; ) null , ) ) ) ( METHOD_4 . config ( METHOD_3 . TYPE_1 ( METHOD_2 . VAR_1 ( METHOD_1 . VAR_1 return { ) ( METHOD_1 java.lang.String public 
protected TYPE_1 < TYPE_2 > METHOD_1 ( final java.lang.String VAR_1 ) { return java.util.Collections . METHOD_2 ( ) ; } } ; ) ( METHOD_2 . java.util.Collections return { ) VAR_1 java.lang.String final ( METHOD_1 > TYPE_2 < TYPE_1 protected 
protected TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > repo ) throws java.lang.Exception { return METHOD_1 ( repo , null , null , null , null , null ) ; } } ; ) null , null , null , null , null , repo ( METHOD_1 return { java.lang.Exception throws ) repo > TYPE_3 < TYPE_2 ( METHOD_1 TYPE_1 protected 
public boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_1 . equals ( VAR_1 ) ) { return METHOD_2 ( ) ; } else { return ! ( METHOD_3 ( VAR_1 ) . isEmpty ( ) ) ; } } } } ; ) ) ( isEmpty . ) VAR_1 ( METHOD_3 ( ! return { else } ; ) ( METHOD_2 return { ) ) VAR_1 ( equals . TYPE_1 ( if { ) VAR_1 java.lang.String ( METHOD_1 boolean public 
void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String name , java.util.List < java.lang.String > values ) ; ; ) values > java.lang.String < java.util.List , name java.lang.String , VAR_2 java.lang.String , VAR_1 java.lang.String ( METHOD_1 void 
public void METHOD_1 ( TYPE_1 key , long VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 ) { } } { ) VAR_3 > java.lang.String < java.util.List , VAR_2 java.lang.String , VAR_1 long , key TYPE_1 ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( ) throws java.io.IOException , TYPE_2 { TYPE_3 path = METHOD_2 ( ) ; if ( path ! = null ) { try ( org.eclipse.jgit.lib.Repository repo = new TYPE_4 ( path ) ) { METHOD_1 ( repo ) ; } } return this ; } } ; this return } } ; ) repo ( METHOD_1 { ) ) path ( TYPE_4 new = repo org.eclipse.jgit.lib.Repository ( try { ) null = ! path ( if ; ) ( METHOD_2 = path TYPE_3 { TYPE_2 , java.io.IOException throws ) ( METHOD_1 TYPE_1 public 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( type ( ) . METHOD_2 ( ) ) { return TYPE_1 . METHOD_3 ( type ( ) . METHOD_4 ( VAR_1 ) ) ; } else { return VAR_1 ; } } } } ; VAR_1 return { else } ; ) ) VAR_1 ( METHOD_4 . ) ( type ( METHOD_3 . TYPE_1 return { ) ) ( METHOD_2 . ) ( type ( if { ) VAR_1 java.lang.String ( METHOD_1 java.lang.String private 
public void put ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . put ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( put . VAR_3 { ) VAR_2 TYPE_2 , VAR_1 TYPE_1 ( put void public 
private TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } } ; VAR_1 return } ; ) ) ( METHOD_4 . TYPE_2 , ) ( METHOD_3 . TYPE_2 ( METHOD_2 = VAR_1 { ) null == ) VAR_1 ( ( if { ) ( METHOD_1 TYPE_1 private 
public void METHOD_1 ( ) throws java.lang.Exception { project = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 , project . get ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } ; ) ( METHOD_4 ; ) ( METHOD_3 ; ) ) ( get . project , VAR_1 ( METHOD_2 . TYPE_1 ; ) STRING_1 ( com.google.gerrit.reviewdb.client.Project.NameKey new = project { java.lang.Exception throws ) ( METHOD_1 void public 
public TYPE_1 file ( java.lang.String path ) { return VAR_1 . create ( VAR_2 . get ( ) . METHOD_1 ( revision , TYPE_2 . METHOD_2 ( path ) ) ) ; } } ; ) ) ) path ( METHOD_2 . TYPE_2 , revision ( METHOD_1 . ) ( get . VAR_2 ( create . VAR_1 return { ) path java.lang.String ( file TYPE_1 public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > get ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } } ; ) ) name , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) name java.lang.String , VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( get > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
protected < TYPE_1 extends TYPE_2 , TYPE_3 extends TYPE_2 > TYPE_4 < TYPE_1 , TYPE_3 > METHOD_1 ( final TYPE_5 < TYPE_6 < TYPE_1 , TYPE_3 > > type ) { return METHOD_1 ( TYPE_7 . get ( type ) ) ; } } ; ) ) type ( get . TYPE_7 ( METHOD_1 return { ) type > > TYPE_3 , TYPE_1 < TYPE_6 < TYPE_5 final ( METHOD_1 > TYPE_3 , TYPE_1 < TYPE_4 > TYPE_2 extends TYPE_3 , TYPE_2 extends TYPE_1 < protected 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( ) ; return VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_1 . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . VAR_1 , ) ( METHOD_3 . VAR_1 ( METHOD_2 . VAR_3 return ; ) ( get . VAR_2 = VAR_1 TYPE_1 { ) ( METHOD_1 TYPE_1 private 
private static void METHOD_1 ( TYPE_1 insert ) { TYPE_2 . METHOD_2 ( insert ) ; } } ; ) insert ( METHOD_2 . TYPE_2 { ) insert TYPE_1 ( METHOD_1 void static private 
public int METHOD_1 ( ) { throw new TYPE_1 ( ) ; } } ; ) ( TYPE_1 new throw { ) ( METHOD_1 int public 
protected Project . NameKey METHOD_1 ( ) { return getChange ( ) . getProject ( ) ; } } ; ) ( getProject . ) ( getChange return { ) ( METHOD_1 NameKey . Project protected 
protected static com.google.gerrit.server.query.change.ChangeData METHOD_1 ( TYPE_1 VAR_1 , com.google.gerrit.reviewdb.client.Change . Id id ) { return VAR_2 . create ( VAR_3 . get ( ) , id ) ; } } ; ) id , ) ( get . VAR_3 ( create . VAR_2 return { ) id Id . com.google.gerrit.reviewdb.client.Change , VAR_1 TYPE_1 ( METHOD_1 com.google.gerrit.server.query.change.ChangeData static protected 
long METHOD_1 ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( METHOD_1 long 
private final native TYPE_1 METHOD_1 ( int VAR_1 ) ; ; ) VAR_1 int ( METHOD_1 TYPE_1 native final private 
private boolean METHOD_1 ( com.google.gerrit.reviewdb.server.ReviewDb db , org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevCommit commit ) { if ( METHOD_2 ( ) ) { return true ; } else if ( METHOD_3 ( db , repo , commit ) ) { return true ; } return false ; } } ; false return } ; true return { ) ) commit , repo , db ( METHOD_3 ( if else } ; true return { ) ) ( METHOD_2 ( if { ) commit org.eclipse.jgit.revwalk.RevCommit , repo org.eclipse.jgit.lib.Repository , db com.google.gerrit.reviewdb.server.ReviewDb ( METHOD_1 boolean private 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; view . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . VAR_1 ( METHOD_3 . view ; ) ) ( getValue . e ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . ProjectConfig cfg = VAR_1 . METHOD_2 ( project ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( cfg , VAR_2 , VAR_3 , STRING_1 ) ; METHOD_5 ( project , cfg ) ; } } ; ) cfg , project ( METHOD_5 ; ) STRING_1 , VAR_3 , VAR_2 , cfg ( METHOD_4 . TYPE_2 ; ) ( METHOD_3 . ) project ( METHOD_2 . VAR_1 = cfg ProjectConfig . TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , project , STRING_1 , false , VAR_2 ) ; } } ; ) VAR_2 , false , STRING_1 , project , VAR_1 ( METHOD_3 ; ) ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void private 
void METHOD_1 ( com.google.gerrit.reviewdb.client.Change c ) { change = c ; } } ; c = change { ) c com.google.gerrit.reviewdb.client.Change ( METHOD_1 void 
protected void METHOD_1 ( TYPE_1 result ) { VAR_1 = true ; VAR_2 = result . METHOD_2 ( ) ; METHOD_3 ( result . METHOD_4 ( ) ) ; METHOD_5 ( info ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) info ( METHOD_5 ; ) ) ( METHOD_4 . result ( METHOD_3 ; ) ( METHOD_2 . result = VAR_2 ; true = VAR_1 { ) result TYPE_1 ( METHOD_1 void protected 
public java.util.Set < java.lang.String > METHOD_1 ( ) { return cfg . METHOD_1 ( VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 ( METHOD_1 . cfg return { ) ( METHOD_1 > java.lang.String < java.util.Set public 
public static void METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey name , TYPE_1 < TYPE_2 > VAR_1 ) { new TYPE_3 ( STRING_1 ) . id ( name . get ( ) ) . view ( STRING_2 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_2 ( view . ) ) ( get . name ( id . ) STRING_1 ( TYPE_3 new { ) VAR_1 > TYPE_2 < TYPE_1 , name com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 void static public 
public void METHOD_1 ( ) { org.junit.Assert.assertEquals ( STRING_1 , TYPE_1 . not ( TYPE_2 . METHOD_2 ( STRING_2 , STRING_3 ) ) . toString ( ) ) ; } } ; ) ) ( toString . ) ) STRING_3 , STRING_2 ( METHOD_2 . TYPE_2 ( not . TYPE_1 , STRING_1 ( org.junit.Assert.assertEquals { ) ( METHOD_1 void public 
public static TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( VAR_1 ) ; } } ; ) VAR_1 ( TYPE_1 new return { ) ( METHOD_1 TYPE_1 static public 
public synchronized TYPE_1 METHOD_1 ( java.lang.String name , TYPE_2 VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( name , VAR_1 ) ; return METHOD_4 ( name ) ; } } ; ) name ( METHOD_4 return ; ) VAR_1 , name ( METHOD_3 ; ) VAR_1 ( METHOD_2 . TYPE_3 { ) VAR_1 TYPE_2 , name java.lang.String ( METHOD_1 TYPE_1 synchronized public 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( user ) ; TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; METHOD_3 ( in , VAR_1 class ) ; } } ; ) class VAR_1 , in ( METHOD_3 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 ; ) user ( METHOD_2 { java.lang.Exception throws ) ( METHOD_1 void public 
void METHOD_1 ( java.lang.String project , java.lang.String ref , int VAR_1 ) { TYPE_1 event = new TYPE_1 ( project , ref , VAR_1 ) ; METHOD_2 ( project , event ) ; } } ; ) event , project ( METHOD_2 ; ) VAR_1 , ref , project ( TYPE_1 new = event TYPE_1 { ) VAR_1 int , ref java.lang.String , project java.lang.String ( METHOD_1 void 
java.lang.String METHOD_1 ( TYPE_1 req ) { if ( ( VAR_1 ) ! = null ) { return TYPE_2 . METHOD_2 ( req . METHOD_3 ( VAR_1 ) ) ; } else { return null ; } } } } ; null return { else } ; ) ) VAR_1 ( METHOD_3 . req ( METHOD_2 . TYPE_2 return { ) null = ! ) VAR_1 ( ( if { ) req TYPE_1 ( METHOD_1 java.lang.String 
private TYPE_1 METHOD_1 ( ) { return VAR_1 . create ( TYPE_2 . of ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( of . TYPE_2 ( create . VAR_1 return { ) ( METHOD_1 TYPE_1 private 
protected void METHOD_1 ( ) { install ( VAR_1 ) ; install ( cm ) ; install ( VAR_2 ) ; } } ; ) VAR_2 ( install ; ) cm ( install ; ) VAR_1 ( install { ) ( METHOD_1 void protected 
private TYPE_1 METHOD_1 ( TYPE_2 key ) throws TYPE_3 { return VAR_1 . get ( key ) ; } } ; ) key ( get . VAR_1 return { TYPE_3 throws ) key TYPE_2 ( METHOD_1 TYPE_1 private 
public java.lang.String getName ( ) { return name . get ( ) ; } } ; ) ( get . name return { ) ( getName java.lang.String public 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( getChangeId ( ) ) ; } } ; ) ) ( getChangeId ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
void METHOD_1 ( TYPE_1 < TYPE_2 > e ) { VAR_1 . METHOD_2 ( e . getValue ( ) ) ; if ( ( view ) ! = null ) { view . METHOD_3 ( ) . METHOD_4 ( STRING_1 , VAR_1 . METHOD_2 ( ) ) ; } } } } ; ) ) ( METHOD_2 . VAR_1 , STRING_1 ( METHOD_4 . ) ( METHOD_3 . view { ) null = ! ) view ( ( if ; ) ) ( getValue . e ( METHOD_2 . VAR_1 { ) e > TYPE_2 < TYPE_1 ( METHOD_1 void 
private final native void METHOD_1 ( java.lang.String VAR_1 ) ; ; ) VAR_1 java.lang.String ( METHOD_1 void native final private 
public void METHOD_1 ( final TYPE_1 config ) { this . config = config ; } } ; config = config . this { ) config TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( final TYPE_1 event ) { TYPE_2 . display ( TYPE_3 . METHOD_2 ( revision . getParentKey ( ) , revision . getId ( ) ) ) ; } } ; ) ) ) ( getId . revision , ) ( getParentKey . revision ( METHOD_2 . TYPE_3 ( display . TYPE_2 { ) event TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( java.lang.Exception VAR_1 ) { TYPE_1 . error ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . VAR_2 ; ) VAR_1 ( error . TYPE_1 { ) VAR_1 java.lang.Exception ( METHOD_1 void public 
public void onSuccess ( final java.util.List < TYPE_1 . Branch > result ) { METHOD_1 ( true ) ; VAR_1 . display ( result ) ; VAR_1 . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . VAR_1 ; ) result ( display . VAR_1 ; ) true ( METHOD_1 { ) result > Branch . TYPE_1 < java.util.List final ( onSuccess void public 
public boolean METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_3 ( ) ; } } ; ) ( METHOD_3 . ) ( METHOD_2 return { ) ( METHOD_1 boolean public 
TYPE_1 delete ( java.lang.String VAR_1 ) throws java.io.IOException { return VAR_2 . METHOD_1 ( new TYPE_2 ( ( ( VAR_3 . METHOD_2 ( ) ) + VAR_1 ) ) , new TYPE_3 ( ) ) ; } } ; ) ) ( TYPE_3 new , ) ) VAR_1 + ) ) ( METHOD_2 . VAR_3 ( ( ( TYPE_2 new ( METHOD_1 . VAR_2 return { java.io.IOException throws ) VAR_1 java.lang.String ( delete TYPE_1 
TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 ... data ) { java.util.List < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( data ) ; return new TYPE_4 < TYPE_2 > ( VAR_1 ) ; } } ; ) VAR_1 ( > TYPE_2 < TYPE_4 new return ; ) data ( METHOD_2 . TYPE_3 = VAR_1 > TYPE_2 < java.util.List { ) data ... TYPE_2 ( METHOD_1 > TYPE_2 < TYPE_1 
public TYPE_1 METHOD_1 ( ) { return VAR_1 . METHOD_2 ( ) . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . ) ( METHOD_2 . VAR_1 return { ) ( METHOD_1 TYPE_1 public 
public TYPE_1 . AccountGroup METHOD_1 ( final java.lang.String VAR_1 ) { return VAR_2 . get ( new TYPE_2 . NameKey ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( NameKey . TYPE_2 new ( get . VAR_2 return { ) VAR_1 java.lang.String final ( METHOD_1 AccountGroup . TYPE_1 public 
void apply ( TYPE_1 update ) throws com.google.gwtorm.server.OrmException { METHOD_1 ( update ) ; update . METHOD_2 ( message . getMessage ( ) ) ; METHOD_3 ( update ) ; METHOD_4 ( update ) ; } } ; ) update ( METHOD_4 ; ) update ( METHOD_3 ; ) ) ( getMessage . message ( METHOD_2 . update ; ) update ( METHOD_1 { com.google.gwtorm.server.OrmException throws ) update TYPE_1 ( apply void 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws java.io.IOException { return new TYPE_1 ( VAR_2 . METHOD_1 ( VAR_1 ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) VAR_1 ( METHOD_1 . VAR_2 ( TYPE_1 new return { java.io.IOException throws ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 protected 
public java.lang.String METHOD_1 ( final TYPE_1 . NameKey project ) { final TYPE_2 r = new TYPE_2 ( ) ; TYPE_3 . p ( r , project ) ; TYPE_3 . a ( r , STRING_1 ) ; return ( VAR_1 ) + r ; } } ; r + ) VAR_1 ( return ; ) STRING_1 , r ( a . TYPE_3 ; ) project , r ( p . TYPE_3 ; ) ( TYPE_2 new = r TYPE_2 final { ) project NameKey . TYPE_1 final ( METHOD_1 java.lang.String public 
private static java.lang.String METHOD_1 ( TYPE_1 user ) { if ( user . METHOD_2 ( ) ) { return ( ( TYPE_2 ) ( user ) ) . getAccountId ( ) . toString ( ) ; } return user . toString ( ) ; } } ; ) ( toString . user return } ; ) ( toString . ) ( getAccountId . ) ) user ( ) TYPE_2 ( ( return { ) ) ( METHOD_2 . user ( if { ) user TYPE_1 ( METHOD_1 java.lang.String static private 
public TYPE_1 apply ( TYPE_2 input ) { return VAR_1 . equals ( user . METHOD_1 ( ) ) ; } } ; ) ) ( METHOD_1 . user ( equals . VAR_1 return { ) input TYPE_2 ( apply TYPE_1 public 
public void run ( ) { this . METHOD_1 ( ) ; } } ; ) ( METHOD_1 . this { ) ( run void public 
protected abstract TYPE_1 . Status METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) throws com.google.gwtorm.server.OrmException , java.io.IOException ; ; java.io.IOException , com.google.gwtorm.server.OrmException throws ) VAR_2 TYPE_3 , VAR_1 TYPE_2 ( METHOD_1 Status . TYPE_1 abstract protected 
public java.util.List < TYPE_1 > run ( final com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return METHOD_1 ( db , query , VAR_1 ) ; } } ; ) VAR_1 , query , db ( METHOD_1 return { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb final ( run > TYPE_1 < java.util.List public 
public TYPE_1 < ? , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return ( VAR_1 ) ! = null ? submit ( new TYPE_2 ( change , false ) ) : VAR_2 < TYPE_3 , java.io.IOException > METHOD_2 ( null ) ; } } ; ) null ( METHOD_2 > java.io.IOException , TYPE_3 < VAR_2 : ) ) false , change ( TYPE_2 new ( submit ? null = ! ) VAR_1 ( return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , ? < TYPE_1 public 
public void METHOD_1 ( ) { TYPE_1 . get ( ) . METHOD_2 ( VAR_1 , new TYPE_2 . Factory ( ) ) ; } } ; ) ) ( Factory . TYPE_2 new , VAR_1 ( METHOD_2 . ) ( get . TYPE_1 { ) ( METHOD_1 void public 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 ; ) VAR_1 ( METHOD_1 . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
public TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( ( ( double ) ( this . VAR_1 ) ) ) ; } } ; ) ) ) VAR_1 . this ( ) double ( ( ( TYPE_2 new return { ) ( METHOD_1 TYPE_1 public 
private static java.lang.String url ( com.google.gerrit.reviewdb.client.PatchSet.Id ps , TYPE_1 info ) { return TYPE_2 . METHOD_1 ( null , ps , info . path ( ) ) ; } } ; ) ) ( path . info , ps , null ( METHOD_1 . TYPE_2 return { ) info TYPE_1 , ps com.google.gerrit.reviewdb.client.PatchSet.Id ( url java.lang.String static private 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 in = new TYPE_1 ( ) ; in . name = STRING_1 ; TYPE_2 r = VAR_1 . put ( STRING_2 , in ) ; org.junit.Assert.assertEquals ( VAR_2 , r . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . r , VAR_2 ( org.junit.Assert.assertEquals ; ) in , STRING_2 ( put . VAR_1 = r TYPE_2 ; STRING_1 = name . in ; ) ( TYPE_1 new = in TYPE_1 { java.lang.Exception throws ) ( METHOD_1 void public 
public void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { METHOD_2 ( event , db ) ; } } ; ) db , event ( METHOD_2 { com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 ( METHOD_1 void public 
public void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; METHOD_5 ( STRING_1 ) ; } } ; ) STRING_1 ( METHOD_5 ; ) ) ( METHOD_4 . TYPE_1 ( METHOD_3 ; ) null ( METHOD_2 { ) ( METHOD_1 void public 
public static TYPE_1 change ( java.lang.String id ) { return new TYPE_1 ( STRING_1 ) . id ( id ) ; } } ; ) id ( id . ) STRING_1 ( TYPE_1 new return { ) id java.lang.String ( change TYPE_1 static public 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.String err , java.lang.Exception e ) { if ( VAR_1 ) { VAR_2 . error ( err , e ) ; return TYPE_2 . METHOD_2 ( ) ; } else { return TYPE_2 . METHOD_3 ( err ) ; } } } } ; ) err ( METHOD_3 . TYPE_2 return { else } ; ) ( METHOD_2 . TYPE_2 return ; ) e , err ( error . VAR_2 { ) VAR_1 ( if { ) e java.lang.Exception , err java.lang.String ( METHOD_1 > TYPE_1 < java.util.List private 
static TYPE_1 < com.google.gerrit.server.query.change.ChangeData > create ( TYPE_2 < com.google.gerrit.server.query.change.ChangeData > schema ) { if ( ( TYPE_3 . METHOD_1 ( schema ) ) == ( VAR_1 ) ) { return new TYPE_4 ( ) ; } return TYPE_1 . not ( new TYPE_3 ( VAR_2 ) ) ; } } ; ) ) VAR_2 ( TYPE_3 new ( not . TYPE_1 return } ; ) ( TYPE_4 new return { ) ) VAR_1 ( == ) ) schema ( METHOD_1 . TYPE_3 ( ( if { ) schema > com.google.gerrit.server.query.change.ChangeData < TYPE_2 ( create > com.google.gerrit.server.query.change.ChangeData < TYPE_1 static 
public void METHOD_1 ( TYPE_1 ctx ) throws java.lang.Exception { ctx . METHOD_2 ( ) . METHOD_3 ( magicBranch . topic ) ; } } ; ) topic . magicBranch ( METHOD_3 . ) ( METHOD_2 . ctx { java.lang.Exception throws ) ctx TYPE_1 ( METHOD_1 void public 
protected com.google.gerrit.reviewdb.client.Change METHOD_1 ( ) { return TYPE_1 . METHOD_1 ( project , VAR_1 ) ; } } ; ) VAR_1 , project ( METHOD_1 . TYPE_1 return { ) ( METHOD_1 com.google.gerrit.reviewdb.client.Change protected 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { return VAR_1 ! = null ? TYPE_2 . METHOD_1 ( VAR_1 ) : null ; } } ; null : ) VAR_1 ( METHOD_1 . TYPE_2 ? null = ! VAR_1 return { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 static public 
protected < TYPE_1 extends TYPE_2 > TYPE_3 < TYPE_1 > METHOD_1 ( TYPE_4 < TYPE_5 < TYPE_1 > > VAR_1 , java.lang.String name ) { return new TYPE_3 < TYPE_1 > ( view ( VAR_1 , VAR_2 , name ) ) ; } } ; ) ) name , VAR_2 , VAR_1 ( view ( > TYPE_1 < TYPE_3 new return { ) name java.lang.String , VAR_1 > > TYPE_1 < TYPE_5 < TYPE_4 ( METHOD_1 > TYPE_1 < TYPE_3 > TYPE_2 extends TYPE_1 < protected 
public TYPE_1 get ( TYPE_2 input , TYPE_3 args ) throws com.google.gwtorm.server.OrmException { try { return VAR_1 . get ( input , args ) ; } catch ( java.io.IOException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } } } } ; ) e ( com.google.gwtorm.server.OrmException new throw { ) e java.io.IOException ( catch } ; ) args , input ( get . VAR_1 return { try { com.google.gwtorm.server.OrmException throws ) args TYPE_3 , input TYPE_2 ( get TYPE_1 public 
public void onSuccess ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_1 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_1 . TYPE_2 { ) VAR_1 TYPE_1 ( onSuccess void public 
public void METHOD_1 ( final TYPE_1 . PatchSet ps ) { patchSet = ps ; } } ; ps = patchSet { ) ps PatchSet . TYPE_1 final ( METHOD_1 void public 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_3 . VAR_2 ; ) VAR_2 ( METHOD_2 . VAR_1 { ) ( METHOD_1 void public 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 = new TYPE_2 ( true , VAR_2 ) ; add ( VAR_1 ) ; } } ; ) VAR_1 ( add ; ) VAR_2 , true ( TYPE_2 new = VAR_1 ; ) ( METHOD_4 ; ) ) ( METHOD_3 . TYPE_1 ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 class ) ; VAR_3 . projects ( ) . name ( project . get ( ) ) . METHOD_3 ( STRING_1 ) . get ( ) ; } } ; ) ( get . ) STRING_1 ( METHOD_3 . ) ) ( get . project ( name . ) ( projects . VAR_3 ; ) class VAR_2 ( METHOD_2 . VAR_1 { java.lang.Exception throws ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { return VAR_2 . create ( VAR_1 , db , repo , rw , VAR_3 , VAR_4 , METHOD_2 ( VAR_5 ) , VAR_6 , VAR_7 . METHOD_3 ( ) ) ; } } ; ) ) ( METHOD_3 . VAR_7 , VAR_6 , ) VAR_5 ( METHOD_2 , VAR_4 , VAR_3 , rw , repo , db , VAR_1 ( create . VAR_2 return { TYPE_4 , TYPE_3 throws ) VAR_1 TYPE_2 final ( METHOD_1 TYPE_1 private 
void METHOD_1 ( TYPE_1 VAR_1 , int line , TYPE_2 group ) { TYPE_3 < TYPE_4 , TYPE_5 > VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 . get ( line ) ) == group ) { VAR_2 . METHOD_3 ( line ) ; } } } } ; ) line ( METHOD_3 . VAR_2 { ) group == ) ) line ( get . VAR_2 ( ( if ; ) VAR_1 ( METHOD_2 = VAR_2 > TYPE_5 , TYPE_4 < TYPE_3 { ) group TYPE_2 , line int , VAR_1 TYPE_1 ( METHOD_1 void 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( ) ; } finally { plugins . METHOD_1 ( name , VAR_1 ) ; } } } } ; ) VAR_1 , name ( METHOD_1 . plugins { finally } ; ) ( METHOD_2 . VAR_1 { try { ) ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 ... args ) { return new TYPE_1 ( ( ( ( STRING_1 + ( change.getId ( ) ) ) + STRING_2 ) + ( java.lang.String.format ( VAR_1 , args ) ) ) ) ; } } ; ) ) ) ) args , VAR_1 ( java.lang.String.format ( + ) STRING_2 + ) ) ) ( change.getId ( + STRING_1 ( ( ( ( TYPE_1 new return { ) args ... TYPE_2 , VAR_1 java.lang.String ( METHOD_1 TYPE_1 private 
public final boolean METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; return METHOD_4 ( ) ; } } ; ) ( METHOD_4 return ; ) ( METHOD_3 ; ) ( METHOD_2 { ) ( METHOD_1 boolean final public 
public static void METHOD_1 ( final TYPE_1 . Account VAR_1 ) { synchronized ( VAR_2 ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } } } } ; ) ) ( METHOD_3 . VAR_1 ( METHOD_2 . VAR_2 { ) VAR_2 ( synchronized { ) VAR_1 Account . TYPE_1 final ( METHOD_1 void static public 
TYPE_1 create ( com.google.gerrit.reviewdb.server.ReviewDb VAR_1 , org.eclipse.jgit.lib.Repository db ) ; ; ) db org.eclipse.jgit.lib.Repository , VAR_1 com.google.gerrit.reviewdb.server.ReviewDb ( create TYPE_1 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( ( ! ( METHOD_5 ( ) ) ) ) ; METHOD_6 ( ) ; } } ; ) ( METHOD_6 ; ) ) ) ) ( METHOD_5 ( ! ( ( METHOD_4 ; ) ) ( METHOD_3 . VAR_3 ( METHOD_2 . VAR_2 { ) VAR_1 TYPE_1 ( METHOD_1 void public 
private static void METHOD_1 ( TYPE_1 VAR_1 , org.eclipse.jgit.lib.Repository repo ) throws java.io.IOException { org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ; try { VAR_1 . METHOD_1 ( rw , VAR_2 ) ; } finally { rw . METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 . rw { finally } ; ) VAR_2 , rw ( METHOD_1 . VAR_1 { try ; ) repo ( org.eclipse.jgit.revwalk.RevWalk new = rw org.eclipse.jgit.revwalk.RevWalk { java.io.IOException throws ) repo org.eclipse.jgit.lib.Repository , VAR_1 TYPE_1 ( METHOD_1 void static private 
public void submit ( TYPE_1 in ) throws TYPE_2 { try { submit . get ( ) . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new TYPE_2 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( TYPE_2 new throw { ) e java.io.IOException | com.google.gwtorm.server.OrmException ( catch } ; ) in , revision ( apply . ) ( get . submit { try { TYPE_2 throws ) in TYPE_1 ( submit void public 
public java.lang.String toString ( ) { return VAR_1 ; } } ; VAR_1 return { ) ( toString java.lang.String public 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return java.util.Collections . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; } } ; ) ) VAR_1 ( METHOD_3 . TYPE_2 ( METHOD_2 . java.util.Collections return { ) ( METHOD_1 > TYPE_1 < java.util.List public 
public TYPE_1 < com.google.gerrit.reviewdb.client.Account.Id > METHOD_1 ( java.lang.String VAR_1 ) throws java.lang.Exception { return TYPE_1 . METHOD_2 ( VAR_2 . get ( TYPE_2 . create ( VAR_3 , VAR_1 ) ) ) . METHOD_3 ( TYPE_3 : : METHOD_4 ) ; } } ; ) METHOD_4 : : TYPE_3 ( METHOD_3 . ) ) ) VAR_1 , VAR_3 ( create . TYPE_2 ( get . VAR_2 ( METHOD_2 . TYPE_1 return { java.lang.Exception throws ) VAR_1 java.lang.String ( METHOD_1 > com.google.gerrit.reviewdb.client.Account.Id < TYPE_1 public 
public TYPE_1 create ( com.google.gerrit.reviewdb.client.Change change ) ; ; ) change com.google.gerrit.reviewdb.client.Change ( create TYPE_1 public 
public TYPE_1 METHOD_1 ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) throws java.io.IOException ; ; java.io.IOException throws ) projectName com.google.gerrit.reviewdb.client.Project.NameKey ( METHOD_1 TYPE_1 public 
public TYPE_1 METHOD_1 ( ) throws com.google.gwtorm.server.OrmException { final com.google.gerrit.reviewdb.server.ReviewDb c = METHOD_2 ( ) ; try { return c . METHOD_3 ( ) . get ( new TYPE_1 . Key ( ) ) ; } finally { c . close ( ) ; } } } } ; ) ( close . c { finally } ; ) ) ( Key . TYPE_1 new ( get . ) ( METHOD_3 . c return { try ; ) ( METHOD_2 = c com.google.gerrit.reviewdb.server.ReviewDb final { com.google.gwtorm.server.OrmException throws ) ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( java.lang.String msg ) { status = VAR_1 ; VAR_2 = true ; } } ; true = VAR_2 ; VAR_1 = status { ) msg java.lang.String ( METHOD_1 void public 
public static void METHOD_1 ( int changeId , java.lang.String revision , TYPE_1 < TYPE_2 > VAR_1 ) { TYPE_3 . revision ( changeId , revision ) . view ( STRING_1 ) . METHOD_2 ( STRING_2 ) . get ( VAR_1 ) ; } } ; ) VAR_1 ( get . ) STRING_2 ( METHOD_2 . ) STRING_1 ( view . ) revision , changeId ( revision . TYPE_3 { ) VAR_1 > TYPE_2 < TYPE_1 , revision java.lang.String , changeId int ( METHOD_1 void static public 
public void METHOD_1 ( TYPE_1 res , TYPE_2 VAR_1 , boolean VAR_2 ) ; ; ) VAR_2 boolean , VAR_1 TYPE_2 , res TYPE_1 ( METHOD_1 void public 
private TYPE_1 METHOD_1 ( TYPE_2 cm , int line ) { TYPE_3 VAR_1 = METHOD_2 ( cm ) ; TYPE_4 info = TYPE_4 . create ( path , VAR_1 , ( line + 1 ) , null , null ) ; return METHOD_3 ( info , false ) ; } } ; ) false , info ( METHOD_3 return ; ) null , null , ) 1 + line ( , VAR_1 , path ( create . TYPE_4 = info TYPE_4 ; ) cm ( METHOD_2 = VAR_1 TYPE_3 { ) line int , cm TYPE_2 ( METHOD_1 TYPE_1 private 
protected java.lang.String getRefName ( ) { return TYPE_1 . METHOD_1 ( VAR_1 , getChange ( ) . getId ( ) ) ; } } ; ) ) ( getId . ) ( getChange , VAR_1 ( METHOD_1 . TYPE_1 return { ) ( getRefName java.lang.String protected 
public void onSuccess ( TYPE_1 result ) { if ( METHOD_1 ( ) ) { VAR_1 = new TYPE_2 < java.lang.String > ( VAR_2 ) ; METHOD_2 ( ) ; } } } } ; ) ( METHOD_2 ; ) VAR_2 ( > java.lang.String < TYPE_2 new = VAR_1 { ) ) ( METHOD_1 ( if { ) result TYPE_1 ( onSuccess void public 
java.lang.String METHOD_1 ( int id , java.lang.String file ) ; ; ) file java.lang.String , id int ( METHOD_1 java.lang.String 
public synchronized void METHOD_1 ( com.google.gerrit.reviewdb.client.Account.Id VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . VAR_2 { ) VAR_1 com.google.gerrit.reviewdb.client.Account.Id ( METHOD_1 void synchronized public 
public TYPE_1 create ( TYPE_2 VAR_1 , com.google.gerrit.reviewdb.client.Account.Id id ) { return new TYPE_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 , VAR_9 , VAR_10 , TYPE_3 . of ( VAR_1 ) , null , id , null ) ; } } ; ) null , id , null , ) VAR_1 ( of . TYPE_3 , VAR_10 , VAR_9 , VAR_8 , VAR_7 , VAR_6 , VAR_5 , VAR_4 , VAR_3 , VAR_2 ( TYPE_1 new return { ) id com.google.gerrit.reviewdb.client.Account.Id , VAR_1 TYPE_2 ( create TYPE_1 public 
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) ! = null ) { VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( METHOD_3 ( ) ) ; VAR_1 . append ( STRING_2 ) ; } } } } ; ) STRING_2 ( append . VAR_1 ; ) ) ( METHOD_3 ( append . VAR_1 ; ) STRING_1 ( append . VAR_1 { ) null = ! ) ) ( METHOD_3 ( ( if ; ) ( METHOD_2 { ) ( METHOD_1 void private 
TYPE_1 create ( TYPE_2 . NameKey projectName , org.eclipse.jgit.lib.ObjectId base , java.util.List < TYPE_3 > VAR_1 , java.lang.String message ) ; ; ) message java.lang.String , VAR_1 > TYPE_3 < java.util.List , base org.eclipse.jgit.lib.ObjectId , projectName NameKey . TYPE_2 ( create TYPE_1 
TYPE_1 create ( TYPE_2 VAR_1 , boolean VAR_2 ) ; ; ) VAR_2 boolean , VAR_1 TYPE_2 ( create TYPE_1 
public TYPE_1 < TYPE_2 , java.io.IOException > METHOD_1 ( com.google.gerrit.reviewdb.client.Change change ) { return TYPE_3 . METHOD_2 ( VAR_1 . submit ( new TYPE_4 ( VAR_2 , change ) ) , VAR_3 ) ; } } ; ) VAR_3 , ) ) change , VAR_2 ( TYPE_4 new ( submit . VAR_1 ( METHOD_2 . TYPE_3 return { ) change com.google.gerrit.reviewdb.client.Change ( METHOD_1 > java.io.IOException , TYPE_2 < TYPE_1 public 
public void onSuccess ( TYPE_1 VAR_1 ) { VAR_2 . onSuccess ( TYPE_2 . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ) ; } } ; ) ) ) ( METHOD_2 . VAR_1 ( METHOD_1 . TYPE_2 ( onSuccess . VAR_2 { ) VAR_1 TYPE_1 ( onSuccess void public 
public static TYPE_1 METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . TYPE_2 return { ) ( METHOD_1 TYPE_1 static public 
protected void METHOD_1 ( ) { bind ( VAR_1 class ) . to ( VAR_2 class ) ; bind ( VAR_3 class ) ; bind ( VAR_4 class ) ; METHOD_2 ( ) . to ( VAR_4 class ) ; factory ( VAR_5 . Factory class ) ; } } ; ) class Factory . VAR_5 ( factory ; ) class VAR_4 ( to . ) ( METHOD_2 ; ) class VAR_4 ( bind ; ) class VAR_3 ( bind ; ) class VAR_2 ( to . ) class VAR_1 ( bind { ) ( METHOD_1 void protected 
public void METHOD_1 ( ) throws java.lang.Exception { repo = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( new TYPE_4 ( STRING_1 ) ) ) ; servlet = TYPE_5 . create ( repo ) ; } } ; ) repo ( create . TYPE_5 = servlet ; ) ) ) STRING_1 ( TYPE_4 new ( TYPE_3 new ( > TYPE_2 < TYPE_1 new = repo { java.lang.Exception throws ) ( METHOD_1 void public 
private int METHOD_1 ( java.lang.String name , java.lang.String VAR_1 , int VAR_2 ) { return config . METHOD_1 ( STRING_1 , name , VAR_1 , VAR_2 ) ; } } ; ) VAR_2 , VAR_1 , name , STRING_1 ( METHOD_1 . config return { ) VAR_2 int , VAR_1 java.lang.String , name java.lang.String ( METHOD_1 int private 
protected void METHOD_1 ( final java.util.List < TYPE_1 . AccountGroup > result ) { VAR_1 . display ( result ) ; VAR_1 . METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 . VAR_1 ; ) result ( display . VAR_1 { ) result > AccountGroup . TYPE_1 < java.util.List final ( METHOD_1 void protected 
protected < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.String path , TYPE_2 < TYPE_1 > VAR_1 ) throws java.lang.Exception { return new TYPE_3 ( ) . METHOD_2 ( METHOD_3 ( path , STRING_1 ) , VAR_1 ) ; } } ; ) VAR_1 , ) STRING_1 , path ( METHOD_3 ( METHOD_2 . ) ( TYPE_3 new return { java.lang.Exception throws ) VAR_1 > TYPE_1 < TYPE_2 , path java.lang.String ( METHOD_1 TYPE_1 > TYPE_1 < protected 
public void onSuccess ( TYPE_1 result ) { TYPE_2 . METHOD_1 ( getValue ( ) ) ; METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 ; ) ) ( getValue ( METHOD_1 . TYPE_2 { ) result TYPE_1 ( onSuccess void public 
private static native java.lang.String METHOD_1 ( TYPE_1 ctx , java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) ; ; ) VAR_3 int , VAR_2 java.lang.String , VAR_1 java.lang.String , ctx TYPE_1 ( METHOD_1 java.lang.String native static private 
void METHOD_1 ( TYPE_1 event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ; ; com.google.gwtorm.server.OrmException throws ) db com.google.gerrit.reviewdb.server.ReviewDb , event TYPE_1 ( METHOD_1 void 
private static TYPE_1 METHOD_1 ( TYPE_1 i ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 . METHOD_2 ( i , VAR_1 ) ; return VAR_1 ; } } ; VAR_1 return ; ) VAR_1 , i ( METHOD_2 . TYPE_2 ; ) ( TYPE_1 new = VAR_1 TYPE_1 { ) i TYPE_1 ( METHOD_1 TYPE_1 static private 
private void METHOD_1 ( TYPE_1 notes , TYPE_2 VAR_1 ) throws java.lang.Exception { com.google.common.truth.Truth.assertThat ( VAR_2 . METHOD_2 ( METHOD_3 ( notes ) , VAR_1 ) . METHOD_4 ( ) ) . isEmpty ( ) ; } } ; ) ( isEmpty . ) ) ( METHOD_4 . ) VAR_1 , ) notes ( METHOD_3 ( METHOD_2 . VAR_2 ( com.google.common.truth.Truth.assertThat { java.lang.Exception throws ) VAR_1 TYPE_2 , notes TYPE_1 ( METHOD_1 void private 
public void METHOD_1 ( ) { final TYPE_1 b = new TYPE_1 ( ) ; METHOD_2 ( b , b . METHOD_3 ( ) ) ; assertEquals ( STRING_1 , b . METHOD_4 ( ) ) ; } } ; ) ) ( METHOD_4 . b , STRING_1 ( assertEquals ; ) ) ( METHOD_3 . b , b ( METHOD_2 ; ) ( TYPE_1 new = b TYPE_1 final { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( true ) ; } } ; ) true ( METHOD_2 ; ) ( METHOD_1 . super { ) ( METHOD_1 void public 
public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , new TYPE_2 ( ) ) ; } catch ( java.io.IOException e ) { VAR_2 . METHOD_4 ( STRING_1 , e ) ; } } } } ; ) e , STRING_1 ( METHOD_4 . VAR_2 { ) e java.io.IOException ( catch } ; ) ) ( TYPE_2 new , ) ( METHOD_3 . VAR_1 ( METHOD_2 . TYPE_1 { try { ) ( METHOD_1 void public 
TYPE_1 create ( TYPE_2 . ReviewDb VAR_1 , TYPE_3 . NameKey VAR_2 , TYPE_4 . Repository VAR_3 , TYPE_5 . RevCommit VAR_4 , TYPE_2 . PatchSet VAR_5 , boolean VAR_6 ) ; ; ) VAR_6 boolean , VAR_5 PatchSet . TYPE_2 , VAR_4 RevCommit . TYPE_5 , VAR_3 Repository . TYPE_4 , VAR_2 NameKey . TYPE_3 , VAR_1 ReviewDb . TYPE_2 ( create TYPE_1 
private org.eclipse.jgit.revwalk.RevWalk METHOD_1 ( ) throws java.io.IOException { METHOD_2 ( ) ; return VAR_1 ; } } ; VAR_1 return ; ) ( METHOD_2 { java.io.IOException throws ) ( METHOD_1 org.eclipse.jgit.revwalk.RevWalk private 
public void METHOD_1 ( final TYPE_1 event ) { METHOD_2 ( ( - 1 ) ) ; } } ; ) ) 1 - ( ( METHOD_2 { ) event TYPE_1 final ( METHOD_1 void public 
protected TYPE_1 METHOD_1 ( ) throws java.lang.Exception { return new TYPE_2 ( TYPE_3 . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . TYPE_3 ( TYPE_2 new return { java.lang.Exception throws ) ( METHOD_1 TYPE_1 protected 
private TYPE_1 METHOD_1 ( int VAR_1 ) throws java.lang.Exception { TYPE_1 d = new TYPE_1 ( ) ; d . METHOD_1 ( repo ) ; com.google.common.truth.Truth.assertThat ( d . getValue ( ) ) . isEqualTo ( VAR_1 ) ; return d ; } } ; d return ; ) VAR_1 ( isEqualTo . ) ) ( getValue . d ( com.google.common.truth.Truth.assertThat ; ) repo ( METHOD_1 . d ; ) ( TYPE_1 new = d TYPE_1 { java.lang.Exception throws ) VAR_1 int ( METHOD_1 TYPE_1 private 
public TYPE_1 get ( TYPE_2 key ) { TYPE_3 < TYPE_1 > VAR_1 = VAR_2 . get ( new TYPE_3 < TYPE_2 > ( key , VAR_3 ) ) ; return VAR_1 ! = null ? VAR_1 . METHOD_1 ( VAR_4 , VAR_5 ) : null ; } } ; null : ) VAR_5 , VAR_4 ( METHOD_1 . VAR_1 ? null = ! VAR_1 return ; ) ) VAR_3 , key ( > TYPE_2 < TYPE_3 new ( get . VAR_2 = VAR_1 > TYPE_1 < TYPE_3 { ) key TYPE_2 ( get TYPE_1 public 
TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { this . VAR_1 = TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; return this ; } } ; this return ; ) STRING_1 , VAR_1 ( METHOD_2 . TYPE_3 = VAR_1 . this { ) VAR_1 TYPE_2 ( METHOD_1 TYPE_1 
private boolean METHOD_1 ( org.eclipse.jgit.lib.ObjectId VAR_1 ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( VAR_1 ) ; return VAR_2 . METHOD_2 ( db . get ( ) , rw , commit ) ; } } } } ; ) commit , rw , ) ( get . db ( METHOD_2 . VAR_2 return ; ) VAR_1 ( parseCommit . rw = commit org.eclipse.jgit.revwalk.RevCommit { ) ) repo ( org.eclipse.jgit.revwalk.RevWalk new = rw org.eclipse.jgit.revwalk.RevWalk ( try { java.io.IOException throws ) VAR_1 org.eclipse.jgit.lib.ObjectId ( METHOD_1 boolean private 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int VAR_2 , int VAR_3 , java.util.Set < java.lang.String > VAR_4 ) { return TYPE_3 . METHOD_1 ( VAR_1 , VAR_2 , ( VAR_3 + 1 ) , VAR_4 ) ; } } ; ) VAR_4 , ) 1 + VAR_3 ( , VAR_2 , VAR_1 ( METHOD_1 . TYPE_3 return { ) VAR_4 > java.lang.String < java.util.Set , VAR_3 int , VAR_2 int , VAR_1 TYPE_2 ( METHOD_1 TYPE_1 protected 
com.google.gerrit.server.query.change.ChangeData METHOD_1 ( com.google.gerrit.reviewdb.client . PatchSetApproval t ) { return new com.google.gerrit.server.query.change.ChangeData ( t . METHOD_2 ( ) . getParentKey ( ) ) ; } } ; ) ) ( getParentKey . ) ( METHOD_2 . t ( com.google.gerrit.server.query.change.ChangeData new return { ) t PatchSetApproval . com.google.gerrit.reviewdb.client ( METHOD_1 com.google.gerrit.server.query.change.ChangeData 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 ) ) { return METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 ) ) ; } return null ; } } ; null return } ; ) ) VAR_1 ( METHOD_4 , VAR_1 ( METHOD_3 return { ) ) VAR_1 ( METHOD_2 . TYPE_2 ( if { ) VAR_1 java.lang.String ( METHOD_1 TYPE_1 public 
public void METHOD_1 ( boolean b ) { VAR_1 = false ; } } ; false = VAR_1 { ) b boolean ( METHOD_1 void public 
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) < = ( VAR_2 ) ) { VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; VAR_5 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; return false ; } return true ; } } ; true return } ; false return ; ) ) ( METHOD_3 . VAR_4 ( METHOD_2 . VAR_5 ; ) ) ( METHOD_3 . VAR_4 ( METHOD_2 . VAR_3 { ) ) VAR_2 ( = < ) VAR_1 ( ( if { ) ( METHOD_1 boolean private 
public TYPE_1 apply ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 , TYPE_5 , java.lang.Exception { return new TYPE_6 ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( ) ) ; } } ; ) ) ( METHOD_2 . ) ( METHOD_1 . VAR_1 ( TYPE_6 new return { java.lang.Exception , TYPE_5 , TYPE_4 , TYPE_3 throws ) VAR_1 TYPE_2 ( apply TYPE_1 public 
public static void METHOD_1 ( TYPE_1 view , TYPE_2 VAR_1 ) { view . METHOD_2 ( VAR_1 ) ; } } ; ) VAR_1 ( METHOD_2 . view { ) VAR_1 TYPE_2 , view TYPE_1 ( METHOD_1 void static public 
private final native void METHOD_1 ( int VAR_1 ) ; ; ) VAR_1 int ( METHOD_1 void native final private 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( null ) ; org.junit.Assert.assertEquals ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) ) ; } } ; ) ) STRING_1 ( METHOD_3 . VAR_1 , STRING_1 ( org.junit.Assert.assertEquals ; ) null ( METHOD_2 . TYPE_1 = VAR_1 TYPE_1 { ) ( METHOD_1 void public 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { java.lang.String VAR_1 = user . METHOD_2 ( ) ; if ( TYPE_3 . METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } else { return VAR_3 . get ( VAR_1 ) ; } } } } ; ) VAR_1 ( get . VAR_3 return { else } ; VAR_2 return { ) ) VAR_1 ( METHOD_3 . TYPE_3 ( if ; ) ( METHOD_2 . user = VAR_1 java.lang.String { ) user TYPE_2 ( METHOD_1 TYPE_1 public 
public static void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < TYPE_2 > VAR_2 ) { TYPE_3 in = TYPE_3 . METHOD_2 ( ) ; new TYPE_4 ( STRING_1 ) . id ( VAR_1 ) . METHOD_3 ( ) . data ( in ) . put ( VAR_2 ) ; } } ; ) VAR_2 ( put . ) in ( data . ) ( METHOD_3 . ) VAR_1 ( id . ) STRING_1 ( TYPE_4 new ; ) ( METHOD_2 . TYPE_3 = in TYPE_3 { ) VAR_2 > TYPE_2 < TYPE_1 , VAR_1 java.lang.String ( METHOD_1 void static public 
protected TYPE_1 user ( TYPE_2 VAR_1 ) { return VAR_2 . create ( TYPE_3 . of ( db ) , VAR_1 . getId ( ) ) ; } } ; ) ) ( getId . VAR_1 , ) db ( of . TYPE_3 ( create . VAR_2 return { ) VAR_1 TYPE_2 ( user TYPE_1 protected 
private boolean METHOD_1 ( TYPE_1 event ) { return ( ! ( METHOD_2 ( event ) ) ) & & ( ( event . getRefName ( ) . METHOD_3 ( VAR_1 ) ) || ( event . getRefName ( ) . METHOD_3 ( VAR_2 ) ) ) ; } } ; ) ) ) VAR_2 ( METHOD_3 . ) ( getRefName . event ( || ) ) VAR_1 ( METHOD_3 . ) ( getRefName . event ( ( & & ) ) ) event ( METHOD_2 ( ! ( return { ) event TYPE_1 ( METHOD_1 boolean private 
public static java.lang.String METHOD_1 ( java.lang.String type , TYPE_1 VAR_1 , TYPE_2 . Key id ) { return TYPE_3 . METHOD_1 ( type , VAR_1 , id . getParentKey ( ) , id . get ( ) , null , 0 ) ; } } ; ) 0 , null , ) ( get . id , ) ( getParentKey . id , VAR_1 , type ( METHOD_1 . TYPE_3 return { ) id Key . TYPE_2 , VAR_1 TYPE_1 , type java.lang.String ( METHOD_1 java.lang.String static public 
